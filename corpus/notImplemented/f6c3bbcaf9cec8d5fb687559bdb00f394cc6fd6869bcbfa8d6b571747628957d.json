{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/google.home/2.0/openapi.yaml",
			"byteSize": 154078,
			"content": "openapi: 3.0.0\nservers:\n  - url: http://example.com/setup\n    variables: {}\ninfo:\n  contact: {}\n  description: |-\n    # Google Home Local API\n    This is an unofficial documentation of the local API used by the Home app to communicate with GH devices.\n    [GitHub Repo](https://github.com/rithvikvibhu/GHLocalApi)\n\n    [![GitHub stars](https://img.shields.io/github/stars/rithvikvibhu/GHLocalApi)](https://github.com/rithvikvibhu/GHLocalApi/stargazers) [![GitHub license](https://img.shields.io/github/license/rithvikvibhu/GHLocalApi)](https://github.com/rithvikvibhu/GHLocalApi/blob/master/LICENSE.md)\n\n    ## Getting Started\n\n    Requests must be made over HTTPS, port 8443, so the base URL for these endpoints is: `https://\u003cgoogle-home-ip\u003e:8443/setup/`\n\n    Get the IP of Google Home from the Google Home app (Device Settings -\u003e End of the list) or from your router.\n\n    GET requests are simple, in the browser kind.  \n    POST requests need to set the header (when there's a body): `content-type: application/json`\n\n    ## Authentication\n\n    Since June 2019, most requests (with exceptions like `/setup/eureka_info`) need a local authorization token.\n\n    There are 3 kinds of tokens involved here:\n\n    ### Local Authorization Token\n    This token must be sent in all requests in the header `cast-local-authorization-token`. It is short-lived (~1 day) and may change unexpectedly (with a sync, change in homegraph, etc.)\n    ##### Get this token\n    - With access to an android device, [get this token directly by either method](https://gist.github.com/rithvikvibhu/1a0f4937af957ef6a78453e3be482c1f).\n    - Without a device, or to integrate it with a script, use an access token to get the homegraph and extract the token. To get an access token, read the next section. Check the example section for more info.\n\n    ### Access Token\n    This is a standard google oauth2 access token. It is in the form `ya29.***`.\n    This gives access to the Google Home Foyer API. These expire in an hour.\n    Use this to get the homegraph (and then the local authorization token above).\n    ##### Get this token\n    To get this access token, either a Google account username/password or a Google Master Token is needed. More info in the gist.\n    Use the script [from this gist](https://gist.github.com/rithvikvibhu/952f83ea656c6782fbd0f1645059055d).\n\n    ### Master Token\n    This is in the form `aas_et/***` and can be used to request access tokens.\n    ##### Get this token\n    The same [script in the gist](https://gist.github.com/rithvikvibhu/952f83ea656c6782fbd0f1645059055d) that gets the access token can also get the master token. Needs Google account creds.\n\n    ## Example\n\n    Here's the whole flow from just a pair of username/password to using the local API.\n\n    Prerequisites:\n    - [grpcurl](https://github.com/fullstorydev/grpcurl)\n    - [Proto files](https://drive.google.com/drive/folders/1RvnN3y-G23pd2SWHmfV_7sef8QU5GNF4?usp=sharing) (preserve folder structure)\n\n    ### 1. Get an access token with the script\n    - Download get_tokens.py\n    - Fill in username and password\n    ```sh\n    python3 get_tokens.py\n    # Note down the access token printed.\n    ```\n\n    ### 2. Use the access token and get home graph\n    - This prints the json and uses jq to parse and filter out the fields deviceName and localAuthToken\n    - This will give a list of all devices and their local auth tokens\n    ```sh\n    ./grpcurl -H 'authorization: Bearer ya29.a0Af****' \\\n    \t-import-path /path/to/protos \\\n    \t-proto /path/to/protos/google/internal/home/foyer/v1.proto \\\n    \tgooglehomefoyer-pa.googleapis.com:443 \\\n    \tgoogle.internal.home.foyer.v1.StructuresService/GetHomeGraph | jq '.home.devices[] | {deviceName, localAuthToken}'\n    # Note down the local auth token for the device you want.\n    ```\n\n    ### 3. Make the call to the local device using the local auth token\n    ```sh\n    curl -H \"cast-local-authorization-token: LOCAL_AUTH_TOKEN\" --verbose --insecure https://192.168.0.18:8443/setup/bluetooth/status\n    ```\n  title: Google Home\n  version: \"2.0\"\n  x-codegen-settings:\n    AllowSkippingSSLCertVerification: false\n    AndroidHttpClient: ANDROID_OK\n    AndroidUseAppManifest: false\n    AppendContentHeaders: true\n    ApplyCustomizations: []\n    ArraySerialization: Indexed\n    BackoffFactor: 0\n    BodySerialization: 0\n    CSharpHttpClient: UNIREST\n    CollectParameters: false\n    DisableDocs: false\n    DisableLinting: false\n    DoNotSplitWords: []\n    EnableAdditionalModelProperties: false\n    EnableGlobalUserAgent: true\n    EnableHttpCache: false\n    EnableImmutableModels: false\n    EnableLogging: false\n    EnablePHPComposerVersionString: false\n    EncodeTemplateParameters: true\n    ForceKeywordArgsInRuby: false\n    GenerateAdvancedDocs: true\n    GenerateAppveyorConfig: false\n    GenerateAsyncCode: true\n    GenerateCircleConfig: false\n    GenerateEnums: true\n    GenerateExceptions: true\n    GenerateInterfaces: false\n    GenerateJenkinsConfig: false\n    GenerateModels: true\n    GenerateTravisConfig: false\n    IgnoreIfNullJson: false\n    IsLatestVersion: false\n    JavaHttpClient: JAVA_OK\n    JavaUsePropertiesConfig: false\n    LiftParameterDescriptionFromCustomType: false\n    ModelSerializationScheme: Json\n    NodeHttpClient: NODE_REQUEST\n    Nullify404: false\n    ObjCHttpClient: UNIREST\n    PHPHttpClient: UNIREST\n    ParameterArrayFormat: ParamArrayWithIndex\n    PreserveParameterOrder: true\n    ResponseMapping:\n      Type: Simple\n    Retries: 0\n    RetryInterval: 1\n    ReturnCompleteHttpResponse: false\n    RunscopeEnabled: false\n    SecurityProtocols:\n      - Ssl3\n      - Tls\n    SortResources: false\n    StoreTimezoneInformation: false\n    SymbolizeHashKeysInRuby: false\n    ThrowForHttpErrorStatusCodes: true\n    Timeout: 0\n    UnderscoreNumbers: true\n    UsageExampleEndpoint:\n      Description: \"\"\n      EndpointGroupName: \"\"\n      EndpointName: \"\"\n    UseCommonSDKLibrary: false\n    UseConstructorsForConfig: false\n    UseControllerPrefix: true\n    UseEndpointMethodName: false\n    UseEnumPostfix: true\n    UseExceptionPrefix: true\n    UseMethodPrefix: true\n    UseModelPostfix: false\n    UseSingletonPattern: true\n    UserConfigurableRetries: true\n    ValidateRequiredParameters: false\n    iOSGenerateCoreData: false\n    iOSUseAppInfoPlist: false\n  x-image-uri: \"\"\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/rithvikvibhu/GHLocalApi/master/GoogleHome.openapi3.json\n      version: \"3.0\"\n  x-providerName: google.home\n  x-server-configuration:\n    default-environment: production\n    default-server: Server 1\n    environments:\n      - name: production\n        servers:\n          - name: Server 1\n            url: http://example.com/setup\n    parameters: []\n  x-unofficialSpec: true\nsecurity:\n  - cast-local-authorization-token: []\ntags:\n  - description: Endpoints in this folder give information about the device.\n    name: Device Info\n  - description: This folder consists of all endpoints to modify and control the device.\n    name: Device Settings\n  - description: This folder contains all endpoints related to Assistant's tasks like Do Not Disturb, Alarms and Timers, Accessibility and equalizer.\n    name: Assistant\n  - description: This folder contains Bluetooth related endpoints.\n    name: Bluetooth\n  - description: This folder contains Wi-Fi related endpoints.\n    name: Wifi\n  - description: This folder contains a list of static files stored in Home.\n    name: Static Files\npaths:\n  /NOTICE.html.gz:\n    get:\n      deprecated: false\n      description: All licenses of programs used by Home.\n      operationId: LegalNotice\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              example: \u003chtml\u003e\u003c!-- a long page --\u003e\u003c/html\u003e\n              schema:\n                example: \u003chtml\u003e\u003c!-- a long page --\u003e\u003c/html\u003e\n                type: string\n          description: \"\"\n          headers: {}\n      summary: Legal Notice\n      tags:\n        - Static Files\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: \u003chtml\u003e\u003c!-- a long page --\u003e\u003c/html\u003e\n            headers:\n              Access-Control-Allow-Headers: Range\n              Access-Control-Allow-Methods: GET, OPTIONS\n              Content-Encoding: gzip\n              Content-Length: \"131302\"\n              Content-Type: text/html\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: RAW\n            x-matchResponseSchema: true\n          request:\n            method: GET\n            uri: /NOTICE.html.gz\n          x-testDescription: All licenses of programs used by Home.\n          x-testEnabled: false\n          x-testName: Legal Notice\n          x-testShouldPass: true\n  /assistant/a11y_mode:\n    post:\n      deprecated: false\n      description: |-\n        This controls Accessibility sounds. `hotword_enabled` is for 'Play start sound' and `endpoint_enabled` is for 'Play end sound'.  \n        Sending an empty-body POST request returns the current values.  \n        Either of the fields or both can be sent and new values will be saved.\n      operationId: Accessibility\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              endpoint_enabled: false\n              hotword_enabled: false\n            schema:\n              $ref: \"#/components/schemas/AccessibilityRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                endpoint_enabled: false\n                hotword_enabled: false\n              schema:\n                $ref: \"#/components/schemas/Getcurrentvalues\"\n          description: \"\"\n          headers: {}\n      summary: Accessibility\n      tags:\n        - Assistant\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: '{\"endpoint_enabled\":false,\"hotword_enabled\":false}'\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"50\"\n              Content-Type: application/json\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            body: \"{\\r\n\n              \\  \\\"hotword_enabled\\\": false,\\r\n\n              \\  \\\"endpoint_enabled\\\": false\\r\n\n              }\"\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /assistant/a11y_mode\n          x-testDescription: |-\n            This controls Accessibility sounds. `hotword_enabled` is for 'Play start sound' and `endpoint_enabled` is for 'Play end sound'.  \n            Sending an empty-body POST request returns the current values.  \n            Either of the fields or both can be sent and new values will be saved.\n          x-testEnabled: true\n          x-testName: Accessibility\n          x-testShouldPass: true\n  /assistant/alarms:\n    get:\n      deprecated: false\n      description: |-\n        This gives a list of all active alarms and timers.\n\n        Both alarms and timers have `id`s which can be used to delete them. (There is no known way of creating/deleting yet). The value of `status` have different meanings for alarms and timers (given below).\n\n        Alarms have `date_pattern` and `time_pattern` with day, month, year, hour, minute, second. `fire_time` is the same in unix time (milliseconds, not seconds).  \n        `status` is 1 for set up and 2 for ringing.\n\n        Timers have `original_duration` is the original duration.  \n        `status` is 1 for set up and 3 for ringing.\n      operationId: GetAlarmsandTimers\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                alarm:\n                  - date_pattern:\n                      day: 15\n                      month: 1\n                      year: 2018\n                    fire_time: 1515995400000\n                    id: alarm/xxx\n                    status: 1\n                    time_pattern:\n                      hour: 6\n                      minute: 50\n                      second: 0\n                timer:\n                  - fire_time: 1516176765589\n                    id: timer/xxx\n                    original_duration: 20000\n                    status: 1\n              schema:\n                $ref: \"#/components/schemas/Example18\"\n          description: \"\"\n          headers: {}\n      summary: Get Alarms and Timers\n      tags:\n        - Assistant\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: \"{\\r\n\n              \\  \\\"alarm\\\": [\\r\n\n              \\    {\\r\n\n              \\      \\\"date_pattern\\\": {\\r\n\n              \\        \\\"day\\\": 15,\\r\n\n              \\        \\\"month\\\": 1,\\r\n\n              \\        \\\"year\\\": 2018\\r\n\n              \\      },\\r\n\n              \\      \\\"time_pattern\\\": {\\r\n\n              \\        \\\"hour\\\": 6,\\r\n\n              \\        \\\"minute\\\": 50,\\r\n\n              \\        \\\"second\\\": 0\\r\n\n              \\      },\\r\n\n              \\      \\\"fire_time\\\": 1515995400000.0,\\r\n\n              \\      \\\"id\\\": \\\"alarm/xxx\\\",\\r\n\n              \\      \\\"status\\\": 1\\r\n\n              \\    }\\r\n\n              \\  ],\\r\n\n              \\  \\\"timer\\\": [\\r\n\n              \\    {\\r\n\n              \\      \\\"fire_time\\\": 1516176765589,\\r\n\n              \\      \\\"id\\\": \\\"timer/xxx\\\",\\r\n\n              \\      \\\"original_duration\\\": 20000,\\r\n\n              \\      \\\"status\\\": 1\\r\n\n              \\    }\\r\n\n              \\  ]\\r\n\n              }\"\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"23\"\n              Content-Type: application/json\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            method: GET\n            uri: /assistant/alarms\n          x-testDescription: |-\n            This gives a list of all active alarms and timers.\n\n            Both alarms and timers have `id`s which can be used to delete them. (There is no known way of creating/deleting yet). The value of `status` have different meanings for alarms and timers (given below).\n\n            Alarms have `date_pattern` and `time_pattern` with day, month, year, hour, minute, second. `fire_time` is the same in unix time (milliseconds, not seconds).  \n            `status` is 1 for set up and 2 for ringing.\n\n            Timers have `original_duration` is the original duration.  \n            `status` is 1 for set up and 3 for ringing.\n          x-testEnabled: true\n          x-testName: Get Alarms and Timers\n          x-testShouldPass: true\n  /assistant/alarms/delete:\n    post:\n      deprecated: false\n      description: |-\n        This deletes alarms and timers by their id.\n\n        `ids` is a list of ids to be deleted. Sending invalid id still returns a 200 OK. The `/` in the ids have to be escaped like `\\/`.\n      operationId: DeleteAlarmsandTimers\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              ids:\n                - timer/xxx\n                - alarm/xxx\n            schema:\n              $ref: \"#/components/schemas/DeleteAlarmsandTimersRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                success: true\n              schema:\n                $ref: \"#/components/schemas/Example19\"\n          description: \"\"\n          headers: {}\n      summary: Delete Alarms and Timers\n      tags:\n        - Assistant\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: '{\"success\":true}'\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"16\"\n              Content-Type: application/json\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            body: \"{\\r\n\n              \\  \\\"ids\\\": [\\r\n\n              \\    \\\"timer/xxx\\\",\\r\n\n              \\    \\\"alarm/xxx\\\"\\r\n\n              \\  ]\\r\n\n              }\"\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /assistant/alarms/delete\n          x-testDescription: |-\n            This deletes alarms and timers by their id.\n\n            `ids` is a list of ids to be deleted. Sending invalid id still returns a 200 OK. The `/` in the ids have to be escaped like `\\/`.\n          x-testEnabled: true\n          x-testName: Delete Alarms and Timers\n          x-testShouldPass: true\n  /assistant/alarms/volume:\n    post:\n      deprecated: false\n      description: |-\n        This gets and sets alarms and timers volume.  \n        **Note:** This is not the same as normal volume.\n\n        Volume is a float number in [0, 1] where 0 is minimum and 1 is maximum.  \n        Sending an empty body gets the volume. Sending `volume` sets the volume.\n      operationId: AlarmVolume\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              volume: 1\n            schema:\n              $ref: \"#/components/schemas/AlarmVolumeRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                volume: 1\n              schema:\n                $ref: \"#/components/schemas/Getvolume\"\n          description: \"\"\n          headers: {}\n      summary: Alarm Volume\n      tags:\n        - Assistant\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: '{\"volume\":1.0}'\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"14\"\n              Content-Type: application/json\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            body: \"{\\r\\n  \\\"volume\\\": 1\\r\\n}\"\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /assistant/alarms/volume\n          x-testDescription: |-\n            This gets and sets alarms and timers volume.  \n            **Note:** This is not the same as normal volume.\n\n            Volume is a float number in [0, 1] where 0 is minimum and 1 is maximum.  \n            Sending an empty body gets the volume. Sending `volume` sets the volume.\n          x-testEnabled: true\n          x-testName: Alarm Volume\n          x-testShouldPass: true\n  /assistant/check_ready_status:\n    post:\n      deprecated: false\n      description: |-\n        **Update:** This seems to have changed now and is no longer possible. The error is also new.\n\n        Setting `play_ready_message` to true plays a welcome message on the device saying \"Hi, I'm your Google Assistant. I'm here to help. To learn a few things you can do, continue in the Google Home app.\"\n      operationId: CheckReadyStatus\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              play_ready_message: true\n              user_id: xxxxx\n            schema:\n              $ref: \"#/components/schemas/CheckReadyStatusRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                can_enroll: true\n                enrollment_state: 0\n                error_code: 0\n                ready: false\n                retryable: true\n              schema:\n                $ref: \"#/components/schemas/Example13\"\n          description: \"\"\n          headers: {}\n      summary: Check Ready Status\n      tags:\n        - Device Info\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: \"{\\r\n\n              \\  \\\"can_enroll\\\": true,\\r\n\n              \\  \\\"enrollment_state\\\": 0,\\r\n\n              \\  \\\"error_code\\\": 0,\\r\n\n              \\  \\\"ready\\\": false,\\r\n\n              \\  \\\"retryable\\\": true\\r\n\n              }\"\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"86\"\n              Content-Type: application/json\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            body: \"{\\r\n\n              \\  \\\"play_ready_message\\\": true,\\r\n\n              \\  \\\"user_id\\\": \\\"xxxxx\\\"\\r\n\n              }\"\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /assistant/check_ready_status\n          x-testDescription: |-\n            **Update:** This seems to have changed now and is no longer possible. The error is also new.\n\n            Setting `play_ready_message` to true plays a welcome message on the device saying \"Hi, I'm your Google Assistant. I'm here to help. To learn a few things you can do, continue in the Google Home app.\"\n          x-testEnabled: true\n          x-testName: Check Ready Status\n          x-testShouldPass: true\n  /assistant/notifications:\n    post:\n      deprecated: false\n      description: This is for the Do Not Disturb option. Sending an empty-body POST returns the current value. Sending a new value changes it.\n      operationId: DoNotDisturb\n      parameters:\n        - in: header\n          name: Content-Type\n          required: true\n          schema:\n            example: application/json\n            type: string\n          style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                notifications_enabled: true\n              schema:\n                $ref: \"#/components/schemas/Getcurrentstate\"\n          description: \"\"\n          headers: {}\n      summary: Do Not Disturb\n      tags:\n        - Assistant\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: '{\"notifications_enabled\":true}'\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"30\"\n              Content-Type: application/json\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /assistant/notifications\n          x-testDescription: This is for the Do Not Disturb option. Sending an empty-body POST returns the current value. Sending a new value changes it.\n          x-testEnabled: true\n          x-testName: Do Not Disturb\n          x-testShouldPass: true\n  /assistant/set_night_mode_params:\n    post:\n      deprecated: false\n      description: |-\n        This sets night mode options.  \n        To view currently set values, use /setup/eureka_info.  \n        If `enabled` is set to false, night mode is disabled and the other values do not matter.  \n        `led_brightness` and `volume` refer to the maximum LED Brightness and Volume that is set during night mode.  \n        `demo_to_user` is always set to `true` so change in values will be visible in realtime (like brightness).  \n        `windows`: A combination of `length_hours` and `start_hour` is used to define start and end times for night mode. In this example, night mode starts at 10 PM (22) and ends at 6 AM (8 hours later). `windows.days` is an array of days of week when night mode will be enabled. Example: 0-\u003eSunday, 1-\u003e Monday, ..., 6-\u003eSaturday.\n      operationId: NightModesettings\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              demo_to_user: true\n              do_not_disturb: true\n              enabled: false\n              led_brightness: 0.44999998807907104\n              volume: 0.46000000834465027\n              windows:\n                - days:\n                    - 0\n                    - 1\n                    - 2\n                    - 3\n                    - 4\n                    - 5\n                    - 6\n                  length_hours: 8\n                  start_hour: 22\n            schema:\n              $ref: \"#/components/schemas/NightModesettingsRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                do_not_disturb: true\n                enabled: false\n                led_brightness: 0.44999998807907104\n                volume: 0.46000000834465027\n                windows:\n                  - days:\n                      - 0\n                      - 1\n                      - 2\n                      - 3\n                      - 4\n                      - 5\n                      - 6\n                    length_hours: 8\n                    start_hour: 22\n              schema:\n                $ref: \"#/components/schemas/Example17\"\n          description: \"\"\n          headers: {}\n      summary: Night Mode settings\n      tags:\n        - Device Settings\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: '{\"do_not_disturb\":true,\"enabled\":false,\"led_brightness\":0.44999998807907104,\"volume\":0.46000000834465027,\"windows\":[{\"days\":[0,1,2,3,4,5,6],\"length_hours\":8.0,\"start_hour\":22.0}]}'\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"179\"\n              Content-Type: application/json\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            body: \"{\\r\n\n              \\  \\\"enabled\\\": false,\\r\n\n              \\  \\\"do_not_disturb\\\": true,\\r\n\n              \\  \\\"led_brightness\\\": 0.44999998807907104,\\r\n\n              \\  \\\"volume\\\": 0.46000000834465027,\\r\n\n              \\  \\\"demo_to_user\\\": true,\\r\n\n              \\  \\\"windows\\\": [\\r\n\n              \\    {\\r\n\n              \\      \\\"length_hours\\\": 8,\\r\n\n              \\      \\\"days\\\": [\\r\n\n              \\        0,\\r\n\n              \\        1,\\r\n\n              \\        2,\\r\n\n              \\        3,\\r\n\n              \\        4,\\r\n\n              \\        5,\\r\n\n              \\        6\\r\n\n              \\      ],\\r\n\n              \\      \\\"start_hour\\\": 22\\r\n\n              \\    }\\r\n\n              \\  ]\\r\n\n              }\"\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /assistant/set_night_mode_params\n          x-testDescription: |-\n            This sets night mode options.  \n            To view currently set values, use /setup/eureka_info.  \n            If `enabled` is set to false, night mode is disabled and the other values do not matter.  \n            `led_brightness` and `volume` refer to the maximum LED Brightness and Volume that is set during night mode.  \n            `demo_to_user` is always set to `true` so change in values will be visible in realtime (like brightness).  \n            `windows`: A combination of `length_hours` and `start_hour` is used to define start and end times for night mode. In this example, night mode starts at 10 PM (22) and ends at 6 AM (8 hours later). `windows.days` is an array of days of week when night mode will be enabled. Example: 0-\u003eSunday, 1-\u003e Monday, ..., 6-\u003eSaturday.\n          x-testEnabled: true\n          x-testName: Night Mode settings\n          x-testShouldPass: true\n  /bluetooth/bond:\n    post:\n      deprecated: false\n      description: |-\n        *See note for Bluetooth under `/setup/bluetooth/status`*\n\n        **For both parts**\n\n        This is to forget paired devices by mac address. Works for both kinds of devices (Part 1 and Part 2).\n      operationId: Forgetpaireddevice\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              bond: false\n              mac_address: xx:xx:xx:xx:xx:xx\n            schema:\n              $ref: \"#/components/schemas/ForgetpaireddeviceRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                type: object\n                x-is-dynamic: true\n          description: \"\"\n          headers: {}\n      summary: Forget paired device\n      tags:\n        - Bluetooth\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            headers: {}\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: NONE\n            x-matchResponseSchema: true\n          request:\n            body: \"{\\r\n\n              \\  \\\"mac_address\\\": \\\"xx:xx:xx:xx:xx:xx\\\",\\r\n\n              \\  \\\"bond\\\": false\\r\n\n              }\"\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /bluetooth/bond\n          x-testDescription: |-\n            *See note for Bluetooth under `/setup/bluetooth/status`*\n\n            **For both parts**\n\n            This is to forget paired devices by mac address. Works for both kinds of devices (Part 1 and Part 2).\n          x-testEnabled: true\n          x-testName: Forget paired device\n          x-testShouldPass: true\n  /bluetooth/connect:\n    post:\n      deprecated: false\n      description: |-\n        *See note for Bluetooth under `/setup/bluetooth/status`*\n\n        **For Part 2 only**\n\n        This pairs with other bluetooth speakers by mac address.\n      operationId: PairwithSpeaker\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              connect: true\n              mac_address: 54:13:79:49:19:22\n              profile: 2\n            schema:\n              $ref: \"#/components/schemas/PairwithSpeakerRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                type: object\n                x-is-dynamic: true\n          description: \"\"\n          headers: {}\n      summary: Pair with Speaker\n      tags:\n        - Bluetooth\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"0\"\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: NONE\n            x-matchResponseSchema: true\n          request:\n            body: \"{\\r\n\n              \\  \\\"mac_address\\\": \\\"54:13:79:49:19:22\\\",\\r\n\n              \\  \\\"connect\\\": true,\\r\n\n              \\  \\\"profile\\\": 2\\r\n\n              }\"\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /bluetooth/connect\n          x-testDescription: |-\n            *See note for Bluetooth under `/setup/bluetooth/status`*\n\n            **For Part 2 only**\n\n            This pairs with other bluetooth speakers by mac address.\n          x-testEnabled: true\n          x-testName: Pair with Speaker\n          x-testShouldPass: true\n  /bluetooth/discovery:\n    post:\n      deprecated: false\n      description: |-\n        *See note for Bluetooth under `/setup/bluetooth/status`*\n\n        **For Part 1 only**\n\n        This enables/disables Home's bluetooth discovery and other devices can pair with Home (where Home acts as a speaker).\n      operationId: ChangeDiscoverability\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              enable_discovery: true\n            schema:\n              $ref: \"#/components/schemas/ChangeDiscoverabilityRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                type: object\n                x-is-dynamic: true\n          description: \"\"\n          headers: {}\n      summary: Change Discoverability\n      tags:\n        - Bluetooth\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            headers: {}\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: NONE\n            x-matchResponseSchema: true\n          request:\n            body: \"{\\r\n\n              \\  \\\"enable_discovery\\\": true\\r\n\n              }\"\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /bluetooth/discovery\n          x-testDescription: |-\n            *See note for Bluetooth under `/setup/bluetooth/status`*\n\n            **For Part 1 only**\n\n            This enables/disables Home's bluetooth discovery and other devices can pair with Home (where Home acts as a speaker).\n          x-testEnabled: true\n          x-testName: Change Discoverability\n          x-testShouldPass: true\n  /bluetooth/get_bonded:\n    get:\n      deprecated: false\n      description: |-\n        *See note for Bluetooth under `/setup/bluetooth/status`*\n\n        **For both parts**\n\n        This gives a list of all paired or 'bonded' devices. The response field names are self-descriptive.\n      operationId: GetPairedDevices\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                - bond_date: 1503212407260.55\n                  device_class: 5898764\n                  device_type: 1\n                  last_connect_date: 1514807829482.111\n                  mac_address: xx:xx:xx:xx:xx:xx\n                  name: Device Name\n                  rssi: -255\n                  service_uuids:\n                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Example111\"\n                type: array\n          description: \"\"\n          headers: {}\n      summary: Get Paired Devices\n      tags:\n        - Bluetooth\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: \"[\\r\n\n              \\  {\\r\n\n              \\    \\\"bond_date\\\": 1503212407260.55,\\r\n\n              \\    \\\"device_class\\\": 5898764,\\r\n\n              \\    \\\"device_type\\\": 1,\\r\n\n              \\    \\\"last_connect_date\\\": 1514807829482.1111,\\r\n\n              \\    \\\"mac_address\\\": \\\"xx:xx:xx:xx:xx:xx\\\",\\r\n\n              \\    \\\"name\\\": \\\"Device Name\\\",\\r\n\n              \\    \\\"rssi\\\": -255,\\r\n\n              \\    \\\"service_uuids\\\": [\\r\n\n              \\      \\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\",\\r\n\n              \\      \\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\"\\r\n\n              \\    ]\\r\n\n              \\  }\\r\n\n              ]\"\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"2\"\n              Content-Type: application/json\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            method: GET\n            uri: /bluetooth/get_bonded\n          x-testDescription: |-\n            *See note for Bluetooth under `/setup/bluetooth/status`*\n\n            **For both parts**\n\n            This gives a list of all paired or 'bonded' devices. The response field names are self-descriptive.\n          x-testEnabled: true\n          x-testName: Get Paired Devices\n          x-testShouldPass: true\n  /bluetooth/scan:\n    post:\n      deprecated: false\n      description: |-\n        *See note for Bluetooth under `/setup/bluetooth/status`*\n\n        **For Part 2 only**\n\n        This initiates scan for other bluetooth speakers/devices. Scan results will be updated continuously for `timeout` seconds.  \n        To get the scan results, see /setup/bluetooth/scan_results.\n      operationId: Scanfordevices\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              clear_results: true\n              enable: true\n              timeout: 60\n            schema:\n              $ref: \"#/components/schemas/ScanfordevicesRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                type: object\n                x-is-dynamic: true\n          description: \"\"\n          headers: {}\n      summary: Scan for devices\n      tags:\n        - Bluetooth\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"0\"\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: NONE\n            x-matchResponseSchema: true\n          request:\n            body: \"{\\r\n\n              \\  \\\"enable\\\": true,\\r\n\n              \\  \\\"clear_results\\\": true,\\r\n\n              \\  \\\"timeout\\\": 60\\r\n\n              }\"\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /bluetooth/scan\n          x-testDescription: |-\n            *See note for Bluetooth under `/setup/bluetooth/status`*\n\n            **For Part 2 only**\n\n            This initiates scan for other bluetooth speakers/devices. Scan results will be updated continuously for `timeout` seconds.  \n            To get the scan results, see /setup/bluetooth/scan_results.\n          x-testEnabled: true\n          x-testName: Scan for devices\n          x-testShouldPass: true\n  /bluetooth/scan_results:\n    get:\n      deprecated: false\n      description: |-\n        *See note for Bluetooth under `/setup/bluetooth/status`*\n\n        **For Part 2 only**\n\n        This returns a list of all nearby bluetooth devices. While the Home app only shows speakers, this list contains all devices including TVs, mobiles, etc.\n\n        `rssi` is signal strength, `name` is name, `mac_address` is mac address.  \n        `device_class` and `device_type` are bluetooth codes.  \n\n        The Home app only lists those devices with `expected_profiles` \u003e 0. Basically, the device should function as a speaker.\n      operationId: GetScanResults\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                - device_class: 525372\n                  device_type: 3\n                  expected_profiles: 0\n                  mac_address: xx:xx:xx:xx:xx:xx\n                  name: KD-49X8200E\n                  rssi: -90\n                - device_class: 5898764\n                  device_type: 1\n                  expected_profiles: 0\n                  mac_address: xx:xx:xx:xx:xx:xx\n                  name: vivo 1714\n                  rssi: -96\n                - device_class: 2491396\n                  device_type: 1\n                  expected_profiles: 1\n                  mac_address: xx:xx:xx:xx:xx:xx\n                  name: Bluetooth Speaker\n                  rssi: -93\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Example112\"\n                type: array\n          description: \"\"\n          headers: {}\n      summary: Get Scan Results\n      tags:\n        - Bluetooth\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: \"[\\r\n\n              \\  {\\r\n\n              \\    \\\"device_class\\\": 525372,\\r\n\n              \\    \\\"device_type\\\": 3,\\r\n\n              \\    \\\"expected_profiles\\\": 0,\\r\n\n              \\    \\\"mac_address\\\": \\\"xx:xx:xx:xx:xx:xx\\\",\\r\n\n              \\    \\\"name\\\": \\\"KD-49X8200E\\\",\\r\n\n              \\    \\\"rssi\\\": -90\\r\n\n              \\  },\\r\n\n              \\  {\\r\n\n              \\    \\\"device_class\\\": 5898764,\\r\n\n              \\    \\\"device_type\\\": 1,\\r\n\n              \\    \\\"expected_profiles\\\": 0,\\r\n\n              \\    \\\"mac_address\\\": \\\"xx:xx:xx:xx:xx:xx\\\",\\r\n\n              \\    \\\"name\\\": \\\"vivo 1714\\\",\\r\n\n              \\    \\\"rssi\\\": -96\\r\n\n              \\  },\\r\n\n              \\  {\\r\n\n              \\    \\\"device_class\\\": 2491396,\\r\n\n              \\    \\\"device_type\\\": 1,\\r\n\n              \\    \\\"expected_profiles\\\": 1,\\r\n\n              \\    \\\"mac_address\\\": \\\"xx:xx:xx:xx:xx:xx\\\",\\r\n\n              \\    \\\"name\\\": \\\"Bluetooth Speaker\\\",\\r\n\n              \\    \\\"rssi\\\": -93\\r\n\n              \\  }\\r\n\n              ]\"\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"256\"\n              Content-Type: application/json\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            method: GET\n            uri: /bluetooth/scan_results\n          x-testDescription: |-\n            *See note for Bluetooth under `/setup/bluetooth/status`*\n\n            **For Part 2 only**\n\n            This returns a list of all nearby bluetooth devices. While the Home app only shows speakers, this list contains all devices including TVs, mobiles, etc.\n\n            `rssi` is signal strength, `name` is name, `mac_address` is mac address.  \n            `device_class` and `device_type` are bluetooth codes.  \n\n            The Home app only lists those devices with `expected_profiles` \u003e 0. Basically, the device should function as a speaker.\n          x-testEnabled: true\n          x-testName: Get Scan Results\n          x-testShouldPass: true\n  /bluetooth/status:\n    get:\n      deprecated: false\n      description: |-\n        \u003e **There are 2 parts of Bluetooth.**\n        \u003e\n        \u003e *Part 1*: Devices like phones connect to Home and play audio through Home.  \n        \u003e For this, /setup/bluetooth/discovery is used to make Home discoverable. Then devices can connect to it as if Home is just another bluetooth speaker.\n        \u003e\n        \u003e *Part 2*: Bluetooth speakers connect to Home and Home plays audio through the speakers.\n        \u003e For this, /setup/bluetooth/scan and /setup/bluetooth/scan_results are used to connect to other speakers.\n        \u003e\n        \u003e The other endpoints are common for both parts.\n\n\n        **For both parts**\n\n        This gives the status of all bluetooth things.\n        - Not sure what `audio_mode` is.\n        - `discovery_enabled` states whether Home is discoverable. (**Part 1**)\n        - `connecting_devices` is a list of all media sources (like phones) connected to Home. (**Part 1**)\n        - `scanning_enabled` states whether Home scanning for other bluetooth speakers/devices. (**Part 2**)\n        - `connected_devices` is a list of all speakers connected to Home. (**Part 2**)\n      operationId: Status\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                audio_mode: 0\n                connected_devices:\n                  - device:\n                      bond_date: 1529248165656.613\n                      device_class: 2491396\n                      device_type: 1\n                      last_connect_date: 0\n                      mac_address: xx:xx:xx:xx:xx:xx\n                      name: PHILIPS BT64\n                      rssi: -255\n                      service_uuids:\n                        - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                        - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                        - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                        - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                        - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                        - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                    enabled_profiles: 2\n                connecting_devices: []\n                discovery_enabled: false\n                remote_sink:\n                  bond_date: 1529248165656.613\n                  device_class: 2491396\n                  device_type: 1\n                  last_connect_date: 0\n                  mac_address: xx:xx:xx:xx:xx:xx\n                  name: PHILIPS BT64\n                  rssi: -255\n                  service_uuids:\n                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                scanning_enabled: false\n              schema:\n                $ref: \"#/components/schemas/Example110\"\n          description: \"\"\n          headers: {}\n      summary: Status\n      tags:\n        - Bluetooth\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: \"{\\r\n\n              \\  \\\"audio_mode\\\": 0,\\r\n\n              \\  \\\"connecting_devices\\\": [],\\r\n\n              \\  \\\"connected_devices\\\": [\\r\n\n              \\    {\\r\n\n              \\      \\\"device\\\": {\\r\n\n              \\        \\\"bond_date\\\": 1529248165656.613,\\r\n\n              \\        \\\"device_class\\\": 2491396,\\r\n\n              \\        \\\"device_type\\\": 1,\\r\n\n              \\        \\\"last_connect_date\\\": 0,\\r\n\n              \\        \\\"mac_address\\\": \\\"xx:xx:xx:xx:xx:xx\\\",\\r\n\n              \\        \\\"name\\\": \\\"PHILIPS BT64\\\",\\r\n\n              \\        \\\"rssi\\\": -255,\\r\n\n              \\        \\\"service_uuids\\\": [\\r\n\n              \\          \\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\",\\r\n\n              \\          \\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\",\\r\n\n              \\          \\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\",\\r\n\n              \\          \\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\",\\r\n\n              \\          \\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\",\\r\n\n              \\          \\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\"\\r\n\n              \\        ]\\r\n\n              \\      },\\r\n\n              \\      \\\"enabled_profiles\\\": 2\\r\n\n              \\    }\\r\n\n              \\  ],\\r\n\n              \\  \\\"remote_sink\\\": {\\r\n\n              \\    \\\"bond_date\\\": 1529248165656.613,\\r\n\n              \\    \\\"device_class\\\": 2491396,\\r\n\n              \\    \\\"device_type\\\": 1,\\r\n\n              \\    \\\"last_connect_date\\\": 0,\\r\n\n              \\    \\\"mac_address\\\": \\\"xx:xx:xx:xx:xx:xx\\\",\\r\n\n              \\    \\\"name\\\": \\\"PHILIPS BT64\\\",\\r\n\n              \\    \\\"rssi\\\": -255,\\r\n\n              \\    \\\"service_uuids\\\": [\\r\n\n              \\      \\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\",\\r\n\n              \\      \\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\",\\r\n\n              \\      \\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\",\\r\n\n              \\      \\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\",\\r\n\n              \\      \\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\",\\r\n\n              \\      \\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\"\\r\n\n              \\    ]\\r\n\n              \\  },\\r\n\n              \\  \\\"discovery_enabled\\\": false,\\r\n\n              \\  \\\"scanning_enabled\\\": false\\r\n\n              }\"\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"114\"\n              Content-Type: application/json\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            method: GET\n            uri: /bluetooth/status\n          x-testDescription: |-\n            \u003e **There are 2 parts of Bluetooth.**\n            \u003e\n            \u003e *Part 1*: Devices like phones connect to Home and play audio through Home.  \n            \u003e For this, /setup/bluetooth/discovery is used to make Home discoverable. Then devices can connect to it as if Home is just another bluetooth speaker.\n            \u003e\n            \u003e *Part 2*: Bluetooth speakers connect to Home and Home plays audio through the speakers.\n            \u003e For this, /setup/bluetooth/scan and /setup/bluetooth/scan_results are used to connect to other speakers.\n            \u003e\n            \u003e The other endpoints are common for both parts.\n\n\n            **For both parts**\n\n            This gives the status of all bluetooth things.\n            - Not sure what `audio_mode` is.\n            - `discovery_enabled` states whether Home is discoverable. (**Part 1**)\n            - `connecting_devices` is a list of all media sources (like phones) connected to Home. (**Part 1**)\n            - `scanning_enabled` states whether Home scanning for other bluetooth speakers/devices. (**Part 2**)\n            - `connected_devices` is a list of all speakers connected to Home. (**Part 2**)\n          x-testEnabled: true\n          x-testName: Status\n          x-testShouldPass: true\n  /configured_networks:\n    get:\n      deprecated: false\n      description: |-\n        This gets a list of all saved Wi-Fi networks.\n\n        Each network has `ssid`, `wpa_auth`, `wpa_cipher` and `wpa_id`.  \n        `wpa_id` is an incrementing number used to identify a saved network.  \n        #TODO: Add values for `wpa_auth` and `wpa_cipher`.\n      operationId: GetSavedNetworks\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                - ssid: Wifi name\n                  wpa_auth: 7\n                  wpa_cipher: 4\n                  wpa_id: 0\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Example113\"\n                type: array\n          description: \"\"\n          headers: {}\n      summary: Get Saved Networks\n      tags:\n        - Wifi\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: \"[\\r\n\n              \\  {\\r\n\n              \\    \\\"ssid\\\": \\\"Wifi name\\\",\\r\n\n              \\    \\\"wpa_auth\\\": 7,\\r\n\n              \\    \\\"wpa_cipher\\\": 4,\\r\n\n              \\    \\\"wpa_id\\\": 0\\r\n\n              \\  }\\r\n\n              ]\"\n            headers: {}\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            method: GET\n            uri: /configured_networks\n          x-testDescription: |-\n            This gets a list of all saved Wi-Fi networks.\n\n            Each network has `ssid`, `wpa_auth`, `wpa_cipher` and `wpa_id`.  \n            `wpa_id` is an incrementing number used to identify a saved network.  \n            #TODO: Add values for `wpa_auth` and `wpa_cipher`.\n          x-testEnabled: true\n          x-testName: Get Saved Networks\n          x-testShouldPass: true\n  /connect_wifi:\n    post:\n      deprecated: false\n      description: \"**Note:** Not sure how the password is encrypted. Might be using the public certificate from /setup/eureka_info. So this cannot be used as of now. If someone figures it out, please [create a new issue here](https://github.com/rithvikvibhu/GHLocalApi/issues/new).\"\n      operationId: ConnecttoWi-FiNetwork\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              bssid: 5c:0a:xx:xx:xx:xx\n              enc_passwd: xxxxxfPY=\n              signal_level: -42\n              ssid: myotherssid\n              wpa_auth: 7\n              wpa_cipher: 4\n            schema:\n              $ref: \"#/components/schemas/ConnecttoWi-FiNetworkRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n      summary: Connect to Wi-Fi Network\n      tags:\n        - Wifi\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            headers: {}\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: NONE\n            x-matchResponseSchema: true\n          request:\n            body: \"{\\r\n\n              \\  \\\"bssid\\\": \\\"5c:0a:xx:xx:xx:xx\\\",\\r\n\n              \\  \\\"signal_level\\\": -42,\\r\n\n              \\  \\\"ssid\\\": \\\"myotherssid\\\",\\r\n\n              \\  \\\"wpa_auth\\\": 7,\\r\n\n              \\  \\\"wpa_cipher\\\": 4,\\r\n\n              \\  \\\"enc_passwd\\\": \\\"xxxxxfPY=\\\"\\r\n\n              }\"\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /connect_wifi\n          x-testDescription: \"**Note:** Not sure how the password is encrypted. Might be using the public certificate from /setup/eureka_info. So this cannot be used as of now. If someone figures it out, please [create a new issue here](https://github.com/rithvikvibhu/GHLocalApi/issues/new).\"\n          x-testEnabled: true\n          x-testName: Connect to Wi-Fi Network\n          x-testShouldPass: true\n  /eureka_info:\n    get:\n      deprecated: false\n      description: |-\n        This gives most of the device info. The GET parameter `param` is a comma separated list of json keys to fetch. Currently, these params are known: `version,audio,name,build_info,detail,device_info,net,wifi,setup,settings,opt_in,opencast,multizone,proxy,night_mode_params,user_eq,room_equalizer,sign,aogh,ultrasound,mesh`\n\n        Nested items can also be filtered using the dot notation. Example: `audio.digital`\n\n        The `options` GET parameter is always set to `detail` or `detail,sign`. `sign` signs the `nonce` and returns some value.\n\n        The `nonce` GET parameter is an integer value signed with needed (see `option` parameter above).\n      operationId: EurekaInfo\n      parameters:\n        - explode: true\n          in: query\n          name: params\n          required: true\n          schema:\n            example: version,audio,name,build_info,detail,device_info,net,wifi,setup,settings,opt_in,opencast,multizone,proxy,night_mode_params,user_eq,room_equalizer,sign,aogh,ultrasound,mesh\n            type: string\n          style: form\n        - explode: true\n          in: query\n          name: options\n          required: true\n          schema:\n            example: detail,sign\n            type: string\n          style: form\n        - explode: true\n          in: query\n          name: nonce\n          required: true\n          schema:\n            example: 1234512345\n            format: int32\n            type: integer\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                aogh:\n                  aogh_api_version: \"2\"\n                audio:\n                  digital: false\n                build_info:\n                  build_type: 2\n                  cast_build_revision: 1.46.195690\n                  cast_control_version: 1\n                  preview_channel_state: 4\n                  release_track: preview-joining-stable-channel\n                  system_build_number: \"195690\"\n                detail:\n                  icon_list:\n                    - depth: 32\n                      height: 55\n                      mimetype: image/png\n                      url: /setup/icon.png\n                      width: 98\n                  locale:\n                    display_string: English (United States)\n                  timezone:\n                    display_string: India Standard Time (Kolkata)\n                    offset: 330\n                device_info:\n                  4k_blocked: 0\n                  capabilities:\n                    aogh_supported: true\n                    assistant_supported: true\n                    audio_hdr_supported: false\n                    audio_surround_mode_supported: false\n                    ble_supported: true\n                    bluetooth_audio_sink_supported: true\n                    bluetooth_audio_source_supported: true\n                    bluetooth_supported: true\n                    cloudcast_supported: true\n                    content_filters_supported: true\n                    display_supported: false\n                    fdr_supported: false\n                    hdmi_prefer_50hz_supported: false\n                    hdmi_prefer_high_fps_supported: false\n                    hotspot_supported: true\n                    https_setup_supported: true\n                    input_management_supported: true\n                    keep_hotspot_until_connected_supported: true\n                    multi_user_supported: true\n                    multichannel_group_supported: true\n                    multizone_supported: true\n                    night_mode_supported: true\n                    night_mode_supported_v2: true\n                    opencast_supported: false\n                    preview_channel_supported: true\n                    reboot_supported: true\n                    remote_ducking_supported: true\n                    separate_tts_volume_supported: true\n                    setup_supported: true\n                    sleep_mode_supported: true\n                    stats_supported: true\n                    system_sound_effects_supported: false\n                    user_eq_supported: true\n                    wifi_auto_save_supported: true\n                    wifi_regulatory_domain_locked: true\n                    wifi_supported: true\n                  cloud_device_id: 003D...\n                  factory_country_code: US\n                  hotspot_bssid: FA:8F:CA:30:41:71\n                  local_authorization_token_hash: hBt2...\n                  mac_address: F4:F5:...\n                  manufacturer: Google Inc.\n                  model_name: Google Home\n                  product_name: pineapple\n                  public_key: MIIB...\n                  ssdp_udn: baab...\n                  uma_client_id: 8ce0...\n                  uptime: 48509.169282\n                  weave_device_id: \"\"\n                multizone:\n                  audio_output_delay: 0\n                  audio_output_delay_hdmi: 0\n                  audio_output_delay_oem: 0\n                  aux_in_group: \"\"\n                  dynamic_groups: []\n                  groups: []\n                  multichannel_status: 0\n                name: Bedroom Speaker\n                net:\n                  ethernet_connected: false\n                  ip_address: 192.168.0.18\n                  online: true\n                night_mode_params:\n                  device_override_do_not_disturb: 0\n                  do_not_disturb: true\n                  enabled: true\n                  led_brightness: 0.5799999833106995\n                  volume: 0.5899999737739563\n                  windows:\n                    - days:\n                        - 0\n                        - 1\n                        - 2\n                        - 3\n                        - 4\n                        - 5\n                        - 6\n                      length_hours: 6\n                      start_hour: 23\n                opencast:\n                  pin_code: \"\"\n                opt_in:\n                  audio_hdr: false\n                  audio_surround_mode: 0\n                  autoplay_on_signal: true\n                  cloud_ipc: true\n                  hdmi_prefer_50hz: false\n                  hdmi_prefer_high_fps: true\n                  managed_mode: false\n                  opencast: true\n                  preview_channel: true\n                  remote_ducking: true\n                  stats: true\n                  ui_flipped: false\n                  wpa3_support_enabled: false\n                proxy:\n                  mode: system\n                settings:\n                  closed_caption: {}\n                  control_notifications: 1\n                  country_code: IN\n                  locale: en-US\n                  network_standby: 0\n                  system_sound_effects: true\n                  time_format: 1\n                  timezone: Asia/Kolkata\n                  wake_on_cast: 1\n                setup:\n                  qr_ssid_suffix: \"\"\n                  setup_state: 60\n                  ssid_suffix: k\n                  stats:\n                    num_check_connectivity: 0\n                    num_connect_wifi: 0\n                    num_connected_wifi_not_saved: 0\n                    num_initial_eureka_info: 0\n                    num_obtain_ip: 0\n                  tos_accepted: true\n                sign:\n                  certificate: |\n                    -----BEGIN CERTIFICATE-----\n                    MIID...Oeb0\n                    -----END CERTIFICATE-----\n                  intermediate_certs:\n                    - |\n                      -----BEGIN CERTIFICATE-----\n                      MIID...O/bYS\n                      -----END CERTIFICATE-----\n                  nonce: \"1234512345\"\n                  signed_data: Rr5Q...\n                user_eq:\n                  high_shelf:\n                    frequency: 4500\n                    gain_db: 0\n                    quality: 0.707\n                  low_shelf:\n                    frequency: 150\n                    gain_db: 0\n                    quality: 0.707\n                  max_peaking_eqs: 0\n                  peaking_eqs: []\n                version: 10\n                wifi:\n                  bssid: a0:ab:...\n                  has_changes: false\n                  noise_level: -90\n                  signal_level: -50\n                  ssid: Nucl...\n                  wpa_configured: true\n                  wpa_id: 1\n                  wpa_state: 10\n              schema:\n                $ref: \"#/components/schemas/Example1\"\n          description: \"\"\n          headers: {}\n      summary: Eureka Info\n      tags:\n        - Device Info\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: \"{\\r\n\n              \\  \\\"aogh\\\": {\\r\n\n              \\    \\\"aogh_api_version\\\": \\\"2\\\"\\r\n\n              \\  },\\r\n\n              \\  \\\"audio\\\": {\\r\n\n              \\    \\\"digital\\\": false\\r\n\n              \\  },\\r\n\n              \\  \\\"build_info\\\": {\\r\n\n              \\    \\\"build_type\\\": 2,\\r\n\n              \\    \\\"cast_build_revision\\\": \\\"1.46.195690\\\",\\r\n\n              \\    \\\"cast_control_version\\\": 1,\\r\n\n              \\    \\\"preview_channel_state\\\": 4,\\r\n\n              \\    \\\"release_track\\\": \\\"preview-joining-stable-channel\\\",\\r\n\n              \\    \\\"system_build_number\\\": \\\"195690\\\"\\r\n\n              \\  },\\r\n\n              \\  \\\"detail\\\": {\\r\n\n              \\    \\\"icon_list\\\": [\\r\n\n              \\      {\\r\n\n              \\        \\\"depth\\\": 32,\\r\n\n              \\        \\\"height\\\": 55,\\r\n\n              \\        \\\"mimetype\\\": \\\"image/png\\\",\\r\n\n              \\        \\\"url\\\": \\\"/setup/icon.png\\\",\\r\n\n              \\        \\\"width\\\": 98\\r\n\n              \\      }\\r\n\n              \\    ],\\r\n\n              \\    \\\"locale\\\": {\\r\n\n              \\      \\\"display_string\\\": \\\"English (United States)\\\"\\r\n\n              \\    },\\r\n\n              \\    \\\"timezone\\\": {\\r\n\n              \\      \\\"display_string\\\": \\\"India Standard Time (Kolkata)\\\",\\r\n\n              \\      \\\"offset\\\": 330\\r\n\n              \\    }\\r\n\n              \\  },\\r\n\n              \\  \\\"device_info\\\": {\\r\n\n              \\    \\\"4k_blocked\\\": 0,\\r\n\n              \\    \\\"capabilities\\\": {\\r\n\n              \\      \\\"aogh_supported\\\": true,\\r\n\n              \\      \\\"assistant_supported\\\": true,\\r\n\n              \\      \\\"audio_hdr_supported\\\": false,\\r\n\n              \\      \\\"audio_surround_mode_supported\\\": false,\\r\n\n              \\      \\\"ble_supported\\\": true,\\r\n\n              \\      \\\"bluetooth_audio_sink_supported\\\": true,\\r\n\n              \\      \\\"bluetooth_audio_source_supported\\\": true,\\r\n\n              \\      \\\"bluetooth_supported\\\": true,\\r\n\n              \\      \\\"cloudcast_supported\\\": true,\\r\n\n              \\      \\\"content_filters_supported\\\": true,\\r\n\n              \\      \\\"display_supported\\\": false,\\r\n\n              \\      \\\"fdr_supported\\\": false,\\r\n\n              \\      \\\"hdmi_prefer_50hz_supported\\\": false,\\r\n\n              \\      \\\"hdmi_prefer_high_fps_supported\\\": false,\\r\n\n              \\      \\\"hotspot_supported\\\": true,\\r\n\n              \\      \\\"https_setup_supported\\\": true,\\r\n\n              \\      \\\"input_management_supported\\\": true,\\r\n\n              \\      \\\"keep_hotspot_until_connected_supported\\\": true,\\r\n\n              \\      \\\"multi_user_supported\\\": true,\\r\n\n              \\      \\\"multichannel_group_supported\\\": true,\\r\n\n              \\      \\\"multizone_supported\\\": true,\\r\n\n              \\      \\\"night_mode_supported\\\": true,\\r\n\n              \\      \\\"night_mode_supported_v2\\\": true,\\r\n\n              \\      \\\"opencast_supported\\\": false,\\r\n\n              \\      \\\"preview_channel_supported\\\": true,\\r\n\n              \\      \\\"reboot_supported\\\": true,\\r\n\n              \\      \\\"remote_ducking_supported\\\": true,\\r\n\n              \\      \\\"separate_tts_volume_supported\\\": true,\\r\n\n              \\      \\\"setup_supported\\\": true,\\r\n\n              \\      \\\"sleep_mode_supported\\\": true,\\r\n\n              \\      \\\"stats_supported\\\": true,\\r\n\n              \\      \\\"system_sound_effects_supported\\\": false,\\r\n\n              \\      \\\"user_eq_supported\\\": true,\\r\n\n              \\      \\\"wifi_auto_save_supported\\\": true,\\r\n\n              \\      \\\"wifi_regulatory_domain_locked\\\": true,\\r\n\n              \\      \\\"wifi_supported\\\": true\\r\n\n              \\    },\\r\n\n              \\    \\\"cloud_device_id\\\": \\\"003D...\\\",\\r\n\n              \\    \\\"factory_country_code\\\": \\\"US\\\",\\r\n\n              \\    \\\"hotspot_bssid\\\": \\\"FA:8F:CA:30:41:71\\\",\\r\n\n              \\    \\\"local_authorization_token_hash\\\": \\\"hBt2...\\\",\\r\n\n              \\    \\\"mac_address\\\": \\\"F4:F5:...\\\",\\r\n\n              \\    \\\"manufacturer\\\": \\\"Google Inc.\\\",\\r\n\n              \\    \\\"model_name\\\": \\\"Google Home\\\",\\r\n\n              \\    \\\"product_name\\\": \\\"pineapple\\\",\\r\n\n              \\    \\\"public_key\\\": \\\"MIIB...\\\",\\r\n\n              \\    \\\"ssdp_udn\\\": \\\"baab...\\\",\\r\n\n              \\    \\\"uma_client_id\\\": \\\"8ce0...\\\",\\r\n\n              \\    \\\"uptime\\\": 48509.169282,\\r\n\n              \\    \\\"weave_device_id\\\": \\\"\\\"\\r\n\n              \\  },\\r\n\n              \\  \\\"multizone\\\": {\\r\n\n              \\    \\\"audio_output_delay\\\": 0,\\r\n\n              \\    \\\"audio_output_delay_hdmi\\\": 0,\\r\n\n              \\    \\\"audio_output_delay_oem\\\": 0,\\r\n\n              \\    \\\"aux_in_group\\\": \\\"\\\",\\r\n\n              \\    \\\"dynamic_groups\\\": [],\\r\n\n              \\    \\\"groups\\\": [],\\r\n\n              \\    \\\"multichannel_status\\\": 0\\r\n\n              \\  },\\r\n\n              \\  \\\"name\\\": \\\"Bedroom Speaker\\\",\\r\n\n              \\  \\\"net\\\": {\\r\n\n              \\    \\\"ethernet_connected\\\": false,\\r\n\n              \\    \\\"ip_address\\\": \\\"192.168.0.18\\\",\\r\n\n              \\    \\\"online\\\": true\\r\n\n              \\  },\\r\n\n              \\  \\\"night_mode_params\\\": {\\r\n\n              \\    \\\"device_override_do_not_disturb\\\": 0,\\r\n\n              \\    \\\"do_not_disturb\\\": true,\\r\n\n              \\    \\\"enabled\\\": true,\\r\n\n              \\    \\\"led_brightness\\\": 0.57999998331069946,\\r\n\n              \\    \\\"volume\\\": 0.5899999737739563,\\r\n\n              \\    \\\"windows\\\": [\\r\n\n              \\      {\\r\n\n              \\        \\\"days\\\": [\\r\n\n              \\          0,\\r\n\n              \\          1,\\r\n\n              \\          2,\\r\n\n              \\          3,\\r\n\n              \\          4,\\r\n\n              \\          5,\\r\n\n              \\          6\\r\n\n              \\        ],\\r\n\n              \\        \\\"length_hours\\\": 6,\\r\n\n              \\        \\\"start_hour\\\": 23\\r\n\n              \\      }\\r\n\n              \\    ]\\r\n\n              \\  },\\r\n\n              \\  \\\"opencast\\\": {\\r\n\n              \\    \\\"pin_code\\\": \\\"\\\"\\r\n\n              \\  },\\r\n\n              \\  \\\"opt_in\\\": {\\r\n\n              \\    \\\"audio_hdr\\\": false,\\r\n\n              \\    \\\"audio_surround_mode\\\": 0,\\r\n\n              \\    \\\"autoplay_on_signal\\\": true,\\r\n\n              \\    \\\"cloud_ipc\\\": true,\\r\n\n              \\    \\\"hdmi_prefer_50hz\\\": false,\\r\n\n              \\    \\\"hdmi_prefer_high_fps\\\": true,\\r\n\n              \\    \\\"managed_mode\\\": false,\\r\n\n              \\    \\\"opencast\\\": true,\\r\n\n              \\    \\\"preview_channel\\\": true,\\r\n\n              \\    \\\"remote_ducking\\\": true,\\r\n\n              \\    \\\"stats\\\": true,\\r\n\n              \\    \\\"ui_flipped\\\": false,\\r\n\n              \\    \\\"wpa3_support_enabled\\\": false\\r\n\n              \\  },\\r\n\n              \\  \\\"proxy\\\": {\\r\n\n              \\    \\\"mode\\\": \\\"system\\\"\\r\n\n              \\  },\\r\n\n              \\  \\\"settings\\\": {\\r\n\n              \\    \\\"closed_caption\\\": {},\\r\n\n              \\    \\\"control_notifications\\\": 1,\\r\n\n              \\    \\\"country_code\\\": \\\"IN\\\",\\r\n\n              \\    \\\"locale\\\": \\\"en-US\\\",\\r\n\n              \\    \\\"network_standby\\\": 0,\\r\n\n              \\    \\\"system_sound_effects\\\": true,\\r\n\n              \\    \\\"time_format\\\": 1,\\r\n\n              \\    \\\"timezone\\\": \\\"Asia/Kolkata\\\",\\r\n\n              \\    \\\"wake_on_cast\\\": 1\\r\n\n              \\  },\\r\n\n              \\  \\\"setup\\\": {\\r\n\n              \\    \\\"qr_ssid_suffix\\\": \\\"\\\",\\r\n\n              \\    \\\"setup_state\\\": 60,\\r\n\n              \\    \\\"ssid_suffix\\\": \\\"k\\\",\\r\n\n              \\    \\\"stats\\\": {\\r\n\n              \\      \\\"num_check_connectivity\\\": 0,\\r\n\n              \\      \\\"num_connect_wifi\\\": 0,\\r\n\n              \\      \\\"num_connected_wifi_not_saved\\\": 0,\\r\n\n              \\      \\\"num_initial_eureka_info\\\": 0,\\r\n\n              \\      \\\"num_obtain_ip\\\": 0\\r\n\n              \\    },\\r\n\n              \\    \\\"tos_accepted\\\": true\\r\n\n              \\  },\\r\n\n              \\  \\\"sign\\\": {\\r\n\n              \\    \\\"certificate\\\": \\\"-----BEGIN CERTIFICATE-----\\\\nMIID...Oeb0\\\\n-----END CERTIFICATE-----\\\\n\\\",\\r\n\n              \\    \\\"intermediate_certs\\\": [\\r\n\n              \\      \\\"-----BEGIN CERTIFICATE-----\\\\nMIID...O/bYS\\\\n-----END CERTIFICATE-----\\\\n\\\"\\r\n\n              \\    ],\\r\n\n              \\    \\\"nonce\\\": \\\"1234512345\\\",\\r\n\n              \\    \\\"signed_data\\\": \\\"Rr5Q...\\\"\\r\n\n              \\  },\\r\n\n              \\  \\\"user_eq\\\": {\\r\n\n              \\    \\\"high_shelf\\\": {\\r\n\n              \\      \\\"frequency\\\": 4500,\\r\n\n              \\      \\\"gain_db\\\": 0,\\r\n\n              \\      \\\"quality\\\": 0.707\\r\n\n              \\    },\\r\n\n              \\    \\\"low_shelf\\\": {\\r\n\n              \\      \\\"frequency\\\": 150,\\r\n\n              \\      \\\"gain_db\\\": 0,\\r\n\n              \\      \\\"quality\\\": 0.707\\r\n\n              \\    },\\r\n\n              \\    \\\"max_peaking_eqs\\\": 0,\\r\n\n              \\    \\\"peaking_eqs\\\": []\\r\n\n              \\  },\\r\n\n              \\  \\\"version\\\": 10,\\r\n\n              \\  \\\"wifi\\\": {\\r\n\n              \\    \\\"bssid\\\": \\\"a0:ab:...\\\",\\r\n\n              \\    \\\"has_changes\\\": false,\\r\n\n              \\    \\\"noise_level\\\": -90,\\r\n\n              \\    \\\"signal_level\\\": -50,\\r\n\n              \\    \\\"ssid\\\": \\\"Nucl...\\\",\\r\n\n              \\    \\\"wpa_configured\\\": true,\\r\n\n              \\    \\\"wpa_id\\\": 1,\\r\n\n              \\    \\\"wpa_state\\\": 10\\r\n\n              \\  }\\r\n\n              }\"\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"7380\"\n              Content-Type: application/json\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            method: GET\n            uri: /eureka_info?params=version%2Caudio%2Cname%2Cbuild_info%2Cdetail%2Cdevice_info%2Cnet%2Cwifi%2Csetup%2Csettings%2Copt_in%2Copencast%2Cmultizone%2Cproxy%2Cnight_mode_params%2Cuser_eq%2Croom_equalizer%2Csign%2Caogh%2Cultrasound%2Cmesh\u0026options=detail%2Csign\u0026nonce=1234512345\n          x-testDescription: |-\n            This gives most of the device info. The GET parameter `param` is a comma separated list of json keys to fetch. Currently, these params are known: `version,audio,name,build_info,detail,device_info,net,wifi,setup,settings,opt_in,opencast,multizone,proxy,night_mode_params,user_eq,room_equalizer,sign,aogh,ultrasound,mesh`\n\n            Nested items can also be filtered using the dot notation. Example: `audio.digital`\n\n            The `options` GET parameter is always set to `detail` or `detail,sign`. `sign` signs the `nonce` and returns some value.\n\n            The `nonce` GET parameter is an integer value signed with needed (see `option` parameter above).\n          x-testEnabled: true\n          x-testName: Eureka Info\n          x-testShouldPass: true\n  /forget_wifi:\n    post:\n      deprecated: false\n      description: This is to forget a saved network by `wpa_id`. Get the `wpa_id` from /setup/configured_networks\n      operationId: ForgetWi-FiNetwork\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              wpa_id: 0\n            schema:\n              $ref: \"#/components/schemas/ForgetWi-FiNetworkRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                type: object\n                x-is-dynamic: true\n          description: \"\"\n          headers: {}\n      summary: Forget Wi-Fi Network\n      tags:\n        - Wifi\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            headers: {}\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: NONE\n            x-matchResponseSchema: true\n          request:\n            body: \"{\\r\\n  \\\"wpa_id\\\": 0\\r\\n}\"\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /forget_wifi\n          x-testDescription: This is to forget a saved network by `wpa_id`. Get the `wpa_id` from /setup/configured_networks\n          x-testEnabled: true\n          x-testName: Forget Wi-Fi Network\n          x-testShouldPass: true\n  /get_app_device_id:\n    post:\n      deprecated: false\n      description: |-\n        This gives \"app device id\", \"certificate\" and \"signed data\".  \n        The `app_id` in the request is mandatory and refers to Chromecast backdrop/screensaver app. It has to be set to `E8C28D3C`.  \n\n        The certificate is valid and issued by `Chromecast ICA 6 (Audio Assist), Google Inc`.\n\n        Not sure what the other two are.\n      operationId: AppDeviceID\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              app_id: E8C28D3C\n            schema:\n              $ref: \"#/components/schemas/AppDeviceIDRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                app_device_id: ...\n                certificate: |\n                  -----BEGIN CERTIFICATE-----\n                  MIID...Oeb0\n                  -----END CERTIFICATE-----\n                signed_data: HAjp...\n              schema:\n                $ref: \"#/components/schemas/Example11\"\n          description: \"\"\n          headers: {}\n        \"404\":\n          description: Not Found\n      summary: App Device ID\n      tags:\n        - Device Info\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: \"{\\r\n\n              \\  \\\"app_device_id\\\": \\\"...\\\",\\r\n\n              \\  \\\"certificate\\\": \\\"-----BEGIN CERTIFICATE-----\\\\nMIID...Oeb0\\\\n-----END CERTIFICATE-----\\\\n\\\",\\r\n\n              \\  \\\"signed_data\\\": \\\"HAjp...\\\"\\r\n\n              }\"\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"1828\"\n              Content-Type: application/json\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            body: \"{\\r\\n  \\\"app_id\\\": \\\"E8C28D3C\\\"\\r\\n}\"\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /get_app_device_id\n          x-testDescription: |-\n            This gives \"app device id\", \"certificate\" and \"signed data\".  \n            The `app_id` in the request is mandatory and refers to Chromecast backdrop/screensaver app. It has to be set to `E8C28D3C`.  \n\n            The certificate is valid and issued by `Chromecast ICA 6 (Audio Assist), Google Inc`.\n\n            Not sure what the other two are.\n          x-testEnabled: true\n          x-testName: App Device ID\n          x-testShouldPass: true\n  /icon.png:\n    get:\n      deprecated: false\n      description: |-\n        **Update:** This no longer exists. It's not useful, anyway.\n\n        A redirect to `http://www.gstatic.com/eureka/images/eureka_device.png`\n      operationId: ChromecastIcon\n      parameters: []\n      responses:\n        \"200\":\n          description: \"\"\n          headers: {}\n      summary: Chromecast Icon\n      tags:\n        - Static Files\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            headers: {}\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: NONE\n            x-matchResponseSchema: true\n          request:\n            method: GET\n            uri: /icon.png\n          x-testDescription: |-\n            **Update:** This no longer exists. It's not useful, anyway.\n\n            A redirect to `http://www.gstatic.com/eureka/images/eureka_device.png`\n          x-testEnabled: true\n          x-testName: Chromecast Icon\n          x-testShouldPass: true\n  /offer:\n    get:\n      deprecated: false\n      description: |-\n        This gives a token which is used by the Home app to get offers. The offers themselves are not stored on the device.  \n        A new token is generated for every request.\n      operationId: Offer\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                token: ADtq...\n              schema:\n                $ref: \"#/components/schemas/Example12\"\n          description: \"\"\n          headers: {}\n      summary: Offer\n      tags:\n        - Device Info\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: '{\"token\":\"ADtq...\"}'\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"240\"\n              Content-Type: application/json\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            method: GET\n            uri: /offer\n          x-testDescription: |-\n            This gives a token which is used by the Home app to get offers. The offers themselves are not stored on the device.  \n            A new token is generated for every request.\n          x-testEnabled: true\n          x-testName: Offer\n          x-testShouldPass: true\n  /reboot:\n    post:\n      deprecated: false\n      description: 'This can simply reboot the device (`params: \"now\"`) or factory reset the device (`params: \"fdr\"`).'\n      operationId: RebootandFactoryReset\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              params: now\n            schema:\n              $ref: \"#/components/schemas/RebootandFactoryResetRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                type: object\n                x-is-dynamic: true\n          description: \"\"\n          headers: {}\n      summary: Reboot and Factory Reset\n      tags:\n        - Device Settings\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"0\"\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: NONE\n            x-matchResponseSchema: true\n          request:\n            body: \"{\\r\\n  \\\"params\\\": \\\"now\\\"\\r\\n}\"\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /reboot\n          x-testDescription: 'This can simply reboot the device (`params: \"now\"`) or factory reset the device (`params: \"fdr\"`).'\n          x-testEnabled: true\n          x-testName: Reboot and Factory Reset\n          x-testShouldPass: true\n  /scan_results:\n    get:\n      deprecated: false\n      description: |-\n        This gets a list of all nearby Wi-Fi access points.\n\n        The list only has the connected AP by default. Once a scan is triggered by `/setup/scan_wifi`, the whole list is cached for ~3 minutes. Then it will revert to returning only the connected AP again.\n      operationId: GetWi-FiScanResults\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                - bssid: APBSSID1\n                  signal_level: -20\n                  ssid: APSSID1\n                  wpa_auth: 7\n                  wpa_cipher: 4\n                  wpa_id: 0\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Example114\"\n                type: array\n          description: \"\"\n          headers: {}\n      summary: Get Wi-Fi Scan Results\n      tags:\n        - Wifi\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: \"[\\r\n\n              \\  {\\r\n\n              \\    \\\"bssid\\\": \\\"APBSSID1\\\",\\r\n\n              \\    \\\"signal_level\\\": -20,\\r\n\n              \\    \\\"ssid\\\": \\\"APSSID1\\\",\\r\n\n              \\    \\\"wpa_auth\\\": 7,\\r\n\n              \\    \\\"wpa_cipher\\\": 4,\\r\n\n              \\    \\\"wpa_id\\\": 0\\r\n\n              \\  }\\r\n\n              ]\"\n            headers: {}\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            method: GET\n            uri: /scan_results\n          x-testDescription: |-\n            This gets a list of all nearby Wi-Fi access points.\n\n            The list only has the connected AP by default. Once a scan is triggered by `/setup/scan_wifi`, the whole list is cached for ~3 minutes. Then it will revert to returning only the connected AP again.\n          x-testEnabled: true\n          x-testName: Get Wi-Fi Scan Results\n          x-testShouldPass: true\n  /scan_wifi:\n    post:\n      deprecated: false\n      description: |-\n        This initiates scanning for Wi-Fi networks.\n\n        The results can be obtained with `/setup/scan_results` after triggering the scan with this request.\n      operationId: ScanforNetworks\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                type: object\n                x-is-dynamic: true\n          description: \"\"\n          headers: {}\n      summary: Scan for Networks\n      tags:\n        - Wifi\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            headers: {}\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: NONE\n            x-matchResponseSchema: true\n          request:\n            method: POST\n            uri: /scan_wifi\n          x-testDescription: |-\n            This initiates scanning for Wi-Fi networks.\n\n            The results can be obtained with `/setup/scan_results` after triggering the scan with this request.\n          x-testEnabled: true\n          x-testName: Scan for Networks\n          x-testShouldPass: true\n  /set_eureka_info:\n    post:\n      deprecated: false\n      description: |-\n        This can set custom values to some options.\n\n        Only fields to be modified need to be sent, not all. The example has some modifiable fields.\n\n        TODO: List all modifiable fields.\n\n        Sending non-existant fields will still return a 200 OK, but they are not saved.\n      operationId: SetEurekaInfo\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              name: Living Room\n              opt_in:\n                opencast: true\n                preview_channel: true\n                remote_ducking: true\n                stats: true\n              settings:\n                control_notifications: 2\n            schema:\n              $ref: \"#/components/schemas/SetEurekaInfoRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                type: object\n                x-is-dynamic: true\n          description: \"\"\n          headers: {}\n      summary: Set Eureka Info\n      tags:\n        - Device Settings\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"0\"\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: NONE\n            x-matchResponseSchema: true\n          request:\n            body: \"{\\r\n\n              \\  \\\"name\\\": \\\"Living Room\\\",\\r\n\n              \\  \\\"settings\\\": {\\r\n\n              \\    \\\"control_notifications\\\": 2\\r\n\n              \\  },\\r\n\n              \\  \\\"opt_in\\\": {\\r\n\n              \\    \\\"opencast\\\": true,\\r\n\n              \\    \\\"preview_channel\\\": true,\\r\n\n              \\    \\\"remote_ducking\\\": true,\\r\n\n              \\    \\\"stats\\\": true\\r\n\n              \\  }\\r\n\n              }\"\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /set_eureka_info\n          x-testDescription: |-\n            This can set custom values to some options.\n\n            Only fields to be modified need to be sent, not all. The example has some modifiable fields.\n\n            TODO: List all modifiable fields.\n\n            Sending non-existant fields will still return a 200 OK, but they are not saved.\n          x-testEnabled: true\n          x-testName: Set Eureka Info\n          x-testShouldPass: true\n  /supported_locales:\n    get:\n      deprecated: false\n      description: Simply returns a list of all supported locales.\n      operationId: Locales\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                - display_string: Arabic - العربية\n                  locale: ar\n                - display_string: German - Deutsch\n                  locale: de\n                - display_string: English (United States)\n                  locale: en-US\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Example15\"\n                type: array\n          description: \"\"\n          headers: {}\n      summary: Locales\n      tags:\n        - Device Info\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: |-\n              [\n                {\n                  \"display_string\": \"Arabic - العربية\",\n                  \"locale\": \"ar\"\n                },\n                {\n                  \"display_string\": \"German - Deutsch\",\n                  \"locale\": \"de\"\n                },\n                {\n                  \"display_string\": \"English (United States)\",\n                  \"locale\": \"en-US\"\n                }\n              ]\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"3553\"\n              Content-Type: application/json\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            method: GET\n            uri: /supported_locales\n          x-testDescription: Simply returns a list of all supported locales.\n          x-testEnabled: false\n          x-testName: Locales\n          x-testShouldPass: true\n  /supported_timezones:\n    get:\n      deprecated: false\n      description: Simply returns a list of all supported timezones.\n      operationId: Timezones\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                - display_string: Samoa Standard Time (Midway)\n                  offset: -660\n                  timezone: Pacific/Midway\n                - display_string: Hawaii-Aleutian Standard Time (Honolulu)\n                  offset: -600\n                  timezone: Pacific/Honolulu\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Example14\"\n                type: array\n          description: \"\"\n          headers: {}\n      summary: Timezones\n      tags:\n        - Device Info\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: |-\n              [\n                {\n                  \"display_string\": \"Samoa Standard Time (Midway)\",\n                  \"offset\": -660,\n                  \"timezone\": \"Pacific/Midway\"\n                },\n                {\n                  \"display_string\": \"Hawaii-Aleutian Standard Time (Honolulu)\",\n                  \"offset\": -600,\n                  \"timezone\": \"Pacific/Honolulu\"\n                }\n              ]\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"11800\"\n              Content-Type: application/json\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            method: GET\n            uri: /supported_timezones\n          x-testDescription: Simply returns a list of all supported timezones.\n          x-testEnabled: false\n          x-testName: Timezones\n          x-testShouldPass: true\n  /test_internet_download_speed:\n    post:\n      deprecated: false\n      description: |-\n        **Update:** This seems to have been removed. Returns 404 Not Found.\n\n        This endpoint tests internet download speed. Any sample file URL can be provided.\n      operationId: TestInternetDownloadSpeed\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              url: https://storage.googleapis.com/reliability-speedtest/random.txt\n            schema:\n              $ref: \"#/components/schemas/TestInternetDownloadSpeedRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                bytes_received: 31457280\n                response_code: 200\n                time_for_data_fetch: 4722\n                time_for_http_response: 316\n              schema:\n                $ref: \"#/components/schemas/Example16\"\n          description: \"\"\n          headers: {}\n      summary: Test Internet Download Speed\n      tags:\n        - Device Info\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            body: '{\"bytes_received\":31457280,\"response_code\":200,\"time_for_data_fetch\":4722,\"time_for_http_response\":316}'\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"103\"\n              Content-Type: application/json\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: KEYS\n            x-matchResponseSchema: true\n          request:\n            body: \"{\\r\n\n              \\  \\\"url\\\": \\\"https://storage.googleapis.com/reliability-speedtest/random.txt\\\"\\r\n\n              }\"\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /test_internet_download_speed\n          x-testDescription: |-\n            **Update:** This seems to have been removed. Returns 404 Not Found.\n\n            This endpoint tests internet download speed. Any sample file URL can be provided.\n          x-testEnabled: true\n          x-testName: Test Internet Download Speed\n          x-testShouldPass: true\n  /user_eq/set_equalizer:\n    post:\n      deprecated: false\n      description: |-\n        This can only set new equalizer values. To get already set values, use /setup/eureka_info.\n\n        The body is mandatory. It can either contain `low_shelf` or `high_shelf` or both.\n\n        `low_shelf.gain_db` and `high_shelf.gain_db` refer to **bass** and **treble** respectively.\n\n        Default values are 0 for both.  \n        While the slider in the Home app only ranges from -6 to +6, they can be set to any integer like 50 or -100. These changes persist.\n      operationId: SetEqualizerValues\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              high_shelf:\n                gain_db: 0\n              low_shelf:\n                gain_db: 0\n            schema:\n              $ref: \"#/components/schemas/SetEqualizerValuesRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                type: object\n                x-is-dynamic: true\n          description: \"\"\n          headers: {}\n      summary: Set Equalizer Values\n      tags:\n        - Assistant\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests:\n        - expectedResponse:\n            headers:\n              Access-Control-Allow-Headers: Content-Type\n              Cache-Control: no-cache\n              Content-Length: \"0\"\n            statusCode: \"200\"\n            x-allowExtraHeaders: true\n            x-arrayCheckCount: false\n            x-arrayOrderedMatching: false\n            x-bodyMatchMode: NONE\n            x-matchResponseSchema: true\n          request:\n            body: \"{\\r\n\n              \\  \\\"low_shelf\\\": {\\r\n\n              \\    \\\"gain_db\\\": 0\\r\n\n              \\  },\\r\n\n              \\  \\\"high_shelf\\\": {\\r\n\n              \\    \\\"gain_db\\\": 0\\r\n\n              \\  }\\r\n\n              }\"\n            headers:\n              Content-Type: application/json\n            method: POST\n            uri: /user_eq/set_equalizer\n          x-testDescription: |-\n            This can only set new equalizer values. To get already set values, use /setup/eureka_info.\n\n            The body is mandatory. It can either contain `low_shelf` or `high_shelf` or both.\n\n            `low_shelf.gain_db` and `high_shelf.gain_db` refer to **bass** and **treble** respectively.\n\n            Default values are 0 for both.  \n            While the slider in the Home app only ranges from -6 to +6, they can be set to any integer like 50 or -100. These changes persist.\n          x-testEnabled: true\n          x-testName: Set Equalizer Values\n          x-testShouldPass: true\ncomponents:\n  schemas:\n    AccessibilityRequest:\n      example:\n        endpoint_enabled: false\n        hotword_enabled: false\n      properties:\n        endpoint_enabled:\n          type: boolean\n        hotword_enabled:\n          type: boolean\n      required:\n        - hotword_enabled\n        - endpoint_enabled\n      title: AccessibilityRequest\n      type: object\n    Alarm:\n      example:\n        date_pattern:\n          day: 15\n          month: 1\n          year: 2018\n        fire_time: 1515995400000\n        id: alarm/xxx\n        status: 1\n        time_pattern:\n          hour: 6\n          minute: 50\n          second: 0\n      properties:\n        date_pattern:\n          $ref: \"#/components/schemas/DatePattern\"\n        fire_time:\n          type: number\n        id:\n          type: string\n        status:\n          format: int32\n          type: integer\n        time_pattern:\n          $ref: \"#/components/schemas/TimePattern\"\n      required:\n        - date_pattern\n        - time_pattern\n        - fire_time\n        - id\n        - status\n      title: Alarm\n      type: object\n    AlarmVolumeRequest:\n      example:\n        volume: 1\n      properties:\n        volume:\n          format: int32\n          type: integer\n      required:\n        - volume\n      title: AlarmVolumeRequest\n      type: object\n    Aogh:\n      example:\n        aogh_api_version: \"2\"\n      properties:\n        aogh_api_version:\n          type: string\n      required:\n        - aogh_api_version\n      title: Aogh\n      type: object\n    AppDeviceIDRequest:\n      example:\n        app_id: E8C28D3C\n      properties:\n        app_id:\n          type: string\n      required:\n        - app_id\n      title: AppDeviceIDRequest\n      type: object\n    Audio:\n      example:\n        digital: false\n      properties:\n        digital:\n          type: boolean\n      required:\n        - digital\n      title: Audio\n      type: object\n    BuildInfo:\n      example:\n        build_type: 2\n        cast_build_revision: 1.46.195690\n        cast_control_version: 1\n        preview_channel_state: 4\n        release_track: preview-joining-stable-channel\n        system_build_number: \"195690\"\n      properties:\n        build_type:\n          format: int32\n          type: integer\n        cast_build_revision:\n          type: string\n        cast_control_version:\n          format: int32\n          type: integer\n        preview_channel_state:\n          format: int32\n          type: integer\n        release_track:\n          type: string\n        system_build_number:\n          type: string\n      required:\n        - build_type\n        - cast_build_revision\n        - cast_control_version\n        - preview_channel_state\n        - release_track\n        - system_build_number\n      title: BuildInfo\n      type: object\n    Capabilities:\n      example:\n        aogh_supported: true\n        assistant_supported: true\n        audio_hdr_supported: false\n        audio_surround_mode_supported: false\n        ble_supported: true\n        bluetooth_audio_sink_supported: true\n        bluetooth_audio_source_supported: true\n        bluetooth_supported: true\n        cloudcast_supported: true\n        content_filters_supported: true\n        display_supported: false\n        fdr_supported: false\n        hdmi_prefer_50hz_supported: false\n        hdmi_prefer_high_fps_supported: false\n        hotspot_supported: true\n        https_setup_supported: true\n        input_management_supported: true\n        keep_hotspot_until_connected_supported: true\n        multi_user_supported: true\n        multichannel_group_supported: true\n        multizone_supported: true\n        night_mode_supported: true\n        night_mode_supported_v2: true\n        opencast_supported: false\n        preview_channel_supported: true\n        reboot_supported: true\n        remote_ducking_supported: true\n        separate_tts_volume_supported: true\n        setup_supported: true\n        sleep_mode_supported: true\n        stats_supported: true\n        system_sound_effects_supported: false\n        user_eq_supported: true\n        wifi_auto_save_supported: true\n        wifi_regulatory_domain_locked: true\n        wifi_supported: true\n      properties:\n        aogh_supported:\n          type: boolean\n        assistant_supported:\n          type: boolean\n        audio_hdr_supported:\n          type: boolean\n        audio_surround_mode_supported:\n          type: boolean\n        ble_supported:\n          type: boolean\n        bluetooth_audio_sink_supported:\n          type: boolean\n        bluetooth_audio_source_supported:\n          type: boolean\n        bluetooth_supported:\n          type: boolean\n        cloudcast_supported:\n          type: boolean\n        content_filters_supported:\n          type: boolean\n        display_supported:\n          type: boolean\n        fdr_supported:\n          type: boolean\n        hdmi_prefer_50hz_supported:\n          type: boolean\n        hdmi_prefer_high_fps_supported:\n          type: boolean\n        hotspot_supported:\n          type: boolean\n        https_setup_supported:\n          type: boolean\n        input_management_supported:\n          type: boolean\n        keep_hotspot_until_connected_supported:\n          type: boolean\n        multi_user_supported:\n          type: boolean\n        multichannel_group_supported:\n          type: boolean\n        multizone_supported:\n          type: boolean\n        night_mode_supported:\n          type: boolean\n        night_mode_supported_v2:\n          type: boolean\n        opencast_supported:\n          type: boolean\n        preview_channel_supported:\n          type: boolean\n        reboot_supported:\n          type: boolean\n        remote_ducking_supported:\n          type: boolean\n        separate_tts_volume_supported:\n          type: boolean\n        setup_supported:\n          type: boolean\n        sleep_mode_supported:\n          type: boolean\n        stats_supported:\n          type: boolean\n        system_sound_effects_supported:\n          type: boolean\n        user_eq_supported:\n          type: boolean\n        wifi_auto_save_supported:\n          type: boolean\n        wifi_regulatory_domain_locked:\n          type: boolean\n        wifi_supported:\n          type: boolean\n      required:\n        - aogh_supported\n        - assistant_supported\n        - audio_hdr_supported\n        - audio_surround_mode_supported\n        - ble_supported\n        - bluetooth_audio_sink_supported\n        - bluetooth_audio_source_supported\n        - bluetooth_supported\n        - cloudcast_supported\n        - content_filters_supported\n        - display_supported\n        - fdr_supported\n        - hdmi_prefer_50hz_supported\n        - hdmi_prefer_high_fps_supported\n        - hotspot_supported\n        - https_setup_supported\n        - input_management_supported\n        - keep_hotspot_until_connected_supported\n        - multi_user_supported\n        - multichannel_group_supported\n        - multizone_supported\n        - night_mode_supported\n        - night_mode_supported_v2\n        - opencast_supported\n        - preview_channel_supported\n        - reboot_supported\n        - remote_ducking_supported\n        - separate_tts_volume_supported\n        - setup_supported\n        - sleep_mode_supported\n        - stats_supported\n        - system_sound_effects_supported\n        - user_eq_supported\n        - wifi_auto_save_supported\n        - wifi_regulatory_domain_locked\n        - wifi_supported\n      title: Capabilities\n      type: object\n    ChangeDiscoverabilityRequest:\n      example:\n        enable_discovery: true\n      properties:\n        enable_discovery:\n          type: boolean\n      required:\n        - enable_discovery\n      title: ChangeDiscoverabilityRequest\n      type: object\n    CheckReadyStatusRequest:\n      example:\n        play_ready_message: true\n        user_id: xxxxx\n      properties:\n        play_ready_message:\n          type: boolean\n        user_id:\n          type: string\n      required:\n        - play_ready_message\n        - user_id\n      title: CheckReadyStatusRequest\n      type: object\n    ConnectedDevice:\n      example:\n        device:\n          bond_date: 1529248165656.613\n          device_class: 2491396\n          device_type: 1\n          last_connect_date: 0\n          mac_address: xx:xx:xx:xx:xx:xx\n          name: PHILIPS BT64\n          rssi: -255\n          service_uuids:\n            - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n            - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n            - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n            - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n            - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n            - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        enabled_profiles: 2\n      properties:\n        device:\n          $ref: \"#/components/schemas/Device\"\n        enabled_profiles:\n          format: int32\n          type: integer\n      required:\n        - device\n        - enabled_profiles\n      title: ConnectedDevice\n      type: object\n    ConnecttoWi-FiNetworkRequest:\n      example:\n        bssid: 5c:0a:xx:xx:xx:xx\n        enc_passwd: xxxxxfPY=\n        signal_level: -42\n        ssid: myotherssid\n        wpa_auth: 7\n        wpa_cipher: 4\n      properties:\n        bssid:\n          type: string\n        enc_passwd:\n          type: string\n        signal_level:\n          format: int32\n          type: integer\n        ssid:\n          type: string\n        wpa_auth:\n          format: int32\n          type: integer\n        wpa_cipher:\n          format: int32\n          type: integer\n      required:\n        - bssid\n        - signal_level\n        - ssid\n        - wpa_auth\n        - wpa_cipher\n        - enc_passwd\n      title: ConnecttoWi-FiNetworkRequest\n      type: object\n    DatePattern:\n      example:\n        day: 15\n        month: 1\n        year: 2018\n      properties:\n        day:\n          format: int32\n          type: integer\n        month:\n          format: int32\n          type: integer\n        year:\n          format: int32\n          type: integer\n      required:\n        - day\n        - month\n        - year\n      title: DatePattern\n      type: object\n    DeleteAlarmsandTimersRequest:\n      example:\n        ids:\n          - timer/xxx\n          - alarm/xxx\n      properties:\n        ids:\n          items:\n            type: string\n          type: array\n      required:\n        - ids\n      title: DeleteAlarmsandTimersRequest\n      type: object\n    Detail:\n      example:\n        icon_list:\n          - depth: 32\n            height: 55\n            mimetype: image/png\n            url: /setup/icon.png\n            width: 98\n        locale:\n          display_string: English (United States)\n        timezone:\n          display_string: India Standard Time (Kolkata)\n          offset: 330\n      properties:\n        icon_list:\n          items:\n            $ref: \"#/components/schemas/IconList\"\n          type: array\n        locale:\n          $ref: \"#/components/schemas/Locale\"\n        timezone:\n          $ref: \"#/components/schemas/Timezone\"\n      required:\n        - icon_list\n        - locale\n        - timezone\n      title: Detail\n      type: object\n    Device:\n      example:\n        bond_date: 1529248165656.613\n        device_class: 2491396\n        device_type: 1\n        last_connect_date: 0\n        mac_address: xx:xx:xx:xx:xx:xx\n        name: PHILIPS BT64\n        rssi: -255\n        service_uuids:\n          - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n          - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n          - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n          - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n          - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n          - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n      properties:\n        bond_date:\n          type: number\n        device_class:\n          format: int32\n          type: integer\n        device_type:\n          format: int32\n          type: integer\n        last_connect_date:\n          format: int32\n          type: integer\n        mac_address:\n          type: string\n        name:\n          type: string\n        rssi:\n          format: int32\n          type: integer\n        service_uuids:\n          items:\n            type: string\n          type: array\n      required:\n        - bond_date\n        - device_class\n        - device_type\n        - last_connect_date\n        - mac_address\n        - name\n        - rssi\n        - service_uuids\n      title: Device\n      type: object\n    DeviceInfo:\n      example:\n        4k_blocked: 0\n        capabilities:\n          aogh_supported: true\n          assistant_supported: true\n          audio_hdr_supported: false\n          audio_surround_mode_supported: false\n          ble_supported: true\n          bluetooth_audio_sink_supported: true\n          bluetooth_audio_source_supported: true\n          bluetooth_supported: true\n          cloudcast_supported: true\n          content_filters_supported: true\n          display_supported: false\n          fdr_supported: false\n          hdmi_prefer_50hz_supported: false\n          hdmi_prefer_high_fps_supported: false\n          hotspot_supported: true\n          https_setup_supported: true\n          input_management_supported: true\n          keep_hotspot_until_connected_supported: true\n          multi_user_supported: true\n          multichannel_group_supported: true\n          multizone_supported: true\n          night_mode_supported: true\n          night_mode_supported_v2: true\n          opencast_supported: false\n          preview_channel_supported: true\n          reboot_supported: true\n          remote_ducking_supported: true\n          separate_tts_volume_supported: true\n          setup_supported: true\n          sleep_mode_supported: true\n          stats_supported: true\n          system_sound_effects_supported: false\n          user_eq_supported: true\n          wifi_auto_save_supported: true\n          wifi_regulatory_domain_locked: true\n          wifi_supported: true\n        cloud_device_id: 003D...\n        factory_country_code: US\n        hotspot_bssid: FA:8F:CA:30:41:71\n        local_authorization_token_hash: hBt2...\n        mac_address: F4:F5:...\n        manufacturer: Google Inc.\n        model_name: Google Home\n        product_name: pineapple\n        public_key: MIIB...\n        ssdp_udn: baab...\n        uma_client_id: 8ce0...\n        uptime: 48509.169282\n        weave_device_id: \"\"\n      properties:\n        4k_blocked:\n          format: int32\n          type: integer\n        capabilities:\n          $ref: \"#/components/schemas/Capabilities\"\n        cloud_device_id:\n          type: string\n        factory_country_code:\n          type: string\n        hotspot_bssid:\n          type: string\n        local_authorization_token_hash:\n          type: string\n        mac_address:\n          type: string\n        manufacturer:\n          type: string\n        model_name:\n          type: string\n        product_name:\n          type: string\n        public_key:\n          type: string\n        ssdp_udn:\n          type: string\n        uma_client_id:\n          type: string\n        uptime:\n          type: number\n        weave_device_id:\n          type: string\n      required:\n        - 4k_blocked\n        - capabilities\n        - cloud_device_id\n        - factory_country_code\n        - hotspot_bssid\n        - local_authorization_token_hash\n        - mac_address\n        - manufacturer\n        - model_name\n        - product_name\n        - public_key\n        - ssdp_udn\n        - uma_client_id\n        - uptime\n        - weave_device_id\n      title: DeviceInfo\n      type: object\n    Example1:\n      example:\n        aogh:\n          aogh_api_version: \"2\"\n        audio:\n          digital: false\n        build_info:\n          build_type: 2\n          cast_build_revision: 1.46.195690\n          cast_control_version: 1\n          preview_channel_state: 4\n          release_track: preview-joining-stable-channel\n          system_build_number: \"195690\"\n        detail:\n          icon_list:\n            - depth: 32\n              height: 55\n              mimetype: image/png\n              url: /setup/icon.png\n              width: 98\n          locale:\n            display_string: English (United States)\n          timezone:\n            display_string: India Standard Time (Kolkata)\n            offset: 330\n        device_info:\n          4k_blocked: 0\n          capabilities:\n            aogh_supported: true\n            assistant_supported: true\n            audio_hdr_supported: false\n            audio_surround_mode_supported: false\n            ble_supported: true\n            bluetooth_audio_sink_supported: true\n            bluetooth_audio_source_supported: true\n            bluetooth_supported: true\n            cloudcast_supported: true\n            content_filters_supported: true\n            display_supported: false\n            fdr_supported: false\n            hdmi_prefer_50hz_supported: false\n            hdmi_prefer_high_fps_supported: false\n            hotspot_supported: true\n            https_setup_supported: true\n            input_management_supported: true\n            keep_hotspot_until_connected_supported: true\n            multi_user_supported: true\n            multichannel_group_supported: true\n            multizone_supported: true\n            night_mode_supported: true\n            night_mode_supported_v2: true\n            opencast_supported: false\n            preview_channel_supported: true\n            reboot_supported: true\n            remote_ducking_supported: true\n            separate_tts_volume_supported: true\n            setup_supported: true\n            sleep_mode_supported: true\n            stats_supported: true\n            system_sound_effects_supported: false\n            user_eq_supported: true\n            wifi_auto_save_supported: true\n            wifi_regulatory_domain_locked: true\n            wifi_supported: true\n          cloud_device_id: 003D...\n          factory_country_code: US\n          hotspot_bssid: FA:8F:CA:30:41:71\n          local_authorization_token_hash: hBt2...\n          mac_address: F4:F5:...\n          manufacturer: Google Inc.\n          model_name: Google Home\n          product_name: pineapple\n          public_key: MIIB...\n          ssdp_udn: baab...\n          uma_client_id: 8ce0...\n          uptime: 48509.169282\n          weave_device_id: \"\"\n        multizone:\n          audio_output_delay: 0\n          audio_output_delay_hdmi: 0\n          audio_output_delay_oem: 0\n          aux_in_group: \"\"\n          dynamic_groups: []\n          groups: []\n          multichannel_status: 0\n        name: Bedroom Speaker\n        net:\n          ethernet_connected: false\n          ip_address: 192.168.0.18\n          online: true\n        night_mode_params:\n          device_override_do_not_disturb: 0\n          do_not_disturb: true\n          enabled: true\n          led_brightness: 0.5799999833106995\n          volume: 0.5899999737739563\n          windows:\n            - days:\n                - 0\n                - 1\n                - 2\n                - 3\n                - 4\n                - 5\n                - 6\n              length_hours: 6\n              start_hour: 23\n        opencast:\n          pin_code: \"\"\n        opt_in:\n          audio_hdr: false\n          audio_surround_mode: 0\n          autoplay_on_signal: true\n          cloud_ipc: true\n          hdmi_prefer_50hz: false\n          hdmi_prefer_high_fps: true\n          managed_mode: false\n          opencast: true\n          preview_channel: true\n          remote_ducking: true\n          stats: true\n          ui_flipped: false\n          wpa3_support_enabled: false\n        proxy:\n          mode: system\n        settings:\n          closed_caption: {}\n          control_notifications: 1\n          country_code: IN\n          locale: en-US\n          network_standby: 0\n          system_sound_effects: true\n          time_format: 1\n          timezone: Asia/Kolkata\n          wake_on_cast: 1\n        setup:\n          qr_ssid_suffix: \"\"\n          setup_state: 60\n          ssid_suffix: k\n          stats:\n            num_check_connectivity: 0\n            num_connect_wifi: 0\n            num_connected_wifi_not_saved: 0\n            num_initial_eureka_info: 0\n            num_obtain_ip: 0\n          tos_accepted: true\n        sign:\n          certificate: |\n            -----BEGIN CERTIFICATE-----\n            MIID...Oeb0\n            -----END CERTIFICATE-----\n          intermediate_certs:\n            - |\n              -----BEGIN CERTIFICATE-----\n              MIID...O/bYS\n              -----END CERTIFICATE-----\n          nonce: \"1234512345\"\n          signed_data: Rr5Q...\n        user_eq:\n          high_shelf:\n            frequency: 4500\n            gain_db: 0\n            quality: 0.707\n          low_shelf:\n            frequency: 150\n            gain_db: 0\n            quality: 0.707\n          max_peaking_eqs: 0\n          peaking_eqs: []\n        version: 10\n        wifi:\n          bssid: a0:ab:...\n          has_changes: false\n          noise_level: -90\n          signal_level: -50\n          ssid: Nucl...\n          wpa_configured: true\n          wpa_id: 1\n          wpa_state: 10\n      properties:\n        aogh:\n          $ref: \"#/components/schemas/Aogh\"\n        audio:\n          $ref: \"#/components/schemas/Audio\"\n        build_info:\n          $ref: \"#/components/schemas/BuildInfo\"\n        detail:\n          $ref: \"#/components/schemas/Detail\"\n        device_info:\n          $ref: \"#/components/schemas/DeviceInfo\"\n        multizone:\n          $ref: \"#/components/schemas/Multizone\"\n        name:\n          type: string\n        net:\n          $ref: \"#/components/schemas/Net\"\n        night_mode_params:\n          $ref: \"#/components/schemas/NightModeParams\"\n        opencast:\n          $ref: \"#/components/schemas/Opencast\"\n        opt_in:\n          $ref: \"#/components/schemas/OptIn\"\n        proxy:\n          $ref: \"#/components/schemas/Proxy\"\n        settings:\n          $ref: \"#/components/schemas/Settings\"\n        setup:\n          $ref: \"#/components/schemas/Setup\"\n        sign:\n          $ref: \"#/components/schemas/Sign\"\n        user_eq:\n          $ref: \"#/components/schemas/UserEq\"\n        version:\n          format: int32\n          type: integer\n        wifi:\n          $ref: \"#/components/schemas/Wifi\"\n      required:\n        - aogh\n        - audio\n        - build_info\n        - detail\n        - device_info\n        - multizone\n        - name\n        - net\n        - night_mode_params\n        - opencast\n        - opt_in\n        - proxy\n        - settings\n        - setup\n        - sign\n        - user_eq\n        - version\n        - wifi\n      title: Example1\n      type: object\n    Example11:\n      example:\n        app_device_id: ...\n        certificate: |\n          -----BEGIN CERTIFICATE-----\n          MIID...Oeb0\n          -----END CERTIFICATE-----\n        signed_data: HAjp...\n      properties:\n        app_device_id:\n          type: string\n        certificate:\n          type: string\n        signed_data:\n          type: string\n      required:\n        - app_device_id\n        - certificate\n        - signed_data\n      title: Example11\n      type: object\n    Example110:\n      example:\n        audio_mode: 0\n        connected_devices:\n          - device:\n              bond_date: 1529248165656.613\n              device_class: 2491396\n              device_type: 1\n              last_connect_date: 0\n              mac_address: xx:xx:xx:xx:xx:xx\n              name: PHILIPS BT64\n              rssi: -255\n              service_uuids:\n                - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n                - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n            enabled_profiles: 2\n        connecting_devices: []\n        discovery_enabled: false\n        remote_sink:\n          bond_date: 1529248165656.613\n          device_class: 2491396\n          device_type: 1\n          last_connect_date: 0\n          mac_address: xx:xx:xx:xx:xx:xx\n          name: PHILIPS BT64\n          rssi: -255\n          service_uuids:\n            - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n            - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n            - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n            - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n            - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n            - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        scanning_enabled: false\n      properties:\n        audio_mode:\n          format: int32\n          type: integer\n        connected_devices:\n          items:\n            $ref: \"#/components/schemas/ConnectedDevice\"\n          type: array\n        connecting_devices:\n          items:\n            type: string\n          type: array\n        discovery_enabled:\n          type: boolean\n        remote_sink:\n          $ref: \"#/components/schemas/RemoteSink\"\n        scanning_enabled:\n          type: boolean\n      required:\n        - audio_mode\n        - connecting_devices\n        - connected_devices\n        - remote_sink\n        - discovery_enabled\n        - scanning_enabled\n      title: Example110\n      type: object\n    Example111:\n      example:\n        bond_date: 1503212407260.55\n        device_class: 5898764\n        device_type: 1\n        last_connect_date: 1514807829482.111\n        mac_address: xx:xx:xx:xx:xx:xx\n        name: Device Name\n        rssi: -255\n        service_uuids:\n          - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n          - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n      properties:\n        bond_date:\n          type: number\n        device_class:\n          format: int32\n          type: integer\n        device_type:\n          format: int32\n          type: integer\n        last_connect_date:\n          type: number\n        mac_address:\n          type: string\n        name:\n          type: string\n        rssi:\n          format: int32\n          type: integer\n        service_uuids:\n          items:\n            type: string\n          type: array\n      required:\n        - bond_date\n        - device_class\n        - device_type\n        - last_connect_date\n        - mac_address\n        - name\n        - rssi\n        - service_uuids\n      title: Example111\n      type: object\n    Example112:\n      example:\n        device_class: 525372\n        device_type: 3\n        expected_profiles: 0\n        mac_address: xx:xx:xx:xx:xx:xx\n        name: KD-49X8200E\n        rssi: -90\n      properties:\n        device_class:\n          format: int32\n          type: integer\n        device_type:\n          format: int32\n          type: integer\n        expected_profiles:\n          format: int32\n          type: integer\n        mac_address:\n          type: string\n        name:\n          type: string\n        rssi:\n          format: int32\n          type: integer\n      required:\n        - device_class\n        - device_type\n        - expected_profiles\n        - mac_address\n        - name\n        - rssi\n      title: Example112\n      type: object\n    Example113:\n      example:\n        ssid: Wifi name\n        wpa_auth: 7\n        wpa_cipher: 4\n        wpa_id: 0\n      properties:\n        ssid:\n          type: string\n        wpa_auth:\n          format: int32\n          type: integer\n        wpa_cipher:\n          format: int32\n          type: integer\n        wpa_id:\n          format: int32\n          type: integer\n      required:\n        - ssid\n        - wpa_auth\n        - wpa_cipher\n        - wpa_id\n      title: Example113\n      type: object\n    Example114:\n      example:\n        bssid: APBSSID1\n        signal_level: -20\n        ssid: APSSID1\n        wpa_auth: 7\n        wpa_cipher: 4\n        wpa_id: 0\n      properties:\n        bssid:\n          type: string\n        signal_level:\n          format: int32\n          type: integer\n        ssid:\n          type: string\n        wpa_auth:\n          format: int32\n          type: integer\n        wpa_cipher:\n          format: int32\n          type: integer\n        wpa_id:\n          format: int32\n          type: integer\n      required:\n        - bssid\n        - signal_level\n        - ssid\n        - wpa_auth\n        - wpa_cipher\n        - wpa_id\n      title: Example114\n      type: object\n    Example12:\n      example:\n        token: ADtq...\n      properties:\n        token:\n          type: string\n      required:\n        - token\n      title: Example12\n      type: object\n    Example13:\n      example:\n        can_enroll: true\n        enrollment_state: 0\n        error_code: 0\n        ready: false\n        retryable: true\n      properties:\n        can_enroll:\n          type: boolean\n        enrollment_state:\n          format: int32\n          type: integer\n        error_code:\n          format: int32\n          type: integer\n        ready:\n          type: boolean\n        retryable:\n          type: boolean\n      required:\n        - can_enroll\n        - enrollment_state\n        - error_code\n        - ready\n        - retryable\n      title: Example13\n      type: object\n    Example14:\n      example:\n        display_string: Samoa Standard Time (Midway)\n        offset: -660\n        timezone: Pacific/Midway\n      properties:\n        display_string:\n          type: string\n        offset:\n          format: int32\n          type: integer\n        timezone:\n          type: string\n      required:\n        - display_string\n        - offset\n        - timezone\n      title: Example14\n      type: object\n    Example15:\n      example:\n        display_string: Amharic - አማርኛ\n        locale: am\n      properties:\n        display_string:\n          type: string\n        locale:\n          type: string\n      required:\n        - display_string\n        - locale\n      title: Example15\n      type: object\n    Example16:\n      example:\n        bytes_received: 31457280\n        response_code: 200\n        time_for_data_fetch: 4722\n        time_for_http_response: 316\n      properties:\n        bytes_received:\n          format: int32\n          type: integer\n        response_code:\n          format: int32\n          type: integer\n        time_for_data_fetch:\n          format: int32\n          type: integer\n        time_for_http_response:\n          format: int32\n          type: integer\n      required:\n        - bytes_received\n        - response_code\n        - time_for_data_fetch\n        - time_for_http_response\n      title: Example16\n      type: object\n    Example17:\n      example:\n        do_not_disturb: true\n        enabled: false\n        led_brightness: 0.44999998807907104\n        volume: 0.46000000834465027\n        windows:\n          - days:\n              - 0\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n              - 6\n            length_hours: 8\n            start_hour: 22\n      properties:\n        do_not_disturb:\n          type: boolean\n        enabled:\n          type: boolean\n        led_brightness:\n          type: number\n        volume:\n          type: number\n        windows:\n          items:\n            $ref: \"#/components/schemas/Window2\"\n          type: array\n      required:\n        - do_not_disturb\n        - enabled\n        - led_brightness\n        - volume\n        - windows\n      title: Example17\n      type: object\n    Example18:\n      example:\n        alarm:\n          - date_pattern:\n              day: 15\n              month: 1\n              year: 2018\n            fire_time: 1515995400000\n            id: alarm/xxx\n            status: 1\n            time_pattern:\n              hour: 6\n              minute: 50\n              second: 0\n        timer:\n          - fire_time: 1516176765589\n            id: timer/xxx\n            original_duration: 20000\n            status: 1\n      properties:\n        alarm:\n          items:\n            $ref: \"#/components/schemas/Alarm\"\n          type: array\n        timer:\n          items:\n            $ref: \"#/components/schemas/Timer\"\n          type: array\n      required:\n        - alarm\n        - timer\n      title: Example18\n      type: object\n    Example19:\n      example:\n        success: true\n      properties:\n        success:\n          type: boolean\n      required:\n        - success\n      title: Example19\n      type: object\n    ForgetWi-FiNetworkRequest:\n      example:\n        wpa_id: 0\n      properties:\n        wpa_id:\n          format: int32\n          type: integer\n      required:\n        - wpa_id\n      title: ForgetWi-FiNetworkRequest\n      type: object\n    ForgetpaireddeviceRequest:\n      example:\n        bond: false\n        mac_address: xx:xx:xx:xx:xx:xx\n      properties:\n        bond:\n          type: boolean\n        mac_address:\n          type: string\n      required:\n        - mac_address\n        - bond\n      title: ForgetpaireddeviceRequest\n      type: object\n    Getcurrentstate:\n      example:\n        notifications_enabled: true\n      properties:\n        notifications_enabled:\n          type: boolean\n      required:\n        - notifications_enabled\n      title: Getcurrentstate\n      type: object\n    Getcurrentvalues:\n      example:\n        endpoint_enabled: false\n        hotword_enabled: false\n      properties:\n        endpoint_enabled:\n          type: boolean\n        hotword_enabled:\n          type: boolean\n      required:\n        - endpoint_enabled\n        - hotword_enabled\n      title: Getcurrentvalues\n      type: object\n    Getvolume:\n      example:\n        volume: 1\n      properties:\n        volume:\n          type: number\n      required:\n        - volume\n      title: Getvolume\n      type: object\n    HighShelf:\n      example:\n        frequency: 4500\n        gain_db: 0\n        quality: 0.707\n      properties:\n        frequency:\n          format: int32\n          type: integer\n        gain_db:\n          format: int32\n          type: integer\n        quality:\n          type: number\n      required:\n        - frequency\n        - gain_db\n        - quality\n      title: HighShelf\n      type: object\n    HighShelf1:\n      example:\n        gain_db: 0\n      properties:\n        gain_db:\n          format: int32\n          type: integer\n      required:\n        - gain_db\n      title: HighShelf1\n      type: object\n    IconList:\n      example:\n        depth: 32\n        height: 55\n        mimetype: image/png\n        url: /setup/icon.png\n        width: 98\n      properties:\n        depth:\n          format: int32\n          type: integer\n        height:\n          format: int32\n          type: integer\n        mimetype:\n          type: string\n        url:\n          type: string\n        width:\n          format: int32\n          type: integer\n      required:\n        - depth\n        - height\n        - mimetype\n        - url\n        - width\n      title: IconList\n      type: object\n    Locale:\n      example:\n        display_string: English (United States)\n      properties:\n        display_string:\n          type: string\n      required:\n        - display_string\n      title: Locale\n      type: object\n    LowShelf:\n      example:\n        frequency: 150\n        gain_db: 0\n        quality: 0.707\n      properties:\n        frequency:\n          format: int32\n          type: integer\n        gain_db:\n          format: int32\n          type: integer\n        quality:\n          type: number\n      required:\n        - frequency\n        - gain_db\n        - quality\n      title: LowShelf\n      type: object\n    LowShelf1:\n      example:\n        gain_db: 0\n      properties:\n        gain_db:\n          format: int32\n          type: integer\n      required:\n        - gain_db\n      title: LowShelf1\n      type: object\n    Multizone:\n      example:\n        audio_output_delay: 0\n        audio_output_delay_hdmi: 0\n        audio_output_delay_oem: 0\n        aux_in_group: \"\"\n        dynamic_groups: []\n        groups: []\n        multichannel_status: 0\n      properties:\n        audio_output_delay:\n          format: int32\n          type: integer\n        audio_output_delay_hdmi:\n          format: int32\n          type: integer\n        audio_output_delay_oem:\n          format: int32\n          type: integer\n        aux_in_group:\n          type: string\n        dynamic_groups:\n          items:\n            type: string\n          type: array\n        groups:\n          items:\n            type: string\n          type: array\n        multichannel_status:\n          format: int32\n          type: integer\n      required:\n        - audio_output_delay\n        - audio_output_delay_hdmi\n        - audio_output_delay_oem\n        - aux_in_group\n        - dynamic_groups\n        - groups\n        - multichannel_status\n      title: Multizone\n      type: object\n    Net:\n      example:\n        ethernet_connected: false\n        ip_address: 192.168.0.18\n        online: true\n      properties:\n        ethernet_connected:\n          type: boolean\n        ip_address:\n          type: string\n        online:\n          type: boolean\n      required:\n        - ethernet_connected\n        - ip_address\n        - online\n      title: Net\n      type: object\n    NightModeParams:\n      example:\n        device_override_do_not_disturb: 0\n        do_not_disturb: true\n        enabled: true\n        led_brightness: 0.5799999833106995\n        volume: 0.5899999737739563\n        windows:\n          - days:\n              - 0\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n              - 6\n            length_hours: 6\n            start_hour: 23\n      properties:\n        device_override_do_not_disturb:\n          format: int32\n          type: integer\n        do_not_disturb:\n          type: boolean\n        enabled:\n          type: boolean\n        led_brightness:\n          type: number\n        volume:\n          type: number\n        windows:\n          items:\n            $ref: \"#/components/schemas/Window\"\n          type: array\n      required:\n        - device_override_do_not_disturb\n        - do_not_disturb\n        - enabled\n        - led_brightness\n        - volume\n        - windows\n      title: NightModeParams\n      type: object\n    NightModesettingsRequest:\n      example:\n        demo_to_user: true\n        do_not_disturb: true\n        enabled: false\n        led_brightness: 0.44999998807907104\n        volume: 0.46000000834465027\n        windows:\n          - days:\n              - 0\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n              - 6\n            length_hours: 8\n            start_hour: 22\n      properties:\n        demo_to_user:\n          type: boolean\n        do_not_disturb:\n          type: boolean\n        enabled:\n          type: boolean\n        led_brightness:\n          type: number\n        volume:\n          type: number\n        windows:\n          items:\n            $ref: \"#/components/schemas/Window\"\n          type: array\n      required:\n        - enabled\n        - do_not_disturb\n        - led_brightness\n        - volume\n        - demo_to_user\n        - windows\n      title: NightModesettingsRequest\n      type: object\n    Opencast:\n      example:\n        pin_code: \"\"\n      properties:\n        pin_code:\n          type: string\n      required:\n        - pin_code\n      title: Opencast\n      type: object\n    OptIn:\n      example:\n        audio_hdr: false\n        audio_surround_mode: 0\n        autoplay_on_signal: true\n        cloud_ipc: true\n        hdmi_prefer_50hz: false\n        hdmi_prefer_high_fps: true\n        managed_mode: false\n        opencast: true\n        preview_channel: true\n        remote_ducking: true\n        stats: true\n        ui_flipped: false\n        wpa3_support_enabled: false\n      properties:\n        audio_hdr:\n          type: boolean\n        audio_surround_mode:\n          format: int32\n          type: integer\n        autoplay_on_signal:\n          type: boolean\n        cloud_ipc:\n          type: boolean\n        hdmi_prefer_50hz:\n          type: boolean\n        hdmi_prefer_high_fps:\n          type: boolean\n        managed_mode:\n          type: boolean\n        opencast:\n          type: boolean\n        preview_channel:\n          type: boolean\n        remote_ducking:\n          type: boolean\n        stats:\n          type: boolean\n        ui_flipped:\n          type: boolean\n        wpa3_support_enabled:\n          type: boolean\n      required:\n        - audio_hdr\n        - audio_surround_mode\n        - autoplay_on_signal\n        - cloud_ipc\n        - hdmi_prefer_50hz\n        - hdmi_prefer_high_fps\n        - managed_mode\n        - opencast\n        - preview_channel\n        - remote_ducking\n        - stats\n        - ui_flipped\n        - wpa3_support_enabled\n      title: OptIn\n      type: object\n    OptIn1:\n      example:\n        opencast: true\n        preview_channel: true\n        remote_ducking: true\n        stats: true\n      properties:\n        opencast:\n          type: boolean\n        preview_channel:\n          type: boolean\n        remote_ducking:\n          type: boolean\n        stats:\n          type: boolean\n      required:\n        - opencast\n        - preview_channel\n        - remote_ducking\n        - stats\n      title: OptIn1\n      type: object\n    PairwithSpeakerRequest:\n      example:\n        connect: true\n        mac_address: 54:13:79:49:19:22\n        profile: 2\n      properties:\n        connect:\n          type: boolean\n        mac_address:\n          type: string\n        profile:\n          format: int32\n          type: integer\n      required:\n        - mac_address\n        - connect\n        - profile\n      title: PairwithSpeakerRequest\n      type: object\n    Proxy:\n      example:\n        mode: system\n      properties:\n        mode:\n          type: string\n      required:\n        - mode\n      title: Proxy\n      type: object\n    RebootandFactoryResetRequest:\n      example:\n        params: now\n      properties:\n        params:\n          type: string\n      required:\n        - params\n      title: RebootandFactoryResetRequest\n      type: object\n    RemoteSink:\n      example:\n        bond_date: 1529248165656.613\n        device_class: 2491396\n        device_type: 1\n        last_connect_date: 0\n        mac_address: xx:xx:xx:xx:xx:xx\n        name: PHILIPS BT64\n        rssi: -255\n        service_uuids:\n          - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n          - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n          - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n          - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n          - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n          - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n      properties:\n        bond_date:\n          type: number\n        device_class:\n          format: int32\n          type: integer\n        device_type:\n          format: int32\n          type: integer\n        last_connect_date:\n          format: int32\n          type: integer\n        mac_address:\n          type: string\n        name:\n          type: string\n        rssi:\n          format: int32\n          type: integer\n        service_uuids:\n          items:\n            type: string\n          type: array\n      required:\n        - bond_date\n        - device_class\n        - device_type\n        - last_connect_date\n        - mac_address\n        - name\n        - rssi\n        - service_uuids\n      title: RemoteSink\n      type: object\n    ScanfordevicesRequest:\n      example:\n        clear_results: true\n        enable: true\n        timeout: 60\n      properties:\n        clear_results:\n          type: boolean\n        enable:\n          type: boolean\n        timeout:\n          format: int32\n          type: integer\n      required:\n        - enable\n        - clear_results\n        - timeout\n      title: ScanfordevicesRequest\n      type: object\n    SetEqualizerValuesRequest:\n      example:\n        high_shelf:\n          gain_db: 0\n        low_shelf:\n          gain_db: 0\n      properties:\n        high_shelf:\n          $ref: \"#/components/schemas/HighShelf1\"\n        low_shelf:\n          $ref: \"#/components/schemas/LowShelf1\"\n      required:\n        - low_shelf\n        - high_shelf\n      title: SetEqualizerValuesRequest\n      type: object\n    SetEurekaInfoRequest:\n      example:\n        name: Living Room\n        opt_in:\n          opencast: true\n          preview_channel: true\n          remote_ducking: true\n          stats: true\n        settings:\n          control_notifications: 2\n      properties:\n        name:\n          type: string\n        opt_in:\n          $ref: \"#/components/schemas/OptIn1\"\n        settings:\n          $ref: \"#/components/schemas/Settings1\"\n      required:\n        - name\n        - settings\n        - opt_in\n      title: SetEurekaInfoRequest\n      type: object\n    Settings:\n      example:\n        closed_caption: {}\n        control_notifications: 1\n        country_code: IN\n        locale: en-US\n        network_standby: 0\n        system_sound_effects: true\n        time_format: 1\n        timezone: Asia/Kolkata\n        wake_on_cast: 1\n      properties:\n        closed_caption:\n          type: object\n        control_notifications:\n          format: int32\n          type: integer\n        country_code:\n          type: string\n        locale:\n          type: string\n        network_standby:\n          format: int32\n          type: integer\n        system_sound_effects:\n          type: boolean\n        time_format:\n          format: int32\n          type: integer\n        timezone:\n          type: string\n        wake_on_cast:\n          format: int32\n          type: integer\n      required:\n        - closed_caption\n        - control_notifications\n        - country_code\n        - locale\n        - network_standby\n        - system_sound_effects\n        - time_format\n        - timezone\n        - wake_on_cast\n      title: Settings\n      type: object\n    Settings1:\n      example:\n        control_notifications: 2\n      properties:\n        control_notifications:\n          format: int32\n          type: integer\n      required:\n        - control_notifications\n      title: Settings1\n      type: object\n    Setup:\n      example:\n        qr_ssid_suffix: \"\"\n        setup_state: 60\n        ssid_suffix: k\n        stats:\n          num_check_connectivity: 0\n          num_connect_wifi: 0\n          num_connected_wifi_not_saved: 0\n          num_initial_eureka_info: 0\n          num_obtain_ip: 0\n        tos_accepted: true\n      properties:\n        qr_ssid_suffix:\n          type: string\n        setup_state:\n          format: int32\n          type: integer\n        ssid_suffix:\n          type: string\n        stats:\n          $ref: \"#/components/schemas/Stats\"\n        tos_accepted:\n          type: boolean\n      required:\n        - qr_ssid_suffix\n        - setup_state\n        - ssid_suffix\n        - stats\n        - tos_accepted\n      title: Setup\n      type: object\n    Sign:\n      example:\n        certificate: |\n          -----BEGIN CERTIFICATE-----\n          MIID...Oeb0\n          -----END CERTIFICATE-----\n        intermediate_certs:\n          - |\n            -----BEGIN CERTIFICATE-----\n            MIID...O/bYS\n            -----END CERTIFICATE-----\n        nonce: \"1234512345\"\n        signed_data: Rr5Q...\n      properties:\n        certificate:\n          type: string\n        intermediate_certs:\n          items:\n            type: string\n          type: array\n        nonce:\n          type: string\n        signed_data:\n          type: string\n      required:\n        - certificate\n        - intermediate_certs\n        - nonce\n        - signed_data\n      title: Sign\n      type: object\n    Stats:\n      example:\n        num_check_connectivity: 0\n        num_connect_wifi: 0\n        num_connected_wifi_not_saved: 0\n        num_initial_eureka_info: 0\n        num_obtain_ip: 0\n      properties:\n        num_check_connectivity:\n          format: int32\n          type: integer\n        num_connect_wifi:\n          format: int32\n          type: integer\n        num_connected_wifi_not_saved:\n          format: int32\n          type: integer\n        num_initial_eureka_info:\n          format: int32\n          type: integer\n        num_obtain_ip:\n          format: int32\n          type: integer\n      required:\n        - num_check_connectivity\n        - num_connect_wifi\n        - num_connected_wifi_not_saved\n        - num_initial_eureka_info\n        - num_obtain_ip\n      title: Stats\n      type: object\n    TestInternetDownloadSpeedRequest:\n      example:\n        url: https://storage.googleapis.com/reliability-speedtest/random.txt\n      properties:\n        url:\n          type: string\n      required:\n        - url\n      title: TestInternetDownloadSpeedRequest\n      type: object\n    TimePattern:\n      example:\n        hour: 6\n        minute: 50\n        second: 0\n      properties:\n        hour:\n          format: int32\n          type: integer\n        minute:\n          format: int32\n          type: integer\n        second:\n          format: int32\n          type: integer\n      required:\n        - hour\n        - minute\n        - second\n      title: TimePattern\n      type: object\n    Timer:\n      example:\n        fire_time: 1516176765589\n        id: timer/xxx\n        original_duration: 20000\n        status: 1\n      properties:\n        fire_time:\n          format: int64\n          type: integer\n        id:\n          type: string\n        original_duration:\n          format: int32\n          type: integer\n        status:\n          format: int32\n          type: integer\n      required:\n        - fire_time\n        - id\n        - original_duration\n        - status\n      title: Timer\n      type: object\n    Timezone:\n      example:\n        display_string: India Standard Time (Kolkata)\n        offset: 330\n      properties:\n        display_string:\n          type: string\n        offset:\n          format: int32\n          type: integer\n      required:\n        - display_string\n        - offset\n      title: Timezone\n      type: object\n    UserEq:\n      example:\n        high_shelf:\n          frequency: 4500\n          gain_db: 0\n          quality: 0.707\n        low_shelf:\n          frequency: 150\n          gain_db: 0\n          quality: 0.707\n        max_peaking_eqs: 0\n        peaking_eqs: []\n      properties:\n        high_shelf:\n          $ref: \"#/components/schemas/HighShelf\"\n        low_shelf:\n          $ref: \"#/components/schemas/LowShelf\"\n        max_peaking_eqs:\n          format: int32\n          type: integer\n        peaking_eqs:\n          items:\n            type: string\n          type: array\n      required:\n        - high_shelf\n        - low_shelf\n        - max_peaking_eqs\n        - peaking_eqs\n      title: UserEq\n      type: object\n    Wifi:\n      example:\n        bssid: a0:ab:...\n        has_changes: false\n        noise_level: -90\n        signal_level: -50\n        ssid: Nucl...\n        wpa_configured: true\n        wpa_id: 1\n        wpa_state: 10\n      properties:\n        bssid:\n          type: string\n        has_changes:\n          type: boolean\n        noise_level:\n          format: int32\n          type: integer\n        signal_level:\n          format: int32\n          type: integer\n        ssid:\n          type: string\n        wpa_configured:\n          type: boolean\n        wpa_id:\n          format: int32\n          type: integer\n        wpa_state:\n          format: int32\n          type: integer\n      required:\n        - bssid\n        - has_changes\n        - noise_level\n        - signal_level\n        - ssid\n        - wpa_configured\n        - wpa_id\n        - wpa_state\n      title: Wifi\n      type: object\n    Window:\n      example:\n        days:\n          - 0\n          - 1\n          - 2\n          - 3\n          - 4\n          - 5\n          - 6\n        length_hours: 6\n        start_hour: 23\n      properties:\n        days:\n          items:\n            format: int32\n            type: integer\n          type: array\n        length_hours:\n          format: int32\n          type: integer\n        start_hour:\n          format: int32\n          type: integer\n      required:\n        - days\n        - length_hours\n        - start_hour\n      title: Window\n      type: object\n    Window2:\n      example:\n        days:\n          - 0\n          - 1\n          - 2\n          - 3\n          - 4\n          - 5\n          - 6\n        length_hours: 8\n        start_hour: 22\n      properties:\n        days:\n          items:\n            format: int32\n            type: integer\n          type: array\n        length_hours:\n          type: number\n        start_hour:\n          type: number\n      required:\n        - days\n        - length_hours\n        - start_hour\n      title: Window2\n      type: object\n  securitySchemes:\n    cast-local-authorization-token:\n      description: Local authorization token. For more details, check the [Authentication section](#section/Google-Home-Local-API/Authentication).\n      in: header\n      name: cast-local-authorization-token\n      type: apiKey\n      x-testValue: \"\"\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/google.home/2.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/google.home/2.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/bluetooth/connect\": post: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}