{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-remotebuildexecution-v1alpha-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-remotebuildexecution-v1alpha-swagger.yaml",
			"byteSize": 86289,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  description: Supplies a Remote Execution API service for tools such as bazel.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Remote Build Execution\n  version: v1alpha\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: google\n      url: https://remotebuildexecution.googleapis.com/$discovery/rest?version=v1alpha\n      version: v1\n  x-preferred: false\n  x-providerName: googleapis.com\n  x-serviceName: remotebuildexecution\nexternalDocs:\n  url: https://cloud.google.com/remote-build-execution/docs/\ntags:\n  - name: projects\npaths:\n  \"/v1alpha/{name}\":\n    delete:\n      description: \u003e-\n        Deletes the specified worker pool.\n\n        Returns a long running operation, which contains a `google.protobuf.Empty`\n\n        response on completion.\n\n        While the long running operation is in progress, any call to\n\n        `GetWorkerPool` returns a worker pool in state `DELETING`.\n      operationId: remotebuildexecution.projects.instances.workerpools.delete\n      parameters:\n        - description: \u003e-\n            Name of the worker pool to delete.\n\n            Format:\n\n            `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`.\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/GoogleLongrunningOperation\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n    get:\n      description: Returns the specified worker pool.\n      operationId: remotebuildexecution.projects.instances.workerpools.get\n      parameters:\n        - description: \u003e-\n            Name of the worker pool to retrieve.\n\n            Format:\n\n            `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`.\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdmin\\\n                  V1alphaWorkerPool\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    patch:\n      description: \u003e-\n        Updates an existing worker pool with a specified size and/or\n        configuration.\n\n        Returns a long running operation, which contains a worker pool on\n\n        completion. While the long running operation is in progress, any call to\n\n        `GetWorkerPool` returns a worker pool in state `UPDATING`.\n      operationId: remotebuildexecution.projects.instances.workerpools.patch\n      parameters:\n        - description: \u003e-\n            WorkerPool resource name formatted as:\n\n            `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`.\n\n            name should not be populated when creating a worker pool since it is\n\n            provided in the `poolId` field.\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1\\\n                alphaUpdateWorkerPoolRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/GoogleLongrunningOperation\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n  \"/v1alpha/{parent}/instances\":\n    get:\n      description: Lists instances in a project.\n      operationId: remotebuildexecution.projects.instances.list\n      parameters:\n        - description: |-\n            Resource name of the project.\n            Format: `projects/[PROJECT_ID]`.\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdmin\\\n                  V1alphaListInstancesResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Creates a new instance in the specified region.\n\n        Returns a long running operation which contains an instance on completion.\n\n        While the long running operation is in progress, any call to `GetInstance`\n\n        returns an instance in state `CREATING`.\n      operationId: remotebuildexecution.projects.instances.create\n      parameters:\n        - description: |-\n            Resource name of the project containing the instance.\n            Format: `projects/[PROJECT_ID]`.\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1\\\n                alphaCreateInstanceRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/GoogleLongrunningOperation\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n  \"/v1alpha/{parent}/workerpools\":\n    get:\n      description: Lists worker pools in an instance.\n      operationId: remotebuildexecution.projects.instances.workerpools.list\n      parameters:\n        - description: \u003e-\n            Optional. A filter expression that filters resources listed in\n\n            the response. The expression must specify the field name, a comparison\n\n            operator, and the value that you want to use for filtering. The value\n\n            must be a string, a number, or a boolean. String values are\n\n            case-insensitive.\n\n            The comparison operator must be either `:`, `=`, `!=`, `\u003e`, `\u003e=`, `\u003c=` or\n\n            `\u003c`.\n\n            The `:` operator can be used with string fields to match substrings.\n\n            For non-string fields it is equivalent to the `=` operator.\n\n            The `:*` comparison can be used to test  whether a key has been defined.\n\n\n            You can also filter on nested fields.\n\n\n            To filter on multiple expressions, you can separate expression using\n\n            `AND` and `OR` operators, using parentheses to specify precedence. If\n\n            neither operator is specified, `AND` is assumed.\n\n\n            Examples:\n\n\n            Include only pools with more than 100 reserved workers:\n\n            `(worker_count \u003e 100) (worker_config.reserved = true)`\n\n\n            Include only pools with a certain label or machines of the n1-standard\n\n            family:\n\n            `worker_config.labels.key1 : * OR worker_config.machine_type: n1-standard`\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: |-\n            Resource name of the instance.\n            Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdmin\\\n                  V1alphaListWorkerPoolsResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Creates a new worker pool with a specified size and configuration.\n        Returns a long running operation which contains a worker pool on\n        completion. While the long running operation is in progress, any call to\n        `GetWorkerPool` returns a worker pool in state `CREATING`.\n      operationId: remotebuildexecution.projects.instances.workerpools.create\n      parameters:\n        - description: \u003e-\n            Resource name of the instance in which to create the new worker\n            pool.\n\n            Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1\\\n                alphaCreateWorkerPoolRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/GoogleLongrunningOperation\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\nservers:\n  - url: https://admin-remotebuildexecution.googleapis.com/\ncomponents:\n  parameters:\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n          - media\n          - proto\n        default: json\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be\n        any arbitrary string assigned to a user, but should not exceed 40\n        characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        type: string\n        enum:\n          - \"1\"\n          - \"2\"\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n    Oauth2c:\n      description: Oauth 2.0 accessCode authentication\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n  schemas:\n    BuildBazelRemoteExecutionV2Action:\n      description: \u003e-\n        An `Action` captures all the information about an execution which is\n        required\n\n        to reproduce it.\n\n\n        `Action`s are the core component of the [Execution] service. A single\n\n        `Action` represents a repeatable action that can be performed by the\n\n        execution service. `Action`s can be succinctly identified by the digest of\n\n        their wire format encoding and, once an `Action` has been executed, will be\n\n        cached in the action cache. Future requests can then use the cached result\n\n        rather than needing to run afresh.\n\n\n        When a server completes execution of an\n\n        Action, it MAY choose to\n\n        cache the result in\n\n        the ActionCache unless\n\n        `do_not_cache` is `true`. Clients SHOULD expect the server to do so. By\n\n        default, future calls to\n\n        Execute the same\n\n        `Action` will also serve their results from the cache. Clients must take care\n\n        to understand the caching behaviour. Ideally, all `Action`s will be\n\n        reproducible so that serving a result from cache is always desirable and\n\n        correct.\n      properties:\n        commandDigest:\n          $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2Digest\"\n        doNotCache:\n          description: |-\n            If true, then the `Action`'s result cannot be cached, and in-flight\n            requests for the same `Action` may not be merged.\n          type: boolean\n        inputRootDigest:\n          $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2Digest\"\n        timeout:\n          description: \u003e-\n            A timeout after which the execution should be killed. If the timeout\n            is\n\n            absent, then the client is specifying that the execution should continue\n\n            as long as the server will let it. The server SHOULD impose a timeout if\n\n            the client does not specify one, however, if the client does specify a\n\n            timeout that is longer than the server's maximum timeout, the server MUST\n\n            reject the request.\n\n\n            The timeout is a part of the\n\n            Action message, and\n\n            therefore two `Actions` with different timeouts are different, even if they\n\n            are otherwise identical. This is because, if they were not, running an\n\n            `Action` with a lower timeout than is required might result in a cache hit\n\n            from an execution run with a longer timeout, hiding the fact that the\n\n            timeout is too short. By encoding it directly in the `Action`, a lower\n\n            timeout will result in a cache miss and the execution timeout will fail\n\n            immediately, rather than whenever the cache entry gets evicted.\n          format: google-duration\n          type: string\n      type: object\n    BuildBazelRemoteExecutionV2ActionResult:\n      description: |-\n        An ActionResult represents the result of an\n        Action being run.\n      properties:\n        executionMetadata:\n          $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2ExecutedActionMeta\\\n            data\"\n        exitCode:\n          description: The exit code of the command.\n          format: int32\n          type: integer\n        outputDirectories:\n          description: \u003e-\n            The output directories of the action. For each output directory\n            requested\n\n            in the `output_directories` field of the Action, if the corresponding\n\n            directory existed after the action completed, a single entry will be\n\n            present in the output list, which will contain the digest of a\n\n            Tree message containing the\n\n            directory tree, and the path equal exactly to the corresponding Action\n\n            output_directories member.\n\n\n            As an example, suppose the Action had an output directory `a/b/dir` and the\n\n            execution produced the following contents in `a/b/dir`: a file named `bar`\n\n            and a directory named `foo` with an executable file named `baz`. Then,\n\n            output_directory will contain (hashes shortened for readability):\n\n\n            ```json\n\n            // OutputDirectory proto:\n\n            {\n              path: \"a/b/dir\"\n              tree_digest: {\n                hash: \"4a73bc9d03...\",\n                size: 55\n              }\n            }\n\n            // Tree proto with hash \"4a73bc9d03...\" and size 55:\n\n            {\n              root: {\n                files: [\n                  {\n                    name: \"bar\",\n                    digest: {\n                      hash: \"4a73bc9d03...\",\n                      size: 65534\n                    }\n                  }\n                ],\n                directories: [\n                  {\n                    name: \"foo\",\n                    digest: {\n                      hash: \"4cf2eda940...\",\n                      size: 43\n                    }\n                  }\n                ]\n              }\n              children : {\n                // (Directory proto with hash \"4cf2eda940...\" and size 43)\n                files: [\n                  {\n                    name: \"baz\",\n                    digest: {\n                      hash: \"b2c941073e...\",\n                      size: 1294,\n                    },\n                    is_executable: true\n                  }\n                ]\n              }\n            }\n\n            ```\n\n            If an output of the same name was found, but was not a directory, the\n\n            server will return a FAILED_PRECONDITION.\n          items:\n            $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2OutputDirectory\"\n          type: array\n        outputDirectorySymlinks:\n          description: \u003e-\n            The output directories of the action that are symbolic links to\n            other\n\n            directories. Those may be links to other output directories, or input\n\n            directories, or even absolute paths outside of the working directory,\n\n            if the server supports\n\n            SymlinkAbsolutePathStrategy.ALLOWED.\n\n            For each output directory requested in the `output_directories` field of\n\n            the Action, if the directory existed after the action completed, a\n\n            single entry will be present either in this field, or in the\n\n            `output_directories` field, if the directory was not a symbolic link.\n\n\n            If an output of the same name was found, but was a symbolic link to a file\n\n            instead of a directory, the server will return a FAILED_PRECONDITION.\n\n            If the action does not produce the requested output, then that output\n\n            will be omitted from the list. The server is free to arrange the output\n\n            list as desired; clients MUST NOT assume that the output list is sorted.\n          items:\n            $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2OutputSymlink\"\n          type: array\n        outputFileSymlinks:\n          description: \u003e-\n            The output files of the action that are symbolic links to other\n            files. Those\n\n            may be links to other output files, or input files, or even absolute paths\n\n            outside of the working directory, if the server supports\n\n            SymlinkAbsolutePathStrategy.ALLOWED.\n\n            For each output file requested in the `output_files` field of the Action,\n\n            if the corresponding file existed after\n\n            the action completed, a single entry will be present either in this field,\n\n            or in the `output_files` field, if the file was not a symbolic link.\n\n\n            If an output symbolic link of the same name was found, but its target\n\n            type was not a regular file, the server will return a FAILED_PRECONDITION.\n\n            If the action does not produce the requested output, then that output\n\n            will be omitted from the list. The server is free to arrange the output\n\n            list as desired; clients MUST NOT assume that the output list is sorted.\n          items:\n            $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2OutputSymlink\"\n          type: array\n        outputFiles:\n          description: \u003e-\n            The output files of the action. For each output file requested in\n            the\n\n            `output_files` field of the Action, if the corresponding file existed after\n\n            the action completed, a single entry will be present either in this field,\n\n            or the `output_file_symlinks` field if the file was a symbolic link to\n\n            another file.\n\n\n            If an output of the same name was found, but was a directory rather\n\n            than a regular file, the server will return a FAILED_PRECONDITION.\n\n            If the action does not produce the requested output, then that output\n\n            will be omitted from the list. The server is free to arrange the output\n\n            list as desired; clients MUST NOT assume that the output list is sorted.\n          items:\n            $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2OutputFile\"\n          type: array\n        stderrDigest:\n          $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2Digest\"\n        stderrRaw:\n          description: \u003e-\n            The standard error buffer of the action. The server SHOULD NOT\n            inline\n\n            stderr unless requested by the client in the\n\n            GetActionResultRequest\n\n            message. The server MAY omit inlining, even if requested, and MUST do so if inlining\n\n            would cause the response to exceed message size limits.\n          format: byte\n          type: string\n        stdoutDigest:\n          $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2Digest\"\n        stdoutRaw:\n          description: \u003e-\n            The standard output buffer of the action. The server SHOULD NOT\n            inline\n\n            stdout unless requested by the client in the\n\n            GetActionResultRequest\n\n            message. The server MAY omit inlining, even if requested, and MUST do so if inlining\n\n            would cause the response to exceed message size limits.\n          format: byte\n          type: string\n      type: object\n    BuildBazelRemoteExecutionV2Command:\n      description: \u003e-\n        A `Command` is the actual command executed by a worker running an\n\n        Action and specifications of its\n\n        environment.\n\n\n        Except as otherwise required, the environment (such as which system\n\n        libraries or binaries are available, and what filesystems are mounted where)\n\n        is defined by and specific to the implementation of the remote execution API.\n      properties:\n        arguments:\n          description: \u003e-\n            The arguments to the command. The first argument must be the path to\n            the\n\n            executable, which must be either a relative path, in which case it is\n\n            evaluated with respect to the input root, or an absolute path.\n          items:\n            type: string\n          type: array\n        environmentVariables:\n          description: \u003e-\n            The environment variables to set when running the program. The\n            worker may\n\n            provide its own default environment variables; these defaults can be\n\n            overridden using this field. Additional variables can also be specified.\n\n\n            In order to ensure that equivalent\n\n            Commands always hash to the same\n\n            value, the environment variables MUST be lexicographically sorted by name.\n\n            Sorting of strings is done by code point, equivalently, by the UTF-8 bytes.\n          items:\n            $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2CommandEnvironme\\\n              ntVariable\"\n          type: array\n        outputDirectories:\n          description: \u003e-\n            A list of the output directories that the client expects to retrieve\n            from\n\n            the action. Only the listed directories will be returned (an entire\n\n            directory structure will be returned as a\n\n            Tree message digest, see\n\n            OutputDirectory), as\n\n            well as files listed in `output_files`. Other files or directories that\n\n            may be created during command execution are discarded.\n\n\n            The paths are relative to the working directory of the action execution.\n\n            The paths are specified using a single forward slash (`/`) as a path\n\n            separator, even if the execution platform natively uses a different\n\n            separator. The path MUST NOT include a trailing slash, nor a leading slash,\n\n            being a relative path. The special value of empty string is allowed,\n\n            although not recommended, and can be used to capture the entire working\n\n            directory tree, including inputs.\n\n\n            In order to ensure consistent hashing of the same Action, the output paths\n\n            MUST be sorted lexicographically by code point (or, equivalently, by UTF-8\n\n            bytes).\n\n\n            An output directory cannot be duplicated or have the same path as any of\n\n            the listed output files. An output directory is allowed to be a parent of\n\n            another output directory.\n\n\n            Directories leading up to the output directories (but not the output\n\n            directories themselves) are created by the worker prior to execution, even\n\n            if they are not explicitly part of the input root.\n          items:\n            type: string\n          type: array\n        outputFiles:\n          description: \u003e-\n            A list of the output files that the client expects to retrieve from\n            the\n\n            action. Only the listed files, as well as directories listed in\n\n            `output_directories`, will be returned to the client as output.\n\n            Other files or directories that may be created during command execution\n\n            are discarded.\n\n\n            The paths are relative to the working directory of the action execution.\n\n            The paths are specified using a single forward slash (`/`) as a path\n\n            separator, even if the execution platform natively uses a different\n\n            separator. The path MUST NOT include a trailing slash, nor a leading slash,\n\n            being a relative path.\n\n\n            In order to ensure consistent hashing of the same Action, the output paths\n\n            MUST be sorted lexicographically by code point (or, equivalently, by UTF-8\n\n            bytes).\n\n\n            An output file cannot be duplicated, be a parent of another output file, or\n\n            have the same path as any of the listed output directories.\n\n\n            Directories leading up to the output files are created by the worker prior\n\n            to execution, even if they are not explicitly part of the input root.\n          items:\n            type: string\n          type: array\n        platform:\n          $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2Platform\"\n        workingDirectory:\n          description: \u003e-\n            The working directory, relative to the input root, for the command\n            to run\n\n            in. It must be a directory which exists in the input tree. If it is left\n\n            empty, then the action is run in the input root.\n          type: string\n      type: object\n    BuildBazelRemoteExecutionV2CommandEnvironmentVariable:\n      description: |-\n        An `EnvironmentVariable` is one variable to set in the running program's\n        environment.\n      properties:\n        name:\n          description: The variable name.\n          type: string\n        value:\n          description: The variable value.\n          type: string\n      type: object\n    BuildBazelRemoteExecutionV2Digest:\n      description: \u003e-\n        A content digest. A digest for a given blob consists of the size of the\n        blob\n\n        and its hash. The hash algorithm to use is defined by the server, but servers\n\n        SHOULD use SHA-256.\n\n\n        The size is considered to be an integral part of the digest and cannot be\n\n        separated. That is, even if the `hash` field is correctly specified but\n\n        `size_bytes` is not, the server MUST reject the request.\n\n\n        The reason for including the size in the digest is as follows: in a great\n\n        many cases, the server needs to know the size of the blob it is about to work\n\n        with prior to starting an operation with it, such as flattening Merkle tree\n\n        structures or streaming it to a worker. Technically, the server could\n\n        implement a separate metadata store, but this results in a significantly more\n\n        complicated implementation as opposed to having the client specify the size\n\n        up-front (or storing the size along with the digest in every message where\n\n        digests are embedded). This does mean that the API leaks some implementation\n\n        details of (what we consider to be) a reasonable server implementation, but\n\n        we consider this to be a worthwhile tradeoff.\n\n\n        When a `Digest` is used to refer to a proto message, it always refers to the\n\n        message in binary encoded form. To ensure consistent hashing, clients and\n\n        servers MUST ensure that they serialize messages according to the following\n\n        rules, even if there are alternate valid encodings for the same message:\n\n\n        * Fields are serialized in tag order.\n\n        * There are no unknown fields.\n\n        * There are no duplicate fields.\n\n        * Fields are serialized according to the default semantics for their type.\n\n\n        Most protocol buffer implementations will always follow these rules when\n\n        serializing, but care should be taken to avoid shortcuts. For instance,\n\n        concatenating two messages to merge them may produce duplicate fields.\n      properties:\n        hash:\n          description: \u003e-\n            The hash. In the case of SHA-256, it will always be a lowercase hex\n            string\n\n            exactly 64 characters long.\n          type: string\n        sizeBytes:\n          description: The size of the blob, in bytes.\n          format: int64\n          type: string\n      type: object\n    BuildBazelRemoteExecutionV2Directory:\n      description: \u003e-\n        A `Directory` represents a directory node in a file tree, containing\n        zero or\n\n        more children FileNodes,\n\n        DirectoryNodes and\n\n        SymlinkNodes.\n\n        Each `Node` contains its name in the directory, either the digest of its\n\n        content (either a file blob or a `Directory` proto) or a symlink target, as\n\n        well as possibly some metadata about the file or directory.\n\n\n        In order to ensure that two equivalent directory trees hash to the same\n\n        value, the following restrictions MUST be obeyed when constructing a\n\n        a `Directory`:\n\n\n        * Every child in the directory must have a path of exactly one segment.\n          Multiple levels of directory hierarchy may not be collapsed.\n        * Each child in the directory must have a unique path segment (file name).\n          Note that while the API itself is case-sensitive, the environment where\n          the Action is executed may or may not be case-sensitive. That is, it is\n          legal to call the API with a Directory that has both \"Foo\" and \"foo\" as\n          children, but the Action may be rejected by the remote system upon\n          execution.\n        * The files, directories and symlinks in the directory must each be sorted\n          in lexicographical order by path. The path strings must be sorted by code\n          point, equivalently, by UTF-8 bytes.\n\n        A `Directory` that obeys the restrictions is said to be in canonical form.\n\n\n        As an example, the following could be used for a file named `bar` and a\n\n        directory named `foo` with an executable file named `baz` (hashes shortened\n\n        for readability):\n\n\n        ```json\n\n        // (Directory proto)\n\n        {\n          files: [\n            {\n              name: \"bar\",\n              digest: {\n                hash: \"4a73bc9d03...\",\n                size: 65534\n              }\n            }\n          ],\n          directories: [\n            {\n              name: \"foo\",\n              digest: {\n                hash: \"4cf2eda940...\",\n                size: 43\n              }\n            }\n          ]\n        }\n\n\n        // (Directory proto with hash \"4cf2eda940...\" and size 43)\n\n        {\n          files: [\n            {\n              name: \"baz\",\n              digest: {\n                hash: \"b2c941073e...\",\n                size: 1294,\n              },\n              is_executable: true\n            }\n          ]\n        }\n\n        ```\n      properties:\n        directories:\n          description: The subdirectories in the directory.\n          items:\n            $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2DirectoryNode\"\n          type: array\n        files:\n          description: The files in the directory.\n          items:\n            $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2FileNode\"\n          type: array\n        symlinks:\n          description: The symlinks in the directory.\n          items:\n            $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2SymlinkNode\"\n          type: array\n      type: object\n    BuildBazelRemoteExecutionV2DirectoryNode:\n      description: |-\n        A `DirectoryNode` represents a child of a\n        Directory which is itself\n        a `Directory` and its associated metadata.\n      properties:\n        digest:\n          $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2Digest\"\n        name:\n          description: The name of the directory.\n          type: string\n      type: object\n    BuildBazelRemoteExecutionV2ExecuteOperationMetadata:\n      description: |-\n        Metadata about an ongoing\n        execution, which\n        will be contained in the metadata\n        field of the\n        Operation.\n      properties:\n        actionDigest:\n          $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2Digest\"\n        stage:\n          description: The current stage of execution.\n          enum:\n            - UNKNOWN\n            - CACHE_CHECK\n            - QUEUED\n            - EXECUTING\n            - COMPLETED\n          type: string\n        stderrStreamName:\n          description: |-\n            If set, the client can use this name with\n            ByteStream.Read to stream the\n            standard error.\n          type: string\n        stdoutStreamName:\n          description: |-\n            If set, the client can use this name with\n            ByteStream.Read to stream the\n            standard output.\n          type: string\n      type: object\n    BuildBazelRemoteExecutionV2ExecuteResponse:\n      description: |-\n        The response message for\n        Execution.Execute,\n        which will be contained in the response\n        field of the\n        Operation.\n      properties:\n        cachedResult:\n          description: True if the result was served from cache, false if it was executed.\n          type: boolean\n        message:\n          description: \u003e-\n            Freeform informational message with details on the execution of the\n            action\n\n            that may be displayed to the user upon failure or when requested explicitly.\n          type: string\n        result:\n          $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2ActionResult\"\n        serverLogs:\n          additionalProperties:\n            $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2LogFile\"\n          description: \u003e-\n            An optional list of additional log outputs the server wishes to\n            provide. A\n\n            server can use this to return execution-specific logs however it wishes.\n\n            This is intended primarily to make it easier for users to debug issues that\n\n            may be outside of the actual job execution, such as by identifying the\n\n            worker executing the action or by providing logs from the worker's setup\n\n            phase. The keys SHOULD be human readable so that a client can display them\n\n            to a user.\n          type: object\n        status:\n          $ref: \"#/components/schemas/GoogleRpcStatus\"\n      type: object\n    BuildBazelRemoteExecutionV2ExecutedActionMetadata:\n      description: ExecutedActionMetadata contains details about a completed execution.\n      properties:\n        executionCompletedTimestamp:\n          description: When the worker completed executing the action command.\n          format: google-datetime\n          type: string\n        executionStartTimestamp:\n          description: When the worker started executing the action command.\n          format: google-datetime\n          type: string\n        inputFetchCompletedTimestamp:\n          description: When the worker finished fetching action inputs.\n          format: google-datetime\n          type: string\n        inputFetchStartTimestamp:\n          description: When the worker started fetching action inputs.\n          format: google-datetime\n          type: string\n        outputUploadCompletedTimestamp:\n          description: When the worker finished uploading action outputs.\n          format: google-datetime\n          type: string\n        outputUploadStartTimestamp:\n          description: When the worker started uploading action outputs.\n          format: google-datetime\n          type: string\n        queuedTimestamp:\n          description: When was the action added to the queue.\n          format: google-datetime\n          type: string\n        worker:\n          description: The name of the worker which ran the execution.\n          type: string\n        workerCompletedTimestamp:\n          description: When the worker completed the action, including all stages.\n          format: google-datetime\n          type: string\n        workerStartTimestamp:\n          description: When the worker received the action.\n          format: google-datetime\n          type: string\n      type: object\n    BuildBazelRemoteExecutionV2FileNode:\n      description: A `FileNode` represents a single file and associated metadata.\n      properties:\n        digest:\n          $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2Digest\"\n        isExecutable:\n          description: True if file is executable, false otherwise.\n          type: boolean\n        name:\n          description: The name of the file.\n          type: string\n      type: object\n    BuildBazelRemoteExecutionV2LogFile:\n      description: A `LogFile` is a log stored in the CAS.\n      properties:\n        digest:\n          $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2Digest\"\n        humanReadable:\n          description: \u003e-\n            This is a hint as to the purpose of the log, and is set to true if\n            the log\n\n            is human-readable text that can be usefully displayed to a user, and false\n\n            otherwise. For instance, if a command-line client wishes to print the\n\n            server logs to the terminal for a failed action, this allows it to avoid\n\n            displaying a binary file.\n          type: boolean\n      type: object\n    BuildBazelRemoteExecutionV2OutputDirectory:\n      description: \u003e-\n        An `OutputDirectory` is the output in an `ActionResult` corresponding to\n        a\n\n        directory's full contents rather than a single file.\n      properties:\n        path:\n          description: \u003e-\n            The full path of the directory relative to the working directory.\n            The path\n\n            separator is a forward slash `/`. Since this is a relative path, it MUST\n\n            NOT begin with a leading forward slash. The empty string value is allowed,\n\n            and it denotes the entire working directory.\n          type: string\n        treeDigest:\n          $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2Digest\"\n      type: object\n    BuildBazelRemoteExecutionV2OutputFile:\n      description: |-\n        An `OutputFile` is similar to a\n        FileNode, but it is used as an\n        output in an `ActionResult`. It allows a full file path rather than\n        only a name.\n      properties:\n        contents:\n          description: \u003e-\n            The contents of the file if inlining was requested. The server\n            SHOULD NOT inline\n\n            file contents unless requested by the client in the\n\n            GetActionResultRequest\n\n            message. The server MAY omit inlining, even if requested, and MUST do so if inlining\n\n            would cause the response to exceed message size limits.\n          format: byte\n          type: string\n        digest:\n          $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2Digest\"\n        isExecutable:\n          description: True if file is executable, false otherwise.\n          type: boolean\n        path:\n          description: \u003e-\n            The full path of the file relative to the working directory,\n            including the\n\n            filename. The path separator is a forward slash `/`. Since this is a\n\n            relative path, it MUST NOT begin with a leading forward slash.\n          type: string\n      type: object\n    BuildBazelRemoteExecutionV2OutputSymlink:\n      description: |-\n        An `OutputSymlink` is similar to a\n        Symlink, but it is used as an\n        output in an `ActionResult`.\n\n        `OutputSymlink` is binary-compatible with `SymlinkNode`.\n      properties:\n        path:\n          description: \u003e-\n            The full path of the symlink relative to the working directory,\n            including the\n\n            filename. The path separator is a forward slash `/`. Since this is a\n\n            relative path, it MUST NOT begin with a leading forward slash.\n          type: string\n        target:\n          description: \u003e-\n            The target path of the symlink. The path separator is a forward\n            slash `/`.\n\n            The target path can be relative to the parent directory of the symlink or\n\n            it can be an absolute path starting with `/`. Support for absolute paths\n\n            can be checked using the Capabilities\n\n            API. The canonical form forbids the substrings `/./` and `//` in the target\n\n            path. `..` components are allowed anywhere in the target path.\n          type: string\n      type: object\n    BuildBazelRemoteExecutionV2Platform:\n      description: \u003e-\n        A `Platform` is a set of requirements, such as hardware, operating\n        system, or\n\n        compiler toolchain, for an\n\n        Action's execution\n\n        environment. A `Platform` is represented as a series of key-value pairs\n\n        representing the properties that are required of the platform.\n      properties:\n        properties:\n          description: \u003e-\n            The properties that make up this platform. In order to ensure that\n\n            equivalent `Platform`s always hash to the same value, the properties MUST\n\n            be lexicographically sorted by name, and then by value. Sorting of strings\n\n            is done by code point, equivalently, by the UTF-8 bytes.\n          items:\n            $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2PlatformProperty\"\n          type: array\n      type: object\n    BuildBazelRemoteExecutionV2PlatformProperty:\n      description: \u003e-\n        A single property for the environment. The server is responsible for\n\n        specifying the property `name`s that it accepts. If an unknown `name` is\n\n        provided in the requirements for an\n\n        Action, the server SHOULD\n\n        reject the execution request. If permitted by the server, the same `name`\n\n        may occur multiple times.\n\n\n        The server is also responsible for specifying the interpretation of\n\n        property `value`s. For instance, a property describing how much RAM must be\n\n        available may be interpreted as allowing a worker with 16GB to fulfill a\n\n        request for 8GB, while a property describing the OS environment on which\n\n        the action must be performed may require an exact match with the worker's\n\n        OS.\n\n\n        The server MAY use the `value` of one or more properties to determine how\n\n        it sets up the execution environment, such as by making specific system\n\n        files available to the worker.\n      properties:\n        name:\n          description: The property name.\n          type: string\n        value:\n          description: The property value.\n          type: string\n      type: object\n    BuildBazelRemoteExecutionV2RequestMetadata:\n      description: \u003e-\n        An optional Metadata to attach to any RPC request to tell the server\n        about an\n\n        external context of the request. The server may use this for logging or other\n\n        purposes. To use it, the client attaches the header to the call using the\n\n        canonical proto serialization:\n\n\n        * name: `build.bazel.remote.execution.v2.requestmetadata-bin`\n\n        * contents: the base64 encoded binary `RequestMetadata` message.\n\n        Note: the gRPC library serializes binary headers encoded in base 64 by\n\n        default (https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#requests).\n\n        Therefore, if the gRPC library is used to pass/retrieve this\n\n        metadata, the user may ignore the base64 encoding and assume it is simply\n\n        serialized as a binary message.\n      properties:\n        actionId:\n          description: \u003e-\n            An identifier that ties multiple requests to the same action.\n\n            For example, multiple requests to the CAS, Action Cache, and Execution\n\n            API are used in order to compile foo.cc.\n          type: string\n        correlatedInvocationsId:\n          description: \u003e-\n            An identifier to tie multiple tool invocations together. For\n            example,\n\n            runs of foo_test, bar_test and baz_test on a post-submit of a given patch.\n          type: string\n        toolDetails:\n          $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2ToolDetails\"\n        toolInvocationId:\n          description: \u003e-\n            An identifier that ties multiple actions together to a final result.\n\n            For example, multiple actions are required to build and run foo_test.\n          type: string\n      type: object\n    BuildBazelRemoteExecutionV2SymlinkNode:\n      description: A `SymlinkNode` represents a symbolic link.\n      properties:\n        name:\n          description: The name of the symlink.\n          type: string\n        target:\n          description: \u003e-\n            The target path of the symlink. The path separator is a forward\n            slash `/`.\n\n            The target path can be relative to the parent directory of the symlink or\n\n            it can be an absolute path starting with `/`. Support for absolute paths\n\n            can be checked using the Capabilities\n\n            API. The canonical form forbids the substrings `/./` and `//` in the target\n\n            path. `..` components are allowed anywhere in the target path.\n          type: string\n      type: object\n    BuildBazelRemoteExecutionV2ToolDetails:\n      description: Details for the tool used to call the API.\n      properties:\n        toolName:\n          description: Name of the tool, e.g. bazel.\n          type: string\n        toolVersion:\n          description: Version of the tool used for the request, e.g. 5.0.3.\n          type: string\n      type: object\n    BuildBazelRemoteExecutionV2Tree:\n      description: |-\n        A `Tree` contains all the\n        Directory protos in a\n        single directory Merkle tree, compressed into one message.\n      properties:\n        children:\n          description: \u003e-\n            All the child directories: the directories referred to by the root\n            and,\n\n            recursively, all its children. In order to reconstruct the directory tree,\n\n            the client must take the digests of each of the child directories and then\n\n            build up a tree starting from the `root`.\n          items:\n            $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2Directory\"\n          type: array\n        root:\n          $ref: \"#/components/schemas/BuildBazelRemoteExecutionV2Directory\"\n      type: object\n    GoogleDevtoolsRemotebuildbotCommandDurations:\n      description: |-\n        CommandDuration contains the various duration metrics tracked when a bot\n        performs a command.\n      properties:\n        dockerPrep:\n          description: |-\n            The time spent preparing the command to be run in a Docker container\n            (includes pulling the Docker image, if necessary).\n          format: google-duration\n          type: string\n        download:\n          description: \u003e-\n            The time spent downloading the input files and constructing the\n            working\n\n            directory.\n          format: google-duration\n          type: string\n        execution:\n          description: The time spent executing the command (i.e., doing useful work).\n          format: google-duration\n          type: string\n        isoPrepDone:\n          description: The timestamp when preparation is done and bot starts downloading\n            files.\n          format: google-datetime\n          type: string\n        overall:\n          description: The time spent completing the command, in total.\n          format: google-duration\n          type: string\n        stdout:\n          description: The time spent uploading the stdout logs.\n          format: google-duration\n          type: string\n        upload:\n          description: The time spent uploading the output files.\n          format: google-duration\n          type: string\n      type: object\n    GoogleDevtoolsRemotebuildbotCommandEvents:\n      description: |-\n        CommandEvents contains counters for the number of warnings and errors\n        that occurred during the execution of a command.\n      properties:\n        dockerCacheHit:\n          description: \u003e-\n            Indicates whether we are using a cached Docker image (true) or had\n            to pull\n\n            the Docker image (false) for this command.\n          type: boolean\n        inputCacheMiss:\n          description: The input cache miss ratio.\n          format: float\n          type: number\n        numErrors:\n          description: The number of errors reported.\n          format: uint64\n          type: string\n        numWarnings:\n          description: The number of warnings reported.\n          format: uint64\n          type: string\n      type: object\n    GoogleDevtoolsRemotebuildbotCommandStatus:\n      description: The internal status of the command result.\n      properties:\n        code:\n          description: The status code.\n          enum:\n            - OK\n            - INVALID_ARGUMENT\n            - DEADLINE_EXCEEDED\n            - NOT_FOUND\n            - PERMISSION_DENIED\n            - INTERNAL\n            - ABORTED\n            - CLEANUP_ERROR\n            - DOWNLOAD_INPUTS_ERROR\n            - UNKNOWN\n            - UPLOAD_OUTPUTS_ERROR\n            - DOCKER_LOGIN_ERROR\n            - DOCKER_IMAGE_PULL_ERROR\n            - DOCKER_IMAGE_EXIST_ERROR\n            - DUPLICATE_INPUTS\n            - DOCKER_IMAGE_PERMISSION_DENIED\n            - DOCKER_IMAGE_NOT_FOUND\n            - WORKING_DIR_NOT_FOUND\n            - WORKING_DIR_NOT_IN_BASE_DIR\n            - DOCKER_UNAVAILABLE\n          type: string\n        message:\n          description: The error message.\n          type: string\n      type: object\n    GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig:\n      description: AcceleratorConfig defines the accelerator cards to attach to the VM.\n      properties:\n        acceleratorCount:\n          description: The number of guest accelerator cards exposed to each VM.\n          format: int64\n          type: string\n        acceleratorType:\n          description: \u003e-\n            The type of accelerator to attach to each VM, e.g.\n            \"nvidia-tesla-k80\" for\n\n            nVidia Tesla K80.\n          type: string\n      type: object\n    GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest:\n      description: The request used for `CreateInstance`.\n      properties:\n        instance:\n          $ref: \"#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1alph\\\n            aInstance\"\n        instanceId:\n          description: |-\n            ID of the created instance.\n            A valid `instance_id` must:\n            be 6-50 characters long,\n            contain only lowercase letters, digits, hyphens and underscores,\n            start with a lowercase letter, and\n            end with a lowercase letter or a digit.\n          type: string\n        parent:\n          description: |-\n            Resource name of the project containing the instance.\n            Format: `projects/[PROJECT_ID]`.\n          type: string\n      type: object\n    GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest:\n      description: The request used for `CreateWorkerPool`.\n      properties:\n        parent:\n          description: \u003e-\n            Resource name of the instance in which to create the new worker\n            pool.\n\n            Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.\n          type: string\n        poolId:\n          description: |-\n            ID of the created worker pool.\n            A valid pool ID must:\n            be 6-50 characters long,\n            contain only lowercase letters, digits, hyphens and underscores,\n            start with a lowercase letter, and\n            end with a lowercase letter or a digit.\n          type: string\n        workerPool:\n          $ref: \"#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1alph\\\n            aWorkerPool\"\n      type: object\n    GoogleDevtoolsRemotebuildexecutionAdminV1alphaDeleteInstanceRequest:\n      description: The request used for `DeleteInstance`.\n      properties:\n        name:\n          description: |-\n            Name of the instance to delete.\n            Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.\n          type: string\n      type: object\n    GoogleDevtoolsRemotebuildexecutionAdminV1alphaDeleteWorkerPoolRequest:\n      description: The request used for DeleteWorkerPool.\n      properties:\n        name:\n          description: \u003e-\n            Name of the worker pool to delete.\n\n            Format:\n\n            `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`.\n          type: string\n      type: object\n    GoogleDevtoolsRemotebuildexecutionAdminV1alphaGetInstanceRequest:\n      description: The request used for `GetInstance`.\n      properties:\n        name:\n          description: |-\n            Name of the instance to retrieve.\n            Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.\n          type: string\n      type: object\n    GoogleDevtoolsRemotebuildexecutionAdminV1alphaGetWorkerPoolRequest:\n      description: The request used for GetWorkerPool.\n      properties:\n        name:\n          description: \u003e-\n            Name of the worker pool to retrieve.\n\n            Format:\n\n            `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`.\n          type: string\n      type: object\n    GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance:\n      description: |-\n        Instance conceptually encapsulates all Remote Build Execution resources\n        for remote builds.\n        An instance consists of storage and compute resources (for example,\n        `ContentAddressableStorage`, `ActionCache`, `WorkerPools`) used for\n        running remote builds.\n        All Remote Build Execution API calls are scoped to an instance.\n      properties:\n        location:\n          description: The location is a GCP region. Currently only `us-central1` is\n            supported.\n          type: string\n        loggingEnabled:\n          description: Output only. Whether stack driver logging is enabled for the\n            instance.\n          type: boolean\n        name:\n          description: \u003e-\n            Output only. Instance resource name formatted as:\n\n            `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.\n\n            Name should not be populated when creating an instance since it is provided\n\n            in the `instance_id` field.\n          type: string\n        state:\n          description: Output only. State of the instance.\n          enum:\n            - STATE_UNSPECIFIED\n            - CREATING\n            - RUNNING\n            - INACTIVE\n          type: string\n      type: object\n    GoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesRequest:\n      properties:\n        parent:\n          description: |-\n            Resource name of the project.\n            Format: `projects/[PROJECT_ID]`.\n          type: string\n      type: object\n    GoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse:\n      properties:\n        instances:\n          description: The list of instances in a given project.\n          items:\n            $ref: \"#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1al\\\n              phaInstance\"\n          type: array\n      type: object\n    GoogleDevtoolsRemotebuildexecutionAdminV1alphaListWorkerPoolsRequest:\n      properties:\n        filter:\n          description: \u003e-\n            Optional. A filter expression that filters resources listed in\n\n            the response. The expression must specify the field name, a comparison\n\n            operator, and the value that you want to use for filtering. The value\n\n            must be a string, a number, or a boolean. String values are\n\n            case-insensitive.\n\n            The comparison operator must be either `:`, `=`, `!=`, `\u003e`, `\u003e=`, `\u003c=` or\n\n            `\u003c`.\n\n            The `:` operator can be used with string fields to match substrings.\n\n            For non-string fields it is equivalent to the `=` operator.\n\n            The `:*` comparison can be used to test  whether a key has been defined.\n\n\n            You can also filter on nested fields.\n\n\n            To filter on multiple expressions, you can separate expression using\n\n            `AND` and `OR` operators, using parentheses to specify precedence. If\n\n            neither operator is specified, `AND` is assumed.\n\n\n            Examples:\n\n\n            Include only pools with more than 100 reserved workers:\n\n            `(worker_count \u003e 100) (worker_config.reserved = true)`\n\n\n            Include only pools with a certain label or machines of the n1-standard\n\n            family:\n\n            `worker_config.labels.key1 : * OR worker_config.machine_type: n1-standard`\n          type: string\n        parent:\n          description: |-\n            Resource name of the instance.\n            Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.\n          type: string\n      type: object\n    GoogleDevtoolsRemotebuildexecutionAdminV1alphaListWorkerPoolsResponse:\n      properties:\n        workerPools:\n          description: The list of worker pools in a given instance.\n          items:\n            $ref: \"#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1al\\\n              phaWorkerPool\"\n          type: array\n      type: object\n    GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateWorkerPoolRequest:\n      description: The request used for UpdateWorkerPool.\n      properties:\n        updateMask:\n          description: \u003e-\n            The update mask applies to worker_pool. For the `FieldMask`\n            definition,\n\n            see\n\n            https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\n\n            If an empty update_mask is provided, only the non-default valued field in\n\n            the worker pool field will be updated. Note that in order to update a field\n\n            to the default value (zero, false, empty string) an explicit update_mask\n\n            must be provided.\n          format: google-fieldmask\n          type: string\n        workerPool:\n          $ref: \"#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1alph\\\n            aWorkerPool\"\n      type: object\n    GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig:\n      description: |-\n        Defines the configuration to be used for a creating workers in\n        the worker pool.\n      properties:\n        accelerator:\n          $ref: \"#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1alph\\\n            aAcceleratorConfig\"\n        diskSizeGb:\n          description: |-\n            Required. Size of the disk attached to the worker, in GB.\n            See https://cloud.google.com/compute/docs/disks/\n          format: int64\n          type: string\n        diskType:\n          description: |-\n            Required. Disk Type to use for the worker.\n            See [Storage\n            options](https://cloud.google.com/compute/docs/disks/#introduction).\n            Currently only `pd-standard` is supported.\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: \u003e-\n            Labels associated with the workers.\n\n            Label keys and values can be no longer than 63 characters, can only contain\n\n            lowercase letters, numeric characters, underscores and dashes.\n\n            International letters are permitted. Label keys must start with a letter.\n\n            Label values are optional.\n\n            There can not be more than 64 labels per resource.\n          type: object\n        machineType:\n          description: \u003e-\n            Required. Machine type of the worker, such as `n1-standard-2`.\n\n            See https://cloud.google.com/compute/docs/machine-types for a list of\n\n            supported machine types. Note that `f1-micro` and `g1-small` are not yet\n\n            supported.\n          type: string\n        minCpuPlatform:\n          description: \u003e-\n            Minimum CPU platform to use when creating the worker.\n\n            See [CPU Platforms](https://cloud.google.com/compute/docs/cpu-platforms).\n          type: string\n        networkAccess:\n          description: \u003e-\n            Determines the type of network access granted to workers. Possible\n            values:\n\n\n            - \"public\": Workers can connect to the public internet.\n\n            - \"private\": Workers can only connect to Google APIs and services.\n\n            - \"restricted-private\": Workers can only connect to Google APIs that are\n              reachable through `restricted.googleapis.com` (`199.36.153.4/30`).\n          type: string\n        reserved:\n          description: \u003e-\n            Determines whether the worker is reserved (equivalent to a Compute\n            Engine\n\n            on-demand VM and therefore won't be preempted).\n\n            See [Preemptible VMs](https://cloud.google.com/preemptible-vms/) for more\n\n            details.\n          type: boolean\n      type: object\n    GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool:\n      description: A worker pool resource in the Remote Build Execution API.\n      properties:\n        name:\n          description: \u003e-\n            WorkerPool resource name formatted as:\n\n            `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`.\n\n            name should not be populated when creating a worker pool since it is\n\n            provided in the `poolId` field.\n          type: string\n        state:\n          description: Output only. State of the worker pool.\n          enum:\n            - STATE_UNSPECIFIED\n            - CREATING\n            - RUNNING\n            - UPDATING\n            - DELETING\n            - INACTIVE\n          type: string\n        workerConfig:\n          $ref: \"#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1alph\\\n            aWorkerConfig\"\n        workerCount:\n          description: \u003e-\n            The desired number of workers in the worker pool. Must be a value\n            between\n\n            0 and 1000.\n          format: int64\n          type: string\n      type: object\n    GoogleDevtoolsRemoteworkersV1test2AdminTemp:\n      description: \u003e-\n        AdminTemp is a prelimiary set of administration tasks. It's called\n        \"Temp\"\n\n        because we do not yet know the best way to represent admin tasks; it's\n\n        possible that this will be entirely replaced in later versions of this API.\n\n        If this message proves to be sufficient, it will be renamed in the alpha or\n\n        beta release of this API.\n\n\n        This message (suitably marshalled into a protobuf.Any) can be used as the\n\n        inline_assignment field in a lease; the lease assignment field should simply\n\n        be `\"admin\"` in these cases.\n\n\n        This message is heavily based on Swarming administration tasks from the LUCI\n\n        project (http://github.com/luci/luci-py/appengine/swarming).\n      properties:\n        arg:\n          description: The argument to the admin action; see `Command` for semantics.\n          type: string\n        command:\n          description: The admin action; see `Command` for legal values.\n          enum:\n            - UNSPECIFIED\n            - BOT_UPDATE\n            - BOT_RESTART\n            - BOT_TERMINATE\n            - HOST_RESTART\n          type: string\n      type: object\n    GoogleDevtoolsRemoteworkersV1test2Blob:\n      description: Describes a blob of binary content with its digest.\n      properties:\n        contents:\n          description: The contents of the blob.\n          format: byte\n          type: string\n        digest:\n          $ref: \"#/components/schemas/GoogleDevtoolsRemoteworkersV1test2Digest\"\n      type: object\n    GoogleDevtoolsRemoteworkersV1test2CommandOutputs:\n      description: |-\n        DEPRECATED - use CommandResult instead.\n        Describes the actual outputs from the task.\n      properties:\n        exitCode:\n          description: \u003e-\n            exit_code is only fully reliable if the status' code is OK. If the\n            task\n\n            exceeded its deadline or was cancelled, the process may still produce an\n\n            exit code as it is cancelled, and this will be populated, but a successful\n\n            (zero) is unlikely to be correct unless the status code is OK.\n          format: int32\n          type: integer\n        outputs:\n          $ref: \"#/components/schemas/GoogleDevtoolsRemoteworkersV1test2Digest\"\n      type: object\n    GoogleDevtoolsRemoteworkersV1test2CommandOverhead:\n      description: |-\n        DEPRECATED - use CommandResult instead.\n        Can be used as part of CompleteRequest.metadata, or are part of a more\n        sophisticated message.\n      properties:\n        duration:\n          description: \u003e-\n            The elapsed time between calling Accept and Complete. The server\n            will also\n\n            have its own idea of what this should be, but this excludes the overhead of\n\n            the RPCs and the bot response time.\n          format: google-duration\n          type: string\n        overhead:\n          description: |-\n            The amount of time *not* spent executing the command (ie\n            uploading/downloading files).\n          format: google-duration\n          type: string\n      type: object\n    GoogleDevtoolsRemoteworkersV1test2CommandResult:\n      description: \u003e-\n        All information about the execution of a command, suitable for providing\n        as\n\n        the Bots interface's `Lease.result` field.\n      properties:\n        duration:\n          description: \u003e-\n            The elapsed time between calling Accept and Complete. The server\n            will also\n\n            have its own idea of what this should be, but this excludes the overhead of\n\n            the RPCs and the bot response time.\n          format: google-duration\n          type: string\n        exitCode:\n          description: \u003e-\n            The exit code of the process. An exit code of \"0\" should only be\n            trusted if\n\n            `status` has a code of OK (otherwise it may simply be unset).\n          format: int32\n          type: integer\n        metadata:\n          description: \u003e-\n            Implementation-dependent metadata about the task. Both servers and\n            bots\n\n            may define messages which can be encoded here; bots are free to provide\n\n            metadata in multiple formats, and servers are free to choose one or more\n\n            of the values to process and ignore others. In particular, it is *not*\n\n            considered an error for the bot to provide the server with a field that it\n\n            doesn't know about.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        outputs:\n          $ref: \"#/components/schemas/GoogleDevtoolsRemoteworkersV1test2Digest\"\n        overhead:\n          description: |-\n            The amount of time *not* spent executing the command (ie\n            uploading/downloading files).\n          format: google-duration\n          type: string\n        status:\n          $ref: \"#/components/schemas/GoogleRpcStatus\"\n      type: object\n    GoogleDevtoolsRemoteworkersV1test2CommandTask:\n      description: \u003e-\n        Describes a shell-style task to execute, suitable for providing as the\n        Bots\n\n        interface's `Lease.payload` field.\n      properties:\n        expectedOutputs:\n          $ref: \"#/components/schemas/GoogleDevtoolsRemoteworkersV1test2CommandTask\\\n            Outputs\"\n        inputs:\n          $ref: \"#/components/schemas/GoogleDevtoolsRemoteworkersV1test2CommandTask\\\n            Inputs\"\n        timeouts:\n          $ref: \"#/components/schemas/GoogleDevtoolsRemoteworkersV1test2CommandTask\\\n            Timeouts\"\n      type: object\n    GoogleDevtoolsRemoteworkersV1test2CommandTaskInputs:\n      description: Describes the inputs to a shell-style task.\n      properties:\n        arguments:\n          description: \u003e-\n            The command itself to run (e.g., argv).\n\n\n            This field should be passed directly to the underlying operating system,\n\n            and so it must be sensible to that operating system. For example, on\n\n            Windows, the first argument might be \"C:\\Windows\\System32\\ping.exe\" -\n\n            that is, using drive letters and backslashes. A command for a *nix\n\n            system, on the other hand, would use forward slashes.\n\n\n            All other fields in the RWAPI must consistently use forward slashes,\n\n            since those fields may be interpretted by both the service and the bot.\n          items:\n            type: string\n          type: array\n        environmentVariables:\n          description: All environment variables required by the task.\n          items:\n            $ref: \"#/components/schemas/GoogleDevtoolsRemoteworkersV1test2CommandTa\\\n              skInputsEnvironmentVariable\"\n          type: array\n        files:\n          description: \u003e-\n            The input filesystem to be set up prior to the task beginning. The\n\n            contents should be a repeated set of FileMetadata messages though other\n\n            formats are allowed if better for the implementation (eg, a LUCI-style\n\n            .isolated file).\n\n\n            This field is repeated since implementations might want to cache the\n\n            metadata, in which case it may be useful to break up portions of the\n\n            filesystem that change frequently (eg, specific input files) from those\n\n            that don't (eg, standard header files).\n          items:\n            $ref: \"#/components/schemas/GoogleDevtoolsRemoteworkersV1test2Digest\"\n          type: array\n        inlineBlobs:\n          description: \u003e-\n            Inline contents for blobs expected to be needed by the bot to\n            execute the\n\n            task. For example, contents of entries in `files` or blobs that are\n\n            indirectly referenced by an entry there.\n\n\n            The bot should check against this list before downloading required task\n\n            inputs to reduce the number of communications between itself and the\n\n            remote CAS server.\n          items:\n            $ref: \"#/components/schemas/GoogleDevtoolsRemoteworkersV1test2Blob\"\n          type: array\n        workingDirectory:\n          description: \u003e-\n            Directory from which a command is executed. It is a relative\n            directory\n\n            with respect to the bot's working directory (i.e., \"./\"). If it is\n\n            non-empty, then it must exist under \"./\". Otherwise, \"./\" will be used.\n          type: string\n      type: object\n    GoogleDevtoolsRemoteworkersV1test2CommandTaskInputsEnvironmentVariable:\n      description: An environment variable required by this task.\n      properties:\n        name:\n          description: The envvar name.\n          type: string\n        value:\n          description: The envvar value.\n          type: string\n      type: object\n    GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs:\n      description: Describes the expected outputs of the command.\n      properties:\n        directories:\n          description: \u003e-\n            A list of expected directories, relative to the execution root. All\n            paths\n\n            MUST be delimited by forward slashes.\n          items:\n            type: string\n          type: array\n        files:\n          description: |-\n            A list of expected files, relative to the execution root. All paths\n            MUST be delimited by forward slashes.\n          items:\n            type: string\n          type: array\n        stderrDestination:\n          description: \u003e-\n            The destination to which any stderr should be sent. The method by\n            which\n\n            the bot should send the stream contents to that destination is not\n\n            defined in this API. As examples, the destination could be a file\n\n            referenced in the `files` field in this message, or it could be a URI\n\n            that must be written via the ByteStream API.\n          type: string\n        stdoutDestination:\n          description: \u003e-\n            The destination to which any stdout should be sent. The method by\n            which\n\n            the bot should send the stream contents to that destination is not\n\n            defined in this API. As examples, the destination could be a file\n\n            referenced in the `files` field in this message, or it could be a URI\n\n            that must be written via the ByteStream API.\n          type: string\n      type: object\n    GoogleDevtoolsRemoteworkersV1test2CommandTaskTimeouts:\n      description: Describes the timeouts associated with this task.\n      properties:\n        execution:\n          description: \u003e-\n            This specifies the maximum time that the task can run, excluding the\n\n            time required to download inputs or upload outputs. That is, the worker\n\n            will terminate the task if it runs longer than this.\n          format: google-duration\n          type: string\n        idle:\n          description: \u003e-\n            This specifies the maximum amount of time the task can be idle -\n            that is,\n\n            go without generating some output in either stdout or stderr. If the\n\n            process is silent for more than the specified time, the worker will\n\n            terminate the task.\n          format: google-duration\n          type: string\n        shutdown:\n          description: \u003e-\n            If the execution or IO timeouts are exceeded, the worker will try to\n\n            gracefully terminate the task and return any existing logs. However,\n\n            tasks may be hard-frozen in which case this process will fail. This\n\n            timeout specifies how long to wait for a terminated task to shut down\n\n            gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.\n\n            SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).\n          format: google-duration\n          type: string\n      type: object\n    GoogleDevtoolsRemoteworkersV1test2Digest:\n      description: \u003e-\n        The CommandTask and CommandResult messages assume the existence of a\n        service\n\n        that can serve blobs of content, identified by a hash and size known as a\n\n        \"digest.\" The method by which these blobs may be retrieved is not specified\n\n        here, but a model implementation is in the Remote Execution API's\n\n        \"ContentAddressibleStorage\" interface.\n\n\n        In the context of the RWAPI, a Digest will virtually always refer to the\n\n        contents of a file or a directory. The latter is represented by the\n\n        byte-encoded Directory message.\n      properties:\n        hash:\n          description: \u003e-\n            A string-encoded hash (eg \"1a2b3c\", not the byte array [0x1a, 0x2b,\n            0x3c])\n\n            using an implementation-defined hash algorithm (eg SHA-256).\n          type: string\n        sizeBytes:\n          description: \u003e-\n            The size of the contents. While this is not strictly required as\n            part of an\n\n            identifier (after all, any given hash will have exactly one canonical\n\n            size), it's useful in almost all cases when one might want to send or\n\n            retrieve blobs of content and is included here for this reason.\n          format: int64\n          type: string\n      type: object\n    GoogleDevtoolsRemoteworkersV1test2Directory:\n      description: \u003e-\n        The contents of a directory. Similar to the equivalent message in the\n        Remote\n\n        Execution API.\n      properties:\n        directories:\n          description: Any subdirectories\n          items:\n            $ref: \"#/components/schemas/GoogleDevtoolsRemoteworkersV1test2Directory\\\n              Metadata\"\n          type: array\n        files:\n          description: The files in this directory\n          items:\n            $ref: \"#/components/schemas/GoogleDevtoolsRemoteworkersV1test2FileMetad\\\n              ata\"\n          type: array\n      type: object\n    GoogleDevtoolsRemoteworkersV1test2DirectoryMetadata:\n      description: \u003e-\n        The metadata for a directory. Similar to the equivalent message in the\n        Remote\n\n        Execution API.\n      properties:\n        digest:\n          $ref: \"#/components/schemas/GoogleDevtoolsRemoteworkersV1test2Digest\"\n        path:\n          description: The path of the directory, as in FileMetadata.path.\n          type: string\n      type: object\n    GoogleDevtoolsRemoteworkersV1test2FileMetadata:\n      description: |-\n        The metadata for a file. Similar to the equivalent message in the Remote\n        Execution API.\n      properties:\n        contents:\n          description: \u003e-\n            If the file is small enough, its contents may also or alternatively\n            be\n\n            listed here.\n          format: byte\n          type: string\n        digest:\n          $ref: \"#/components/schemas/GoogleDevtoolsRemoteworkersV1test2Digest\"\n        isExecutable:\n          description: Properties of the file\n          type: boolean\n        path:\n          description: \u003e-\n            The path of this file. If this message is part of the\n\n            CommandOutputs.outputs fields, the path is relative to the execution root\n\n            and must correspond to an entry in CommandTask.outputs.files. If this\n\n            message is part of a Directory message, then the path is relative to the\n\n            root of that directory. All paths MUST be delimited by forward slashes.\n          type: string\n      type: object\n    GoogleLongrunningOperation:\n      description: \u003e-\n        This resource represents a long-running operation that is the result of\n        a\n\n        network API call.\n      properties:\n        done:\n          description: \u003e-\n            If the value is `false`, it means the operation is still in\n            progress.\n\n            If `true`, the operation is completed, and either `error` or `response` is\n\n            available.\n          type: boolean\n        error:\n          $ref: \"#/components/schemas/GoogleRpcStatus\"\n        metadata:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: \u003e-\n            Service-specific metadata associated with the operation.  It\n            typically\n\n            contains progress information and common metadata such as create time.\n\n            Some services might not provide such metadata.  Any method that returns a\n\n            long-running operation should document the metadata type, if any.\n          type: object\n        name:\n          description: \u003e-\n            The server-assigned name, which is only unique within the same\n            service that\n\n            originally returns it. If you use the default HTTP mapping, the\n\n            `name` should be a resource name ending with `operations/{unique_id}`.\n          type: string\n        response:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: \u003e-\n            The normal response of the operation in case of success.  If the\n            original\n\n            method returns no data on success, such as `Delete`, the response is\n\n            `google.protobuf.Empty`.  If the original method is standard\n\n            `Get`/`Create`/`Update`, the response should be the resource.  For other\n\n            methods, the response should have the type `XxxResponse`, where `Xxx`\n\n            is the original method name.  For example, if the original method name\n\n            is `TakeSnapshot()`, the inferred response type is\n\n            `TakeSnapshotResponse`.\n          type: object\n      type: object\n    GoogleRpcStatus:\n      description: \u003e-\n        The `Status` type defines a logical error model that is suitable for\n\n        different programming environments, including REST APIs and RPC APIs. It is\n\n        used by [gRPC](https://github.com/grpc). Each `Status` message contains\n\n        three pieces of data: error code, error message, and error details.\n\n\n        You can find out more about this error model and how to work with it in the\n\n        [API Design Guide](https://cloud.google.com/apis/design/errors).\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: \u003e-\n            A list of messages that carry the error details.  There is a common\n            set of\n\n            message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        message:\n          description: |-\n            A developer-facing error message, which should be in English. Any\n            user-facing error message should be localized and sent in the\n            google.rpc.Status.details field, or localized by the client.\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-remotebuildexecution-v1alpha-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-remotebuildexecution-v1alpha-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1alpha/{name}\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}