{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/etorox/docs"
		},
		"file": {
			"name": "trading-http-api.yaml",
			"size": 0,
			"path": "docs/trading-http-api.yaml",
			"byteSize": 32919,
			"content": "openapi: 3.0.1\ninfo:\n  title: eToroX API\n  description: HTTP trading API\n  version: \"1\"\ntags:\n  - name: Public API\n    description: An API that can be accessed without authentication.\n  - name: Private API\n    description: An API that can be accessed only with authentication.\npaths:\n  /api/v1/timestamp:\n    get:\n      tags:\n        - Public API\n      summary: Get the server time\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ServerTime'\n              example: 1566733151443\n  /api/v1/instruments:\n    get:\n      tags:\n        - Private API\n      summary: Get all available instuments for trade.\n      parameters:\n        - $ref: '#/components/parameters/correlationId'\n        - $ref: '#/components/parameters/user-agent'\n        - $ref: '#/components/parameters/ex-access-key'\n        - $ref: '#/components/parameters/ex-access-sign'\n        - $ref: '#/components/parameters/ex-access-nonce'\n        - $ref: '#/components/parameters/ex-access-timestamp'\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Instrument'\n              example:\n                - id: btcusd\n                  name: BTC/USD\n                  ask_precision: 5\n                  bid_precision: 5\n  /api/v1/instruments/{instrument-Id}/book:\n    get:\n      tags:\n        - Private API\n      summary: Get Order book for specific Instrument\n      parameters:\n        - in: path\n          name: instrument-Id\n          required: true\n          schema:\n            type: string\n          example: 'btcusd'\n        - in: query\n          name: level\n          required: true\n          schema:\n            type: integer\n          description: \u003e\n            * 1 - Only the best bid and ask\n\n            * 50 - Top 50 bids and asks (aggregated by price)\n\n            * 100 - Top 100 (aggregated by price)\n          example: 2\n        - $ref: '#/components/parameters/correlationId'\n        - $ref: '#/components/parameters/user-agent'\n        - $ref: '#/components/parameters/ex-access-key'\n        - $ref: '#/components/parameters/ex-access-sign'\n        - $ref: '#/components/parameters/ex-access-nonce'\n        - $ref: '#/components/parameters/ex-access-timestamp'\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/OrderBook'\n              example:\n                timestamp: 1589380157\n                snapshot_id: 4222124650664933\n                bids: ['295.96', '4.39088265']\n                asks: ['295.97', '25.23542881']\n  /api/v1/balances:\n    get:\n      tags:\n        - Private API\n      summary: Get balance per Currency\n      parameters:\n        - $ref: '#/components/parameters/correlationId'\n        - $ref: '#/components/parameters/user-agent'\n        - $ref: '#/components/parameters/ex-access-key'\n        - $ref: '#/components/parameters/ex-access-sign'\n        - $ref: '#/components/parameters/ex-access-nonce'\n        - $ref: '#/components/parameters/ex-access-timestamp'\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/balance'\n              example:\n                - currency: 'BTC'\n                  balance: '0.0000000000000000'\n                  available: '0.0000000000000000'\n                  locked: '0.0000000000000000'\n                - currency: 'USD'\n                  balance: '80.2301373066930000'\n                  available: '79.2266348066930000'\n                  locked: '1.0035025000000000'\n  /api/v1/tradebalance:\n    get:\n      tags:\n        - Private API\n      summary: Get margin balance\n      parameters:\n        - $ref: '#/components/parameters/correlationId'\n        - $ref: '#/components/parameters/user-agent'\n        - $ref: '#/components/parameters/ex-access-key'\n        - $ref: '#/components/parameters/ex-access-sign'\n        - $ref: '#/components/parameters/ex-access-nonce'\n        - $ref: '#/components/parameters/ex-access-timestamp'\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/TradeBalanceReport'\n        '404':\n          description: 'No margin currencies found for the account'\n  /api/v1/orders:\n    parameters:\n      - $ref: '#/components/parameters/correlationId'\n      - $ref: '#/components/parameters/user-agent'\n      - $ref: '#/components/parameters/ex-access-key'\n      - $ref: '#/components/parameters/ex-access-sign'\n      - $ref: '#/components/parameters/ex-access-nonce'\n      - $ref: '#/components/parameters/ex-access-timestamp'\n    post:\n      tags:\n        - Private API\n      summary: Place a New Order.\n      requestBody:\n        content:\n          application/json; charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/NewOrderRequest'\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/NewOrderResponse'\n    get:\n      tags:\n        - Private API\n      summary: Get orders details filtered by Instrument id and Order status.\n      parameters:\n        - in: query\n          name: before\n          schema:\n            type: string\n          example: '88617180-6e90-49cd-a3e8-d04137b2cb4e'\n          description: \u003e\n            Orders are returned sorted by descending creation date. The before query will result with set of orders so that future requests using the before parameter will fetch older orders.\n        - in: query\n          name: limit\n          schema:\n            type: number\n          example: 25\n          description: The number of returned orders limited by this value.\n        - in: query\n          name: state\n          description: The state of the orders to filter [open , cancelled , executed]\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: instument_id\n          description: Filter by specific instrument, if not provided assumed all instruments\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: order_by\n          description: Order by order creation asc/desc , if not provided default to desc\n          required: false\n          example: asc\n          schema:\n            enum:\n              - asc\n              - desc\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OrderReport'\n\n  /api/v1/orders/{order-id}:\n    parameters:\n      - in: path\n        name: order-id\n        required: true\n        schema:\n          type: string\n          example: 'dc2d1075-7504-4207-b319-54c364aad985'\n      - $ref: '#/components/parameters/correlationId'\n      - $ref: '#/components/parameters/user-agent'\n      - $ref: '#/components/parameters/ex-access-key'\n      - $ref: '#/components/parameters/ex-access-sign'\n      - $ref: '#/components/parameters/ex-access-nonce'\n      - $ref: '#/components/parameters/ex-access-timestamp'\n    get:\n      tags:\n        - Private API\n      summary: Get a single order by order id .\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/OrderReport'\n        '404':\n          description: 'Order not found'\n    delete:\n      tags:\n        - Private API\n      summary: Cancel a previously placed order.\n      responses:\n        '202':\n          description: 'request accepted'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/OrderCancelResponse'\n        '404':\n          description: 'Not found'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: string\n              example:\n                'Not found'\n  /api/v1/trades:\n    get:\n      tags:\n        - Private API\n      summary: Get a list of recent trades (Last 72 hours).\n      parameters:\n        - in: query\n          name: instrument_id\n          schema:\n            type: string\n          example: 'btcusd'\n          description: \u003e\n            Limit list of trades with this instrument_id.\n        - in: query\n          name: before\n          schema:\n            type: string\n          example: 'ba9ce027-07c1-468f-b29b-874b2e818024'\n          description: \u003e\n            Trades are returned sorted by descending execution date. The before field accepts txid values and results a set of newer trades.\n        - in: query\n          name: to\n          schema:\n            type: string\n          example: 'ba9ce027-07c1-468f-b29b-874b2e818024'\n          description: \u003e\n            Trades are returned sorted by descending execution date. The to query will result a set of older2 trades.\n        - in: query\n          name: limit\n          schema:\n            type: number\n          example: 25\n          description: \u003e\n            The number of returned trades limited by this value.\n        - in: query\n          name: order_id\n          description: Filter trades that were executed from the specific order\n          required: false\n          example: 'ba9ce027-07c1-468f-b29b-874b2e818024'\n          schema:\n            type: string\n        - $ref: '#/components/parameters/correlationId'\n        - $ref: '#/components/parameters/user-agent'\n        - $ref: '#/components/parameters/ex-access-key'\n        - $ref: '#/components/parameters/ex-access-sign'\n        - $ref: '#/components/parameters/ex-access-nonce'\n        - $ref: '#/components/parameters/ex-access-timestamp'\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Trade'\n\n  /api/v1/funds/deposits/{coin}/address:\n    get:\n      tags:\n        - Private API\n      summary: Fetch deposit address.\n      parameters:\n        - in: path\n          name: coin\n          required: true\n          schema:\n            type: string\n          example: 'btc'\n        - $ref: '#/components/parameters/correlationId'\n        - $ref: '#/components/parameters/user-agent'\n        - $ref: '#/components/parameters/ex-access-key'\n        - $ref: '#/components/parameters/ex-access-sign'\n        - $ref: '#/components/parameters/ex-access-nonce'\n        - $ref: '#/components/parameters/ex-access-timestamp'\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/DepositAddress'\n\n  /api/v1/funds/withdrawals:\n    parameters:\n      - $ref: '#/components/parameters/correlationId'\n      - $ref: '#/components/parameters/user-agent'\n      - $ref: '#/components/parameters/ex-access-key'\n      - $ref: '#/components/parameters/ex-access-sign'\n      - $ref: '#/components/parameters/ex-access-nonce'\n      - $ref: '#/components/parameters/ex-access-timestamp'\n    post:\n      tags:\n        - Private API\n      summary: Place a request for withdrawal.\n      requestBody:\n        content:\n          application/json; charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/NewWithdrawalRequest'\n\n      responses:\n        '201':\n          description: 'OK'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/WithdrawalRequestResponse'\n\n  /api/v1/reports/funds/withdrawals:\n    parameters:\n      - $ref: '#/components/parameters/correlationId'\n      - $ref: '#/components/parameters/user-agent'\n      - $ref: '#/components/parameters/ex-access-key'\n      - $ref: '#/components/parameters/ex-access-sign'\n      - $ref: '#/components/parameters/ex-access-nonce'\n      - $ref: '#/components/parameters/ex-access-timestamp'\n    get:\n      tags:\n        - Private API\n      summary: Get historical withdrawals details.\n      parameters:\n        - in: query\n          name: before\n          schema:\n            type: string\n          example: '883567c4a8bc9812970093b37169ff71ab8a2f17255013ee31577121f79a3fb4'\n          description: \u003e\n            Withdrawals are returned sorted by descending creation date. The before field accepts txid values and results a set of newer withdrawals.\n        - in: query\n          name: limit\n          schema:\n            type: number\n          example: 25\n          description: \u003e\n            The number of returned withdrawals limited by this value.\n        - in: query\n          name: coin\n          description: filter by specific coin, if not provided assumed all coins.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: created_at\n          schema:\n            type: string\n          description: from created date and forward.\n        - in: query\n          name: txid\n          schema:\n            type: string\n          description: block chain transaction hash.\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WithdrawalsReport'\n\n  /api/v1/reports/funds/withdrawals/{id}:\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n          example: 'dc2d1075-7504-4207-b319-54c364aad985'\n      - $ref: '#/components/parameters/correlationId'\n      - $ref: '#/components/parameters/user-agent'\n      - $ref: '#/components/parameters/ex-access-key'\n      - $ref: '#/components/parameters/ex-access-sign'\n      - $ref: '#/components/parameters/ex-access-nonce'\n      - $ref: '#/components/parameters/ex-access-timestamp'\n    get:\n      tags:\n        - Private API\n      summary: Get a single withdrawal request by withdrawal id (guid).\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/WithdrawalsReport'\n        '404':\n          description: 'Withdrawal request not found'\n\n  /api/v1/reports/funds/deposits:\n    parameters:\n      - $ref: '#/components/parameters/correlationId'\n      - $ref: '#/components/parameters/user-agent'\n      - $ref: '#/components/parameters/ex-access-key'\n      - $ref: '#/components/parameters/ex-access-sign'\n      - $ref: '#/components/parameters/ex-access-nonce'\n      - $ref: '#/components/parameters/ex-access-timestamp'\n    get:\n      tags:\n        - Private API\n      summary: Get historical deposits details.\n      parameters:\n        - in: query\n          name: before\n          schema:\n            type: string\n          example: '883567c4a8bc9812970093b37169ff71ab8a2f17255013ee31577121f79a3fb4'\n          description: \u003e\n            Deposits are returned sorted by descending creation date. The before query will result with set of older deposits.\n        - in: query\n          name: limit\n          schema:\n            type: number\n          example: 25\n          description: \u003e\n            The number of returned deposits limited by this value.\n        - in: query\n          name: currency\n          description: filter by specific currency, if not provided assumed all currencies.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: created_at\n          schema:\n            type: string\n          description: from created date and forward.\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DepositsReport'\n\n  /api/v1/reports/funds/deposits/{txid}:\n    parameters:\n      - in: path\n        name: txid\n        required: true\n        schema:\n          type: string\n          example: 'dfe3ca89e8ce658a6d527ef81d1ad1f4601dc6dc8a1856d9598cfc6d1c7e5f86'\n      - $ref: '#/components/parameters/correlationId'\n      - $ref: '#/components/parameters/user-agent'\n      - $ref: '#/components/parameters/ex-access-key'\n      - $ref: '#/components/parameters/ex-access-sign'\n      - $ref: '#/components/parameters/ex-access-nonce'\n      - $ref: '#/components/parameters/ex-access-timestamp'\n    get:\n      tags:\n        - Private API\n      summary: Get a single deposit by txid (block chain transaction hash).\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/DepositsReport'\n        '404':\n          description: 'Deposit request not found'\n\n\ncomponents:\n  parameters:\n    correlationId:\n      in: query\n      name: correlationId\n      required: true\n      schema:\n        type: string\n      description: Random UUID, act as unique identifier of the request logs.\n      example: 'curl'\n    user-agent:\n      in: header\n      name: user-agent\n      required: true\n      schema:\n        type: string\n      description: Some name for app that use API\n      example: 'curl'\n    ex-access-key:\n      in: header\n      name: ex-access-key\n      required: true\n      schema:\n        type: string\n      description: The api key as a string.\n      example: 'ba9ce027-07c1-468f-b29b-874b2e828024'\n    ex-access-nonce:\n      in: header\n      name: ex-access-nonce\n      required: true\n      schema:\n        type: string\n      description: A UUID that should not repeat. We use this ID to validate that a request does not repeat within a specific timeframe.\n      example: 'ba9ce027-07c1-468f-b29b-874b2e818024'\n    ex-access-timestamp:\n      in: header\n      name: ex-access-timestamp\n      required: true\n      schema:\n        type: string\n      description: Milliseconds since epoch of the moment the singaure was created\n      example: '1567334955567'\n    ex-access-sign:\n      in: header\n      name: ex-access-sign\n      required: true\n      schema:\n        type: string\n      description: \u003e\n        The ex-access-sign header is generated by creating a sha256 RSA signature using the private key on the concatenated string (nonce + timestamp)  (where '+' represents string concatenation) and base64-encode the output. The timestamp value is the same as the ex-access-timestamp header.\n      example: 'THE_RESULT_BASE64'\n  schemas:\n    WithdrawalState:\n      type: string\n      enum:\n        - Prepared\n        - Submitted\n        - Cancelled\n        - Waiting for approval\n        - Suspected\n        - Rejected\n        - Processing\n        - Succeeded\n        - Failed\n    OrderType:\n      type: string\n      enum:\n        - limit\n        - market\n    OrderSide:\n      type: string\n      enum:\n        - buy\n        - sell\n    Instrument:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        ask_precision:\n          type: number\n        bid_precision:\n          type: number\n    OrderState:\n      type: string\n      description: What is the status of the order\n      enum:\n        - open\n        - cancelled\n        - executed\n    TimeInForce:\n      type: string\n      enum:\n        - gtd\n        - gtc\n        - ioc\n    ServerTime:\n      type: number\n    OrderBook:\n      type: object\n      properties:\n        timestamp:\n          type: number\n        snapshot_id:\n          type: number\n        bids:\n          type: array\n          items:\n            oneOf:\n              - type: string\n                description: price\n              - type: string\n                description: quantity\n        asks:\n          type: array\n          items:\n            oneOf:\n              - type: string\n                description: price\n              - type: string\n                description: quantity\n      example:\n        timestamp: 1589380157\n        snapshot_id: 4222124650664933\n        bids: [\"295.96\", \"4.39088265\"]\n        asks: [\"305.81\", \"5.39324205\"]\n    NewOrderRequest:\n      type: object\n      properties:\n        instrument_id:\n          type: string\n          description: A valid instrument id\n        side:\n          $ref: '#/components/schemas/OrderSide'\n        price:\n          type: string\n          description: Price per Target currency\n        volume:\n          type: string\n          description: Amount of Trade currency to buy or sell\n        type:\n          $ref: '#/components/schemas/OrderType'\n        time_in_force:\n          $ref: '#/components/schemas/TimeInForce'\n      required:\n        - instrument_id\n        - side\n        - price\n        - size\n        - volume\n      example:\n        side: 'buy'\n        type: 'limit'\n        price: '8000.20000000'\n        instrument_id: 'btcusd'\n        volume: '0.03000000'\n        time_in_force: 'gtc'\n    NewOrderResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique Order Id\n        price:\n          type: string\n          description: Price per Target currency\n        volume:\n          type: string\n          description:  Amount of trade currency to buy or sell\n        instrument_id:\n          type: string\n          description: Instrument id (btcusd, ethusd etc.)\n        state:\n          $ref: '#/components/schemas/OrderState'\n        side:\n          $ref: '#/components/schemas/OrderSide'\n        type:\n          $ref: '#/components/schemas/OrderType'\n        time_in_force:\n          $ref: '#/components/schemas/TimeInForce'\n        created_at:\n          type: string\n          description: Date of order creation.\n      example:\n        id: 'f40d68a2-d155-455d-97b8-a856cb00d86c'\n        side: 'buy'\n        type: 'limit'\n        price: '8880.20000000'\n        state: 'open'\n        instrument_id: 'btcusd'\n        volume: '0.03000000'\n        time_in_force: 'gtc'\n        created_at: '2019-01-10T16:24:17.852Z'\n    OrderReport:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique Order Id\n        price:\n          type: string\n          description: Price per Target currency\n        volume:\n          type: string\n          description:  Amount of trade currency to buy or sell\n        origin_volume:\n          type: string\n          description:  Amount of original trade currency of the order\n        executed_volume:\n          type: string\n          description:  Amount of already executed trade currency\n        instrument_id:\n          type: string\n          description: Instrument id (btcusd, ethusd etc.)\n        avg_price:\n          type: string\n          description: The trades average executed prices\n        state:\n          $ref: '#/components/schemas/OrderState'\n        side:\n          $ref: '#/components/schemas/OrderSide'\n        type:\n          $ref: '#/components/schemas/OrderType'\n        time_in_force:\n          $ref: '#/components/schemas/TimeInForce'\n        created_at:\n          type: string\n          description: Date of order creation\n      example:\n        id: 'f40d68a2-d155-455d-97b8-a856cb00d86c'\n        side: 'buy'\n        type: 'limit'\n        price: '7483.20000000'\n        state: 'open'\n        instrument_id: 'btcusd'\n        volume: '0.50000000'\n        origin_volume: '1.5000000'\n        executed_volume: '1'\n        avg_price: '0.34'\n        time_in_force: 'gtc'\n        created_at: '2020-01-10T16:24:17.852Z'\n\n    OrderCancelResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique Order Id\n        price:\n          type: string\n          description: Price per Target currency\n        volume:\n          type: string\n          description:  Amount of Trade currency to buy or sell\n        instrument_id:\n          type: string\n          description: Instrument id (btcusd, ethusd etc.)\n        avg_price:\n          type: string\n          description: The trades average executed prices\n        state:\n          $ref: '#/components/schemas/OrderState'\n        side:\n          $ref: '#/components/schemas/OrderSide'\n        type:\n          $ref: '#/components/schemas/OrderType'\n        time_in_force:\n          $ref: '#/components/schemas/TimeInForce'\n        created_at:\n          type: string\n          description: Date of order creation\n      example:\n        id: 'f40d68a2-d155-455d-97b8-a856cb00d86c'\n        side: 'buy'\n        type: 'limit'\n        price: '8790.20000000'\n        state: 'cancelled'\n        instrument_id: 'btcusd'\n        volume: '0.03000000'\n        avg_price: '0.34'\n        time_in_force: 'gtc'\n        created_at: '2020-01-10T16:24:17.852Z'\n    WithdrawalRequestResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Withdrawal request id.\n        coin:\n          type: string\n          description: Name of a coin i.e. btc\n        amount:\n          type: string\n          description: Amount of coins that were withdraw.\n        fee:\n          type: string\n          description: Fees paid for the withdrawal.\n        address:\n          type: string\n          description: Requested withdrawal address.\n        state:\n          $ref: '#/components/schemas/WithdrawalState'\n        created_at:\n          type: string\n          description: Date of request creation.\n\n      example:\n        id: 'f40d68a2-d155-455d-97b8-a856cb00d86c'\n        coin: 'btc'\n        amount: '0.25'\n        fee: '0.001'\n        address: '1FfmbHfnpaZjKFvyi1okTjJJusN455paPH'\n        state: 'Submitted'\n        create_at: '2019-01-10T16:24:17.852Z'\n    balance:\n      type: object\n      properties:\n        currency:\n          type: string\n          description: The currency of the account.\n        balance:\n          type: string\n          description: Total funds in the account.\n        available:\n          type: string\n          description:  Funds available to withdraw or trade.\n        locked:\n          type: string\n          description:  Locked funds (not available for use).\n      example:\n        currency: 'BTC'\n        balance: '0.0000000000000000'\n        available: '0.0000000000000000'\n        locked: '0.0000000000000000'\n    Trade:\n      type: object\n      properties:\n        trade_id:\n          type: integer\n          format: string\n          example: 2342343\n        price:\n          type: string\n          example: '19.00'\n        volume:\n          type: string\n          example: '0.01'\n        instrument_id:\n          type: string\n          example: 'btcusd'\n        created_at:\n          type: string\n          format: date-time\n          example: '2019-01-04T21:19:28.578544Z'\n        side:\n          type: string\n          enum:\n            - bid\n            - ask\n        order_id:\n          type: string\n          example: 'ea577b0e-9754-4499-81c4-d9408cc32fbf'\n        fee:\n          type: string\n          example: '0.00093'\n          description: Field indicates the fees charged for this individual trade.The fee taken from the buy amount.\n        execution_type:\n          type: string\n          enum:\n            - maker\n            - taker\n\n    DepositAddress:\n      type: object\n      properties:\n        currency:\n          type: string\n          description: The type of currency\n          example: 'btc'\n        address:\n          type: string\n          description: Deposit Address\n          example: '0xYOUR_DEPOSIT_ADDRESS'\n\n    DepositsReport:\n      type: object\n      properties:\n        currency:\n          type: string\n          description: name of a coin i.e. btc\n        amount:\n          type: string\n          description: Amount of currencies that were withdraw.\n        fee:\n          type: string\n          description: fees paid for the withdrawal.\n        txid:\n          type: string\n          description: Unique alpha numeric string that represent a transaction hash on the block chain.\n        created_at:\n          type: string\n          description: Date of request creation.\n        confirmations:\n          type: number\n          description: number of block chain confirmations.\n        state:\n          type: string\n          description: status of the withdrawal request.\n          enum:\n            - Prepared\n            - Submitted\n            - Cancelled\n            - Waiting for approval\n            - Suspected\n            - Rejected\n            - Processing\n            - Succeeded\n            - Failed\n\n      example:\n        currency:   'eth'\n        amount: '0.688'\n        fee:    '0.002'\n        txid:   'dfe3ca89e8ce658a6d527ef81d1ad1f4601dc6dc8a1856d9598cfc6d1c7e5f86'\n        created_at: '2019-01-10T16:24:17.852Z'\n        confirmations: 0\n        state: 'rejected'\n\n    MarginStatus:\n      type: string\n      enum:\n        - ok\n        - warning\n        - liquidation\n\n    TradeBalanceReport:\n      type: object\n      properties:\n        timestamp:\n          type: string\n          description: The time when trade balance was calculated.\n        total_balance:\n          type: string\n          description: Total balance in usd.\n        total_credit:\n          type: string\n          description: Total margin in usd.\n        margin_level:\n          type: string\n          description: Current margin level.\n        margin_level_warning:\n          type: string\n          description: The warning margin level at which notification message will be send.\n        margin_level_liquidation:\n          type: number\n          description: The liquidation margin level at which portfolio will be forcibly liquidated.\n        margin_status:\n          $ref: '#/components/schemas/MarginStatus'\n        credit_currencies:\n          type: array\n          items:\n            properties:\n              currency:\n                type: string\n                description: The currency\n              unit:\n                type: string\n                description: The credit given\n          description: The list of currencies that has margin\n\n      example:\n        timestamp: '“2019-01-10T12:45:17.088Z”'\n        total_balance_usd: '256.896'\n        total_credit_usd: '126.32254'\n        margin_level: '2.033651318284132'\n        margin_level_warning: '0.15'\n        margin_level_liquidation: '0.1'\n        margin_status: 'ok'\n        credit_currencies:\n          - currency: 'BTC'\n            unit: '2.25'\n\n    NewWithdrawalRequest:\n      type: object\n      properties:\n        coin:\n          type: string\n          example: 'BTC'\n          description: A valid coin name.\n        amount:\n          type: string\n          description: Amount to withdraw\n          example: '0.25'\n        address:\n          type: string\n          description: A valid block chain address.\n          example: '1FfmbHfnpaZjKFvyi1okTjJJusN455paPH'\n      required:\n        - currency\n        - amount\n        - address\n\n    WithdrawalsReport:\n      type: object\n      properties:\n        guid:\n          type: string\n          description: Unique alpha numeric string that represent a transaction hash on the block chain.\n        txid:\n          type: string\n          description: Unique alpha numeric string that represent a transaction hash on the block chain.\n        coin:\n          type: string\n          description: Name of a coin i.g. btc.\n        amount:\n          type: string\n          description: Amount of coins that were withdraw.\n        fee:\n          type: string\n          description: Fees paid for the withdrawal.\n        address:\n          type: string\n          description: Requested withdrawal address.\n        state:\n          $ref: '#/components/schemas/WithdrawalState'\n        created_at:\n          type: string\n          description: Date of request creation.\n        confirmations:\n          type: number\n          description: Number of block chain confirmations.\n      example:\n        guid:   'f40d68a2-d155-455d-97b8-a856cb00d86c'\n        txid:   'dfe3ca89e8ce658a6d527ef81d1ad1f4601dc6dc8a1856d9598cfc6d1c7e5f86'\n        coin:   'eth'\n        amount: '0.688'\n        fee:    '0.002'\n        address: '16SCPYWidAKjARxeLjskihHJVzVLGoTzRw'\n        state: 'Rejected'\n        created_at: '2019-01-10T16:24:17.852Z'\n        confirmations: 0\n",
			"canonicalURL": "/github.com/etorox/docs@96e296b0b5a29859455c4a0060789b2c58c47895/-/blob/docs/trading-http-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/etorox/docs/blob/96e296b0b5a29859455c4a0060789b2c58c47895/docs/trading-http-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/v1/instruments/{instrument-Id}/book\": get: responses: 200: contents: application/json; charset=utf-8: generate schema: field asks: item: oneOf: collect variants: OrderBookAsksItem: sum types with same names not implemented",
	"NotImplemented": [
		"sum types with same names"
	]
}