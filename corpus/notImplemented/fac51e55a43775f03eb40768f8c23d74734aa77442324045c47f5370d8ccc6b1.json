{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nareshbhatia/manage-my-money"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "mmm-server/src/openapi.yaml",
			"byteSize": 12590,
			"content": "openapi: 3.0.0\ninfo:\n  version: '1.0.0'\n  title: 'Manage My Money API'\n  description: 'An API to access my financial information'\n\nservers:\n  - description: Dev Server\n    url: http://localhost:8080/api\n\npaths:\n  /accounts:\n    get:\n      description: Get all accounts\n      tags:\n        - accounts\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Accounts'\n\n    post:\n      description: Create an account\n      tags:\n        - accounts\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateAccountInput'\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n\n  /accounts/{id}:\n    get:\n      description: Get a specific account\n      tags:\n        - accounts\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: identifier of the account\n          schema:\n            type: number\n            example: 1\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    put:\n      description: Update an account\n      tags:\n        - accounts\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: identifier of the account\n          schema:\n            type: number\n            example: 1\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Account'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      description: Delete an account\n      tags:\n        - accounts\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: identifier of the account\n          schema:\n            type: number\n            example: 1\n      responses:\n        204:\n          $ref: '#/components/responses/NoContent'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /categories:\n    get:\n      description: Get all categories\n      tags:\n        - categories\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Categories'\n\n    post:\n      description: Create an category\n      tags:\n        - categories\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCategoryInput'\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Category'\n\n  /categories/{id}:\n    get:\n      description: Get a specific category\n      tags:\n        - categories\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: identifier of the category\n          schema:\n            type: number\n            example: 1\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Category'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    put:\n      description: Update an category\n      tags:\n        - categories\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: identifier of the category\n          schema:\n            type: number\n            example: 1\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Category'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Category'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      description: Delete an category\n      tags:\n        - categories\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: identifier of the category\n          schema:\n            type: number\n            example: 1\n      responses:\n        204:\n          $ref: '#/components/responses/NoContent'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /transactions:\n    get:\n      description: Get all transactions\n      tags:\n        - transactions\n      parameters:\n        - in: query\n          name: account\n          required: false\n          description: Gets transactions for the specified account\n          schema:\n            type: number\n            example: 1\n        - in: query\n          name: groupByCategory\n          required: false\n          description: Gets transaction summaries by category\n          schema:\n            type: boolean\n            example: true\n        - in: query\n          name: startDate\n          required: false\n          description: |\n                          Gets transaction summaries for txn dates on or after\n                          startDate (valid when groupByCategory is specified)\n          schema:\n            type: string\n            example: '2018-01-01'\n        - in: query\n          name: endDate\n          required: false\n          description: |\n                          Gets transaction summaries for txn dates on or before\n                          endDate (valid when groupByCategory is specified)\n          schema:\n            type: string\n            example: '2018-12-31'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/Transactions'\n                  - $ref: '#/components/schemas/TransactionSummariesByCategory'\n\n    post:\n      description: Create a transaction\n      tags:\n        - transactions\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTransactionInput'\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transaction'\n\n  /transactions/{id}:\n    get:\n      description: Get a specific transaction\n      tags:\n        - transactions\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: identifier of the transaction\n          schema:\n            type: number\n            example: 1\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transaction'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    put:\n      description: Update a transaction\n      tags:\n        - transactions\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: identifier of the transaction\n          schema:\n            type: number\n            example: 1\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Transaction'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transaction'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      description: Delete an transaction\n      tags:\n        - transactions\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: identifier of the transaction\n          schema:\n            type: number\n            example: 1\n      responses:\n        204:\n          $ref: '#/components/responses/NoContent'\n        404:\n          $ref: '#/components/responses/NotFound'\n\ncomponents:\n  responses:\n    NoContent:\n      description: NoContent\n    BadRequest:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotFound:\n      description: NotFound\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Conflict:\n      description: Conflict\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n  schemas:\n    Account:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: number\n          example: 1\n        name:\n          type: string\n          example: 'BofA Checking'\n\n    Accounts:\n      type: array\n      items:\n        $ref: '#/components/schemas/Account'\n\n    CreateAccountInput:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          example: 'BofA Checking'\n\n    Category:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: number\n          example: 1\n        name:\n          type: string\n          example: 'Transport'\n\n    Categories:\n      type: array\n      items:\n        $ref: '#/components/schemas/Category'\n\n    CreateCategoryInput:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          example: 'Transport'\n\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n\n    Transaction:\n      type: object\n      required:\n        - id\n        - txnDate\n        - payee\n        - amount\n        - accountId\n        - categoryId\n      properties:\n        id:\n          type: number\n          example: 1\n        txnDate:\n          type: string\n          description: ISO 8601 format\n          example: '2019-01-01'\n        payee:\n          type: string\n          example: 'Whole Foods'\n        memo:\n          type: string\n          example: 'Groceries for soup kitchen'\n        amount:\n          type: number\n          description: Positive for income, negative for expense\n          example: -55.74\n        accountId:\n          type: number\n          example: 1\n        categoryId:\n          type: number\n          example: 1\n\n    Transactions:\n      type: array\n      items:\n        $ref: '#/components/schemas/Transaction'\n\n    TransactionSummaryByCategory:\n      type: object\n      required:\n        - catId\n        - catName\n        - amount\n      properties:\n        catId:\n          type: number\n          example: 1\n        catName:\n          type: string\n          example: 'Transport'\n        amount:\n          type: number\n          description: Positive for income, negative for expense\n          example: -55.74\n\n    TransactionSummariesByCategory:\n      type: array\n      items:\n        $ref: '#/components/schemas/TransactionSummaryByCategory'\n\n    CreateTransactionInput:\n      type: object\n      required:\n        - txnDate\n        - payee\n        - amount\n        - accountId\n        - categoryId\n      properties:\n        txnDate:\n          type: string\n          description: ISO 8601 format\n          example: '2019-01-01'\n        payee:\n          type: string\n          example: 'Whole Foods'\n        memo:\n          type: string\n          example: 'Groceries for soup kitchen'\n        amount:\n          type: number\n          description: Positive for income, negative for expense\n          example: -55.74\n        accountId:\n          type: number\n          example: 1\n        categoryId:\n          type: number\n          example: 1\n",
			"canonicalURL": "/github.com/nareshbhatia/manage-my-money@1e8d3f9b927a97e473024e6489dbaaf6e2bfbaa8/-/blob/mmm-server/src/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/nareshbhatia/manage-my-money/blob/1e8d3f9b927a97e473024e6489dbaaf6e2bfbaa8/mmm-server/src/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/transactions\": get: responses: 200: contents: application/json: generate schema: oneOf: oneOf TransactionsGetOK: variant Transactions: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}