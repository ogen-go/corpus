{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "scim.yaml",
			"size": 0,
			"path": "providers/src/github/v0.3.0/services/scim.yaml",
			"byteSize": 34276,
			"content": "paths:\n  /scim/v2/organizations/{org}/Users:\n    get:\n      summary: List SCIM provisioned identities\n      description: |-\n        Retrieves a paginated list of all provisioned organization members, including pending invitations. If you provide the `filter` parameter, the resources for all matching provisions members are returned.\n\n        When a user with a SAML-provisioned external identity leaves (or is removed from) an organization, the account's metadata is immediately removed. However, the returned list of user accounts might not always match the organization or enterprise member list you see on GitHub. This can happen in certain cases where an external identity associated with an organization will not match an organization member:\n          - When a user with a SCIM-provisioned external identity is removed from an organization, the account's metadata is preserved to allow the user to re-join the organization in the future.\n          - When inviting a user to join an organization, you can expect to see their external identity in the results before they accept the invitation, or if the invitation is cancelled (or never accepted).\n          - When a user is invited over SCIM, an external identity is created that matches with the invitee's email address. However, this identity is only linked to a user account when the user accepts the invitation by going through SAML SSO.\n\n        The returned list of external identities can include an entry for a `null` user. These are unlinked SAML identities that are created when a user goes through the following Single Sign-On (SSO) process but does not sign in to their GitHub account after completing SSO:\n\n        1. The user is granted access by the IdP and is not a member of the GitHub organization.\n\n        1. The user attempts to access the GitHub organization and initiates the SAML SSO process, and is not currently signed in to their GitHub account.\n\n        1. After successfully authenticating with the SAML SSO IdP, the `null` external identity entry is created and the user is prompted to sign in to their GitHub account:\n           - If the user signs in, their GitHub account is linked to this entry.\n           - If the user does not sign in (or does not create a new account when prompted), they are not added to the GitHub organization, and the external identity `null` entry remains in place.\n      tags:\n        - scim\n      operationId: scim/list-provisioned-identities\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/scim#list-scim-provisioned-identities\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - name: startIndex\n          description: 'Used for pagination: the index of the first result to return.'\n          in: query\n          required: false\n          schema:\n            type: integer\n        - name: count\n          description: 'Used for pagination: the number of results to return.'\n          in: query\n          required: false\n          schema:\n            type: integer\n        - name: filter\n          description: |-\n            Filters results using the equals query parameter operator (`eq`). You can filter results that are equal to `id`, `userName`, `emails`, and `external_id`. For example, to search for an identity with the `userName` Octocat, you would use this query:\n\n            `?filter=userName%20eq%20\\\"Octocat\\\"`.\n\n            To filter results for the identity with the email `octocat@github.com`, you would use this query:\n\n            `?filter=emails%20eq%20\\\"octocat@github.com\\\"`.\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/scim-user-list'\n              examples:\n                response-with-filter:\n                  $ref: '#/components/examples/scim-user-list-response-with-filter'\n                response-without-filter:\n                  $ref: '#/components/examples/scim-user-list-response-without-filter'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '400':\n          $ref: '#/components/responses/scim_bad_request'\n        '403':\n          $ref: '#/components/responses/scim_forbidden'\n        '404':\n          $ref: '#/components/responses/scim_not_found'\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: true\n        category: scim\n        subcategory: null\n    post:\n      summary: Provision and invite a SCIM user\n      description: Provision organization membership for a user, and send an activation email to the email address.\n      tags:\n        - scim\n      operationId: scim/provision-and-invite-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/scim#provision-and-invite-a-scim-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n      responses:\n        '201':\n          description: Response\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/scim-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/scim-user'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '400':\n          $ref: '#/components/responses/scim_bad_request'\n        '403':\n          $ref: '#/components/responses/scim_forbidden'\n        '404':\n          $ref: '#/components/responses/scim_not_found'\n        '409':\n          $ref: '#/components/responses/scim_conflict'\n        '500':\n          $ref: '#/components/responses/scim_internal_error'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                userName:\n                  description: Configured by the admin. Could be an email, login, or username\n                  example: someone@example.com\n                  type: string\n                displayName:\n                  description: The name of the user, suitable for display to end-users\n                  example: Jon Doe\n                  type: string\n                name:\n                  type: object\n                  properties:\n                    givenName:\n                      type: string\n                    familyName:\n                      type: string\n                    formatted:\n                      type: string\n                  required:\n                    - givenName\n                    - familyName\n                  example:\n                    givenName: Jane\n                    familyName: User\n                emails:\n                  description: user emails\n                  example:\n                    - value: someone@example.com\n                      primary: true\n                    - value: another@example.com\n                      primary: false\n                  type: array\n                  minItems: 1\n                  items:\n                    type: object\n                    properties:\n                      value:\n                        type: string\n                      primary:\n                        type: boolean\n                      type:\n                        type: string\n                    required:\n                      - value\n                schemas:\n                  type: array\n                  items:\n                    type: string\n                externalId:\n                  type: string\n                groups:\n                  type: array\n                  items:\n                    type: string\n                active:\n                  type: boolean\n              required:\n                - userName\n                - name\n                - emails\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: true\n        category: scim\n        subcategory: null\n  /scim/v2/organizations/{org}/Users/{scim_user_id}:\n    get:\n      summary: Get SCIM provisioning information for a user\n      description: ''\n      tags:\n        - scim\n      operationId: scim/get-provisioning-information-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/scim#get-scim-provisioning-information-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/scim-user-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/scim-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/scim-user'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '403':\n          $ref: '#/components/responses/scim_forbidden'\n        '404':\n          $ref: '#/components/responses/scim_not_found'\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: true\n        category: scim\n        subcategory: null\n    put:\n      summary: Update a provisioned organization membership\n      description: |-\n        Replaces an existing provisioned user's information. You must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don't provide will be removed. If you want to only update a specific attribute, use the [Update an attribute for a SCIM user](https://docs.github.com/rest/reference/scim#update-an-attribute-for-a-scim-user) endpoint instead.\n\n        You must at least provide the required values for the user: `userName`, `name`, and `emails`.\n\n        **Warning:** Setting `active: false` removes the user from the organization, deletes the external identity, and deletes the associated `{scim_user_id}`.\n      tags:\n        - scim\n      operationId: scim/set-information-for-provisioned-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/scim#set-scim-information-for-a-provisioned-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/scim-user-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/scim-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/scim-user'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '403':\n          $ref: '#/components/responses/scim_forbidden'\n        '404':\n          $ref: '#/components/responses/scim_not_found'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                schemas:\n                  type: array\n                  items:\n                    type: string\n                displayName:\n                  description: The name of the user, suitable for display to end-users\n                  example: Jon Doe\n                  type: string\n                externalId:\n                  type: string\n                groups:\n                  type: array\n                  items:\n                    type: string\n                active:\n                  type: boolean\n                userName:\n                  description: Configured by the admin. Could be an email, login, or username\n                  example: someone@example.com\n                  type: string\n                name:\n                  type: object\n                  properties:\n                    givenName:\n                      type: string\n                    familyName:\n                      type: string\n                    formatted:\n                      type: string\n                  required:\n                    - givenName\n                    - familyName\n                  example:\n                    givenName: Jane\n                    familyName: User\n                emails:\n                  description: user emails\n                  example:\n                    - value: someone@example.com\n                      primary: true\n                    - value: another@example.com\n                      primary: false\n                  type: array\n                  minItems: 1\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                      value:\n                        type: string\n                      primary:\n                        type: boolean\n                    required:\n                      - value\n              required:\n                - userName\n                - name\n                - emails\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: true\n        category: scim\n        subcategory: null\n    patch:\n      summary: Update an attribute for a SCIM user\n      description: |-\n        Allows you to change a provisioned user's individual attributes. To change a user's values, you must provide a specific `Operations` JSON format that contains at least one of the `add`, `remove`, or `replace` operations. For examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).\n\n        **Note:** Complicated SCIM `path` selectors that include filters are not supported. For example, a `path` selector defined as `\"path\": \"emails[type eq \\\"work\\\"]\"` will not work.\n\n        **Warning:** If you set `active:false` using the `replace` operation (as shown in the JSON example below), it removes the user from the organization, deletes the external identity, and deletes the associated `:scim_user_id`.\n\n        ```\n        {\n          \"Operations\":[{\n            \"op\":\"replace\",\n            \"value\":{\n              \"active\":false\n            }\n          }]\n        }\n        ```\n      tags:\n        - scim\n      operationId: scim/update-attribute-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/scim#update-an-attribute-for-a-scim-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/scim-user-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/scim-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/scim-user'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '400':\n          $ref: '#/components/responses/scim_bad_request'\n        '403':\n          $ref: '#/components/responses/scim_forbidden'\n        '404':\n          $ref: '#/components/responses/scim_not_found'\n        '429':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/basic-error'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                schemas:\n                  type: array\n                  items:\n                    type: string\n                Operations:\n                  description: Set of operations to be performed\n                  example:\n                    - op: replace\n                      value:\n                        active: false\n                  type: array\n                  minItems: 1\n                  items:\n                    type: object\n                    properties:\n                      op:\n                        type: string\n                        enum:\n                          - add\n                          - remove\n                          - replace\n                      path:\n                        type: string\n                      value:\n                        oneOf:\n                          - type: object\n                            properties:\n                              active:\n                                type: boolean\n                                nullable: true\n                              userName:\n                                type: string\n                                nullable: true\n                              externalId:\n                                type: string\n                                nullable: true\n                              givenName:\n                                type: string\n                                nullable: true\n                              familyName:\n                                type: string\n                                nullable: true\n                          - type: array\n                            items:\n                              type: object\n                              properties:\n                                value:\n                                  type: string\n                                primary:\n                                  type: boolean\n                          - type: string\n                    required:\n                      - op\n              required:\n                - Operations\n              type: object\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: true\n        category: scim\n        subcategory: null\n    delete:\n      summary: Delete a SCIM user from an organization\n      description: ''\n      tags:\n        - scim\n      operationId: scim/delete-user-from-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/scim#delete-a-scim-user-from-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/scim-user-id'\n      responses:\n        '204':\n          description: Response\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '403':\n          $ref: '#/components/responses/scim_forbidden'\n        '404':\n          $ref: '#/components/responses/scim_not_found'\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: true\n        category: scim\n        subcategory: null\ncomponents:\n  schemas:\n    scim-user-list:\n      title: SCIM User List\n      description: SCIM User List\n      type: object\n      properties:\n        schemas:\n          description: SCIM schema used.\n          type: array\n          minItems: 1\n          items:\n            type: string\n            example: urn:ietf:params:scim:api:messages:2.0:ListResponse\n        totalResults:\n          type: integer\n          example: 3\n        itemsPerPage:\n          type: integer\n          example: 10\n        startIndex:\n          type: integer\n          example: 1\n        Resources:\n          type: array\n          items:\n            $ref: '#/components/schemas/scim-user'\n      required:\n        - schemas\n        - totalResults\n        - itemsPerPage\n        - startIndex\n        - Resources\n    scim-user:\n      title: SCIM /Users\n      description: SCIM /Users provisioning endpoints\n      type: object\n      properties:\n        schemas:\n          description: SCIM schema used.\n          type: array\n          minItems: 1\n          items:\n            type: string\n            example: urn:ietf:params:scim:schemas:core:2.0:User\n        id:\n          description: Unique identifier of an external identity\n          example: 1b78eada-9baa-11e6-9eb6-a431576d590e\n          type: string\n        externalId:\n          description: The ID of the User.\n          type: string\n          example: a7b0f98395\n          nullable: true\n        userName:\n          description: Configured by the admin. Could be an email, login, or username\n          example: someone@example.com\n          type: string\n          nullable: true\n        displayName:\n          description: The name of the user, suitable for display to end-users\n          example: Jon Doe\n          type: string\n          nullable: true\n        name:\n          type: object\n          properties:\n            givenName:\n              type: string\n              nullable: true\n            familyName:\n              type: string\n              nullable: true\n            formatted:\n              type: string\n              nullable: true\n          required:\n            - givenName\n            - familyName\n          example:\n            givenName: Jane\n            familyName: User\n        emails:\n          description: user emails\n          example:\n            - value: someone@example.com\n              primary: true\n            - value: another@example.com\n              primary: false\n          type: array\n          minItems: 1\n          items:\n            type: object\n            properties:\n              value:\n                type: string\n              primary:\n                type: boolean\n            required:\n              - value\n        active:\n          description: The active status of the User.\n          type: boolean\n          example: true\n        meta:\n          type: object\n          properties:\n            resourceType:\n              type: string\n              example: User\n            created:\n              type: string\n              format: date-time\n              example: '2019-01-24T22:45:36.000Z'\n            lastModified:\n              type: string\n              format: date-time\n              example: '2019-01-24T22:45:36.000Z'\n            location:\n              type: string\n              format: uri\n              example: https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d\n        organization_id:\n          description: The ID of the organization.\n          type: integer\n        operations:\n          description: Set of operations to be performed\n          example:\n            - op: replace\n              value:\n                active: false\n          type: array\n          minItems: 1\n          items:\n            properties:\n              op:\n                type: string\n                enum:\n                  - add\n                  - remove\n                  - replace\n              path:\n                type: string\n              value:\n                oneOf:\n                  - type: string\n                  - type: object\n                  - type: array\n                    items: {}\n            required:\n              - op\n            type: object\n        groups:\n          description: associated groups\n          type: array\n          items:\n            properties:\n              value:\n                type: string\n              display:\n                type: string\n      required:\n        - id\n        - schemas\n        - externalId\n        - userName\n        - name\n        - emails\n        - active\n        - meta\n    scim-error:\n      title: Scim Error\n      description: Scim Error\n      type: object\n      properties:\n        message:\n          type: string\n          nullable: true\n        documentation_url:\n          type: string\n          nullable: true\n        detail:\n          type: string\n          nullable: true\n        status:\n          type: integer\n        scimType:\n          type: string\n          nullable: true\n        schemas:\n          type: array\n          items:\n            type: string\n    basic-error:\n      title: Basic Error\n      description: Basic Error\n      type: object\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        url:\n          type: string\n        status:\n          type: string\n  parameters:\n    org:\n      name: org\n      in: path\n      required: true\n      schema:\n        type: string\n    scim-user-id:\n      name: scim_user_id\n      description: scim_user_id parameter\n      in: path\n      required: true\n      schema:\n        type: string\n  responses:\n    not_modified:\n      description: Not modified\n    scim_bad_request:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/scim-error'\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/scim-error'\n    scim_forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/scim-error'\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/scim-error'\n    scim_not_found:\n      description: Resource not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/scim-error'\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/scim-error'\n    scim_conflict:\n      description: Conflict\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/scim-error'\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/scim-error'\n    scim_internal_error:\n      description: Internal Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/scim-error'\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/scim-error'\n  securitySchemes: {}\n  callbacks: {}\n  examples:\n    scim-user-list-response-with-filter:\n      summary: Response with filter\n      value:\n        schemas:\n          - urn:ietf:params:scim:api:messages:2.0:ListResponse\n        totalResults: 1\n        itemsPerPage: 1\n        startIndex: 1\n        Resources:\n          - schemas:\n              - urn:ietf:params:scim:schemas:core:2.0:User\n            id: 5fc0c238-1112-11e8-8e45-920c87bdbd75\n            externalId: 00u1dhhb1fkIGP7RL1d8\n            userName: octocat@github.com\n            displayName: Mona Octocat\n            name:\n              givenName: Mona\n              familyName: Octocat\n              formatted: Mona Octocat\n            emails:\n              - value: octocat@github.com\n                primary: true\n            active: true\n            meta:\n              resourceType: User\n              created: '2018-02-13T15:05:24.000-08:00'\n              lastModified: '2018-02-13T15:05:55.000-08:00'\n              location: https://api.github.com/scim/v2/organizations/octo-org/Users/5fc0c238-1112-11e8-8e45-920c87bdbd75\n    scim-user-list-response-without-filter:\n      summary: Response without filter\n      value:\n        schemas:\n          - urn:ietf:params:scim:api:messages:2.0:ListResponse\n        totalResults: 2\n        itemsPerPage: 2\n        startIndex: 1\n        Resources:\n          - schemas:\n              - urn:ietf:params:scim:schemas:core:2.0:User\n            id: edefdfedf-050c-11e7-8d32\n            externalId: a7d0f98382\n            userName: mona.octocat@okta.example.com\n            displayName: Mona Octocat\n            name:\n              givenName: Mona\n              familyName: Octocat\n              formatted: Mona Octocat\n            emails:\n              - value: mona.octocat@okta.example.com\n                primary: true\n            active: true\n            meta:\n              resourceType: User\n              created: '2017-03-09T16:11:13-05:00'\n              lastModified: '2017-03-09T16:11:13-05:00'\n              location: https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32\n          - schemas:\n              - urn:ietf:params:scim:schemas:core:2.0:User\n            id: 77563764-eb6-24-0598234-958243\n            externalId: sdfoiausdofiua\n            userName: hubot@example.com\n            displayName: hu bot\n            name:\n              givenName: hu\n              familyName: bot\n              formatted: hu bot\n            emails:\n              - value: hubot@example.com\n                primary: true\n            active: true\n            meta:\n              resourceType: User\n              created: '2017-03-09T16:11:13-05:00'\n              lastModified: '2017-03-09T16:11:13-05:00'\n              location: https://api.github.com/scim/v2/organizations/octo-org/Users/77563764-eb6-24-0598234-958243\n    scim-user:\n      value:\n        schemas:\n          - urn:ietf:params:scim:schemas:core:2.0:User\n        id: edefdfedf-050c-11e7-8d32\n        externalId: a7d0f98382\n        userName: mona.octocat@okta.example.com\n        displayName: Monalisa Octocat\n        name:\n          givenName: Monalisa\n          familyName: Octocat\n          formatted: Monalisa Octocat\n        emails:\n          - value: mona.octocat@okta.example.com\n            primary: true\n          - value: monalisa@octocat.github.com\n        active: true\n        meta:\n          resourceType: User\n          created: '2017-03-09T16:11:13-05:00'\n          lastModified: '2017-03-09T16:11:13-05:00'\n          location: https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32\n  requestBodies: {}\n  headers: {}\n  links: {}\n  x-stackQL-resources:\n    users:\n      id: github.scim.users\n      name: users\n      title: Scim Users\n      methods:\n        list_provisioned_identities:\n          operation:\n            $ref: '#/paths/~1scim~1v2~1organizations~1{org}~1Users/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        provision_and_invite_user:\n          operation:\n            $ref: '#/paths/~1scim~1v2~1organizations~1{org}~1Users/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_provisioning_information_for_user:\n          operation:\n            $ref: '#/paths/~1scim~1v2~1organizations~1{org}~1Users~1{scim_user_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        set_information_for_provisioned_user:\n          operation:\n            $ref: '#/paths/~1scim~1v2~1organizations~1{org}~1Users~1{scim_user_id}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_attribute_for_user:\n          operation:\n            $ref: '#/paths/~1scim~1v2~1organizations~1{org}~1Users~1{scim_user_id}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_user_from_org:\n          operation:\n            $ref: '#/paths/~1scim~1v2~1organizations~1{org}~1Users~1{scim_user_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/users/methods/get_provisioning_information_for_user'\n          - $ref: '#/components/x-stackQL-resources/users/methods/list_provisioned_identities'\n        insert: []\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/users/methods/delete_user_from_org'\nopenapi: 3.0.3\nservers:\n  - url: https://api.github.com\ntags:\n  - name: actions\n    description: Endpoints to manage GitHub Actions using the REST API.\n  - name: activity\n    description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  - name: apps\n    description: Information for integrations and installations.\n  - name: billing\n    description: Monitor charges and usage from Actions and Packages.\n  - name: checks\n    description: Rich interactions with checks run by your integrations.\n  - name: code-scanning\n    description: Retrieve code scanning alerts from a repository.\n  - name: codes-of-conduct\n    description: Insight into codes of conduct for your communities.\n  - name: codespaces\n    description: Endpoints to manage Codespaces using the REST API.\n  - name: emojis\n    description: List emojis available to use on GitHub.\n  - name: enterprise-admin\n    description: Administer a GitHub enterprise.\n  - name: dependabot\n    description: Endpoints to manage Dependabot.\n  - name: gists\n    description: View, modify your gists.\n  - name: git\n    description: Raw Git functionality.\n  - name: gitignore\n    description: View gitignore templates\n  - name: interactions\n    description: Owner or admin management of users interactions.\n  - name: issues\n    description: Interact with GitHub Issues.\n  - name: licenses\n    description: View various OSS licenses.\n  - name: markdown\n    description: Render GitHub flavored markdown\n  - name: meta\n    description: Endpoints that give information about the API.\n  - name: migrations\n    description: Move projects to or from GitHub.\n  - name: oauth-authorizations\n    description: Manage access of OAuth applications\n  - name: orgs\n    description: Interact with GitHub Orgs.\n  - name: packages\n    description: Manage packages for authenticated users and organizations.\n  - name: projects\n    description: Interact with GitHub Projects.\n  - name: pulls\n    description: Interact with GitHub Pull Requests.\n  - name: rate-limit\n    description: Check your current rate limit status\n  - name: reactions\n    description: Interact with reactions to various GitHub entities.\n  - name: repos\n    description: Interact with GitHub Repos.\n  - name: scim\n    description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  - name: search\n    description: Look for stuff on GitHub.\n  - name: secret-scanning\n    description: Retrieve secret scanning alerts from a repository.\n  - name: server-statistics\n    description: GHES statistics\n  - name: teams\n    description: Interact with GitHub Teams.\n  - name: users\n    description: Interact with and view information about users and also current user.\nexternalDocs:\n  description: GitHub v3 REST API\n  url: https://docs.github.com/rest/\ninfo:\n  version: 1.1.4\n  title: GitHub v3 REST API - scim\n  description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  license:\n    name: MIT\n    url: https://spdx.org/licenses/MIT\n  termsOfService: https://docs.github.com/articles/github-terms-of-service\n  contact:\n    name: Support\n    url: https://support.github.com/contact?tags=dotcom-rest-api\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/github/v0.3.0/services/scim.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/github/v0.3.0/services/scim.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/scim/v2/organizations/{org}/Users\": get: responses: 200: contents: unsupported content types: [application/scim+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}