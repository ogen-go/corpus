{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/saps4hana.itcm.customer/openapi.yaml",
			"byteSize": 10691,
			"content": "openapi: 3.0.1\ninfo:\n  title: Customer Service\n  description: \u003e\n    This is a generated connector for [SAPS4HANA Intelligent Trade Claims Management API v1.0.0](https://help.sap.com/viewer/902b9d277dfe48fea582d28849d54935/CURRENT/en-US) OpenAPI specification. \n    \n    In SAPS4HANA Intelligent Trade Claims Management, the customer service allows you to access their customers retailer and distributor information.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n\n    Create and configure an OAuth2 client credentials by following [this guide](https://help.sap.com/viewer/b865ed651e414196b39f8922db2122c7/LATEST/en-US/7aefa21a65f94b25b7e639c3931b6f83.html).\n  x-ballerina-display:\n    label: SAPS4HANA ITCM Customer\n    iconPath: \"icon.png\"\n  contact:\n    name: ITCM\n  license:\n    name: SAP\n  version: 1.0.0\nexternalDocs:\n  description: Business Documentation for Customer Service\n  url: https://help.sap.com/viewer/902b9d277dfe48fea582d28849d54935/CURRENT/en-US/b6e65eda3fd94311af84abd5e4403579.html\nsecurity:\n- OAuth2: []\n# servers:\n# - url: https://{host}.{environment}.{domain}/v1\n#   variables:\n#     host:\n#       default: api.dev1\n#       description: Your host where SAP Intelligent Trade Claims Management has deployed\n#     environment:\n#       default: e2e\n#       description: Your defined environment for your SAP Intelligent Trade Claims Management account\n#     domain:\n#       default: eurekacloud.io\ntags:\n- name: Customer\npaths:\n  /customers:\n    post:\n      tags:\n      - Customer\n      summary: Create a new Customer\n      description: Using this API, user can create a Customer. As of now, batch creation is not supported\n      operationId: createCustomer\n      requestBody:\n        description: Request payload to create customer\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomerDTO'\n        required: true\n      responses:\n        '201':\n          description: Success Created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseCreatedMessage'\n        '401':\n          description: Unauthorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseUnauthorizedMessage'\n        '403':\n          description: Forbidden (insufficient authorization).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseForbiddenMessage'\n      deprecated: false\n      security:\n      - OAuth2: []\n  /customers/{externalid}:\n    get:\n      tags:\n      - Customer\n      summary: Get the details of a Customer with externalId\n      description: Using this API, user can get a particular Customer using {externalid}\n      operationId: getCustomerByExternalId\n      parameters:\n      - name: externalid\n        in: path\n        description: customer's external id\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerDTO'\n        '401':\n          description: Unauthorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseUnauthorizedMessage'\n        '403':\n          description: Forbidden (insufficient authorization).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseForbiddenMessage'\n        '404':\n          description: Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseNotFoundMessage'\n      deprecated: false\n      security:\n      - OAuth2: []\n    delete:\n      tags:\n      - Customer\n      summary: Delete a Customer with externalId\n      description: Using this API, a user can delete particular Customer by using {externalId}\n      operationId: deleteCustomer\n      parameters:\n      - name: externalid\n        in: path\n        description: customer's external id\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDeleteCurrencyMessage'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseUnauthorizedMessage'\n        '403':\n          description: Forbidden (insufficient authorization).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseForbiddenMessage'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseNotFoundMessage'\n      deprecated: false\n      security:\n      - OAuth2: []\ncomponents:\n  schemas:\n    ResponseNotFoundMessage:\n      type: object\n      example:\n        message: There is no data found based on the given inputs.\n        error: No Result Found\n        timestamp: '2021-01-18T19:37:13.701+00:00'\n      properties:\n        message:\n          type: string\n        error:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n      title: Not Found Message\n    ResponseCreatedMessage:\n      title: Response Customer created\n      type: object\n      example:\n        id: '1234'\n        message: Success Created\n        timestamp: '2021-01-18T18:32:30.095Z'\n      properties:\n        id:\n          type: string\n        message:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n    ResponseForbiddenMessage:\n      type: object\n      example:\n        message: Access denied\n        timestamp: '2021-01-18T18:33:18.914Z'\n      properties:\n        message:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n        uri:\n          type: string\n      title: Forbidden Message\n    ResponseUnauthorizedMessage:\n      type: object\n      example:\n        message: Unauthorized/API key not found\n        timestamp: '2021-01-18T18:33:18.914Z'\n      properties:\n        message:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n        uri:\n          type: string\n      title: Unauthorized Message\n    CustomerDTO:\n      title: CustomerDTO\n      type: object\n      example:\n        businessSystem: 0\n        customerAddress:\n          formattedOrgNameLine1: USA\n          formattedOrgNameLine2: California\n          formattedOrgNameLine3: Cupertino\n          formattedOrgNameLine4: '#1234'\n        customerSalesData:\n        - customerPartnerRole:\n          - customerID: '34567'\n            name: Sam\n            partnerCode: '01'\n            partnerDescription: Platinum Partner\n          salesArea:\n            distributionChannelCode: '01'\n            salesDivision: '02'\n            salesOrganizationID: '12345'\n        deletionIndicator: true\n        externalID: '34567'\n        externalId: '122345'\n        fullName: Sam Billings\n        name: Sam\n        supplierID: '34509'\n      properties:\n        businessSystem:\n          type: integer\n          format: int64\n        customerAddress:\n          $ref: '#/components/schemas/ScriptedOrganizationAddressDTO'\n        customerSalesData:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomerSalesAspectDTO'\n        deletionIndicator:\n          type: boolean\n        externalID:\n          type: string\n        externalId:\n          type: string\n        fullName:\n          type: string\n        name:\n          type: string\n        supplierID:\n          type: string\n    CustomerPartnerRoleDTO:\n      title: CustomerPartnerRoleDTO\n      type: object\n      properties:\n        customerID:\n          type: string\n        name:\n          type: string\n        partnerCode:\n          type: string\n        partnerDescription:\n          type: string\n    ResponseDeleteCurrencyMessage:\n      title: Response Delete Customer\n      type: object\n      example:\n        message: Success Deleted\n        timestamp: '2021-01-18T18:32:30.095Z'\n      properties:\n        message:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n    CustomerSalesAspectDTO:\n      title: CustomerSalesAspectDTO\n      type: object\n      properties:\n        customerPartnerRole:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomerPartnerRoleDTO'\n        salesArea:\n          $ref: '#/components/schemas/SalesAreaDTO'\n    PageDTO:\n      title: PageDTO«CustomerDTO»\n      type: object\n      properties:\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomerDTO'\n        first:\n          type: boolean\n        last:\n          type: boolean\n        pageNumber:\n          type: integer\n          format: int32\n        pageSize:\n          type: integer\n          format: int32\n        totalElements:\n          type: integer\n          format: int64\n        totalPages:\n          type: integer\n          format: int32\n    SalesAreaDTO:\n      title: SalesAreaDTO\n      type: object\n      properties:\n        distributionChannelCode:\n          type: string\n        salesDivision:\n          type: string\n        salesOrganizationID:\n          type: string\n    ScriptedOrganizationAddressDTO:\n      title: ScriptedOrganizationAddressDTO\n      type: object\n      properties:\n        formattedOrgNameLine1:\n          type: string\n        formattedOrgNameLine2:\n          type: string\n        formattedOrgNameLine3:\n          type: string\n        formattedOrgNameLine4:\n          type: string\n  securitySchemes:\n    OAuth2:\n      type: oauth2\n      description: To use this API, you need to get OAuth client credentials (client ID and secret) from SAP ITCM, and be authorized to use the relevant scope. Refer to the \u003ca href=\"https://developer.sap.com/api-reference/authentication/getting-started.html\"\u003efull authentication information\u003c/a\u003e for more information.\n      flows:\n        clientCredentials:\n          tokenUrl: https://colgate-dev1.authentication.us30.hana.ondemand.com/oauth/token\n          scopes: {}\nx-sap-shortText: The Customer service represent customers that can be posted to, deleted or queried from SAP Intelligent Trade Claims Management by a user.",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/saps4hana.itcm.customer/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/saps4hana.itcm.customer/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/customers/{externalid}\": get: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}