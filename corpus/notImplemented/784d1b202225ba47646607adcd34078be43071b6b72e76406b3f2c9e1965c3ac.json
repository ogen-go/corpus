{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/fungenerators.uuid/openapi.yml",
			"byteSize": 8478,
			"content": "openapi: 3.0.0\ninfo:\n  termsOfService: https://fungenerators.com/terms\n  x-ballerina-init-description: \u003e-\n    The connector initialization requires setting the API credentials. \n    \n    Create a [fungenerators account](https://fungenerators.com/) and obtain tokens by following [this guide](https://fungenerators.com/api/uuid/#authentication).\n  description: \u003e-\n    This is a generated connector from [fungenerators UUID API v1.5](https://fungenerators.com/api/uuid/) OpenAPI Specification.\n\n    A full featured, REST based UUID generator with json/xml/jsonp result support. You can try them out right here. [Click here to subscribe](http://fungenerators.com/api/uuid/)\n  x-ballerina-display:\n    label: Fun Generators UUID\n    iconPath: \"icon.png\"\n  title: UUID Generation API\n  version: \"1.5\"\n  contact:\n    name: Fun Generators\n    url: https://fungenerators.com/\ntags:\n  - name: UUID Generation\n    description: Generate different versions of UUID easily.\n    externalDocs:\n      description: Find out more\n      url: https://fungenerators.com/api/uuid/\n  - name: UUID Parsing\n    description: Parse UUID string and check for its validity and return version details\n    externalDocs:\n      description: Find out more\n      url: https://fungenerators.com/api/uuid/\npaths:\n  /uuid:\n    get:\n      operationId: generateUUID\n      tags:\n        - UUID Generation\n      summary: Generate a random UUID (v4).\n      security:\n        - X-Fungenerators-Api-Secret: []\n      parameters:\n        - description: Number of UUID's to generate (defaults to 1)\n          in: query\n          name: count\n          required: false\n          schema:\n            type: integer\n            format: integer\n      responses:\n        \"200\":\n          description: 200  response\n          content:\n            application/json:\n              examples:\n                response:\n                  value: \u003e-\n                      {\n                        \"success\": {\n                          \"total\": 4\n                        },\n                        \"contents\": {\n                          \"uuid\": [\n                            {\n                              \"uuid\": \"b201b88e-b0d2-4e82-9ea8-d2d1e25b3bd0\",\n                              \"version\": 4\n                            },\n                            {\n                              \"uuid\": \"75becbbb-ae68-4e1a-95b1-c2dfc7a5891a\",\n                              \"version\": 4\n                            },\n                            {\n                              \"uuid\": \"3cffa9ad-00a9-4d7a-87f3-85626808444f\",\n                              \"version\": 4\n                            },\n                            {\n                              \"uuid\": \"d2c477c2-a2e3-463a-a3c5-0f131c9826c2\",\n                              \"version\": 4\n                            }\n                          ],\n                          \"copyright\": {\n                              \"year\": \"2020\",\n                              \"url\": \"  https://fungenerators.com/random/uuid\"\n                          }\n                        }\n                      }\n        \"401\":\n          description: 401  response\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n    post:\n      operationId: parseUUID\n      tags:\n        - UUID Parsing\n      summary: Parse a UUID string and return its version and check whether it is valid.\n      security:\n        - X-Fungenerators-Api-Secret: []\n      parameters:\n        - description: UUID String to parse\n          in: query\n          name: uuidstr\n          required: true\n          schema:\n            type: string\n            format: string\n      responses:\n        \"200\":\n          description: 200  response\n          content:\n            application/json:\n              examples:\n                response:\n                  value: \u003e-\n                        {\n                          \"success\": {\n                            \"total\": 1\n                          },\n                          \"contents\": {\n                            \"uuid\": [\n                              {\n                                \"is_valid\": true,\n                                \"uuid\": \"14cdb9b4-de01-3faa-aff5-65bc2f771745\",\n                                \"version\": 3\n                              }\n                            ],\n                            \"copyright\": {\n                              \"year\": \"2020\",\n                              \"url\": \"  https://fungenerators.com/random/uuid\"\n                            }\n                          }\n                        }\n        \"401\":\n          description: 401  response\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n  /uuid/version/{version}:\n    get:\n      operationId: generateUUIDByVersion\n      tags:\n        - UUID Generation\n      summary: Generate a random UUID (v4).\n      security:\n        - X-Fungenerators-Api-Secret: []\n      parameters:\n        - description: Number of UUID's to generate (defaults to 1)\n          in: query\n          name: count\n          required: false\n          schema:\n            type: integer\n            format: integer\n        - description: Version of the UUID spec to use. (0-5), Use '0' for nil (00000000-0000-0000-0000-000000000000) UUID.\n          in: path\n          name: version\n          required: true\n          schema:\n            type: integer\n            format: integer\n        - description: For v3 and v5 of UUID Spec you can supply the type (dns/url/oid/x500/nil).\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            format: string\n        - description: For v3 and v5 of UUID Spec supply the text value for the type specified dns/url/oid/x500/nil. For example specify a dns/domain string if the type is \"dns\"\n          in: query\n          name: text\n          required: false\n          schema:\n            type: string\n            format: string\n      responses:\n        \"200\":\n          description: 200  response\n          content:\n            application/json:\n              examples:\n                response:\n                  value: \u003e-\n                      {\n                        \"success\": {\n                          \"total\": 4\n                        },\n                        \"contents\": {\n                          \"uuid\": [\n                            {\n                              \"uuid\": \"b201b88e-b0d2-4e82-9ea8-d2d1e25b3bd0\",\n                              \"version\": 4\n                            },\n                            {\n                              \"uuid\": \"75becbbb-ae68-4e1a-95b1-c2dfc7a5891a\",\n                              \"version\": 4\n                            },\n                            {\n                              \"uuid\": \"3cffa9ad-00a9-4d7a-87f3-85626808444f\",\n                              \"version\": 4\n                            },\n                            {\n                              \"uuid\": \"d2c477c2-a2e3-463a-a3c5-0f131c9826c2\",\n                              \"version\": 4\n                            }\n                          ],\n                          \"copyright\": {\n                              \"year\": \"2020\",\n                              \"url\": \"  https://fungenerators.com/random/uuid\"\n                          }\n                        }\n                      }\n        \"401\":\n          description: 401  response\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\nservers:\n  - url: https://api.fungenerators.com\ncomponents:\n  securitySchemes:\n    X-Fungenerators-Api-Secret:\n      type: apiKey\n      name: X-Fungenerators-Api-Secret\n      in: header\n      description: Represents API Key `X-Fungenerators-Api-Secret`\n\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/fungenerators.uuid/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/fungenerators.uuid/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/uuid\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}