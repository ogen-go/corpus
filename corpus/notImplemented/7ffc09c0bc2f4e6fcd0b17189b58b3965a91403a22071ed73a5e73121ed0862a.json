{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "lufthansa.com-public-1.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/lufthansa.com-public-1.0-swagger.yaml",
			"byteSize": 32267,
			"content": "openapi: 3.0.0\ninfo:\n  license:\n    name: LH\n    url: https://developer.lufthansa.com\n  title: LH Public\n  version: \"1.0\"\n  x-apisguru-categories:\n    - transport\n  x-logo:\n    backgroundColor: \"#FFFFFF\"\n    url: https://avatars2.githubusercontent.com/u/22329684?v=4\u0026s=200\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/LufthansaOpenAPI/Swagger/master/LH_public_API_swagger_2_0.json\n      version: \"2.0\"\n  x-providerName: lufthansa.com\n  x-serviceName: public\npaths:\n  \"/cargo/getRoute/{origin}-{destination}/{fromDate}/{productCode}\":\n    get:\n      description: Retrieve a list of all possible flights (both direct and connecting)\n        between two airports on a given date. Routes are available for today and\n        up to days in the future.\n      operationId: CargoGetRouteFromDateProductCodeByOriginAndDestinationGet\n      parameters:\n        - description: \"Departure Airport : 3-letter IATA airport code, e.g. FRA.\"\n          in: path\n          name: origin\n          required: true\n          schema:\n            type: string\n        - description: \"Arrival airport : 3-letter IATA airport code, e.g. HKG.\"\n          in: path\n          name: destination\n          required: true\n          schema:\n            type: string\n        - description: \"Departure date in the local time of the departure airport. Based on\n            LAT (Latest Acceptance Time). format : yyyy-MM-dd eg : 2017-07-15\"\n          in: path\n          name: fromDate\n          required: true\n          schema:\n            type: string\n        - description: \"Product code for requested service and specials : 3-letter eg: YNZ\"\n          in: path\n          name: productCode\n          required: true\n          schema:\n            type: string\n            enum:\n              - FAN\n              - FCO\n              - FCP\n              - FDG\n              - FTF\n              - FUN\n              - FWN\n              - YCO\n              - YCP\n              - YDG\n              - YNB\n              - YNZ\n              - YTF\n              - YUN\n              - ZXB\n              - ZXF\n              - ZXR\n        - description: 'http header: application/json or application/xml (Acceptable values\n            are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n      security:\n        - auth: []\n      summary: Retrieve all flights\n      tags:\n        - Cargo\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/cargo/shipmentTracking/{aWBPrefix}-{aWBNumber}\":\n    get:\n      description: With this tracking service you can easily retrieve your shipment or\n        flight status information.\n      operationId: CargoShipmentTrackingByAWBPrefixAndAWBNumberGet\n      parameters:\n        - description: 'aWBPrefix : Represents the airline that is the owner of this AWB,\n            i.e. \"020\" = Lufthansa Cargo, format : [0-9]{3} e.g. 020'\n          in: path\n          name: aWBPrefix\n          required: true\n          schema:\n            type: string\n        - description: \"aWBNumber : The Air Waybill Number , format : [0-9]{8} e.g.\n            08002050\"\n          in: path\n          name: aWBNumber\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values\n            are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n      security:\n        - auth: []\n      summary: Shipment Tracking\n      tags:\n        - Cargo\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/offers/lounges/{location}\":\n    get:\n      description: Lounge information\n      operationId: OffersLoungesByLocationGet\n      parameters:\n        - description: 3-leter IATA airport or city code (e.g. 'ZRH')\n          in: path\n          name: location\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values\n            are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: \"Cabin class: 'M', 'E', 'C', 'F' (Acceptable values are: \\\"\\\",\n            \\\"M\\\", \\\"E\\\", \\\"C\\\", \\\"F\\\")\"\n          in: query\n          name: cabinClass\n          required: false\n          schema:\n            type: string\n        - description: \"Frequent flyer level ('FTL', 'SGC', 'SEN', 'HON') (Acceptable\n            values are: \\\"\\\", \\\"FTL\\\", \\\"SGC\\\", \\\"SEN\\\", \\\"HON\\\")\"\n          in: query\n          name: tierCode\n          required: false\n          schema:\n            type: string\n        - description: Language code.\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n      security:\n        - auth: []\n      summary: Lounges\n      tags:\n        - Offers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}\":\n    get:\n      description: Cabin layout and seat characteristics.\n      operationId: OffersSeatmapsDestinationDateCabinClassByFlightNumberAndOriginGet\n      parameters:\n        - description: Flight number including carrier code and any suffix (e.g. 'LH2037')\n          in: path\n          name: flightNumber\n          required: true\n          schema:\n            type: string\n        - description: Departure airport. 3-letter IATA airport code (e.g. 'TXL')\n          in: path\n          name: origin\n          required: true\n          schema:\n            type: string\n        - description: Destination airport. 3-letter IATA airport code (e.g. 'MUC')\n          in: path\n          name: destination\n          required: true\n          schema:\n            type: string\n        - description: Departure date (YYYY-MM-DD)\n          in: path\n          name: date\n          required: true\n          schema:\n            type: string\n        - description: \"Cabin class: 'M', 'E', 'C', 'F'. Some flights have fewer classes\n            (Acceptable values are: \\\"M\\\", \\\"E\\\", \\\"C\\\", \\\"F\\\")\"\n          in: path\n          name: cabinClass\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values\n            are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n      security:\n        - auth: []\n      summary: Seat Maps\n      tags:\n        - Offers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/operations/flightstatus/arrivals/{airportCode}/{fromDateTime}\":\n    get:\n      description: Status of all arrivals at a given airport up to 4 hours from the\n        provided date time.\n      operationId: OperationsFlightstatusArrivalsByAirportCodeAndFromDateTimeGet\n      parameters:\n        - description: 3-letter IATA aiport code (e.g. 'ZRH')\n          in: path\n          name: airportCode\n          required: true\n          schema:\n            type: string\n        - description: Start of time range in local time of arrival airport\n            (YYYY-MM-DDTHH:mm)\n          in: path\n          name: fromDateTime\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values\n            are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: Number of records returned per request. Defaults to 20, maximum is\n            100 (if a value bigger than 100 is given, 100 will be taken)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Number of records skipped. Defaults to 0\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n      security:\n        - auth: []\n      summary: Flight Status at Arrival Airport\n      tags:\n        - Operations\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/operations/flightstatus/departures/{airportCode}/{fromDateTime}\":\n    get:\n      description: Status of all departures from a given airport up to 4 hours from the\n        provided date time.\n      operationId: OperationsFlightstatusDeparturesByAirportCodeAndFromDateTimeGet\n      parameters:\n        - description: Departure airport. 3-letter IATA airport code (e.g. 'HAM')\n          in: path\n          name: airportCode\n          required: true\n          schema:\n            type: string\n        - description: Start of time range in local time of departure airport\n            (YYYY-MM-DDTHH:mm)\n          in: path\n          name: fromDateTime\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values\n            are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: Number of records returned per request. Defaults to 20, maximum is\n            100 (if a value bigger than 100 is given, 100 will be taken)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Number of records skipped. Defaults to 0\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n      security:\n        - auth: []\n      summary: Flight Status at Departure Airport\n      tags:\n        - Operations\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/operations/flightstatus/route/{origin}/{destination}/{date}\":\n    get:\n      description: Status of flights between a given origin and destination on a given date.\n      operationId: OperationsFlightstatusRouteDateByOriginAndDestinationGet\n      parameters:\n        - description: 3-letter IATA airport (e.g. 'FRA')\n          in: path\n          name: origin\n          required: true\n          schema:\n            type: string\n        - description: 3-letter IATA airport code (e.g. 'JFK')\n          in: path\n          name: destination\n          required: true\n          schema:\n            type: string\n        - description: Departure date (YYYY-MM-DD) in local time of departure airport\n          in: path\n          name: date\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values\n            are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: Number of records returned per request. Defaults to 20, maximum is\n            100 (if a value bigger than 100 is given, 100 will be taken)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Number of records skipped. Defaults to 0\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n      security:\n        - auth: []\n      summary: Flight Status by Route\n      tags:\n        - Operations\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/operations/flightstatus/{flightNumber}/{date}\":\n    get:\n      description: Status of a particular flight (boarding, delayed, etc.).\n      operationId: OperationsFlightstatusByFlightNumberAndDateGet\n      parameters:\n        - description: Flight number including carrier code and any suffix (e.g. 'LH400')\n          in: path\n          name: flightNumber\n          required: true\n          schema:\n            type: string\n        - description: The departure date (YYYY-MM-DD) in the local time of the departure\n            airport\n          in: path\n          name: date\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values\n            are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: Number of records returned per request. Defaults to 20, maximum is\n            100 (if a value bigger than 100 is given, 100 will be taken)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Number of records skipped. Defaults to 0\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n      security:\n        - auth: []\n      summary: Flight Status\n      tags:\n        - Operations\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/operations/schedules/{origin}/{destination}/{fromDateTime}\":\n    get:\n      description: Scheduled flights between given airports on a given date.\n      operationId: OperationsSchedulesFromDateTimeByOriginAndDestinationGet\n      parameters:\n        - description: Departure airport. 3-letter IATA airport code (e.g. 'ZRH')\n          in: path\n          name: origin\n          required: true\n          schema:\n            type: string\n        - description: Destination airport. 3-letter IATA airport code (e.g. 'FRA')\n          in: path\n          name: destination\n          required: true\n          schema:\n            type: string\n        - description: Local departure date and optionally departure time (YYYY-MM-DD or\n            YYYY-MM-DDTHH:mm). When not provided, time is assumed to be 00:01\n          in: path\n          name: fromDateTime\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values\n            are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: Show only direct flights (false=0, true=1). Default is false\n          in: query\n          name: directFlights\n          required: false\n          schema:\n            type: boolean\n        - description: Number of records returned per request. Defaults to 20, maximum is\n            100 (if a value bigger than 100 is given, 100 will be taken)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Number of records skipped. Defaults to 0\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n      security:\n        - auth: []\n      summary: Flight Schedules\n      tags:\n        - Operations\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/references/aircraft/{aircraftCode}\":\n    get:\n      description: List all aircraft types or one specific aircraft type.\n      operationId: ReferencesAircraftByAircraftCodeGet\n      parameters:\n        - description: 'http header: application/json or application/xml (Acceptable values\n            are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: 3-character IATA aircraft code\n          in: path\n          name: aircraftCode\n          required: true\n          schema:\n            type: string\n            default: 33P\n        - description: Number of records returned per request. Defaults to 20, maximum is\n            100 (if a value bigger than 100 is given, 100 will be taken)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"20\"\n        - description: Number of records skipped. Defaults to 0\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n            default: \"0\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n      security:\n        - auth: []\n      summary: Aircraft\n      tags:\n        - Reference Data\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/references/airlines/{airlineCode}\":\n    get:\n      description: List all airlines or one specific airline.\n      operationId: ReferencesAirlinesByAirlineCodeGet\n      parameters:\n        - description: 'http header: application/json or application/xml (Acceptable values\n            are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: 2-character IATA airline/carrier code\n          in: path\n          name: airlineCode\n          required: true\n          schema:\n            type: string\n            default: LH\n        - description: Number of records returned per request. Defaults to 20, maximum is\n            100 (if a value bigger than 100 is given, 100 will be taken)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"20\"\n        - description: Number of records skipped. Defaults to 0\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n            default: \"0\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n      security:\n        - auth: []\n      summary: Airlines\n      tags:\n        - Reference Data\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/references/airports/nearest/{latitude},{longitude}\":\n    get:\n      description: List the 5 closest airports to the given latitude and longitude,\n        irrespective of the radius of the reference point.\n      operationId: ReferencesAirportsNearestByLatitudeAndLongitudeGet\n      parameters:\n        - description: Latitude in decimal format to at most 3 decimal places\n          in: path\n          name: latitude\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Longitude in decimal format to at most 3 decimal places\n          in: path\n          name: longitude\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: 'http header: application/json or application/xml (Acceptable values\n            are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: 2 letter ISO 3166-1 language code\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n      security:\n        - auth: []\n      summary: Nearest Airports\n      tags:\n        - Reference Data\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/references/airports/{airportCode}\":\n    get:\n      description: List all airports or one specific airport. All airports response is very\n        large. It is possible to request the response in a specific language.\n      operationId: ReferencesAirportsByAirportCodeGet\n      parameters:\n        - description: 'http header: application/json or application/xml (Acceptable values\n            are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: 3-letter IATA airport code\n          in: path\n          name: airportCode\n          required: true\n          schema:\n            type: string\n            default: TXL\n        - description: 2-letter ISO 3166-1 language code\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n        - description: Number of records returned per request. Defaults to 20, maximum is\n            100 (if a value bigger than 100 is given, 100 will be taken)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"20\"\n        - description: Number of records skipped. Defaults to 0\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n            default: \"0\"\n        - description: Restrict the results to locations with flights operated by LH\n            (false=0, true=1)\n          in: query\n          name: LHoperated\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AirportResponse\"\n      security:\n        - auth: []\n      summary: Airports\n      tags:\n        - Reference Data\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/references/cities/{cityCode}\":\n    get:\n      description: List all cities or one specific city. It is possible to request the\n        response in a specific language.\n      operationId: ReferencesCitiesByCityCodeGet\n      parameters:\n        - description: 'http header: application/json or application/xml (Acceptable values\n            are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: 3-letter IATA city code\n          in: path\n          name: cityCode\n          required: true\n          schema:\n            type: string\n            default: BER\n        - description: 2 letter ISO 3166-1 language code\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n        - description: Number of records returned per request. Defaults to 20, maximum is\n            100 (if a value bigger than 100 is given, 100 will be taken)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"20\"\n        - description: Number of records skipped. Defaults to 0\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n            default: \"0\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n      security:\n        - auth: []\n      summary: Cities\n      tags:\n        - Reference Data\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/references/countries/{countryCode}\":\n    get:\n      description: List all countries or one specific country. It is possible to request\n        the response in a specific language.\n      operationId: ReferencesCountriesByCountryCodeGet\n      parameters:\n        - description: 'http header: application/json or application/xml (Acceptable values\n            are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: 2-letter ISO 3166-1 country code\n          in: path\n          name: countryCode\n          required: true\n          schema:\n            type: string\n            default: DK\n        - description: 2 letter ISO 3166-1 language code\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n        - description: Number of records returned per request. Defaults to 20, maximum is\n            100 (if a value bigger than 100 is given, 100 will be taken)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"20\"\n        - description: Number of records skipped. Defaults to 0\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n            default: \"0\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n      security:\n        - auth: []\n      summary: Countries\n      tags:\n        - Reference Data\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\nservers:\n  - url: https://api.lufthansa.com/v1\ncomponents:\n  securitySchemes:\n    auth:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://api.lufthansa.com/v1/oauth/token\n          tokenUrl: https://api.lufthansa.com/v1/oauth/token\n          scopes:\n            read:LH Open API: read access\n  schemas:\n    Airport:\n      description: Array of all available airports or one airport matching the request.\n      properties:\n        AirportCode:\n          description: 3-letter IATA airport code, e.g. “TXL”.\n          type: string\n        CityCode:\n          description: 3-letter IATA city code, e.g. “BER”.\n          type: string\n        CountryCode:\n          description: 2-letter ISO 3166-1 country code, e.g. “DE”.\n          type: string\n        LocationType:\n          description: \" “Airport”, “RailwayStation” or “BusStation”.\"\n          type: string\n        Names:\n          description: Container for airport names.\n          properties:\n            Name:\n              description: \"Array: language specific full name of airport.\"\n              items:\n                $ref: \"#/components/schemas/Name\"\n              type: array\n          type: object\n        Position:\n          description: Physical location of an airport. This data section is optional and\n            therefore not always present.\n          properties:\n            Coordinate:\n              $ref: \"#/components/schemas/Coordinate\"\n          type: object\n        TimeZoneId:\n          description: Time zone name airport is in\n          type: string\n        UtcOffset:\n          description: Hour offset of airport to UTC time zone\n          format: float\n          type: number\n      type: object\n    AirportResource:\n      description: Root element of airport response.\n      properties:\n        Airports:\n          description: Container for airport elements.\n          properties:\n            Airport:\n              $ref: \"#/components/schemas/Airport\"\n          type: object\n        Meta:\n          description: Container for meta links.\n          properties:\n            \"@Version\":\n              type: string\n            Link:\n              description: \"Array: links to resource itself and other related resources.\"\n              items:\n                $ref: \"#/components/schemas/Link\"\n              type: array\n            TotalCount:\n              format: int32\n              type: integer\n          type: object\n      type: object\n    AirportResponse:\n      properties:\n        AirportResource:\n          $ref: \"#/components/schemas/AirportResource\"\n      type: object\n    Coordinate:\n      description: Container for coordinates.\n      properties:\n        Latitude:\n          description: \"Decimal latitude. Range: -90 (South Pole) to +90 (North Pole), e.g.\n            “51.540”.\"\n          format: float\n          type: number\n        Longitude:\n          description: \"Decimal longitude. Range: -180 (West of Prime Meridian) to +180\n            (East of Prime Meridian).\"\n          format: float\n          type: number\n      type: object\n    Link:\n      properties:\n        \"@Href\":\n          description: Link to actual a resource.\n          type: string\n        \"@Rel\":\n          description: Specifying kind of link such as ‘self’ (link that returned this\n            response), ‘alternate’ (link that points to another resource) or\n            ‘related’ (link that points to related resource).\n          type: string\n      type: object\n    Name:\n      description: 2-letter ISO 639-1 language code for the corresponding item.\n      properties:\n        $:\n          type: string\n        \"@LanguageCode\":\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/lufthansa.com-public-1.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/lufthansa.com-public-1.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/operations/flightstatus/arrivals/{airportCode}/{fromDateTime}\": get: security: security \"auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"crypticName",
		"oauth2 security"
	]
}