{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "tool-tests/8-wildcard-media-type/openapi.yaml",
			"byteSize": 87907,
			"content": "openapi: 3.0.1\ninfo:\n  x-ballerina-display:\n    label: YNAB\n    iconPath: \"icon.png\"\n  title: YNAB API Endpoints\n  description: |\n    This is a generated connector for [YNAB API v1.0.0](https://api.youneedabudget.com) OpenAPI specification.\n    YNAB API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. \n    We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body. \n    API Documentation is at https://api.youneedabudget.com\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n  \n    Create a [YNAB account](https://app.youneedabudget.com) and obtain tokens by following [this guide](https://api.youneedabudget.com/#quick-start).\n  version: 1.0.0\nservers:\n- url: https://api.youneedabudget.com/v1\nsecurity:\n- bearerAuth: []\ntags:\n- name: User\n- name: Budgets\n- name: Accounts\n  description: The accounts for a budget\n- name: Categories\n  description: The categories for a budget\n- name: Payees\n  description: The payees for a budget\n- name: Payee Locations\n  description: When you enter a transaction and specify a payee on the YNAB mobile\n    apps, the GPS coordinates for that location are stored, with your permission,\n    so that the next time you are in the same place (like the Grocery store) we can\n    pre-populate nearby payees for you!  Itâ€™s handy and saves you time.  This resource\n    makes these locations available.  Locations will not be available for all payees.\n- name: Months\n  description: Each budget contains one or more months, which is where Ready to Assign,\n    Age of Money and category (budgeted / activity / balances) amounts are available.\n- name: Transactions\n  description: The transactions for a budget\n- name: Scheduled Transactions\n  description: The scheduled transactions for a budget\npaths:\n  /user:\n    get:\n      tags:\n      - User\n      summary: User info\n      description: Returns authenticated user information\n      operationId: getUser\n      responses:\n        200:\n          description: The user info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets:\n    get:\n      tags:\n      - Budgets\n      summary: List budgets\n      description: Returns budgets list with summary information\n      operationId: getBudgets\n      parameters:\n      - name: include_accounts\n        in: query\n        description: Whether to include the list of budget accounts\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: The list of budgets\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BudgetSummaryResponse'\n        404:\n          description: No budgets were found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}:\n    get:\n      tags:\n      - Budgets\n      summary: Single budget\n      description: Returns a single budget with all related entities.  This resource\n        is effectively a full budget export.\n      operationId: getBudgetById\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: last_knowledge_of_server\n        in: query\n        description: The starting server knowledge.  If provided, only entities that\n          have changed since `last_knowledge_of_server` will be included.\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: The requested budget\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BudgetDetailResponse'\n        404:\n          description: The specified budget was not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/settings:\n    get:\n      tags:\n      - Budgets\n      summary: Budget Settings\n      description: Returns settings for a budget\n      operationId: getBudgetSettingsById\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: The requested budget settings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BudgetSettingsResponse'\n        404:\n          description: The specified Budget was not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/accounts:\n    get:\n      tags:\n      - Accounts\n      summary: Account list\n      description: Returns all accounts\n      operationId: getAccounts\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: last_knowledge_of_server\n        in: query\n        description: The starting server knowledge.  If provided, only entities that\n          have changed since `last_knowledge_of_server` will be included.\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: The list of requested accounts\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountsResponse'\n        404:\n          description: No accounts were found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - Accounts\n      summary: Create a new account\n      description: Creates a new account\n      operationId: createAccount\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget (\"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget)'\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The account to create.\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/SaveAccountWrapper'\n        required: true\n      responses:\n        201:\n          description: The account was successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountResponse'\n        400:\n          description: The request could not be understood due to malformed syntax\n            or validation error(s).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: data\n  /budgets/{budget_id}/accounts/{account_id}:\n    get:\n      tags:\n      - Accounts\n      summary: Single account\n      description: Returns a single account\n      operationId: getAccountById\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: account_id\n        in: path\n        description: The id of the account\n        required: true\n        schema:\n          type: string\n          format: uuid\n      responses:\n        200:\n          description: The requested account\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountResponse'\n        404:\n          description: The requested account was not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/categories:\n    get:\n      tags:\n      - Categories\n      summary: List categories\n      description: Returns all categories grouped by category group.  Amounts (budgeted,\n        activity, balance, etc.) are specific to the current budget month (UTC).\n      operationId: getCategories\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: last_knowledge_of_server\n        in: query\n        description: The starting server knowledge.  If provided, only entities that\n          have changed since `last_knowledge_of_server` will be included.\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: The categories grouped by category group\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CategoriesResponse'\n        404:\n          description: No categories were found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/categories/{category_id}:\n    get:\n      tags:\n      - Categories\n      summary: Single category\n      description: Returns a single category.  Amounts (budgeted, activity, balance,\n        etc.) are specific to the current budget month (UTC).\n      operationId: getCategoryById\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: category_id\n        in: path\n        description: The id of the category\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: The requested category\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CategoryResponse'\n        404:\n          description: The category not was found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/months/{month}/categories/{category_id}:\n    get:\n      tags:\n      - Categories\n      summary: Single category for a specific budget month\n      description: Returns a single category for a specific budget month.  Amounts\n        (budgeted, activity, balance, etc.) are specific to the current budget month\n        (UTC).\n      operationId: getMonthCategoryById\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: month\n        in: path\n        description: The budget month in ISO format (e.g. 2016-12-01) (\"current\" can\n          also be used to specify the current calendar month (UTC))\n        required: true\n        schema:\n          type: string\n          format: date\n      - name: category_id\n        in: path\n        description: The id of the category\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: The requested month category\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CategoryResponse'\n        404:\n          description: The month category was not was found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n      - Categories\n      summary: Update a category for a specific month\n      description: Update a category for a specific month.  Only `budgeted` amount\n        can be updated.\n      operationId: updateMonthCategory\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: month\n        in: path\n        description: The budget month in ISO format (e.g. 2016-12-01) (\"current\" can\n          also be used to specify the current calendar month (UTC))\n        required: true\n        schema:\n          type: string\n          format: date\n      - name: category_id\n        in: path\n        description: The id of the category\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The category to update.  Only `budgeted` amount can be updated\n          and any other fields specified will be ignored.\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/SaveMonthCategoryWrapper'\n        required: true\n      responses:\n        200:\n          description: The month category was successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SaveCategoryResponse'\n        400:\n          description: The request could not be understood due to malformed syntax\n            or validation error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: data\n  /budgets/{budget_id}/payees:\n    get:\n      tags:\n      - Payees\n      summary: List payees\n      description: Returns all payees\n      operationId: getPayees\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: last_knowledge_of_server\n        in: query\n        description: The starting server knowledge.  If provided, only entities that\n          have changed since `last_knowledge_of_server` will be included.\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: The requested list of payees\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayeesResponse'\n        404:\n          description: No payees were found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/payees/{payee_id}:\n    get:\n      tags:\n      - Payees\n      summary: Single payee\n      description: Returns a single payee\n      operationId: getPayeeById\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: payee_id\n        in: path\n        description: The id of the payee\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: The requested payee\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayeeResponse'\n        404:\n          description: The payee was not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/payee_locations:\n    get:\n      tags:\n      - Payee Locations\n      summary: List payee locations\n      description: Returns all payee locations\n      operationId: getPayeeLocations\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: The list of payee locations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayeeLocationsResponse'\n        404:\n          description: No payees locations were found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/payee_locations/{payee_location_id}:\n    get:\n      tags:\n      - Payee Locations\n      summary: Single payee location\n      description: Returns a single payee location\n      operationId: getPayeeLocationById\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: payee_location_id\n        in: path\n        description: id of payee location\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: The payee location\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayeeLocationResponse'\n        404:\n          description: The payee location was not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/payees/{payee_id}/payee_locations:\n    get:\n      tags:\n      - Payee Locations\n      summary: List locations for a payee\n      description: Returns all payee locations for a specified payee\n      operationId: getPayeeLocationsByPayee\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: payee_id\n        in: path\n        description: id of payee\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: The list of requested payee locations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayeeLocationsResponse'\n        404:\n          description: No payees locations were found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/months:\n    get:\n      tags:\n      - Months\n      summary: List budget months\n      description: Returns all budget months\n      operationId: getBudgetMonths\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: last_knowledge_of_server\n        in: query\n        description: The starting server knowledge.  If provided, only entities that\n          have changed since `last_knowledge_of_server` will be included.\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: The list of budget months\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MonthSummariesResponse'\n        404:\n          description: No budget months were found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/months/{month}:\n    get:\n      tags:\n      - Months\n      summary: Single budget month\n      description: Returns a single budget month\n      operationId: getBudgetMonth\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: month\n        in: path\n        description: The budget month in ISO format (e.g. 2016-12-01) (\"current\" can\n          also be used to specify the current calendar month (UTC))\n        required: true\n        schema:\n          type: string\n          format: date\n      responses:\n        200:\n          description: The budget month detail\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MonthDetailResponse'\n        404:\n          description: The budget month was not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/transactions:\n    get:\n      tags:\n      - Transactions\n      summary: List transactions\n      description: Returns budget transactions\n      operationId: getTransactions\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: since_date\n        in: query\n        description: If specified, only transactions on or after this date will be\n          included.  The date should be ISO formatted (e.g. 2016-12-30).\n        schema:\n          type: string\n          format: date\n      - name: type\n        in: query\n        description: If specified, only transactions of the specified type will be\n          included. \"uncategorized\" and \"unapproved\" are currently supported.\n        schema:\n          type: string\n          enum:\n          - uncategorized\n          - unapproved\n      - name: last_knowledge_of_server\n        in: query\n        description: The starting server knowledge.  If provided, only entities that\n          have changed since `last_knowledge_of_server` will be included.\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: The list of requested transactions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionsResponse'\n        400:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: No transactions were found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - Transactions\n      summary: Create a single transaction or multiple transactions\n      description: Creates a single transaction or multiple transactions.  If you\n        provide a body containing a `transaction` object, a single transaction will\n        be created and if you provide a body containing a `transactions` array, multiple\n        transactions will be created.  Scheduled transactions cannot be created on\n        this endpoint.\n      operationId: createTransaction\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The transaction or transactions to create.  To create a single\n          transaction you can specify a value for the `transaction` object and to\n          create multiple transactions you can specify an array of `transactions`.  It\n          is expected that you will only provide a value for one of these objects.\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/SaveTransactionsWrapper'\n        required: true\n      responses:\n        201:\n          description: The transaction or transactions were successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SaveTransactionsResponse'\n        400:\n          description: The request could not be understood due to malformed syntax\n            or validation error(s).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        409:\n          description: A transaction on the same account with the same `import_id`\n            already exists.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: data\n    patch:\n      tags:\n      - Transactions\n      summary: Update multiple transactions\n      description: Updates multiple transactions, by `id` or `import_id`.\n      operationId: updateTransactions\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The transactions to update. Each transaction must have either\n          an `id` or `import_id` specified. If `id` is specified as null an `import_id`\n          value can be provided which will allow transaction(s) to be updated by their\n          `import_id`. If an `id` is specified, it will always be used for lookup.\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/UpdateTransactionsWrapper'\n        required: true\n      responses:\n        209:\n          description: The transactions were successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SaveTransactionsResponse'\n        400:\n          description: The request could not be understood due to malformed syntax\n            or validation error(s).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: data\n  /budgets/{budget_id}/transactions/import:\n    post:\n      tags:\n      - Transactions\n      summary: Import transactions\n      description: Imports available transactions on all linked accounts for the given\n        budget.  Linked accounts allow transactions to be imported directly from a\n        specified financial institution and this endpoint initiates that import.  Sending\n        a request to this endpoint is the equivalent of clicking \"Import\" on each\n        account in the web application or tapping the \"New Transactions\" banner in\n        the mobile applications.  The response for this endpoint contains the transaction\n        ids that have been imported.\n      operationId: importTransactions\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: The request was successful but there were no transactions to\n            import\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionsImportResponse'\n        201:\n          description: One or more transactions were imported successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionsImportResponse'\n        400:\n          description: The request could not be understood due to malformed syntax\n            or validation error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/transactions/{transaction_id}:\n    get:\n      tags:\n      - Transactions\n      summary: Single transaction\n      description: Returns a single transaction\n      operationId: getTransactionById\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: transaction_id\n        in: path\n        description: The id of the transaction\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: The requested transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionResponse'\n        404:\n          description: The transaction was not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - Transactions\n      summary: Updates an existing transaction\n      description: Updates a single transaction\n      operationId: updateTransaction\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: transaction_id\n        in: path\n        description: The id of the transaction\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The transaction to update\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/SaveTransactionWrapper'\n        required: true\n      responses:\n        200:\n          description: The transaction was successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionResponse'\n        400:\n          description: The request could not be understood due to malformed syntax\n            or validation error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: data\n  /budgets/{budget_id}/transactions/bulk:\n    post:\n      tags:\n      - Deprecated\n      summary: Bulk create transactions\n      description: Creates multiple transactions.  Although this endpoint is still\n        supported, it is recommended to use 'POST /budgets/{budget_id}/transactions'\n        to create multiple transactions.\n      operationId: bulkCreateTransactions\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The list of transactions to create\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/BulkTransactions'\n        required: true\n      responses:\n        201:\n          description: The bulk request was processed successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BulkResponse'\n        400:\n          description: The request could not be understood due to malformed syntax\n            or validation error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: transactions\n  /budgets/{budget_id}/accounts/{account_id}/transactions:\n    get:\n      tags:\n      - Transactions\n      summary: List account transactions\n      description: Returns all transactions for a specified account\n      operationId: getTransactionsByAccount\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: account_id\n        in: path\n        description: The id of the account\n        required: true\n        schema:\n          type: string\n      - name: since_date\n        in: query\n        description: If specified, only transactions on or after this date will be\n          included.  The date should be ISO formatted (e.g. 2016-12-30).\n        schema:\n          type: string\n          format: date\n      - name: type\n        in: query\n        description: If specified, only transactions of the specified type will be\n          included. \"uncategorized\" and \"unapproved\" are currently supported.\n        schema:\n          type: string\n          enum:\n          - uncategorized\n          - unapproved\n      - name: last_knowledge_of_server\n        in: query\n        description: The starting server knowledge.  If provided, only entities that\n          have changed since `last_knowledge_of_server` will be included.\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: The list of requested transactions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionsResponse'\n        404:\n          description: No transactions were found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/categories/{category_id}/transactions:\n    get:\n      tags:\n      - Transactions\n      summary: List category transactions\n      description: Returns all transactions for a specified category\n      operationId: getTransactionsByCategory\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: category_id\n        in: path\n        description: The id of the category\n        required: true\n        schema:\n          type: string\n      - name: since_date\n        in: query\n        description: If specified, only transactions on or after this date will be\n          included.  The date should be ISO formatted (e.g. 2016-12-30).\n        schema:\n          type: string\n          format: date\n      - name: type\n        in: query\n        description: If specified, only transactions of the specified type will be\n          included. \"uncategorized\" and \"unapproved\" are currently supported.\n        schema:\n          type: string\n          enum:\n          - uncategorized\n          - unapproved\n      - name: last_knowledge_of_server\n        in: query\n        description: The starting server knowledge.  If provided, only entities that\n          have changed since `last_knowledge_of_server` will be included.\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: The list of requested transactions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HybridTransactionsResponse'\n        404:\n          description: No transactions were found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/payees/{payee_id}/transactions:\n    get:\n      tags:\n      - Transactions\n      summary: List payee transactions\n      description: Returns all transactions for a specified payee\n      operationId: getTransactionsByPayee\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: payee_id\n        in: path\n        description: The id of the payee\n        required: true\n        schema:\n          type: string\n      - name: since_date\n        in: query\n        description: If specified, only transactions on or after this date will be\n          included.  The date should be ISO formatted (e.g. 2016-12-30).\n        schema:\n          type: string\n          format: date\n      - name: type\n        in: query\n        description: If specified, only transactions of the specified type will be\n          included. \"uncategorized\" and \"unapproved\" are currently supported.\n        schema:\n          type: string\n          enum:\n          - uncategorized\n          - unapproved\n      - name: last_knowledge_of_server\n        in: query\n        description: The starting server knowledge.  If provided, only entities that\n          have changed since `last_knowledge_of_server` will be included.\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: The list of requested transactions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HybridTransactionsResponse'\n        404:\n          description: No transactions were found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/scheduled_transactions:\n    get:\n      tags:\n      - Scheduled Transactions\n      summary: List scheduled transactions\n      description: Returns all scheduled transactions\n      operationId: getScheduledTransactions\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: last_knowledge_of_server\n        in: query\n        description: The starting server knowledge.  If provided, only entities that\n          have changed since `last_knowledge_of_server` will be included.\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: The list of requested scheduled transactions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduledTransactionsResponse'\n        404:\n          description: No scheduled transactions were found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /budgets/{budget_id}/scheduled_transactions/{scheduled_transaction_id}:\n    get:\n      tags:\n      - Scheduled Transactions\n      summary: Single scheduled transaction\n      description: Returns a single scheduled transaction\n      operationId: getScheduledTransactionById\n      parameters:\n      - name: budget_id\n        in: path\n        description: 'The id of the budget. \"last-used\" can be used to specify the\n          last used budget and \"default\" can be used if default budget selection is\n          enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n        required: true\n        schema:\n          type: string\n      - name: scheduled_transaction_id\n        in: path\n        description: The id of the scheduled transaction\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: The requested Scheduled Transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduledTransactionResponse'\n        404:\n          description: The scheduled transaction was not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        default:\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\ncomponents:\n  schemas:\n    ErrorResponse:\n      required:\n      - error\n      type: object\n      properties:\n        error:\n          $ref: '#/components/schemas/ErrorDetail'\n    ErrorDetail:\n      required:\n      - detail\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        detail:\n          type: string\n    UserResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - user\n          type: object\n          properties:\n            user:\n              $ref: '#/components/schemas/User'\n    User:\n      required:\n      - id\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n    DateFormat:\n      required:\n      - format\n      type: object\n      properties:\n        format:\n          type: string\n          description: Date format setting for the budget\n      description: The date format setting for the budget.  In some cases the format\n        will not be available and will be specified as null.\n    CurrencyFormat:\n      required:\n      - currency_symbol\n      - decimal_digits\n      - decimal_separator\n      - display_symbol\n      - example_format\n      - group_separator\n      - iso_code\n      - symbol_first\n      type: object\n      properties:\n        iso_code:\n          type: string\n          description: ISO code\n        example_format:\n          type: string\n          description: Example format\n        decimal_digits:\n          type: integer\n          format: int32\n          description: Decimal digits\n        decimal_separator:\n          type: string\n          description: Decimal separator\n        symbol_first:\n          type: boolean\n          description: Symbol first\n        group_separator:\n          type: string\n          description: Group separator\n        currency_symbol:\n          type: string\n          description: Currency symbol\n        display_symbol:\n          type: boolean\n          description: Display symbol\n      description: The currency format setting for the budget.  In some cases the\n        format will not be available and will be specified as null.\n    BudgetSummaryResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - budgets\n          type: object\n          properties:\n            budgets:\n              type: array\n              items:\n                $ref: '#/components/schemas/BudgetSummary'\n            default_budget:\n              $ref: '#/components/schemas/BudgetSummary'\n    BudgetSummary:\n      required:\n      - id\n      - name\n      type: object\n      nullable: true\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        last_modified_on:\n          type: string\n          description: The last time any changes were made to the budget from either\n            a web or mobile client\n          format: date-time\n        first_month:\n          type: string\n          description: The earliest budget month\n          format: date\n        last_month:\n          type: string\n          description: The latest budget month\n          format: date\n        date_format:\n          $ref: '#/components/schemas/DateFormat'\n        currency_format:\n          $ref: '#/components/schemas/CurrencyFormat'\n        accounts:\n          type: array\n          description: The budget accounts (only included if `include_accounts=true`\n            specified as query parameter)\n          items:\n            $ref: '#/components/schemas/Account'\n    BudgetDetailResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - budget\n          - server_knowledge\n          type: object\n          properties:\n            budget:\n              $ref: '#/components/schemas/BudgetDetail'\n            server_knowledge:\n              type: integer\n              description: The knowledge of the server\n              format: int64\n    BudgetDetail:\n      allOf:\n      - $ref: '#/components/schemas/BudgetSummary'\n      - type: object\n        properties:\n          accounts:\n            type: array\n            items:\n              $ref: '#/components/schemas/Account'\n          payees:\n            type: array\n            items:\n              $ref: '#/components/schemas/Payee'\n          payee_locations:\n            type: array\n            items:\n              $ref: '#/components/schemas/PayeeLocation'\n          category_groups:\n            type: array\n            items:\n              $ref: '#/components/schemas/CategoryGroup'\n          categories:\n            type: array\n            items:\n              $ref: '#/components/schemas/Category'\n          months:\n            type: array\n            items:\n              $ref: '#/components/schemas/MonthDetail'\n          transactions:\n            type: array\n            items:\n              $ref: '#/components/schemas/TransactionSummary'\n          subtransactions:\n            type: array\n            items:\n              $ref: '#/components/schemas/SubTransaction'\n          scheduled_transactions:\n            type: array\n            items:\n              $ref: '#/components/schemas/ScheduledTransactionSummary'\n          scheduled_subtransactions:\n            type: array\n            items:\n              $ref: '#/components/schemas/ScheduledSubTransaction'\n    BudgetSettingsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - settings\n          type: object\n          properties:\n            settings:\n              $ref: '#/components/schemas/BudgetSettings'\n    BudgetSettings:\n      required:\n      - currency_format\n      - date_format\n      type: object\n      properties:\n        date_format:\n          $ref: '#/components/schemas/DateFormat'\n        currency_format:\n          $ref: '#/components/schemas/CurrencyFormat'\n    AccountsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - accounts\n          - server_knowledge\n          type: object\n          properties:\n            accounts:\n              type: array\n              items:\n                $ref: '#/components/schemas/Account'\n            server_knowledge:\n              type: integer\n              description: The knowledge of the server\n              format: int64\n    AccountResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - account\n          type: object\n          properties:\n            account:\n              $ref: '#/components/schemas/Account'\n    Account:\n      required:\n      - balance\n      - cleared_balance\n      - closed\n      - deleted\n      - id\n      - name\n      - on_budget\n      - transfer_payee_id\n      - type\n      - uncleared_balance\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        type:\n          type: string\n          description: 'The type of account. Note: payPal, merchantAccount, investmentAccount,\n            and mortgage types have been deprecated and will be removed in the future.'\n          enum:\n          - checking\n          - savings\n          - cash\n          - creditCard\n          - lineOfCredit\n          - otherAsset\n          - otherLiability\n          - payPal\n          - merchantAccount\n          - investmentAccount\n          - mortgage\n        on_budget:\n          type: boolean\n          description: Whether this account is on budget or not\n        closed:\n          type: boolean\n          description: Whether this account is closed or not\n        note:\n          type: string\n        balance:\n          type: integer\n          description: The current balance of the account in milliunits format\n          format: int64\n        cleared_balance:\n          type: integer\n          description: The current cleared balance of the account in milliunits format\n          format: int64\n        uncleared_balance:\n          type: integer\n          description: The current uncleared balance of the account in milliunits\n            format\n          format: int64\n        transfer_payee_id:\n          type: string\n          description: The payee id which should be used when transferring to this\n            account\n          format: uuid\n        direct_import_linked:\n          type: boolean\n          description: Whether or not the account is linked to a financial institution\n            for automatic transaction import.\n        direct_import_in_error:\n          type: boolean\n          description: If an account linked to a financial institution (direct_import_linked=true)\n            and the linked connection is not in a healthy state, this will be true.\n        deleted:\n          type: boolean\n          description: Whether or not the account has been deleted.  Deleted accounts\n            will only be included in delta requests.\n    SaveAccountWrapper:\n      required:\n      - account\n      type: object\n      properties:\n        account:\n          $ref: '#/components/schemas/SaveAccount'\n    SaveAccount:\n      required:\n      - balance\n      - name\n      - type\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the account\n        type:\n          type: string\n          description: The account type\n          enum:\n          - checking\n          - savings\n          - creditCard\n          - cash\n          - lineOfCredit\n          - otherAsset\n          - otherLiability\n        balance:\n          type: integer\n          description: The current balance of the account in milliunits format\n          format: int64\n    CategoriesResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - category_groups\n          - server_knowledge\n          type: object\n          properties:\n            category_groups:\n              type: array\n              items:\n                $ref: '#/components/schemas/CategoryGroupWithCategories'\n            server_knowledge:\n              type: integer\n              description: The knowledge of the server\n              format: int64\n    CategoryResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - category\n          type: object\n          properties:\n            category:\n              $ref: '#/components/schemas/Category'\n    CategoryGroupWithCategories:\n      allOf:\n      - $ref: '#/components/schemas/CategoryGroup'\n      - required:\n        - categories\n        type: object\n        properties:\n          categories:\n            type: array\n            description: Category group categories.  Amounts (budgeted, activity,\n              balance, etc.) are specific to the current budget month (UTC).\n            items:\n              $ref: '#/components/schemas/Category'\n    CategoryGroup:\n      required:\n      - deleted\n      - hidden\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        hidden:\n          type: boolean\n          description: Whether or not the category group is hidden\n        deleted:\n          type: boolean\n          description: Whether or not the category group has been deleted.  Deleted\n            category groups will only be included in delta requests.\n    Category:\n      required:\n      - activity\n      - balance\n      - budgeted\n      - category_group_id\n      - deleted\n      - hidden\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        category_group_id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        hidden:\n          type: boolean\n          description: Whether or not the category is hidden\n        original_category_group_id:\n          type: string\n          description: If category is hidden this is the id of the category group\n            it originally belonged to before it was hidden.\n          format: uuid\n        note:\n          type: string\n        budgeted:\n          type: integer\n          description: Budgeted amount in milliunits format\n          format: int64\n        activity:\n          type: integer\n          description: Activity amount in milliunits format\n          format: int64\n        balance:\n          type: integer\n          description: Balance in milliunits format\n          format: int64\n        goal_type:\n          type: string\n          description: The type of goal, if the category has a goal (TB='Target Category\n            Balance', TBD='Target Category Balance by Date', MF='Monthly Funding',\n            NEED='Plan Your Spending')\n          enum:\n          - TB\n          - TBD\n          - MF\n          - NEED\n        goal_creation_month:\n          type: string\n          description: The month a goal was created\n          format: date\n        goal_target:\n          type: integer\n          description: The goal target amount in milliunits\n          format: int64\n        goal_target_month:\n          type: string\n          description: The original target month for the goal to be completed.  Only\n            some goal types specify this date.\n          format: date\n        goal_percentage_complete:\n          type: integer\n          description: The percentage completion of the goal\n          format: int32\n        goal_months_to_budget:\n          type: integer\n          description: The number of months, including the current month, left in\n            the current goal period.\n          format: int32\n        goal_under_funded:\n          type: integer\n          description: The amount of funding still needed in the current month to\n            stay on track towards completing the goal within the current goal period.  This\n            amount will generally correspond to the 'Underfunded' amount in the web\n            and mobile clients except when viewing a category with a Needed for Spending\n            Goal in a future month.  The web and mobile clients will ignore any funding\n            from a prior goal period when viewing category with a Needed for Spending\n            Goal in a future month.\n          format: int64\n        goal_overall_funded:\n          type: integer\n          description: The total amount funded towards the goal within the current\n            goal period.\n          format: int64\n        goal_overall_left:\n          type: integer\n          description: The amount of funding still needed to complete the goal within\n            the current goal period.\n          format: int64\n        deleted:\n          type: boolean\n          description: Whether or not the category has been deleted.  Deleted categories\n            will only be included in delta requests.\n    SaveCategoryResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - category\n          - server_knowledge\n          type: object\n          properties:\n            category:\n              $ref: '#/components/schemas/Category'\n            server_knowledge:\n              type: integer\n              description: The knowledge of the server\n              format: int64\n    PayeesResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - payees\n          - server_knowledge\n          type: object\n          properties:\n            payees:\n              type: array\n              items:\n                $ref: '#/components/schemas/Payee'\n            server_knowledge:\n              type: integer\n              description: The knowledge of the server\n              format: int64\n    PayeeResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - payee\n          type: object\n          properties:\n            payee:\n              $ref: '#/components/schemas/Payee'\n    Payee:\n      required:\n      - deleted\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        transfer_account_id:\n          type: string\n          description: If a transfer payee, the `account_id` to which this payee transfers\n            to\n        deleted:\n          type: boolean\n          description: Whether or not the payee has been deleted.  Deleted payees\n            will only be included in delta requests.\n    PayeeLocationsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - payee_locations\n          type: object\n          properties:\n            payee_locations:\n              type: array\n              items:\n                $ref: '#/components/schemas/PayeeLocation'\n    PayeeLocationResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - payee_location\n          type: object\n          properties:\n            payee_location:\n              $ref: '#/components/schemas/PayeeLocation'\n    PayeeLocation:\n      required:\n      - deleted\n      - id\n      - latitude\n      - longitude\n      - payee_id\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        payee_id:\n          type: string\n          format: uuid\n        latitude:\n          type: string\n        longitude:\n          type: string\n        deleted:\n          type: boolean\n          description: Whether or not the payee location has been deleted.  Deleted\n            payee locations will only be included in delta requests.\n    TransactionsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - server_knowledge\n          - transactions\n          type: object\n          properties:\n            transactions:\n              type: array\n              items:\n                $ref: '#/components/schemas/TransactionDetail'\n            server_knowledge:\n              type: integer\n              description: The knowledge of the server\n              format: int64\n    HybridTransactionsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - transactions\n          type: object\n          properties:\n            transactions:\n              type: array\n              items:\n                $ref: '#/components/schemas/HybridTransaction'\n    SaveTransactionWrapper:\n      required:\n      - transaction\n      type: object\n      properties:\n        transaction:\n          $ref: '#/components/schemas/SaveTransaction'\n    SaveTransactionsWrapper:\n      type: object\n      properties:\n        transaction:\n          $ref: '#/components/schemas/SaveTransaction'\n        transactions:\n          type: array\n          items:\n            $ref: '#/components/schemas/SaveTransaction'\n    UpdateTransactionsWrapper:\n      required:\n      - transactions\n      type: object\n      properties:\n        transactions:\n          type: array\n          items:\n            $ref: '#/components/schemas/UpdateTransaction'\n    UpdateTransaction:\n      allOf:\n      - required:\n        - id\n        type: object\n        properties:\n          id:\n            type: string\n      - $ref: '#/components/schemas/SaveTransaction'\n    SaveTransaction:\n      required:\n      - account_id\n      - amount\n      - date\n      type: object\n      properties:\n        account_id:\n          type: string\n          format: uuid\n        date:\n          type: string\n          description: The transaction date in ISO format (e.g. 2016-12-01).  Future\n            dates (scheduled transactions) are not permitted.  Split transaction dates\n            cannot be changed and if a different date is supplied it will be ignored.\n          format: date\n        amount:\n          type: integer\n          description: The transaction amount in milliunits format.  Split transaction\n            amounts cannot be changed and if a different amount is supplied it will\n            be ignored.\n          format: int64\n        payee_id:\n          type: string\n          description: The payee for the transaction.  To create a transfer between\n            two accounts, use the account transfer payee pointing to the target account.  Account\n            transfer payees are specified as `tranfer_payee_id` on the account resource.\n          format: uuid\n        payee_name:\n          maxLength: 50\n          type: string\n          description: The payee name.  If a `payee_name` value is provided and `payee_id`\n            has a null value, the `payee_name` value will be used to resolve the payee\n            by either (1) a matching payee rename rule (only if `import_id` is also\n            specified) or (2) a payee with the same name or (3) creation of a new\n            payee.\n        category_id:\n          type: string\n          description: The category for the transaction.  To configure a split transaction,\n            you can specify null for `category_id` and provide a `subtransactions`\n            array as part of the transaction object.  If an existing transaction is\n            a split, the `category_id` cannot be changed.  Credit Card Payment categories\n            are not permitted and will be ignored if supplied.\n          format: uuid\n        memo:\n          maxLength: 200\n          type: string\n        cleared:\n          type: string\n          description: The cleared status of the transaction\n          enum:\n          - cleared\n          - uncleared\n          - reconciled\n        approved:\n          type: boolean\n          description: Whether or not the transaction is approved.  If not supplied,\n            transaction will be unapproved by default.\n        flag_color:\n          type: string\n          description: The transaction flag\n          enum:\n          - red\n          - orange\n          - yellow\n          - green\n          - blue\n          - purple\n        import_id:\n          maxLength: 36\n          type: string\n          description: 'If specified, the new transaction will be assigned this `import_id`\n            and considered \"imported\".  We will also attempt to match this imported\n            transaction to an existing \"user-entered\" transation on the same account,\n            with the same amount, and with a date +/-10 days from the imported transaction\n            date.\u003cbr\u003e\u003cbr\u003eTransactions imported through File Based Import or Direct\n            Import (not through the API) are assigned an import_id in the format:\n            ''YNAB:[milliunit_amount]:[iso_date]:[occurrence]''. For example, a transaction\n            dated 2015-12-30 in the amount of -$294.23 USD would have an import_id\n            of ''YNAB:-294230:2015-12-30:1''.  If a second transaction on the same\n            account was imported and had the same date and same amount, its import_id\n            would be ''YNAB:-294230:2015-12-30:2''.  Using a consistent format will\n            prevent duplicates through Direct Import and File Based Import.\u003cbr\u003e\u003cbr\u003eIf\n            import_id is omitted or specified as null, the transaction will be treated\n            as a \"user-entered\" transaction. As such, it will be eligible to be matched\n            against transactions later being imported (via DI, FBI, or API).'\n        subtransactions:\n          type: array\n          description: An array of subtransactions to configure a transaction as a\n            split.  Updating `subtransactions` on an existing split transaction is\n            not supported.\n          items:\n            $ref: '#/components/schemas/SaveSubTransaction'\n    SaveSubTransaction:\n      required:\n      - amount\n      type: object\n      properties:\n        amount:\n          type: integer\n          description: The subtransaction amount in milliunits format.\n          format: int64\n        payee_id:\n          type: string\n          description: The payee for the subtransaction.\n          format: uuid\n        payee_name:\n          maxLength: 50\n          type: string\n          description: The payee name.  If a `payee_name` value is provided and `payee_id`\n            has a null value, the `payee_name` value will be used to resolve the payee\n            by either (1) a matching payee rename rule (only if import_id is also\n            specified on parent transaction) or (2) a payee with the same name or\n            (3) creation of a new payee.\n        category_id:\n          type: string\n          description: The category for the subtransaction.  Credit Card Payment categories\n            are not permitted and will be ignored if supplied.\n          format: uuid\n        memo:\n          maxLength: 200\n          type: string\n    SaveTransactionsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - server_knowledge\n          - transaction_ids\n          type: object\n          properties:\n            transaction_ids:\n              type: array\n              description: The transaction ids that were saved\n              items:\n                type: string\n            transaction:\n              $ref: '#/components/schemas/TransactionDetail'\n            transactions:\n              type: array\n              description: If multiple transactions were specified, the transactions\n                that were saved\n              items:\n                $ref: '#/components/schemas/TransactionDetail'\n            duplicate_import_ids:\n              type: array\n              description: If multiple transactions were specified, a list of import_ids\n                that were not created because of an existing `import_id` found on\n                the same account\n              items:\n                type: string\n            server_knowledge:\n              type: integer\n              description: The knowledge of the server\n              format: int64\n    TransactionResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - transaction\n          type: object\n          properties:\n            transaction:\n              $ref: '#/components/schemas/TransactionDetail'\n    TransactionSummary:\n      required:\n      - account_id\n      - amount\n      - approved\n      - cleared\n      - date\n      - deleted\n      - id\n      type: object\n      properties:\n        id:\n          type: string\n        date:\n          type: string\n          description: The transaction date in ISO format (e.g. 2016-12-01)\n          format: date\n        amount:\n          type: integer\n          description: The transaction amount in milliunits format\n          format: int64\n        memo:\n          type: string\n        cleared:\n          type: string\n          description: The cleared status of the transaction\n          enum:\n          - cleared\n          - uncleared\n          - reconciled\n        approved:\n          type: boolean\n          description: Whether or not the transaction is approved\n        flag_color:\n          type: string\n          description: The transaction flag\n          enum:\n          - red\n          - orange\n          - yellow\n          - green\n          - blue\n          - purple\n        account_id:\n          type: string\n          format: uuid\n        payee_id:\n          type: string\n          format: uuid\n        category_id:\n          type: string\n          format: uuid\n        transfer_account_id:\n          type: string\n          description: If a transfer transaction, the account to which it transfers\n          format: uuid\n        transfer_transaction_id:\n          type: string\n          description: If a transfer transaction, the id of transaction on the other\n            side of the transfer\n        matched_transaction_id:\n          type: string\n          description: If transaction is matched, the id of the matched transaction\n        import_id:\n          type: string\n          description: 'If the Transaction was imported, this field is a unique (by\n            account) import identifier.  If this transaction was imported through\n            File Based Import or Direct Import and not through the API, the import_id\n            will have the format: ''YNAB:[milliunit_amount]:[iso_date]:[occurrence]''.  For\n            example, a transaction dated 2015-12-30 in the amount of -$294.23 USD\n            would have an import_id of ''YNAB:-294230:2015-12-30:1''.  If a second\n            transaction on the same account was imported and had the same date and\n            same amount, its import_id would be ''YNAB:-294230:2015-12-30:2''.'\n        deleted:\n          type: boolean\n          description: Whether or not the transaction has been deleted.  Deleted transactions\n            will only be included in delta requests.\n    TransactionDetail:\n      allOf:\n      - $ref: '#/components/schemas/TransactionSummary'\n      - required:\n        - account_name\n        - subtransactions\n        type: object\n        properties:\n          account_name:\n            type: string\n          payee_name:\n            type: string\n          category_name:\n            type: string\n          subtransactions:\n            type: array\n            description: If a split transaction, the subtransactions.\n            items:\n              $ref: '#/components/schemas/SubTransaction'\n    HybridTransaction:\n      allOf:\n      - $ref: '#/components/schemas/TransactionSummary'\n      - required:\n        - account_name\n        - type\n        type: object\n        properties:\n          type:\n            type: string\n            description: Whether the hybrid transaction represents a regular transaction\n              or a subtransaction\n            enum:\n            - transaction\n            - subtransaction\n          parent_transaction_id:\n            type: string\n            description: For subtransaction types, this is the id of the parent transaction.  For\n              transaction types, this id will be always be null.\n          account_name:\n            type: string\n          payee_name:\n            type: string\n          category_name:\n            type: string\n    SaveMonthCategoryWrapper:\n      required:\n      - category\n      type: object\n      properties:\n        category:\n          $ref: '#/components/schemas/SaveMonthCategory'\n    SaveMonthCategory:\n      required:\n      - budgeted\n      type: object\n      properties:\n        budgeted:\n          type: integer\n          description: Budgeted amount in milliunits format\n          format: int64\n    TransactionsImportResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - transaction_ids\n          type: object\n          properties:\n            transaction_ids:\n              type: array\n              description: The list of transaction ids that were imported.\n              items:\n                type: string\n    BulkResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - bulk\n          type: object\n          properties:\n            bulk:\n              required:\n              - duplicate_import_ids\n              - transaction_ids\n              type: object\n              properties:\n                transaction_ids:\n                  type: array\n                  description: The list of Transaction ids that were created.\n                  items:\n                    type: string\n                duplicate_import_ids:\n                  type: array\n                  description: If any Transactions were not created because they had\n                    an `import_id` matching a transaction already on the same account,\n                    the specified import_id(s) will be included in this list.\n                  items:\n                    type: string\n    BulkTransactions:\n      required:\n      - transactions\n      type: object\n      properties:\n        transactions:\n          type: array\n          items:\n            $ref: '#/components/schemas/SaveTransaction'\n    SubTransaction:\n      required:\n      - amount\n      - deleted\n      - id\n      - transaction_id\n      type: object\n      properties:\n        id:\n          type: string\n        transaction_id:\n          type: string\n        amount:\n          type: integer\n          description: The subtransaction amount in milliunits format\n          format: int64\n        memo:\n          type: string\n        payee_id:\n          type: string\n          format: uuid\n        payee_name:\n          type: string\n        category_id:\n          type: string\n          format: uuid\n        category_name:\n          type: string\n        transfer_account_id:\n          type: string\n          description: If a transfer, the account_id which the subtransaction transfers\n            to\n          format: uuid\n        transfer_transaction_id:\n          type: string\n          description: If a transfer, the id of transaction on the other side of the\n            transfer\n        deleted:\n          type: boolean\n          description: Whether or not the subtransaction has been deleted.  Deleted\n            subtransactions will only be included in delta requests.\n    ScheduledTransactionsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - scheduled_transactions\n          - server_knowledge\n          type: object\n          properties:\n            scheduled_transactions:\n              type: array\n              items:\n                $ref: '#/components/schemas/ScheduledTransactionDetail'\n            server_knowledge:\n              type: integer\n              description: The knowledge of the server\n              format: int64\n    ScheduledTransactionResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - scheduled_transaction\n          type: object\n          properties:\n            scheduled_transaction:\n              $ref: '#/components/schemas/ScheduledTransactionDetail'\n    ScheduledTransactionSummary:\n      required:\n      - account_id\n      - amount\n      - date_first\n      - date_next\n      - deleted\n      - frequency\n      - id\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        date_first:\n          type: string\n          description: The first date for which the Scheduled Transaction was scheduled.\n          format: date\n        date_next:\n          type: string\n          description: The next date for which the Scheduled Transaction is scheduled.\n          format: date\n        frequency:\n          type: string\n          enum:\n          - never\n          - daily\n          - weekly\n          - everyOtherWeek\n          - twiceAMonth\n          - every4Weeks\n          - monthly\n          - everyOtherMonth\n          - every3Months\n          - every4Months\n          - twiceAYear\n          - yearly\n          - everyOtherYear\n        amount:\n          type: integer\n          description: The scheduled transaction amount in milliunits format\n          format: int64\n        memo:\n          type: string\n        flag_color:\n          type: string\n          description: The scheduled transaction flag\n          enum:\n          - red\n          - orange\n          - yellow\n          - green\n          - blue\n          - purple\n        account_id:\n          type: string\n          format: uuid\n        payee_id:\n          type: string\n          format: uuid\n        category_id:\n          type: string\n          format: uuid\n        transfer_account_id:\n          type: string\n          description: If a transfer, the account_id which the scheduled transaction\n            transfers to\n          format: uuid\n        deleted:\n          type: boolean\n          description: Whether or not the scheduled transaction has been deleted.  Deleted\n            scheduled transactions will only be included in delta requests.\n    ScheduledTransactionDetail:\n      allOf:\n      - $ref: '#/components/schemas/ScheduledTransactionSummary'\n      - required:\n        - account_name\n        - subtransactions\n        type: object\n        properties:\n          account_name:\n            type: string\n          payee_name:\n            type: string\n          category_name:\n            type: string\n          subtransactions:\n            type: array\n            description: If a split scheduled transaction, the subtransactions.\n            items:\n              $ref: '#/components/schemas/ScheduledSubTransaction'\n    ScheduledSubTransaction:\n      required:\n      - amount\n      - deleted\n      - id\n      - scheduled_transaction_id\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        scheduled_transaction_id:\n          type: string\n          format: uuid\n        amount:\n          type: integer\n          description: The scheduled subtransaction amount in milliunits format\n          format: int64\n        memo:\n          type: string\n        payee_id:\n          type: string\n          format: uuid\n        category_id:\n          type: string\n          format: uuid\n        transfer_account_id:\n          type: string\n          description: If a transfer, the account_id which the scheduled subtransaction\n            transfers to\n          format: uuid\n        deleted:\n          type: boolean\n          description: Whether or not the scheduled subtransaction has been deleted.  Deleted\n            scheduled subtransactions will only be included in delta requests.\n    MonthSummariesResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - months\n          - server_knowledge\n          type: object\n          properties:\n            months:\n              type: array\n              items:\n                $ref: '#/components/schemas/MonthSummary'\n            server_knowledge:\n              type: integer\n              description: The knowledge of the server\n              format: int64\n    MonthDetailResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          required:\n          - month\n          type: object\n          properties:\n            month:\n              $ref: '#/components/schemas/MonthDetail'\n    MonthSummary:\n      required:\n      - activity\n      - budgeted\n      - deleted\n      - income\n      - month\n      - to_be_budgeted\n      type: object\n      properties:\n        month:\n          type: string\n          format: date\n        note:\n          type: string\n        income:\n          type: integer\n          description: 'The total amount of transactions categorized to ''Inflow:\n            Ready to Assign'' in the month'\n          format: int64\n        budgeted:\n          type: integer\n          description: The total amount budgeted in the month\n          format: int64\n        activity:\n          type: integer\n          description: 'The total amount of transactions in the month, excluding those\n            categorized to ''Inflow: Ready to Assign'''\n          format: int64\n        to_be_budgeted:\n          type: integer\n          description: The available amount for 'Ready to Assign'\n          format: int64\n        age_of_money:\n          type: integer\n          description: The Age of Money as of the month\n          format: int32\n        deleted:\n          type: boolean\n          description: Whether or not the month has been deleted.  Deleted months\n            will only be included in delta requests.\n    MonthDetail:\n      allOf:\n      - $ref: '#/components/schemas/MonthSummary'\n      - required:\n        - categories\n        type: object\n        properties:\n          categories:\n            type: array\n            description: The budget month categories.  Amounts (budgeted, activity,\n              balance, etc.) are specific to the {month} parameter specified.\n            items:\n              $ref: '#/components/schemas/Category'\n  securitySchemes:\n    bearerAuth:\n      scheme: bearer\n      type: http\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/tool-tests/8-wildcard-media-type/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/tool-tests/8-wildcard-media-type/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/budgets/{budget_id}\": get: responses: 200: contents: application/json: generate schema: field data: field budget: allOf: merge properties: try to merge conflicting property schemas: merge item schema: merge properties: try to merge conflicting property schemas: enum: allOf enum merging not implemented",
	"NotImplemented": [
		"allOf enum merging",
		"unsupported content types"
	]
}