{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/grafeas/kritis"
		},
		"file": {
			"name": "api-specification.yaml",
			"size": 0,
			"path": "cmd/kritis/gcr-signer/api-specification.yaml",
			"byteSize": 8001,
			"content": "openapi: 3.0.1\ninfo:\n  title: kritis-signer\n  description: |\n    checks whether the container image vulnerabilities compliant with the policy and creates an attestation.\n  contact:\n    email: markvanholsteijn@binx.io\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 0.1.0\nexternalDocs:\n  description: Checkout the source code\n  url: https://github.com/grafeas/kritis/cmd/kritis/signer\nservers:\n  - url: /\nsecurity:\n  - google_id_token: []\npaths:\n  /check-only:\n    post:\n      summary: check if the image complies with the vulnerability policy\n      operationId: check\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ImageCheckRequest\"\n            examples:\n              request:\n                $ref: \"#/components/examples/request\"\n\n      responses:\n        200:\n          description: ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageCheckResponse\"\n              examples:\n                200:\n                  $ref: \"#/components/examples/200\"\n\n        422:\n          description: image does not comply\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageCheckResponse\"\n              examples:\n                422:\n                  $ref: \"#/components/examples/422\"\n\n        400:\n          description: incorrect input\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageCheckResponse\"\n              examples:\n                500:\n                  $ref: \"#/components/examples/400\"\n\n        500:\n          description: failed to check\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageCheckResponse\"\n              examples:\n                500:\n                  $ref: \"#/components/examples/500\"\n\n  /check-and-sign:\n    post:\n      summary: check if the image complies and creates an attestation\n      operationId: check-and-sign\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ImageCheckRequest\"\n            examples:\n              request:\n                $ref: \"#/components/examples/request\"\n\n\n      responses:\n        200:\n          description: ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageCheckResponse\"\n              examples:\n                request:\n                  $ref: \"#/components/examples/200\"\n        422:\n          description: does not comply\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageCheckResponse\"\n              examples:\n                422:\n                  $ref: \"#/components/examples/422\"\n        400:\n          description: incorrect input\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageCheckResponse\"\n              examples:\n                500:\n                  $ref: \"#/components/examples/400\"\n\n        500:\n          description: failed to check or signing\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageCheckResponse\"\n              examples:\n                500:\n                  $ref: \"#/components/examples/500\"\n\n  /event:\n    post:\n      summary: checks the image and creates an attestation after a vulnerability scan completed\n      operationId: container-analysis-occurrence-event\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionEvent\"\n            example:\n              subscription: vulnerability-attestor-container-analysis-occurrences\n              message:\n                data: eyJuYW1lIjoicHJvamVjdHMvcHJvamVjdC9vY2N1cnJlbmNlcy9mNjJmMWU1MC1lMGUyLTQ3ZWYtOTI1ZC1iZDc5OTA1YWI4MmQiLCJraW5kIjoiRElTQ09WRVJZIiwibm90aWZpY2F0aW9uVGltZSI6IjIwMjAtMTEtMDZUMTU6MDM6NTAuNTMxMDgyWiJ9\n                id: '1681150847368976'\n\n\n      responses:\n        200:\n          description: ok, even if the images fails against the policy\n          content:\n            application/json:\n              schema:\n                type: object\n              examples:\n                200:\n                  $ref: \"#/components/examples/200\"\n\n        500:\n          description: failed to check or sign\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageCheckResponse\"\n              examples:\n                500:\n                  $ref: \"#/components/examples/500\"\n\ncomponents:\n  examples:\n    request:\n      summary: a simple request\n      value:\n        image: \"gcr.io/project/alpine@sha256:f86657a463e3de9e5176e4774640c76399b2480634af97f45354f1553e372cc9\"\n    200:\n      summary: image passed policy\n      value:\n        image: \"gcr.io/project/alpine@sha256:f86657a463e3de9e5176e4774640c76399b2480634af97f45354f1553e372cc9\"\n        status: ok\n    422:\n      summary: image did not pass policy\n      value:\n        image: \"gcr.io/project/alpine@sha256:f86657a463e3de9e5176e4774640c76399b2480634af97f45354f1553e372cc9\"\n        status: failed\n        violations:\n          - found unfixable CVE projects/goog-vulnz/notes/CVE-2019-3843\n    400:\n      summary: invalid input\n      value:\n        image: 'gcr.io/project/alpine@sha256:f86657a463e3de9e5176e4774640c76399b2480634af97f4535f1553e372cc9'\n        status: failed\n        message: 'failed to parse container image reference gcr.io/project/alpine@sha256:f86657a463e3de9e5176e4774640c76399b2480634af97f4535f1553e372cc9, invalid checksum digest length'\n    500:\n      summary: a processing error occurred\n      value:\n        image: 'gcr.io/project/alpine@sha256:f86657a463e3de9e5176e4774640c76399b2480634af97f4535f1553e372cc9'\n        status: failed\n        message: 'deleting existing attestation failed: rpc error: code = PermissionDenied desc = permission \"containeranalysis.notes.attachOccurrence\" denied for project \"project\", entity ID \"passed-vulnerability-policy\"'\n\n  schemas:\n    SubscriptionEvent:\n      type: object\n      properties:\n        subscription:\n          type: string\n          description: name of the subscription\n        data:\n          $ref: \"#/components/schemas/PubSubData\"\n\n    PubSubData:\n      type: object\n      properties:\n        ID:\n          type: string\n          description: event id\n        data:\n          type: string\n          description: base64 encoded payload of \"#/components/schemas/ContainerAnalysisOccurrenceEvent\"\n\n    ContainerAnalysisOccurrenceEvent:\n      type: object\n      properties:\n        occurrence:\n          type: string\n        kind:\n          type: string\n        notificationTime:\n          type: string\n\n\n    ImageCheckRequest:\n      type: object\n      properties:\n        image:\n          type: string\n          description: full container image reference with digest\n\n\n    ImageCheckResponse:\n      type: object\n\n      properties:\n        image:\n          type: string\n          description: full container image reference with digest\n        status:\n          type: string\n          enum: [\"ok\", \"failed\", \"signed\", \"not-signed\"]\n          description: outcome of the request.\n        message:\n          type: string\n          description: if an error occurred\n        violations:\n          type: array\n          description: reason of the policy violation\n          items:\n            type: string\n\n  securitySchemes:\n    google_id_token:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/v2/auth\n          scopes: {}\n      x-google-issuer: https://accounts.google.com\n      x-google-jwks_uri: https://www.googleapis.com/oauth2/v3/certs\n",
			"canonicalURL": "/github.com/grafeas/kritis@3e61f73220ae82557fba9302192a484e92b93e66/-/blob/cmd/kritis/gcr-signer/api-specification.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/grafeas/kritis/blob/3e61f73220ae82557fba9302192a484e92b93e66/cmd/kritis/gcr-signer/api-specification.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/check-and-sign\": post: security: security \"google_id_token\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}