{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-firebaserules-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-firebaserules-v1-swagger.yaml",
			"byteSize": 40778,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  description: \u003e\n    Creates and manages rules that determine when a Firebase Rules-enabled\n    service should permit a request.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Firebase Rules\n  version: v1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n    - backend\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: google\n      url: https://firebaserules.googleapis.com/$discovery/rest?version=v1\n      version: v1\n  x-preferred: true\n  x-providerName: googleapis.com\n  x-serviceName: firebaserules\nexternalDocs:\n  url: https://firebase.google.com/docs/storage/security\ntags:\n  - name: projects\npaths:\n  \"/v1/{name}\":\n    delete:\n      description: Delete a `Release` by resource name.\n      operationId: firebaserules.projects.releases.delete\n      parameters:\n        - description: |-\n            Resource name for the `Release` to delete.\n\n            Format: `projects/{project_id}/releases/{release_id}`\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/firebase\n          Oauth2c:\n            - https://www.googleapis.com/auth/firebase\n      tags:\n        - projects\n    get:\n      description: Get a `Release` by name.\n      operationId: firebaserules.projects.releases.get\n      parameters:\n        - description: |-\n            Resource name of the `Release`.\n\n            Format: `projects/{project_id}/releases/{release_id}`\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Release\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/firebase\n          Oauth2c:\n            - https://www.googleapis.com/auth/firebase\n        - Oauth2:\n            - https://www.googleapis.com/auth/firebase.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/firebase.readonly\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    patch:\n      description: \u003e-\n        Update a `Release` via PATCH.\n\n\n        Only updates to the `ruleset_name` and `test_suite_name` fields will be\n\n        honored. `Release` rename is not supported. To create a `Release` use the\n\n        CreateRelease method.\n      operationId: firebaserules.projects.releases.patch\n      parameters:\n        - description: |-\n            Resource name for the project which owns this `Release`.\n\n            Format: `projects/{project_id}`\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateReleaseRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Release\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/firebase\n          Oauth2c:\n            - https://www.googleapis.com/auth/firebase\n      tags:\n        - projects\n  \"/v1/{name}/releases\":\n    get:\n      description: |-\n        List the `Release` values for a project. This list may optionally be\n        filtered by `Release` name, `Ruleset` name, `TestSuite` name, or any\n        combination thereof.\n      operationId: firebaserules.projects.releases.list\n      parameters:\n        - description: \u003e-\n            `Release` filter. The list method supports filters with restrictions\n            on the\n\n            `Release.name`, `Release.ruleset_name`, and `Release.test_suite_name`.\n\n\n            Example 1: A filter of 'name=prod*' might return `Release`s with names\n\n            within 'projects/foo' prefixed with 'prod':\n\n\n            Name                          | Ruleset Name\n\n            ------------------------------|-------------\n\n            projects/foo/releases/prod    | projects/foo/rulesets/uuid1234\n\n            projects/foo/releases/prod/v1 | projects/foo/rulesets/uuid1234\n\n            projects/foo/releases/prod/v2 | projects/foo/rulesets/uuid8888\n\n\n            Example 2: A filter of `name=prod* ruleset_name=uuid1234` would return only\n\n            `Release` instances for 'projects/foo' with names prefixed with 'prod'\n\n            referring to the same `Ruleset` name of 'uuid1234':\n\n\n            Name                          | Ruleset Name\n\n            ------------------------------|-------------\n\n            projects/foo/releases/prod    | projects/foo/rulesets/1234\n\n            projects/foo/releases/prod/v1 | projects/foo/rulesets/1234\n\n\n            In the examples, the filter parameters refer to the search filters are\n\n            relative to the project. Fully qualified prefixed may also be used. e.g.\n\n            `test_suite_name=projects/foo/testsuites/uuid1`\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: |-\n            Resource name for the project.\n\n            Format: `projects/{project_id}`\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n        - description: \u003e-\n            Page size to load. Maximum of 100. Defaults to 10.\n\n            Note: `page_size` is just a hint and the service may choose to load fewer\n\n            than `page_size` results due to the size of the output. To traverse all of\n\n            the releases, the caller should iterate until the `page_token` on the\n\n            response is empty.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: Next page token for the next batch of `Release` instances.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListReleasesResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/firebase\n          Oauth2c:\n            - https://www.googleapis.com/auth/firebase\n        - Oauth2:\n            - https://www.googleapis.com/auth/firebase.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/firebase.readonly\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Create a `Release`.\n\n\n        Release names should reflect the developer's deployment practices. For\n\n        example, the release name may include the environment name, application\n\n        name, application version, or any other name meaningful to the developer.\n\n        Once a `Release` refers to a `Ruleset`, the rules can be enforced by\n\n        Firebase Rules-enabled services.\n\n\n        More than one `Release` may be 'live' concurrently. Consider the following\n\n        three `Release` names for `projects/foo` and the `Ruleset` to which they\n\n        refer.\n\n\n        Release Name                    | Ruleset Name\n\n        --------------------------------|-------------\n\n        projects/foo/releases/prod      | projects/foo/rulesets/uuid123\n\n        projects/foo/releases/prod/beta | projects/foo/rulesets/uuid123\n\n        projects/foo/releases/prod/v23  | projects/foo/rulesets/uuid456\n\n\n        The table reflects the `Ruleset` rollout in progress. The `prod` and\n\n        `prod/beta` releases refer to the same `Ruleset`. However, `prod/v23`\n\n        refers to a new `Ruleset`. The `Ruleset` reference for a `Release` may be\n\n        updated using the UpdateRelease method.\n      operationId: firebaserules.projects.releases.create\n      parameters:\n        - description: |-\n            Resource name for the project which owns this `Release`.\n\n            Format: `projects/{project_id}`\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Release\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Release\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/firebase\n          Oauth2c:\n            - https://www.googleapis.com/auth/firebase\n      tags:\n        - projects\n  \"/v1/{name}/rulesets\":\n    get:\n      description: \u003e-\n        List `Ruleset` metadata only and optionally filter the results by\n        `Ruleset`\n\n        name.\n\n\n        The full `Source` contents of a `Ruleset` may be retrieved with\n\n        GetRuleset.\n      operationId: firebaserules.projects.rulesets.list\n      parameters:\n        - description: \u003e-\n            `Ruleset` filter. The list method supports filters with restrictions\n            on\n\n            `Ruleset.name`.\n\n\n            Filters on `Ruleset.create_time` should use the `date` function which\n\n            parses strings that conform to the RFC 3339 date/time specifications.\n\n\n            Example: `create_time \u003e date(\"2017-01-01T00:00:00Z\") AND name=UUID-*`\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: |-\n            Resource name for the project.\n\n            Format: `projects/{project_id}`\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n        - description: \u003e-\n            Page size to load. Maximum of 100. Defaults to 10.\n\n            Note: `page_size` is just a hint and the service may choose to load less\n\n            than `page_size` due to the size of the output. To traverse all of the\n\n            releases, caller should iterate until the `page_token` is empty.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: Next page token for loading the next batch of `Ruleset` instances.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListRulesetsResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/firebase\n          Oauth2c:\n            - https://www.googleapis.com/auth/firebase\n        - Oauth2:\n            - https://www.googleapis.com/auth/firebase.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/firebase.readonly\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Create a `Ruleset` from `Source`.\n\n\n        The `Ruleset` is given a unique generated name which is returned to the\n\n        caller. `Source` containing syntactic or semantics errors will result in an\n\n        error response indicating the first error encountered. For a detailed view\n\n        of `Source` issues, use TestRuleset.\n      operationId: firebaserules.projects.rulesets.create\n      parameters:\n        - description: |-\n            Resource name for Project which owns this `Ruleset`.\n\n            Format: `projects/{project_id}`\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Ruleset\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Ruleset\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/firebase\n          Oauth2c:\n            - https://www.googleapis.com/auth/firebase\n      tags:\n        - projects\n  \"/v1/{name}:getExecutable\":\n    get:\n      description: Get the `Release` executable to use when enforcing rules.\n      operationId: firebaserules.projects.releases.getExecutable\n      parameters:\n        - description: |-\n            The requested runtime executable version.\n            Defaults to FIREBASE_RULES_EXECUTABLE_V1.\n          in: query\n          name: executableVersion\n          schema:\n            type: string\n            enum:\n              - RELEASE_EXECUTABLE_VERSION_UNSPECIFIED\n              - FIREBASE_RULES_EXECUTABLE_V1\n              - FIREBASE_RULES_EXECUTABLE_V2\n        - description: |-\n            Resource name of the `Release`.\n\n            Format: `projects/{project_id}/releases/{release_id}`\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/GetReleaseExecutableResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/firebase\n          Oauth2c:\n            - https://www.googleapis.com/auth/firebase\n        - Oauth2:\n            - https://www.googleapis.com/auth/firebase.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/firebase.readonly\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  \"/v1/{name}:test\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Test `Source` for syntactic and semantic correctness. Issues present, if\n\n        any, will be returned to the caller with a description, severity, and\n\n        source location.\n\n\n        The test method may be executed with `Source` or a `Ruleset` name.\n\n        Passing `Source` is useful for unit testing new rules. Passing a `Ruleset`\n\n        name is useful for regression testing an existing rule.\n\n\n        The following is an example of `Source` that permits users to upload images\n\n        to a bucket bearing their user id and matching the correct metadata:\n\n\n        _*Example*_\n\n            // Users are allowed to subscribe and unsubscribe to the blog.\n            service firebase.storage {\n              match /users/{userId}/images/{imageName} {\n                  allow write: if userId == request.auth.uid\n                      \u0026\u0026 (imageName.matches('*.png$')\n                      || imageName.matches('*.jpg$'))\n                      \u0026\u0026 resource.mimeType.matches('^image/')\n              }\n            }\n      operationId: firebaserules.projects.test\n      parameters:\n        - description: \u003e-\n            Tests may either provide `source` or a `Ruleset` resource name.\n\n\n            For tests against `source`, the resource name must refer to the project:\n\n            Format: `projects/{project_id}`\n\n\n            For tests against a `Ruleset`, this must be the `Ruleset` resource name:\n\n            Format: `projects/{project_id}/rulesets/{ruleset_id}`\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TestRulesetRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/TestRulesetResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/firebase\n          Oauth2c:\n            - https://www.googleapis.com/auth/firebase\n        - Oauth2:\n            - https://www.googleapis.com/auth/firebase.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/firebase.readonly\n      tags:\n        - projects\nservers:\n  - url: https://firebaserules.googleapis.com/\ncomponents:\n  parameters:\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n          - media\n          - proto\n        default: json\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be\n        any arbitrary string assigned to a user, but should not exceed 40\n        characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        type: string\n        enum:\n          - \"1\"\n          - \"2\"\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings\n            https://www.googleapis.com/auth/firebase.readonly: View all your Firebase data and settings\n    Oauth2c:\n      description: Oauth 2.0 accessCode authentication\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings\n            https://www.googleapis.com/auth/firebase.readonly: View all your Firebase data and settings\n  schemas:\n    Arg:\n      description: Arg matchers for the mock function.\n      properties:\n        anyValue:\n          $ref: \"#/components/schemas/Empty\"\n        exactValue:\n          description: Argument exactly matches value provided.\n      type: object\n    Empty:\n      description: \u003e-\n        A generic empty message that you can re-use to avoid defining duplicated\n\n        empty messages in your APIs. A typical example is to use it as the request\n\n        or the response type of an API method. For instance:\n\n            service Foo {\n              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n            }\n\n        The JSON representation for `Empty` is empty JSON object `{}`.\n      properties: {}\n      type: object\n    File:\n      description: \"`File` containing source content.\"\n      properties:\n        content:\n          description: Textual Content.\n          type: string\n        fingerprint:\n          description: Fingerprint (e.g. github sha) associated with the `File`.\n          format: byte\n          type: string\n        name:\n          description: File name.\n          type: string\n      type: object\n    FunctionCall:\n      description: |-\n        Represents a service-defined function call that was invoked during test\n        execution.\n      properties:\n        args:\n          description: The arguments that were provided to the function.\n          items: {}\n          type: array\n        function:\n          description: Name of the function invoked.\n          type: string\n      type: object\n    FunctionMock:\n      description: \u003e-\n        Mock function definition.\n\n\n        Mocks must refer to a function declared by the target service. The type of\n\n        the function args and result will be inferred at test time. If either the\n\n        arg or result values are not compatible with function type declaration, the\n\n        request will be considered invalid.\n\n\n        More than one `FunctionMock` may be provided for a given function name so\n\n        long as the `Arg` matchers are distinct. There may be only one function\n\n        for a given overload where all `Arg` values are `Arg.any_value`.\n      properties:\n        args:\n          description: \u003e-\n            The list of `Arg` values to match. The order in which the arguments\n            are\n\n            provided is the order in which they must appear in the function\n\n            invocation.\n          items:\n            $ref: \"#/components/schemas/Arg\"\n          type: array\n        function:\n          description: |-\n            The name of the function.\n\n            The function name must match one provided by a service declaration.\n          type: string\n        result:\n          $ref: \"#/components/schemas/Result\"\n      type: object\n    GetReleaseExecutableResponse:\n      description: The response for FirebaseRulesService.GetReleaseExecutable\n      properties:\n        executable:\n          description: Executable view of the `Ruleset` referenced by the `Release`.\n          format: byte\n          type: string\n        executableVersion:\n          description: The Rules runtime version of the executable.\n          enum:\n            - RELEASE_EXECUTABLE_VERSION_UNSPECIFIED\n            - FIREBASE_RULES_EXECUTABLE_V1\n            - FIREBASE_RULES_EXECUTABLE_V2\n          type: string\n        language:\n          description: \"`Language` used to generate the executable bytes.\"\n          enum:\n            - LANGUAGE_UNSPECIFIED\n            - FIREBASE_RULES\n            - EVENT_FLOW_TRIGGERS\n          type: string\n        rulesetName:\n          description: \"`Ruleset` name associated with the `Release` executable.\"\n          type: string\n        syncTime:\n          description: |-\n            Optional, indicates the freshness of the result. The response is\n            guaranteed to be the latest within an interval up to the\n            sync_time (inclusive).\n          format: google-datetime\n          type: string\n        updateTime:\n          description: Timestamp for the most recent `Release.update_time`.\n          format: google-datetime\n          type: string\n      type: object\n    Issue:\n      description: Issues include warnings, errors, and deprecation notices.\n      properties:\n        description:\n          description: Short error description.\n          type: string\n        severity:\n          description: The severity of the issue.\n          enum:\n            - SEVERITY_UNSPECIFIED\n            - DEPRECATION\n            - WARNING\n            - ERROR\n          type: string\n        sourcePosition:\n          $ref: \"#/components/schemas/SourcePosition\"\n      type: object\n    ListReleasesResponse:\n      description: The response for FirebaseRulesService.ListReleases.\n      properties:\n        nextPageToken:\n          description: \u003e-\n            The pagination token to retrieve the next page of results. If the\n            value is\n\n            empty, no further results remain.\n          type: string\n        releases:\n          description: List of `Release` instances.\n          items:\n            $ref: \"#/components/schemas/Release\"\n          type: array\n      type: object\n    ListRulesetsResponse:\n      description: The response for FirebaseRulesService.ListRulesets.\n      properties:\n        nextPageToken:\n          description: \u003e-\n            The pagination token to retrieve the next page of results. If the\n            value is\n\n            empty, no further results remain.\n          type: string\n        rulesets:\n          description: List of `Ruleset` instances.\n          items:\n            $ref: \"#/components/schemas/Ruleset\"\n          type: array\n      type: object\n    Release:\n      description: \u003e-\n        `Release` is a named reference to a `Ruleset`. Once a `Release` refers\n        to a\n\n        `Ruleset`, rules-enabled services will be able to enforce the `Ruleset`.\n      properties:\n        createTime:\n          description: |-\n            Time the release was created.\n            Output only.\n          format: google-datetime\n          type: string\n        name:\n          description: \u003e-\n            Resource name for the `Release`.\n\n\n            `Release` names may be structured `app1/prod/v2` or flat `app1_prod_v2`\n\n            which affords developers a great deal of flexibility in mapping the name\n\n            to the style that best fits their existing development practices. For\n\n            example, a name could refer to an environment, an app, a version, or some\n\n            combination of three.\n\n\n            In the table below, for the project name `projects/foo`, the following\n\n            relative release paths show how flat and structured names might be chosen\n\n            to match a desired development / deployment strategy.\n\n\n            Use Case     | Flat Name           | Structured Name\n\n            -------------|---------------------|----------------\n\n            Environments | releases/qa         | releases/qa\n\n            Apps         | releases/app1_qa    | releases/app1/qa\n\n            Versions     | releases/app1_v2_qa | releases/app1/v2/qa\n\n\n            The delimiter between the release name path elements can be almost anything\n\n            and it should work equally well with the release name list filter, but in\n\n            many ways the structured paths provide a clearer picture of the\n\n            relationship between `Release` instances.\n\n\n            Format: `projects/{project_id}/releases/{release_id}`\n          type: string\n        rulesetName:\n          description: \u003e-\n            Name of the `Ruleset` referred to by this `Release`. The `Ruleset`\n            must\n\n            exist the `Release` to be created.\n          type: string\n        updateTime:\n          description: |-\n            Time the release was updated.\n            Output only.\n          format: google-datetime\n          type: string\n      type: object\n    Result:\n      description: Possible result values from the function mock invocation.\n      properties:\n        undefined:\n          $ref: \"#/components/schemas/Empty\"\n        value:\n          description: |-\n            The result is an actual value. The type of the value must match that\n            of the type declared by the service.\n      type: object\n    Ruleset:\n      description: \u003e-\n        `Ruleset` is an immutable copy of `Source` with a globally unique\n        identifier\n\n        and a creation time.\n      properties:\n        createTime:\n          description: |-\n            Time the `Ruleset` was created.\n            Output only.\n          format: google-datetime\n          type: string\n        name:\n          description: \u003e-\n            Name of the `Ruleset`. The ruleset_id is auto generated by the\n            service.\n\n            Format: `projects/{project_id}/rulesets/{ruleset_id}`\n\n            Output only.\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n      type: object\n    Source:\n      description: \"`Source` is one or more `File` messages comprising a logical set of\n        rules.\"\n      properties:\n        files:\n          description: \"`File` set constituting the `Source` bundle.\"\n          items:\n            $ref: \"#/components/schemas/File\"\n          type: array\n      type: object\n    SourcePosition:\n      description: \u003e-\n        Position in the `Source` content including its line, column number, and\n        an\n\n        index of the `File` in the `Source` message. Used for debug purposes.\n      properties:\n        column:\n          description: First column on the source line associated with the source fragment.\n          format: int32\n          type: integer\n        fileName:\n          description: Name of the `File`.\n          type: string\n        line:\n          description: Line number of the source fragment. 1-based.\n          format: int32\n          type: integer\n      type: object\n    TestCase:\n      description: \u003e-\n        `TestCase` messages provide the request context and an expectation as to\n\n        whether the given context will be allowed or denied. Test cases may specify\n\n        the `request`, `resource`, and `function_mocks` to mock a function call to\n\n        a service-provided function.\n\n\n        The `request` object represents context present at request-time.\n\n\n        The `resource` is the value of the target resource as it appears in\n\n        persistent storage before the request is executed.\n      properties:\n        expectation:\n          description: Test expectation.\n          enum:\n            - EXPECTATION_UNSPECIFIED\n            - ALLOW\n            - DENY\n          type: string\n        functionMocks:\n          description: \u003e-\n            Optional function mocks for service-defined functions. If not set,\n            any\n\n            service defined function is expected to return an error, which may or may\n\n            not influence the test outcome.\n          items:\n            $ref: \"#/components/schemas/FunctionMock\"\n          type: array\n        pathEncoding:\n          description: Specifies whether paths (such as request.path) are encoded and how.\n          enum:\n            - ENCODING_UNSPECIFIED\n            - URL_ENCODED\n            - PLAIN\n          type: string\n        request:\n          description: \u003e-\n            Request context.\n\n\n            The exact format of the request context is service-dependent. See the\n\n            appropriate service documentation for information about the supported\n\n            fields and types on the request. Minimally, all services support the\n\n            following fields and types:\n\n\n            Request field  | Type\n\n            ---------------|-----------------\n\n            auth.uid       | `string`\n\n            auth.token     | `map\u003cstring, string\u003e`\n\n            headers        | `map\u003cstring, string\u003e`\n\n            method         | `string`\n\n            params         | `map\u003cstring, string\u003e`\n\n            path           | `string`\n\n            time           | `google.protobuf.Timestamp`\n\n\n            If the request value is not well-formed for the service, the request will\n\n            be rejected as an invalid argument.\n        resource:\n          description: \u003e-\n            Optional resource value as it appears in persistent storage before\n            the\n\n            request is fulfilled.\n\n\n            The resource type depends on the `request.path` value.\n      type: object\n    TestResult:\n      description: |-\n        Test result message containing the state of the test as well as a\n        description and source position for test failures.\n      properties:\n        debugMessages:\n          description: |-\n            Debug messages related to test execution issues encountered during\n            evaluation.\n\n            Debug messages may be related to too many or too few invocations of\n            function mocks or to runtime errors that occur during evaluation.\n\n            For example: ```Unable to read variable [name: \"resource\"]```\n          items:\n            type: string\n          type: array\n        errorPosition:\n          $ref: \"#/components/schemas/SourcePosition\"\n        functionCalls:\n          description: \u003e-\n            The set of function calls made to service-defined methods.\n\n\n            Function calls are included in the order in which they are encountered\n\n            during evaluation, are provided for both mocked and unmocked functions,\n\n            and included on the response regardless of the test `state`.\n          items:\n            $ref: \"#/components/schemas/FunctionCall\"\n          type: array\n        state:\n          description: State of the test.\n          enum:\n            - STATE_UNSPECIFIED\n            - SUCCESS\n            - FAILURE\n          type: string\n        visitedExpressions:\n          description: \u003e-\n            The set of visited permission expressions for a given test. This\n            returns\n\n            the positions and evaluation results of all visited permission\n\n            expressions which were relevant to the test case, e.g.\n\n            ```\n\n            match /path {\n              allow read if: \u003cexpr\u003e\n            }\n\n            ```\n\n            For a detailed report of the intermediate evaluation states, see the\n\n            `expression_reports` field\n          items:\n            $ref: \"#/components/schemas/VisitedExpression\"\n          type: array\n      type: object\n    TestRulesetRequest:\n      description: The request for FirebaseRulesService.TestRuleset.\n      properties:\n        source:\n          $ref: \"#/components/schemas/Source\"\n        testSuite:\n          $ref: \"#/components/schemas/TestSuite\"\n      type: object\n    TestRulesetResponse:\n      description: The response for FirebaseRulesService.TestRuleset.\n      properties:\n        issues:\n          description: \u003e-\n            Syntactic and semantic `Source` issues of varying severity. Issues\n            of\n\n            `ERROR` severity will prevent tests from executing.\n          items:\n            $ref: \"#/components/schemas/Issue\"\n          type: array\n        testResults:\n          description: \u003e-\n            The set of test results given the test cases in the `TestSuite`.\n\n            The results will appear in the same order as the test cases appear in the\n\n            `TestSuite`.\n          items:\n            $ref: \"#/components/schemas/TestResult\"\n          type: array\n      type: object\n    TestSuite:\n      description: \u003e-\n        `TestSuite` is a collection of `TestCase` instances that validate the\n        logical\n\n        correctness of a `Ruleset`. The `TestSuite` may be referenced in-line within\n\n        a `TestRuleset` invocation or as part of a `Release` object as a pre-release\n\n        check.\n      properties:\n        testCases:\n          description: Collection of test cases associated with the `TestSuite`.\n          items:\n            $ref: \"#/components/schemas/TestCase\"\n          type: array\n      type: object\n    UpdateReleaseRequest:\n      description: The request for FirebaseRulesService.UpdateReleasePatch.\n      properties:\n        release:\n          $ref: \"#/components/schemas/Release\"\n        updateMask:\n          description: Specifies which fields to update.\n          format: google-fieldmask\n          type: string\n      type: object\n    VisitedExpression:\n      description: Store the position and access outcome for an expression visited in rules.\n      properties:\n        sourcePosition:\n          $ref: \"#/components/schemas/SourcePosition\"\n        value:\n          description: The evaluated value for the visited expression, e.g. true/false\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-firebaserules-v1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-firebaserules-v1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/{name}/rulesets\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}