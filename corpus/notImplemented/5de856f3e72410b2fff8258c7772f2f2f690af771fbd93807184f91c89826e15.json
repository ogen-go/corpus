{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/getzoop/api-docs"
		},
		"file": {
			"name": "banking-pix.yaml",
			"size": 0,
			"path": "banking/banking-pix.yaml",
			"byteSize": 149302,
			"content": "openapi: 3.0.2\ninfo:\n  title: Pix\n  version: \"1.1\" \n\nsecurity:\n - basicAuth: []\n\ntags:\n - name: Dict\n   description: Diretório de Identificadores de Contas Transacionais  \n - name: Reivindicação/Portabilidade\n   description: Reivindicar ou solicitar a portabilidade de uma chave   \n - name: Pagamentos\n   description: Realiza pagamentos e transferências por Pix  \n\nservers: [  \n    {\n      \"url\": \"https://api.zoop.ws\",\n      \"description\": \"Produção\"\n    },    \n    {\n      \"url\": \"https://apigw-sandbox.zoop.ws\",\n      \"description\": \"Sandbox\"\n    }\n    ]\n    \npaths:\n  \"/v3/marketplaces/{marketplace_id}/banking/dict/holders/{holder_id}/accounts/{account_id}/entries\":\n    parameters:\n      - $ref: \"#/components/parameters/XAuthTokenReading\"\n      - $ref: \"#/components/parameters/XSessionToken\"\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n      summary: Criar chave de endereçamento\n      tags:\n        - Dict\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n               $ref: '#/components/schemas/DictKeyRequest'\n      responses:\n        '200':\n          description: OK - A chave de endereçamento foi incluída com sucesso e está pronta para o uso\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse'\n        '202':\n          description: Accepted - Indica que a requisição de criação de chave foi recebida com sucesso, porém ela necessita de intervenção do usuário para sua conclusão ou não pode ser concluída imediatamente\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse202'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse400'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse404'\n        '412':\n          description: Precondition Failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse412'\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/offsetID\"\n        - $ref: \"#/components/parameters/sizeID\"\n      summary: Buscar vinculo com chave de endereçamento\n      tags:\n        - Dict\n      responses:\n        '200':\n          description: OK - A chave de endereçamento foi incluída com sucesso e está pronta para o uso\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/DictKeyResponse'\n                  has_more: \n                    type: boolean\n                    example: false\n                  limit: \n                    type: integer\n                    example: 1\n                  total_pages: \n                    type: integer\n                    example: 1\n                  page: \n                    type: integer\n                    example: 1\n                  offset: \n                    type: integer\n                    example: 1\n                  total: \n                    type: integer\n                    example: 1\n                  query_count: \n                    type: integer\n                    example: 1\n                  \n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/DictKeyResponse400'\n  \"/v3/marketplaces/{marketplace_id}/banking/dict/holders/{holder_id}/accounts/{account_id}/entries/{entry_id}/ownership\":\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/entryID\"\n        - $ref: \"#/components/parameters/XAuthTokenReading\"\n        - $ref: \"#/components/parameters/XSessionToken\"\n      summary: Confirmar propriedade de chave de endereçamento\n      tags:\n        - Dict\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                code: \n                  type: string\n                  description: Código de verificação de propriedade enviado para o usuário de acordo com o tipo de chave escolhido. Campo alfanumérico de 4 caracteres.\n                  example: 4040\n                  required:\n                    - \"code\"\n      responses:\n        '200':\n          description: OK\n        '400': \n          description: Bad Request\n          content: \n            application/json: \n              schema: \n                $ref: '#/components/schemas/DictKeyResponse400'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse404'\n        '412':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse412'\n  \"/v3/marketplaces/{marketplace_id}/banking/dict/holders/{holder_id}/accounts/{account_id}/entries/{entry_id}/ownership/resend\":\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/entryID\"\n        - $ref: \"#/components/parameters/XAuthTokenReading\"\n        - $ref: \"#/components/parameters/XSessionToken\"\n      summary: Reenviar código de verificação de propriedade de chave de endereçamento\n      tags:\n        - Dict\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message: \n                    type: string\n                    example: Ownership verification code recreated and sent successfully\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse400'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse404'\n        '412':\n          description: Precondition Failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse412'\n  \"/v3/marketplaces/{marketplace_id}/banking/dict/holders/{holder_id}/accounts/{account_id}/entries/keys/{key_value}\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/keyvalueID\"\n      summary: Listar vínculos com chaves de endereçamento pela chave\n      tags:\n        - Dict\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictSearchKey200'\n                \n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                        \"status\": \"bad_request\",\n                        \"type\": \"invalid_request\",\n                        \"code\": 2000,\n                        \"message\": \"Validation field error\",\n                        \"category\": \"business\",\n                        \"status_code\": 400,\n                        \"fields\": {\n                            \"account_id\": {\"code\":1000, \"message\":\"Account Id is required\"},\n                            \"key.type\": {\"code\":1001, \"message\":\"Key type is required\"}\n                        }\n                    }\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                        \"status\": \"not_found\",\n                        \"type\": \"not_found\",\n                        \"code\": 3000, \n                        \"message\": \"Marketplace not found\",\n                        \"category\": \"business\",\n                        \"status_code\": 404\n                    }\n        '500':\n          description: ISE\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                        \"status\": \"internal_server_error\",\n                        \"type\": \"server_error\",\n                        \"code\": 9999,\n                        \"message\": \"Internal Server Error\",\n                        \"category\": \"unexpected\",\n                        \"status_code\": 500\n                    }            \n                \n  \"/v3/marketplaces/{marketplace_id}/banking/dict/holders/{holder_id}/accounts/{account_id}/entries/{entry_id}\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/entryID\"\n      summary: Listar vínculos com chaves de endereçamento\n      tags:\n        - Dict\n      responses:\n        '200':\n          description: OK - Vinculo com a chave de endereçamento encontrado\n        \n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                        \"status\": \"bad_request\",\n                        \"type\": \"invalid_request\",\n                        \"code\": 2000,\n                        \"message\": \"Validation field error\",\n                        \"category\": \"business\",\n                        \"status_code\": 400,\n                        \"fields\": {\n                            \"account_id\": {\"code\":1000, \"message\":\"Account Id is required\"},\n                            \"key.type\": {\"code\":1001, \"message\":\"Key type is required\"}\n                        }\n                    }\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                        \"status\": \"not_found\",\n                        \"type\": \"not_found\",\n                        \"code\": 3000, \n                        \"message\": \"Marketplace not found\",\n                        \"category\": \"business\",\n                        \"status_code\": 404\n                    }\n        '500':\n          description: ISE\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                        \"status\": \"internal_server_error\",\n                        \"type\": \"server_error\",\n                        \"code\": 9999,\n                        \"message\": \"Internal Server Error\",\n                        \"category\": \"unexpected\",\n                        \"status_code\": 500\n                    }\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/entryID\"\n        - $ref: \"#/components/parameters/XAuthTokenReading\"\n        - $ref: \"#/components/parameters/XSessionToken\"\n      summary: Alterar vínculo da chave de endereçamento\n      tags:\n        - Dict\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                code: \n                  type: string\n                  description: Código de verificação de propriedade enviado para o usuário de acordo com o tipo de chave escolhido. Campo alfanumérico de 4 caracteres.\n                  example: 4040\n                  required:\n                    - \"code\"\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/DictKeyResponse400'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse404'\n        '412':\n          description: Precondition Failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse412'\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/entryID\"\n        - $ref: \"#/components/parameters/XAuthTokenReading\"\n        - $ref: \"#/components/parameters/XSessionToken\"\n      summary: Excluir vínculo com chave de endereçamento\n      tags:\n        - Dict\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message: \n                    type: string\n                    example: Entry removed successfully\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message: \n                    type: string\n                    example: Entry removal scheduled successfully\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/DictKeyResponse400'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse404'\n        '412':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse412'\n\n  \"/v3/marketplaces/{marketplace_id}/banking/dict/holders/{holder_id}/accounts/{account_id}/claims\":\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/XAuthTokenReading\"\n        - $ref: \"#/components/parameters/XSessionToken\"\n      summary: Criar reivindicação\n      tags:\n        - Reivindicação/Portabilidade\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n               $ref: '#/components/schemas/ClaimRequest'\n      responses:\n        '200':\n          description: OK - A chave de endereçamento foi incluída com sucesso e está pronta para o uso\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClaimResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/DictKeyResponse400'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse404'\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/offsetID\"\n        - $ref: \"#/components/parameters/sizeID\"\n      summary: Listar reivindicações\n      tags:\n        - Reivindicação/Portabilidade\n      responses:\n        '200':\n          description: OK - A chave de endereçamento foi incluída com sucesso e está pronta para o uso\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ClaimResponse'\n                  has_more: \n                    type: boolean\n                    example: false\n                  limit: \n                    type: integer\n                    example: 1\n                  total_pages: \n                    type: integer\n                    example: 1\n                  page: \n                    type: integer\n                    example: 1\n                  offset: \n                    type: integer\n                    example: 1\n                  total: \n                    type: integer\n                    example: 1\n                  query_count: \n                    type: integer\n                    example: 1\n                  \n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/DictKeyResponse400'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse404'\n  \"/v3/marketplaces/{marketplace_id}/banking/dict/holders/{holder_id}/accounts/{account_id}/claims/{claim_id}\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/claimID\"\n      summary: Buscar reivindicação\n      tags:\n        - Reivindicação/Portabilidade\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClaimResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/DictKeyResponse400'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse404'\n  \"/v3/marketplaces/{marketplace_id}/banking/dict/holders/{holder_id}/accounts/{account_id}/claims/{claim_id}/cancel\":\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/claimID\"\n        - $ref: \"#/components/parameters/XAuthTokenReading\"\n        - $ref: \"#/components/parameters/XSessionToken\"\n      summary: Cancelar reivindicação\n      tags:\n        - Reivindicação/Portabilidade\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message: \n                    type: string\n                    example: \"Claim cancelled successfully\"\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/DictKeyResponse400'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse404'\n  \"/v3/marketplaces/{marketplace_id}/banking/dict/holders/{holder_id}/accounts/{account_id}/claims/{claim_id}/confirm\":\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/claimID\"\n        - $ref: \"#/components/parameters/XAuthTokenReading\"\n        - $ref: \"#/components/parameters/XSessionToken\"\n      summary: Confirmar reivindicação\n      tags:\n        - Reivindicação/Portabilidade\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message: \n                    type: string\n                    example: \"Claim confirmed successfully\"\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/DictKeyResponse400'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse404'\n  \"/v3/marketplaces/{marketplace_id}/banking/dict/holders/{holder_id}/accounts/{account_id}/entries/{entry_id}/claims/\":\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/entryID\"\n        - $ref: \"#/components/parameters/XAuthTokenReading\"\n        - $ref: \"#/components/parameters/XSessionToken\"\n      summary: Criar reivindicação a partir de uma entry\n      tags:\n        - Reivindicação/Portabilidade\n      responses:\n        '201':\n          description: Created - Reivindicação criada com sucesso.\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/DictKeyResponse400'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse404'\n        '412':\n          description: Precondition Failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyResponse412'\n\n  \n  \"/v3/marketplaces/{marketplace_id}/banking/pix/holders/{holder_id}/accounts/{account_id}/payments/dict:\": \n    parameters:\n      - $ref: \"#/components/parameters/marketplaceID\"\n      - $ref: \"#/components/parameters/holderID\"\n      - $ref: \"#/components/parameters/accountID\"\n      - $ref: \"#/components/parameters/XAuthTokenReading\"\n      - $ref: \"#/components/parameters/XSessionToken\"\n    post:\n      summary: Criar pagamento de debito Pix com chave DICT\n      tags:\n        - Pagamentos\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n               anyOf:\n                - $ref: '#/components/schemas/DictKeyInitializationRequest'\n    \n      responses:\n        '200':\n          description: O pagamento com chave DICT foi inicializado com sucesso\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyPaymentInitializationResponse'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/DictKeyPaymentInitializationResponse'\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictKeyPaymentInitializationResponse'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/DictKeyPaymentInitializationResponse'\n        '400':\n          description: A requisição contém dados inválidos de alguma natureza\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"bad_request\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 2000,\n                            \"message\": \"Validation field error\",\n                            \"category\": \"business\",\n                            \"status_code\": 400,\n                            \"fields\": {\n                                \"account_id\": {\"code\":1000, \"message\":\"Account Id is required\"},\n                                \"key.type\": {\"code\":1001, \"message\":\"Key type is required\"}\n                            }\n                        }\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Indica que algum recurso não foi encontrado\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"not_found\",\n                            \"type\": \"not_found\",\n                            \"code\": 3000, \n                            \"message\": \"Marketplace not found\",\n                            \"category\": \"business\",\n                            \"status_code\": 404\n                        }\n        '412':\n          description: Indica que algum pré-requisito de estado do sistema não foi atendido\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"precondition_failed\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 4000,\n                            \"message\": \"Account was canceled\",\n                            \"category\": \"business\",\n                            \"status_code\": 412\n                        }\n        '500':\n          description: Indica que a requisição acarretou em algum problema interno no servidor\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"internal_server_error\",\n                            \"type\": \"server_error\",\n                            \"code\": 9999,\n                            \"message\": \"Internal Server Error\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 500\n                        }\n        '503':\n          description: Indica que o serviço alvo está indisponível no momento\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"service_unavailable\",\n                            \"type\": \"service_unavailable\",\n                            \"code\": 9998,\n                            \"message\": \"Service Unavailable\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 503\n                        }            \n  \"/v3/marketplaces/{marketplace_id}/banking/pix/holders/{holder_id}/accounts/{account_id}/payments/init\":\n    parameters:\n      - $ref: \"#/components/parameters/marketplaceID\"\n      - $ref: \"#/components/parameters/holderID\"\n      - $ref: \"#/components/parameters/accountID\"\n      - $ref: \"#/components/parameters/XAuthTokenReading\"\n      - $ref: \"#/components/parameters/XSessionToken\"\n    post:\n      summary: Criar pagamento de debito Pix\n      tags:\n        - Pagamentos\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/PaymentInitializationRequest'\n                \n      responses:\n       '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentInitializationResponse'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/PaymentInitializationResponse'\n       '202':\n          description: O pagamento foi inicializado com sucesso\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentInitializationResponse'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/PaymentInitializationResponse'\n       '400':\n          description: A requisição contém dados inválidos de alguma natureza\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"bad_request\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 2000,\n                            \"message\": \"Validation field error\",\n                            \"category\": \"business\",\n                            \"status_code\": 400,\n                            \"fields\": {\n                                \"account_id\": {\"code\":1000, \"message\":\"Account Id is required\"},\n                                \"key.type\": {\"code\":1001, \"message\":\"Key type is required\"}\n                            }\n                        }\n       '401':\n          description: Unauthorized\n       '403':\n          description: Forbidden\n       '404':\n          description: Indica que algum recurso não foi encontrado\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"not_found\",\n                            \"type\": \"not_found\",\n                            \"code\": 3000, \n                            \"message\": \"Marketplace not found\",\n                            \"category\": \"business\",\n                            \"status_code\": 404\n                        }\n       '412':\n          description: Indica que algum pré-requisito de estado do sistema não foi atendido\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"precondition_failed\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 4000,\n                            \"message\": \"Account was canceled\",\n                            \"category\": \"business\",\n                            \"status_code\": 412\n                        }\n       '500':\n          description: Indica que a requisição acarretou em algum problema interno no servidor\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"internal_server_error\",\n                            \"type\": \"server_error\",\n                            \"code\": 9999,\n                            \"message\": \"Internal Server Error\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 500\n                        }\n       '503':\n          description: Indica que o serviço alvo está indisponível no momento\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"service_unavailable\",\n                            \"type\": \"service_unavailable\",\n                            \"code\": 9998,\n                            \"message\": \"Service Unavailable\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 503\n                        }\n                        \n  \"/v3/marketplaces/{marketplace_id}/banking/pix/holders/{holder_id}/accounts/{account_id}/payments/{payment_id}/create\":\n    parameters:\n      - $ref: \"#/components/parameters/marketplaceID\"\n      - $ref: \"#/components/parameters/holderID\"\n      - $ref: \"#/components/parameters/accountID\"\n      - $ref: \"#/components/parameters/paymentID\"      \n      - $ref: \"#/components/parameters/XAuthTokenReading\"\n      - $ref: \"#/components/parameters/XSessionToken\"\n    post:\n      summary: Criar pagamento de Pix pelo Id do Pagamento \n      tags:\n        - Pagamentos\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n               $ref: '#/components/schemas/InitializedPaymentCreationRequest'\n                \n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentCreationResponse'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/PaymentCreationResponse'\n        '202':\n          description: O pagamento foi criado com sucesso\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentCreationResponse'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/PaymentCreationResponse'\n        '400':\n          description: A requisição contém dados inválidos de alguma natureza\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"bad_request\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 2000,\n                            \"message\": \"Validation field error\",\n                            \"category\": \"business\",\n                            \"status_code\": 400,\n                            \"fields\": {\n                                \"account_id\": {\"code\":1000, \"message\":\"Account Id is required\"},\n                                \"key.type\": {\"code\":1001, \"message\":\"Key type is required\"}\n                            }\n                        }\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Indica que algum recurso não foi encontrado\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"not_found\",\n                            \"type\": \"not_found\",\n                            \"code\": 3000, \n                            \"message\": \"Marketplace not found\",\n                            \"category\": \"business\",\n                            \"status_code\": 404\n                        }\n        '412':\n          description: Indica que algum pré-requisito de estado do sistema não foi atendido\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"precondition_failed\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 4000,\n                            \"message\": \"Account was canceled\",\n                            \"category\": \"business\",\n                            \"status_code\": 412\n                        }\n        '500':\n          description: Indica que a requisição acarretou em algum problema interno no servidor\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"internal_server_error\",\n                            \"type\": \"server_error\",\n                            \"code\": 9999,\n                            \"message\": \"Internal Server Error\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 500\n                        }\n        '503':\n          description: Indica que o serviço alvo está indisponível no momento\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"service_unavailable\",\n                            \"type\": \"service_unavailable\",\n                            \"code\": 9998,\n                            \"message\": \"Service Unavailable\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 503\n                        }\n  \"/v3/marketplaces/{marketplace_id}/banking/pix/holders/{holder_id}/accounts/{account_id}/payments/{payment_id}/confirm\":\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/paymentID\"\n        - $ref: \"#/components/parameters/XAuthTokenReading\"\n        - $ref: \"#/components/parameters/XSessionToken\"\n      summary: Confirmar pagamento Pix \n      tags:\n        - Pagamentos\n      responses:\n        '201':\n          description: Created\n        '202':\n          description: Transação executada com sucesso. Aguardando liquidação financeira no BACEN.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentConfirmationResponse'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/PaymentConfirmationResponse'\n        '400':\n          description: A requisição contém dados inválidos de alguma natureza\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"bad_request\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 2000,\n                            \"message\": \"Validation field error\",\n                            \"category\": \"business\",\n                            \"status_code\": 400,\n                            \"fields\": {\n                                \"account_id\": {\"code\":1000, \"message\":\"Account Id is required\"},\n                                \"key.type\": {\"code\":1001, \"message\":\"Key type is required\"}\n                            }\n                        }\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Indica que algum recurso não foi encontrado\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"not_found\",\n                            \"type\": \"not_found\",\n                            \"code\": 3000, \n                            \"message\": \"Marketplace not found\",\n                            \"category\": \"business\",\n                            \"status_code\": 404\n                        }\n        '412':\n          description: Indica que algum pré-requisito de estado do sistema não foi atendido\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"precondition_failed\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 4000,\n                            \"message\": \"Account was canceled\",\n                            \"category\": \"business\",\n                            \"status_code\": 412\n                        }\n        '500':\n          description: Indica que a requisição acarretou em algum problema interno no servidor\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"internal_server_error\",\n                            \"type\": \"server_error\",\n                            \"code\": 9999,\n                            \"message\": \"Internal Server Error\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 500\n                        }\n        '503':\n          description: Indica que o serviço alvo está indisponível no momento\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"service_unavailable\",\n                            \"type\": \"service_unavailable\",\n                            \"code\": 9998,\n                            \"message\": \"Service Unavailable\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 503\n                        }\n  \"/v3/marketplaces/{marketplace_id}/banking/pix/holders/{holder_id}/accounts/{account_id}/payments/{payment_id}/cancel\":\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/paymentID\"\n        - $ref: \"#/components/parameters/XAuthTokenReading\"\n        - $ref: \"#/components/parameters/XSessionToken\"\n      summary: Cancelar pagamento Pix \n      tags:\n        - Pagamentos\n      responses:\n        '200':\n          description: Transação cancelada com sucesso.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentCancellationResponse'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/PaymentCancellationResponse'\n        '201':\n          description: Created\n        '400':\n          description: A requisição contém dados inválidos de alguma natureza\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"bad_request\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 2000,\n                            \"message\": \"Validation field error\",\n                            \"category\": \"business\",\n                            \"status_code\": 400,\n                            \"fields\": {\n                                \"account_id\": {\"code\":1000, \"message\":\"Account Id is required\"},\n                                \"key.type\": {\"code\":1001, \"message\":\"Key type is required\"}\n                            }\n                        }\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Indica que algum recurso não foi encontrado\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"not_found\",\n                            \"type\": \"not_found\",\n                            \"code\": 3000, \n                            \"message\": \"Marketplace not found\",\n                            \"category\": \"business\",\n                            \"status_code\": 404\n                        }\n        '412':\n          description: Indica que algum pré-requisito de estado do sistema não foi atendido\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"precondition_failed\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 4000,\n                            \"message\": \"Account was canceled\",\n                            \"category\": \"business\",\n                            \"status_code\": 412\n                        }\n        '500':\n          description: Indica que a requisição acarretou em algum problema interno no servidor\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"internal_server_error\",\n                            \"type\": \"server_error\",\n                            \"code\": 9999,\n                            \"message\": \"Internal Server Error\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 500\n                        }\n        '503':\n          description: Indica que o serviço alvo está indisponível no momento\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"service_unavailable\",\n                            \"type\": \"service_unavailable\",\n                            \"code\": 9998,\n                            \"message\": \"Service Unavailable\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 503\n                        }                    \n  \"/v3/marketplaces/{marketplace_id}/banking/pix/holders/{holder_id}/accounts/{account_id}/payments/{payment_id}/refunds\":\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/paymentID\"\n        - $ref: \"#/components/parameters/XAuthTokenReading\"\n        - $ref: \"#/components/parameters/XSessionToken\"\n      summary: Devolver pagamento Pix \n      tags:\n        - Pagamentos\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/RefundRequest'\n      responses:\n        '201':\n          description: A devolução foi criada com sucesso\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RefundResponse'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RefundResponse'\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RefundResponse'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RefundResponse'\n        '400':\n          description: A requisição contém dados inválidos de alguma natureza\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"bad_request\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 2000,\n                            \"message\": \"Validation field error\",\n                            \"category\": \"business\",\n                            \"status_code\": 400,\n                            \"fields\": {\n                                \"account_id\": {\"code\":1000, \"message\":\"Account Id is required\"},\n                                \"key.type\": {\"code\":1001, \"message\":\"Key type is required\"}\n                            }\n                        }\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Indica que algum recurso não foi encontrado\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"not_found\",\n                            \"type\": \"not_found\",\n                            \"code\": 3000, \n                            \"message\": \"Marketplace not found\",\n                            \"category\": \"business\",\n                            \"status_code\": 404\n                        }\n        '412':\n          description: Indica que algum pré-requisito de estado do sistema não foi atendido\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"precondition_failed\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 4000,\n                            \"message\": \"Account was canceled\",\n                            \"category\": \"business\",\n                            \"status_code\": 412\n                        }\n        '500':\n          description: Indica que a requisição acarretou em algum problema interno no servidor\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"internal_server_error\",\n                            \"type\": \"server_error\",\n                            \"code\": 9999,\n                            \"message\": \"Internal Server Error\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 500\n                        }\n        '503':\n          description: Indica que o serviço alvo está indisponível no momento\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"service_unavailable\",\n                            \"type\": \"service_unavailable\",\n                            \"code\": 9998,\n                            \"message\": \"Service Unavailable\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 503\n                        }\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/paymentID\"\n        - $ref: \"#/components/parameters/pageID\"\n        - $ref: \"#/components/parameters/sizeID\"\n      summary: Listar devoluções Pix \n      tags:\n        - Pagamentos\n      responses:\n        '200':\n          description: Consulta executada com sucesso\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RefundResponse'\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RefundResponse'\n        '400':\n          description: A requisição contém dados inválidos de alguma natureza\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"bad_request\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 2000,\n                            \"message\": \"Validation field error\",\n                            \"category\": \"business\",\n                            \"status_code\": 400,\n                            \"fields\": {\n                                \"account_id\": {\"code\":1000, \"message\":\"Account Id is required\"},\n                                \"key.type\": {\"code\":1001, \"message\":\"Key type is required\"}\n                            }\n                        }\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Indica que algum recurso não foi encontrado\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"not_found\",\n                            \"type\": \"not_found\",\n                            \"code\": 3000, \n                            \"message\": \"Marketplace not found\",\n                            \"category\": \"business\",\n                            \"status_code\": 404\n                        }\n        '412':\n          description: Indica que algum pré-requisito de estado do sistema não foi atendido\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"precondition_failed\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 4000,\n                            \"message\": \"Account was canceled\",\n                            \"category\": \"business\",\n                            \"status_code\": 412\n                        }\n        '500':\n          description: Indica que a requisição acarretou em algum problema interno no servidor\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"internal_server_error\",\n                            \"type\": \"server_error\",\n                            \"code\": 9999,\n                            \"message\": \"Internal Server Error\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 500\n                        }\n        '503':\n          description: Indica que o serviço alvo está indisponível no momento\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"service_unavailable\",\n                            \"type\": \"service_unavailable\",\n                            \"code\": 9998,\n                            \"message\": \"Service Unavailable\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 503\n                        }                       \n  \"/v3/marketplaces/{marketplace_id}/banking/pix/holders/{holder_id}/accounts/{account_id}/payments/{payment_id}\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/paymentID\"\n        - $ref: \"#/components/parameters/pageID\"\n        - $ref: \"#/components/parameters/sizeID\"\n        - $ref: \"#/components/parameters/XAuthTokenReading\"\n        - $ref: \"#/components/parameters/XSessionToken\"\n      summary: Consultar pagamento Pix \n      tags:\n        - Pagamentos\n      responses:\n        '200':\n          description: Consulta executada com sucesso\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentCreationResponse'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/PaymentCreationResponse'\n        '400':\n          description: A requisição contém dados inválidos de alguma natureza\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"bad_request\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 2000,\n                            \"message\": \"Validation field error\",\n                            \"category\": \"business\",\n                            \"status_code\": 400,\n                            \"fields\": {\n                                \"account_id\": {\"code\":1000, \"message\":\"Account Id is required\"},\n                                \"key.type\": {\"code\":1001, \"message\":\"Key type is required\"}\n                            }\n                        }\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Indica que algum recurso não foi encontrado\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"not_found\",\n                            \"type\": \"not_found\",\n                            \"code\": 3000, \n                            \"message\": \"Marketplace not found\",\n                            \"category\": \"business\",\n                            \"status_code\": 404\n                        }\n        '412':\n          description: Indica que algum pré-requisito de estado do sistema não foi atendido\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"precondition_failed\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 4000,\n                            \"message\": \"Account was canceled\",\n                            \"category\": \"business\",\n                            \"status_code\": 412\n                        }\n        '500':\n          description: Indica que a requisição acarretou em algum problema interno no servidor\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"internal_server_error\",\n                            \"type\": \"server_error\",\n                            \"code\": 9999,\n                            \"message\": \"Internal Server Error\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 500\n                        }\n        '503':\n          description: Indica que o serviço alvo está indisponível no momento\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"service_unavailable\",\n                            \"type\": \"service_unavailable\",\n                            \"code\": 9998,\n                            \"message\": \"Service Unavailable\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 503\n                        }\n  \"/v3/marketplaces/{marketplace_id}/banking/pix/holders/{holder_id}/accounts/{account_id}/payments/scheduled\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/start_date\"\n        - $ref: \"#/components/parameters/end_date\"        \n        - $ref: \"#/components/parameters/pageID\"\n        - $ref: \"#/components/parameters/sizeID\"\n        - $ref: \"#/components/parameters/XAuthTokenReading\"\n        - $ref: \"#/components/parameters/XSessionToken\"\n      summary: Consultar pagamentos agendados Pix \n      tags:\n        - Pagamentos\n      responses:\n        '200':\n          description: Consulta executada com sucesso\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PaymentCreationResponse'\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PaymentCreationResponse'\n        '400':\n          description: A requisição contém dados inválidos de alguma natureza\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"bad_request\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 2000,\n                            \"message\": \"Validation field error\",\n                            \"category\": \"business\",\n                            \"status_code\": 400,\n                            \"fields\": {\n                                \"account_id\": {\"code\":1000, \"message\":\"Account Id is required\"},\n                                \"key.type\": {\"code\":1001, \"message\":\"Key type is required\"}\n                            }\n                        }\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Indica que algum recurso não foi encontrado\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"not_found\",\n                            \"type\": \"not_found\",\n                            \"code\": 3000, \n                            \"message\": \"Marketplace not found\",\n                            \"category\": \"business\",\n                            \"status_code\": 404\n                        }\n        '412':\n          description: Indica que algum pré-requisito de estado do sistema não foi atendido\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"precondition_failed\",\n                            \"type\": \"invalid_request\",\n                            \"code\": 4000,\n                            \"message\": \"Account was canceled\",\n                            \"category\": \"business\",\n                            \"status_code\": 412\n                        }\n        '500':\n          description: Indica que a requisição acarretou em algum problema interno no servidor\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"internal_server_error\",\n                            \"type\": \"server_error\",\n                            \"code\": 9999,\n                            \"message\": \"Internal Server Error\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 500\n                        }\n        '503':\n          description: Indica que o serviço alvo está indisponível no momento\n          content:\n            application/json:\n              examples:\n                example-0:\n                  value: |-\n                    {\n                            \"status\": \"service_unavailable\",\n                            \"type\": \"service_unavailable\",\n                            \"code\": 9998,\n                            \"message\": \"Service Unavailable\",\n                            \"category\": \"unexpected\",\n                            \"status_code\": 503\n                        }\n  \"/v3/marketplaces/{marketplace_id}/banking/pix/holders/{holder_id}/accounts/{account_id}/payments/{payment_id}/refunds/{refund_id}\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/marketplaceID\"\n        - $ref: \"#/components/parameters/holderID\"\n        - $ref: \"#/components/parameters/accountID\"\n        - $ref: \"#/components/parameters/paymentID\"\n        - $ref: \"#/components/parameters/refundID\"\n        - $ref: \"#/components/parameters/pageID\"\n        - $ref: \"#/components/parameters/sizeID\"\n        - $ref: \"#/components/parameters/XAuthTokenReading\"\n        - $ref: \"#/components/parameters/XSessionToken\"\n      summary: Consultar devolução Pix \n      tags:\n        - Pagamentos\n      responses:\n        '200':\n          description: OK \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/pixRefundResponse'\n \ncomponents:\n  securitySchemes:\n     basicAuth:\n       type: http \n       scheme: basic \n  parameters:\n      accountID:\n        name: account_id\n        in: path\n        description: ID da conta digital \n        required: true\n        schema:\n          type: string\n      adressID:\n        name: address_id\n        in: path\n        description: ID do endereço\n        required: true\n        schema:\n          type: string    \n      barcodeID:\n        name: barcode\n        in: path\n        description: Identificacao do barcode\n        required: true\n        schema:\n          type: string\n      claimID:\n        name: claim_id\n        in: path\n        description: Id da chave de endereçamento\n        required: true\n        schema:\n          type: number\n          example: 0\n      created_date_rangeGTID:\n        name: created_date_range[gt]\n        in: query\n        description: Retorna lançamentos onde a data for maior o valor informado\n        schema:\n          type: string\n          example: \"2020-10-01 15:34:00\"\n      created_date_rangeLTID:\n        name: created_date_range[lt]\n        in: query\n        description: Retorna lançamentos onde a data for menor o valor informado\n        schema:\n          type: string\n          example: \"2020-10-01 15:34:00\"\n      created_date_rangeGTEID:\n        name: created_date_range[gte]\n        in: query\n        description: Retorna lançamentos onde a data for maior ou igual o valor informado\n        schema:\n          type: string\n          example: \"2020-10-01 15:34:00\"\n      created_date_rangeLTEID:\n        name: created_date_range[lte]\n        in: query\n        description: Retorna lançamentos onde a data for menor ou igual valor informado\n        schema:\n          type: string\n          example: \"2020-10-01 15:34:00\"\n      documentID:\n        name: documents_id\n        in: path\n        description: ID do documento\n        required: true\n        schema:\n          type: string\n      externalTransferID:\n        name: externalTransfer_id\n        in: path\n        description: Id gerado da transferência quando bem sucedida\n        required: true\n        schema:\n          type: string\n      entryID:\n        name: entry_id\n        in: path\n        description: Id da reivindicação\n        required: true\n        schema:\n          type: number\n          example: 0\n      end_date:\n        name: data fim\n        in: query\n        description: Indica o inicio do período\n        required: true        \n        schema:\n          type: string\n          example: \"2020-10-01 15:34:00\"\n      holderID:\n        name: holder_id\n        in: path\n        description: ID do holder\n        required: true\n        schema:\n          type: string\n      keyvalueID:\n        name: key_value\n        in: path\n        description: Valor da chave PIX\n        required: true\n        schema:\n          type: string\n      limitID:\n        name: limit\n        in: query\n        description: Quantidade máxima de itens por página (\u003c100)\n        schema:\n          type: number\n          example: 0\n      marketplaceID:\n        name: marketplace_id\n        in: path\n        description: ID do marketplace\n        required: true\n        schema:\n          type: string\n      offsetID:\n        name: offset\n        in: query\n        description: Determina o ponto de inicio dos registros retornados\n        schema:\n          type: number\n          example: 0\n      paymentID:\n        name: payment_id\n        in: path\n        description: Id do pagamento que será confirmado \n        required: true\n        schema:\n          type: string\n      p2p_transferID:\n        name: p2p_transfer_id\n        in: path\n        description: ID da transferência entre contas \n        required: true\n        schema:\n          type: string\n      phoneID:\n        name: phone_id\n        in: path\n        description: ID do telefone \n        required: true\n        schema:\n          type: string\n      pageID:\n        name: page_id\n        in: query\n        description: indica a página que será exibida\n        schema:\n          type: number\n          example: 0    \n      referenceID:\n        name: reference_id\n        in: path\n        description: Id de referencia informado na solicitação da TED\n        required: true\n        schema:\n          type: string\n      transactionID:\n        name: transaction_id\n        in: path\n        description: Representa o id da transação PIX de crédito que sofrerá a devolução \n        required: true\n        schema:\n          type: string\n      refundID:\n        name: refund_id\n        in: path\n        description: Id da devolução \n        required: true\n        schema:\n          type: string\n      sizeID:\n        name: size_id\n        in: query\n        description: Quantidade de registros a ser retornado por página\n        schema:\n          type: number\n          example: 20\n      start_date:\n        name: data de início\n        in: query\n        description: Indica o inicio do período \n        required: true        \n        schema:\n          type: string\n          example: \"2020-10-01 15:34:00\"\n      type:\n        name: type_id\n        in: query\n        description: Tipo do arquivo a ser enviado\n        required: true\n        schema:\n          type: string\n          enum:\n            - SELFIE\n            - RG_FRENTE\n            - RG_VERSO\n            - CNH_FRENTE\n            - CNH-VERSO\n            - CCMEI\n            - PAGINA_CONTRATO_SOCIAL\n            - PAGINA_ESTATUTO_SOCIAL\n            - PAGINA_ATA_ELEICAO_DIRETORES\n            - PAGINA_PROCURACAO\n      typeOpID:\n        name: type\n        in: query\n        description: \"Retorna lançamentos onde o tipo da operação seja igual a um dos valores informado. O valor pode ser uma string ou uma lista de valores concatenados por ', '. (ex: charge, charge_refunded, transfer, transfer_refunded, deposit, deposit_refunded, adjustment)\"\n        required: true\n        schema:\n          type: string\n          enum:\n            - charge\n            - charge_refunded\n            - transfer\n            - transfer_refunded\n            - deposit\n            - deposit_refunded\n            - adjustment\n      XAuthTokenReading:\n        name: X-Auth-Token-Reading\n        in: header\n        description: Token de leitura do 2FA\n        required: true\n        schema:\n          type: string\n      XSessionToken:\n        name: X-Session-Token\n        in: header\n        description: Token de sessão do 2FA\n        required: true\n        schema:\n          type: string\n  schemas:\n    AccountRequest:\n      title: AccountRequest\n      type: object\n      properties:\n        number:\n          type: string\n          description: Número de indetificação da conta no psp informado.\n          example: '600000'\n        routing_number:\n          type: string\n          description: Código da agência dentro do psp informado onde a conta recebedora fora criada.\n          example: '3000'\n        type:\n          type: string\n          description: ' Tipo da conta .'\n          example: cacc\n          enum:\n            - CACC\n            - SLRY\n            - SVGS\n            - TRAN\n    AccountResponse:\n      title: AccountResponse\n      type: object\n      properties:\n        holder:\n          type: object\n          description: Identificador único do holder\n          example: d83a1a81caa243d2a10bc414ae406bd3\n        id:\n          type: object\n          description: Identificador único da conta digital\n          example: cf27477574e04d4584ac75ef6ca5ec3f\n        marketplace:\n          type: object\n          description: Identificador único do marketplace\n          example: 6c237bf9932840ccada92ac629a05d39\n        number:\n          type: string\n          description: Número da conta\n          example: '456123'\n        owner:\n          description: Descritor do proprietário da conta\n          $ref: '#/components/schemas/OwnerResponse'\n        routing_number:\n          type: string\n          description: Agência da conta\n          example: '001'\n        type:\n          type: string\n          description: Tipo da conta\n          example: cacc\n          enum:\n            - CACC\n            - SLRY\n            - SVGS\n            - TRAN        \n    BankingPspResponse:\n      title: BankingPspResponse\n      required:\n        - code\n      type: object\n      properties:\n        code:\n          type: string\n          description: Código da instituição participante do PIX\n          example: '19468242'\n        name:\n          type: string\n          description: Nome da instituição\n          example: Zoop        \n    BankingAccountResponse:\n      title: BankingAccountResponse\n      required:\n        - number\n        - psp\n        - routing_number\n        - type\n      type: object\n      properties:\n        digital_account_id:\n          type: string\n          description: Identificador único da conta digital na Zoop\n          format: uuid\n        number:\n          type: string\n          description: Número da conta bancária\n          example: '9978856382'\n        psp:\n          description: Instituição participante do PIX\n          $ref: '#/components/schemas/BankingPspResponse'\n        routing_number:\n          type: string\n          description: Número da agência\n          example: '001'\n        type:\n          type: string\n          description: Tipo da conta bancária\n          example: cacc\n          enum:\n            - CACC\n            - SLRY\n            - SVGS\n            - TRAN\n    BankingLocationResponse:\n      title: BankingLocationResponse\n      required:\n        - address\n        - city\n        - state\n        - zip_code\n      type: object\n      properties:\n        address:\n          type: string\n          description: Endereço do holder\n          example: Avenida das Américas, 700, Bloco 05, Sala 101, Barra da Tijuca\n        city:\n          type: string\n          description: Cidade do endereço do holder\n          example: Rio de Janeiro\n        state:\n          type: string\n          description: Estado da cidade do holder\n          example: RJ\n        zip_code:\n          type: string\n          description: Código postal (CEP) do endereço do holder\n          example: '22640100'        \n    BankingIdentifierResponse:\n      title: BankingIdentifierResponse\n      required:\n        - account\n        - name\n        - national_registration\n        - type\n      type: object\n      properties:\n        account:\n          description: Conta bancária do holder\n          $ref: '#/components/schemas/BankingAccountResponse'\n        holder_id:\n          type: string\n          description: Identificador único do holder na Zoop\n          format: uuid\n        key:\n          description: Chave de endereçamento de uma conta bancária PIX\n          $ref: '#/components/schemas/KeyResponse'\n        location:\n          description: Localização do holder\n          $ref: '#/components/schemas/BankingLocationResponse'\n        name:\n          type: string\n          description: Nome do holder\n          example: José das Coves\n        national_registration:\n          type: string\n          description: Documento de identificacao do holder\n          example: '38192246027'\n        type:\n          type: string\n          description: Tipo de pessoa do holder (INDIVIDUAL ou BUSINESS)\n          example: INDIVIDUAL\n          enum:\n            - BUSINESS\n            - INDIVIDUAL        \n    BillingAdditionalInfoResponse:\n      title: BillingAdditionalInfoResponse\n      required:\n        - name\n        - value\n      type: object\n      properties:\n        name:\n          type: string\n          description: Nome da informação adicinoal\n          example: Produto\n        value:\n          type: string\n          description: Valor da informação adicional\n          example: Bola de Futebol\n    BillingAmountsResponse:\n      title: BillingAmountsResponse\n      type: object\n      properties:\n        discount:\n          type: integer\n          description: Desconto (apenas em cobranças com vencimento)\n          format: int64\n          example: 0\n        fine:\n          type: integer\n          description: Multa (apenas em cobranças com vencimento)\n          format: int64\n          example: 0\n        interest:\n          type: integer\n          description: Juros (apenas em cobranças com vencimento)\n          format: int64\n          example: 0\n        original:\n          type: integer\n          description: Valor original\n          format: int64\n          example: 10000\n        reduction:\n          type: integer\n          description: Abatimento (apenas em cobranças com vencimento)\n          format: int64\n          example: 0\n    BillingCalendarResponse:\n      title: BillingCalendarResponse\n      required:\n        - expires_at\n        - registered_at\n      type: object\n      properties:\n        due_date:\n          type: object\n          description: Data de vencimento da cobrança (apenas em cobranças com vencimento)\n          example: '2020-11-25'\n        expires_at:\n          type: object\n          description: Data/hora limite de expiração da cobrança\n          example: '2020-11-30T23:59:59.999Z'\n        overdue:\n          type: boolean\n          description: Indica se a cobrança está vencida (apenas em cobranças com vencimento)\n          example: true\n        registered_at:\n          type: object\n          description: Data/hora de registro da cobrança\n          example: '2020-11-20T16:15:10.100Z'\n    BillingDebtorResponse:\n      title: BillingDebtorResponse\n      required:\n        - name\n        - national_registration\n        - type\n      type: object\n      properties:\n        name:\n          type: string\n          description: Nome do devedor\n          example: Maria Flor\n        national_registration:\n          type: string\n          description: Documento de identificacao do devedor\n          example: '99267474006'\n        type:\n          type: string\n          description: Tipo de pessoa do devedor (Física ou Jurídica)\n          example: INDIVIDUAL\n          enum:\n            - BUSINESS\n            - INDIVIDUAL\n    BillingResponse:\n      title: BillingResponse\n      required:\n        - calendar\n        - type\n      type: object\n      properties:\n        additional_infos:\n          type: array\n          description: Informações adicionais da cobranca\n          items:\n            $ref: '#/components/schemas/BillingAdditionalInfoResponse'\n        amounts:\n          description: Valores da cobranca (apenas em cobranças com vencimento)\n          $ref: '#/components/schemas/BillingAmountsResponse'\n        calendar:\n          description: Calendário de datas da cobranca\n          $ref: '#/components/schemas/BillingCalendarResponse'\n        debtor:\n          description: O devedor da cobrança. Obrigatório apenas em cobranças com vencimento\n          $ref: '#/components/schemas/BillingDebtorResponse'\n        type:\n          type: string\n          description: Tipo da cobranca (imediata ou com vencimento)\n          example: instant\n          enum:\n            - INSTANT\n            - OVERDUE        \n    ClaimRequest:\n      type: object\n      properties:\n        claim_type:\n          type: string\n          description: Utilize ownership para reinvindicar uma chave e portability para realizar a portabilidade de chave. \n          enum:\n           - ownership \n           - portability\n        key:\n          type: object\n          properties:\n            type:\n              type: string\n              description: \"Indica o tipo de chave de endereçamento. Os tipos de chave são: phone, email, evp e national_registration.\"\n              enum:\n              - email\n              - phone \n              - evp \n              - national_registration\n            value:\n              type: string\n              description: \"Indica o valor da chave de endereçamento\"\n              example: \"fulano@gmail.com\"\n    ClaimResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: \"76d1f0c3772f45899b3025481a79967d\"\n        marketplace_id:\n          type: string\n          example: \"6c237bf9932840ccada92ac629a05d39\"\n        created_at:\n          type: string\n          example: \"2020-11-06T12:54:11.336975\"\n        updated_at:\n          type: string\n          example: \"2020-11-06T12:54:11.336975\"\n        type:\n          type: string\n          example: \"ownership\"\n        status:\n          type: string\n          example: \"open\"\n        key:\n          type: object\n          properties:\n            type:\n              type: string\n              description: \"Indica o tipo de chave de endereçamento. Os tipos de chave são: phone, email, evp e national_registration.\"\n              enum:\n              - email\n              - phone \n              - evp \n              - national_registration\n            value:\n              type: string\n              description: \"Indica o valor da chave de endereçamento\"\n              example: \"fulano@gmail.com\"\n        claimer:\n          type: object\n          properties:\n            name:\n              type: string\n              example: João da Silva\n            national_registration:\n              type: string\n              example: \"33580667033\"\n            type:\n              type: string\n              example: \"individual\"\n            marketplace_id:\n              type: string\n              example: \"6c237bf9932840ccada92ac629a05d39\"\n            holder_id:\n              type: string\n              example: \"d83a1a81caa243d2a10bc414ae406bd3\"\n            account:\n              type: object\n              properties:\n                digital_account_id:\n                  type: string\n                  example: \"cf27477574e04d4584ac75ef6ca5ec3f\"\n                routing_number:\n                  type: string\n                  example: \"001\"\n                number:\n                  type: string\n                  example: \"456123\"\n                type:\n                  type: string\n                  example: \"tran\"\n            psp:\n              type: object\n              properties:\n                code: \n                  type: string\n                  example: \"3001155\"\n        donor:\n          type: object\n          properties:\n            code:\n              type: string\n              example: 30011455\n            name:\n              type: string\n              example: \"Zoop\"\n        completion_period_end:\n          type: string\n          example: \"2020-01-17T10:00:00Z\"\n        resolution_periodo_end:\n          type: string\n          example: \"2020-01-17T10:00:00Z\"\n    CreditorRequest:\n      title: CreditorRequest\n      type: object\n      properties:\n        account:\n          description: Conta alvo do recebimento do pix.\n          $ref: '#/components/schemas/AccountRequest'\n          example: |-\n            \"account\":{\n                     \"psp\":\"60746948\",\n                     \"number\":\"600000\",\n                     \"routing_number\":\"3000\",\n                     \"type\":\"cacc\"\n                  }\n        key:\n          description: Chave de endereçamento que representa a conta alvo do recebimento do pix\n          $ref: '#/components/schemas/KeyRequest'\n          example: |-\n            \"key\":{\n                     \"value\":\"+552198744587\",\n                     \"type\":\"phone\"\n                  },\n        name:\n          type: string\n          description: Representa o nome do recebedor do pagamento pix.\n          example: '1234545667'\n        national_registration:\n          type: string\n          description: Representa o cpf ou cnpj do recebedor do pagamento pix. (*not required)\n          example: '84154427008'\n        psp:\n          type: string\n          description: Código da instituicão participante do pix onde a conta do recebedor está criada.\n          example: '60746948'           \n    DictKeyRequest:\n      type: object\n      properties:\n        type:\n          type: string\n          description: Representa o tipo de chave de endereçamento. \n          enum:\n           - phone\n           - email\n           - evp\n           - national_registration\n          \n        value:\n          type: string\n          description: Representa o valor da chave de endereçamento. Seu formato e tamanho variam conforme o tipo escolhido anteriormente. Para phone a mascara é +9999999999999. Para email a mascara é xxxxxxxxxx@xxxxxxx.xx.xx com máximo de 77 caracteres. Para evp, não deve ser informado nenhum valor. Para national_registration, não deve ser informado nenhum valor.\n    DictKeyResponse:\n      type: object\n      properties:\n        id:\n          default: \"29b0000cb501400ea6c3f21b24ef251c\"\n        status:\n          example: \"active\"\n        created_at:\n          example: \"2020-11-06T12:54:11.336975\"\n        updated_at:\n          example: \"2020-11-06T12:54:11.336975\"\n        key:\n          type: object  \n          properties:\n            value:\n              example: \"33580667033\"\n            type:\n              example: national_registration\n        account:\n          type: object\n          properties:\n            id:\n              example: \"cf27477574e04d4584ac75ef6ca5ec3f\"\n            marketplace_id:\n              example: \"6c237bf9932840ccada92ac629a05d39\"\n            holder_id:\n              example: \"d83a1a81caa243d2a10bc414ae406bd3\"\n            owner:\n              type: object\n              properties:\n                name:\n                  example: João da Silva\n                national_registration:\n                  example: \"33580667033\"\n                type:\n                  example: \"individual\"\n            routing_number:\n              example: \"001\"\n            number:\n              example: \"456123\"\n            type:\n              example: tran\n        psp:\n          type: object\n          properties:\n            code: \n              example: \"3001155\"\n            name:\n              example: \"Zoop\"\n    DictKeyResponse202:\n      type: object\n      properties:\n        id:\n          type: string\n          example: \"29b0000cb501400ea6c3f21b24ef251c\"\n        status:\n          type: string\n          example: \"active\"\n        created_at:\n          type: string\n          example: \"2020-11-06T12:54:11.336975\"\n        updated_at:\n          type: string\n          example: \"2020-11-06T12:54:11.336975\"\n        key:\n          type: object\n          properties:\n            value:\n              type: string\n              example: \"fulano@gmail.com\"\n            type:\n              type: string\n              example: email\n        account:\n          type: object\n          properties:\n            id:\n              type: string\n              example: \"cf27477574e04d4584ac75ef6ca5ec3f\"\n            marketplace_id:\n              type: string\n              example: \"6c237bf9932840ccada92ac629a05d39\"\n            holder_id:\n              type: string\n              example: \"d83a1a81caa243d2a10bc414ae406bd3\"\n            owner:\n              type: object\n              properties:\n                name:\n                  type: string\n                  example: João da Silva\n                national_registration:\n                  type: string\n                  example: \"33580667033\"\n                type:\n                  type: string\n                  example: \"individual\"\n            routing_number:\n              type: string\n              example: \"001\"\n            number:\n              type: string\n              example: \"456123\"\n            type:\n              type: string\n              example: \"tran\"\n        psp:\n          type: object\n          properties:\n            code: \n              type: string\n              example: \"3001155\"\n            name:\n              type: string\n              example: \"Zoop\"\n    DictKeyResponse400:\n      type: object\n      properties:\n        code:\n          type: string\n          example: \"1000  // 1002 // 1003  // 1004  // 1005\"\n        message:\n          type: string\n          example: \"Account Id is required  // Key value is not a valid email format // Key of type phone must have 14 characters for its value  // Key value is required for phone or email types  // Key type is no compatible with claim type  // Key value must not be informed for national_registration or evp types \"\n    DictKeyResponse404:\n      type: object\n      properties:\n        code:\n          type: string\n          example: \"3000\"\n        message:\n          type: string\n          example: \"Marketplace not found\"\n    DictKeyResponse412:\n      type: object\n      properties:\n        code:\n          type: string\n          example: \"4000\"\n        message:\n          type: string\n          example: \"Maximum entry count allowed reached\"\n    DictSearchKey200:\n      title: DictSearchKey200\n      required:\n        - resource\n      type: object\n      properties:\n        account:\n          description: Descritor da conta vinculada a chave de endereçamento\n          $ref: '#/components/schemas/AccountResponse'\n        created_at:\n          type: string\n          description: Momento quando a chave foi criada no fuso horário de Brasilia\n          format: date-time\n        id:\n          type: object\n          description: Identificador único da chave de endereçamento\n          example: 29b0000cb501400ea6c3f21b24ef251c\n        key:\n          description: Descrição da chave de endereçamento\n          $ref: '#/components/schemas/KeyResponse'\n        psp:\n          description: Descrição do PSP sob o qual a chave de endereçamento foi criada\n          $ref: '#/components/schemas/PspResponse'\n        resource:\n          type: string\n        status:\n          type: string\n          description: Estado corrente da chave de endereçamento\n          example: active\n          enum:\n            - ACTIVE\n            - DELETED\n            - INCLUSION_SCHEDULED\n            - NEW\n            - WAITING_OWNERSHIP_CLAIMING\n            - WAITING_OWNERSHIP_VERIFICATION\n            - WAITING_PORTABILITY_CLAIMING\n        updated_at:\n          type: string\n          description: Momento quando a chave foi atualizada pela última vez no fuso horário de Brasilia\n          format: date-time\n    DictKeyInitializationRequest:\n      title: DictKeyInitializationRequest\n      type: object\n      properties:\n        key_type:\n          type: string\n          description: Representa o tipo de chave de endereçamento (phone,email,evp,national_registration)\n          example: phone\n          enum:\n            - EMAIL\n            - EVP\n            - NATIONAL_REGISTRATION\n            - PHONE\n        key_value:\n          type: string\n          description: Chave de endereçamento que representa a conta alvo do recebimento do pix\n          example: '+552198744587'\n    DictKeyPaymentInitializationResponse:\n      title: DictKeyPaymentInitializationResponse\n      required:\n        - creditor\n      type: object\n      properties:\n        creditor:\n          description: O recebedor do qrcode\n          $ref: '#/components/schemas/BankingIdentifierResponse'\n        end_to_end_id:\n          type: string\n          description: '  Identificador único do pagamento dentro do ecossistema do PIX'\n          example: E00038166201907261559y6j6mt9l0pi\n        id:\n          type: string\n          description: Identificador único do pagamento dentro da Zoop\n          format: uuid\n        payment_date:\n          type: string\n          description: Data do agendada para pagamneto do PIX\n          format: date\n          example: '2021-06-30T00:00:00.000+00:00'\n        status:\n          type: string\n          description: ' Estado corrente do pagamento'\n          example: initialized\n          enum:\n            - CANCELED\n            - EXECUTED\n            - FAILED\n            - INITIALIZED\n            - PENDING\n            - REFUNDED\n            - SUCCEEDED      \n    InitializedPaymentCreationRequest:\n      title: InitializedPaymentCreationRequest\n      type: object\n      properties:\n        amount:\n          type: integer\n          description: Representa o valor do pagamento. Permitido apenas para pagamento de QRCodes que aceitem valor diferente\n          format: int64\n          example: 120000\n        description:\n          type: string\n          description: Representa uma descrição para o tipo de pagamento\n          example: Mesada\n    KeyResponse:\n      title: KeyResponse\n      type: object\n      properties:\n        type:\n          type: string\n          description: Tipo da chave de endereçamento\n          example: national_registration\n          enum:\n            - EMAIL\n            - EVP\n            - NATIONAL_REGISTRATION\n            - PHONE\n        value:\n          type: string\n          description: Valor da chave de endereçamento\n          example: '33580667033'  \n    KeyRequest:\n      title: KeyRequest\n      type: object\n      properties:\n        type:\n          type: string\n          description: Representa o tipo de chave de endereçamento (phone,email,evp,national_registration)\n          example: phone\n          enum:\n            - EMAIL\n            - EVP\n            - NATIONAL_REGISTRATION\n            - PHONE\n        value:\n          type: string\n          description: Chave de endereçamento que representa a conta alvo do recebimento do pix\n          example: '+552198744587'      \n    OwnerResponse:\n      title: OwnerResponse\n      type: object\n      properties:\n        name:\n          type: string\n          description: Nome do proprietário da conta\n          example: João da Silva\n        national_registration:\n          type: string\n          description: CPF ou CNPJ dependendo do tipo do proprietário da conta\n          example: '33580667033'\n        type:\n          type: string\n          description: Tipo do proprietário da conta\n          example: individual\n          enum:\n            - business\n            - individual \n    PaymentCancellationResponse:\n      title: PaymentCancellationResponse\n      required:\n        - resource\n      type: object\n      properties:\n        amount:\n          type: integer\n          description: Representa o valor do pagamento\n          format: int64\n          example: 12000\n        creditor:\n          description: ' o recebedor do pagamento'\n          $ref: '#/components/schemas/BankingIdentifierResponse'\n          example: |-\n            {\n                  \"national_registration\":\"84154427008\",\n                  \"name\":\"Maria da Silva\",\n                  \"type\":\"natural_person\",\n                  \"account\":{\n                     \"psp\":{\n                        \"code\":\"60746948\",\n                        \"name\":\"Bradesco S.A\"\n                     },\n                     \"number\":\"600000\",\n                     \"routing_number\":\"3000\",\n                     \"type\":\"cacc\"\n                  }\n               }\n        debtor:\n          description: pagador  do pagamento\n          $ref: '#/components/schemas/BankingIdentifierResponse'\n          example: |-\n            {\n                  \"national_registration\":\"15405039098\",\n                  \"name\":\"José da Silva\",\n                  \"type\":\"natural_person\",\n                  \"holder_id\":\"ec1865e565a04bcab9994a395dd6393d\",\n                  \"account\":{\n                     \"psp\":{\n                        \"code\":\"19468242\",\n                        \"name\":\"Zoop Tecnologia e Meios de Pagamento S.A.\"\n                     },\n                     \"digital_account_id\":\"0ce048eebf024b26957207c53430aabb\",\n                     \"number\":\"45789\",\n                     \"routing_number\":\"0001\",\n                     \"type\":\"cacc\"\n                  }\n               }\n        description:\n          type: string\n          description: Descrição do pagamento\n          example: Descrição\n        end_to_end_id:\n          type: string\n          description: '  Identificador único do pagamento dentro do ecossistema do PIX'\n          example: E00038166201907261559y6j6mt9l0pi\n        id:\n          type: string\n          description: Identificador único do pagamento dentro da Zoop\n          format: uuid\n        marketplace_id:\n          type: string\n          description: Campo usado pelo recebedor do pix para identificar a transação\n          format: uuid\n        resource:\n          type: string\n        status:\n          type: string\n          description: ' Estado corrente do pagamento. Valores possíveis : pending, executed, succeeded, canceled, failed'\n          example: pending\n          enum:\n            - CANCELED\n            - EXECUTED\n            - FAILED\n            - INITIALIZED\n            - PENDING\n            - REFUNDED\n            - SUCCEEDED\n        transaction_id:\n          type: string\n          description: Identificador opcionalmente informado pelo recebedor do pagamento para fins de conciliação.\n          example: d747dc8fffec48a69830b40af4078fe1        \n    PaymentCreationRequest:\n      title: PaymentCreationRequest\n      type: object\n      properties:\n        number:\n          type: string\n          description: Número da conta do recebedor com digito\n        routing_number:\n          description: Código da agência\n          type: string\n        type:\n          description: Tipo da conta. CACC, SLRY, SVGS, TRAN\n          type: string\n        name:\n          description: Nome do recebedor do pagamento Pix\n          type: string \n        national_registration:\n          description: CPF ouCNPJ do recebedor do pagamento Pix\n          type: string  \n        psp:\n          description: Código da instituição participante do pix onde a conta do recebedor está criada\n          type: string\n        typer:\n          description: Tipo de pessoa do holder (INDIVIDUAL ou BUSINESS)\n          type: string\n        payment_date:\n          description: Data de pagamento\n          type: string  \n    PaymentCreationResponse:\n      title: PaymentCreationResponse\n      type: object\n      properties:\n        amount:\n          type: integer\n          description: Representa o valor do pagamento\n          format: int64\n        created_at:\n          type: string\n          description: data de criação\n          format: date-time\n        creditor:\n          description: ' o recebedor do pagamento'\n          $ref: '#/components/schemas/BankingIdentifierResponse'\n          example: |-\n            {\n                  \"national_registration\":\"84154427008\",\n                  \"name\":\"Maria da Silva\",\n                  \"type\":\"natural_person\",\n                  \"account\":{\n                     \"psp\":{\n                        \"code\":\"60746948\",\n                        \"name\":\"Bradesco S.A\"\n                     },\n                     \"number\":\"600000\",\n                     \"routing_number\":\"3000\",\n                     \"type\":\"cacc\"\n                  }\n               }\n        debtor:\n          description: pagador  do pagamento\n          $ref: '#/components/schemas/BankingIdentifierResponse'\n          example: |-\n            {\n                  \"national_registration\":\"15405039098\",\n                  \"name\":\"José da Silva\",\n                  \"type\":\"natural_person\",\n                  \"holder_id\":\"ec1865e565a04bcab9994a395dd6393d\",\n                  \"account\":{\n                     \"psp\":{\n                        \"code\":\"19468242\",\n                        \"name\":\"Zoop Tecnologia e Meios de Pagamento S.A.\"\n                     },\n                     \"digital_account_id\":\"0ce048eebf024b26957207c53430aabb\",\n                     \"number\":\"45789\",\n                     \"routing_number\":\"0001\",\n                     \"type\":\"cacc\"\n                  }\n               }\n        description:\n          type: string\n          description: Descrição do pagamento\n          example: Descrição\n        end_to_end_id:\n          type: string\n          description: '  Identificador único do pagamento dentro do ecossistema do PIX'\n          example: E00038166201907261559y6j6mt9l0pi\n        id:\n          type: string\n          description: Identificador único do pagamento dentro da Zoop\n          format: uuid\n        marketplace_id:\n          type: string\n          description: Marketplace onde foi realizada a transação\n          format: uuid\n        payment_date:\n          type: string\n          description: Data do agendada para pagamneto do PIX\n          format: date\n          example: '2021-06-30T00:00:00.000+00:00'\n        refunded_amount:\n          type: integer\n          description: Valor total devolvido na transação\n          format: int64\n          example: 0\n        status:\n          type: string\n          description: ' Estado corrente do pagamento. Valores possíveis : pending, executed, succeeded, canceled, failed'\n          example: pending\n          enum:\n            - CANCELED\n            - EXECUTED\n            - FAILED\n            - INITIALIZED\n            - PENDING\n            - REFUNDED\n            - SUCCEEDED\n        transaction_id:\n          type: string\n          description: Identificador opcionalmente informado pelo recebedor do pagamento para fins de conciliação.\n          example: d747dc8fffec48a69830b40af4078fe1      \n    PaymentConfirmationResponse:\n      title: PaymentConfirmationResponse\n      required:\n        - resource\n      type: object\n      properties:\n        amount:\n          type: integer\n          description: Representa o valor do pagamento\n          format: int64\n        creditor:\n          description: ' o recebedor do pagamento'\n          $ref: '#/components/schemas/BankingIdentifierResponse'\n          example: |-\n            {\n                  \"national_registration\":\"84154427008\",\n                  \"name\":\"Maria da Silva\",\n                  \"type\":\"natural_person\",\n                  \"account\":{\n                     \"psp\":{\n                        \"code\":\"60746948\",\n                        \"name\":\"Bradesco S.A\"\n                     },\n                     \"number\":\"600000\",\n                     \"routing_number\":\"3000\",\n                     \"type\":\"cacc\"\n                  }\n               }\n        debtor:\n          description: pagador do pagamento\n          $ref: '#/components/schemas/BankingIdentifierResponse'\n          example: |-\n            {\n                  \"national_registration\":\"15405039098\",\n                  \"name\":\"José da Silva\",\n                  \"type\":\"natural_person\",\n                  \"holder_id\":\"ec1865e565a04bcab9994a395dd6393d\",\n                  \"account\":{\n                     \"psp\":{\n                        \"code\":\"19468242\",\n                        \"name\":\"Zoop Tecnologia e Meios de Pagamento S.A.\"\n                     },\n                     \"digital_account_id\":\"0ce048eebf024b26957207c53430aabb\",\n                     \"number\":\"45789\",\n                     \"routing_number\":\"0001\",\n                     \"type\":\"cacc\"\n                  }\n               }\n        description:\n          type: string\n          description: Descrição do pagamento\n          example: Descrição\n        end_to_end_id:\n          type: string\n          description: '  Identificador único do pagamento dentro do ecossistema do PIX'\n          example: E00038166201907261559y6j6mt9l0pi\n        id:\n          type: string\n          description: Identificador único do pagamento dentro da Zoop\n          format: uuid\n        marketplace_id:\n          type: string\n          description: Campo usado pelo recebedor do pix para identificar a transação\n          format: uuid\n        message_id:\n          type: string\n          description: '  Identificador único da mensagem'\n          example: M1729809268c599330486f52c88b8f70\n        resource:\n          type: string\n        status:\n          type: string\n          description: ' Estado corrente do pagamento. Valores possíveis : pending, executed, succeeded, canceled, failed'\n          example: pending\n          enum:\n            - CANCELED\n            - EXECUTED\n            - FAILED\n            - INITIALIZED\n            - PENDING\n            - REFUNDED\n            - SUCCEEDED\n        transaction_id:\n          type: string\n          description: Identificador opcionalmente informado pelo recebedor do pagamento para fins de conciliação.\n          example: d747dc8fffec48a69830b40af4078fe1      \n    PaymentInitializationRequest:\n      title: PaymentInitializationRequest\n      required:\n        - emv_code\n      type: object\n      properties:\n        emv_code:\n          type: string\n          description: Código EMV do QRCode a ser decodificado\n          example: 00020126570014BR.GOV.BCB.PIX0114607011900001040217Mensagem opcional52040000530398654041.225802BR5920Teste Batch atualiza6009SAO PAULO622605221t9OGEuUWlqWQiY0CU2YmA63048179\n        payment_date:\n          type: string\n          description: Data de pagamento\n          format: date\n          example: '2021-06-14T00:00:00.000+00:00'\n    PaymentInitializationResponse:\n      title: PaymentInitializationResponse\n      required:\n        - creditor\n        - qrcode\n      type: object\n      properties:\n        creditor:\n          description: O recebedor do qrcode\n          $ref: '#/components/schemas/BankingIdentifierResponse'\n        end_to_end_id:\n          type: string\n          description: '  Identificador único do pagamento dentro do ecossistema do PIX'\n          example: E00038166201907261559y6j6mt9l0pi\n        id:\n          type: string\n          description: Identificador único do pagamento dentro da Zoop\n          format: uuid\n        payment_date:\n          type: string\n          description: Data do agendada para pagamneto do PIX\n          format: date\n          example: '2021-06-30T00:00:00.000+00:00'\n        qrcode:\n          description: Detalhes do qrcode\n          $ref: '#/components/schemas/QRCodeResponse'\n        status:\n          type: string\n          description: ' Estado corrente do pagamento'\n          example: initialized\n          enum:\n            - CANCELED\n            - EXECUTED\n            - FAILED\n            - INITIALIZED\n            - PENDING\n            - REFUNDED\n            - SUCCEEDED      \n    pixAccountRequest:\n      title: Pix por dados da conta\n      required:\n        - amount\n        - creditor\n      type: object\n      properties:\n        amount:\n          type: integer\n          description: Valor do pagamento em centavos. \n          example: 12050\n        creditor:\n          type: object\n          properties:\n            account:\n              type: object\n              properties:\n                routing_number:\n                  type: string\n                  example: \"001\"\n                number:\n                  type: string\n                  example: \"456123\"\n                type:\n                  type: string\n                  example: \"tran\"\n            name:\n               type: string\n               description: Representa o nome do recebedor - Parâmetro pertencente ao objeto creditor. \n               example: \"84154427008\"\n            national_registration:\n               type: string\n               description: Representa o CPF/CNPJ do recebedor do Pix - Parâmetro pertencente ao objeto creditor. \n               example: \"84154427008\"\n            psp:\n               type: string\n               description: Código da instituição participante do Pix onde a conta do recebedor está criada - Parâmetro pertencente ao objeto creditor.\n               example: \"60746948\" \n        description:\n          type: string\n          description: Descrição do pagamento. Não é permitido caracteres especiais. \n          example: \"Churrasco fim pandemia\"\n    pixInitRequest:\n     required:\n        - emv_code\n     type: object\n     properties:\n       emv_code:\n          type: string\n          description: Código EMV do QRCode a ser decodificado. \n          example: 00020126570014BR.GOV.BCB.PIX0114607011900001040217Mensagem opcional52040000530398654041.225802BR5920Teste Batch atualiza6009SAO PAULO622605221t9OGEuUWlqWQiY0CU2YmA63048179\n       payment_date:\n          type: string\n          description: Data de pagamento\n          format: date\n          example: '2021-06-14T00:00:00.000+00:00'\n    pixInitResponse:\n      type: object\n      properties:\n        creditor:\n          type: object\n          properties:  \n            account:\n              type: object\n              properties:\n                digital_account_id:\n                  type: string\n                  example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n                number:\n                  type: number\n                  example: 9978856382\n                psp:\n                  type: object\n                  properties:\n                    code:\n                      type: string\n                      example: 19468242\n                    name:\n                      type: string\n                      example: zoop\n                routing_number:\n                  type: number\n                  example: 001\n                type:\n                  type: string\n                  example: tran\n\n            holder_id:\n              type: string\n              example: \"5fa85f64-5717-4562-b3fc-2c963f66afa6\" \n            key:\n              type: object\n              properties: \n                type:\n                  type: string\n                  example: phone   \n                value:\n                  type: string\n                  example: +5521123456789 \n            location:\n              type: object\n              properties: \n                address:\n                  type: string\n                  example: Avenida das Américas, 700, Bloco 05, Sala 101, Barra da Tijuca   \n                city:\n                  type: string\n                  example: Rio de Janeiro  \n                state:\n                  type: string\n                  example: Rio de Janeiro\n                zip_code:\n                  type: string\n                  example: 22640100\n            name:\n              type: string\n              example: José das Coves\n            national_registration:\n              type: string\n              example: J38192246027\n            type:\n              type: string\n              example: Individual             \n        end_to_end_id:\n          type: string\n          example: \"E00038166201907261559y6j6mt9l0pi\"\n        id:\n          type: string\n          example: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n        payment_date:\n          type: string\n          example: \"2021-06-30T00:00:00.000+00:00\"\n        qrcode:\n          type: object\n          properties:  \n            amount:\n              type: number\n              example: \"10000\"              \n            billing: \n              type: object\n              properties: \n                additional_infos:\n                  type: object\n                  properties:\n                    name:\n                      type: string\n                      example: \"produto\"\n                    value:\n                      type: string\n                      example: \"bola de futebol\"\n            amounts: \n              type: object\n              properties: \n                discount:\n                  type: string\n                  example: 0\n                fine:\n                  type: string\n                  example: 0\n                interest:\n                  type: string\n                  example: 0\n                original:\n                  type: string\n                  example: 0\n                reduction:\n                  type: string\n                  example: 0\n            calendar: \n              type: object\n              properties: \n                due_date:\n                  type: string\n                  example: \"2020-11-25\"\n                expires_at:\n                  type: string\n                  example: \"2020-11-30T23:59:59.999Z\"\n                overdue:\n                  type: string\n                  example: true\n                registered_at:\n                  type: string\n                  example: \"2020-11-20T16:15:10.100Z\" \n            debtor: \n              type: object\n              properties: \n                name:\n                  type: string\n                  example: \"Maria Flor\"\n                national_registration:\n                  type: string\n                  example: \"99267474006\"\n                type:\n                  type: string\n                  example: \"INDIVIDUAL\"  \n            type: \n              type: string\n              example: \"instant\"  \n        description:\n          type: string\n          example: \"Churrasco\"  \n        transaction_id:\n          type: string\n          example: \"d747dc8fffec48a69830b40af4078fe1\"          \n        type:\n          type: string\n          example: \"static\"\n    pixCreateRequest:\n     required:\n        - amount\n     type: object\n     properties:\n       amount:\n          type: integer\n          description: Valor do pagamento em centavos. \n          example: 120000\n    pixCreateResponse:\n      type: object\n      properties:\n        amount:\n          type: number\n          example: 0 \n        created_at:\n          type: string\n          example: \"2021-07-15T14:07:37.177Z\"\n        creditor:\n          type: object\n          properties:  \n            account:\n              type: object\n              properties:\n                digital_account_id:\n                  type: string\n                  example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n                number:\n                  type: number\n                  example: 9978856382\n                psp:\n                  type: object\n                  properties:\n                    code:\n                      type: string\n                      example: 19468242\n                    name:\n                      type: string\n                      example: zoop\n                routing_number:\n                  type: number\n                  example: 001\n                type:\n                  type: string\n                  example: tran\n            holder_id:\n              type: string\n              example: \"5fa85f64-5717-4562-b3fc-2c963f66afa6\" \n            key:\n              type: object\n              properties: \n                type:\n                  type: string\n                  example: phone   \n                value:\n                  type: string\n                  example: +5521123456789 \n            location:\n              type: object\n              properties: \n                address:\n                  type: string\n                  example: Avenida das Américas, 700, Bloco 05, Sala 101, Barra da Tijuca   \n                city:\n                  type: string\n                  example: Rio de Janeiro  \n                state:\n                  type: string\n                  example: Rio de Janeiro\n                zip_code:\n                  type: string\n                  example: 22640100\n            name:\n              type: string\n              example: José das Coves\n            national_registration:\n              type: string\n              example: 58192246027\n            type:\n              type: string\n              example: Individual \n        debitor:\n          type: object\n          properties:  \n            account:\n              type: object\n              properties:\n                digital_account_id:\n                  type: string\n                  example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n                number:\n                  type: number\n                  example: 9978856382\n                psp:\n                  type: object\n                  properties:\n                    code:\n                      type: string\n                      example: 19468242\n                    name:\n                      type: string\n                      example: zoop\n                routing_number:\n                  type: number\n                  example: 001\n                type:\n                  type: string\n                  example: tran\n            holder_id:\n              type: string\n              example: \"7fa85f64-5717-4562-b3fc-2c963f66afa6\" \n            key:\n              type: object\n              properties: \n                type:\n                  type: string\n                  example: phone   \n                value:\n                  type: string\n                  example: +5521123456789 \n            location:\n              type: object\n              properties: \n                address:\n                  type: string\n                  example: Avenida das Américas, 700, Bloco 05, Sala 101, Barra da Tijuca   \n                city:\n                  type: string\n                  example: Rio de Janeiro  \n                state:\n                  type: string\n                  example: Rio de Janeiro\n                zip_code:\n                  type: string\n                  example: 22640100\n            name:\n              type: string\n              example: Maria das Coves\n            national_registration:\n              type: string\n              example: 48192246027\n            type:\n              type: string\n              example: Individual \n        description:\n          type: string\n          example: \"Descrição\"                \n        end_to_end_id:\n          type: string\n          example: \"E00038166201907261559y6j6mt9l0pi\"      \n        id:\n          type: string\n          example: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n        marketplace_id:\n          type: string\n          example: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"          \n        payment_date:\n          type: string\n          example: \"2021-06-30T00:00:00.000+00:00\" \n        refund_amount:\n          type: number\n          example: 0  \n        status:\n          type: string\n          example: \"pending\"    \n        transaction_id:\n          type: string\n          example: \"d747dc8fffec48a69830b40af4078fe1\"  \n    pixRefundRequest:\n      title: Pix por dados da conta\n      required:\n        - amount\n        - reason\n      type: object\n      properties:\n        amount:\n          type: integer\n          description: Valor do pagamento em centavos. \n          example: 12050\n        reason:\n          type: object\n          properties:\n            additional_information:\n              type: string\n              example: \"envio errado\"\n            code:\n              type: string\n              enum:\n              - BE08\n              - FR01\n              - MD06\n              - SL02\n              example: \"MD06\"\n    pixRefundResponse:\n      type: object\n      properties:\n        amount:\n          type: integer\n          example: \"12050\"\n        created_at:\n          type: string\n          example: \"2021-01-07T15:41:52.532Z\"\n        id:\n          type: string\n          example: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n        marketplace_id:\n          type: string\n          example: \"0f8546897d6f41f4b3d81049693071ee\"\n        original_transaction:\n          type: object\n          properties:\n            amount:\n              type: integer\n              example: 0\n            created_at:\n              type: string\n              example: \"2021-01-07T15:41:52.532Z\"\n            creditor:\n              type: object\n              properties:\n                account:\n                  type: object\n                  properties:\n                    digital_account_id:\n                      type: string\n                      example: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n                    routing_number:\n                      type: string\n                      example: \"3000\"\n                    number:\n                      type: string\n                      example: \"600000\"\n                    psp:\n                      type: object\n                      properties:\n                        code:\n                          type: string\n                          example: 60746948\n                        name:\n                          type: string\n                          example: \"Bradesco S.A.\"\n                    type:\n                      type: string\n                      example: \"tran\"\n                name:\n                  type: string\n                  example: Maria da Silva\n                national_registration:\n                  type: string\n                  example: \"84154427008\"\n                type:\n                  type: string\n                  example: \"natural_person\"\n                holder_id:\n                  type: string\n                  example: \"ec1865e565a04bcab9994a395dd6393d\"\n\n            debtor:\n              type: object\n              properties:\n                account:\n                  type: object\n                  properties:\n                    digital_account_id:\n                      type: string\n                      example: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n                    name:\n                      type: string\n                      example: João da Silva\n                    national_registration:\n                      type: string\n                      example: \"33580667033\"\n                    type:\n                      type: string\n                      example: \"natural_person\"\n                    holder_id:\n                      type: string\n                      example: \"ec1865e565a04bcab9994a395dd6393d\"\n                    account:\n                      type: object\n                      properties:\n                        psp:\n                          type: object\n                          properties:\n                            code:\n                              type: string\n                              example: 19468242\n                            name:\n                              type: string\n                              example: \"Zoop Tecnologia e Meios de Pagamento S.A.\"\n                        digital_account_id:\n                          type: string\n                          example: \"0ce048eebf024b26957207c53430aabb\"\n                        routing_number:\n                          type: string\n                          example: \"001\"\n                        number:\n                          type: string\n                          example: \"456123\"\n                        type:\n                          type: string\n                          example: \"tran\"\n    pixRequestStaticQRCode:\n      title: Pix por QRCode Estático\n      required:\n        - amount\n        - creditor\n        - key\n      type: object\n      properties:\n        amount:\n          type: integer\n          description: Valor do pagamento em centavos. \n          example: 12050\n        description:\n          type: string\n          description: Descrição do pagamento. Não é permitido caracteres especiais. \n          example: \"Churrasco fim pandemia\"\n        creditor:\n          type: object\n          properties:\n            key:\n              type: object\n              properties:\n                type: \n                  description: \"Representa o tipo de chave de endereçamento. Domínio: phone, email, evp e national_registration. Parâmetro pertencente ao objeto key.\"\n                  example:\n                  enum:\n                    - phone\n                    - email\n                    - evp\n                    - national_registration\n                value:\n                  type: string\n                  description: Representa o valor da chave de endereçamento. Phone +99999999999999, email xxxxxxxxxxxx@xxxxxxxxxxxx.com.br, evp xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx e national_registration xxxxxxxxxxx e xxxxxxxxxxxxxx - Parâmetro pertencente ao objeto key\n                  example: \"\" \n        qrcode_type:\n          type: string\n          description: Identifica o QRCode do tipo estático. \n          example: \"static\"\n        transaction_id:\n          type: string\n          description: Campo usado pelo recebedor do Pix para identificar uma transação no seu legado. Máximo de 25 caracteres.  \n          example: \"d747dc8fffec48a69830b40af\"\n    pixRequestDynamicQRCode:\n      title: Pix por QRCode Dinâmico\n      required:\n        - amount\n        - creditor\n        - key\n      type: object\n      properties:\n        amount:\n          type: integer\n          description: Valor do pagamento em centavos. \n          example: 12050\n        description:\n          type: string\n          description: Descrição do pagamento. Não é permitido caracteres especiais. \n          example: \"Churrasco fim pandemia\"\n        creditor:\n          type: object\n          properties:\n            key:\n              type: object\n              properties:\n                type: \n                  description: \"Representa o tipo de chave de endereçamento. Domínio: phone, email, evp e national_registration. Parâmetro pertencente ao objeto key.\"\n                  example:\n                  enum:\n                    - phone\n                    - email\n                    - evp\n                    - national_registration\n                value:\n                  type: string\n                  description: Representa o valor da chave de endereçamento. Phone +99999999999999, email xxxxxxxxxxxx@xxxxxxxxxxxx.com.br, evp xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx e national_registration xxxxxxxxxxx e xxxxxxxxxxxxxx - Parâmetro pertencente ao objeto key\n                  example: \"\" \n        qrcode_type:\n          type: string\n          description: Identifica o QRCode do tipo estático. \n          example: \"dynamic\"\n        transaction_id:\n          type: string\n          description: Campo usado pelo recebedor do Pix para identificar uma transação no seu legado. Mímimo de 26 e máximo de 35 caracteres.  \n          example: \"d747dc8fffec48a69830b40af0000124765\"\n    pixResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: \"026b9c0e9fd34b32872906d5b64efbee\"\n        end_to_end_id:\n          type: string\n          example: \"E00038166201907261559y6j6mt9l0pi\"\n        transaction_id:\n          type: string\n          example: \"d747dc8fffec48a69830b40af4078fe1\"\n        marketplace_id:\n          type: string\n          example: \"0f8546897d6f41f4b3d81049693071ee\"\n        status:\n          type: string\n          example: \"pending\"\n        amount:\n          type: string\n          example: \"120.50\"\n        description:\n          type: string\n          example: \"Churrasco fim pandemia\"\n        debtor:\n          type: object\n          properties:\n            name:\n              type: string\n              example: João da Silva\n            national_registration:\n              type: string\n              example: \"33580667033\"\n            type:\n              type: string\n              example: \"natural_person\"\n            holder_id:\n              type: string\n              example: \"ec1865e565a04bcab9994a395dd6393d\"\n            account:\n              type: object\n              properties:\n                psp:\n                  type: object\n                  properties:\n                    code:\n                      type: string\n                      example: 19468242\n                    name:\n                      type: string\n                      example: \"Zoop Tecnologia e Meios de Pagamento S.A.\"\n                digital_account_id:\n                  type: string\n                  example: \"0ce048eebf024b26957207c53430aabb\"\n                routing_number:\n                  type: string\n                  example: \"001\"\n                number:\n                  type: string\n                  example: \"456123\"\n                type:\n                  type: string\n                  example: \"tran\"\n        creditor:\n          type: object\n          properties:\n            name:\n              type: string\n              example: Maria da Silva\n            national_registration:\n              type: string\n              example: \"84154427008\"\n            type:\n              type: string\n              example: \"natural_person\"\n            holder_id:\n              type: string\n              example: \"ec1865e565a04bcab9994a395dd6393d\"\n            account:\n              type: object\n              properties:\n                psp:\n                  type: object\n                  properties:\n                    code:\n                      type: string\n                      example: 60746948\n                    name:\n                      type: string\n                      example: \"Bradesco S.A.\"\n                routing_number:\n                  type: string\n                  example: \"3000\"\n                number:\n                  type: string\n                  example: \"600000\"\n                type:\n                  type: string\n                  example: \"tran\"  \n    pixRequestbykey:\n      title: Pix por Chave\n      required:\n        - amount\n        - creditor\n        - key\n      type: object\n      properties:\n        amount:\n          type: integer\n          description: Valor do pagamento em centavos. \n          example: 12050\n        description:\n          type: string\n          description: Descrição do pagamento. Não é permitido caracteres especiais. \n          example: \"Churrasco fim pandemia\"\n        creditor:\n          type: object\n          properties:\n            key:\n              type: object\n              properties:\n                type:\n                  type: string\n                  description: \"Representa o tipo de chave de endereçamento. Domínio: phone, email, evp e national_registration. Parâmetro pertencente ao objeto key.\" \n                  enum:\n                  - phone\n                  - email\n                  - evp\n                  - national_registration\n                value:\n                  type: string\n                  description: Representa o valor da chave de endereçamento. Phone +99999999999999, email xxxxxxxxxxxx@xxxxxxxxxxxx.com.br, evp xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx e national_registration xxxxxxxxxxx e xxxxxxxxxxxxxx - Parâmetro pertencente ao objeto key\n                  example: \"+552198744587\"              \n    pixScheduledResponse:\n      type: object\n      properties:\n        amount:\n          type: string\n          example: \"120.50\"\n        creat_at:\n          type: string\n          example: \"2021-07-16T13:59:19.305Z\"          \n        creditor:\n          type: object\n          properties:        \n            account:\n              type: object\n              properties:\n                digital_account_id:\n                  type: string\n                  example: \"3fa85f64-5717-4562-b3fc-2c963f66afa\" \n                number:\n                  type: string\n                  example: \"600000\"                  \n                psp:\n                  type: object\n                  properties:\n                    code:\n                      type: string\n                      example: 19468242\n                    name:\n                      type: string\n                      example: \"Zoop\"\n                routing_number:\n                  type: string\n                  example: \"001\"\n                type:\n                  type: string\n                  example: \"tran\"           \n            name:\n              type: string\n              example: Maria da Silva\n            national_registration:\n              type: string\n              example: \"84154427008\"\n            type:\n              type: string\n              example: \"natural_person\"\n            holder_id:\n              type: string\n              example: \"ec1865e565a04bcab9994a395dd6393d\"\n          \n        debtor:\n          type: object\n          properties:\n            name:\n              type: string\n              example: João da Silva\n            national_registration:\n              type: string\n              example: \"33580667033\"\n            type:\n              type: string\n              example: \"natural_person\"\n            holder_id:\n              type: string\n              example: \"ec1865e565a04bcab9994a395dd6393d\"\n            account:\n              type: object\n              properties:\n                psp:\n                  type: object\n                  properties:\n                    code:\n                      type: string\n                      example: 19468242\n                    name:\n                      type: string\n                      example: \"Zoop Tecnologia e Meios de Pagamento S.A.\"\n                digital_account_id:\n                  type: string\n                  example: \"0ce048eebf024b26957207c53430aabb\"\n                routing_number:\n                  type: string\n                  example: \"001\"\n                number:\n                  type: string\n                  example: \"456123\"\n                type:\n                  type: string\n                  example: \"tran\"\n        description:\n          type: string\n          example: \"Churrasco fim pandemia\"          \n        end_to_end_id:\n          type: string\n          example: \"E00038166201907261559y6j6mt9l0pi\"\n        id:\n          type: string\n          example: \"026b9c0e9fd34b32872906d5b64efbee\"          \n        marketplace_id:\n          type: string\n          example: \"0f8546897d6f41f4b3d81049693071ee\"\n        payment_date:\n          type: string\n          example: \"2021-06-30T00:00:00.000+00:00\" \n        refunded_amount:\n          type: number\n          example: 0            \n        status:\n          type: string\n          example: \"pending\"  \n        transaction_id:\n          type: string\n          example: \"d747dc8fffec48a69830b40af4078fe1\"                                                          \n    PixTransferError400Response:\n      type: object\n      properties:\n        status:\n          type: string\n          example: \"bad_request\"\n        type:\n          type: string\n          example: \"invalid_request\"\n        code:\n          type: integer\n          example: 2000\n        message:\n          type: string\n          example: \"Validation field error.\"\n        category:\n          type: string\n          example: \"business\"\n        status_code:\n          type: number\n          example: 400\n        fields:\n          type: object\n          properties:\n            account_id:\n              type: object\n              properties:\n                code: \n                  type: integer\n                  example: 1000\n                message:\n                  type: string\n                  example: \"Account Id is required.\"\n            key:\n              type: object\n              properties:\n                type:\n                  type: object\n                  properties:\n                    code: \n                      type: integer\n                      example: 1001\n                    message:\n                      type: string\n                      example: \"Key type is required.\"\n    PixTransferError403Response:\n      type: object\n      properties:\n        status:\n          type: string\n          example: \"Forbidden\"\n        type:\n          type: string\n          example: \"invalid_request\"\n        message:\n          type: string\n          example: \"Transfer window is not valid\"\n        category:\n          type: string\n          example: \"business\"\n        status_code:\n          type: number\n          example: 403\n    PixTransferError404Response:\n      type: object\n      properties:\n        status:\n          type: string\n          example: \"not_found\"\n        type:\n          type: string\n          example: \"not_found\"\n        code:\n          type: integer\n          example: 3000\n        message:\n          type: string\n          example: \"Marketplace not found\"\n        category:\n          type: string\n          example: \"business\"\n        status_code:\n          type: number\n          example: 404\n    PixTransferError412Response:\n      type: object\n      properties:\n        status:\n          type: string\n          example: \"precondition_failed\"\n        type:\n          type: string\n          example: \"invalid_request\"\n        code:\n          type: integer\n          example: 4000\n        message:\n          type: string\n          example: \"Maximum entry count allowed reached\"\n        category:\n          type: string\n          example: \"business\"\n        status_code:\n          type: number\n          example: 412\n    pixQrcodeRequest:\n     required:\n        - emv_code\n     type: object\n     properties:\n       emv_code:\n          type: string\n          description: Código EMV do QRCode a ser decodificado. \n          example: 00020126570014BR.GOV.BCB.PIX0114607011900001040217Mensagem opcional52040000530398654041.225802BR5920Teste Batch atualiza6009SAO PAULO622605221t9OGEuUWlqWQiY0CU2YmA63048179  \n    pixQrcodeResponse:\n      type: object\n      properties:\n        amount:\n          type: number  \n          example: 10000   \n        billing:\n          type: object\n          properties:  \n              additional_infos:\n                type: object\n                properties:   \n                  name:\n                    type: string\n                    example: \"produto\"\n                  value:              \n                    type: string\n                    example: \"bola de futebol\" \n              amounts: \n                type: object\n                properties: \n                  discount:\n                    type: number\n                    example: 0\n                  fine:\n                    type: number\n                    example: 0\n                  interest:\n                    type: number\n                    example: 0\n                  original:\n                    type: number\n                    example: 10000\n                  reduction:\n                    type: number\n                    example: 0 \n              calendar: \n                type: object\n                properties: \n                  due_date:\n                    type: string\n                    example: \"2020-11-25\"\n                  expires_at:\n                    type: string\n                    example: \"2020-11-30T23:59:59.999Z\"\n                  overdue:\n                    type: string\n                    example: true\n                  registered_at:\n                    type: string\n                    example: \"2020-11-20T16:15:10.100Z\" \n              debtor: \n                type: object\n                properties: \n                  name:\n                    type: string\n                    example: \"Maria Flor\"\n                  national_registration:\n                    type: string\n                    example: \"99267474006\"\n                  type:\n                    type: string\n                    example: \"INDIVIDUAL\"  \n              type: \n                type: string\n                example: \"instant\"                      \n        creditor:\n          type: object\n          properties:  \n            account:\n              type: object\n              properties:\n                digital_account_id:\n                  type: string\n                  example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n                number:\n                  type: number\n                  example: 9978856382\n                psp:\n                  type: object\n                  properties:\n                    code:\n                      type: string\n                      example: 19468242\n                    name:\n                      type: string\n                      example: zoop\n                routing_number:\n                  type: number\n                  example: 001\n                type:\n                  type: string\n                  example: tran\n            holder_id:\n              type: string\n              example: \"5fa85f64-5717-4562-b3fc-2c963f66afa6\" \n            key:\n              type: object\n              properties: \n                type:\n                  type: string\n                  example: phone   \n                value:\n                  type: string\n                  example: +5521123456789 \n            location:\n              type: object\n              properties: \n                address:\n                  type: string\n                  example: Avenida das Américas, 700, Bloco 05, Sala 101, Barra da Tijuca   \n                city:\n                  type: string\n                  example: Rio de Janeiro  \n                state:\n                  type: string\n                  example: Rio de Janeiro\n                zip_code:\n                  type: string\n                  example: 22640100\n            name:\n              type: string\n              example: José das Coves\n            national_registration:\n              type: string\n              example: J38192246027\n            type:\n              type: string\n              example: Individual   \n        description:\n          type: string\n          example: \"Churrasco\" \n        qrcode:\n          type: object\n          properties:  \n              amount:\n                type: number\n                example: 10000\n              billing:\n                type: object                \n                properties:   \n                  additional_infos:\n                    type: object\n                    properties:   \n                      name:\n                        type: string\n                        example: \"produto\"\n                      value:              \n                        type: string\n                        example: \"bola de futebol\" \n              amounts: \n                type: object\n                properties: \n                  discount:\n                    type: number\n                    example: 0\n                  fine:\n                    type: number\n                    example: 0\n                  interest:\n                    type: number\n                    example: 0\n                  original:\n                    type: number\n                    example: 10000\n                  reduction:\n                    type: number\n                    example: 0 \n              calendar: \n                type: object\n                properties: \n                  due_date:\n                    type: string\n                    example: \"2020-11-25\"\n                  expires_at:\n                    type: string\n                    example: \"2020-11-30T23:59:59.999Z\"\n                  overdue:\n                    type: string\n                    example: true\n                  registered_at:\n                    type: string\n                    example: \"2020-11-20T16:15:10.100Z\" \n              debtor: \n                type: object\n                properties: \n                  name:\n                    type: string\n                    example: \"Maria Flor\"\n                  national_registration:\n                    type: string\n                    example: \"99267474006\"\n                  type:\n                    type: string\n                    example: \"INDIVIDUAL\"\n              type: \n                type: string\n                example: \"instant\"         \n    PspResponse:\n      title: PspResponse\n      type: object\n      properties:\n        code:\n          type: string\n          description: Código do PSP no Bacen\n          example: '3001155'\n        name:\n          type: string\n          description: Nome do PSP\n          example: Zoop                        \n    QRCodeDecodeRequest:\n      title: QRCodeDecodeRequest\n      type: object\n      properties:\n        emv_code:\n          type: string\n          description: Código EMV do QRCode a ser decodificado\n          example: 00020126570014BR.GOV.BCB.PIX0114607011900001040217Mensagem opcional52040000530398654041.225802BR5920Teste Batch atualiza6009SAO PAULO622605221t9OGEuUWlqWQiY0CU2YmA63048179\n    QRCodeDecodeResponse:\n      title: QRCodeDecodeResponse\n      required:\n        - amount\n        - creditor\n        - qrcode\n      type: object\n      properties:\n        amount:\n          type: integer\n          description: Valor do qrcode, com os 2 últimos dígitos representando as casas decimais\n          format: int64\n          example: 10000\n        billing:\n          description: Detalhes da cobrança (apenas para qrcodes dinâmicos)\n          $ref: '#/components/schemas/BillingResponse'\n        creditor:\n          description: O recebedor do qrcode\n          $ref: '#/components/schemas/BankingIdentifierResponse'\n        description:\n          type: string\n          description: Descrição do pagamento\n          example: Churrasco\n        qrcode:\n          description: Detalhes do qrcode\n          $ref: '#/components/schemas/QRCodeResponse'\n        transaction_id:\n          type: string\n          description: Identificador da transação usado na criação do qrcode e que deve ser usado pra pagar o mesmo\n          example: d747dc8fffec48a69830b40af4078fe1\n    QRCodeResponse:\n      title: QRCodeResponse\n      required:\n        - amount\n        - type\n      type: object\n      properties:\n        amount:\n          type: integer\n          description: Valor do qrcode, com os 2 últimos dígitos representando as casas decimais\n          format: int64\n          example: 10000\n        billing:\n          description: Detalhes da cobrança (apenas para qrcodes dinâmicos)\n          $ref: '#/components/schemas/BillingResponse'\n        description:\n          type: string\n          description: Descrição do pagamento\n          example: Churrasco\n        transaction_id:\n          type: string\n          description: Identificador da transação usado na criação do qrcode e que deve ser usado pra pagar o mesmo\n          example: d747dc8fffec48a69830b40af4078fe1\n        type:\n          type: string\n          description: Tipo do qrcode\n          example: static\n          enum:\n            - DYNAMIC\n            - STATIC\n    ReasonRequest:\n      title: ReasonRequest\n      required:\n        - code\n      type: object\n      properties:\n        additional_information:\n          maxLength: 105\n          minLength: 0\n          type: string\n          description: motivo da devolução\n          example: envio errado\n        code:\n          type: string\n          description: Representa o motivo do retorno\n          example: AM05\n          enum:\n            - BE08\n            - FR01\n            - MD06\n            - SL02\n    RefundReasonResponse:\n      title: RefundReasonResponse\n      required:\n        - code\n      type: object\n      properties:\n        additional_information:\n          type: string\n          description: Complemento de informação do motivo da devolução quando este for NARR\n          example: NARR\n        code:\n          type: string\n          description: Código do motivo da devolução\n          example: NARR\n          enum:\n            - BE08\n            - FR01\n            - MD06\n            - SL02\n    RefundRequest:\n      title: RefundRequest\n      required:\n        - amount\n        - reason\n      type: object\n      properties:\n        amount:\n          type: integer\n          description: Representa o valor devolvido\n          format: int64\n          example: 12000\n        reason:\n          description: Campo usado para informar o motivo da devolução\n          $ref: '#/components/schemas/ReasonRequest'\n          example: |-\n            \"reason\":{\n                  \"reason\":\"envio errado\",\n                  \"type\":\"AM05\",\n               }\n    RefundResponse:\n      title: RefundResponse\n      required:\n        - amount\n        - created_at\n        - id\n        - marketplace\n        - original_transaction\n        - reason\n        - return_id\n        - status\n        - updated_at\n      type: object\n      properties:\n        amount:\n          type: integer\n          description: Valor da devolução\n          format: int64\n          example: 1800\n        created_at:\n          type: string\n          description: Momento onde a devolução foi criada\n          format: date-time\n        id:\n          type: string\n          description: Identificador único da devolução na Zoop\n          format: uuid\n        marketplace:\n          type: string\n          description: Id do marketplace sob o qual a devolução foi feita\n          format: uuid\n        original_transaction:\n          description: Transação original alvo da devolução\n          $ref: '#/components/schemas/PaymentCreationResponse'\n        reason:\n          description: Motivo da devolução\n          $ref: '#/components/schemas/RefundReasonResponse'\n        return_id:\n          type: string\n          description: Id da devolução dentro do ecossistema do PIX\n          example: D1946824220201126121971204711114\n        status:\n          type: string\n          description: Status da devolução\n          example: EXECUTED\n          enum:\n            - EXECUTED\n            - FAILED\n            - NEW\n            - SUCCEEDED\n        updated_at:\n          type: string\n          description: Último momento onde a devolução foi atualizada\n          format: date-time            \n    status:\n      type: string\n      example: \"pending\"        \n    transaction_id:\n      type: string\n      example: \"d747dc8fffec48a69830b40af4078fe1\"          ",
			"canonicalURL": "/github.com/getzoop/api-docs@d112ae4ee6d40e7b1857ee8b72f364a6869b1c58/-/blob/banking/banking-pix.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/getzoop/api-docs/blob/d112ae4ee6d40e7b1857ee8b72f364a6869b1c58/banking/banking-pix.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v3/marketplaces/{marketplace_id}/banking/pix/holders/{holder_id}/accounts/{account_id}/payments/{payment_id}/cancel\": post: responses: 400: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}