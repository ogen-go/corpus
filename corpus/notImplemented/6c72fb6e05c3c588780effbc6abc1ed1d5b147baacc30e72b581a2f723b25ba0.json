{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/City-of-Helsinki/parkkihubi"
		},
		"file": {
			"name": "operator.yaml",
			"size": 0,
			"path": "docs/api/operator.yaml",
			"byteSize": 34845,
			"content": "openapi: 3.0.1\ninfo:\n  title: Parkkihubi Operator API\n  description: \u003e-\n    Parkkihubi Operator REST API Documentation\n  version: \"1.2.0\"\nservers:\n  - url: https://api.parkkiopas.fi/operator/v1/\n    description: Production server\n  - url: https://testapi.parkkiopas.fi/operator/v1/\n    description: Test server\n  - url: http://localhost:8000/operator/v1/\n    description: Local development server\ntags:\n  - name: Enforcement Domains\n    description: \u003e-\n      Endpoint for listing the available enforcement domains\n  - name: Payment Zones\n    description: \u003e-\n      Endpoint for listing the available payment zones\n  - name: Permit Areas\n    description: \u003e-\n      Endpoint for listing the available permit areas\n  - name: Parkings\n    description: \u003e-\n      Endpoints for creating and updating parkings\n  - name: Permit Series\n    description: \u003e-\n      Creating, listing and activating permit series\n  - name: Permits\n    description: \u003e-\n      Parking permit management\n  - name: Active Permits by External Id\n    description: \u003e-\n      Managing parking permits in the currently active series by the\n      external identifiers of the permits\ncomponents:\n  securitySchemes:\n    ApiKey:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: |-\n        Requests must have value `ApiKey \u003cyour_api_key\u003e` in the\n        `Authorization` header, i.e. the HTTP header should look like:\n\n            Authorization: ApiKey \u003cyour_api_key\u003e\n  schemas:\n    EnforcementDomain:\n      type: object\n      example:\n        code: \"HKI\"\n        name: \"Helsingin kaupunki\"\n      properties:\n        code:\n          description: Code of the enforcement domain\n          type: string\n          maxLength: 10\n        name:\n          description: Name of the enforcement domain\n          type: string\n      required:\n        - code\n        - name\n    Parking:\n      type: object\n      example:\n        id: 70fb01a8-a17f-4b14-9b99-0060c748411c\n        status: valid\n        created_at: \"2016-12-10T20:34:38Z\"\n        modified_at: \"2016-12-11T21:34:22Z\"\n        location:\n          type: Point\n          coordinates: [24.938466, 60.170014]\n        registration_number: LOL-007\n        time_start: \"2016-12-24T21:00:00Z\"\n        time_end: \"2016-12-24T22:00:00Z\"\n        domain: \"HKI\"\n        zone: \"2\"\n      properties:\n        id:\n          description: Unique identifier for the parking\n          type: string\n          format: uuid\n          readOnly: true\n        status:\n          description: Status of the parking\n          type: string\n          enum: [valid, not_valid]\n          readOnly: true\n        created_at:\n          description: Creation time for the parking\n          type: string\n          format: dateTime\n          readOnly: true\n        modified_at:\n          description: Modification time for the parking\n          type: string\n          format: dateTime\n          readOnly: true\n        location: \u0026parkingLocation\n          $ref: '#/components/schemas/Location'\n        terminal_number: \u0026parkingTerminalNumber\n          description: \u003e-\n            Payment terminal number, if the parking was bought\n            from a payment terminal.\n          type: string\n          default: ''\n        registration_number: \u0026parkingRegistrationNumber\n          description: Registration number of the parked vehicle\n          type: string\n        time_start: \u0026parkingTimeStart\n          description: Start time for the parking\n          type: string\n          format: dateTime\n        time_end: \u0026parkingTimeEnd\n          description: End time for the parking\n          type: string\n          nullable: true\n          format: dateTime\n        domain: \u0026parkingDomain\n          description: \u003e-\n            Code of the enforcement domain that is allowed\n            to see the parking.\n          type: string\n        zone: \u0026parkingZone\n          description: Payment zone code\n          oneOf: [{type: integer}, {type: string}]\n          nullable: true\n          maxLength: 10\n        is_disc_parking: \u0026parkingIsDiscParking\n          description: \u003e-\n            Specify whether this is a parking disc parking.\n\n            Note: For compatibility reasons this field is present in the\n            result only for parking disc parkings, i.e. when the value\n            is true.\n          type: boolean\n      required:\n        - registration_number\n        - time_start\n        - domain\n        - zone\n    Location:\n      description: Location in GeoJSON format\n      type: object\n      example:\n        type: Point\n        coordinates: [24.938466, 60.170014]\n      properties:\n        type:\n          description: Geometry type\n          type: string\n          enum: [Point]\n        coordinates:\n          description: \u003e-\n            An array of coordinates describing the location geometry.\n            The items are WGS84 longitude and latitude in that order.\n          type: array\n          minItems: 2\n          maxItems: 2\n          items:\n            type: number\n            format: float\n    PaymentZone:\n      type: object\n      example:\n        domain: \"HKI\"\n        code: \"2\"\n        name: \"Maksuvy√∂hyke 2\"\n      required:\n        - domain\n        - code\n        - name\n      properties:\n        domain:\n          description: Enforcement domain code of the payment zone\n          type: string\n          maxLength: 10\n        code:\n          description: Code of the payment zone\n          type: string\n          maxLength: 10\n        name:\n          description: Name of the payment zone\n          type: string\n    PermitSeries:\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the permit series\n          type: integer\n        created_at:\n          description: Creation time of the permit series\n          type: string\n          format: date-time\n          readOnly: true\n        modified_at:\n          description: Modification time of the permit series\n          type: string\n          format: date-time\n          readOnly: true\n        active:\n          description: Specifies whether the series is currently active\n          type: boolean\n    Permit:\n      type: object\n      required:\n        - domain\n        - series\n      properties:\n        id:\n          description: Unique identifier of the permit object\n          type: integer\n        domain: \u0026permitDomain\n          description: \u003e-\n            Code of the enforcement domain that is allowed\n            to see the permit.\n          type: string\n        external_id: \u0026permitExternalId\n          description: External id of the permit\n          type: string\n        series: \u0026permitSeries\n          description: Permit series id\n          type: integer\n        properties: \u0026permitMetaProperties\n          description: Permit properties\n          type: object\n        subjects: \u0026permitSubjects\n          $ref: '#/components/schemas/PermitSubjects'\n        areas: \u0026permitAreas\n          $ref: '#/components/schemas/PermitAreas'\n    PermitSubjects:\n      description: \u003e-\n        List of subjects of a permit with validity time ranges.  Each\n        subject is identified by its registration number.\n      type: array\n      items:\n        $ref: '#/components/schemas/PermitSubjectsItem'\n    PermitSubjectsItem:\n      description: \u003e-\n        Subject of a permit, i.e. a vehicle.  The permit applies to the\n        specified subject for validity period specified by the start and\n        end times.\n      type: object\n      properties:\n        start_time:\n          description: Start time of the validity period\n          type: string\n          format: date-time\n        end_time:\n          description: End time of the validity period\n          type: string\n          format: date-time\n        registration_number:\n          description: \u003e-\n            Registration number of vehicle, which is subject to the permit\n          type: string\n          maxLength: 20\n    PermitAreas:\n      description: \u003e-\n        List of permit area codes with validity time ranges\n      type: array\n      items:\n        $ref: '#/components/schemas/PermitAreasItem'\n    PermitAreasItem:\n      type: object\n      properties:\n        start_time:\n          description: Start time of the parking\n          type: string\n          format: date-time\n        end_time:\n          description: End time of the parking\n          type: string\n          format: date-time\n        area:\n          description: \u003e-\n            Code of the area.\n\n            The list of allowed values to use here varies by operator,\n            i.e. only certain operators can create permits for specific\n            areas.  The list of allowed areas can be fetched from the\n            [``GET /permit_area/``](#operation/getPermitAreas) endpoint.\n            Contact the service administrator to get your own areas into\n            the system.\n          type: string\n          maxLength: 10\n    PermitArea:\n      type: object\n      example:\n        domain: \"HKI\"\n        code: \"FooBar:123\"\n        name: \"Area 123 of FooBar operator\"\n      required:\n        - domain\n        - code\n        - name\n      properties:\n        domain:\n          description: Enforcement domain code of the permit area\n          type: string\n          maxLength: 10\n        code:\n          description: Code of the permit area\n          type: string\n          maxLength: 10\n        name:\n          description: Name of the permit area\n          type: string\n  responses:\n    PaginatedResponse:  # 200\n      description: An array of objects\n      content:\n        application/json:\n          schema:\n            type: object\n            properties: \u0026paginatedResult\n              count:\n                description: Total number of objects\n                type: integer\n              next:\n                description: Link to the next result page\n                type: string\n                format: uri\n              previous:\n                description: Link to the previous result page\n                type: string\n                format: uri\n              results:\n                type: array\n                items:\n                  type: object\n    BadRequest:  # 400\n      description: Bad request, details in request body\n      content:\n        application/json:\n          schema:\n            example:\n              registration_number: [Enter a valid value.]\n    Unauthorized:  # 401\n      description: Unauthorized access\n    Forbidden:  # 403\n      description: Forbidden request\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              code:\n                type: string\n                enum: [unknown_error, permission_denied, grace_period_over]\n              detail:\n                type: string\n            example:\n              code: grace_period_over\n              detail: Grace period has passed. Only \"time_end\" can be updated via PATCH.\n    NotFound:  # 404\n      description: Parking not found\npaths:\n  /enforcement_domain/:\n    get:\n      tags: ['Enforcement Domains']\n      summary: Get list of the enforcement domains\n      operationId: getEnforcementDomains\n      security: [{ApiKey: []}]\n      responses:\n        '200':\n          description: An array of enforcement domains\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  \u003c\u003c : *paginatedResult\n                  results:\n                    items:\n                      $ref: '#/components/schemas/EnforcementDomain'\n  /parking/:\n    post:\n      tags: ['Parkings']\n      summary: Create a new parking\n      operationId: createParking\n      security: [{ApiKey: []}]\n      requestBody:\n        required: true\n        description: Parking to add to the system\n        content: \u0026parkingBodyContent\n          application/json:\n            schema:\n              anyOf:\n                - title: Paid parking\n                  example:\n                    location:\n                      type: Point\n                      coordinates: [24.938466, 60.170014]\n                    registration_number: LOL-007\n                    time_start: \"2016-12-24T21:00:00Z\"\n                    time_end: \"2016-12-24T22:00:00Z\"\n                    domain: \"HKI\"\n                    zone: \"2\"\n                  type: object\n                  properties:\n                    location:\n                      \u003c\u003c : *parkingLocation\n                    terminal_number:\n                      \u003c\u003c : *parkingTerminalNumber\n                    registration_number:\n                      \u003c\u003c : *parkingRegistrationNumber\n                    time_start:\n                      \u003c\u003c : *parkingTimeStart\n                    time_end:\n                      \u003c\u003c : *parkingTimeEnd\n                    domain:\n                      \u003c\u003c : *parkingDomain\n                    zone: \u0026parkingZoneInput\n                      \u003c\u003c : *parkingZone\n                      description: \u003e-\n                        Payment zone code.  Note: Even though type is\n                        specified as string, integer values are also\n                        accepted for backward compatibility.\n                    is_disc_parking:\n                      \u003c\u003c : *parkingIsDiscParking\n                      description: \u003e-\n                        Specify whether this is a parking disc parking.\n\n                        Note: This field can be left out from the\n                        request and will then default to false.  This\n                        way the API for regular paid parkings is\n                        compatible with the previous version.\n                      default: false\n                  required:\n                    - registration_number\n                    - time_start\n                    - zone\n                - title: Parking disc parking\n                  example:\n                    location:\n                      type: Point\n                      coordinates: [24.938466, 60.170014]\n                    registration_number: LOL-007\n                    time_start: \"2016-12-24T21:00:00Z\"\n                    is_disc_parking: true\n                    domain: \"HKI\"\n                  type: object\n                  properties:\n                    location:\n                      \u003c\u003c : *parkingLocation\n                    terminal_number:\n                      \u003c\u003c : *parkingTerminalNumber\n                    registration_number:\n                      \u003c\u003c : *parkingRegistrationNumber\n                    time_start:\n                      \u003c\u003c : *parkingTimeStart\n                    time_end:\n                      \u003c\u003c : *parkingTimeEnd\n                    domain:\n                      \u003c\u003c : *parkingDomain\n                    is_disc_parking:\n                      \u003c\u003c : *parkingIsDiscParking\n                      description: \u003e-\n                        Specify whether this is a parking disc parking.\n                      enum: [true]\n                  required:\n                    - registration_number\n                    - time_start\n                    - location\n                    - is_disc_parking\n      responses:\n        '201':\n          description: The parking was created successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Parking'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n  /parking/{parking_id}/:\n    put:\n      tags: ['Parkings']\n      summary: Replace a parking by its ID\n      operationId: replaceParkingById\n      security: [{ApiKey: []}]\n      parameters:\n        - name: parking_id\n          in: path\n          required: true\n          description: ID of the parking to replace\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        description: Parking data to put over the previous data\n        content:\n          \u003c\u003c : *parkingBodyContent\n      responses:\n        '200':\n          description: The parking was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Parking'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    patch:\n      tags: ['Parkings']\n      summary: Partial update a parking by its ID\n      operationId: updateParkingById\n      security: [{ApiKey: []}]\n      parameters:\n        - name: parking_id\n          in: path\n          required: true\n          description: ID of the parking to update\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        description: Parking data to update\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                time_end: \"2016-12-25T22:00:00Z\"\n              properties:\n                location:\n                  \u003c\u003c : *parkingLocation\n                terminal_number:\n                  \u003c\u003c : *parkingTerminalNumber\n                registration_number:\n                  \u003c\u003c : *parkingRegistrationNumber\n                time_start:\n                  \u003c\u003c : *parkingTimeStart\n                time_end:\n                  \u003c\u003c : *parkingTimeEnd\n                domain:\n                  \u003c\u003c : *parkingDomain\n                zone:\n                  \u003c\u003c : *parkingZoneInput\n                is_disc_parking:\n                  \u003c\u003c : *parkingIsDiscParking\n                  description: \u003e-\n                    Specify whether this is a parking disc parking.\n      responses:\n        '200':\n          description: The parking was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Parking'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    delete:\n      tags: ['Parkings']\n      summary: Delete a parking by its ID\n      operationId: deleteParkingById\n      security: [{ApiKey: []}]\n      parameters:\n        - name: parking_id\n          in: path\n          required: true\n          description: ID of the parking to delete\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '204':\n          description: The parking was deleted successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /payment_zone/:\n    get:\n      tags: ['Payment Zones']\n      summary: Get list of the payment zones\n      operationId: getPaymentZones\n      security: [{ApiKey: []}]\n      responses:\n        '200':\n          description: An array of payment zones\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  \u003c\u003c : *paginatedResult\n                  results:\n                    items:\n                      $ref: '#/components/schemas/PaymentZone'\n  /permit_area/:\n    get:\n      tags: ['Permit Areas']\n      summary: Get list of the permit areas you are allowed to use\n      operationId: getPermitAreas\n      security: [{ApiKey: []}]\n      responses:\n        '200':\n          description: An array of permit areas\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  \u003c\u003c : *paginatedResult\n                  results:\n                    items:\n                      $ref: '#/components/schemas/PermitArea'\n  /permitseries/:\n    get:\n      tags: ['Permit Series']\n      summary: Get list of permit series\n      description: |-\n        Inactive permit series may be deleted from the system.\n        The time limit which defines which series are considered\n        for removal is 3 days by default, but may be configured by the\n        service administrator to a different value.\n      operationId: getPermitSeriesList\n      security: [{ApiKey: []}]\n      responses:\n        '200':\n          description: An array of permit series\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  \u003c\u003c : *paginatedResult\n                  results:\n                    items:\n                      $ref: '#/components/schemas/PermitSeries'\n    post:\n      tags: ['Permit Series']\n      summary: Create a permit series object\n      description: |-\n        Inactive permit series may be deleted from the system.\n        The time limit which defines which series are considered\n        for removal is 3 days by default, but may be configured by the\n        service administrator to a different value.\n      operationId: createPermitSeries\n      security: [{ApiKey: []}]\n      requestBody:\n        description: Permit series to add to the system\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        '201':\n          description: Permit series was created successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermitSeries'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n  /permitseries/{permitseries_id}/:\n    get:\n      tags: ['Permit Series']\n      summary: Get details of a permit series\n      operationId: getPermitSeriesDetails\n      security: [{ApiKey: []}]\n      parameters:\n        - \u0026permitSeriesParamId\n          name: permitseries_id\n          in: path\n          description: \u003e-\n            Id of the permit series\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: A permit series object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermitSeries'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    delete:\n      tags: ['Permit Series']\n      summary: Delete a permit series\n      operationId: deletePermitSeries\n      security: [{ApiKey: []}]\n      parameters:\n        - \u003c\u003c : *permitSeriesParamId\n      responses:\n        '204':\n          description: The permit series was deleted successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /permitseries/{permitseries_id}/activate/:\n    post:\n      tags: ['Permit Series']\n      summary: Activate a permit series\n      description: |-\n        Activate the specified permit series and possibly deactivate\n        some other permit series owned by you.\n\n        Inactive permit series may be deleted from the system.\n        The time limit which defines which series are considered\n        for removal is 3 days by default, but may be configured by the\n        service administrator to a different value.\n      operationId: activatePermitSeries\n      security: [{ApiKey: []}]\n      parameters:\n        - \u003c\u003c : *permitSeriesParamId\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - title: Do not deactivate any series (the default)\n                  example: {}\n                  type: object\n                  properties: {}\n                - title: Deactivate some other series\n                  example:\n                    deactivate_series: [2, 3, 4]\n                  type: object\n                  properties:\n                    deactivate_series:\n                      description: \u003e-\n                        A list of permit series ids to deactivate while\n                        activating the specified permit series.\n                      type: array\n                      items:\n                        type: integer\n                      default: []\n                - title: Deactivate all other series\n                  type: object\n                  properties:\n                    deactivate_others:\n                      description: \u003e-\n                        Deactivate all other permit series while\n                        activating the specified permit series.\n                      type: boolean\n                      enum: [true]\n                  required:\n                    - deactivate_others\n      responses:\n        '200':\n          description: Activation succeeded\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum: [\"OK\", \"No change\"]\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /permit/:\n    get:\n      tags: ['Permits']\n      summary: Get list of parking permits\n      operationId: getPermitList\n      security: [{ApiKey: []}]\n      responses:\n        '200':\n          description: An array of permit objects\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  \u003c\u003c : *paginatedResult\n                  results:\n                    items:\n                      $ref: '#/components/schemas/Permit'\n    post:\n      tags: ['Permits']\n      summary: Create a permit object\n      operationId: createPermit\n      security: [{ApiKey: []}]\n      requestBody:\n        description: Permit to add to the system\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026permitProperties\n                series:\n                  \u003c\u003c : *permitSeries\n                domain:\n                  \u003c\u003c : *permitDomain\n                external_id:\n                  \u003c\u003c : *permitExternalId\n                properties:\n                  \u003c\u003c : *permitMetaProperties\n                subjects:\n                  \u003c\u003c : *permitSubjects\n                areas:\n                  \u003c\u003c : *permitAreas\n              required:\n                - series\n                - domain\n                - subjects\n                - areas\n      responses:\n        '201':\n          description: Permit object was created successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permit'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n  /permit/{permit_id}/:\n    get:\n      tags: ['Permits']\n      summary: Get details of a permit\n      operationId: getPermitDetails\n      security: [{ApiKey: []}]\n      parameters:\n      - \u0026permitParamId\n        name: permit_id\n        in: path\n        description: \u003e-\n          Id of the permit\n        schema:\n          type: integer\n        required: true\n      responses:\n        '200':\n          description: A permit object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permit'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    put:\n      tags: ['Permits']\n      summary: Replace a permit\n      operationId: replacePermit\n      security: [{ApiKey: []}]\n      parameters:\n        - \u003c\u003c : *permitParamId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Permit'\n      responses:\n        '200':\n          description: The permit object was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permit'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    patch:\n      tags: ['Permits']\n      summary: Update a permit\n      operationId: updatePermit\n      security: [{ApiKey: []}]\n      parameters:\n        - \u003c\u003c : *permitParamId\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                \u003c\u003c : *permitProperties\n        required: false\n      responses:\n        '200':\n          description: Permit was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permit'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    delete:\n      tags: ['Permits']\n      summary: Delete a permit\n      operationId: deletePermit\n      security: [{ApiKey: []}]\n      parameters:\n        - \u003c\u003c : *permitParamId\n      responses:\n        '204':\n          description: The permit was deleted successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /activepermit/:\n    get:\n      tags: ['Active Permits by External Id']\n      summary: Get list of permits in the active series\n      operationId: getActivePermitList\n      security: [{ApiKey: []}]\n      responses:\n        '200':\n          description: An array of permit objects\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  \u003c\u003c : *paginatedResult\n                  results:\n                    items:\n                      $ref: '#/components/schemas/Permit'\n    post:\n      tags: ['Active Permits by External Id']\n      summary: Create a permit to the active series\n      operationId: createActivePermit\n      security: [{ApiKey: []}]\n      requestBody:\n        description: Permit to add to the system\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - domain\n                - external_id\n              properties:\n                domain:\n                  \u003c\u003c : *permitDomain\n                properties:\n                  \u003c\u003c : *permitMetaProperties\n                external_id:\n                  description: External id of the permit\n                  type: string\n                subjects:\n                  $ref: '#/components/schemas/PermitSubjects'\n                areas:\n                  $ref: '#/components/schemas/PermitAreas'\n      responses:\n        '200':\n          description: Creation of the permit succeeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permit'\n  /activepermit/{external_id}/:\n    get:\n      tags: ['Active Permits by External Id']\n      summary: Get details of a permit in the active series\n      operationId: getActivePermit\n      security: [{ApiKey: []}]\n      parameters:\n        - \u0026permitParamExternalId\n          name: external_id\n          in: path\n          description: \u003e-\n            External id of the permit\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: A permit object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permit'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    patch:\n      tags: ['Active Permits by External Id']\n      summary: Update a permit in the active series\n      operationId: updateActivePermit\n      security: [{ApiKey: []}]\n      parameters:\n        - \u003c\u003c : *permitParamExternalId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                domain:\n                  \u003c\u003c : *permitDomain\n                properties:\n                  \u003c\u003c : *permitMetaProperties\n                subjects:\n                  \u003c\u003c : *permitSubjects\n                areas:\n                  \u003c\u003c : *permitAreas\n      responses:\n        '200':\n          description: Permit was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permit'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    put:\n      tags: ['Active Permits by External Id']\n      summary: Replace a permit in the active series\n      operationId: replaceActivePermit\n      security: [{ApiKey: []}]\n      parameters:\n        - \u003c\u003c : *permitParamExternalId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Permit'\n      responses:\n        '200':\n          description: The permit object was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permit'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    delete:\n      tags: ['Active Permits by External Id']\n      summary: Delete a permit from the active series\n      operationId: deleteActivePermit\n      security: [{ApiKey: []}]\n      parameters:\n        - \u003c\u003c : *permitParamExternalId\n      responses:\n        '204':\n          description: The permit was deleted successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n",
			"canonicalURL": "/github.com/City-of-Helsinki/parkkihubi@62df86945ecd510ec5ab1157593abcd53b9ab2ff/-/blob/docs/api/operator.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/City-of-Helsinki/parkkihubi/blob/62df86945ecd510ec5ab1157593abcd53b9ab2ff/docs/api/operator.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/parking/\": post: requestBody: contents: application/json: generate schema: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}