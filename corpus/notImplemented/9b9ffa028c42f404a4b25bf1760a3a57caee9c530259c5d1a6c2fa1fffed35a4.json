{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aws/aws-connected-device-framework"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "source/packages/services/device-patcher/docs/swagger.yaml",
			"byteSize": 19460,
			"content": "#-----------------------------------------------------------------------------------------------------------------------\n#   Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance\n#  with the License. A copy of the License is located at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES\n#  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions\n#  and limitations under the License.\n#-----------------------------------------------------------------------------------------------------------------------\nopenapi: 3.0.0\ninfo:\n  title: \"AWS Connected Device Framework: Device Patcher\"\n  description: \u003e\n    Allows for patching of devices remotely utilizing SSM State Manager Associations Ansible Playbook executions on physical devices.\n\n  version: 1.0.0\n\ntags:\n  - name: Patch Templates\n    description: \u003e\n      A Template that provides specifies the configuration of a patch Task\n\n  - name: Activation\n    description: \u003e\n      Activation represent SSM acitvation of devices as hybrid instances\n\n  - name: Patch Tasks\n    description: \u003e\n      Patch represent SSM State Manager association against devices managed as hybrid instances.\n\n\npaths:\n  \"/patchTemplates\":\n    post:\n      tags:\n        - Patch Templates\n      summary: Creates a new patch patch template\n      description: \u003e\n        Defines a new template by specifying the type of the patch \"agentless\" or \"agentbased\" and a source of the ansible playbook.\n\n      operationId: createTemplate\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CreatePatchTemplate'\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n    get:\n      tags:\n        - Patch Templates\n      summary: List all available patch patch templates.\n      operationId: listTemplates\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/PatchTemplatesList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n  \"/patchTemplates/{templateName}\":\n    parameters:\n      - $ref: '#/components/parameters/templateName'\n    patch:\n      tags:\n        - Patch Templates\n      summary: Updates a patch patch template\n      description: \u003e\n        Defines a new template by specifying the type of the patch \"agentless\" or \"agentbased\" and a source of the ansible playbook.\n\n      operationId: updateTemplate\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UpdatePatchTemplate'\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n\n    get:\n      tags:\n        - Patch Templates\n      summary: Find a specific patch template\n      description: \u003e\n        Returns a specific patch template by template name.\n      operationId: getTemplate\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/PatchTemplate\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    delete:\n      tags:\n        - Patch Templates\n      summary: Deletes a specific patch template\n      description: \u003e\n        Deletes a specific patch template by template name.\n      operationId: deleteTemplate\n      responses:\n        \"204\":\n          description: OK\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n  \"/activiations\":\n    \"post\":\n      tags:\n        - Activation\n      summary: Creates a device activation\n      description: \u003e\n        Creates an SSM activation for a managed device\n\n      operationId: createActivation\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: '#/components/schemas/Activation'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/Activation\"\n\n  \"/activations/{activationId}\":\n    parameters:\n      - $ref: '#/components/parameters/activationId'\n    get:\n      tags:\n        - Activation\n      summary: Find a specific activation by Id\n      operationId: getActivationById\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/Activation\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n    delete:\n      tags:\n        - Activation\n      summary: Deletes a specific activation for a device by id\n      operationId: deleteActivationById\n      responses:\n        \"204\":\n          description: OK\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n\n  \"/deployemntTasks\":\n    \"post\":\n      tags:\n        - Patch Tasks\n      summary: Creates a device patches in bulk\n      description: \u003e\n        Creates an SSM state manager association for a ssm managed device\n\n      operationId: createPatchTask\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: '#/components/schemas/PatchList'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/PatchTask\"\n\n\n  \"/patchTasks/{patchTaskId}\":\n    parameters:\n      - $ref: '#/components/parameters/patchTaskId'\n    get:\n      tags:\n        - Patch Tasks\n      summary: Find a specific patch Task by patchTaskId\n      operationId: getPatchById\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/PatchTask\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n  \"/patches/{patchId}\":\n    parameters:\n      - $ref: '#/components/parameters/patchId'\n    get:\n      tags:\n        - Patch\n      summary: Get a patch by its Id\n      operationId: getPatch\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/Patch\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    patch:\n      tags:\n        - Patch\n      summary: Retry a specific patch by patchId\n      operationId: patchPatchById\n      description: \u003e\n        Retries an SSM state manager association for a ssm managed device\n\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: '#/components/schemas/RetryPatch'\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n\n    delete:\n      tags:\n        - Patch\n      summary: Deletes a specific patch by patchId\n      operationId: deletePatchById\n      responses:\n        \"204\":\n          description: OK\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n  \"/patchTasks/{patchTaskId}/patches\":\n    parameters:\n      - $ref: '#/components/parameters/patchTaskId'\n    get:\n      tags:\n        - Patch Tasks\n      summary: Gets the list of patches associated with a particular patch Task\n      operationId: getPatchsByTask\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/PatchList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n\n  \"/devices/{deviceId}/patches\":\n    parameters:\n      - $ref: '#/components/parameters/deviceId'\n    get:\n      tags:\n        - Patch\n      summary: Gets the list of patches associated with a particular device\n      operationId: getPatchsByDevice\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/PatchList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\ncomponents:\n\n  parameters:\n\n    templateName:\n      name: templateName\n      in: path\n      description: Name of template\n      required: true\n      schema:\n        type: string\n\n    activationId:\n      name: activationId\n      in: path\n      description: Device task Id\n      required: true\n      schema:\n        type: string\n\n    deviceId:\n      name: deviceId\n      in: path\n      description: Device Id\n      required: true\n      schema:\n        type: string\n\n    patchTaskId:\n      name: patchTaskId\n      in: path\n      description: Patch Task ID\n      required: true\n      schema:\n        type: string\n\n    patchId:\n      name: patchId\n      in: path\n      description: Patch ID\n      required: true\n      schema:\n        type: string\n\n\n    offset:\n      name: offset\n      in: query\n      schema:\n        type: integer\n        minimum: 0\n\n    count:\n      name: offset\n      in: query\n      schema:\n        type: integer\n        minimum: 0\n\n\n  responses:\n\n    Created:\n      description: Created successfully\n      headers:\n        location:\n          schema:\n            type: string\n\n    BadRequest:\n      description: Invalid input\n      content:\n        application/vnd.aws-cdf-v1.0+json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    NotFound:\n      description: Not found\n      content:\n        application/vnd.aws-cdf-v1.0+json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    Conflict:\n      description: Conflict\n      content:\n        application/vnd.aws-cdf-v1.0+json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n  schemas:\n\n    CreatePatchTemplate:\n      type: object\n      properties:\n        playbookFile:\n          type: string\n          format: binary\n          description: Path to the playbook file\n          example: /home/user/playbook.yml\n        name:\n          type: string\n          description: Name of template.\n        patchType:\n          type: string\n          description: type\n          enum: [ agentless, agentbased ]\n        enabled:\n          type: boolean\n          description: Whether the template is enabled for use.\n        description:\n          type: string\n          description: Description regarding the template\n        extraVars[\u003ckey\u003e]:\n          type: string\n          description: Extra Variables that need to be passed down to the ansible exeucution as input external paramters\n      required:\n        - name\n        - patchType\n        - playbookFile\n      example:\n        name: ggv2 installer template\n        patchType: \"agentbased\"\n        playbookFile: \"/usr/bin/device-patcher/ggv2-ec2-amazonlinux2-installer-playbook.yml\"\n        extraVars[key1]: val1\n        extraVars[key2]: val2\n\n\n    UpdatePatchTemplate:\n      type: object\n      properties:\n        playbookFile:\n          type: string\n          format: binary\n          description: Path to the playbook file\n          example: /home/user/playbook.yml\n        patchType:\n          type: string\n          description: type\n          enum: [ agentless, agentbased ]\n        enabled:\n          type: boolean\n          description: Whether the template is enabled for use.\n        description:\n          type: string\n          description: Description regarding the template\n        extraVars[key]:\n          type: string\n          description: Extra Variables that need to be passed down to the ansible exeucution as input external paramters\n      example:\n        name: ggv2 installer template\n        extraVars[key1]: var1\n\n    PatchTemplate:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of template.\n        playbookName:\n          type: string\n          description: Name of the playbook.\n        playbookSource:\n          type: object\n          properties:\n            key:\n              type: string\n              description: key path of where the ansible playbook file is stored in S3.\n            bucket:\n              type: string\n              description: Bucket of where the ansible playbook file is stored in S3.\n          description: Name of template.\n        patchType:\n          type: string\n          description: type\n          enum: [agentless, agentbased]\n        enabled:\n          type: boolean\n          description: Whether the template is enabled for use.\n        VersionNo:\n          type: number\n          description: Version of the template.\n        description:\n          type: string\n          description: Description regarding the template\n        createdAt:\n          type: string\n          format: 'date-time'\n          description: Date/time the group was created.\n          readOnly: true\n        updatedAt:\n          type: string\n          format: 'date-time'\n          description: Date/time the group was updated.\n          readOnly: true\n        extraVars[key]:\n          type: object\n          description: Extra Variables that need to be passed down to the ansible exeucution as input external paramters\n          properties:\n            \u003ckey\u003e:\n              type: string\n      example:\n        name: ggv2 installer template\n        versionNo: 1\n        createdAt: \"2020-03-16T21:42:53.594Z\"\n        updatedAt: \"2020-03-16T21:42:53.594Z\"\n        enabled: true\n        patchType: \"agentbased\"\n        playbookName: \"ggv2-ec2-amazonlinux2-installer-playbook.yml\"\n        playbookSource:\n          bucket: \"myBucket\"\n          key: \"device-patching/ggv2-ec2-amazonlinux2-installer-playbook.yml\"\n        extraVars:\n          commonVar1: commonVarVal1\n          commonVar2: commonVarVal2\n\n\n\n    PatchTemplatesList:\n      properties:\n        tempaltes:\n          type: array\n          description: A list of templates\n          items:\n            $ref: \"#/components/schemas/PatchTemplate\"\n        pagination:\n          type: object\n          properties:\n            lastEvaulated:\n              type: object\n              properties:\n                name:\n                  type: string\n            count:\n              type: integer\n\n\n      example:\n        templates:\n          -\n            name: ggv2 installer template\n            versionNo: 1\n            createdAt: \"2020-03-16T21:42:53.594Z\"\n            updatedAt: \"2020-03-16T21:42:53.594Z\"\n            enabled: true\n            patchType: \"agentbased\"\n            playbookSource:\n              type: \"s3\"\n              bucket: \"myBucket\"\n              prefix: \"device-patching/ggv2-ec2-amazonlinux2-installer-playbook.yml\"\n            extraVars:\n              commonVar1: commonVarVal1\n              commonVar2: commonVarVal2\n        pagination:\n          count: 3\n          lastEvaluated:\n            name: \"myTemplate5\"\n\n    Activation:\n      type: object\n      properties:\n        deviceId:\n          type: string\n          description: The id of target device\n        activationId:\n          type: string\n          description: The id of the activaiton\n        activationRegion:\n          type: string\n          description: The region where device activation has been created\n      example:\n        activationId: \"a1102421-922f-46d5-9a85-bdbad8d90d6c\"\n        activationCode: \"nxj3IC1HBquDVxM14Oqo\"\n        activationRegion: \"us-east-1\"\n\n    PatchTask:\n      type: object\n      properties:\n        taskId:\n          type: string\n          description: patch Task Id\n        createdAt:\n          type: string\n          format: 'date-time'\n          description: Date/time the group was created.\n          readOnly: true\n        updatedAt:\n          type: string\n          format: 'date-time'\n          description: Date/time the group was updated.\n          readOnly: true\n        patches:\n          type: array\n          description: A list of patches\n          items:\n            $ref: \"#/components/schemas/Patch\"\n\n\n    Patch:\n      type: object\n      properties:\n        taskId:\n          type: string\n          description: Patch Task Id\n          readOnly: true\n        deviceId:\n          type: string\n          description: The Id of the Device\n          readOnly: true\n        patchId:\n          type: string\n          description: The Id of the patch\n        createdAt:\n          type: string\n          format: 'date-time'\n          description: Date/time the group was created.\n          readOnly: true\n        updatedAt:\n          type: string\n          format: 'date-time'\n          description: Date/time the group was updated.\n          readOnly: true\n        patchTemplateName:\n          type: string\n          description: Patch Template Name\n        patchStatus:\n          type: string\n          description: The status of the patch\n          enum: [pending, success, failed]\n        patchType:\n          type: string\n          description: The type of patch\n          enum: [agentless, agentbased]\n        statusMessage:\n          type: string\n          description: Message detail pertaining to patchStatus\n          readOnly: true\n        associationId:\n          type: string\n          description: SSM Association ID reference once the association is successfully been created\n          readOnly: true\n        extraVars:\n          type: object\n          properties:\n            \u003csomekey\u003e:\n              type: string\n              description: extra variables which are passed through to the playbook\n\n\n\n      example:\n        deviceId: \"ggv2-ec2-devive1\"\n        patchId: \"a1b83c20-ab84-11ea-9634-37cb5e1c09aa\"\n        createdAt: \"2020-06-11T01:41:12.546Z\"\n        updatedAt: \"2020-06-11T01:41:12.546Z\"\n        patchTemplateName: \"ggv2-ec2-amazonlinux2-template\"\n        patchStatus: \"failed\"\n        patchType: \"agentbased\"\n        statusMessage: \"DEVICE_NOT_ACTIVATED_AS_HYBRID_INSTANCE\"\n        associationId: \"a1b83c20-ab84-11ea-9634-37cb5e1c09aa\"\n        extraVars:\n          iot_endpoint: \"\u003cstring\u003e\"\n          iot_role_alias: \"\u003cstring\u003e\"\n\n    RetryPatch:\n      type: object\n      properties:\n        patchStatus:\n          type: string\n          description: retry is the only supported patching operation supported for Retry Patchs\n      example:\n        patchStatus: \"retry\"\n\n    PatchList:\n      type: object\n      properties:\n        patches:\n          type: array\n          description: A list of templates\n          items:\n            $ref: \"#/components/schemas/Patch\"\n        pagination:\n          type: object\n          properties:\n            lastEvaluated:\n              type: object\n              properties:\n                nextToken:\n                  type: string\n                  description: the last evauluated key token, can be used to retrieve the next batch of patches\n            count:\n              type: integer\n\n    Error:\n      type: object\n      properties:\n        message:\n          type: string\n",
			"canonicalURL": "/github.com/aws/aws-connected-device-framework@46e38e57b62458ac4a8d9719d472286f30ff420a/-/blob/source/packages/services/device-patcher/docs/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/aws/aws-connected-device-framework/blob/46e38e57b62458ac4a8d9719d472286f30ff420a/source/packages/services/device-patcher/docs/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/patchTasks/{patchTaskId}/patches\": get: responses: 200: contents: unsupported content types: [application/vnd.aws-cdf-v1.0+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}