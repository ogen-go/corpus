{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sjoerdvanderhoorn/Uier"
		},
		"file": {
			"name": "rest-api.yaml",
			"size": 0,
			"path": "documentation/rest-api.yaml",
			"byteSize": 6480,
			"content": "# https://mermade.github.io/openapi-gui/\n# https://editor.swagger.io/\nopenapi: 3.0.0\nservers:\n  - url: 'http://localhost:8081'\ninfo:\n  description: 'Uier (UI[test]er) is a tool that provides codeless or low-code User Experience test editing and management. Uier uses Selenium to perform testing or UI automation. When running a script, results are fed back to the user interface to visually inspect failures. Each step captures screenshots and the full browser state.'\n  version: 0.3.0\n  title: Uier\n  termsOfService: ''\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: authentication\n  - name: test\n  - name: collection\n  - name: run\n  - name: user\npaths:\n  /login:\n    post:\n      summary: ''\n      description: ''\n      parameters:\n        - name: username\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: password\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: 'Authenticated'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    example: authenticated\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n                example: uier=abcde12345; Path=/; HttpOnly\n      operationId: ''\n      tags:\n        - authentication\n  /logout:\n    post:\n      summary: ''\n      description: ''\n      parameters: []\n      responses:\n        default:\n          description: 'Not authenticated'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    example: not_authenticated\n      operationId: ''\n      tags:\n        - authentication\n  /test:\n    get:\n      summary: ''\n      description: ''\n      parameters: []\n      security: \n        - cookieAuth: []\n      operationId: ''\n      responses:\n        default:\n          description: 'Default response'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TestSchema'\n      tags:\n        - test\n    post:\n      summary: ''\n      description: ''\n      operationId: ''\n      security: \n        - cookieAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestSchema'\n      responses:\n        default:\n          description: 'Default response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestSchema'\n      tags:\n        - test\n  '/test/{uid}':\n    get:\n      summary: ''\n      description: ''\n      parameters:\n        - name: uid\n          in: path\n          required: true\n          description: Test identifier\n          schema:\n            type: string\n      operationId: ''\n      security: \n        - cookieAuth: []\n      responses:\n        default:\n          description: 'Default response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestSchema'\n      tags:\n        - test\n    put:\n      summary: ''\n      description: ''\n      parameters:\n        - name: uid\n          in: path\n          required: true\n          description: Test identifier\n          schema:\n            type: string\n      operationId: ''\n      security: \n        - cookieAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestSchema'\n      responses:\n        default:\n          description: 'Default response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestSchema'\n      tags:\n        - test\n    delete:\n      summary: ''\n      description: ''\n      parameters:\n        - name: uid\n          in: path\n          required: true\n          description: Test identifier\n          schema:\n            type: string\n      operationId: ''\n      security: \n        - cookieAuth: []\n      responses:\n        default:\n          description: Default response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  numberOfDeletedRows:\n                    type: integer\n      tags:\n        - test\n  '/test/{uid}/run':\n    post:\n      summary: ''\n      description: ''\n      parameters:\n        - name: uid\n          in: path\n          required: true\n          description: Test identifier\n          schema:\n            type: string\n      operationId: ''\n      security: \n        - cookieAuth: []\n      responses:\n        default:\n          description: 'Default response'\n      tags:\n        - test\nexternalDocs:\n  description: 'Uier on GitHub'\n  url: 'https://github.com/sjoerdvanderhoorn/Uier/'\ncomponents:\n  schemas:\n    TestSchema:\n      type: object\n      properties:\n        uid:\n          type: string\n          example: 00000000-0000-0000-0000-000000000000\n        name:\n          type: string\n          example: Google search for 'Selenium HQ'\n        purpose:\n          type: string\n          example: This test will verify Selenium HQ is still on the first reports page of Google.\n        browser:\n          type: string\n          enum: [chrome, firefox]\n        urlDomain:\n          type: string\n          example: https://www.google.com\n        urlPath:\n          type: string\n          example: /\n        steps:\n          type: array\n          items:\n            type: object\n            properties:\n              command:\n                type: string\n                example: input\n              name:\n                type: string\n                example: Enter 'Selenium HQ' as a search string\n              target_query:\n                type: string\n                example: a \u003e h3\n              target_type:\n                type: string\n                example: css\n              value:\n                type: string\n                example: Selenium HQ\n  securitySchemes:\n    cookieAuth:\n      type: apiKey\n      in: cookie\n      name: uier\n  links: {}\n  callbacks: {}",
			"canonicalURL": "/github.com/sjoerdvanderhoorn/Uier@ddba80a35606b5e82de5a5bb60186aa8dcb86a09/-/blob/documentation/rest-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/sjoerdvanderhoorn/Uier/blob/ddba80a35606b5e82de5a5bb60186aa8dcb86a09/documentation/rest-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/test\": get: security: security \"cookieAuth\" (index 0): cookie security not implemented",
	"NotImplemented": [
		"cookie security"
	]
}