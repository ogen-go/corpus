{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/maurobonfietti/rest-api-slim-php"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "public/docs/swagger.yaml",
			"byteSize": 26922,
			"content": "openapi: 3.0.0\r\ninfo:\r\n  title: Rest Api Slim PHP\r\n  description: \u003e-\r\n    [Example of REST API](https://github.com/maurobonfietti/rest-api-slim-php) with Slim PHP micro framework.\r\n\r\n    This simple API allows you to manage resources such as: users, tasks and notes.\r\n  contact: {}\r\n  version: '1.0'\r\nservers:\r\n- url: https://rest-api-slim-php.herokuapp.com\r\n  description: Production server using Heroku.\r\n\r\n- url: http://localhost:8080\r\n  description: My localhost server using PHP built-in web server.\r\n\r\n- url: http://localhost:8081\r\n  description: My localhost server using docker and docker compose.\r\n\r\npaths:\r\n  /:\r\n    get:\r\n      tags:\r\n      - Info\r\n      summary: Get Help\r\n      description: Get help about this api.\r\n      operationId: GetHelp\r\n      parameters: []\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          headers:\r\n            Host:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: localhost:8080\r\n            Date:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: Tue, 18 Jun 2019 22:39:02 +0000\r\n            Connection:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: close\r\n            X-Powered-By:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: PHP/7.3.4\r\n            Access-Control-Allow-Origin:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: '*'\r\n            Content-Length:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: '463'\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GetHelp'\r\n              example:\r\n                code: 200\r\n                status: success\r\n                message:\r\n                  endpoints:\r\n                    tasks: http://localhost:8080/api/v1/tasks\r\n                    users: http://localhost:8080/api/v1/users\r\n                    notes: http://localhost:8080/api/v1/notes\r\n                    docs: http://localhost:8080/docs/index.html\r\n                    status: http://localhost:8080/status\r\n                    this help: http://localhost:8080\r\n                  version: 2.13.0\r\n                  timestamp: 1624812953\r\n      deprecated: false\r\n  /status:\r\n    get:\r\n      tags:\r\n      - Info\r\n      summary: Get Status\r\n      description: Get status of this api.\r\n      operationId: GetStatus\r\n      parameters: []\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          headers:\r\n            Host:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: localhost:8080\r\n            Date:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: Tue, 18 Jun 2019 22:39:39 +0000\r\n            Connection:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: close\r\n            X-Powered-By:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: PHP/7.3.4\r\n            Access-Control-Allow-Origin:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: '*'\r\n            Content-Length:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: '228'\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GetStatus'\r\n              example:\r\n                code: 200\r\n                status: success\r\n                message:\r\n                  stats:\r\n                    tasks: 8\r\n                    users: 42\r\n                    notes: 63\r\n                  MySQL: OK\r\n                  Redis: Disabled\r\n                  version: 2.12.0\r\n                  timestamp: 1624808196\r\n      deprecated: false\r\n  /login:\r\n    post:\r\n      tags:\r\n      - Login\r\n      summary: Login\r\n      description: Login and get a JWT Token Authorization Bearer to use this api.\r\n      operationId: Login\r\n      parameters: []\r\n      requestBody:\r\n        description: ''\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/LoginRequest'\r\n            example:\r\n              email: super.email@host.com\r\n              password: OnePass1\r\n        required: true\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          headers:\r\n            Host:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: localhost:8080\r\n            Date:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: Wed, 22 May 2019 19:24:12 +0000\r\n            Connection:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: close\r\n            X-Powered-By:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: PHP/7.3.4\r\n            Access-Control-Allow-Origin:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: '*'\r\n            Content-Length:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: '291'\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/LoginOK'\r\n              example:\r\n                code: 200\r\n                status: success\r\n                message:\r\n                  Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMSIsImVtYWlsIjoibUBiLmNvbS5hciIsIm5hbWUiOiJNTkIiLCJpYXQiOjE1NTg1NTMwNTIsImV4cCI6MTU1OTE1Nzg1Mn0.OQyICWlGW0oSUB-ANrYL2OJTdC2v0OQQO3RQQ3W_KLo\r\n        '400':\r\n          description: Bad Request\r\n          headers:\r\n            Host:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: localhost:8080\r\n            Date:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: Wed, 22 May 2019 19:25:28 +0000\r\n            Connection:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: close\r\n            X-Powered-By:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: PHP/7.3.4\r\n            Content-type:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: application/json\r\n            Content-Length:\r\n              content:\r\n                text/plain:\r\n                  schema:\r\n                    type: string\r\n                  example: '133'\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/LoginFailed1'\r\n              example:\r\n                message: 'Login failed: Email or password incorrect.'\r\n                class: UserException\r\n                status: error\r\n                code: 400\r\n      deprecated: false\r\n  /api/v1/users:\r\n    get:\r\n      tags:\r\n      - Users\r\n      summary: Get All Users\r\n      operationId: GetAllUsers\r\n      parameters:\r\n      - name: page\r\n        in: query\r\n        description: Number of the page\r\n        required: false\r\n        style: form\r\n        explode: true\r\n        schema:\r\n          type: integer\r\n          format: int32\r\n          example: 1\r\n      - name: perPage\r\n        in: query\r\n        description: Quantity of items per page\r\n        required: false\r\n        style: form\r\n        explode: true\r\n        schema:\r\n          type: integer\r\n          format: int32\r\n          example: 10\r\n      - name: name\r\n        in: query\r\n        description: Search by name\r\n        required: false\r\n        style: form\r\n        explode: true\r\n        schema:\r\n          type: string\r\n      - name: email\r\n        in: query\r\n        description: Search by email\r\n        required: false\r\n        style: form\r\n        explode: true\r\n        schema:\r\n          type: string\r\n      - name: Authorization\r\n        in: header\r\n        description: ''\r\n        required: true\r\n        style: simple\r\n        schema:\r\n          type: string\r\n          example: '{{jwt}}'\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          headers: {}\r\n      deprecated: false\r\n      security: []\r\n    post:\r\n      tags:\r\n      - Users\r\n      summary: Create User\r\n      description: Register a new user.\r\n      operationId: CreateUser\r\n      parameters: []\r\n      requestBody:\r\n        description: ''\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/CreateUserRequest'\r\n            example:\r\n              name: John User\r\n              email: super.email@host.com\r\n              password: OnePass1\r\n        required: true\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          headers: {}\r\n      deprecated: false\r\n  /api/v1/users/8:\r\n    get:\r\n      tags:\r\n      - Users\r\n      summary: Get One User\r\n      operationId: GetOneUser\r\n      parameters:\r\n      - name: Authorization\r\n        in: header\r\n        description: ''\r\n        required: true\r\n        style: simple\r\n        schema:\r\n          type: string\r\n          example: '{{jwt}}'\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          headers: {}\r\n      deprecated: false\r\n      security: []\r\n  /api/v1/users/12:\r\n    put:\r\n      tags:\r\n      - Users\r\n      summary: Update User\r\n      description: Update a user.\r\n      operationId: UpdateUser\r\n      parameters:\r\n      - name: Authorization\r\n        in: header\r\n        description: ''\r\n        required: true\r\n        style: simple\r\n        schema:\r\n          type: string\r\n          example: '{{jwt}}'\r\n      requestBody:\r\n        description: ''\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/UpdateUserRequest'\r\n            example:\r\n              name: John The User 22\r\n              email: super.email@host.com.br\r\n        required: true\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          headers: {}\r\n      deprecated: false\r\n      security: []\r\n  /api/v1/users/112:\r\n    delete:\r\n      tags:\r\n      - Users\r\n      summary: Delete User\r\n      description: Delete a user.\r\n      operationId: DeleteUser\r\n      parameters:\r\n      - name: Authorization\r\n        in: header\r\n        description: ''\r\n        required: true\r\n        style: simple\r\n        schema:\r\n          type: string\r\n          example: '{{jwt}}'\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          headers: {}\r\n      deprecated: false\r\n      security: []\r\n  /api/v1/tasks:\r\n    get:\r\n      tags:\r\n      - Tasks\r\n      summary: Get All Tasks\r\n      description: Get all tasks of a user.\r\n      operationId: GetAllTasks\r\n      parameters:\r\n      - name: page\r\n        in: query\r\n        description: Number of the page\r\n        required: false\r\n        style: form\r\n        explode: true\r\n        schema:\r\n          type: integer\r\n          format: int32\r\n          example: 1\r\n      - name: perPage\r\n        in: query\r\n        description: Quantity of items per page\r\n        required: false\r\n        style: form\r\n        explode: true\r\n        schema:\r\n          type: integer\r\n          format: int32\r\n          example: 5\r\n      - name: name\r\n        in: query\r\n        description: Search by name\r\n        required: false\r\n        style: form\r\n        explode: true\r\n        schema:\r\n          type: string\r\n      - name: description\r\n        in: query\r\n        description: Search by description\r\n        required: false\r\n        style: form\r\n        explode: true\r\n        schema:\r\n          type: string\r\n      - name: status\r\n        in: query\r\n        description: Search by status\r\n        required: false\r\n        style: form\r\n        explode: true\r\n        schema:\r\n          type: string\r\n      - name: Authorization\r\n        in: header\r\n        description: ''\r\n        required: true\r\n        style: simple\r\n        schema:\r\n          type: string\r\n          example: '{{jwt}}'\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          headers: {}\r\n      deprecated: false\r\n      security: []\r\n    post:\r\n      tags:\r\n      - Tasks\r\n      summary: Create Task\r\n      description: Create a task.\r\n      operationId: CreateTask\r\n      parameters:\r\n      - name: Authorization\r\n        in: header\r\n        description: ''\r\n        required: true\r\n        style: simple\r\n        schema:\r\n          type: string\r\n          example: '{{jwt}}'\r\n      requestBody:\r\n        description: ''\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/CreateTaskRequest'\r\n            example:\r\n              name: Go To Sleep\r\n              description: It's too late, go to sleep man ;-)\r\n              status: 0\r\n        required: true\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          headers: {}\r\n      deprecated: false\r\n      security: []\r\n  /api/v1/tasks/13:\r\n    get:\r\n      tags:\r\n      - Tasks\r\n      summary: Get One Task\r\n      description: Get one task of a user.\r\n      operationId: GetOneTask\r\n      parameters:\r\n      - name: Authorization\r\n        in: header\r\n        description: ''\r\n        required: true\r\n        style: simple\r\n        schema:\r\n          type: string\r\n          example: '{{jwt}}'\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          headers: {}\r\n      deprecated: false\r\n      security: []\r\n  /api/v1/tasks/29:\r\n    put:\r\n      tags:\r\n      - Tasks\r\n      summary: Update Task\r\n      description: Update a task of a user.\r\n      operationId: UpdateTask\r\n      parameters:\r\n      - name: Authorization\r\n        in: header\r\n        description: ''\r\n        required: true\r\n        style: simple\r\n        schema:\r\n          type: string\r\n          example: '{{jwt}}'\r\n      requestBody:\r\n        description: ''\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/UpdateTaskRequest'\r\n            example:\r\n              name: Go To Sleep NOW!!\r\n              description: It's too late, go to sleep man haha...\r\n              status: 1\r\n        required: true\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          headers: {}\r\n      deprecated: false\r\n      security: []\r\n    delete:\r\n      tags:\r\n      - Tasks\r\n      summary: Delete Task\r\n      description: Delete a task of a user.\r\n      operationId: DeleteTask\r\n      parameters:\r\n      - name: Authorization\r\n        in: header\r\n        description: ''\r\n        required: true\r\n        style: simple\r\n        schema:\r\n          type: string\r\n          example: '{{jwt}}'\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          headers: {}\r\n      deprecated: false\r\n      security: []\r\n  /api/v1/notes:\r\n    get:\r\n      tags:\r\n      - Notes\r\n      summary: Get All Notes\r\n      operationId: GetAllNotes\r\n      parameters:\r\n      - name: page\r\n        in: query\r\n        description: Number of the page\r\n        required: false\r\n        style: form\r\n        explode: true\r\n        schema:\r\n          type: integer\r\n          format: int32\r\n          example: 1\r\n      - name: perPage\r\n        in: query\r\n        description: Quantity of items per page\r\n        required: false\r\n        style: form\r\n        explode: true\r\n        schema:\r\n          type: integer\r\n          format: int32\r\n          example: 10\r\n      - name: name\r\n        in: query\r\n        description: Search by name\r\n        required: false\r\n        style: form\r\n        explode: true\r\n        schema:\r\n          type: string\r\n      - name: description\r\n        in: query\r\n        description: Search by description\r\n        required: false\r\n        style: form\r\n        explode: true\r\n        schema:\r\n          type: string\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          headers: {}\r\n      deprecated: false\r\n    post:\r\n      tags:\r\n      - Notes\r\n      summary: Create Note\r\n      operationId: CreateNote\r\n      parameters: []\r\n      requestBody:\r\n        description: ''\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/CreateNoteRequest'\r\n            example:\r\n              name: New Soccer Note\r\n              description: Magic Goal...\r\n        required: true\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          headers: {}\r\n      deprecated: false\r\n  /api/v1/notes/3:\r\n    get:\r\n      tags:\r\n      - Notes\r\n      summary: Get One Note\r\n      operationId: GetOneNote\r\n      parameters: []\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          headers: {}\r\n      deprecated: false\r\n  /api/v1/notes/4:\r\n    put:\r\n      tags:\r\n      - Notes\r\n      summary: Update Note\r\n      operationId: UpdateNote\r\n      parameters: []\r\n      requestBody:\r\n        description: ''\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/UpdateNoteRequest'\r\n            example:\r\n              name: My Note Number 433333\r\n              description: Free Note?!?!?!\r\n        required: true\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          headers: {}\r\n      deprecated: false\r\n  /api/v1/notes/22:\r\n    delete:\r\n      tags:\r\n      - Notes\r\n      summary: Delete Note\r\n      operationId: DeleteNote\r\n      parameters: []\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          headers: {}\r\n      deprecated: false\r\ncomponents:\r\n  schemas:\r\n    GetHelp:\r\n      title: GetHelp\r\n      required:\r\n      - code\r\n      - status\r\n      - message\r\n      type: object\r\n      properties:\r\n        code:\r\n          type: integer\r\n          format: int32\r\n        status:\r\n          type: string\r\n        message:\r\n          $ref: '#/components/schemas/Message'\r\n      example:\r\n        code: 200\r\n        status: success\r\n        message:\r\n          endpoints:\r\n            tasks: http://localhost:8080/api/v1/tasks\r\n            users: http://localhost:8080/api/v1/users\r\n            notes: http://localhost:8080/api/v1/notes\r\n            docs: http://localhost:8080/docs/index.html\r\n            status: http://localhost:8080/status\r\n            this help: http://localhost:8080\r\n          version: 2.13.0\r\n          timestamp: 1624812953\r\n    Message:\r\n      title: Message\r\n      required:\r\n      - endpoints\r\n      - version\r\n      - timestamp\r\n      type: object\r\n      properties:\r\n        endpoints:\r\n          $ref: '#/components/schemas/Endpoints'\r\n        version:\r\n          type: string\r\n        timestamp:\r\n          type: integer\r\n          format: int32\r\n      example:\r\n        endpoints:\r\n          tasks: http://localhost:8080/api/v1/tasks\r\n          users: http://localhost:8080/api/v1/users\r\n          notes: http://localhost:8080/api/v1/notes\r\n          docs: http://localhost:8080/docs/index.html\r\n          status: http://localhost:8080/status\r\n          this help: http://localhost:8080\r\n        version: 2.13.0\r\n        timestamp: 1624812953\r\n    Endpoints:\r\n      title: Endpoints\r\n      required:\r\n      - tasks\r\n      - users\r\n      - notes\r\n      - docs\r\n      - status\r\n      - this help\r\n      type: object\r\n      properties:\r\n        tasks:\r\n          type: string\r\n        users:\r\n          type: string\r\n        notes:\r\n          type: string\r\n        docs:\r\n          type: string\r\n        status:\r\n          type: string\r\n        this help:\r\n          type: string\r\n      example:\r\n        tasks: http://localhost:8080/api/v1/tasks\r\n        users: http://localhost:8080/api/v1/users\r\n        notes: http://localhost:8080/api/v1/notes\r\n        docs: http://localhost:8080/docs/index.html\r\n        status: http://localhost:8080/status\r\n        this help: http://localhost:8080\r\n    GetStatus:\r\n      title: GetStatus\r\n      required:\r\n      - code\r\n      - status\r\n      - message\r\n      type: object\r\n      properties:\r\n        code:\r\n          type: integer\r\n          format: int32\r\n        status:\r\n          type: string\r\n        message:\r\n          $ref: '#/components/schemas/Message1'\r\n      example:\r\n        code: 200\r\n        status: success\r\n        message:\r\n          stats:\r\n            tasks: 8\r\n            users: 42\r\n            notes: 63\r\n          MySQL: OK\r\n          Redis: Disabled\r\n          version: 2.12.0\r\n          timestamp: 1624808196\r\n    Message1:\r\n      title: Message1\r\n      required:\r\n      - stats\r\n      - MySQL\r\n      - Redis\r\n      - version\r\n      - timestamp\r\n      type: object\r\n      properties:\r\n        stats:\r\n          $ref: '#/components/schemas/Stats'\r\n        MySQL:\r\n          type: string\r\n        Redis:\r\n          type: string\r\n        version:\r\n          type: string\r\n        timestamp:\r\n          type: integer\r\n          format: int32\r\n      example:\r\n        stats:\r\n          tasks: 8\r\n          users: 42\r\n          notes: 63\r\n        MySQL: OK\r\n        Redis: Disabled\r\n        version: 2.12.0\r\n        timestamp: 1624808196\r\n    Stats:\r\n      title: Stats\r\n      required:\r\n      - tasks\r\n      - users\r\n      - notes\r\n      type: object\r\n      properties:\r\n        tasks:\r\n          type: integer\r\n          format: int32\r\n        users:\r\n          type: integer\r\n          format: int32\r\n        notes:\r\n          type: integer\r\n          format: int32\r\n      example:\r\n        tasks: 8\r\n        users: 42\r\n        notes: 63\r\n    LoginRequest:\r\n      title: LoginRequest\r\n      required:\r\n      - email\r\n      - password\r\n      type: object\r\n      properties:\r\n        email:\r\n          type: string\r\n        password:\r\n          type: string\r\n      example:\r\n        email: super.email@host.com\r\n        password: OnePass1\r\n    LoginOK:\r\n      title: LoginOK\r\n      required:\r\n      - code\r\n      - status\r\n      - message\r\n      type: object\r\n      properties:\r\n        code:\r\n          type: integer\r\n          format: int32\r\n        status:\r\n          type: string\r\n        message:\r\n          $ref: '#/components/schemas/Message2'\r\n      example:\r\n        code: 200\r\n        status: success\r\n        message:\r\n          Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMSIsImVtYWlsIjoibUBiLmNvbS5hciIsIm5hbWUiOiJNTkIiLCJpYXQiOjE1NTg1NTMwNTIsImV4cCI6MTU1OTE1Nzg1Mn0.OQyICWlGW0oSUB-ANrYL2OJTdC2v0OQQO3RQQ3W_KLo\r\n    Message2:\r\n      title: Message2\r\n      required:\r\n      - Authorization\r\n      type: object\r\n      properties:\r\n        Authorization:\r\n          type: string\r\n      example:\r\n        Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMSIsImVtYWlsIjoibUBiLmNvbS5hciIsIm5hbWUiOiJNTkIiLCJpYXQiOjE1NTg1NTMwNTIsImV4cCI6MTU1OTE1Nzg1Mn0.OQyICWlGW0oSUB-ANrYL2OJTdC2v0OQQO3RQQ3W_KLo\r\n    LoginFailed1:\r\n      title: LoginFailed1\r\n      required:\r\n      - message\r\n      - class\r\n      - status\r\n      - code\r\n      type: object\r\n      properties:\r\n        message:\r\n          type: string\r\n        class:\r\n          type: string\r\n        status:\r\n          type: string\r\n        code:\r\n          type: integer\r\n          format: int32\r\n      example:\r\n        message: 'Login failed: Email or password incorrect.'\r\n        class: UserException\r\n        status: error\r\n        code: 400\r\n    CreateUserRequest:\r\n      title: CreateUserRequest\r\n      required:\r\n      - name\r\n      - email\r\n      - password\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        email:\r\n          type: string\r\n        password:\r\n          type: string\r\n      example:\r\n        name: John User\r\n        email: super.email@host.com\r\n        password: OnePass1\r\n    UpdateUserRequest:\r\n      title: UpdateUserRequest\r\n      required:\r\n      - name\r\n      - email\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        email:\r\n          type: string\r\n      example:\r\n        name: John The User 22\r\n        email: super.email@host.com.br\r\n    CreateTaskRequest:\r\n      title: CreateTaskRequest\r\n      required:\r\n      - name\r\n      - description\r\n      - status\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n        status:\r\n          type: integer\r\n          format: int32\r\n      example:\r\n        name: Go To Sleep\r\n        description: It's too late, go to sleep man ;-)\r\n        status: 0\r\n    UpdateTaskRequest:\r\n      title: UpdateTaskRequest\r\n      required:\r\n      - name\r\n      - description\r\n      - status\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n        status:\r\n          type: integer\r\n          format: int32\r\n      example:\r\n        name: Go To Sleep NOW!!\r\n        description: It's too late, go to sleep man haha...\r\n        status: 1\r\n    CreateNoteRequest:\r\n      title: CreateNoteRequest\r\n      required:\r\n      - name\r\n      - description\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n      example:\r\n        name: New Soccer Note\r\n        description: Magic Goal...\r\n    UpdateNoteRequest:\r\n      title: UpdateNoteRequest\r\n      required:\r\n      - name\r\n      - description\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n      example:\r\n        name: My Note Number 433333\r\n        description: Free Note?!?!?!\r\ntags:\r\n- name: Info\r\n  description: Get information about API.\r\n- name: Login\r\n- name: Users\r\n  description: Manage Users.\r\n- name: Tasks\r\n  description: Manage Tasks.\r\n- name: Notes\r\n  description: Manage Notes.\r\n",
			"canonicalURL": "/github.com/maurobonfietti/rest-api-slim-php@6f267a67ef2a4334bf2593c6131fcb7b680979a2/-/blob/public/docs/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/maurobonfietti/rest-api-slim-php/blob/6f267a67ef2a4334bf2593c6131fcb7b680979a2/public/docs/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: \"Content-Length\": \"text/plain\": parameter content encoding not implemented",
	"NotImplemented": [
		"parameter content encoding"
	]
}