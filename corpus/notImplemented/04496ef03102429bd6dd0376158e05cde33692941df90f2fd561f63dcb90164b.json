{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/phoenixnap/go-sdk-bmc"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "tagapi/api/openapi.yaml",
			"byteSize": 16086,
			"content": "openapi: 3.0.3\ninfo:\n  contact:\n    email: support@phoenixnap.com\n    name: PhoenixNAP Team\n    url: https://phoenixnap.com/\n  description: |\n    Tags are case-sensitive key-value pairs that simplify resource management. The Tag Manager API allows you to create\n    and manage such tags to later assign them to related resources in your Bare Metal Cloud (through the respective\n    resource apis) in order to group and categorize them.\u003cbr\u003e\n    \u003cbr\u003e\n    \u003cspan class='pnap-api-knowledge-base-link'\u003e\n    Knowledge base articles to help you can be found\n    \u003ca href='https://phoenixnap.com/kb/bmc-server-management-via-api#server-tag-manager-api' target='_blank'\u003ehere\u003c/a\u003e\n    \u003c/span\u003e\u003cbr\u003e\n    \u003cbr\u003e\n    \u003cb\u003eAll URLs are relative to (https://api.phoenixnap.com/tag-manager/v1/)\u003c/b\u003e\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  termsOfService: https://phoenixnap.com/infrastructure-solutions/legal-it/privacy-shield-compliant-privacy-policy\n  title: Tags API\n  version: \"1.0\"\nservers:\n- url: https://api.phoenixnap.com/tag-manager/v1\nsecurity:\n- OAuth2:\n  - tags\n  - tags.read\ntags:\n- description: Tag operations\n  name: Tags\npaths:\n  /tags:\n    get:\n      description: Retrieve all tags belonging to the BMC Account.\n      operationId: tagsGet\n      parameters:\n      - description: Query a tag by its name.\n        example: env\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Tag'\n                type: array\n          description: Tags list.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed due to invalid credentials. Please check\n            the provided credentials and try again.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed since this resource cannot be accessed by\n            the provided credentials.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The server encountered an unexpected condition that prevented\n            it from fulfilling the request.\n      security:\n      - OAuth2:\n        - tags.read\n      summary: List tags.\n      tags:\n      - Tags\n    post:\n      description: Create a tag with the provided information.\n      operationId: tagsPost\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TagCreate'\n        description: The body containing the tag details.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: Tag created.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed due to wrong data. Please check the provided\n            parameters and try again.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed due to invalid credentials. Please check\n            the provided credentials and try again.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed since this resource cannot be accessed by\n            the provided credentials.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed since a tag with the given name already\n            exists.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The server encountered an unexpected condition that prevented\n            it from fulfilling the request.\n      security:\n      - OAuth2:\n        - tags\n      summary: Create a Tag.\n      tags:\n      - Tags\n  /tags/{tagId}:\n    delete:\n      description: Delete the tag with the given ID.\n      operationId: tagsTagIdDelete\n      parameters:\n      - description: The tag's ID.\n        example: e6afba51-7de8-4080-83ab-0f915570659c\n        explode: false\n        in: path\n        name: tagId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteResult'\n          description: Tag deleted.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed due to invalid credentials. Please check\n            the provided credentials and try again.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed since this resource cannot be accessed by\n            the provided credentials.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The server encountered an unexpected condition that prevented\n            it from fulfilling the request.\n      security:\n      - OAuth2:\n        - tags\n      summary: Delete a Tag.\n      tags:\n      - Tags\n    get:\n      description: Retrieve the tag with the given ID\n      operationId: tagsTagIdGet\n      parameters:\n      - description: The tag's ID.\n        example: e6afba51-7de8-4080-83ab-0f915570659c\n        explode: false\n        in: path\n        name: tagId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: Specific Tag details.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed due to invalid credentials. Please check\n            the provided credentials and try again.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed since this resource cannot be accessed by\n            the provided credentials.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The server encountered an unexpected condition that prevented\n            it from fulfilling the request.\n      security:\n      - OAuth2:\n        - tags.read\n      summary: Get a Tag.\n      tags:\n      - Tags\n    patch:\n      description: Updates the tag with the given ID.\n      operationId: tagsTagIdPatch\n      parameters:\n      - description: The tag's ID.\n        example: e6afba51-7de8-4080-83ab-0f915570659c\n        explode: false\n        in: path\n        name: tagId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TagUpdate'\n        description: The body containing the tag changes.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: Tag partially updated.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed due to invalid credentials. Please check\n            the provided credentials and try again.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed since this resource cannot be accessed by\n            the provided credentials.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed since a tag with the given name already\n            exists.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The server encountered an unexpected condition that prevented\n            it from fulfilling the request.\n      security:\n      - OAuth2:\n        - tags\n      summary: Modify a Tag.\n      tags:\n      - Tags\ncomponents:\n  responses:\n    BadRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The request failed due to wrong data. Please check the provided\n        parameters and try again.\n    Unauthorized:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The request failed due to invalid credentials. Please check the\n        provided credentials and try again.\n    Forbidden:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The request failed since this resource cannot be accessed by the\n        provided credentials.\n    Conflict:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The request failed since a tag with the given name already exists.\n    InternalServerError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The server encountered an unexpected condition that prevented it\n        from fulfilling the request.\n  schemas:\n    Tag:\n      description: Tag model.\n      example:\n        createdBy: USER\n        values: \"[DEV, PROD]\"\n        name: Environment\n        description: This tag is used for all resources that need to be assigned to\n          an environment.\n        id: 60ffafcdffb8b074c7968dad\n        isBillingTag: true\n        resourceAssignments:\n        - resourceName: /bmc/servers/60ffafcdffb8b074c7968dad\n          value: DEV\n        - resourceName: /bmc/servers/60ffafcdffb8b074c7968dad\n          value: DEV\n      properties:\n        id:\n          description: The unique id of the tag.\n          example: 60ffafcdffb8b074c7968dad\n          type: string\n        name:\n          description: The name of the tag.\n          example: Environment\n          type: string\n        values:\n          description: The optional values of the tag.\n          example: \"[DEV, PROD]\"\n          items:\n            type: string\n          type: array\n        description:\n          description: The description of the tag.\n          example: This tag is used for all resources that need to be assigned to\n            an environment.\n          type: string\n        isBillingTag:\n          description: Whether or not to show the tag as part of billing and invoices.\n          example: true\n          type: boolean\n        resourceAssignments:\n          description: The tag's assigned resources.\n          items:\n            $ref: '#/components/schemas/ResourceAssignment'\n          type: array\n        createdBy:\n          default: USER\n          description: The tag's creator.\n          enum:\n          - USER\n          - SYSTEM\n          type: string\n      required:\n      - id\n      - isBillingTag\n      - name\n      type: object\n    TagCreate:\n      description: Tag creation model.\n      example:\n        name: Environment\n        description: This tag is used for all resources that need to be assigned to\n          an environment.\n        isBillingTag: true\n      properties:\n        name:\n          description: \"The unique name of the tag. Tag names are case-sensitive,\\\n            \\ and should be composed of a maximum of 100 characters including UTF-8\\\n            \\ Unicode letters, numbers, and the following symbols: '-', '_'. Regex:\\\n            \\ [A-zÀ-ú0-9_-]{1,100}\"\n          example: Environment\n          type: string\n        description:\n          description: The description of the tag.\n          example: This tag is used for all resources that need to be assigned to\n            an environment.\n          type: string\n        isBillingTag:\n          description: Whether or not to show the tag as part of billing and invoices.\n          example: true\n          type: boolean\n      required:\n      - isBillingTag\n      - name\n      type: object\n    TagUpdate:\n      description: Tag update model.\n      example:\n        name: Environment\n        description: This tag is used for all resources that need to be assigned to\n          an environment.\n        isBillingTag: true\n      properties:\n        name:\n          description: \"The unique name of the tag. Tag names are case-sensitive,\\\n            \\ and should be composed of a maximum of 100 characters including UTF-8\\\n            \\ Unicode letters, numbers, and the following symbols: '-', '_'. Regex:\\\n            \\ [A-zÀ-ú0-9_-]{1,100}\"\n          example: Environment\n          type: string\n        description:\n          description: The description of the tag.\n          example: This tag is used for all resources that need to be assigned to\n            an environment.\n          type: string\n        isBillingTag:\n          description: Whether or not to show the tag as part of billing and invoices.\n          example: true\n          type: boolean\n      required:\n      - isBillingTag\n      - name\n      type: object\n    DeleteResult:\n      description: Result of a successful delete action.\n      example:\n        result: \"Tag [tag-name] has been deleted.\"\n        tagId: 60ffafcdffb8b074c7968dad\n      properties:\n        result:\n          description: Tag deletion result message.\n          example: \"Tag [tag-name] has been deleted.\"\n          type: string\n        tagId:\n          description: The unique identifier of the tag.\n          example: 60ffafcdffb8b074c7968dad\n          type: string\n      required:\n      - result\n      - tagId\n      type: object\n    ResourceAssignment:\n      description: Resource assigned to a tag.\n      example:\n        resourceName: /bmc/servers/60ffafcdffb8b074c7968dad\n        value: DEV\n      properties:\n        resourceName:\n          description: The resource name.\n          example: /bmc/servers/60ffafcdffb8b074c7968dad\n          type: string\n        value:\n          description: The value of the tag assigned to the resource.\n          example: DEV\n          type: string\n      required:\n      - resourceName\n      type: object\n    Error:\n      properties:\n        message:\n          description: The description detailing the cause of the error code.\n          type: string\n        validationErrors:\n          description: \"Validation errors, if any.\"\n          items:\n            type: string\n          type: array\n      required:\n      - message\n      type: object\n  securitySchemes:\n    OAuth2:\n      flows:\n        clientCredentials:\n          scopes:\n            tags: Grants full access to tags-api.\n            tags.read: Grants read only access to tags-api.\n          tokenUrl: https://auth.phoenixnap.com/auth/realms/BMC/protocol/openid-connect/token\n      type: oauth2\n",
			"canonicalURL": "/github.com/phoenixnap/go-sdk-bmc@58d897ca3c3aa5afd9d2f560a9708099a44fab17/-/blob/tagapi/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/phoenixnap/go-sdk-bmc/blob/58d897ca3c3aa5afd9d2f560a9708099a44fab17/tagapi/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/tags\": get: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}