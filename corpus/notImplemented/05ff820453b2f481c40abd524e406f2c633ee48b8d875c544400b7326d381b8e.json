{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kmmanoj96/vulnerable-apis"
		},
		"file": {
			"name": "openAPISpecBank.yaml",
			"size": 0,
			"path": "openAPISpecBank.yaml",
			"byteSize": 6015,
			"content": "openapi: 3.0.0\ninfo:\n  title: The Good Bank APIs\n  version: 1.0.0\nservers:\n  - url: http://security.postman-breakable.com\ntags:\n  - name: Health\n  - name: Bank User\n    description: This folder contains APIs to manage users of The Good Bank.\n  - name: Bank User \u003e Authentication\n  - name: Bank Account\n    description: \u003e-\n      This folder contains the APIs that deals with user account and\n      transactions.\n  - name: Bank Admin\n    description: \u003e-\n      This folder contains APIs used by bank administration. To provide support\n      to customer in case of an issue.\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header     \n      name: X-API-key\npaths:\n  /:\n    get:\n      tags:\n        - Health\n      summary: Ping\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /user:\n    put:\n      tags:\n        - Bank User \u003e Authentication\n      summary: Update User Information\n      description: Authenticated users can update their user information.\n      security:\n        - ApiKeyAuth: []   \n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                email_id: kmmanoj96@gulbank.com\n                phone: +91 9876543210\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n    post:\n      tags:\n        - Bank User\n      summary: Create User\n      description: Register a new user with The Good Bank. The username must be unique.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                username: kmmanoj96001\n                password: kmmanoj96001pass\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /user/change-password:\n    post:\n      tags:\n        - Bank User \u003e Authentication\n      summary: User Change Password\n      description: \u003e-\n        This API is used to update the user password. The user must be\n        authenticated and must remember the current password to update.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                username: ''\n                old_password: ''\n                new_password: ''\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /user/logout:\n    get:\n      tags:\n        - Bank User \u003e Authentication\n      summary: User Logout\n      description: This API revokes an active user session.\n      security:\n        - ApiKeyAuth: []\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /user/login:\n    post:\n      tags:\n        - Bank User\n      summary: User Login\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                username: kmmanoj96001\n                password: kmmanoj96001pass\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /account/{user_id}/summary:\n    get:\n      tags:\n        - Bank Account\n      summary: Account summary\n      description: Fetch account summary for a single user.\n      parameters:\n        - name: user_id\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /account/transactions:\n    get:\n      tags:\n        - Bank Account\n      summary: Account transactions\n      description: Fetch transactions for a single account.\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: limit\n          in: query\n          schema:\n            type: integer\n          description: number of transactions to display\n          example: '10'\n        - name: filter\n          in: query\n          schema:\n            type: string\n          description: Search string to filter on transaction party\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /people/customers:\n    get:\n      tags:\n        - Bank Admin\n      summary: Our customers\n      security:\n        - ApiKeyAuth: []\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /admin/credit:\n    post:\n      tags:\n        - Bank Admin\n      summary: Credit amount\n      description: \u003e-\n        To be used by the bank tellers to cash checks, receive deposits, savings\n        account transactions among other things.\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                user_id: user-id\n                transaction_party: nowhere\n                transaction_amount: 100\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /admin/debit:\n    post:\n      tags:\n        - Bank Admin\n      summary: Debit amount\n      description: \u003e-\n        To be used by the bank tellers to cash checks, receive deposits, savings\n        account transactions among other things.\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                user_id: user-id\n                transaction_party: somwhere\n                transaction_amount: 100\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n",
			"canonicalURL": "/github.com/kmmanoj96/vulnerable-apis@8142fb985802efbcda1278fd7e215f033fe4806f/-/blob/openAPISpecBank.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kmmanoj96/vulnerable-apis/blob/8142fb985802efbcda1278fd7e215f033fe4806f/openAPISpecBank.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/user\": put: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}