{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eclipse-dataspaceconnector/DataSpaceConnector"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "resources/openapi/openapi.yaml",
			"byteSize": 32330,
			"content": "openapi: 3.0.1\ninfo:\n  title: EDC REST API\n  description: All files merged by open api merger\n  license:\n    name: Apache License v2.0\n    url: http://apache.org/v2\n  version: 1.0.0-SNAPSHOT\nservers:\n- url: /\npaths:\n  /federatedcatalog:\n    post:\n      operationId: getCachedCatalog\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FederatedCatalogCacheQuery'\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ContractOffer'\n  /instances:\n    get:\n      tags:\n      - Dataplane Selector\n      operationId: getAll\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DataPlaneInstance'\n    post:\n      tags:\n      - Dataplane Selector\n      operationId: addEntry\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataPlaneInstance'\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /instances/select:\n    post:\n      tags:\n      - Dataplane Selector\n      operationId: find\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SelectionRequest'\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataPlaneInstance'\n  /policies:\n    get:\n      tags:\n      - Policy\n      operationId: getAllPolicies\n      parameters:\n      - name: offset\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: filter\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: sort\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - ASC\n          - DESC\n      - name: sortField\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Policy'\n    post:\n      tags:\n      - Policy\n      operationId: createPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Policy'\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /policies/{id}:\n    get:\n      tags:\n      - Policy\n      operationId: getPolicy\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n    delete:\n      tags:\n      - Policy\n      operationId: deletePolicy\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /check/health:\n    get:\n      tags:\n      - Application Observability\n      operationId: checkHealth\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /check/liveness:\n    get:\n      tags:\n      - Application Observability\n      operationId: getLiveness\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /check/readiness:\n    get:\n      tags:\n      - Application Observability\n      operationId: getReadiness\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /check/startup:\n    get:\n      tags:\n      - Application Observability\n      operationId: getStartup\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /contractnegotiations:\n    get:\n      tags:\n      - Contract Negotiation\n      operationId: getNegotiations\n      parameters:\n      - name: offset\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: filter\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: sort\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - ASC\n          - DESC\n      - name: sortField\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ContractNegotiationDto'\n    post:\n      tags:\n      - Contract Negotiation\n      operationId: initiateContractNegotiation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NegotiationInitiateRequestDto'\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NegotiationId'\n  /contractnegotiations/{id}:\n    get:\n      tags:\n      - Contract Negotiation\n      operationId: getNegotiation\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractNegotiationDto'\n  /contractnegotiations/{id}/agreement:\n    get:\n      tags:\n      - Contract Negotiation\n      operationId: getAgreementForNegotiation\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractAgreementDto'\n  /contractnegotiations/{id}/cancel:\n    post:\n      tags:\n      - Contract Negotiation\n      operationId: cancelNegotiation\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /contractnegotiations/{id}/decline:\n    post:\n      tags:\n      - Contract Negotiation\n      operationId: declineNegotiation\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /contractnegotiations/{id}/state:\n    get:\n      tags:\n      - Contract Negotiation\n      operationId: getNegotiationState\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NegotiationState'\n  /transferprocess:\n    get:\n      tags:\n      - Transfer Process\n      operationId: getAllTransferProcesses\n      parameters:\n      - name: offset\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: filter\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: sort\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - ASC\n          - DESC\n      - name: sortField\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TransferProcessDto'\n    post:\n      tags:\n      - Transfer Process\n      operationId: initiateTransfer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransferRequestDto'\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransferId'\n  /transferprocess/{id}:\n    get:\n      tags:\n      - Transfer Process\n      operationId: getTransferProcess\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransferProcessDto'\n  /transferprocess/{id}/cancel:\n    post:\n      tags:\n      - Transfer Process\n      operationId: cancelTransferProcess\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /transferprocess/{id}/deprovision:\n    post:\n      tags:\n      - Transfer Process\n      operationId: deprovisionTransferProcess\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /transferprocess/{id}/state:\n    get:\n      tags:\n      - Transfer Process\n      operationId: getTransferProcessState\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransferState'\n  /contractdefinitions:\n    get:\n      tags:\n      - Contract Definition\n      operationId: getAllContractDefinitions\n      parameters:\n      - name: offset\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: filter\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: sort\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - ASC\n          - DESC\n      - name: sortField\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ContractDefinitionDto'\n    post:\n      tags:\n      - Contract Definition\n      operationId: createContractDefinition\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/ContractDefinitionDto'\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /contractdefinitions/{id}:\n    get:\n      tags:\n      - Contract Definition\n      operationId: getContractDefinition\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractDefinitionDto'\n    delete:\n      tags:\n      - Contract Definition\n      operationId: deleteContractDefinition\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /identity-hub/collections:\n    post:\n      tags:\n      - Identity Hub\n      operationId: write\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: string\n  /identity-hub/collections-commit:\n    post:\n      tags:\n      - Identity Hub\n      operationId: writeCommit\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties:\n                type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /identity-hub/query-commits:\n    post:\n      tags:\n      - Identity Hub\n      operationId: queryCommits\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: string\n  /identity-hub/query-objects:\n    post:\n      tags:\n      - Identity Hub\n      operationId: queryObjects\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: string\n  /assets:\n    get:\n      tags:\n      - Asset\n      operationId: getAllAssets\n      parameters:\n      - name: offset\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: filter\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: sort\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - ASC\n          - DESC\n      - name: sortField\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AssetDto'\n    post:\n      tags:\n      - Asset\n      operationId: createAsset\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AssetEntryDto'\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /assets/{id}:\n    get:\n      tags:\n      - Asset\n      operationId: getAsset\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssetDto'\n    delete:\n      tags:\n      - Asset\n      operationId: removeAsset\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /contractagreements:\n    get:\n      tags:\n      - Contract Agreement\n      operationId: getAllAgreements\n      parameters:\n      - name: offset\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: filter\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: sort\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - ASC\n          - DESC\n      - name: sortField\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ContractAgreementDto'\n  /contractagreements/{id}:\n    get:\n      tags:\n      - Contract Agreement\n      operationId: getContractAgreement\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractAgreementDto'\n  /callback/{processId}/deprovision:\n    post:\n      tags:\n      - HTTP Provisioner Webhook\n      operationId: callDeprovisionWebhook\n      parameters:\n      - name: processId\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeprovisionedResource'\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /callback/{processId}/provision:\n    post:\n      tags:\n      - HTTP Provisioner Webhook\n      operationId: callProvisionWebhook\n      parameters:\n      - name: processId\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProvisionerWebhookRequest'\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /catalog:\n    get:\n      tags:\n      - Catalog\n      operationId: getCatalog\n      parameters:\n      - name: providerUrl\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: Gets contract offers (=catalog) of a single connector\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Catalog'\ncomponents:\n  schemas:\n    Action:\n      type: object\n      properties:\n        constraint:\n          $ref: '#/components/schemas/Constraint'\n        includedIn:\n          type: string\n        type:\n          type: string\n    Asset:\n      type: object\n      properties:\n        properties:\n          type: object\n          additionalProperties:\n            type: object\n    AssetDto:\n      required:\n      - properties\n      type: object\n      properties:\n        properties:\n          type: object\n          additionalProperties:\n            type: object\n    AssetEntryDto:\n      required:\n      - asset\n      - dataAddress\n      type: object\n      properties:\n        asset:\n          $ref: '#/components/schemas/AssetDto'\n        dataAddress:\n          $ref: '#/components/schemas/DataAddressDto'\n    Catalog:\n      type: object\n      properties:\n        contractOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContractOffer'\n        id:\n          type: string\n    Constraint:\n      required:\n      - edctype\n      type: object\n      properties:\n        edctype:\n          type: string\n      discriminator:\n        propertyName: edctype\n    ContractAgreementDto:\n      type: object\n      properties:\n        assetId:\n          type: string\n        consumerAgentId:\n          type: string\n        contractEndDate:\n          type: integer\n          format: int64\n        contractSigningDate:\n          type: integer\n          format: int64\n        contractStartDate:\n          type: integer\n          format: int64\n        id:\n          type: string\n        policyId:\n          type: string\n        providerAgentId:\n          type: string\n    ContractDefinitionDto:\n      required:\n      - accessPolicyId\n      - contractPolicyId\n      - criteria\n      - id\n      type: object\n      properties:\n        accessPolicyId:\n          type: string\n        contractPolicyId:\n          type: string\n        criteria:\n          type: array\n          items:\n            $ref: '#/components/schemas/Criterion'\n        id:\n          type: string\n    ContractNegotiationDto:\n      type: object\n      properties:\n        contractAgreementId:\n          type: string\n        counterPartyAddress:\n          type: string\n        errorDetail:\n          type: string\n        id:\n          type: string\n        protocol:\n          type: string\n        state:\n          type: string\n        type:\n          type: string\n          enum:\n          - CONSUMER\n          - PROVIDER\n    ContractOffer:\n      type: object\n      properties:\n        asset:\n          $ref: '#/components/schemas/Asset'\n        assetId:\n          type: string\n        consumer:\n          type: string\n          format: uri\n        contractEnd:\n          type: string\n          format: date-time\n        contractStart:\n          type: string\n          format: date-time\n        id:\n          type: string\n        offerEnd:\n          type: string\n          format: date-time\n        offerStart:\n          type: string\n          format: date-time\n        policy:\n          $ref: '#/components/schemas/Policy'\n        policyId:\n          type: string\n        provider:\n          type: string\n          format: uri\n    ContractOfferDescription:\n      required:\n      - assetId\n      - offerId\n      type: object\n      properties:\n        assetId:\n          type: string\n        offerId:\n          type: string\n        policy:\n          $ref: '#/components/schemas/Policy'\n        policyId:\n          type: string\n    Criterion:\n      type: object\n      properties:\n        left:\n          type: object\n        op:\n          type: string\n        right:\n          type: object\n    DataAddress:\n      type: object\n      properties:\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n    DataAddressDto:\n      type: object\n      properties:\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n    DataAddressInformationDto:\n      type: object\n      properties:\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n    DataPlaneInstance:\n      type: object\n      properties:\n        id:\n          type: string\n        lastActive:\n          type: integer\n          format: int64\n        properties:\n          type: object\n          additionalProperties:\n            type: object\n        turnCount:\n          type: integer\n          format: int32\n        url:\n          type: string\n          format: url\n    DataRequestDto:\n      type: object\n      properties:\n        assetId:\n          type: string\n        connectorId:\n          type: string\n        contractId:\n          type: string\n    DeprovisionedResource:\n      type: object\n      properties:\n        error:\n          type: boolean\n        errorMessage:\n          type: string\n        inProcess:\n          type: boolean\n        provisionedResourceId:\n          type: string\n    Duty:\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/Action'\n        assignee:\n          type: string\n        assigner:\n          type: string\n        consequence:\n          $ref: '#/components/schemas/Duty'\n        constraints:\n          type: array\n          items:\n            $ref: '#/components/schemas/Constraint'\n        parentPermission:\n          $ref: '#/components/schemas/Permission'\n        target:\n          type: string\n        uid:\n          type: string\n    FederatedCatalogCacheQuery:\n      type: object\n      properties:\n        criteria:\n          type: array\n          items:\n            $ref: '#/components/schemas/Criterion'\n    NegotiationId:\n      type: object\n      properties:\n        id:\n          type: string\n    NegotiationInitiateRequestDto:\n      required:\n      - connectorAddress\n      - connectorId\n      - offer\n      - protocol\n      type: object\n      properties:\n        connectorAddress:\n          type: string\n        connectorId:\n          type: string\n        offer:\n          $ref: '#/components/schemas/ContractOfferDescription'\n        protocol:\n          type: string\n    NegotiationState:\n      type: object\n      properties:\n        state:\n          type: string\n    Permission:\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/Action'\n        assignee:\n          type: string\n        assigner:\n          type: string\n        constraints:\n          type: array\n          items:\n            $ref: '#/components/schemas/Constraint'\n        duties:\n          type: array\n          items:\n            $ref: '#/components/schemas/Duty'\n        target:\n          type: string\n        uid:\n          type: string\n    Policy:\n      type: object\n      properties:\n        '@type':\n          type: string\n          enum:\n          - SET\n          - OFFER\n          - CONTRACT\n        assignee:\n          type: string\n        assigner:\n          type: string\n        extensibleProperties:\n          type: object\n          additionalProperties:\n            type: object\n        inheritsFrom:\n          type: string\n        obligations:\n          type: array\n          items:\n            $ref: '#/components/schemas/Duty'\n        permissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Permission'\n        prohibitions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Prohibition'\n        target:\n          type: string\n        uid:\n          type: string\n    Prohibition:\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/Action'\n        assignee:\n          type: string\n        assigner:\n          type: string\n        constraints:\n          type: array\n          items:\n            $ref: '#/components/schemas/Constraint'\n        target:\n          type: string\n        uid:\n          type: string\n    ProvisionerWebhookRequest:\n      required:\n      - assetId\n      - contentDataAddress\n      - resourceDefinitionId\n      - resourceName\n      type: object\n      properties:\n        apiToken:\n          type: string\n        assetId:\n          type: string\n        contentDataAddress:\n          $ref: '#/components/schemas/DataAddress'\n        hasToken:\n          type: boolean\n        resourceDefinitionId:\n          type: string\n        resourceName:\n          type: string\n    SelectionRequest:\n      type: object\n      properties:\n        destination:\n          $ref: '#/components/schemas/DataAddress'\n        source:\n          $ref: '#/components/schemas/DataAddress'\n        strategy:\n          type: string\n    TransferId:\n      type: object\n      properties:\n        id:\n          type: string\n    TransferProcessDto:\n      type: object\n      properties:\n        createdTimestamp:\n          type: integer\n          format: int64\n        dataDestination:\n          $ref: '#/components/schemas/DataAddressInformationDto'\n        dataRequest:\n          $ref: '#/components/schemas/DataRequestDto'\n        errorDetail:\n          type: string\n        id:\n          type: string\n        state:\n          type: string\n        stateTimestamp:\n          type: integer\n          format: int64\n        type:\n          type: string\n    TransferRequestDto:\n      required:\n      - assetId\n      - connectorAddress\n      - connectorId\n      - contractId\n      - dataDestination\n      - id\n      - protocol\n      - transferType\n      type: object\n      properties:\n        assetId:\n          type: string\n        connectorAddress:\n          type: string\n        connectorId:\n          type: string\n        contractId:\n          type: string\n        dataDestination:\n          $ref: '#/components/schemas/DataAddress'\n        id:\n          type: string\n        managedResources:\n          type: boolean\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n        protocol:\n          type: string\n        transferType:\n          $ref: '#/components/schemas/TransferType'\n    TransferState:\n      type: object\n      properties:\n        state:\n          type: string\n    TransferType:\n      type: object\n      properties:\n        contentType:\n          type: string\n        isFinite:\n          type: boolean\n",
			"canonicalURL": "/github.com/eclipse-dataspaceconnector/DataSpaceConnector@fb4dd6757031c256573696e1c63e9ec98f53eb6f/-/blob/resources/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/eclipse-dataspaceconnector/DataSpaceConnector/blob/fb4dd6757031c256573696e1c63e9ec98f53eb6f/resources/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/check/health\": get: responses: default: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema",
		"unsupported content types"
	]
}