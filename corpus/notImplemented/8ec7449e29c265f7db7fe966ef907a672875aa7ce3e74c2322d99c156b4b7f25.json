{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apache/airflow-site"
		},
		"file": {
			"name": "v1.yaml",
			"size": 0,
			"path": "docs-archive/apache-airflow/2.3.1/_specs/v1.yaml",
			"byteSize": 124185,
			"content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n---\nopenapi: 3.0.3\n\ninfo:\n  title: \"Airflow API (Stable)\"\n  description: |\n    # Overview\n\n    To facilitate management, Apache Airflow supports a range of REST API endpoints across its\n    objects.\n    This section provides an overview of the API design, methods, and supported use cases.\n\n    Most of the endpoints accept `JSON` as input and return `JSON` responses.\n    This means that you must usually add the following headers to your request:\n    ```\n    Content-type: application/json\n    Accept: application/json\n    ```\n\n    ## Resources\n\n    The term `resource` refers to a single type of object in the Airflow metadata. An API is broken up by its\n    endpoint's corresponding resource.\n    The name of a resource is typically plural and expressed in camelCase. Example: `dagRuns`.\n\n    Resource names are used as part of endpoint URLs, as well as in API parameters and responses.\n\n    ## CRUD Operations\n\n    The platform supports **C**reate, **R**ead, **U**pdate, and **D**elete operations on most resources.\n    You can review the standards for these operations and their standard parameters below.\n\n    Some endpoints have special behavior as exceptions.\n\n    ### Create\n\n    To create a resource, you typically submit an HTTP `POST` request with the resource's required metadata\n    in the request body.\n    The response returns a `201 Created` response code upon success with the resource's metadata, including\n    its internal `id`, in the response body.\n\n    ### Read\n\n    The HTTP `GET` request can be used to read a resource or to list a number of resources.\n\n    A resource's `id` can be submitted in the request parameters to read a specific resource.\n    The response usually returns a `200 OK` response code upon success, with the resource's metadata in\n    the response body.\n\n    If a `GET` request does not include a specific resource `id`, it is treated as a list request.\n    The response usually returns a `200 OK` response code upon success, with an object containing a list\n    of resources' metadata in the response body.\n\n    When reading resources, some common query parameters are usually available. e.g.:\n    ```\n    v1/connections?limit=25\u0026offset=25\n    ```\n\n    |Query Parameter|Type|Description|\n    |---------------|----|-----------|\n    |limit|integer|Maximum number of objects to fetch. Usually 25 by default|\n    |offset|integer|Offset after which to start returning objects. For use with limit query parameter.|\n\n    ### Update\n\n    Updating a resource requires the resource `id`, and is typically done using an HTTP `PATCH` request,\n    with the fields to modify in the request body.\n    The response usually returns a `200 OK` response code upon success, with information about the modified\n    resource in the response body.\n\n    ### Delete\n\n    Deleting a resource requires the resource `id` and is typically executing via an HTTP `DELETE` request.\n    The response usually returns a `204 No Content` response code upon success.\n\n    ## Conventions\n\n    - Resource names are plural and expressed in camelCase.\n    - Names are consistent between URL parameter name and field name.\n\n    - Field names are in snake_case.\n    ```json\n    {\n        \"name\": \"string\",\n        \"slots\": 0,\n        \"occupied_slots\": 0,\n        \"used_slots\": 0,\n        \"queued_slots\": 0,\n        \"open_slots\": 0\n    }\n    ```\n\n    ### Update Mask\n\n    Update mask is available as a query parameter in patch endpoints. It is used to notify the\n    API which fields you want to update. Using `update_mask` makes it easier to update objects\n    by helping the server know which fields to update in an object instead of updating all fields.\n    The update request ignores any fields that aren't specified in the field mask, leaving them with\n    their current values.\n\n    Example:\n    ```\n      resource = request.get('/resource/my-id').json()\n      resource['my_field'] = 'new-value'\n      request.patch('/resource/my-id?update_mask=my_field', data=json.dumps(resource))\n    ```\n\n    ## Versioning and Endpoint Lifecycle\n\n    - API versioning is not synchronized to specific releases of the Apache Airflow.\n    - APIs are designed to be backward compatible.\n    - Any changes to the API will first go through a deprecation phase.\n\n    # Trying the API\n\n    You can use a third party client, such as [curl](https://curl.haxx.se/), [HTTPie](https://httpie.org/),\n    [Postman](https://www.postman.com/) or [the Insomnia rest client](https://insomnia.rest/) to test\n    the Apache Airflow API.\n\n    Note that you will need to pass credentials data.\n\n    For e.g., here is how to pause a DAG with [curl](https://curl.haxx.se/), when basic authorization is used:\n    ```bash\n    curl -X PATCH 'https://example.com/api/v1/dags/{dag_id}?update_mask=is_paused' \\\n    -H 'Content-Type: application/json' \\\n    --user \"username:password\" \\\n    -d '{\n        \"is_paused\": true\n    }'\n    ```\n\n    Using a graphical tool such as [Postman](https://www.postman.com/) or [Insomnia](https://insomnia.rest/),\n    it is possible to import the API specifications directly:\n\n    1. Download the API specification by clicking the **Download** button at top of this document\n    2. Import the JSON specification in the graphical tool of your choice.\n      - In *Postman*, you can click the **import** button at the top\n      - With *Insomnia*, you can just drag-and-drop the file on the UI\n\n    Note that with *Postman*, you can also generate code snippets by selecting a request and clicking on\n    the **Code** button.\n\n    ## Enabling CORS\n\n    [Cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS)\n    is a browser security feature that restricts HTTP requests that are\n    initiated from scripts running in the browser.\n\n    For details on enabling/configuring CORS, see\n    [Enabling CORS](https://airflow.apache.org/docs/apache-airflow/stable/security/api.html).\n\n    # Authentication\n\n    To be able to meet the requirements of many organizations, Airflow supports many authentication methods,\n    and it is even possible to add your own method.\n\n    If you want to check which auth backend is currently set, you can use\n    `airflow config get-value api auth_backends` command as in the example below.\n    ```bash\n    $ airflow config get-value api auth_backends\n    airflow.api.auth.backend.basic_auth\n    ```\n    The default is to deny all requests.\n\n    For details on configuring the authentication, see\n    [API Authorization](https://airflow.apache.org/docs/apache-airflow/stable/security/api.html).\n\n    # Errors\n\n    We follow the error response format proposed in [RFC 7807](https://tools.ietf.org/html/rfc7807)\n    also known as Problem Details for HTTP APIs. As with our normal API responses,\n    your client must be prepared to gracefully handle additional members of the response.\n\n    ## Unauthenticated\n\n    This indicates that the request has not been applied because it lacks valid authentication\n    credentials for the target resource. Please check that you have valid credentials.\n\n    ## PermissionDenied\n\n    This response means that the server understood the request but refuses to authorize\n    it because it lacks sufficient rights to the resource. It happens when you do not have the\n    necessary permission to execute the action you performed. You need to get the appropriate\n    permissions in other to resolve this error.\n\n    ## BadRequest\n\n    This response means that the server cannot or will not process the request due to something\n    that is perceived to be a client error (e.g., malformed request syntax, invalid request message\n    framing, or deceptive request routing). To resolve this, please ensure that your syntax is correct.\n\n    ## NotFound\n\n    This client error response indicates that the server cannot find the requested resource.\n\n    ## MethodNotAllowed\n\n    Indicates that the request method is known by the server but is not supported by the target resource.\n\n    ## NotAcceptable\n\n    The target resource does not have a current representation that would be acceptable to the user\n    agent, according to the proactive negotiation header fields received in the request, and the\n    server is unwilling to supply a default representation.\n\n    ## AlreadyExists\n\n    The request could not be completed due to a conflict with the current state of the target\n    resource, e.g. the resource it tries to create already exists.\n\n    ## Unknown\n\n    This means that the server encountered an unexpected condition that prevented it from\n    fulfilling the request.\n\n  version: '1.0.0'\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  contact:\n    name: Apache Software Foundation\n    url: https://airflow.apache.org\n    email: dev@airflow.apache.org\n\nservers:\n  - url: /api/v1\n    description: Apache Airflow Stable API.\n\npaths:\n  # Database entities\n  /connections:\n    get:\n      summary: List connections\n      x-openapi-router-controller: airflow.api_connexion.endpoints.connection_endpoint\n      operationId: get_connections\n      tags: [Connection]\n      parameters:\n        - $ref: '#/components/parameters/PageLimit'\n        - $ref: '#/components/parameters/PageOffset'\n        - $ref: '#/components/parameters/OrderBy'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectionCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n    post:\n      summary: Create a connection\n      x-openapi-router-controller: airflow.api_connexion.endpoints.connection_endpoint\n      operationId: post_connection\n      tags: [Connection]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Connection'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Connection'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n  /connections/{connection_id}:\n    parameters:\n      - $ref: '#/components/parameters/ConnectionID'\n\n    get:\n      summary: Get a connection\n      x-openapi-router-controller: airflow.api_connexion.endpoints.connection_endpoint\n      operationId: get_connection\n      tags: [Connection]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Connection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    patch:\n      summary: Update a connection\n      x-openapi-router-controller: airflow.api_connexion.endpoints.connection_endpoint\n      operationId: patch_connection\n      tags: [Connection]\n      parameters:\n        - $ref: '#/components/parameters/UpdateMask'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Connection'\n\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Connection'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      summary: Delete a connection\n      x-openapi-router-controller: airflow.api_connexion.endpoints.connection_endpoint\n      operationId: delete_connection\n      tags: [Connection]\n      responses:\n        '204':\n          description: Success.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /connections/test:\n    post:\n      summary: Test a connection\n      description: |\n        Test a connection.\n\n        *New in version 2.2.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.connection_endpoint\n      operationId: test_connection\n      tags: [Connection]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Connection'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectionTest'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /dags:\n    get:\n      summary: List DAGs\n      description: \u003e\n       List DAGs in the database.\n\n       `dag_id_pattern` can be set to match dags of a specific pattern\n      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_endpoint\n      operationId: get_dags\n      tags: [DAG]\n      parameters:\n        - $ref: '#/components/parameters/PageLimit'\n        - $ref: '#/components/parameters/PageOffset'\n        - $ref: '#/components/parameters/OrderBy'\n        - $ref: '#/components/parameters/FilterTags'\n        - $ref: '#/components/parameters/OnlyActive'\n        - name: dag_id_pattern\n          in: query\n          schema:\n            type: string\n          required: false\n          description: |\n            If set, only return DAGs with dag_ids matching this pattern.\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DAGCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n\n    patch:\n      summary: Update DAGs\n      description: \u003e\n       Update DAGs of a given dag_id_pattern using UpdateMask.\n\n       This endpoint allows specifying `~` as the dag_id_pattern to update all DAGs.\n\n       *New in version 2.3.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_endpoint\n      operationId: patch_dags\n      parameters:\n        - $ref: '#/components/parameters/PageLimit'\n        - $ref: '#/components/parameters/PageOffset'\n        - $ref: '#/components/parameters/FilterTags'\n        - $ref: '#/components/parameters/UpdateMask'\n        - $ref: '#/components/parameters/OnlyActive'\n        - name: dag_id_pattern\n          in: query\n          schema:\n            type: string\n          required: true\n          description: |\n            If set, only update DAGs with dag_ids matching this pattern.\n      tags: [DAG]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DAG'\n            example:\n              is_paused: true\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DAGCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /dags/{dag_id}:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'\n\n    get:\n      summary: Get basic information about a DAG\n      description: \u003e\n        Presents only information available in database (DAGModel).\n\n        If you need detailed information, consider using GET /dags/{dag_id}/details.\n      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_endpoint\n      operationId: get_dag\n      tags: [DAG]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DAG'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    patch:\n      summary: Update a DAG\n      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_endpoint\n      operationId: patch_dag\n      parameters:\n        - $ref: '#/components/parameters/UpdateMask'\n      tags: [DAG]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DAG'\n            example:\n              is_paused: true\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DAG'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      summary: Delete a DAG\n      description: |\n        Deletes all metadata related to the DAG, including finished DAG Runs and Tasks.\n        Logs are not deleted. This action cannot be undone.\n\n        *New in version 2.2.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_endpoint\n      operationId: delete_dag\n      tags: [DAG]\n      responses:\n        '204':\n          description: Success.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '409':\n          $ref: '#/components/responses/AlreadyExists'\n\n  /dags/{dag_id}/clearTaskInstances:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'\n\n    post:\n      summary: Clear a set of task instances\n      description: \u003e\n        Clears a set of task instances associated with the DAG for a specified date range.\n      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint\n      operationId: post_clear_task_instances\n      tags: [DAG]\n      requestBody:\n        description: Parameters of action\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClearTaskInstance'\n\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskInstanceReferenceCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /dags/{dag_id}/updateTaskInstancesState:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'\n\n    post:\n      summary: Set a state of task instances\n      description: \u003e\n        Updates the state for multiple task instances simultaneously.\n      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint\n      operationId: post_set_task_instances_state\n      tags: [DAG]\n      requestBody:\n        description: Parameters of action\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTaskInstancesState'\n\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskInstanceReferenceCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /dags/{dag_id}/dagRuns:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'\n\n    get:\n      summary: List DAG runs\n      description: \u003e\n        This endpoint allows specifying `~` as the dag_id to retrieve DAG runs for all DAGs.\n      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_run_endpoint\n      operationId: get_dag_runs\n      tags: [DAGRun]\n      parameters:\n        - $ref: '#/components/parameters/PageLimit'\n        - $ref: '#/components/parameters/PageOffset'\n        - $ref: '#/components/parameters/FilterExecutionDateGTE'\n        - $ref: '#/components/parameters/FilterExecutionDateLTE'\n        - $ref: '#/components/parameters/FilterStartDateGTE'\n        - $ref: '#/components/parameters/FilterStartDateLTE'\n        - $ref: '#/components/parameters/FilterEndDateGTE'\n        - $ref: '#/components/parameters/FilterEndDateLTE'\n        - $ref: '#/components/parameters/FilterState'\n        - $ref: '#/components/parameters/OrderBy'\n      responses:\n        '200':\n          description: List of DAG runs.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DAGRunCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n\n    post:\n      summary: Trigger a new DAG run\n      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_run_endpoint\n      operationId: post_dag_run\n      tags: [DAGRun]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DAGRun'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DAGRun'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '409':\n          $ref: '#/components/responses/AlreadyExists'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /dags/~/dagRuns/list:\n    post:\n      summary: List DAG runs (batch)\n      description: \u003e\n        This endpoint is a POST to allow filtering across a large number of DAG IDs, where as a GET it\n        would run in to maximum HTTP request URL length limit.\n      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_run_endpoint\n      operationId: get_dag_runs_batch\n      tags: [DAGRun]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListDagRunsForm'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DAGRunCollection'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n  /dags/{dag_id}/dagRuns/{dag_run_id}:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'\n      - $ref: '#/components/parameters/DAGRunID'\n\n    get:\n      summary: Get a DAG run\n      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_run_endpoint\n      operationId: get_dag_run\n      tags: [DAGRun]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DAGRun'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      summary: Delete a DAG run\n      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_run_endpoint\n      operationId: delete_dag_run\n      tags: [DAGRun]\n      responses:\n        '204':\n          description: Success.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    patch:\n      summary: Modify a DAG run\n      description: |\n        Modify a DAG run.\n\n        *New in version 2.2.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_run_endpoint\n      operationId: update_dag_run_state\n      tags: [DAGRun]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDagRunState'\n\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DAGRun'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /eventLogs:\n    get:\n      summary: List log entries\n      description:\n        List log entries from event log.\n      x-openapi-router-controller: airflow.api_connexion.endpoints.event_log_endpoint\n      operationId: get_event_logs\n      tags: [EventLog]\n      parameters:\n        - $ref: '#/components/parameters/PageLimit'\n        - $ref: '#/components/parameters/PageOffset'\n        - $ref: '#/components/parameters/OrderBy'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventLogCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n  /eventLogs/{event_log_id}:\n    parameters:\n      - $ref: '#/components/parameters/EventLogID'\n\n    get:\n      summary: Get a log entry\n      x-openapi-router-controller: airflow.api_connexion.endpoints.event_log_endpoint\n      operationId: get_event_log\n      tags: [EventLog]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventLog'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /importErrors:\n    get:\n      summary: List import errors\n      x-openapi-router-controller: airflow.api_connexion.endpoints.import_error_endpoint\n      operationId: get_import_errors\n      tags: [ImportError]\n      parameters:\n        - $ref: '#/components/parameters/PageLimit'\n        - $ref: '#/components/parameters/PageOffset'\n        - $ref: '#/components/parameters/OrderBy'\n\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportErrorCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n  /importErrors/{import_error_id}:\n    parameters:\n      - $ref: '#/components/parameters/ImportErrorID'\n    get:\n      summary: Get an import error\n      x-openapi-router-controller: airflow.api_connexion.endpoints.import_error_endpoint\n      operationId: get_import_error\n      tags: [ImportError]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportError'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /pools:\n    get:\n      summary: List pools\n      x-openapi-router-controller: airflow.api_connexion.endpoints.pool_endpoint\n      operationId: get_pools\n      tags: [Pool]\n      parameters:\n        - $ref: '#/components/parameters/PageLimit'\n        - $ref: '#/components/parameters/PageOffset'\n        - $ref: '#/components/parameters/OrderBy'\n      responses:\n        '200':\n          description: List of pools.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PoolCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n    post:\n      summary: Create a pool\n      x-openapi-router-controller: airflow.api_connexion.endpoints.pool_endpoint\n      operationId: post_pool\n      tags: [Pool]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pool'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pool'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n  /pools/{pool_name}:\n    parameters:\n      - $ref: '#/components/parameters/PoolName'\n\n    get:\n      summary: Get a pool\n      x-openapi-router-controller: airflow.api_connexion.endpoints.pool_endpoint\n      operationId: get_pool\n      tags: [Pool]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pool'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    patch:\n      summary: Update a pool\n      x-openapi-router-controller: airflow.api_connexion.endpoints.pool_endpoint\n      operationId: patch_pool\n      tags: [Pool]\n      parameters:\n        - $ref: '#/components/parameters/UpdateMask'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pool'\n\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pool'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '409':\n          $ref: '#/components/responses/AlreadyExists'\n\n    delete:\n      summary: Delete a pool\n      x-openapi-router-controller: airflow.api_connexion.endpoints.pool_endpoint\n      operationId: delete_pool\n      tags: [Pool]\n      responses:\n        '204':\n          description: Success.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /providers:\n    get:\n      summary: List providers\n      description: |\n        Get a list of providers.\n\n        *New in version 2.1.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.provider_endpoint\n      operationId: get_providers\n      tags: [Provider]\n      responses:\n        '200':\n          description: List of providers.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/ProviderCollection'\n                  - $ref: '#/components/schemas/CollectionInfo'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'\n      - $ref: '#/components/parameters/DAGRunID'\n      - $ref: '#/components/parameters/FilterExecutionDateGTE'\n      - $ref: '#/components/parameters/FilterExecutionDateLTE'\n      - $ref: '#/components/parameters/FilterStartDateGTE'\n      - $ref: '#/components/parameters/FilterStartDateLTE'\n      - $ref: '#/components/parameters/FilterEndDateGTE'\n      - $ref: '#/components/parameters/FilterEndDateLTE'\n      - $ref: '#/components/parameters/FilterDurationGTE'\n      - $ref: '#/components/parameters/FilterDurationLTE'\n      - $ref: '#/components/parameters/FilterState'\n      - $ref: '#/components/parameters/FilterPool'\n      - $ref: '#/components/parameters/FilterQueue'\n    get:\n      summary: List task instances\n      description: \u003e\n        This endpoint allows specifying `~` as the dag_id, dag_run_id to retrieve DAG runs for all DAGs\n        and DAG runs.\n      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint\n      operationId: get_task_instances\n      tags: [TaskInstance]\n      parameters:\n        - $ref: '#/components/parameters/PageLimit'\n        - $ref: '#/components/parameters/PageOffset'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskInstanceCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'\n      - $ref: '#/components/parameters/DAGRunID'\n      - $ref: '#/components/parameters/TaskID'\n\n    get:\n      summary: Get a task instance\n      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint\n      operationId: get_task_instance\n      tags: [TaskInstance]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskInstance'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/{map_index}:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'\n      - $ref: '#/components/parameters/DAGRunID'\n      - $ref: '#/components/parameters/TaskID'\n      - $ref: '#/components/parameters/MapIndex'\n\n    get:\n      summary: Get a mapped task instance\n      description: |\n        Get details of a mapped task instance.\n\n        *New in version 2.3.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint\n      operationId: get_mapped_task_instance\n      tags: [TaskInstance]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskInstance'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/listMapped:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'\n      - $ref: '#/components/parameters/DAGRunID'\n      - $ref: '#/components/parameters/TaskID'\n\n    get:\n      summary: List mapped task instances\n      description: |\n        Get details of all mapped task instances.\n\n        *New in version 2.3.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint\n      operationId: get_mapped_task_instances\n      tags: [TaskInstance]\n      parameters:\n        - $ref: '#/components/parameters/PageLimit'\n        - $ref: '#/components/parameters/PageOffset'\n        - $ref: '#/components/parameters/FilterExecutionDateGTE'\n        - $ref: '#/components/parameters/FilterExecutionDateLTE'\n        - $ref: '#/components/parameters/FilterStartDateGTE'\n        - $ref: '#/components/parameters/FilterStartDateLTE'\n        - $ref: '#/components/parameters/FilterEndDateGTE'\n        - $ref: '#/components/parameters/FilterEndDateLTE'\n        - $ref: '#/components/parameters/FilterDurationGTE'\n        - $ref: '#/components/parameters/FilterDurationLTE'\n        - $ref: '#/components/parameters/FilterState'\n        - $ref: '#/components/parameters/FilterPool'\n        - $ref: '#/components/parameters/FilterQueue'\n        - $ref: '#/components/parameters/OrderBy'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskInstance'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /dags/~/dagRuns/~/taskInstances/list:\n    post:\n      summary: List task instances (batch)\n      description: \u003e\n        List task instances from all DAGs and DAG runs.\n\n        This endpoint is a POST to allow filtering across a large number of DAG IDs, where as a GET it\n        would run in to maximum HTTP request URL length limits.\n      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint\n      operationId: get_task_instances_batch\n      tags: [TaskInstance]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListTaskInstanceForm'\n\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskInstanceCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /variables:\n    get:\n      summary: List variables\n      description: The collection does not contain data. To get data, you must get a single entity.\n      x-openapi-router-controller: airflow.api_connexion.endpoints.variable_endpoint\n      operationId: get_variables\n      tags: [Variable]\n      parameters:\n        - $ref: '#/components/parameters/PageLimit'\n        - $ref: '#/components/parameters/PageOffset'\n        - $ref: '#/components/parameters/OrderBy'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VariableCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n    post:\n      summary: Create a variable\n      x-openapi-router-controller: airflow.api_connexion.endpoints.variable_endpoint\n      operationId: post_variables\n      tags: [Variable]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Variable'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n  /variables/{variable_key}:\n    parameters:\n      - $ref: '#/components/parameters/VariableKey'\n\n    get:\n      summary: Get a variable\n      description: Get a variable by key.\n      x-openapi-router-controller: airflow.api_connexion.endpoints.variable_endpoint\n      operationId: get_variable\n      tags: [Variable]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    patch:\n      summary: Update a variable\n      description: Update a variable by key.\n      x-openapi-router-controller: airflow.api_connexion.endpoints.variable_endpoint\n      operationId: patch_variable\n      tags: [Variable]\n      parameters:\n        - $ref: '#/components/parameters/UpdateMask'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Variable'\n\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      summary: Delete a variable\n      x-openapi-router-controller: airflow.api_connexion.endpoints.variable_endpoint\n      operationId: delete_variable\n      tags: [Variable]\n      responses:\n        '204':\n          description: Success.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/xcomEntries:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'\n      - $ref: '#/components/parameters/DAGRunID'\n      - $ref: '#/components/parameters/TaskID'\n\n    get:\n      summary: List XCom entries\n      description:\n        This endpoint allows specifying `~` as the dag_id, dag_run_id, task_id to retrieve XCOM entries for\n        for all DAGs, DAG runs and task instances. XCom values won't be returned as they can be large.\n        Use this endpoint to get a list of XCom entries and then fetch individual entry to get value.\n      x-openapi-router-controller: airflow.api_connexion.endpoints.xcom_endpoint\n      operationId: get_xcom_entries\n      tags: [XCom]\n      parameters:\n        - $ref: '#/components/parameters/PageLimit'\n        - $ref: '#/components/parameters/PageOffset'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XComCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/xcomEntries/{xcom_key}:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'\n      - $ref: '#/components/parameters/DAGRunID'\n      - $ref: '#/components/parameters/TaskID'\n      - $ref: '#/components/parameters/XComKey'\n\n    get:\n      summary: Get an XCom entry\n      x-openapi-router-controller: airflow.api_connexion.endpoints.xcom_endpoint\n      operationId: get_xcom_entry\n      tags: [XCom]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XCom'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  # Non-database resources\n  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/links:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'\n      - $ref: '#/components/parameters/DAGRunID'\n      - $ref: '#/components/parameters/TaskID'\n\n    get:\n      summary: List extra links\n      description: \u003e\n        List extra links for task instance.\n      x-openapi-router-controller: airflow.api_connexion.endpoints.extra_link_endpoint\n      operationId: get_extra_links\n      tags: [TaskInstance]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExtraLinkCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/logs/{task_try_number}:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'\n      - $ref: '#/components/parameters/DAGRunID'\n      - $ref: '#/components/parameters/TaskID'\n      - $ref: '#/components/parameters/TaskTryNumber'\n      - $ref: '#/components/parameters/FullContent'\n      - $ref: '#/components/parameters/ContinuationToken'\n\n    get:\n      summary: Get logs\n      description: Get logs for a specific task instance and its try number.\n      x-openapi-router-controller: airflow.api_connexion.endpoints.log_endpoint\n      operationId: get_log\n      tags: [TaskInstance]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  continuation_token:\n                    type: string\n                  content:\n                    type: string\n            text/plain:\n              schema:\n                type: string\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /dags/{dag_id}/details:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'\n\n    get:\n      summary: Get a simplified representation of DAG\n      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_endpoint\n      operationId: get_dag_details\n      description: \u003e\n        The response contains many DAG attributes, so the response can be large.\n        If possible, consider using GET /dags/{dag_id}.\n      tags: [DAG]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DAGDetail'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /dags/{dag_id}/tasks:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'\n      - $ref: '#/components/parameters/OrderBy'\n\n    get:\n      summary: Get tasks for DAG\n      x-openapi-router-controller: airflow.api_connexion.endpoints.task_endpoint\n      operationId: get_tasks\n      tags: [DAG]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /dags/{dag_id}/tasks/{task_id}:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'\n      - $ref: '#/components/parameters/TaskID'\n\n    get:\n      summary: Get simplified representation of a task\n      x-openapi-router-controller: airflow.api_connexion.endpoints.task_endpoint\n      operationId: get_task\n      tags: [DAG]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /dagSources/{file_token}:\n    parameters:\n      - $ref: '#/components/parameters/FileToken'\n\n    get:\n      summary: Get a source code\n      description: \u003e\n        Get a source code using file token.\n      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_source_endpoint\n      operationId: get_dag_source\n      tags: [DAG]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: string\n            plain/text:\n              schema:\n                type: string\n\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n\n  /config:\n    get:\n      summary: Get current configuration\n      x-openapi-router-controller: airflow.api_connexion.endpoints.config_endpoint\n      operationId: get_config\n      tags: [Config]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Config'\n              example:\n                sections:\n                  - name: core\n                    options:\n                      - key: dags_folder\n                        value: /home/user/my-dags-folder\n\n                  - name: smtp\n                    options:\n                      - key: smtp_host\n                        value: localhost\n                      - key: smtp_mail_from\n                        value: airflow@example.com\n            text/plain:\n              schema:\n                type: string\n              example: |\n                [core]\n                dags_folder = /home/user/my-dags-folder\n                [smtp]\n                smtp_host = localhost\n                smtp_mail_from =  airflow@example.com\n\n\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n  /health:\n    get:\n      summary: Get instance status\n      description: |\n        Get the status of Airflow's metadatabase and scheduler. It includes info about\n        metadatabase and last heartbeat of scheduler.\n      x-openapi-router-controller: airflow.api_connexion.endpoints.health_endpoint\n      operationId: get_health\n      tags: [Monitoring]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HealthInfo'\n\n  /version:\n    get:\n      summary: Get version information\n      x-openapi-router-controller: airflow.api_connexion.endpoints.version_endpoint\n      operationId: get_version\n      tags: [Monitoring]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VersionInfo'\n\n  /plugins:\n    get:\n      summary: Get a list of loaded plugins\n      description: |\n        Get a list of loaded plugins.\n\n        *New in version 2.1.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.plugin_endpoint\n      operationId: get_plugins\n      tags: [Plugin]\n      parameters:\n        - $ref: '#/components/parameters/PageLimit'\n        - $ref: '#/components/parameters/PageOffset'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PluginCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /roles:\n    get:\n      summary: List roles\n      description: |\n        Get a list of roles.\n\n        *New in version 2.1.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.role_and_permission_endpoint\n      operationId: get_roles\n      tags: [Role]\n      parameters:\n        - $ref: '#/components/parameters/PageLimit'\n        - $ref: '#/components/parameters/PageOffset'\n        - $ref: '#/components/parameters/OrderBy'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n    post:\n      summary: Create a role\n      description: |\n        Create a new role.\n\n        *New in version 2.1.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.role_and_permission_endpoint\n      operationId: post_role\n      tags: [Role]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Role'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n  /roles/{role_name}:\n    parameters:\n      - $ref: '#/components/parameters/RoleName'\n\n    get:\n      summary: Get a role\n      description: |\n        Get a role.\n\n        *New in version 2.1.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.role_and_permission_endpoint\n      operationId: get_role\n      tags: [Role]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    patch:\n      summary: Update a role\n      description: |\n        Update a role.\n\n        *New in version 2.1.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.role_and_permission_endpoint\n      operationId: patch_role\n      tags: [Role]\n      parameters:\n        - $ref: '#/components/parameters/UpdateMask'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Role'\n\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      summary: Delete a role\n      description: |\n        Delete a role.\n\n        *New in version 2.1.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.role_and_permission_endpoint\n      operationId: delete_role\n      tags: [Role]\n      responses:\n        '204':\n          description: Success.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /permissions:\n    get:\n      summary: List permissions\n      description: |\n        Get a list of permissions.\n\n        *New in version 2.1.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.role_and_permission_endpoint\n      operationId: get_permissions\n      tags: [Permission]\n      parameters:\n        - $ref: '#/components/parameters/PageLimit'\n        - $ref: '#/components/parameters/PageOffset'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ActionCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n  /users:\n    get:\n      summary: List users\n      description: |\n        Get a list of users.\n\n        *New in version 2.1.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.user_endpoint\n      operationId: get_users\n      tags: [User]\n      parameters:\n        - $ref: '#/components/parameters/PageLimit'\n        - $ref: '#/components/parameters/PageOffset'\n        - $ref: '#/components/parameters/OrderBy'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserCollection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n\n    post:\n      summary: Create a user\n      description: |\n        Create a new user with unique username and email.\n\n        *New in version 2.2.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.user_endpoint\n      operationId: post_user\n      tags: [User]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '409':\n          $ref: '#/components/responses/AlreadyExists'\n\n  /users/{username}:\n    parameters:\n      - $ref: '#/components/parameters/Username'\n    get:\n      summary: Get a user\n      description: |\n        Get a user with a specific username.\n\n        *New in version 2.1.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.user_endpoint\n      operationId: get_user\n      tags: [User]\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserCollectionItem'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    patch:\n      summary: Update a user\n      description: |\n        Update fields for a user.\n\n        *New in version 2.2.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.user_endpoint\n      operationId: patch_user\n      tags: [User]\n      parameters:\n        - $ref: '#/components/parameters/UpdateMask'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      summary: Delete a user\n      description: |\n        Delete a user with a specific username.\n\n        *New in version 2.2.0*\n      x-openapi-router-controller: airflow.api_connexion.endpoints.user_endpoint\n      operationId: delete_user\n      tags: [User]\n      responses:\n        '204':\n          description: Success.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\ncomponents:\n  # Reusable schemas (data models)\n  schemas:\n    # Database entities\n    UserCollectionItem:\n      description: |\n        A user object.\n\n        *New in version 2.1.0*\n      type: object\n      properties:\n        first_name:\n          type: string\n          description: |\n            The user's first name.\n\n            *Changed in version 2.2.0*\u0026#58; A minimum character length requirement ('minLength') is added.\n          minLength: 1\n        last_name:\n          type: string\n          description: |\n            The user's last name.\n\n            *Changed in version 2.2.0*\u0026#58; A minimum character length requirement ('minLength') is added.\n          minLength: 1\n        username:\n          type: string\n          description: |\n            The username.\n\n            *Changed in version 2.2.0*\u0026#58; A minimum character length requirement ('minLength') is added.\n          minLength: 1\n        email:\n          type: string\n          description: |\n            The user's email.\n\n            *Changed in version 2.2.0*\u0026#58; A minimum character length requirement ('minLength') is added.\n          minLength: 1\n        active:\n          type: boolean\n          description: Whether the user is active\n          readOnly: true\n          nullable: true\n        last_login:\n          type: string\n          format: datetime\n          description: The last user login\n          readOnly: true\n          nullable: true\n        login_count:\n          type: integer\n          description: The login count\n          readOnly: true\n          nullable: true\n        failed_login_count:\n          type: integer\n          description: The number of times the login failed\n          readOnly: true\n          nullable: true\n        roles:\n          type: array\n          description: |\n            User roles.\n\n            *Changed in version 2.2.0*\u0026#58; Field is no longer read-only.\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n            nullable: true\n        created_on:\n          type: string\n          format: datetime\n          description: The date user was created\n          readOnly: true\n          nullable: true\n        changed_on:\n          type: string\n          format: datetime\n          description: The date user was changed\n          readOnly: true\n          nullable: true\n    User:\n      type: object\n      description: |\n        A user object with sensitive data.\n\n        *New in version 2.1.0*\n      allOf:\n        - $ref: '#/components/schemas/UserCollectionItem'\n        - type: object\n          properties:\n            password:\n              type: string\n              writeOnly: true\n\n    UserCollection:\n      type: object\n      description: |\n        Collection of users.\n\n        *New in version 2.1.0*\n      allOf:\n        - type: object\n          properties:\n            users:\n              type: array\n              items:\n                $ref: '#/components/schemas/UserCollectionItem'\n        - $ref: '#/components/schemas/CollectionInfo'\n\n    ConnectionCollectionItem:\n      description: \u003e\n        Connection collection item.\n\n        The password and extra fields are only available when retrieving a single object due to the\n        sensitivity of this data.\n      type: object\n      properties:\n        connection_id:\n          type: string\n          description: The connection ID.\n        conn_type:\n          type: string\n          description: The connection type.\n        host:\n          type: string\n          nullable: true\n          description: Host of the connection.\n        login:\n          type: string\n          nullable: true\n          description: Login of the connection.\n        schema:\n          type: string\n          nullable: true\n          description: Schema of the connection.\n        port:\n          type: integer\n          nullable: true\n          description: Port of the connection.\n\n    ConnectionCollection:\n      type: object\n      description: |\n        Collection of connections.\n\n        *Changed in version 2.1.0*\u0026#58; 'total_entries' field is added.\n      allOf:\n        - type: object\n          properties:\n            connections:\n              type: array\n              items:\n                $ref: '#/components/schemas/ConnectionCollectionItem'\n        - $ref: '#/components/schemas/CollectionInfo'\n\n    Connection:\n      description: Full representation of the connection.\n      allOf:\n        - $ref: '#/components/schemas/ConnectionCollectionItem'\n        - type: object\n          properties:\n            password:\n              type: string\n              format: password\n              writeOnly: true\n              description: Password of the connection.\n            extra:\n              type: string\n              nullable: true\n              description: Other values that cannot be put into another field, e.g. RSA keys.\n\n    ConnectionTest:\n      description: |\n        Connection test results.\n\n        *New in version 2.2.0*\n      type: object\n      properties:\n        status:\n          type: boolean\n          description: The status of the request.\n        message:\n          type: string\n          description: The success or failure message of the request.\n\n    DAG:\n      type: object\n      description: DAG\n      properties:\n        dag_id:\n          type: string\n          readOnly: true\n          description: The ID of the DAG.\n        root_dag_id:\n          type: string\n          readOnly: true\n          nullable: true\n          description: If the DAG is SubDAG then it is the top level DAG identifier. Otherwise, null.\n        is_paused:\n          type: boolean\n          nullable: true\n          description: Whether the DAG is paused.\n        is_active:\n          description: |\n            Whether the DAG is currently seen by the scheduler(s).\n\n            *New in version 2.1.1*\n\n            *Changed in version 2.2.0*\u0026#58; Field is read-only.\n          nullable: true\n          readOnly: true\n          type: boolean\n        is_subdag:\n          description: Whether the DAG is SubDAG.\n          type: boolean\n          readOnly: true\n        last_parsed_time:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n          description: |\n            The last time the DAG was parsed.\n\n            *New in version 2.3.0*\n        last_pickled:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n          description: |\n            The last time the DAG was pickled.\n\n            *New in version 2.3.0*\n        last_expired:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n          description: |\n            Time when the DAG last received a refresh signal\n            (e.g. the DAG's \"refresh\" button was clicked in the web UI)\n\n            *New in version 2.3.0*\n        scheduler_lock:\n          type: boolean\n          readOnly: true\n          nullable: true\n          description: |\n            Whether (one of) the scheduler is scheduling this DAG at the moment\n\n            *New in version 2.3.0*\n        pickle_id:\n          type: string\n          readOnly: true\n          nullable: true\n          description: |\n            Foreign key to the latest pickle_id\n\n            *New in version 2.3.0*\n        default_view:\n          type: string\n          nullable: true\n          readOnly: true\n          description: |\n            Default view of the DAG inside the webserver\n\n            *New in version 2.3.0*\n        fileloc:\n          description: The absolute path to the file.\n          type: string\n          readOnly: true\n        file_token:\n          type: string\n          readOnly: true\n          description: \u003e\n            The key containing the encrypted path to the file. Encryption and decryption take place only on\n            the server. This prevents the client from reading an non-DAG file. This also ensures API\n            extensibility, because the format of encrypted data may change.\n        owners:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        description:\n          type: string\n          readOnly: true\n          nullable: true\n          description: \u003e\n            User-provided DAG description, which can consist of several sentences or paragraphs that\n            describe DAG contents.\n        schedule_interval:\n          $ref: '#/components/schemas/ScheduleInterval'\n        timetable_description:\n          type: string\n          readOnly: true\n          nullable: true\n          description: |\n            Timetable/Schedule Interval description.\n\n            *New in version 2.3.0*\n        tags:\n          description: List of tags.\n          type: array\n          nullable: true\n          items:\n            $ref: '#/components/schemas/Tag'\n          readOnly: true\n        max_active_tasks:\n          type: integer\n          nullable: true\n          readOnly: true\n          description: |\n            Maximum number of active tasks that can be run on the DAG\n\n            *New in version 2.3.0*\n        max_active_runs:\n          type: integer\n          nullable: true\n          readOnly: true\n          description: |\n            Maximum number of active DAG runs for the DAG\n\n            *New in version 2.3.0*\n        has_task_concurrency_limits:\n          type: boolean\n          nullable: true\n          readOnly: true\n          description: |\n            Whether the DAG has task concurrency limits\n\n            *New in version 2.3.0*\n        has_import_errors:\n          type: boolean\n          nullable: true\n          readOnly: true\n          description: |\n            Whether the DAG has import errors\n\n            *New in version 2.3.0*\n        next_dagrun:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n          description: |\n            The logical date of the next dag run.\n\n            *New in version 2.3.0*\n        next_dagrun_data_interval_start:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n          description: |\n            The start of the interval of the next dag run.\n\n            *New in version 2.3.0*\n        next_dagrun_data_interval_end:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n          description: |\n            The end of the interval of the next dag run.\n\n            *New in version 2.3.0*\n        next_dagrun_create_after:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n          description: |\n            Earliest time at which this ``next_dagrun`` can be created.\n\n            *New in version 2.3.0*\n\n    DAGCollection:\n      description: |\n        Collection of DAGs.\n\n        *Changed in version 2.1.0*\u0026#58; 'total_entries' field is added.\n      type: object\n      allOf:\n        - type: object\n          properties:\n            dags:\n              type: array\n              items:\n                $ref: '#/components/schemas/DAG'\n        - $ref: '#/components/schemas/CollectionInfo'\n\n    DAGRun:\n      type: object\n      properties:\n        dag_run_id:\n          type: string\n          nullable: true\n          description: |\n            Run ID.\n\n            The value of this field can be set only when creating the object. If you try to modify the\n            field of an existing object, the request fails with an BAD_REQUEST error.\n\n            If not provided, a value will be generated based on execution_date.\n\n            If the specified dag_run_id is in use, the creation request fails with an ALREADY_EXISTS error.\n\n            This together with DAG_ID are a unique key.\n        dag_id:\n          type: string\n          readOnly: true\n        logical_date:\n          type: string\n          nullable: true\n          description: |\n            The logical date (previously called execution date). This is the time or interval covered by\n            this DAG run, according to the DAG definition.\n\n            The value of this field can be set only when creating the object. If you try to modify the\n            field of an existing object, the request fails with an BAD_REQUEST error.\n\n            This together with DAG_ID are a unique key.\n\n            *New in version 2.2.0*\n          format: date-time\n        execution_date:\n          type: string\n          nullable: true\n          description: |\n            The execution date. This is the same as logical_date, kept for backwards compatibility.\n            If both this field and logical_date are provided but with different values, the request\n            will fail with an BAD_REQUEST error.\n\n            *Changed in version 2.2.0*\u0026#58; Field becomes nullable.\n\n            *Deprecated since version 2.2.0*\u0026#58; Use 'logical_date' instead.\n          format: date-time\n          deprecated: true\n        start_date:\n          type: string\n          format: date-time\n          description: |\n            The start time. The time when DAG run was actually created.\n\n            *Changed in version 2.1.3*\u0026#58; Field becomes nullable.\n          readOnly: true\n          nullable: true\n        end_date:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        state:\n          $ref: '#/components/schemas/DagState'\n          readOnly: true\n        external_trigger:\n          type: boolean\n          default: true\n          readOnly: true\n        conf:\n          type: object\n          description: |\n            JSON object describing additional configuration parameters.\n\n            The value of this field can be set only when creating the object. If you try to modify the\n            field of an existing object, the request fails with an BAD_REQUEST error.\n\n    UpdateDagRunState:\n      type: object\n      description: |\n        Modify the state of a DAG run.\n\n        *New in version 2.2.0*\n      properties:\n        state:\n          description: The state to set this DagRun\n          type: string\n          enum:\n            - success\n            - failed\n\n    DAGRunCollection:\n      type: object\n      description: |\n        Collection of DAG runs.\n\n        *Changed in version 2.1.0*\u0026#58; 'total_entries' field is added.\n      allOf:\n        - type: object\n          properties:\n            dag_runs:\n              type: array\n              items:\n                $ref: '#/components/schemas/DAGRun'\n        - $ref: '#/components/schemas/CollectionInfo'\n\n    EventLog:\n      type: object\n      description: Log of user operations via CLI or Web UI.\n      properties:\n        event_log_id:\n          description: The event log ID\n          type: integer\n          readOnly: true\n        when:\n          description: The time when these events happened.\n          format: date-time\n          type: string\n          readOnly: true\n        dag_id:\n          description: The DAG ID\n          type: string\n          readOnly: true\n          nullable: true\n        task_id:\n          description: The DAG ID\n          type: string\n          readOnly: true\n          nullable: true\n        event:\n          description: A key describing the type of event.\n          type: string\n          readOnly: true\n        execution_date:\n          description: |\n            When the event was dispatched for an object having execution_date, the value of this field.\n          format: date-time\n          type: string\n          readOnly: true\n          nullable: true\n        owner:\n          description: Name of the user who triggered these events a.\n          type: string\n          readOnly: true\n        extra:\n          description: |\n            Other information that was not included in the other fields, e.g. the complete CLI command.\n          type: string\n          readOnly: true\n          nullable: true\n\n    EventLogCollection:\n      type: object\n      description: |\n        Collection of event logs.\n\n        *Changed in version 2.1.0*\u0026#58; 'total_entries' field is added.\n      allOf:\n        - type: object\n          properties:\n            event_logs:\n              type: array\n              items:\n                $ref: '#/components/schemas/EventLog'\n        - $ref: '#/components/schemas/CollectionInfo'\n\n    ImportError:\n      type: object\n      properties:\n        import_error_id:\n          type: integer\n          readOnly: true\n          description: The import error ID.\n        timestamp:\n          type: string\n          format: datetime\n          readOnly: true\n          description: The time when this error was created.\n        filename:\n          type: string\n          readOnly: true\n          description: The filename\n        stack_trace:\n          type: string\n          readOnly: true\n          description: The full stackstrace..\n\n    ImportErrorCollection:\n      type: object\n      description: |\n        Collection of import errors.\n\n        *Changed in version 2.1.0*\u0026#58; 'total_entries' field is added.\n      allOf:\n        - type: object\n          properties:\n            import_errors:\n              type: array\n              items:\n                $ref: '#/components/schemas/ImportError'\n        - $ref: '#/components/schemas/CollectionInfo'\n\n    HealthInfo:\n      type: object\n      description: Instance status information.\n      properties:\n        metadatabase:\n          $ref: '#/components/schemas/MetadatabaseStatus'\n        scheduler:\n          $ref: '#/components/schemas/SchedulerStatus'\n\n    MetadatabaseStatus:\n      type: object\n      description: The status of the metadatabase.\n      properties:\n        status:\n          $ref: '#/components/schemas/HealthStatus'\n\n    SchedulerStatus:\n      type: object\n      description: The status and the latest scheduler heartbeat.\n      properties:\n        status:\n          $ref: '#/components/schemas/HealthStatus'\n        latest_scheduler_heartbeat:\n          description: The time the scheduler last do a heartbeat.\n          type: string\n          format: datetime\n          readOnly: true\n          nullable: true\n\n\n    Pool:\n      description: The pool\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of pool.\n        slots:\n          type: integer\n          description: |\n            The maximum number of slots that can be assigned to tasks. One job may occupy one or more slots.\n        occupied_slots:\n          type: integer\n          readOnly: true\n          description: The number of slots used by running/queued tasks at the moment.\n        used_slots:\n          type: integer\n          readOnly: true\n          description: The number of slots used by running tasks at the moment.\n        queued_slots:\n          type: integer\n          readOnly: true\n          description: The number of slots used by queued tasks at the moment.\n        open_slots:\n          type: integer\n          readOnly: true\n          description: The number of free slots at the moment.\n        description:\n          type: string\n          description: |\n            The description of the pool.\n\n            *New in version 2.3.0*\n          nullable: true\n\n    PoolCollection:\n      type: object\n      description: |\n        Collection of pools.\n\n        *Changed in version 2.1.0*\u0026#58; 'total_entries' field is added.\n      allOf:\n        - type: object\n          properties:\n            pools:\n              type: array\n              items:\n                $ref: '#/components/schemas/Pool'\n        - $ref: '#/components/schemas/CollectionInfo'\n\n\n    Provider:\n      description: |\n        The provider\n\n        *New in version 2.1.0*\n      type: object\n      properties:\n        package_name:\n          type: string\n          description: The package name of the provider.\n        description:\n          type: string\n          description: The description of the provider.\n        version:\n          type: string\n          description: The version of the provider.\n\n    ProviderCollection:\n      description: |\n        Collection of providers.\n\n        *New in version 2.1.0*\n      type: object\n      properties:\n        providers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Provider'\n\n\n    SLAMiss:\n      type: object\n      properties:\n        task_id:\n          type: string\n          readOnly: true\n          description: The task ID.\n        dag_id:\n          type: string\n          description: The DAG ID.\n        execution_date:\n          type: string\n          format: datetime\n        email_sent:\n          type: boolean\n        timestamp:\n          type: string\n          format: datetime\n        description:\n          type: string\n          nullable: true\n        notification_sent:\n          type: boolean\n\n    TaskInstance:\n      type: object\n      properties:\n        task_id:\n          type: string\n        dag_id:\n          type: string\n        dag_run_id:\n          type: string\n          description: |\n            The DagRun ID for this task instance\n\n            *New in version 2.3.0*\n        execution_date:\n          type: string\n          format: datetime\n        start_date:\n          type: string\n          format: datetime\n          nullable: true\n        end_date:\n          type: string\n          format: datetime\n          nullable: true\n        duration:\n          type: number\n          nullable: true\n        state:\n          $ref: '#/components/schemas/TaskState'\n          nullable: true\n        try_number:\n          type: integer\n        max_tries:\n          type: integer\n        hostname:\n          type: string\n        unixname:\n          type: string\n        pool:\n          type: string\n        pool_slots:\n          type: integer\n        queue:\n          type: string\n        priority_weight:\n          type: integer\n        operator:\n          type: string\n          nullable: true\n          description: |\n            *Changed in version 2.1.1*\u0026#58; Field becomes nullable.\n        queued_when:\n          type: string\n          nullable: true\n        pid:\n          type: integer\n          nullable: true\n        executor_config:\n          type: string\n        sla_miss:\n          $ref: '#/components/schemas/SLAMiss'\n          nullable: true\n        rendered_fields:\n          description: |\n            JSON object describing rendered fields.\n\n            *New in version 2.3.0*\n          type: object\n\n    TaskInstanceCollection:\n      type: object\n      description: |\n        Collection of task instances.\n\n        *Changed in version 2.1.0*\u0026#58; 'total_entries' field is added.\n      allOf:\n        - type: object\n          properties:\n            task_instances:\n              type: array\n              items:\n                $ref: '#/components/schemas/TaskInstance'\n        - $ref: '#/components/schemas/CollectionInfo'\n\n    TaskInstanceReference:\n      type: object\n      properties:\n        task_id:\n          type: string\n          readOnly: true\n          description: The task ID.\n        dag_id:\n          type: string\n          readOnly: true\n          description: The DAG ID.\n        execution_date:\n          type: string\n          format: datetime\n          readOnly: true\n        dag_run_id:\n          type: string\n          readOnly: true\n          description: The DAG run ID.\n\n    TaskInstanceReferenceCollection:\n      type: object\n      properties:\n        task_instances:\n          type: array\n          items:\n            $ref: '#/components/schemas/TaskInstanceReference'\n\n    VariableCollectionItem:\n      description:\n        XCom entry collection item.\n\n        The value field are only available when retrieving a single object due to the sensitivity of this\n        data.\n      # Divided into two schemas for sensitive data protection\n      type: object\n      properties:\n        key:\n          type: string\n\n    VariableCollection:\n      type: object\n      description: |\n        Collection of variables.\n\n        *Changed in version 2.1.0*\u0026#58; 'total_entries' field is added.\n      allOf:\n        - type: object\n          properties:\n            variables:\n              type: array\n              items:\n                $ref: '#/components/schemas/VariableCollectionItem'\n        - $ref: '#/components/schemas/CollectionInfo'\n\n    Variable:\n      description: Full representation of Variable\n      allOf:\n        - $ref: '#/components/schemas/VariableCollectionItem'\n        - type: object\n          properties:\n            value:\n              type: string\n\n    XComCollectionItem:\n      # Divided into two schemas for sensitive data protection\n      type: object\n      description: |\n        XCom entry collection item.\n\n        The value field is only available when reading a single object due to the size of the value.\n      properties:\n        key:\n          type: string\n        timestamp:\n          type: string\n          format: datetime\n        execution_date:\n          type: string\n          format: datetime\n        task_id:\n          type: string\n        dag_id:\n          type: string\n\n    XComCollection:\n      type: object\n      description: |\n        Collection of XCom entries.\n\n        *Changed in version 2.1.0*\u0026#58; 'total_entries' field is added.\n      allOf:\n        - type: object\n          properties:\n            xcom_entries:\n              type: array\n              items:\n                $ref: '#/components/schemas/XComCollectionItem'\n        - $ref: '#/components/schemas/CollectionInfo'\n\n    XCom:\n      description: Full representations of XCom entry.\n      allOf:\n        - $ref: '#/components/schemas/XComCollectionItem'\n        - type: object\n          properties:\n            value:\n              type: string\n              description: The value\n\n    # Python objects\n    # Based on\n    # airflow/serialization/schema.json\n    # but simplified to make the easier to use and to make backward compatibility easier.\n    DAGDetail:\n      description: |\n        DAG details.\n\n        For details see:\n        [airflow.models.DAG](https://airflow.apache.org/docs/apache-airflow/stable/_api/airflow/models/index.html#airflow.models.DAG)\n      allOf:\n        - $ref: '#/components/schemas/DAG'\n        - type: object\n          properties:\n            timezone:\n              $ref: '#/components/schemas/Timezone'\n            catchup:\n              type: boolean\n              readOnly: true\n            orientation:\n              type: string\n              readOnly: true\n            concurrency:\n              type: number\n              readOnly: true\n            start_date:\n              type: string\n              format: 'date-time'\n              readOnly: true\n              nullable: true\n              description: |\n                The DAG's start date.\n\n                *Changed in version 2.0.1*\u0026#58; Field becomes nullable.\n            dag_run_timeout:\n              nullable: true\n              $ref: '#/components/schemas/TimeDelta'\n            doc_md:\n              type: string\n              readOnly: true\n              nullable: true\n            default_view:\n              type: string\n              readOnly: true\n            params:\n              type: object\n              readOnly: true\n              description: |\n                User-specified DAG params.\n\n                *New in version 2.0.1*\n            end_date:\n              type: string\n              format: 'date-time'\n              readOnly: true\n              nullable: true\n              description: |\n                The DAG's end date.\n\n                *New in version 2.3.0*.\n            is_paused_upon_creation:\n              type: boolean\n              readOnly: true\n              nullable: true\n              description: |\n                Whether the DAG is paused upon creation.\n\n                *New in version 2.3.0*\n            last_parsed:\n              type: string\n              format: date-time\n              nullable: true\n              readOnly: true\n              description: |\n                The last time the DAG was parsed.\n\n                *New in version 2.3.0*\n            template_search_path:\n              type: array\n              nullable: true\n              items:\n                type: string\n              description: |\n                The template search path.\n\n                *New in version 2.3.0*\n            render_template_as_native_obj:\n              type: boolean\n              nullable: true\n              readOnly: true\n              description: |\n                Whether to render templates as native Python objects.\n\n                *New in version 2.3.0*\n    ExtraLink:\n      type: object\n      description: Additional links containing additional information about the task.\n      properties:\n        class_ref:\n          $ref: '#/components/schemas/ClassReference'\n        name:\n          type: string\n          readOnly: true\n        href:\n          type: string\n          readOnly: true\n\n    ExtraLinkCollection:\n      type: object\n      description: The collection of extra links.\n      properties:\n        extra_links:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExtraLink'\n\n    Task:\n      type: object\n      description: |\n        For details see:\n        [airflow.models.BaseOperator](https://airflow.apache.org/docs/apache-airflow/stable/_api/airflow/models/index.html#airflow.models.BaseOperator)\n      properties:\n        class_ref:\n          $ref: '#/components/schemas/ClassReference'\n        task_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n        start_date:\n          type: string\n          format: 'date-time'\n          readOnly: true\n        end_date:\n          type: string\n          format: 'date-time'\n          readOnly: true\n          nullable: true\n        trigger_rule:\n          $ref: '#/components/schemas/TriggerRule'\n        extra_links:\n          type: array\n          readOnly: true\n          items:\n            type: object\n            properties:\n              class_ref:\n                $ref: '#/components/schemas/ClassReference'\n        depends_on_past:\n          type: boolean\n          readOnly: true\n        wait_for_downstream:\n          type: boolean\n          readOnly: true\n        retries:\n          type: number\n          readOnly: true\n        queue:\n          type: string\n          readOnly: true\n        pool:\n          type: string\n          readOnly: true\n        pool_slots:\n          type: number\n          readOnly: true\n        execution_timeout:\n          $ref: '#/components/schemas/TimeDelta'\n          nullable: true\n        retry_delay:\n          $ref: '#/components/schemas/TimeDelta'\n          nullable: true\n        retry_exponential_backoff:\n          type: boolean\n          readOnly: true\n        priority_weight:\n          type: number\n          readOnly: true\n        weight_rule:\n          $ref: '#/components/schemas/WeightRule'\n        ui_color:\n          $ref: '#/components/schemas/Color'\n        ui_fgcolor:\n          $ref: '#/components/schemas/Color'\n        template_fields:\n          type: array\n          readOnly: true\n          items:\n            type: string\n        sub_dag:\n          $ref: '#/components/schemas/DAG'\n        downstream_task_ids:\n          type: array\n          readOnly: true\n          items:\n            type: string\n\n    TaskCollection:\n      type: object\n      description: Collection of tasks.\n      properties:\n        tasks:\n          type: array\n          items:\n            $ref: '#/components/schemas/Task'\n\n    # Plugin\n    PluginCollectionItem:\n      type: object\n      description: |\n        A plugin Item.\n\n        *New in version 2.1.0*\n      properties:\n        number:\n          type: string\n          description: The plugin number\n        name:\n          type: string\n          description: The name of the plugin\n        hooks:\n          type: array\n          items:\n            type: string\n            nullable: true\n          description: The plugin hooks\n        executors:\n          type: array\n          items:\n            type: string\n            nullable: true\n          description: The plugin executors\n        macros:\n          type: array\n          items:\n            type: object\n            nullable: true\n          description: The plugin macros\n        flask_blueprints:\n          type: array\n          items:\n            type: object\n            nullable: true\n          description: The flask blueprints\n        appbuilder_views:\n          type: array\n          items:\n            type: object\n            nullable: true\n          description: The appuilder views\n        appbuilder_menu_items:\n          type: array\n          items:\n            type: object\n            nullable: true\n          description: The Flask Appbuilder menu items\n        global_operator_extra_links:\n          type: array\n          items:\n            type: object\n            nullable: true\n          description: The global operator extra links\n        operator_extra_links:\n          type: array\n          items:\n            type: object\n            nullable: true\n          description: Operator extra links\n        source:\n          type: string\n          description: The plugin source\n          nullable: true\n\n    PluginCollection:\n      type: object\n      description: |\n        A collection of plugin.\n\n        *New in version 2.1.0*\n      allOf:\n        - type: object\n          properties:\n            plugins:\n              type: array\n              items:\n                $ref: '#/components/schemas/PluginCollectionItem'\n        - $ref: '#/components/schemas/CollectionInfo'\n\n    Role:\n      description: |\n        a role item.\n\n        *New in version 2.1.0*\n      type: object\n      properties:\n        name:\n          type: string\n          description: |\n            The name of the role\n\n            *Changed in version 2.3.0*\u0026#58; A minimum character length requirement ('minLength') is added.\n          minLength: 1\n        actions:\n          type: array\n          items:\n            $ref: '#/components/schemas/ActionResource'\n\n    RoleCollection:\n      description: |\n        A collection of roles.\n\n        *New in version 2.1.0*\n      type: object\n      allOf:\n        - type: object\n          properties:\n            roles:\n              type: array\n              items:\n                $ref: '#/components/schemas/Role'\n        - $ref: '#/components/schemas/CollectionInfo'\n\n    Action:\n      description: |\n        An action Item.\n\n        *New in version 2.1.0*\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the permission \"action\"\n          nullable: false\n\n    ActionCollection:\n      description: |\n        A collection of actions.\n\n        *New in version 2.1.0*\n      type: object\n      allOf:\n        - type: object\n          properties:\n            actions:\n              type: array\n              items:\n                $ref: '#/components/schemas/Action'\n        - $ref: '#/components/schemas/CollectionInfo'\n\n    Resource:\n      description: |\n        A resource on which permissions are granted.\n\n        *New in version 2.1.0*\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the resource\n          nullable: false\n\n    ActionResource:\n      description: |\n        The Action-Resource item.\n\n        *New in version 2.1.0*\n      type: object\n      properties:\n        action:\n          type: object\n          $ref: '#/components/schemas/Action'\n          description: The permission action\n        resource:\n          type: object\n          $ref: '#/components/schemas/Resource'\n          description: The permission resource\n\n    # Configuration\n    ConfigOption:\n      type: object\n      description: The option of configuration.\n      properties:\n        key:\n          type: string\n          readOnly: true\n        value:\n          type: string\n          readOnly: true\n\n    ConfigSection:\n      type: object\n      description: The section of configuration.\n      properties:\n        name:\n          type: string\n          readOnly: true\n        options:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConfigOption'\n\n    Config:\n      type: object\n      description: The configuration.\n      properties:\n        sections:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConfigSection'\n\n    VersionInfo:\n      type: object\n      description: Version information.\n      properties:\n        version:\n          type: string\n          description: The version of Airflow\n        git_version:\n          type: string\n          description: The git version (including git commit hash)\n          nullable: true\n\n    # Form\n    ClearTaskInstance:\n      type: object\n      properties:\n        dry_run:\n          description: |\n            If set, don't actually run this operation. The response will contain a list of task instances\n            planned to be cleaned, but not modified in any way.\n          type: boolean\n          default: true\n\n        task_ids:\n          description: |\n            A list of task ids to clear.\n\n            *New in version 2.1.0*\n          type: array\n          items:\n            type: string\n          minItems: 1\n\n        start_date:\n          description: The minimum execution date to clear.\n          type: string\n          format: datetime\n\n        end_date:\n          description: The maximum execution date to clear.\n          type: string\n          format: datetime\n\n        only_failed:\n          description: Only clear failed tasks.\n          type: boolean\n          default: true\n\n        only_running:\n          description: Only clear running tasks.\n          type: boolean\n          default: false\n\n        include_subdags:\n          description: Clear tasks in subdags and clear external tasks indicated by ExternalTaskMarker.\n          type: boolean\n\n        include_parentdag:\n          description: Clear tasks in the parent dag of the subdag.\n          type: boolean\n\n        reset_dag_runs:\n          description: Set state of DAG runs to RUNNING.\n          type: boolean\n\n    UpdateTaskInstancesState:\n      type: object\n      properties:\n        dry_run:\n          description: |\n            If set, don't actually run this operation. The response will contain a list of task instances\n            planned to be affected, but won't be modified in any way.\n          type: boolean\n          default: true\n\n        task_id:\n          description: The task ID.\n          type: string\n\n        execution_date:\n          description: The execution date. Either set this or dag_run_id but not both.\n          type: string\n          format: datetime\n\n        dag_run_id:\n          description: |\n            The task instance's DAG run ID. Either set this or execution_date but not both.\n\n            *New in version 2.3.0*\n          type: string\n\n        include_upstream:\n          description: If set to true, upstream tasks are also affected.\n          type: boolean\n\n        include_downstream:\n          description: If set to true, downstream tasks are also affected.\n          type: boolean\n\n        include_future:\n          description: If set to True, also tasks from future DAG Runs are affected.\n          type: boolean\n\n        include_past:\n          description: If set to True, also tasks from past DAG Runs are affected.\n          type: boolean\n\n        new_state:\n          description: Expected new state.\n          type: string\n          enum:\n            - success\n            - failed\n\n    ListDagRunsForm:\n      type: object\n      properties:\n        order_by:\n          type: string\n          description: |\n            The name of the field to order the results by. Prefix a field name\n            with `-` to reverse the sort order.\n\n            *New in version 2.1.0*\n        page_offset:\n          type: integer\n          minimum: 0\n          description: The number of items to skip before starting to collect the result set.\n\n        page_limit:\n          type: integer\n          minimum: 1\n          default: 100\n          description: The numbers of items to return.\n\n        dag_ids:\n          type: array\n          items:\n            type: string\n          description:\n            Return objects with specific DAG IDs.\n\n            The value can be repeated to retrieve multiple matching values (OR condition).\n\n        states:\n          type: array\n          items:\n            type: string\n          description:\n            Return objects with specific states.\n\n            The value can be repeated to retrieve multiple matching values (OR condition).\n\n        execution_date_gte:\n          type: string\n          format: date-time\n          description: |\n            Returns objects greater or equal to the specified date.\n\n            This can be combined with execution_date_lte key to receive only the selected period.\n\n        execution_date_lte:\n          type: string\n          format: date-time\n          description: |\n            Returns objects less than or equal to the specified date.\n\n            This can be combined with execution_date_gte key to receive only the selected period.\n\n        start_date_gte:\n          type: string\n          format: date-time\n          description: |\n            Returns objects greater or equal the specified date.\n\n            This can be combined with start_date_lte key to receive only the selected period.\n\n        start_date_lte:\n          type: string\n          format: date-time\n          description: |\n            Returns objects less or equal the specified date.\n\n            This can be combined with start_date_gte parameter to receive only the selected period\n\n        end_date_gte:\n          type: string\n          format: date-time\n          description: |\n            Returns objects greater or equal the specified date.\n\n            This can be combined with end_date_lte parameter to receive only the selected period.\n        end_date_lte:\n          type: string\n          format: date-time\n          description: |\n            Returns objects less than or equal to the specified date.\n\n            This can be combined with end_date_gte parameter to receive only the selected period.\n\n    ListTaskInstanceForm:\n      type: object\n      properties:\n        dag_ids:\n          type: array\n          items:\n            type: string\n          description:\n            Return objects with specific DAG IDs.\n\n            The value can be repeated to retrieve multiple matching values (OR condition).\n        execution_date_gte:\n          type: string\n          format: date-time\n          description: |\n            Returns objects greater or equal to the specified date.\n\n            This can be combined with execution_date_lte parameter to receive only the selected period.\n        execution_date_lte:\n          type: string\n          format: date-time\n          description: |\n            Returns objects less than or equal to the specified date.\n\n            This can be combined with execution_date_gte parameter to receive only the selected period.\n        start_date_gte:\n          type: string\n          format: date-time\n          description: |\n            Returns objects greater or equal the specified date.\n\n            This can be combined with start_date_lte parameter to receive only the selected period.\n        start_date_lte:\n          type: string\n          format: date-time\n          description: |\n            Returns objects less or equal the specified date.\n\n            This can be combined with start_date_gte parameter to receive only the selected period.\n        end_date_gte:\n          type: string\n          format: date-time\n          description: |\n            Returns objects greater or equal the specified date.\n\n            This can be combined with start_date_lte parameter to receive only the selected period.\n        end_date_lte:\n          type: string\n          format: date-time\n          description: |\n            Returns objects less than or equal to the specified date.\n\n            This can be combined with start_date_gte parameter to receive only the selected period.\n        duration_gte:\n          type: number\n          description: |\n            Returns objects greater than or equal to the specified values.\n\n            This can be combined with duration_lte parameter to receive only the selected period.\n        duration_lte:\n          type: number\n          description: |\n            Returns objects less than or equal to the specified values.\n\n            This can be combined with duration_gte parameter to receive only the selected range.\n        state:\n          type: array\n          items:\n            $ref: '#/components/schemas/TaskState'\n          description:\n            The value can be repeated to retrieve multiple matching values (OR condition).\n        pool:\n          type: array\n          items:\n            type: string\n          description:\n            The value can be repeated to retrieve multiple matching values (OR condition).\n        queue:\n          type: array\n          items:\n            type: string\n          description:\n            The value can be repeated to retrieve multiple matching values (OR condition).\n\n    # Common data type\n    ScheduleInterval:\n      description: |\n        Schedule interval. Defines how often DAG runs, this object gets added to your latest task instance's\n        execution_date to figure out the next schedule.\n      readOnly: true\n      anyOf:\n        - $ref: '#/components/schemas/TimeDelta'\n        - $ref: '#/components/schemas/RelativeDelta'\n        - $ref: '#/components/schemas/CronExpression'\n      discriminator:\n        propertyName: __type\n\n    TimeDelta:\n      description: Time delta\n      type: object\n      required:\n        - __type\n        - days\n        - seconds\n        - microseconds\n      properties:\n        __type: {type: string}\n        days: {type: integer}\n        seconds: {type: integer}\n        microseconds: {type: integer}\n\n    RelativeDelta:\n      description: Relative delta\n      # TODO: Why we need these fields?\n      type: object\n      required:\n        - __type\n        - years\n        - months\n        - days\n        - leapdays\n        - hours\n        - minutes\n        - seconds\n        - microseconds\n        - year\n        - month\n        - day\n        - hour\n        - minute\n        - second\n        - microsecond\n      properties:\n        __type: {type: string}\n        years: {type: integer}\n        months: {type: integer}\n        days: {type: integer}\n        leapdays: {type: integer}\n        hours: {type: integer}\n        minutes: {type: integer}\n        seconds: {type: integer}\n        microseconds: {type: integer}\n        year: {type: integer}\n        month: {type: integer}\n        day: {type: integer}\n        hour: {type: integer}\n        minute: {type: integer}\n        second: {type: integer}\n        microsecond: {type: integer}\n\n    CronExpression:\n      description: Cron expression\n      type: object\n      required:\n        - __type\n        - value\n      properties:\n        __type: {type: string}\n        value: {type: string}\n      nullable: true\n\n    Timezone:\n      type: string\n\n    Tag:\n      description: Tag\n      # Object to maintain extensibility\n      type: object\n      properties:\n        name:\n          type: string\n\n    Color:\n      description: Color in hexadecimal notation.\n      type: string\n      pattern: ^#[a-fA-F0-9]{3,6}$\n\n    ClassReference:\n      description: Class reference\n      type: object\n      properties:\n        module_path:\n          type: string\n          readOnly: true\n        class_name:\n          type: string\n          readOnly: true\n\n    # Generic\n    Error:\n      description: |\n        [RFC7807](https://tools.ietf.org/html/rfc7807) compliant response.\n      type: object\n      properties:\n        type:\n          type: string\n          description: |\n            A URI reference [RFC3986] that identifies the problem type. This specification\n            encourages that, when dereferenced, it provide human-readable documentation for\n            the problem type.\n        title:\n          type: string\n          description: A short, human-readable summary of the problem type.\n        status:\n          type: number\n          description: The HTTP status code generated by the API server for this occurrence of the problem.\n        detail:\n          type: string\n          description: A human-readable explanation specific to this occurrence of the problem.\n        instance:\n          type: string\n          description: |\n            A URI reference that identifies the specific occurrence of the problem. It may or may\n            not yield further information if dereferenced.\n      required:\n        - type\n        - title\n        - status\n\n    CollectionInfo:\n      description: Metadata about collection.\n      type: object\n      properties:\n        total_entries:\n          type: integer\n          description: Count of objects in the current result set.\n\n    # Enums\n    TaskState:\n      description: |\n        Task state.\n\n        *Changed in version 2.0.2*\u0026#58; 'removed' is added as a possible value.\n\n        *Changed in version 2.2.0*\u0026#58; 'deferred' and 'sensing' is added as a possible value.\n      type: string\n      enum:\n        - success\n        - running\n        - failed\n        - upstream_failed\n        - skipped\n        - up_for_retry\n        - up_for_reschedule\n        - queued\n        - none\n        - scheduled\n        - deferred\n        - sensing\n        - removed\n\n    DagState:\n      description: |\n        DAG State.\n\n        *Changed in version 2.1.3*\u0026#58; 'queued' is added as a possible value.\n      type: string\n      enum:\n        - queued\n        - running\n        - success\n        - failed\n\n    TriggerRule:\n      description: |\n        Trigger rule.\n\n        *Changed in version 2.2.0*\u0026#58; 'none_failed_min_one_success' is added as a possible value.\n      type: string\n      enum:\n        - all_success\n        - all_failed\n        - all_done\n        - one_success\n        - one_failed\n        - none_failed\n        - none_skipped\n        - none_failed_or_skipped\n        - none_failed_min_one_success\n        - dummy\n\n    WeightRule:\n      description: Weight rule.\n      type: string\n      enum:\n        - downstream\n        - upstream\n        - absolute\n\n    HealthStatus:\n      description: Health status\n      type: string\n      enum:\n        - healthy\n        - unhealthy\n\n  # Reusable path, query, header and cookie parameters\n  parameters:\n    # Pagination parameters\n    PageOffset:\n      in: query\n      name: offset\n      required: false\n      schema:\n        type: integer\n        minimum: 0\n      description: The number of items to skip before starting to collect the result set.\n\n    PageLimit:\n      in: query\n      name: limit\n      required: false\n      schema:\n        type: integer\n        default: 100\n      description: The numbers of items to return.\n\n    # Database entity fields\n    Username:\n      in: path\n      name: username\n      schema:\n        type: string\n      required: true\n      description: |\n        The username of the user.\n\n        *New in version 2.1.0*\n    RoleName:\n      in: path\n      name: role_name\n      schema:\n        type: string\n      required: true\n      description: The role name\n\n    ConnectionID:\n      in: path\n      name: connection_id\n      schema:\n        type: string\n      required: true\n      description: The connection ID.\n\n    DAGID:\n      in: path\n      name: dag_id\n      schema:\n        type: string\n      required: true\n      description: The DAG ID.\n\n    TaskID:\n      in: path\n      name: task_id\n      schema:\n        type: string\n      required: true\n      description: The task ID.\n\n    MapIndex:\n      in: path\n      name: map_index\n      schema:\n        type: integer\n      required: true\n      description: The map index.\n\n    DAGRunID:\n      in: path\n      name: dag_run_id\n      schema:\n        type: string\n      required: true\n      description: The DAG run ID.\n\n    TaskTryNumber:\n      in: path\n      name: task_try_number\n      schema:\n        type: integer\n      required: true\n      description: The task try number.\n\n    EventLogID:\n      in: path\n      name: event_log_id\n      schema:\n        type: integer\n      required: true\n      description: The event log ID.\n\n    ImportErrorID:\n      in: path\n      name: import_error_id\n      schema:\n        type: integer\n      required: true\n      description: The import error ID.\n\n    PoolName:\n      in: path\n      name: pool_name\n      schema:\n        type: string\n      required: true\n      description: The pool name.\n\n    VariableKey:\n      in: path\n      name: variable_key\n      schema:\n        type: string\n      required: true\n      description: The variable Key.\n\n    # Logs\n    FullContent:\n      in: query\n      name: full_content\n      schema:\n        type: boolean\n      required: false\n      description: |\n        A full content will be returned.\n        By default, only the first fragment will be returned.\n\n    ContinuationToken:\n      in: query\n      name: token\n      schema:\n        type: string\n      required: false\n      description: |\n        A token that allows you to continue fetching logs.\n        If passed, it will specify the location from which the download should be continued.\n\n    XComKey:\n      in: path\n      name: xcom_key\n      schema:\n        type: string\n      required: true\n      description: The XCom key.\n    # Filter\n    FilterExecutionDateGTE:\n      in: query\n      name: execution_date_gte\n      schema:\n        type: string\n        format: date-time\n      required: false\n      description: |\n        Returns objects greater or equal to the specified date.\n\n        This can be combined with execution_date_lte parameter to receive only the selected period.\n    FilterExecutionDateLTE:\n      in: query\n      name: execution_date_lte\n      schema:\n        type: string\n        format: date-time\n      required: false\n      description: |\n        Returns objects less than or equal to the specified date.\n\n        This can be combined with execution_date_gte parameter to receive only the selected period.\n    FilterStartDateGTE:\n      in: query\n      name: start_date_gte\n      schema:\n        type: string\n        format: date-time\n      required: false\n      description: |\n        Returns objects greater or equal the specified date.\n\n        This can be combined with start_date_lte parameter to receive only the selected period.\n    FilterStartDateLTE:\n      in: query\n      name: start_date_lte\n      schema:\n        type: string\n        format: date-time\n      required: false\n      description: |\n        Returns objects less or equal the specified date.\n\n        This can be combined with start_date_gte parameter to receive only the selected period.\n    FilterEndDateGTE:\n      in: query\n      name: end_date_gte\n      schema:\n        type: string\n        format: date-time\n      required: false\n      description: |\n        Returns objects greater or equal the specified date.\n\n        This can be combined with start_date_lte parameter to receive only the selected period.\n    FilterEndDateLTE:\n      in: query\n      name: end_date_lte\n      schema:\n        type: string\n        format: date-time\n      required: false\n      description: |\n        Returns objects less than or equal to the specified date.\n\n        This can be combined with start_date_gte parameter to receive only the selected period.\n    FilterDurationGTE:\n      in: query\n      name: duration_gte\n      schema:\n        type: number\n      required: false\n      description: |\n        Returns objects greater than or equal to the specified values.\n\n        This can be combined with duration_lte parameter to receive only the selected period.\n    FilterDurationLTE:\n      in: query\n      name: duration_lte\n      schema:\n        type: number\n      required: false\n      description: |\n        Returns objects less than or equal to the specified values.\n\n        This can be combined with duration_gte parameter to receive only the selected range.\n    FilterState:\n      in: query\n      name: state\n      schema:\n        type: array\n        items:\n          type: string\n      required: false\n      description:\n        The value can be repeated to retrieve multiple matching values (OR condition).\n    FilterPool:\n      in: query\n      name: pool\n      schema:\n        type: array\n        items:\n          type: string\n      required: false\n      description:\n        The value can be repeated to retrieve multiple matching values (OR condition).\n    FilterQueue:\n      in: query\n      name: queue\n      schema:\n        type: array\n        items:\n          type: string\n      description:\n        The value can be repeated to retrieve multiple matching values (OR condition).\n\n    FilterTags:\n      in: query\n      name: tags\n      schema:\n        type: array\n        items:\n          type: string\n      description: |\n          List of tags to filter results.\n\n          *New in version 2.2.0*\n\n    OrderBy:\n      in: query\n      name: order_by\n      schema:\n        type: string\n      required: false\n      description: |\n        The name of the field to order the results by.\n        Prefix a field name with `-` to reverse the sort order.\n\n        *New in version 2.1.0*\n\n    OnlyActive:\n      in: query\n      name: only_active\n      schema:\n        type: boolean\n        default: true\n      required: false\n      description: |\n        Only filter active DAGs.\n\n        *New in version 2.1.1*\n\n    # Other parameters\n\n    FileToken:\n      in: path\n      name: file_token\n      schema:\n        type: string\n      required: true\n      description: |\n        The key containing the encrypted path to the file. Encryption and decryption take place only on\n        the server. This prevents the client from reading an non-DAG file. This also ensures API\n        extensibility, because the format of encrypted data may change.\n\n    UpdateMask:\n      in: query\n      name: update_mask\n      schema:\n        type: array\n        items:\n          type: string\n      description: |\n        The fields to update on the resource. If absent or empty, all modifiable fields are updated.\n        A comma-separated list of fully qualified names of fields.\n      style: form\n      explode: false\n\n  # Reusable request bodies\n  requestBodies: {}\n\n  # Reusable responses, such as 401 Unauthenticated or 400 Bad Request\n  responses:\n    # 400\n    'BadRequest':\n      description: Client specified an invalid argument.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    # 401\n    'Unauthenticated':\n      description: Request not authenticated due to missing, invalid, authentication info.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    # 403\n    'PermissionDenied':\n      description: Client does not have sufficient permission.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    # 404\n    'NotFound':\n      description: A specified resource is not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    # 405\n    'MethodNotAllowed':\n      description: Request method is known by the server but is not supported by the target resource.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    # 406\n    'NotAcceptable':\n      description: A specified Accept header is not allowed.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    # 409\n    'AlreadyExists':\n      description: An existing resource conflicts with the request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    # 500\n    'Unknown':\n      description: Unknown server error.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n\n  # Reusable response headers\n  headers: {}\n\n  # Reusable examples\n  examples: {}\n\n  # Reusable links\n  links: {}\n\n  # Reusable callbacks\n  callbacks: {}\n\n  securitySchemes:\n    Basic:\n      type: http\n      scheme: basic\n    GoogleOpenId:\n      type: openIdConnect\n      openIdConnectUrl: https://accounts.google.com/.well-known/openid-configuration\n    Kerberos:\n      type: http\n      scheme: negotiate\n\n# The API will provide support for plugins to support various authorization mechanisms.\n# Detailed information will be available in the plugin specification.\nsecurity: []\n\ntags:\n  - name: Config\n  - name: Connection\n  - name: DAG\n  - name: DAGRun\n  - name: EventLog\n  - name: ImportError\n  - name: Monitoring\n  - name: Pool\n  - name: Provider\n  - name: TaskInstance\n  - name: Variable\n  - name: XCom\n  - name: Plugin\n  - name: Role\n  - name: Permission\n  - name: User\n\nexternalDocs:\n  url: https://airflow.apache.org/docs/apache-airflow/stable/\n",
			"canonicalURL": "/github.com/apache/airflow-site@295220274a9a56b1d51ab3bcee11485aa4120c76/-/blob/docs-archive/apache-airflow/2.3.1/_specs/v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/apache/airflow-site/blob/295220274a9a56b1d51ab3bcee11485aa4120c76/docs-archive/apache-airflow/2.3.1/_specs/v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/dags\": get: responses: 200: contents: application/json: generate schema: allOf: field dags: item: field schedule_interval: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}