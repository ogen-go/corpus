{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/clarkmcc/go-hubspot"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "generated/timeline/api/openapi.yaml",
			"byteSize": 60240,
			"content": "openapi: 3.0.1\ninfo:\n  description: This feature allows an app to create and configure custom events that\n    can show up in the timelines of certain CRM objects like contacts, companies,\n    tickets, or deals. You'll find multiple use cases for this API in the sections\n    below.\n  title: Timeline events\n  version: v3\nservers:\n- url: https://api.hubapi.com/\ntags:\n- description: Definitions and configuration for timeline events.\n  name: Templates\n- description: Specific tokens that map to CRM properties and can be used by timeline\n    events. This is how you can use property stamping to create full CRM objects.\n  name: Tokens\n- description: Events shown on a CRM object's timeline.\n  name: Events\npaths:\n  /crm/v3/timeline/events:\n    post:\n      description: Creates an instance of a timeline event based on an event template.\n        Once created, this event is immutable on the object timeline and cannot be\n        modified. If the event template was configured to update object properties\n        via `objectPropertyName`, this call will also attempt to updates those properties,\n        or add them if they don't exist.\n      operationId: post-/integrators/timeline/v3/events_create\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TimelineEvent'\n        description: The timeline event definition.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                objectType: contacts\n                id: petspot:1001298:art3mis-pup@petspot.com-004\n                eventTemplateId: \"1001298\"\n                email: art3mis-pup@petspot.com\n                objectId: \"28001\"\n                timestamp: 2020-01-30T17:42:10.276Z\n                tokens:\n                  petName: Art3mis\n                  petColor: black\n                  petAge: \"3\"\n                extraData:\n                  questions:\n                  - question: Who's a good girl?\n                    answer: Bark!\n                  - question: Do you wanna go on a walk?\n                    answer: Woof!\n                timelineIFrame:\n                  linkLabel: View Art3mis\n                  headerLabel: Art3mis dog\n                  url: https://my.petspot.com/pets/Art3mis\n                  width: 600\n                  height: 400\n              schema:\n                $ref: '#/components/schemas/TimelineEventResponse'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - oauth2_legacy:\n        - contacts\n        - tickets\n        - timeline\n      summary: Create a single event\n      tags:\n      - Events\n  /crm/v3/timeline/events/batch/create:\n    post:\n      description: Creates multiple instances of timeline events based on an event\n        template. Once created, these event are immutable on the object timeline and\n        cannot be modified. If the event template was configured to update object\n        properties via `objectPropertyName`, this call will also attempt to updates\n        those properties, or add them if they don't exist.\n      operationId: post-/integrators/timeline/v3/events/batch/create_createBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchInputTimelineEvent'\n        description: The timeline event definition.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchResponseTimelineEventResponse'\n          description: successful operation\n        \"207\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchResponseTimelineEventResponseWithErrors'\n          description: multiple statuses\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - oauth2_legacy:\n        - contacts\n        - tickets\n        - timeline\n      summary: Creates multiple events\n      tags:\n      - Events\n  /crm/v3/timeline/events/{eventTemplateId}/{eventId}:\n    get:\n      description: This returns the previously created event. It contains all existing\n        info for the event, but not necessarily the CRM object.\n      operationId: get-/integrators/timeline/v3/events/{eventTemplateId}/{eventId}_getById\n      parameters:\n      - description: The event template ID.\n        explode: false\n        in: path\n        name: eventTemplateId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The event ID.\n        explode: false\n        in: path\n        name: eventId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimelineEventResponse'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - oauth2_legacy:\n        - contacts\n        - tickets\n        - timeline\n      summary: Gets the event\n      tags:\n      - Events\n  /crm/v3/timeline/events/{eventTemplateId}/{eventId}/detail:\n    get:\n      description: This will take the `detailTemplate` from the event template and\n        return an object rendering the specified event. If the template references\n        `extraData` that isn't found in the event, it will be ignored and we'll render\n        without it.\n      operationId: get-/integrators/timeline/v3/events/{eventTemplateId}/{eventId}/detail_getDetailById\n      parameters:\n      - description: The event template ID.\n        explode: false\n        in: path\n        name: eventTemplateId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The event ID.\n        explode: false\n        in: path\n        name: eventId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventDetail'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - oauth2_legacy:\n        - contacts\n        - tickets\n        - timeline\n      summary: Gets the detailTemplate as rendered\n      tags:\n      - Events\n  /crm/v3/timeline/events/{eventTemplateId}/{eventId}/render:\n    get:\n      description: This will take either the `headerTemplate` or `detailTemplate`\n        from the event template and render for the specified event as HTML. If the\n        template references `extraData` that isn't found in the event, it will be\n        ignored and we'll render without it.\n      operationId: get-/integrators/timeline/v3/events/{eventTemplateId}/{eventId}/render_getRenderById\n      parameters:\n      - description: The event template ID.\n        explode: false\n        in: path\n        name: eventTemplateId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The event ID.\n        explode: false\n        in: path\n        name: eventId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Set to 'true', we want to render the `detailTemplate` instead\n          of the `headerTemplate`.\n        explode: true\n        in: query\n        name: detail\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            text/html:\n              schema:\n                type: string\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - oauth2_legacy:\n        - contacts\n        - tickets\n        - timeline\n      summary: Renders the header or detail as HTML\n      tags:\n      - Events\n  /crm/v3/timeline/{appId}/event-templates:\n    get:\n      description: Use this to list all event templates owned by your app.\n      operationId: get-/integrators/timeline/v3/{appId}/event-templates_getAll\n      parameters:\n      - description: The ID of the target app.\n        explode: false\n        in: path\n        name: appId\n        required: true\n        schema:\n          format: int32\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                results:\n                - id: \"15758\"\n                  objectType: companies\n                  name: company test\n                  headerTemplate: abcde\n                  tokens: []\n                - id: \"1000151\"\n                  objectType: deals\n                  createdAt: 2020-02-12T20:58:26Z\n                  updatedAt: 2020-02-12T20:58:26Z\n                  name: deal test\n                  headerTemplate: deal\n                  detailTemplate: |-\n                    Deal occurred at {{#formatDate timestamp}}{{/formatDate}}\n\n                    test\n                  tokens:\n                  - name: test\n                    type: string\n                    createdAt: 2020-02-12T20:58:26Z\n                    updatedAt: 2020-02-12T20:58:26Z\n                    label: test\n                    objectPropertyName: test\n                    options: []\n                - id: \"1001298\"\n                  objectType: contacts\n                  createdAt: 2020-02-12T20:58:26Z\n                  updatedAt: 2020-02-12T20:58:26Z\n                  name: PetSpot Registration\n                  headerTemplate: Registered for [{{petName}}](https://my.petspot.com/pets/{{petName}})\n                  detailTemplate: |-\n                    Registration occurred at {{#formatDate timestamp}}{{/formatDate}}\n\n                    #### Questions\n                    {{#each extraData.questions}}\n                      **{{question}}**: {{answer}}\n                    {{/each}}\n\n                    EDIT\n                  tokens:\n                  - name: petAge\n                    type: number\n                    createdAt: 2020-02-12T20:58:26Z\n                    updatedAt: 2020-02-12T20:58:26Z\n                    label: Pet Age\n                    options: []\n                  - name: petColor\n                    type: enumeration\n                    createdAt: 2020-02-12T20:58:26Z\n                    updatedAt: 2020-02-12T20:58:26Z\n                    label: Pet Color\n                    options:\n                    - value: black\n                      label: Black\n                    - value: brown\n                      label: Brown\n                    - value: other\n                      label: Other\n                    - value: white\n                      label: White\n                    - value: yellow\n                      label: Yellow\n                  - name: petName\n                    type: string\n                    createdAt: 2020-02-12T20:58:26Z\n                    updatedAt: 2020-02-12T20:58:26Z\n                    label: Pet Name\n                    options: []\n              schema:\n                $ref: '#/components/schemas/CollectionResponseTimelineEventTemplateNoPaging'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - developer_hapikey: []\n      summary: List all event templates for your app\n      tags:\n      - Templates\n    post:\n      description: |-\n        Event templates define the general structure for a custom timeline event. This includes formatted copy for its heading and details, as well as any custom property definitions. The event could be something like viewing a video, registering for a webinar, or filling out a survey. A single app can define multiple event templates.\n\n        Event templates will be created for contacts by default, but they can be created for companies, tickets, and deals as well.\n\n        Each event template contains its own set of tokens and `Markdown` templates. These tokens can be associated with any CRM object properties via the `objectPropertyName` field to fully build out CRM objects.\n\n        You must create an event template before you can create events.\n      operationId: post-/integrators/timeline/v3/{appId}/event-templates_create\n      parameters:\n      - description: The ID of the target app.\n        explode: false\n        in: path\n        name: appId\n        required: true\n        schema:\n          format: int32\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TimelineEventTemplateCreateRequest'\n        description: The new event template definition.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                id: \"1001298\"\n                objectType: contacts\n                createdAt: 2020-02-12T20:58:26Z\n                updatedAt: 2020-02-12T20:58:26Z\n                name: PetSpot Registration\n                headerTemplate: Registered for [{{petName}}](https://my.petspot.com/pets/{{petName}})\n                detailTemplate: |-\n                  Registration occurred at {{#formatDate timestamp}}{{/formatDate}}\n\n                  #### Questions\n                  {{#each extraData.questions}}\n                    **{{question}}**: {{answer}}\n                  {{/each}}\n                tokens:\n                - name: petName\n                  type: string\n                  createdAt: 2020-02-12T20:58:26Z\n                  updatedAt: 2020-02-12T20:58:26Z\n                  label: Pet Name\n                  options: []\n                - name: petAge\n                  type: number\n                  createdAt: 2020-02-12T20:58:26Z\n                  updatedAt: 2020-02-12T20:58:26Z\n                  label: Pet Age\n                  options: []\n                - name: petColor\n                  type: enumeration\n                  createdAt: 2020-02-12T20:58:26Z\n                  updatedAt: 2020-02-12T20:58:26Z\n                  label: Pet Color\n                  options:\n                  - value: white\n                    label: White\n                  - value: black\n                    label: Black\n                  - value: brown\n                    label: Brown\n                  - value: other\n                    label: Other\n              schema:\n                $ref: '#/components/schemas/TimelineEventTemplate'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - developer_hapikey: []\n      summary: Create an event template for your app\n      tags:\n      - Templates\n  /crm/v3/timeline/{appId}/event-templates/{eventTemplateId}:\n    delete:\n      description: |-\n        This will delete the event template. All associated events will be removed from search results and the timeline UI.\n\n        This action can't be undone, so it's highly recommended that you stop using any associated events before deleting a template.\n      operationId: delete-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}_archive\n      parameters:\n      - description: The event template ID.\n        explode: false\n        in: path\n        name: eventTemplateId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The ID of the target app.\n        explode: false\n        in: path\n        name: appId\n        required: true\n        schema:\n          format: int32\n          type: integer\n        style: simple\n      responses:\n        \"204\":\n          content: {}\n          description: No content\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - developer_hapikey: []\n      summary: Deletes an event template for the app\n      tags:\n      - Templates\n    get:\n      description: View the current state of a specific template and its tokens.\n      operationId: get-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}_getById\n      parameters:\n      - description: The event template ID.\n        explode: false\n        in: path\n        name: eventTemplateId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The ID of the target app.\n        explode: false\n        in: path\n        name: appId\n        required: true\n        schema:\n          format: int32\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                id: \"1001298\"\n                objectType: contacts\n                createdAt: 2020-02-12T20:58:26Z\n                updatedAt: 2020-02-12T20:58:26Z\n                name: PetSpot Registration\n                headerTemplate: Registered for [{{petName}}](https://my.petspot.com/pets/{{petName}})\n                detailTemplate: |-\n                  Registration occurred at {{#formatDate timestamp}}{{/formatDate}}\n\n                  #### Questions\n                  {{#each extraData.questions}}\n                    **{{question}}**: {{answer}}\n                  {{/each}}\n\n                  EDIT\n                tokens:\n                - name: petAge\n                  type: number\n                  createdAt: 2020-02-12T20:58:26Z\n                  updatedAt: 2020-02-12T20:58:26Z\n                  label: Pet Age\n                  options: []\n                - name: petColor\n                  type: enumeration\n                  createdAt: 2020-02-12T20:58:26Z\n                  updatedAt: 2020-02-12T20:58:26Z\n                  label: Pet Color\n                  options:\n                  - value: black\n                    label: Black\n                  - value: brown\n                    label: Brown\n                  - value: other\n                    label: Other\n                  - value: white\n                    label: White\n                  - value: yellow\n                    label: Yellow\n                - name: petName\n                  type: string\n                  createdAt: 2020-02-12T20:58:26Z\n                  updatedAt: 2020-02-12T20:58:26Z\n                  label: Pet Name\n                  options: []\n              schema:\n                $ref: '#/components/schemas/TimelineEventTemplate'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - developer_hapikey: []\n      summary: Gets a specific event template for your app\n      tags:\n      - Templates\n    put:\n      description: |-\n        Updates an existing template and its tokens. This is primarily used to update the headerTemplate/detailTemplate, and those changes will take effect for existing events.\n\n        You can also update or replace all the tokens in the template here instead of doing individual API calls on the `/tokens` endpoint.\n      operationId: put-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}_update\n      parameters:\n      - description: The event template ID.\n        explode: false\n        in: path\n        name: eventTemplateId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The ID of the target app.\n        explode: false\n        in: path\n        name: appId\n        required: true\n        schema:\n          format: int32\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TimelineEventTemplateUpdateRequest'\n        description: The updated event template definition.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                id: \"1001298\"\n                objectType: contacts\n                createdAt: 2020-02-12T20:58:26Z\n                updatedAt: 2020-02-12T20:58:26Z\n                name: PetSpot Registration\n                headerTemplate: Registered for [{{petName}}](https://my.petspot.com/pets/{{petName}})\n                detailTemplate: |-\n                  Registration occurred at {{#formatDate timestamp}}{{/formatDate}}\n\n                  #### Questions\n                  {{#each extraData.questions}}\n                    **{{question}}**: {{answer}}\n                  {{/each}}\n\n                  EDIT\n                tokens:\n                - name: petAge\n                  type: number\n                  createdAt: 2020-02-12T20:58:26Z\n                  updatedAt: 2020-02-12T20:58:26Z\n                  label: Pet Age\n                  options: []\n                - name: petColor\n                  type: enumeration\n                  createdAt: 2020-02-12T20:58:26Z\n                  updatedAt: 2020-02-12T20:58:26Z\n                  label: Pet Color\n                  options:\n                  - value: white\n                    label: White\n                  - value: black\n                    label: Black\n                  - value: brown\n                    label: Brown\n                  - value: yellow\n                    label: Yellow\n                  - value: other\n                    label: Other\n                - name: petName\n                  type: string\n                  createdAt: 2020-02-12T20:58:26Z\n                  updatedAt: 2020-02-12T20:58:26Z\n                  label: Pet Name\n                  objectPropertyName: firstname\n                  options: []\n              schema:\n                $ref: '#/components/schemas/TimelineEventTemplate'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - developer_hapikey: []\n      summary: Update an existing event template\n      tags:\n      - Templates\n  /crm/v3/timeline/{appId}/event-templates/{eventTemplateId}/tokens:\n    post:\n      description: |-\n        Once you've defined an event template, it's likely that you'll want to define tokens for it as well. You can do this on the event template itself or update individual tokens here.\n\n        Event type tokens allow you to attach custom data to events displayed in a timeline or used for list segmentation.\n\n        You can also use `objectPropertyName` to associate any CRM object properties. This will allow you to fully build out CRM objects.\n\n        Token names should be unique across the template.\n      operationId: post-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens_create\n      parameters:\n      - description: The event template ID.\n        explode: false\n        in: path\n        name: eventTemplateId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The ID of the target app.\n        explode: false\n        in: path\n        name: appId\n        required: true\n        schema:\n          format: int32\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TimelineEventTemplateToken'\n        description: The new token definition.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                name: petType\n                type: enumeration\n                createdAt: 2020-02-12T20:58:26Z\n                updatedAt: 2020-02-12T20:58:26Z\n                label: Pet Type\n                options:\n                - value: dog\n                  label: Dog\n                - value: cat\n                  label: Cat\n              schema:\n                $ref: '#/components/schemas/TimelineEventTemplateToken'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - developer_hapikey: []\n      summary: Adds a token to an existing event template\n      tags:\n      - Tokens\n  /crm/v3/timeline/{appId}/event-templates/{eventTemplateId}/tokens/{tokenName}:\n    delete:\n      description: |-\n        This will remove the token from an existing template. Existing events and CRM objects will still retain the token and its mapped object properties, but new ones will not.\n\n        The timeline will still display this property for older CRM objects if it's still referenced in the template `Markdown`. New events will not.\n\n        Any lists or reports referencing deleted tokens will no longer return new contacts, but old ones will still exist in the lists.\n      operationId: delete-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens/{tokenName}_archive\n      parameters:\n      - description: The event template ID.\n        explode: false\n        in: path\n        name: eventTemplateId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The token name.\n        explode: false\n        in: path\n        name: tokenName\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The ID of the target app.\n        explode: false\n        in: path\n        name: appId\n        required: true\n        schema:\n          format: int32\n          type: integer\n        style: simple\n      responses:\n        \"204\":\n          content: {}\n          description: No content\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - developer_hapikey: []\n      summary: Removes a token from the event template\n      tags:\n      - Tokens\n    put:\n      description: This will update the existing token on an event template. Name\n        and type can't be changed on existing tokens.\n      operationId: put-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens/{tokenName}_update\n      parameters:\n      - description: The event template ID.\n        explode: false\n        in: path\n        name: eventTemplateId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The token name.\n        explode: false\n        in: path\n        name: tokenName\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The ID of the target app.\n        explode: false\n        in: path\n        name: appId\n        required: true\n        schema:\n          format: int32\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TimelineEventTemplateTokenUpdateRequest'\n        description: The updated token definition.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                name: petType\n                type: enumeration\n                createdAt: 2020-02-12T20:58:26Z\n                updatedAt: 2020-02-12T20:58:26Z\n                label: Pet Type\n                options:\n                - value: dog\n                  label: Dog\n                - value: cat\n                  label: Cat\n                - value: bird\n                  label: Bird\n              schema:\n                $ref: '#/components/schemas/TimelineEventTemplateToken'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - developer_hapikey: []\n      summary: Updates an existing token on an event template\n      tags:\n      - Tokens\ncomponents:\n  responses:\n    Error:\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: An error occurred.\n  schemas:\n    BatchInputTimelineEvent:\n      description: Used to create timeline events in batches.\n      example:\n        inputs:\n        - eventTemplateId: \"1001298\"\n          email: art3mis-pup@petspot.com\n          tokens:\n            petName: Art3mis\n            petAge: 3\n            petColor: black\n          extraData:\n            questions:\n            - question: Who's a good girl?\n              answer: Bark!\n            - question: Do you wanna go on a walk?\n              answer: Woof!\n          timelineIFrame:\n            linkLabel: View Art3mis\n            headerLabel: Art3mis dog\n            url: https://my.petspot.com/pets/Art3mis\n            width: 600\n            height: 400\n        - eventTemplateId: \"1001298\"\n          email: pocket-tiger@petspot.com\n          tokens:\n            petName: Pocket\n            petAge: 3\n            petColor: yellow\n          extraData:\n            questions:\n            - question: Who's a good kitty?\n              answer: Purr...\n            - question: Will you stop playing with that?\n              answer: Meow!\n          timelineIFrame:\n            linkLabel: View Pocket\n            headerLabel: Pocket Tiger\n            url: https://my.petspot.com/pets/Pocket\n            width: 600\n            height: 400\n      properties:\n        inputs:\n          description: A collection of timeline events we want to create.\n          items:\n            $ref: '#/components/schemas/TimelineEvent'\n          type: array\n      required:\n      - inputs\n      type: object\n    BatchResponseTimelineEventResponse:\n      description: The state of the batch event request.\n      example:\n        results:\n        - objectType: contacts\n          id: petspot:1001298:art3mis-pup@petspot.com-6edaa73d-d734-404d-908f-74774d58ac2b\n          eventTemplateId: \"1001298\"\n          email: art3mis-pup@petspot.com\n          objectId: \"28001\"\n          timestamp: 2020-01-30T18:13:25.665Z\n          tokens:\n            petName: Art3mis\n            petColor: black\n            petAge: \"3\"\n          extraData:\n            questions:\n            - question: Who's a good girl?\n              answer: Bark!\n            - question: Do you wanna go on a walk?\n              answer: Woof!\n          timelineIFrame:\n            linkLabel: View Art3mis\n            headerLabel: Art3mis dog\n            url: https://my.petspot.com/pets/Art3mis\n            width: 600\n            height: 400\n        - objectType: contacts\n          id: petspot:1001298:pocket-tiger@petspot.com-0df6277b-6eba-4d1f-8c19-1994cbfaa4ca\n          eventTemplateId: \"1001298\"\n          email: pocket-tiger@petspot.com\n          objectId: \"28651\"\n          timestamp: 2020-01-30T18:13:25.665Z\n          tokens:\n            petName: Pocket\n            petColor: yellow\n            petAge: \"3\"\n          extraData:\n            questions:\n            - question: Who's a good kitty?\n              answer: Purr...\n            - question: Will you stop playing with that?\n              answer: Meow!\n          timelineIFrame:\n            linkLabel: View Pocket\n            headerLabel: Pocket Tiger\n            url: https://my.petspot.com/pets/Pocket\n            width: 600\n            height: 400\n        status: COMPLETE\n        startedAt: 2020-01-30T18:13:24.974023Z\n        completedAt: 2020-01-30T18:13:26.227559Z\n      properties:\n        status:\n          description: The status of the batch response. Should always be COMPLETED\n            if processed.\n          enum:\n          - PENDING\n          - PROCESSING\n          - CANCELED\n          - COMPLETE\n          type: string\n        results:\n          description: Successfully created events.\n          items:\n            $ref: '#/components/schemas/TimelineEventResponse'\n          type: array\n        requestedAt:\n          description: The time the request occurred.\n          format: date-time\n          type: string\n        startedAt:\n          description: The time the request began processing.\n          format: date-time\n          type: string\n        completedAt:\n          description: The time the request was completed.\n          format: date-time\n          type: string\n        links:\n          additionalProperties:\n            type: string\n          type: object\n      required:\n      - completedAt\n      - results\n      - startedAt\n      - status\n      type: object\n    BatchResponseTimelineEventResponseWithErrors:\n      properties:\n        status:\n          enum:\n          - PENDING\n          - PROCESSING\n          - CANCELED\n          - COMPLETE\n          type: string\n        results:\n          items:\n            $ref: '#/components/schemas/TimelineEventResponse'\n          type: array\n        numErrors:\n          format: int32\n          type: integer\n        errors:\n          items:\n            $ref: '#/components/schemas/StandardError'\n          type: array\n        requestedAt:\n          format: date-time\n          type: string\n        startedAt:\n          format: date-time\n          type: string\n        completedAt:\n          format: date-time\n          type: string\n        links:\n          additionalProperties:\n            type: string\n          type: object\n      required:\n      - completedAt\n      - results\n      - startedAt\n      - status\n      type: object\n    CollectionResponseTimelineEventTemplateNoPaging:\n      example:\n        results:\n        - createdAt: 2000-01-23T04:56:07.000+00:00\n          detailTemplate: detailTemplate\n          name: name\n          tokens:\n          - name: petType\n            label: Pet Type\n            type: enumeration\n            createdAt: 2020-02-12T20:58:26Z\n            updatedAt: 2020-02-12T20:58:26Z\n            objectPropertyName: customPropertyPetType\n            options:\n            - value: dog\n              label: Dog\n            - value: cat\n              label: Cat\n          - name: petType\n            label: Pet Type\n            type: enumeration\n            createdAt: 2020-02-12T20:58:26Z\n            updatedAt: 2020-02-12T20:58:26Z\n            objectPropertyName: customPropertyPetType\n            options:\n            - value: dog\n              label: Dog\n            - value: cat\n              label: Cat\n          id: id\n          headerTemplate: headerTemplate\n          objectType: objectType\n          updatedAt: 2000-01-23T04:56:07.000+00:00\n        - createdAt: 2000-01-23T04:56:07.000+00:00\n          detailTemplate: detailTemplate\n          name: name\n          tokens:\n          - name: petType\n            label: Pet Type\n            type: enumeration\n            createdAt: 2020-02-12T20:58:26Z\n            updatedAt: 2020-02-12T20:58:26Z\n            objectPropertyName: customPropertyPetType\n            options:\n            - value: dog\n              label: Dog\n            - value: cat\n              label: Cat\n          - name: petType\n            label: Pet Type\n            type: enumeration\n            createdAt: 2020-02-12T20:58:26Z\n            updatedAt: 2020-02-12T20:58:26Z\n            objectPropertyName: customPropertyPetType\n            options:\n            - value: dog\n              label: Dog\n            - value: cat\n              label: Cat\n          id: id\n          headerTemplate: headerTemplate\n          objectType: objectType\n          updatedAt: 2000-01-23T04:56:07.000+00:00\n      properties:\n        results:\n          items:\n            $ref: '#/components/schemas/TimelineEventTemplate'\n          type: array\n      required:\n      - results\n      type: object\n    Error:\n      example:\n        message: Invalid input (details will vary based on the error)\n        correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf\n        category: VALIDATION_ERROR\n        links:\n          knowledge-base: https://www.hubspot.com/products/service/knowledge-base\n      properties:\n        message:\n          description: A human readable message describing the error along with remediation\n            steps where appropriate\n          example: An error occurred\n          type: string\n        correlationId:\n          description: A unique identifier for the request. Include this value with\n            any error reports or support tickets\n          example: aeb5f871-7f07-4993-9211-075dc63e7cbf\n          format: uuid\n          type: string\n        category:\n          description: The error category\n          type: string\n        subCategory:\n          description: A specific category that contains more specific detail about\n            the error\n          type: string\n        errors:\n          description: further information about the error\n          items:\n            $ref: '#/components/schemas/ErrorDetail'\n          type: array\n        context:\n          additionalProperties:\n            items:\n              type: string\n            type: array\n          description: Context about the error condition\n          example:\n            invalidPropertyName:\n            - propertyValue\n            missingScopes:\n            - scope1\n            - scope2\n          type: object\n        links:\n          additionalProperties:\n            type: string\n          description: A map of link names to associated URIs containing documentation\n            about the error or recommended remediation steps\n          type: object\n      required:\n      - category\n      - correlationId\n      - message\n      type: object\n    ErrorCategory:\n      properties:\n        httpStatus:\n          enum:\n          - CONTINUE\n          - SWITCHING_PROTOCOLS\n          - PROCESSING\n          - OK\n          - CREATED\n          - ACCEPTED\n          - NON_AUTHORITATIVE_INFORMATION\n          - NO_CONTENT\n          - RESET_CONTENT\n          - PARTIAL_CONTENT\n          - MULTI_STATUS\n          - ALREADY_REPORTED\n          - IM_USED\n          - MULTIPLE_CHOICES\n          - MOVED_PERMANENTLY\n          - FOUND\n          - SEE_OTHER\n          - NOT_MODIFIED\n          - USE_PROXY\n          - TEMPORARY_REDIRECT\n          - PERMANENT_REDIRECT\n          - BAD_REQUEST\n          - UNAUTHORIZED\n          - PAYMENT_REQUIRED\n          - FORBIDDEN\n          - NOT_FOUND\n          - METHOD_NOT_ALLOWED\n          - NOT_ACCEPTABLE\n          - PROXY_AUTHENTICATION_REQUIRED\n          - REQUEST_TIMEOUT\n          - CONFLICT\n          - GONE\n          - LENGTH_REQUIRED\n          - PRECONDITION_FAILED\n          - REQUEST_ENTITY_TOO_LARGE\n          - REQUEST_URI_TOO_LONG\n          - UNSUPPORTED_MEDIA_TYPE\n          - REQUESTED_RANGE_NOT_SATISFIABLE\n          - EXPECTATION_FAILED\n          - IM_A_TEAPOT\n          - MISDIRECTED_REQUEST\n          - UNPROCESSABLE_ENTITY\n          - LOCKED\n          - FAILED_DEPENDENCY\n          - UPGRADE_REQUIRED\n          - PRECONDITION_REQUIRED\n          - TOO_MANY_REQUESTS\n          - REQUEST_HEADERS_FIELDS_TOO_LARGE\n          - INTERNAL_STALE_SERVICE_DISCOVERY\n          - UNAVAILABLE_FOR_LEGAL_REASONS\n          - INTERNAL_SERVER_ERROR\n          - NOT_IMPLEMENTED\n          - BAD_GATEWAY\n          - SERVICE_UNAVAILABLE\n          - GATEWAY_TIMEOUT\n          - HTTP_VERSION_NOT_SUPPORTED\n          - VARIANT_ALSO_NEGOTIATES\n          - INSUFFICIENT_STORAGE\n          - LOOP_DETECTED\n          - NOT_EXTENDED\n          - NETWORK_AUTHENTICATION_REQUIRED\n          type: string\n        name:\n          type: string\n      required:\n      - httpStatus\n      - name\n      type: object\n    ErrorDetail:\n      properties:\n        message:\n          description: A human readable message describing the error along with remediation\n            steps where appropriate\n          type: string\n        in:\n          description: The name of the field or parameter in which the error was found.\n          type: string\n        code:\n          description: The status code associated with the error detail\n          type: string\n        subCategory:\n          description: A specific category that contains more specific detail about\n            the error\n          type: string\n        context:\n          additionalProperties:\n            items:\n              type: string\n            type: array\n          description: Context about the error condition\n          example:\n            missingScopes:\n            - scope1\n            - scope2\n          type: object\n      required:\n      - message\n      type: object\n    EventDetail:\n      description: The details Markdown rendered as HTML.\n      example:\n        details: '\u003cp\u003eRegistration occurred at Jan 30, 2020, 1:13:25 PM\u003c/p\u003e\u003ch4\u003eQuestions\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003eWho\u0026#x27;s\n          a good kitty?\u003c/strong\u003e: Purr...\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eWill you stop playing with\n          that?\u003c/strong\u003e: Meow!\u003c/p\u003e\u003cp\u003eEDIT\u003c/p\u003e'\n      properties:\n        details:\n          description: The details Markdown rendered as HTML.\n          type: string\n      required:\n      - details\n      type: object\n    StandardError:\n      properties:\n        status:\n          type: string\n        id:\n          type: string\n        category:\n          $ref: '#/components/schemas/ErrorCategory'\n        subCategory:\n          properties: {}\n          type: object\n        message:\n          type: string\n        errors:\n          items:\n            $ref: '#/components/schemas/ErrorDetail'\n          type: array\n        context:\n          additionalProperties:\n            items:\n              type: string\n            type: array\n          type: object\n        links:\n          additionalProperties:\n            type: string\n          type: object\n      required:\n      - category\n      - context\n      - errors\n      - links\n      - message\n      - status\n      type: object\n    TimelineEvent:\n      description: The state of the timeline event.\n      example:\n        eventTemplateId: \"1001298\"\n        email: art3mis-pup@petspot.com\n        tokens:\n          petName: Art3mis\n          petAge: 3\n          petColor: black\n        extraData:\n          questions:\n          - question: Who's a good girl?\n            answer: Bark!\n          - question: Do you wanna go on a walk?\n            answer: Woof!\n        timelineIFrame:\n          linkLabel: View Art3mis\n          headerLabel: Art3mis dog\n          url: https://my.petspot.com/pets/Art3mis\n          width: 600\n          height: 400\n      properties:\n        eventTemplateId:\n          description: The event template ID.\n          type: string\n        email:\n          description: The email address used for contact-specific events. This can\n            be used to identify existing contacts, create new ones, or change the\n            email for an existing contact (if paired with the `objectId`).\n          type: string\n        objectId:\n          description: The CRM object identifier. This is required for every event\n            other than contacts (where utk or email can be used).\n          type: string\n        utk:\n          description: Use the `utk` parameter to associate an event with a contact\n            by `usertoken`. This is recommended if you don't know a user's email,\n            but have an identifying user token in your cookie.\n          type: string\n        domain:\n          description: The event domain (often paired with utk).\n          type: string\n        timestamp:\n          description: The time the event occurred. If not passed in, the curren time\n            will be assumed. This is used to determine where an event is shown on\n            a CRM object's timeline.\n          format: date-time\n          type: string\n        tokens:\n          additionalProperties:\n            type: string\n          description: A collection of token keys and values associated with the template\n            tokens.\n          type: object\n        extraData:\n          description: Additional event-specific data that can be interpreted by the\n            template's markdown.\n          properties: {}\n          type: object\n        timelineIFrame:\n          $ref: '#/components/schemas/TimelineEventIFrame'\n        id:\n          description: Identifier for the event. This is optional, and we recommend\n            you do not pass this in. We will create one for you if you omit this.\n            You can also use `{{uuid}}` anywhere in the ID to generate a unique string,\n            guaranteeing uniqueness.\n          type: string\n      required:\n      - eventTemplateId\n      - id\n      - tokens\n      type: object\n    TimelineEventIFrame:\n      example:\n        linkLabel: View Art3mis\n        headerLabel: Art3mis dog\n        url: https://my.petspot.com/pets/Art3mis\n        width: 600\n        height: 400\n      properties:\n        linkLabel:\n          description: The text displaying the link that will display the iframe.\n          type: string\n        headerLabel:\n          description: The label of the modal window that displays the iframe contents.\n          type: string\n        url:\n          description: The URI of the iframe contents.\n          type: string\n        width:\n          description: The width of the modal window in pixels.\n          format: int32\n          type: integer\n        height:\n          description: The height of the modal window in pixels.\n          format: int32\n          type: integer\n      required:\n      - headerLabel\n      - height\n      - linkLabel\n      - url\n      - width\n      type: object\n    TimelineEventResponse:\n      description: The current state of the timeline event.\n      example:\n        objectType: contacts\n        id: petspot:1001298:art3mis-pup@petspot.com-004-invalid\n        eventTemplateId: \"1001298\"\n        email: art3mis-pup@petspot.com\n        objectId: \"28001\"\n        timestamp: 2020-01-30T18:37:15.569Z\n        tokens:\n          petName: Art3mis\n          petColor: black\n          petAge: \"3\"\n        extraData:\n          questions:\n          - question: Who's a good girl?\n            answer: Bark!\n          - question: Do you wanna go on a walk?\n            answer: Woof!\n        timelineIFrame:\n          linkLabel: View Art3mis\n          headerLabel: Art3mis dog\n          url: https://my.petspot.com/pets/Art3mis\n          width: 600\n          height: 400\n      properties:\n        id:\n          description: Identifier for the event. This should be unique to the app\n            and event template. If you use the same ID for different CRM objects,\n            the last to be processed will win and the first will not have a record.\n            You can also use `{{uuid}}` anywhere in the ID to generate a unique string,\n            guaranteeing uniqueness.\n          type: string\n        eventTemplateId:\n          description: The event template ID.\n          type: string\n        email:\n          description: The email address used for contact-specific events. This can\n            be used to identify existing contacts, create new ones, or change the\n            email for an existing contact (if paired with the `objectId`).\n          type: string\n        objectId:\n          description: The CRM object identifier. This is required for every event\n            other than contacts (where utk or email can be used).\n          type: string\n        utk:\n          description: Use the `utk` parameter to associate an event with a contact\n            by `usertoken`. This is recommended if you don't know a user's email,\n            but have an identifying user token in your cookie.\n          type: string\n        domain:\n          description: The event domain (often paired with utk).\n          type: string\n        timestamp:\n          description: The time the event occurred. If not passed in, the curren time\n            will be assumed. This is used to determine where an event is shown on\n            a CRM object's timeline.\n          format: date-time\n          type: string\n        tokens:\n          additionalProperties:\n            type: string\n          description: A collection of token keys and values associated with the template\n            tokens.\n          type: object\n        extraData:\n          description: Additional event-specific data that can be interpreted by the\n            template's markdown.\n          properties: {}\n          type: object\n        timelineIFrame:\n          $ref: '#/components/schemas/TimelineEventIFrame'\n        objectType:\n          description: The ObjectType associated with the EventTemplate.\n          type: string\n        createdAt:\n          format: date-time\n          type: string\n      required:\n      - eventTemplateId\n      - id\n      - objectType\n      - tokens\n      type: object\n    TimelineEventTemplate:\n      description: The current state of the template definition.\n      example:\n        createdAt: 2000-01-23T04:56:07.000+00:00\n        detailTemplate: detailTemplate\n        name: name\n        tokens:\n        - name: petType\n          label: Pet Type\n          type: enumeration\n          createdAt: 2020-02-12T20:58:26Z\n          updatedAt: 2020-02-12T20:58:26Z\n          objectPropertyName: customPropertyPetType\n          options:\n          - value: dog\n            label: Dog\n          - value: cat\n            label: Cat\n        - name: petType\n          label: Pet Type\n          type: enumeration\n          createdAt: 2020-02-12T20:58:26Z\n          updatedAt: 2020-02-12T20:58:26Z\n          objectPropertyName: customPropertyPetType\n          options:\n          - value: dog\n            label: Dog\n          - value: cat\n            label: Cat\n        id: id\n        headerTemplate: headerTemplate\n        objectType: objectType\n        updatedAt: 2000-01-23T04:56:07.000+00:00\n      properties:\n        name:\n          description: The template name.\n          type: string\n        headerTemplate:\n          description: This uses Markdown syntax with Handlebars and event-specific\n            data to render HTML on a timeline as a header.\n          type: string\n        detailTemplate:\n          description: This uses Markdown syntax with Handlebars and event-specific\n            data to render HTML on a timeline when you expand the details.\n          type: string\n        tokens:\n          description: A collection of tokens that can be used as custom properties\n            on the event and to create fully fledged CRM objects.\n          items:\n            $ref: '#/components/schemas/TimelineEventTemplateToken'\n          type: array\n        id:\n          description: The template ID.\n          type: string\n        objectType:\n          description: The type of CRM object this template is for. [Contacts, companies,\n            tickets, and deals] are supported.\n          type: string\n        createdAt:\n          description: The date and time that the Event Template was created, as an\n            ISO 8601 timestamp. Will be null if the template was created before Feb\n            18th, 2020.\n          format: date-time\n          type: string\n        updatedAt:\n          description: The date and time that the Event Template was last updated,\n            as an ISO 8601 timestamp. Will be null if the template was created before\n            Feb 18th, 2020.\n          format: date-time\n          type: string\n      required:\n      - id\n      - name\n      - objectType\n      - tokens\n      type: object\n    TimelineEventTemplateCreateRequest:\n      description: State of the template definition being created.\n      example:\n        name: PetSpot Registration\n        objectType: contacts\n        headerTemplate: Registered for [{{petName}}](https://my.petspot.com/pets/{{petName}})\n        detailTemplate: |-\n          Registration occurred at {{#formatDate timestamp}}{{/formatDate}}\n\n          #### Questions\n          {{#each extraData.questions}}\n            **{{question}}**: {{answer}}\n          {{/each}}\n        tokens:\n        - name: petName\n          label: Pet Name\n          type: string\n        - name: petAge\n          label: Pet Age\n          type: number\n        - name: petColor\n          label: Pet Color\n          type: enumeration\n          options:\n          - value: white\n            label: White\n          - value: black\n            label: Black\n          - value: brown\n            label: Brown\n          - value: other\n            label: Other\n      properties:\n        name:\n          description: The template name.\n          type: string\n        headerTemplate:\n          description: This uses Markdown syntax with Handlebars and event-specific\n            data to render HTML on a timeline as a header.\n          type: string\n        detailTemplate:\n          description: This uses Markdown syntax with Handlebars and event-specific\n            data to render HTML on a timeline when you expand the details.\n          type: string\n        tokens:\n          description: A collection of tokens that can be used as custom properties\n            on the event and to create fully fledged CRM objects.\n          items:\n            $ref: '#/components/schemas/TimelineEventTemplateToken'\n          type: array\n        objectType:\n          description: The type of CRM object this template is for. [Contacts, companies,\n            tickets, and deals] are supported.\n          type: string\n      required:\n      - name\n      - objectType\n      - tokens\n      type: object\n    TimelineEventTemplateToken:\n      description: State of the token definition.\n      example:\n        name: petType\n        label: Pet Type\n        type: enumeration\n        createdAt: 2020-02-12T20:58:26Z\n        updatedAt: 2020-02-12T20:58:26Z\n        objectPropertyName: customPropertyPetType\n        options:\n        - value: dog\n          label: Dog\n        - value: cat\n          label: Cat\n      properties:\n        label:\n          description: Used for list segmentation and reporting.\n          type: string\n        objectPropertyName:\n          description: The name of the CRM object property. This will populate the\n            CRM object property associated with the event. With enough of these, you\n            can fully build CRM objects via the Timeline API.\n          type: string\n        options:\n          description: If type is `enumeration`, we should have a list of options\n            to choose from.\n          items:\n            $ref: '#/components/schemas/TimelineEventTemplateTokenOption'\n          type: array\n        name:\n          description: The name of the token referenced in the templates. This must\n            be unique for the specific template. It may only contain alphanumeric\n            characters, periods, dashes, or underscores (. - _).\n          type: string\n        type:\n          description: The data type of the token. You can currently choose from [string,\n            number, date, enumeration].\n          enum:\n          - date\n          - enumeration\n          - number\n          - string\n          type: string\n        createdAt:\n          description: The date and time that the Event Template Token was created,\n            as an ISO 8601 timestamp. Will be null if the template was created before\n            Feb 18th, 2020.\n          format: date-time\n          type: string\n        updatedAt:\n          description: The date and time that the Event Template Token was last updated,\n            as an ISO 8601 timestamp. Will be null if the template was created before\n            Feb 18th, 2020.\n          format: date-time\n          type: string\n      required:\n      - label\n      - name\n      - options\n      - type\n      type: object\n    TimelineEventTemplateTokenOption:\n      properties:\n        value:\n          type: string\n        label:\n          type: string\n      required:\n      - label\n      - value\n      type: object\n    TimelineEventTemplateTokenUpdateRequest:\n      description: State of the token definition for update requests.\n      example:\n        label: petType edit\n        options:\n        - value: dog\n          label: Dog\n        - value: cat\n          label: Cat\n        - value: bird\n          label: Bird\n      properties:\n        label:\n          description: Used for list segmentation and reporting.\n          type: string\n        objectPropertyName:\n          description: The name of the CRM object property. This will populate the\n            CRM object property associated with the event. With enough of these, you\n            can fully build CRM objects via the Timeline API.\n          type: string\n        options:\n          description: If type is `enumeration`, we should have a list of options\n            to choose from.\n          items:\n            $ref: '#/components/schemas/TimelineEventTemplateTokenOption'\n          type: array\n      required:\n      - label\n      - options\n      type: object\n    TimelineEventTemplateUpdateRequest:\n      description: State of the template definition being updated.\n      example:\n        id: \"1001298\"\n        name: PetSpot Registration\n        headerTemplate: Registered for [{{petName}}](https://my.petspot.com/pets/{{petName}})\n        detailTemplate: |-\n          Registration occurred at {{#formatDate timestamp}}{{/formatDate}}\n\n          #### Questions\n          {{#each extraData.questions}}\n            **{{question}}**: {{answer}}\n          {{/each}}\n\n          EDIT\n        tokens:\n        - name: petName\n          label: Pet Name\n          type: string\n          objectPropertyName: firstname\n        - name: petAge\n          label: Pet Age\n          type: number\n        - name: petColor\n          label: Pet Color\n          type: enumeration\n          options:\n          - value: white\n            label: White\n          - value: black\n            label: Black\n          - value: brown\n            label: Brown\n          - value: yellow\n            label: Yellow\n          - value: other\n            label: Other\n      properties:\n        name:\n          description: The template name.\n          type: string\n        headerTemplate:\n          description: This uses Markdown syntax with Handlebars and event-specific\n            data to render HTML on a timeline as a header.\n          type: string\n        detailTemplate:\n          description: This uses Markdown syntax with Handlebars and event-specific\n            data to render HTML on a timeline when you expand the details.\n          type: string\n        tokens:\n          description: A collection of tokens that can be used as custom properties\n            on the event and to create fully fledged CRM objects.\n          items:\n            $ref: '#/components/schemas/TimelineEventTemplateToken'\n          type: array\n        id:\n          description: The template ID.\n          type: string\n      required:\n      - id\n      - name\n      - tokens\n      type: object\n  securitySchemes:\n    oauth2_legacy:\n      flows:\n        authorizationCode:\n          authorizationUrl: https://app.hubspot.com/oauth/authorize\n          scopes:\n            contacts: Read from and write to my Contacts\n            tickets: Read and write tickets\n            timeline: Create timeline events\n          tokenUrl: https://api.hubapi.com/oauth/v1/token\n      type: oauth2\n    developer_hapikey:\n      in: query\n      name: hapikey\n      type: apiKey\nx-hubspot-available-client-libraries:\n- PHP\n- Node\n- Python\n- Ruby\n",
			"canonicalURL": "/github.com/clarkmcc/go-hubspot@8c0e4f75dbeb3e9a84b11fb2d18ddc3e8b4c9e7e/-/blob/generated/timeline/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/clarkmcc/go-hubspot/blob/8c0e4f75dbeb3e9a84b11fb2d18ddc3e8b4c9e7e/generated/timeline/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/crm/v3/timeline/events\": post: responses: default: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}