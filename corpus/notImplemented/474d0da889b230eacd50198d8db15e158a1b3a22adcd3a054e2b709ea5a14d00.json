{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/codingsoo/REST_Go"
		},
		"file": {
			"name": "news_openapi.yaml",
			"size": 0,
			"path": "doc/news_openapi.yaml",
			"byteSize": 8006,
			"content": "openapi: 3.0.1\ninfo:\n  title: API for REST News\n  description: Some description\n  version: 2.0.0\nservers:\n- url: http://localhost:50103/\ntags:\n- name: country-api\n  description: API for country data.\n- name: news-rest-api\n  description: Handling of creating and retrieving news\npaths:\n  /countries:\n    get:\n      tags:\n      - country-api\n      summary: Retrieve list of country names\n      operationId: getUsingGET\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n  /news:\n    get:\n      tags:\n      - news-rest-api\n      summary: Get all the news\n      operationId: getUsingGET_1\n      parameters:\n      - name: authorId\n        in: query\n        description: The id of the author who wrote the news\n        allowEmptyValue: false\n        schema:\n          type: string\n      - name: country\n        in: query\n        description: The country name\n        allowEmptyValue: false\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/vnd.tsdes.news+json;charset=UTF-8;version=2:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NewsDto'\n            application/json;charset=UTF-8:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NewsDto'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    post:\n      tags:\n      - news-rest-api\n      summary: Create a news\n      operationId: createNewsUsingPOST\n      requestBody:\n        description: Text of news, plus author id and country. Should not specify\n          id or creation time\n        content:\n          application/vnd.tsdes.news+json;charset=UTF-8;version=2:\n            schema:\n              $ref: '#/components/schemas/NewsDto'\n          application/json;charset=UTF-8:\n            schema:\n              $ref: '#/components/schemas/NewsDto'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/vnd.tsdes.news+json;charset=UTF-8;version=2:\n              schema:\n                type: integer\n                format: int64\n            application/json;charset=UTF-8:\n              schema:\n                type: integer\n                format: int64\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: dto\n  /news/{id}:\n    get:\n      tags:\n      - news-rest-api\n      summary: Get a single news specified by id\n      operationId: getNewsUsingGET\n      parameters:\n      - name: id\n        in: path\n        description: The numeric id of the news\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            application/vnd.tsdes.news+json;charset=UTF-8;version=2:\n              schema:\n                $ref: '#/components/schemas/NewsDto'\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/NewsDto'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    put:\n      tags:\n      - news-rest-api\n      summary: Update an existing news\n      operationId: updateUsingPUT\n      parameters:\n      - name: id\n        in: path\n        description: The numeric id of the news\n        required: true\n        schema:\n          type: string\n        example: abc\n      requestBody:\n        description: The news that will replace the old one. Cannot change its id\n          though.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewsDto'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/vnd.tsdes.news+json;charset=UTF-8;version=2:\n              schema:\n                type: object\n            application/json;charset=UTF-8:\n              schema:\n                type: object\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: dto\n    delete:\n      tags:\n      - news-rest-api\n      summary: Delete a news with the given id\n      operationId: deleteUsingDELETE\n      parameters:\n      - name: id\n        in: path\n        description: The numeric id of the news\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            application/vnd.tsdes.news+json;charset=UTF-8;version=2:\n              schema:\n                type: object\n            application/json;charset=UTF-8:\n              schema:\n                type: object\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /news/{id}/text:\n    put:\n      tags:\n      - news-rest-api\n      summary: Update the text content of an existing news\n      operationId: updateTextUsingPUT\n      parameters:\n      - name: id\n        in: path\n        description: The numeric id of the news\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: The new text which will replace the old one\n        content:\n          text/plain:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/vnd.tsdes.news+json;charset=UTF-8;version=2:\n              schema:\n                type: object\n            application/json;charset=UTF-8:\n              schema:\n                type: object\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: text\ncomponents:\n  schemas:\n    NewsDto:\n      title: NewsDto\n      type: object\n      properties:\n        authorId:\n          type: string\n          description: The id of the author that wrote/created this news\n        country:\n          type: string\n          description: The country this news is related to\n        creationTime:\n          type: string\n          description: When the news was first created/published\n          format: date-time\n        id:\n          type: string\n          description: Deprecated. Use newsId instead\n        newsId:\n          type: string\n          description: The id of the news\n        text:\n          type: string\n          description: The text of the news\n",
			"canonicalURL": "/github.com/codingsoo/REST_Go@ed67007a3d9cc852de4c47d395991f602a381c67/-/blob/doc/news_openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/codingsoo/REST_Go/blob/ed67007a3d9cc852de4c47d395991f602a381c67/doc/news_openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/news/{id}/text\": put: requestBody: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}