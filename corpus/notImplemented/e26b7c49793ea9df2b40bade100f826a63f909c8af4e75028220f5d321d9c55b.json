{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/edgexfoundry/sample-service"
		},
		"file": {
			"name": "sample-service-demo.yaml",
			"size": 0,
			"path": "api/openapi/v2/sample-service-demo.yaml",
			"byteSize": 30166,
			"content": "openapi: 3.0.0\ninfo:\n  title: sample-service-demo\n  description: Do Not Use. This is the sample api for the sample-service. This contains information only for the testing of the integration of Swagger and associated libraries. Loosely based on core-command api.\n  version: 2.x\n  \nservers:\n  - url: http://localhost:48082/api/v2\n    description: URL for local development and testing\n  \ncomponents:\n  schemas:\n    BaseRequest:\n      description: \"Defines basic properties which all use-case specific request DTO instances should support.\"\n      type: object\n      properties:\n        requestId:\n          description: \"Uniquely identifies this request. For implementation, recommend this value be generated by the type's constructor.\"\n          type: string\n          format: uuid\n          example: \"e6e8a2f4-eb14-4649-9e2b-175247911369\"\n      required:\n        - requestId\n    BaseResponse:\n      description: \"Defines basic properties which all use-case specific response DTO instances should support\"\n      type: object\n      properties:\n        requestId:\n          description: \"Uniquely identifies the request that resulted in this response.\"\n          type: string\n          format: uuid\n          example: \"e6e8a2f4-eb14-4649-9e2b-175247911369\"\n        statusCode:\n          description: \"A numeric code signifying the operational status of the response.\"\n          type: integer\n        message:\n          description: \"A field that can contain a free-form message, such as an error message.\"\n          type: string\n      required:\n        - requestId\n        - statusCode\n    Command:\n      type: object\n      properties:\n        created:\n          type: integer\n        get:\n          $ref: '#/components/schemas/CommandAction'\n        id:\n          type: string\n          format: uuid\n        modified:\n          type: integer\n        name:\n          type: string\n        put:\n          $ref: '#/components/schemas/CommandAction'\n    CommandAction:\n      type: object\n      properties:\n        path:\n          type: string\n        url:\n          type: string\n    CommandResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n      description: \"For the specified device, provides a list of the associated commands.\"\n      type: object\n      properties:\n        device:\n          description: \"Indicates a device. Will be either the device ID or name depending on how the request was made.\"\n          type: string\n        commands:\n          type: array\n          items:\n            $ref: '#/components/schemas/Command'\n    ErrorResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n      description: \"A response type for returning a generic error to the caller.\"\n      type: object\n    ConfigRequest:\n      description: \"A request associated with the /config endpoint.\"\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      type: object\n    ConfigResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n      description: \"Provides a response containing the configuration for the targeted service.\"\n      type: object\n      properties:\n        config:\n          description: \"A string-ified representation of the service's configuration. For purposes of this specification, a string has been used since configuration structure differs from service to service.\"\n          type: string\n      required:\n      - config\n    IssueCommandRequest:\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      description: \"A request type specifying an individual command for execution.\"\n      type: object\n      properties:\n        deviceId:\n          type: string\n          format: uuid\n          description: \"Refers to the device targeted by the command. Could be either the device ID or name.\"\n        commandId:\n          type: string\n          format: uuid\n          description: \"Refers to the command being invoked. Could be either the command ID or name.\"\n      required:\n      - device\n      - command\n    IssueCommandResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n      description: \"Provides a response with details about whether invocation of a given command was successful.\"\n      type: object\n      properties:\n        device:\n          type: string\n          description: \"Refers to the device targeted by the command. Could be either the device ID or name.\"\n        command:\n          type: string\n          description: \"Refers to the command being invoked. Could be either the command ID or name.\"\n      required:\n      - device\n      - command\n    MetricsRequest:\n      description: \"A request associated with the /metrics endpoint.\"\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      type: object\n    MetricsResponse:\n      allOf:\n      - $ref: '#/components/schemas/BaseResponse'\n      description: \"A response from the /metrics endpoint providing memory and cpu utilization stats.\"\n      type: object\n      properties:\n        memAlloc:\n          description: \"Alloc is bytes of allocated heap objects.\"\n          type: integer\n        memFrees:\n          description: \"Frees is the cumulative count of heap objects freed.\"\n          type: integer\n        memLiveObjects:\n          description: \"The number of live objects is Mallocs - Frees.\"\n          type: integer\n        memMallocs:\n          description: \"The cumulative count of heap objects allocated.\"\n          type: integer\n        memSys:\n          description: \"The total bytes of memory obtained from the OS.\"\n          type: integer\n        memTotalAlloc:\n          description: \"Cumulative bytes allocated for heap objects.\"\n          type: integer\n        cpuBusyAvg:\n          description: \"Indicates the average level of CPU utilization\"\n          type: number\n      required:\n      - memAlloc\n      - memFrees\n      - memLiveObjects\n      - memMallocs\n      - memSys\n      - memTotalAlloc\n      - cpuBusyAvg\n    PingRequest:\n      description: \"A request associated with the /ping endpoint.\"\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      type: object\n    PingResponse:\n      allOf:\n      - $ref: '#/components/schemas/BaseResponse'\n      type: object\n      properties:\n        timestamp:\n          type: string\n          description: \"Outputs the current server timestamp in RFC1123 format\"\n          example: \"Mon, 02 Jan 2006 15:04:05 MST\"\n    RequestEnvelope:\n      description: \"A wrapper type for use when sending a request to the /batch endpoint. Each individual request type in the HTTP request should be wrapped in an envelope to facilitate instantiation of the correct routing handler. See property descriptions below for more details.\"\n      type: object\n      properties:\n        action:\n          type: string\n          description: \"Indicates the type of operation applicable to the wrapped request. Valid values are 'create','read','update','delete', and 'command'\"\n        content:\n          type: string\n          format: byte\n          description: \"A byte array containing a marshalled request type instance. This is the specific, semantically identifiable request -- such as an AddDeviceRequest.\"\n        strategy:\n          type: string\n          description: \"Indicates the expectation of whether a response should be produced synchronously or asynchronously. If asynchronously, desire for either a polling or push/callback should be provided. Valid values are 'sync','async-push','async-poll'\"\n        type:\n          type: string\n          description: \"The name of the type applicable to the request instance contained in the 'content' property.\"\n        version:\n          description: \"Proposed field for explicitly defining version of request DTO. This is for advertising compatibility between a publisher/subscriber or requester/receiver\"\n          type: string\n          example: \"2.0.x\"\n      required:\n        - action\n        - content\n        - strategy\n        - type\n        - version\n    ResponseEnvelope:\n      description: \"A wrapper type for use when receiving a response from the /batch endpoint. Each individual response type in the HTTP response should be wrapped in an envelope to facilitate unmarshalling by the client. See property descriptions below for more details.\"\n      type: object\n      properties:\n        action:\n          type: string\n          description: \"Indicates the type of operation applicable to the wrapped response. This should be recapitulated from the originating request. Valid values are 'create','read','update','delete', and 'command'\"\n        content:\n          type: string\n          format: byte\n          description: \"A byte array containing a marshalled response type instance. This is the specific, semantically identifiable response -- such as an AddDeviceResponse.\"\n        strategy:\n          type: string\n          description: \"Recapitulates the expectation with regard to the delivery of response that was specified on the originating request. Valid values are 'sync','async-push','async-poll'\"\n        type:\n          type: string\n          description: \"The name of the type applicable to the response instance contained in the 'content' property.\"\n        version:\n          description: \"Proposed field for explicitly defining version of response DTO. This is for advertising compatibility between a publisher/subscriber or requester/receiver\"\n          type: string\n          example: \"2.0.x\"\n      required:\n        - action\n        - content\n        - strategy\n        - type\n        - version\n    VersionRequest:\n      description: \"A request associated with the /version endpoint.\"\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      type: object\n    VersionResponse:\n      description: \"A response returned from the /version endpoint whose purpose is to report out the latest version supported by the service.\"\n      allOf:\n      - $ref: '#/components/schemas/BaseResponse'\n      type: object\n      properties:\n        version:\n          description: \"The latest version supported by the service.\"\n          type: string\n      required:\n      - version\n  parameters:\n    offsetParam:\n      in: query\n      name: offset\n      required: false\n      schema:\n        type: integer\n        minimum: 0\n      description: \"The number of items to skip before starting to collect the result set.\"\n    limitParam:\n      in: query\n      name: limit\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 50\n        default: 20\n      description: \"The numbers of items to return.\"\n    correlatedRequestHeader:\n      in: header\n      name: X-Correlation-ID\n      description: \"A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.\"\n      schema:\n        type: string\n        format: uuid\n      required: true\n      example: \"14a42ea6-c394-41c3-8bcd-a29b9f5e6835\"\n  headers:\n    correlatedResponseHeader:\n      description: \"A response header that returns the unique correlation ID used to initiate the request.\"\n      schema:\n        type: string\n        format: uuid\n      required: true\n      example: \"14a42ea6-c394-41c3-8bcd-a29b9f5e6835\"\npaths:\n  /batch:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n    post:\n      servers:\n      - url:  http://localhost:48082/api\n      summary: \"Accepts an arbitrary number of RequestEnvelope instances. Each RequestEnvelope has a 'content' property that holds a specific request type. This endpoint is operation agnostic will route the request to the appropriate handler implementation within the service. Version is not denoted as part of the route since it is included as a property on each RequestEnvelope.\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/RequestEnvelope'\n      responses:\n        '207':\n          description: \"Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/ErrorResponse'\n                    - $ref: '#/components/schemas/ResponseEnvelope'\n  /command:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n    put:\n      summary: \"Allows for the issuance of multiple commands in a batch. Commands will be executed as either read or write according to their definition.\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/IssueCommandRequest'\n      responses:\n        '207':\n          description: \"Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/ErrorResponse'\n                    - $ref: '#/components/schemas/IssueCommandResponse'\n  /device/id/{deviceid}/command/{commandid}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: deviceid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n        description: \"An ID of datatype string, by default a GUID. Uniquely identifies a device.\"\n      - name: commandid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n        description: \"An ID of datatype string, by default a GUID. Uniquely identifies a command.\"\n    get:\n      summary: \"Issue the specified read command referenced by the command id to the device/sensor, also referenced by id.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IssueCommandResponse'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: \"The requested resource does not exist\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '423':\n          description: \"The device is locked (AdminState)\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      summary: \"Issue the specified write command referenced by the command id to the device/sensor, also referenced by id.\"\n      responses:\n        '207':\n          description: \"Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/ErrorResponse'\n                    - $ref: '#/components/schemas/IssueCommandResponse'\n  /device/name/{deviceName}/command/{commandName}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: deviceName\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"A name uniquely identifying a device.\"\n      - name: commandName\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"A name uniquely identifying a command.\"\n    get:\n      summary: \"Issue the specified read command referenced by the command name to the device/sensor, also referenced by name.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IssueCommandResponse'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: \"The requested resource does not exist\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '423':\n          description: \"The device is locked (AdminState)\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      summary: \"Issue the specified write command referenced by the command name to the device/sensor, also referenced by name.\"\n      responses:\n        '207':\n          description: \"Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/ErrorResponse'\n                    - $ref: '#/components/schemas/IssueCommandResponse'\n  /device/id/{id}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n        description: \"An ID of datatype string, by default a GUID. Uniquely identifies a device.\"\n    get:\n      summary: \"Returns all commands associated with the specified device.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandResponse'\n        '404':\n          description: \"The requested resource does not exist\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /device/name/{name}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The unique name of a device.\"\n    get:\n      summary: \"Returns all commands associated with the specified device.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandResponse'\n        '404':\n          description: \"The requested resource does not exist\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /device/all:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Returns a paginated list of CommandResponses. The list contains all of the commands in the system associated with their respective device.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CommandResponse'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ErrorResponse'\n  /config:\n    post:\n      summary: \"Returns the current configuration of the service.\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              anyOf:\n                - $ref: '#/components/schemas/ConfigRequest'\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/ConfigRequest'\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigResponse'\n        '207':\n          description: \"Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/ErrorResponse'\n                    - $ref: '#/components/schemas/ConfigResponse'\n        '400':\n          description: \"Bad request\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /metrics:\n    post:\n      summary: \"An endpoint that can be used to obtain CPU/Memory usage stats for a given service.\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              anyOf:\n                - $ref: '#/components/schemas/MetricsRequest'\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/MetricsRequest'\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsResponse'\n        '207':\n          description: \"Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/ErrorResponse'\n                    - $ref: '#/components/schemas/MetricsResponse'\n        '400':\n          description: \"Bad request\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /ping:\n    post:\n      summary: \"A simple 'ping' endpoint that can be used as a service healthcheck\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              anyOf:\n                - $ref: '#/components/schemas/PingRequest'\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/PingRequest'\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PingResponse'\n        '207':\n          description: \"Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/ErrorResponse'\n                    - $ref: '#/components/schemas/PingResponse'\n        '400':\n          description: \"Bad request\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /version:\n    post:\n      summary: \"A simple 'version' endpoint that will return the current version of the service\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              anyOf:\n                - $ref: '#/components/schemas/VersionRequest'\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/VersionRequest'\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VersionResponse'\n        '207':\n          description: \"Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/ErrorResponse'\n                    - $ref: '#/components/schemas/VersionResponse'\n        '400':\n          description: \"Bad request\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n",
			"canonicalURL": "/github.com/edgexfoundry/sample-service@859624805640ebd7c7b619b48d1340b573ad9c55/-/blob/api/openapi/v2/sample-service-demo.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/edgexfoundry/sample-service/blob/859624805640ebd7c7b619b48d1340b573ad9c55/api/openapi/v2/sample-service-demo.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/metrics\": post: responses: 207: contents: application/json: generate schema: item: anyOf: collect variants: MetricsPostMultiStatusItem: sum types with same names not implemented",
	"NotImplemented": [
		"complex anyOf",
		"sum types with same names"
	]
}