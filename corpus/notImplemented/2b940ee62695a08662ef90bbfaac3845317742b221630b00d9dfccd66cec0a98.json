{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "pims.io-1.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/pims.io-1.0-swagger.yaml",
			"byteSize": 83397,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: support@pims.io\n  description: \u003e-\n    \n    Hereafter is the documentation of the private API of [Pims: Pointages Intelligents pour le Monde du Spectacle](https://pims.io). This API is designed for 3rd-party softwares, editors and partners. Its main purpose is to give access the core data of a Pims customer (i.e. events, ticket counts and promotions).\n\n\n    ## Authentication\n\n    The API uses [basic access authentication](https://en.wikipedia.org/wiki/Basic_access_authentication), meaning you will need a username and password to get authorized.\n\n\n    As each customer in Pims has its own domain (e.g. caramba.pims.io, gdp.pims.io...), each credentials will be valid for one domain/customer only. If you need dedicated credentials for one domain, please contact us. (In any case, we will need an explicit agreement from the customer before we create these credentials.)\n\n\n    \u003cdiv class=\"info\"\u003e\n\n    To make your life easy, you can try all endpoints with the public credentials below, pointing to our [demo domain](https://demo.pims.io):\n      \u003cul\u003e\n        \u003cli\u003eBase path: `https://demo.pims.io/api`\u003c/li\u003e\n        \u003cli\u003eUsername: `demo`\u003c/li\u003e\n        \u003cli\u003ePassword: `q83792db2GCvgYVdKpU3yG3R`\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/div\u003e\n\n\n    ## Response format\n\n    The API returns JSON and matches the [HAL specification](http://stateless.co/hal_specification.html). The `Content-Type` of each response will be `application/hal+json`, unless an error occurs.\n\n\n    Please note that this documentation describes all responses “as if” they were plain JSON. The specificities of HAL are ignored on purpose, in order to remain compact and avoid repetition.\n\n    \u003cdiv style=\"-webkit-column-count: 2; -moz-column-count: 2; column-count: 2; -webkit-column-rule: 1px dotted #e0e0e0; -moz-column-rule: 1px dotted #e0e0e0; column-rule: 1px dotted #e0e0e0;\"\u003e\n    \t\u003cdiv style=\"display: inline-block; width:100%;\"\u003e\n    \t\t\u003cstrong\u003eSo when you read in the doc:\u003c/strong\u003e\n    \u003cpre\u003e\u003ccode class=\"lang-json\"\u003e{\n    \t\u003cspan class=\"token string\"\u003e\"id\"\u003c/span\u003e: \u003cspan class=\"token number\"\u003e123\u003c/span\u003e,\n    \t\u003cspan class=\"token string\"\u003e\"property1\"\u003c/span\u003e: \u003cspan class=\"token string\"\u003e\"Lorem ipsum\"\u003c/span\u003e,\n    \t\u003cspan class=\"token string\"\u003e\"object\"\u003c/span\u003e: {\n    \t\t\u003cspan class=\"token string\"\u003e\"id\"\u003c/span\u003e: \u003cspan class=\"token number\"\u003e456\u003c/span\u003e,\n    \t\t\u003cspan class=\"token string\"\u003e\"property2\"\u003c/span\u003e: \u003cspan class=\"token number\"\u003e7.89\u003c/span\u003e\n    \t}\n    }\u003c/code\u003e\u003c/pre\u003e\n    \t\u003c/div\u003e\n    \t\u003cdiv style=\"display: inline-block; width:100%;\"\u003e\n    \t\t\u003cstrong\u003e... you'll get in the Real World®:\u003c/strong\u003e\n    \u003cpre\u003e\u003ccode class=\"lang-json\"\u003e{\n    \t\u003cspan class=\"token string\"\u003e\"id\"\u003c/span\u003e: \u003cspan class=\"token number\"\u003e123\u003c/span\u003e,\n    \t\u003cspan class=\"token string\"\u003e\"property2\"\u003c/span\u003e: \u003cspan class=\"token string\"\u003e\"Lorem ipsum\"\u003c/span\u003e,\n    \t\u003cspan class=\"token string\"\u003e\"_embedded\"\u003c/span\u003e: {\n    \t\t\u003cspan class=\"token string\"\u003e\"object\"\u003c/span\u003e: {\n    \t\t\t\u003cspan class=\"token string\"\u003e\"id\"\u003c/span\u003e: \u003cspan class=\"token number\"\u003e456\u003c/span\u003e,\n    \t\t\t\u003cspan class=\"token string\"\u003e\"property2\"\u003c/span\u003e: \u003cspan class=\"token number\"\u003e7.89\u003c/span\u003e,\n    \t\t\t\u003cspan class=\"token string\"\u003e\"_links\"\u003c/span\u003e: {\n    \t\t\t\t\u003cspan class=\"token string\"\u003e\"self\"\u003c/span\u003e: {\n    \t\t\t\t\t\u003cspan class=\"token string\"\u003e\"href\"\u003c/span\u003e: \u003cspan class=\"token string\"\u003e\"https://api.mydomain.com/other-item/456\"\u003c/span\u003e\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t}\n    \t\u003cspan class=\"token string\"\u003e\"_links\"\u003c/span\u003e: {\n    \t\t\u003cspan class=\"token string\"\u003e\"self\"\u003c/span\u003e: {\n    \t\t\t\u003cspan class=\"token string\"\u003e\"href\"\u003c/span\u003e: \u003cspan class=\"token string\"\u003e\"https://api.mydomain.com/item/123\"\u003c/span\u003e\n    \t\t}\n    \t}\n    }\u003c/code\u003e\u003c/pre\u003e\n    \t\u003c/div\u003e\n    \u003c/div\u003e\n\n\n    ### Errors\n\n    Errors return JSON too and tries to match the [Problem Details for HTTP APIs specification](https://tools.ietf.org/html/rfc7807). If it does not match this spec, that's either a bug or a compatibility issue. Please contact us to solve the problem.\n\n\n    The `Content-Type` of errors will be `application/problem+json`. The content will match the following JSON:\n\n    ```json\n\n    {\n    \t\"type\": \"https://tools.ietf.org/html/rfc2616#section-10\",\n        \"title\": \"Not Found\",\n    \t\"status\": 404,\n        \"detail\": \"Entity not found\"\n    }\n\n    ```\n\n\n    ## Versioning\n\n    The API is fully versionned, using an URL-versioning scheme: `https://demo.pims.io/api/v1/events`, `https://demo.pims.io/api/v2/events`,...\n\n\n    The version part of the URL is optional, and will be completed with the last stable version if omitted.\n\n\n    ## Pagination\n\n    All responses corresponding to a collection of resources (e.g. `/venues` or `/series/:id/events`) are paginated. When so, you will only get the first 25 resources you asked for.\n\n\n    If you need to get more resources in one call, you can use the `page_size` query parameter. E.g. `/venues?page_size=50` to get the 50 first venues.\n\n\n    Also note that with HAL, the navigation in paginated responses is a piece of cake, as you can see below:\n\n    ```json\n\n    {\n    \t\"_links\": {\n    \t\t\"self\": {\n    \t\t\t\"href\": \"https://demo.pims.io/api/v1/events?page=1\"\n    \t\t},\n    \t\t\"first\": {\n    \t\t\t\"href\": \"https://demo.pims.io/api/v1/events\"\n    \t\t},\n    \t\t\"last\": {\n    \t\t\t\"href\": \"https://demo.pims.io/api/v1/events?page=14\"\n    \t\t},\n    \t\t\"next\": {\n    \t\t\t\"href\": \"https://demo.pims.io/api/v1/events?page=2\"\n    \t\t}\n    \t},\n    \t\"_embedded\": {\n     \t\t... // data content goes here\n    \t},\n    \t\"page_count\": 14,\n    \t\"page_size\": 25,\n    \t\"total_items\": 331,\n    \t\"page\": 1\n    }\n\n    ```\n\n\n    ## Filtering and sorting\n\n    Every textual filter (e.g. `/events?label=U2`) and/or sort (e.g. `/events?sort=label`) performed with the API uses UTF8_UNICODE_CI collation, meaning it is:\n\n    - Case insensitive: “Chloé” will be considered the same as “CHLOÉ”;\n\n    - Diacritic insensitive: “Chloé” will be considered the same as “Chloe”.\n\n\n    When performing a sort, it will always be *ascending* by default. To make it *descending*, just use a minus sign (`-`) in front of the parameter value (e.g. `/events?sort=-label`).\n\n\n    ## I18n\n\n    In responses, some labels can be translated (e.g. promotion types, event input types, etc.). These translatable labels are clearly indicated in the documentation below.\n\n\n    By default, they will be displayed in English, but you can change this behaviour via the `Accept-Language` header. E.g., use `fr` as a value for French.\n\n\n    ## PHP SDK\n\n    We provide a simple yet convenient SDK for the PHP language, see [the Github page of the project](https://github.com/pimssas/pims-api-client-php).\n\n\n    ## And now?\n\n    Generaly, you will start by [fetching one or more events](#tag/Events). An \u003cspan class=\"definition\"\u003eevent\u003c/span\u003e can be anything that occurs in one venue at one given date and time: a concert, a play, a match, a conference, etc. Additionnally, you can explore the [series](#tag/Series): a \u003cspan class=\"definition\"\u003eseries\u003c/span\u003e is just a group of events (e.g. a tour or a festival).\n\n\n    Once you retrieved the events you were interested in, you can look for the sales (\u003cspan class=\"definition\"\u003eticket counts\u003c/span\u003e):\n\n    - Get a quick overview with [`/events/:id/ticket-counts`](#operation/fetchAllTicketCounts)\n\n    - Or get a full insight by calling these endpoints:\n        1. [`/events/:id/categories`](#operation/fetchAllEventsCategories)\n        2. [`/events/:id/channels`](#operation/fetchAllEventsChannels)\n        3. [`/events/:id/ticket-counts/detailed`](#operation/fetchAllDetailedTicketCounts)\n\n    Eventually, you may also want to fetch the [promotions](#tag/Promotions). A \u003cspan class=\"definition\"\u003epromotion\u003c/span\u003e can be anything meant to leverage the sales: ads, marketing campaigns, buzz or news around the event, etc. A promotion can be linked to any combination of events and/or series.\n  license:\n    name: Creative Commons CC BY-NC-ND 2.0\n    url: https://creativecommons.org/licenses/by-nc-nd/2.0/\n  title: Pims\n  version: \"1.0\"\n  x-apisguru-categories:\n    - ecommerce\n  x-logo:\n    backgroundColor: \"#FF9800\"\n    url: https://cdn.pims.io/api/logo_white.svg\n  x-origin:\n    - format: swagger\n      url: https://cdn.pims.io/api/swagger.json\n      version: \"2.0\"\n  x-providerName: pims.io\nsecurity:\n  - Basic_Auth: []\npaths:\n  /categories:\n    get:\n      operationId: fetchAllCategories\n      parameters:\n        - description: Find only the categories whose label/short label contains this value.\n          in: query\n          name: label\n          schema:\n            type: string\n        - description: If set to `false`, show only the categories which are not ignored.\n            If set to `true`, show all categories.\n          in: query\n          name: show_ignored\n          schema:\n            type: boolean\n            default: false\n        - description: Sort the categories in the corresponding order.\n          in: query\n          name: sort\n          schema:\n            type: string\n            enum:\n              - label\n              - -label\n              - order\n              - -order\n            default: order\n        - $ref: \"#/components/parameters/query_page-size\"\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          description: Successful operation, gives an array of categories\n          content:\n            application/hal+json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CategoriesEntity\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Find all categories\n      tags:\n        - Categories\n  \"/categories/{category_id}\":\n    get:\n      operationId: fetchOneCategory\n      parameters:\n        - description: ID of the targeted category.\n          in: path\n          name: category_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          description: Successful operation, gives one category\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/CategoriesEntity\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get one category by ID\n      tags:\n        - Categories\n  /channels:\n    get:\n      operationId: fetchAllChannels\n      parameters:\n        - description: Find only the channels whose label contains this value.\n          in: query\n          name: label\n          schema:\n            type: string\n        - description: If set to `false`, show only the channels which are not ignored. If\n            set to `true`, show all channels.\n          in: query\n          name: show_ignored\n          schema:\n            type: boolean\n            default: false\n        - description: Sort the channels in the corresponding order.\n          in: query\n          name: sort\n          schema:\n            type: string\n            enum:\n              - label\n              - -label\n              - order\n              - -order\n            default: label\n        - $ref: \"#/components/parameters/query_page-size\"\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          description: Successful operation, gives an array of channels\n          content:\n            application/hal+json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChannelsEntity\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Find all channels\n      tags:\n        - Channels\n  \"/channels/{channel_id}\":\n    get:\n      operationId: fetchOneChannel\n      parameters:\n        - description: ID of the targeted channel.\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          description: Successful operation, gives one channel\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/ChannelsEntity\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get one channel by ID\n      tags:\n        - Channels\n  /events:\n    get:\n      operationId: fetchAllEvents\n      parameters:\n        - $ref: \"#/components/parameters/query_events_label\"\n        - $ref: \"#/components/parameters/query_events_from-datetime\"\n        - $ref: \"#/components/parameters/query_events_to-datetime\"\n        - $ref: \"#/components/parameters/query_events_city\"\n        - $ref: \"#/components/parameters/query_events_sort\"\n        - $ref: \"#/components/parameters/query_page-size\"\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200-events\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Find all events\n      tags:\n        - Events\n  \"/events/{event_id}\":\n    get:\n      operationId: fetchOneEvent\n      parameters:\n        - $ref: \"#/components/parameters/path_event-id\"\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          description: Successful operation, gives one event\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/EventsEntity\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get one event by ID\n      tags:\n        - Events\n  \"/events/{event_id}/capacities\":\n    get:\n      operationId: fetchAllEventsCapacities\n      parameters:\n        - $ref: \"#/components/parameters/path_event-id\"\n        - $ref: \"#/components/parameters/query_capacities_show-ignored\"\n        - description: Sort the capacities in the corresponding order.\n          in: query\n          name: sort\n          schema:\n            type: string\n            enum:\n              - date\n              - -date\n            default: date\n        - $ref: \"#/components/parameters/query_page-size\"\n      responses:\n        \"200\":\n          description: Successful operation, gives an array of events capacities\n          content:\n            application/hal+json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EventsCapacitiesEntity\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Find all capacities for one event\n      tags:\n        - Capacities\n  \"/events/{event_id}/capacities/{capacity_id}\":\n    get:\n      operationId: fetchOneEventCapacity\n      parameters:\n        - $ref: \"#/components/parameters/path_event-id\"\n        - description: ID of the targeted capacity.\n          in: path\n          name: capacity_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - $ref: \"#/components/parameters/query_capacities_show-ignored\"\n      responses:\n        \"200\":\n          description: Successful operation, gives one event capacity\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/EventsCapacitiesEntity\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get one capacity by ID\n      tags:\n        - Capacities\n  \"/events/{event_id}/categories\":\n    get:\n      operationId: fetchAllEventsCategories\n      parameters:\n        - $ref: \"#/components/parameters/path_event-id\"\n        - description: If set to `false`, show only the [event-]categories/[event-]price\n            ranges which are not ignored. If set to `true`, show everything.\n          in: query\n          name: show_ignored\n          schema:\n            type: boolean\n            default: false\n        - $ref: \"#/components/parameters/query_page-size\"\n      responses:\n        \"200\":\n          description: Successful operation, gives an array of events categories\n          content:\n            application/hal+json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EventsCategoriesEntity\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Find all categories for one event\n      tags:\n        - Categories\n  \"/events/{event_id}/categories/{category_id}\":\n    get:\n      operationId: fetchOneEventCategory\n      parameters:\n        - $ref: \"#/components/parameters/path_event-id\"\n        - description: ID of the targeted event category.\n          in: path\n          name: category_id\n          required: true\n          schema:\n            type: number\n            format: int32\n        - description: If set to `false`, show only the embedded [event-]price ranges which\n            are not ignored. If set to `true`, show everything.\n          in: query\n          name: show_ignored\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: Successful operation, gives one event category\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/EventsCategoriesEntity\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get one event category by ID\n      tags:\n        - Categories\n  \"/events/{event_id}/channels\":\n    get:\n      operationId: fetchAllEventsChannels\n      parameters:\n        - $ref: \"#/components/parameters/path_event-id\"\n        - description: If set to `false`, show only the [event-]channels which are not\n            ignored. If set to `true`, show everything.\n          in: query\n          name: show_ignored\n          schema:\n            type: boolean\n            default: false\n        - $ref: \"#/components/parameters/query_page-size\"\n      responses:\n        \"200\":\n          description: Successful operation, gives an array of events channels\n          content:\n            application/hal+json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EventsChannelsEntity\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Find all channels for one event\n      tags:\n        - Channels\n  \"/events/{event_id}/channels/{channel_id}\":\n    get:\n      operationId: fetchOneEventChannel\n      parameters:\n        - $ref: \"#/components/parameters/path_event-id\"\n        - description: ID of the targeted event channel.\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Successful operation, gives one event channel\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/EventsChannelsEntity\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get one event channel by ID\n      tags:\n        - Channels\n  \"/events/{event_id}/promotions\":\n    get:\n      operationId: fetchAllEventsPromotions\n      parameters:\n        - $ref: \"#/components/parameters/path_event-id\"\n        - $ref: \"#/components/parameters/query_promotions_label\"\n        - $ref: \"#/components/parameters/query_promotions_from-date\"\n        - $ref: \"#/components/parameters/query_promotions_to-date\"\n        - $ref: \"#/components/parameters/query_promotions_type\"\n        - $ref: \"#/components/parameters/query_promotions_family\"\n        - $ref: \"#/components/parameters/query_promotions_sort\"\n        - $ref: \"#/components/parameters/query_page-size\"\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200-promotions\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Find all promotions for one event\n      tags:\n        - Promotions\n  \"/events/{event_id}/ticket-counts\":\n    get:\n      operationId: fetchAllTicketCounts\n      parameters:\n        - $ref: \"#/components/parameters/path_event-id\"\n        - $ref: \"#/components/parameters/query_ticket-counts_from-date\"\n        - $ref: \"#/components/parameters/query_ticket-counts_to-date\"\n        - $ref: \"#/components/parameters/query_ticket-counts_show-ignored\"\n        - $ref: \"#/components/parameters/query_ticket-counts_show-not-approved\"\n        - $ref: \"#/components/parameters/query_ticket-counts_sort\"\n        - $ref: \"#/components/parameters/query_page-size\"\n      responses:\n        \"200\":\n          description: Successful operation, gives an array of ticket counts\n          content:\n            application/hal+json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TicketCountsEntity\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Find all ticket counts for one event\n      tags:\n        - Counts\n  \"/events/{event_id}/ticket-counts/detailed\":\n    get:\n      operationId: fetchAllDetailedTicketCounts\n      parameters:\n        - $ref: \"#/components/parameters/path_event-id\"\n        - $ref: \"#/components/parameters/query_ticket-counts_from-date\"\n        - $ref: \"#/components/parameters/query_ticket-counts_to-date\"\n        - $ref: \"#/components/parameters/query_ticket-counts_show-ignored\"\n        - $ref: \"#/components/parameters/query_ticket-counts_show-not-approved\"\n        - $ref: \"#/components/parameters/query_ticket-counts_sort\"\n        - $ref: \"#/components/parameters/query_page-size\"\n      responses:\n        \"200\":\n          description: Successful operation, gives an array of detailed ticket counts\n          content:\n            application/hal+json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TicketCountsDetailedEntity\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Find all detailed ticket counts for one event\n      tags:\n        - Counts\n  \"/events/{event_id}/ticket-counts/detailed/{ticket_count_id}\":\n    get:\n      operationId: fetchOneDetailedTicketCount\n      parameters:\n        - $ref: \"#/components/parameters/path_event-id\"\n        - description: ID of the targeted ticket count.\n          in: path\n          name: ticket_count_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - $ref: \"#/components/parameters/query_ticket-counts_show-ignored\"\n      responses:\n        \"200\":\n          description: Successful operation, gives one detailed ticket count\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/TicketCountsDetailedEntity\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get one detailed ticket count by ID\n      tags:\n        - Counts\n  \"/events/{event_id}/ticket-counts/{ticket_count_id}\":\n    get:\n      operationId: fetchOneTicketCount\n      parameters:\n        - $ref: \"#/components/parameters/path_event-id\"\n        - description: ID of the targeted ticket count.\n          in: path\n          name: ticket_count_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - $ref: \"#/components/parameters/query_ticket-counts_show-ignored\"\n      responses:\n        \"200\":\n          description: Successful operation, gives one ticket count\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/TicketCountsEntity\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get one ticket count by ID\n      tags:\n        - Counts\n  /price-ranges:\n    get:\n      operationId: fetchAllPriceRanges\n      parameters:\n        - description: Find only the price ranges whose label contains this value.\n          in: query\n          name: label\n          schema:\n            type: string\n        - description: If set to `false`, show only the price ranges which are not ignored.\n            If set to `true`, show all price ranges.\n          in: query\n          name: show_ignored\n          schema:\n            type: boolean\n            default: false\n        - description: Sort the price ranges in the corresponding order.\n          in: query\n          name: sort\n          schema:\n            type: string\n            enum:\n              - label\n              - -label\n              - order\n              - -order\n            default: label\n        - $ref: \"#/components/parameters/query_page-size\"\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          description: Successful operation, gives an array of price ranges\n          content:\n            application/hal+json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PriceRangesEntity\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Find all price ranges\n      tags:\n        - Price ranges\n  \"/price-ranges/{price_range_id}\":\n    get:\n      operationId: fetchOnePriceRange\n      parameters:\n        - description: ID of the targeted price range.\n          in: path\n          name: price_range_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          description: Successful operation, gives one price range\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/VenuesEntity\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get one price range by ID\n      tags:\n        - Price ranges\n  /promotions:\n    get:\n      operationId: fetchAllPromotions\n      parameters:\n        - $ref: \"#/components/parameters/query_promotions_label\"\n        - $ref: \"#/components/parameters/query_promotions_from-date\"\n        - $ref: \"#/components/parameters/query_promotions_to-date\"\n        - $ref: \"#/components/parameters/query_promotions_type\"\n        - $ref: \"#/components/parameters/query_promotions_family\"\n        - $ref: \"#/components/parameters/query_promotions_sort\"\n        - $ref: \"#/components/parameters/query_page-size\"\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200-promotions\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Find all promotions\n      tags:\n        - Promotions\n  \"/promotions/{promotion_id}\":\n    get:\n      operationId: fetchOnePromotion\n      parameters:\n        - description: ID of the targeted promotion.\n          in: path\n          name: promotion_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          description: Successful operation, gives one promotion\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/PromotionsEntity\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get one promotion by ID\n      tags:\n        - Promotions\n  /series:\n    get:\n      operationId: fetchAllSeries\n      parameters:\n        - description: Find only the venues whose label contains this value.\n          in: query\n          name: label\n          schema:\n            type: string\n        - description: Find only the series starting after this date.\n          in: query\n          name: from_date\n          schema:\n            type: string\n            format: date\n        - description: Find only the series ending before this date.\n          in: query\n          name: to_date\n          schema:\n            type: string\n            format: date\n        - description: Find only the series whose type is equal to this value.\n          in: query\n          name: type\n          schema:\n            type: string\n            enum:\n              - TOU\n              - LGS\n        - description: Sort the series in the corresponding order.\n          in: query\n          name: sort\n          schema:\n            type: string\n            enum:\n              - label\n              - -label\n              - first_date\n              - -first_date\n              - last_date\n              - -last_date\n            default: first_date\n        - $ref: \"#/components/parameters/query_page-size\"\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          description: Successful operation, gives an array of series\n          content:\n            application/hal+json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SeriesEntity\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Find all series\n      tags:\n        - Series\n  \"/series/{series_id}\":\n    get:\n      operationId: fetchOneSeries\n      parameters:\n        - description: ID of the targeted series.\n          in: path\n          name: series_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          description: Successful operation, gives one series\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/SeriesEntity\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get one series by ID\n      tags:\n        - Series\n  \"/series/{series_id}/events\":\n    get:\n      operationId: fetchAllSeriesEvents\n      parameters:\n        - description: ID of the targeted series.\n          in: path\n          name: series_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - $ref: \"#/components/parameters/query_events_from-datetime\"\n        - $ref: \"#/components/parameters/query_events_to-datetime\"\n        - $ref: \"#/components/parameters/query_events_city\"\n        - $ref: \"#/components/parameters/query_events_sort\"\n        - $ref: \"#/components/parameters/query_page-size\"\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200-events\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Find all events for one series\n      tags:\n        - Events\n  \"/series/{series_id}/promotions\":\n    get:\n      operationId: fetchAllSeriesPromotions\n      parameters:\n        - description: ID of the targeted series.\n          in: path\n          name: series_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - $ref: \"#/components/parameters/query_promotions_label\"\n        - $ref: \"#/components/parameters/query_promotions_from-date\"\n        - $ref: \"#/components/parameters/query_promotions_to-date\"\n        - $ref: \"#/components/parameters/query_promotions_type\"\n        - $ref: \"#/components/parameters/query_promotions_family\"\n        - $ref: \"#/components/parameters/query_promotions_sort\"\n        - $ref: \"#/components/parameters/query_page-size\"\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200-promotions\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Find all promotions for one series\n      tags:\n        - Promotions\n  /venues:\n    get:\n      operationId: fetchAllVenues\n      parameters:\n        - description: Find only the venues whose label contains this value.\n          in: query\n          name: label\n          schema:\n            type: string\n        - description: Find only the venues whose city contains this value.\n          in: query\n          name: city\n          schema:\n            type: string\n        - description: Find only the venues whose country_code is equal to this value.\n          in: query\n          name: country_code\n          schema:\n            type: string\n        - description: Find only the venues whose type is equal to this value.\n          in: query\n          name: type\n          schema:\n            type: string\n            enum:\n              - SAL\n              - FES\n        - description: Sort the venues in the corresponding order.\n          in: query\n          name: sort\n          schema:\n            type: string\n            enum:\n              - label\n              - -label\n              - city\n              - -city\n              - country\n              - -country\n            default: label\n        - $ref: \"#/components/parameters/query_page-size\"\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          description: Successful operation, gives an array of venues\n          content:\n            application/hal+json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/VenuesEntity\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Find all venues\n      tags:\n        - Venues\n  \"/venues/{venue_id}\":\n    get:\n      operationId: fetchOneVenue\n      parameters:\n        - description: ID of the targeted venue.\n          in: path\n          name: venue_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          description: Successful operation, gives one venue\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/VenuesEntity\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get one venue by ID\n      tags:\n        - Venues\n  \"/venues/{venue_id}/events\":\n    get:\n      operationId: fetchAllVenuesEvents\n      parameters:\n        - description: ID of the targeted venue.\n          in: path\n          name: venue_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - $ref: \"#/components/parameters/query_events_from-datetime\"\n        - $ref: \"#/components/parameters/query_events_to-datetime\"\n        - $ref: \"#/components/parameters/query_events_city\"\n        - $ref: \"#/components/parameters/query_events_sort\"\n        - $ref: \"#/components/parameters/query_page-size\"\n        - $ref: \"#/components/parameters/header_Accept-Language\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200-events\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Find all events for one venue\n      tags:\n        - Events\nx-tagGroups:\n  - name: Structure\n    tags:\n      - Events\n      - Series\n      - Venues\n  - name: Ticket settings\n    tags:\n      - Categories\n      - Price ranges\n      - Channels\n  - name: Ticket counts\n    tags:\n      - Capacities\n      - Counts\n  - name: Promotion\n    tags:\n      - Promotions\n  - name: Misc\n    tags:\n      - Bindings\n      - Subsidiaries\nservers:\n  - description: Server for testing purposes, with sandbox data from demo.pims.io\n    url: https://demo.pims.io/api\n  - description: Example of server for a real customer (Gérard Drouot Productions)\n    url: https://gdp.pims.io/api\ncomponents:\n  parameters:\n    header_Accept-Language:\n      description: Language used for the translatable labels.\n      in: header\n      name: Accept-Language\n      schema:\n        type: string\n        enum:\n          - de\n          - en\n          - fr\n        default: en\n    path_event-id:\n      description: ID of the targeted event.\n      in: path\n      name: event_id\n      required: true\n      schema:\n        type: integer\n        format: int32\n    query_capacities_show-ignored:\n      description: If set to `false`, show only the [event-]categories which are not\n        ignored. If set to `true`, show everything.\n      in: query\n      name: show_ignored\n      schema:\n        type: boolean\n        default: false\n    query_events_city:\n      description: Find only the events whose venue city (or metropolitan area) contains\n        this value.\n      in: query\n      name: city\n      schema:\n        type: string\n    query_events_from-datetime:\n      description: Find only the events starting after this date.\n      in: query\n      name: from_datetime\n      schema:\n        type: string\n        format: date\n    query_events_label:\n      description: Find only the events whose label contains this value.\n      in: query\n      name: label\n      schema:\n        type: string\n    query_events_sort:\n      description: Sort the events in the corresponding order.\n      in: query\n      name: sort\n      schema:\n        type: string\n        enum:\n          - label\n          - -label\n          - datetime\n          - -datetime\n          - venue_label\n          - -venue_label\n          - city\n          - -city\n        default: label\n    query_events_to-datetime:\n      description: Find only the events starting before this date.\n      in: query\n      name: to_datetime\n      schema:\n        type: string\n        format: date\n    query_page-size:\n      description: Pagination size, i.e. maximum number of items to be displayed in the\n        response.\n      in: query\n      name: page_size\n      schema:\n        type: integer\n        format: int32\n        default: 25\n    query_promotions_family:\n      description: Find only the promotions whose family is equal to this value.\n      in: query\n      name: family\n      schema:\n        type: string\n    query_promotions_from-date:\n      description: Find only the promotions starting after this date.\n      in: query\n      name: from_date\n      schema:\n        type: string\n        format: date\n    query_promotions_label:\n      description: Find only the promotions whose label contains this value.\n      in: query\n      name: label\n      schema:\n        type: string\n    query_promotions_sort:\n      description: Sort the promotions in the corresponding order.\n      in: query\n      name: sort\n      schema:\n        type: string\n        enum:\n          - date\n          - -date\n          - total_cost\n          - -total_cost\n        default: date\n    query_promotions_to-date:\n      description: Find only the promotions ending before this date.\n      in: query\n      name: to_date\n      schema:\n        type: string\n        format: date\n    query_promotions_type:\n      description: Find only the promotions whose type is equal to this value.\n      in: query\n      name: type\n      schema:\n        type: string\n    query_ticket-counts_from-date:\n      description: Find only the ticket counts after this date.\n      in: query\n      name: from_date\n      schema:\n        type: string\n        format: date\n    query_ticket-counts_show-ignored:\n      description: If set to `false`, show only the [event-]categories/[event-]price\n        ranges/[event]channels which are not ignored. If set to `true`, show\n        everything.\n      in: query\n      name: show_ignored\n      schema:\n        type: boolean\n        default: false\n    query_ticket-counts_show-not-approved:\n      description: If set to `false`, show only the approved ticket counts. If set to\n        `true`, show all the ticket counts.\n      in: query\n      name: show_not_approved\n      schema:\n        type: boolean\n        default: false\n    query_ticket-counts_sort:\n      description: Sort the ticket counts in the corresponding order.\n      in: query\n      name: sort\n      schema:\n        type: string\n        enum:\n          - date\n          - -date\n        default: date\n    query_ticket-counts_to-date:\n      description: Find only the ticket counts before this date.\n      in: query\n      name: to_date\n      schema:\n        type: string\n        format: date\n  responses:\n    \"401\":\n      description: Unauthorized, no authentication was made\n      content:\n        application/hal+json:\n          schema:\n            $ref: \"#/components/schemas/Error401\"\n    \"403\":\n      description: Forbidden, the authentication is wrong\n      content:\n        application/hal+json:\n          schema:\n            $ref: \"#/components/schemas/Error403\"\n    \"404\":\n      description: Not Found\n      content:\n        application/hal+json:\n          schema:\n            $ref: \"#/components/schemas/Error404\"\n    \"422\":\n      description: Unprocessable Entity\n      content:\n        application/hal+json:\n          schema:\n            $ref: \"#/components/schemas/Error422\"\n    \"500\":\n      description: Unexpected error\n      content:\n        application/hal+json:\n          schema:\n            $ref: \"#/components/schemas/Error500\"\n    200-events:\n      description: Successful operation, gives an array of events\n      content:\n        application/hal+json:\n          schema:\n            items:\n              $ref: \"#/components/schemas/EventsEntity\"\n            type: array\n    200-promotions:\n      description: Successful operation, gives an array of promotions\n      content:\n        application/hal+json:\n          schema:\n            items:\n              $ref: \"#/components/schemas/PromotionsEntity\"\n            type: array\n  securitySchemes:\n    Basic_Auth:\n      type: http\n      scheme: basic\n  schemas:\n    CategoriesEntity:\n      properties:\n        id:\n          description: Unique ID of the category.\n          example: 123\n          format: int32\n          type: integer\n        ignored:\n          description: Defines whether this category is ignored or not.\n          example: false\n          type: boolean\n        label:\n          description: Full label of the category.\n          example: CATEGORY 1\n          type: string\n        last_update_timestamp:\n          description: Timestamp for when the category was last updated in the customer's\n            database.\n          example: 1516500001\n          format: int64\n          type: integer\n        short_label:\n          description: Short label of the category (generally less than 5 characters).\n          example: CAT1\n          type: string\n          nullable: true\n      required:\n        - id\n        - label\n        - short_label\n        - ignored\n        - last_update_timestamp\n      title: Category\n      type: object\n    ChannelsEntity:\n      properties:\n        id:\n          description: Unique ID of the channel.\n          example: 123\n          format: int32\n          type: integer\n        ignored:\n          description: Defines whether this channel is ignored or not.\n          example: false\n          type: boolean\n        label:\n          description: Full label of the channel.\n          example: TICKETMASTER\n          type: string\n        last_update_timestamp:\n          description: Timestamp for when the channel was last updated in the customer's\n            database.\n          example: 1516500001\n          format: int64\n          type: integer\n        short_label:\n          description: Short label of the channel (generally less than 5 characters).\n          example: TKM\n          type: string\n          nullable: true\n      required:\n        - id\n        - label\n        - short_label\n        - ignored\n        - last_update_timestamp\n      title: Channel\n      type: object\n    Error401:\n      properties:\n        detail:\n          description: Description of the error.\n          example: Unauthorized\n          type: string\n        status:\n          description: Status code of the error.\n          example: 401\n          format: int32\n          type: integer\n        title:\n          description: Message corresponding to the status code.\n          example: Unauthorized\n          type: string\n        type:\n          description: Link to RFC 2616 about status codes definitions.\n          example: https://tools.ietf.org/html/rfc2616#section-10\n          type: string\n      required:\n        - type\n        - title\n        - status\n        - detail\n      type: object\n    Error403:\n      properties:\n        detail:\n          description: Description of the error.\n          example: Forbidden\n          type: string\n        status:\n          description: Status code of the error.\n          example: 403\n          format: int32\n          type: integer\n        title:\n          description: Message corresponding to the status code.\n          example: Forbidden\n          type: string\n        type:\n          description: Link to RFC 2616 about status codes definitions.\n          example: https://tools.ietf.org/html/rfc2616#section-10\n          type: string\n      required:\n        - type\n        - title\n        - status\n        - detail\n      type: object\n    Error404:\n      properties:\n        detail:\n          description: Description of the error.\n          example: Entity not found.\n          type: string\n        status:\n          description: Status code of the error.\n          example: 404\n          format: int32\n          type: integer\n        title:\n          description: Message corresponding to the status code.\n          example: Not Found\n          type: string\n        type:\n          description: Link to RFC 2616 about status codes definitions.\n          example: https://tools.ietf.org/html/rfc2616#section-10\n          type: string\n      required:\n        - type\n        - title\n        - status\n        - detail\n      type: object\n    Error422:\n      properties:\n        detail:\n          description: Description of the error.\n          example: Unknown date format, should be 'Y-m-d?H:i:s'\n          type: string\n        status:\n          description: Status code of the error.\n          example: 422\n          format: int32\n          type: integer\n        title:\n          description: Message corresponding to the status code.\n          example: Unprocessable Entity\n          type: string\n        type:\n          description: Link to RFC 2616 about status codes definitions.\n          example: https://tools.ietf.org/html/rfc2616#section-10\n          type: string\n      required:\n        - type\n        - title\n        - status\n        - detail\n      type: object\n    Error500:\n      properties:\n        detail:\n          description: Description of the error.\n          example: Internal Server Error\n          type: string\n        status:\n          description: Status code of the error.\n          example: 500\n          format: int32\n          type: integer\n        title:\n          description: Message corresponding to the status code.\n          example: Internal Server Error\n          type: string\n        type:\n          description: Link to RFC 2616 about status codes definitions.\n          example: https://tools.ietf.org/html/rfc2616#section-10\n          type: string\n      required:\n        - type\n        - title\n        - status\n        - detail\n      type: object\n    EventsCapacitiesEntity:\n      properties:\n        date:\n          description: Date from which the capacity is active.\n          format: date\n          type: string\n        event_categories:\n          description: Array of categories with their detailed capacities.\n          items:\n            properties:\n              comps:\n                description: Number of comps in the category.\n                format: int32\n                type: integer\n                nullable: true\n              holds:\n                description: Number of *holds* in the category. \u003cspan\n                  class=\"definition\"\u003eHolds\u003c/span\u003e are seats/places that are not\n                  in sale at the date of the capacity, but will eventually be\n                  later.\n                format: int32\n                type: integer\n                nullable: true\n              id:\n                description: Unique ID of the event category.\n                format: int32\n                type: integer\n              kills:\n                description: Number of *kills* in the category. \u003cspan\n                  class=\"definition\"\u003eKills\u003c/span\u003e are seats/places that will not\n                  be sold for technical reasons.\n                format: int32\n                type: integer\n                nullable: true\n              sellable_capacity:\n                description: \"Number of sellable seats/places in the category. This is\n                  calculated by the formula: `total_capacity - kills - comps -\n                  holds`.\"\n                format: int32\n                type: integer\n              total_capacity:\n                description: Total number of seats/places in the category.\n                format: int32\n                type: integer\n            required:\n              - id\n              - total_capacity\n              - kills\n              - comps\n              - holds\n              - sellable_capacity\n            type: object\n          type: array\n        id:\n          description: Unique ID of the event capacity.\n          format: int32\n          type: integer\n      required:\n        - id\n        - date\n      title: Event capacity\n      type: object\n    EventsCategoriesEntity:\n      properties:\n        category:\n          $ref: \"#/components/schemas/CategoriesEntity\"\n        event_price_ranges:\n          description: Array of event price ranges.\n          items:\n            properties:\n              base_price:\n                description: Base price of the event price range (i.e. including VAT but\n                  excluding all commissions).\n                example: 44.5\n                format: float\n                minimum: 0\n                type: number\n              currency:\n                description: Currency of the prices.\n                example: EUR\n                type: string\n              id:\n                description: ID of the event price range.\n                example: 56789\n                format: int32\n                type: integer\n              ignored:\n                description: Defines whether this event price range is ignored or not.\n                example: false\n                type: boolean\n              price_range:\n                $ref: \"#/components/schemas/PriceRangesEntity\"\n              public_price:\n                description: Public price of the event price range (i.e. including VAT and\n                  all commissions).\n                example: 50\n                format: float\n                minimum: 0\n                type: number\n                nullable: true\n            required:\n              - id\n              - price_range\n              - base_price\n              - public_price\n              - currency\n            type: object\n          type: array\n        id:\n          description: Unique ID of the event category.\n          example: 12345\n          format: int32\n          type: integer\n        ignored:\n          description: Defines whether this event category is ignored or not.\n          example: false\n          type: boolean\n      required:\n        - id\n        - ignored\n        - category\n      title: Event category\n      type: object\n    EventsChannelsEntity:\n      properties:\n        channel:\n          $ref: \"#/components/schemas/ChannelsEntity\"\n        id:\n          description: Unique ID of the event channel.\n          example: 12345\n          format: int32\n          type: integer\n        ignored:\n          description: Defines whether this event channel is ignored or not.\n          example: false\n          type: boolean\n      required:\n        - id\n        - ignored\n        - channel\n      title: Event channel\n      type: object\n    EventsEntity:\n      properties:\n        break_even:\n          description: Value of the break-even for the event.\n          example: 1727\n          format: int32\n          minimum: 0\n          type: integer\n        cancellation_date:\n          description: Date the event was canceled.\n          format: date\n          type: string\n        contract:\n          description: Contract of the series.\n          properties:\n            partner:\n              description: Contract partner.\n              properties:\n                id:\n                  description: Unique ID identifying the contract partner.\n                  example: 12\n                  format: int32\n                  type: integer\n                label:\n                  description: Label of the contract partner.\n                  example: K Prod\n                  type: string\n              required:\n                - id\n                - label\n              type: object\n              nullable: true\n            type:\n              description: Contract type.\n              properties:\n                id:\n                  description: String identifying the contract type.\n                  enum:\n                    - PRO\n                    - COP\n                    - PLO\n                    - COR\n                    - CES\n                  example: COP\n                  type: string\n                label:\n                  description: Label of the contract type. This value is translated\n                    according to the 'Accept-Language' header.\n                  example: Coprod\n                  type: string\n              required:\n                - id\n                - label\n              type: object\n          required:\n            - type\n            - partner\n          type: object\n        costing_capacity:\n          description: Costing capacity of the event.\n          example: 2074\n          format: int32\n          minimum: 0\n          type: integer\n        creation_timestamp:\n          description: Timestamp for when the venue was created in the customer's database.\n          example: 1496903403\n          format: int64\n          type: integer\n        currency:\n          description: Currency of the prices.\n          type: string\n        datetime:\n          description: Datetime of the event (relative to the timezone of the venue).\n          example: 2018-01-11T20:00:00\n          format: datetime\n          type: string\n        free:\n          description: Whether this event is free or not.\n          type: boolean\n        general_sales_date:\n          description: Date the event went on general sales (relative to the timezone of\n            the venue).\n          example: 2017-06-15\n          format: date\n          type: string\n        id:\n          description: Unique ID of the event.\n          example: 2142\n          format: int32\n          type: integer\n        input_type:\n          description: Input type of the event.\n          properties:\n            id:\n              description: String identifying the input type of the event.\n              enum:\n                - DET\n                - GLO\n              example: DET\n              type: string\n            label:\n              description: Label of the input type. This value is translated according to\n                the 'Accept-Language' header.\n              example: Detailed sales\n              type: string\n          required:\n            - id\n            - label\n          type: object\n        label:\n          description: Label of the event.\n          example: Alan Wilson\n          type: string\n        last_update_timestamp:\n          description: Timestamp for when the venue was last updated in the customer's\n            database.\n          example: 1516500001\n          format: int64\n          type: integer\n        max_capacity:\n          description: Maximum capacity for the venue in which the event occurs.\n          example: 2100\n          format: int32\n          minimum: 0\n          type: integer\n        presales_date:\n          description: Date the event went on presales (relative to the timezone of the\n            venue).\n          example: 2017-06-14\n          format: date\n          type: string\n        series_id:\n          description: ID of the series the event belongs to.\n          example: 263\n          format: int32\n          type: integer\n          nullable: true\n        sold_out_date:\n          description: Date the event was sold out.\n          format: date\n          type: string\n        venue:\n          $ref: \"#/components/schemas/VenuesEntity\"\n      required:\n        - id\n        - series_id\n        - label\n        - datetime\n        - venue\n        - input_type\n        - contract\n        - free\n        - creation_timestamp\n        - last_update_timestamp\n      title: Event\n      type: object\n    PriceRangesEntity:\n      properties:\n        id:\n          description: Unique ID of the price range.\n          example: 123\n          format: int32\n          type: integer\n        ignored:\n          description: Defines whether this price range is ignored or not.\n          example: false\n          type: boolean\n        label:\n          description: Full label of the price range.\n          example: REDUCED PRICE\n          type: string\n        last_update_timestamp:\n          description: Timestamp for when the price range was last updated in the\n            customer's database.\n          example: 1516500001\n          format: int64\n          type: integer\n        short_label:\n          description: Short label of the price range (generally less than 5 characters).\n          example: RED\n          type: string\n          nullable: true\n      required:\n        - id\n        - label\n        - short_label\n        - ignored\n        - last_update_timestamp\n      title: Price range\n      type: object\n    PromotionsEntity:\n      properties:\n        applied_to:\n          description: List of events and/or series where the promotion is applied. A\n            promotion can be applied on several events, and its costs can be\n            split between those events.\n          items:\n            properties:\n              event_id:\n                description: \"ID of the event the promotion applies to. This property is\n                  exclusive with 'series_id': if defined, then 'series_id' will\n                  not be displayed.\"\n                example: 2142\n                format: int32\n                type: integer\n                nullable: true\n              quantity:\n                description: Quantity share of the promotion devoted to this event/series.\n                format: float\n                minimum: 0\n                type: number\n                nullable: true\n              series_id:\n                description: \"ID of the series the promotion applies to. This property is\n                  exclusive with 'event_id': if defined, then 'event_id' will\n                  not be displayed.\"\n                example: 263\n                format: int32\n                type: integer\n                nullable: true\n              unit_cost:\n                description: \"Unit cost share of the promotion devoted to this\n                  event/series. The total cost of the share can be calculated\n                  with: quantity × unit_cost. *This field may be omitted\n                  according to the customer configuration.*\"\n                format: float\n                minimum: 0\n                type: number\n                nullable: true\n              valorized_quantity:\n                description: Valorized quantity share of the promotion devoted to this\n                  event/series. *This field may be omitted according to the\n                  customer configuration.*\n                format: float\n                minimum: 0\n                type: number\n                nullable: true\n              valorized_unit_cost:\n                description: \"Valorized unit cost share of the promotion devoted to this\n                  event/series. The total valorized cost of the share can be\n                  calculated with: valorized_quantity × valorized_unit_cost.\"\n                format: float\n                minimum: 0\n                type: number\n                nullable: true\n            type: object\n          type: array\n        comments:\n          description: Comments on the promotion.\n          type: string\n          nullable: true\n        cost:\n          description: Cost of the promotion.\n          properties:\n            currency:\n              description: Currency of the unit_cost (\u003ca\n                href='https://en.wikipedia.org/wiki/ISO_4217#Active_codes'\u003eISO\n                4212 alphabetic code\u003c/a\u003e).\n              type: string\n              nullable: true\n            exchange:\n              description: What was offered in exchange of the promotion.\n              type: string\n              nullable: true\n            quantity:\n              description: Quantity of the promotion (see unit_cost).\n              format: float\n              minimum: 0\n              type: number\n              nullable: true\n            state:\n              description: State of the promotion cost. *This object may be omitted\n                according to the customer configuration.*\n              properties:\n                id:\n                  description: String identifying the state of the promotion cost.\n                  enum:\n                    - PRE\n                    - ENG\n                    - FAC\n                    - PAY\n                  type: string\n                label:\n                  description: Label of the state of the promotion cost. This value is\n                    translated according to the 'Accept-Language' header.\n                  type: string\n              required:\n                - id\n                - label\n              type: object\n              nullable: true\n            type:\n              description: Type of the promotion cost.\n              properties:\n                id:\n                  description: String identifying the type of the promotion cost.\n                  enum:\n                    - PAY\n                    - ECH\n                    - GRA\n                  example: GRA\n                  type: string\n                label:\n                  description: Label of the type of the promotion cost. This value is\n                    translated according to the 'Accept-Language' header.\n                  example: Free\n                  type: string\n              required:\n                - id\n                - label\n              type: object\n            unit_cost:\n              description: \"Unit cost of the promotion. The total cost of the promotion can\n                be calculated with: quantity × unit_cost.\"\n              format: float\n              minimum: 0\n              type: number\n              nullable: true\n            valorized_quantity:\n              description: Valorized quantity of the promotion (see valorized_unit_cost).\n                *This field may be omitted according to the customer\n                configuration.*\n              format: float\n              minimum: 0\n              type: number\n              nullable: true\n            valorized_unit_cost:\n              description: \"Valorized unit cost of the promotion. The total valorized cost\n                of the promotion can be calculated with: valorized_quantity ×\n                valorized_unit_cost. *This field may be omitted according to the\n                customer configuration.*\"\n              format: float\n              minimum: 0\n              type: number\n              nullable: true\n          required:\n            - type\n          type: object\n        end_date:\n          description: Date the promotion ends. (If null, has the same value as start_date.)\n          example: 2018-01-31\n          format: date\n          type: string\n          nullable: true\n        file:\n          description: File associated to the promotion.\n          type: string\n          nullable: true\n        id:\n          description: Unique ID of the promotion.\n          example: 2404\n          format: int32\n          type: integer\n        label:\n          description: Label of the promotion.\n          example: 1/2 page Club et Concerts\n          type: string\n        start_date:\n          description: Date the promotion begins.\n          example: 2018-01-02\n          format: date\n          type: string\n          nullable: true\n        supplier:\n          description: Supplier of the promotion.\n          properties:\n            id:\n              description: Unique ID of the supplier.\n              format: int32\n              type: integer\n            label:\n              description: Name of the supplier.\n              type: string\n          required:\n            - id\n            - label\n          type: object\n          nullable: true\n        type:\n          description: Type of the promotion.\n          properties:\n            family:\n              description: Family the promotion type belongs to.\n              properties:\n                id:\n                  description: String identifying the promotion family.\n                  example: PRE\n                  type: string\n                label:\n                  description: Label of the promotion family. This value is translated\n                    according to the 'Accept-Language' header.\n                  example: Press\n                  type: string\n              required:\n                - id\n                - label\n              type: object\n            id:\n              description: String identifying the promotion type.\n              example: PPR\n              type: string\n            label:\n              description: Label of the promotion type. This value is translated according\n                to the 'Accept-Language' header.\n              example: Media ads\n              type: string\n          required:\n            - id\n            - label\n            - family\n          type: object\n      required:\n        - id\n        - type\n        - label\n        - supplier\n        - start_date\n        - end_date\n        - cost\n        - comments\n        - applied_to\n      title: Promotion\n      type: object\n    SeriesEntity:\n      properties:\n        contract:\n          description: Contract of the series.\n          properties:\n            partner:\n              description: Contract partner.\n              properties:\n                id:\n                  description: Unique ID identifying the contract partner.\n                  format: int32\n                  type: integer\n                label:\n                  description: Label of the contract partner.\n                  type: string\n              required:\n                - id\n                - label\n              type: object\n              nullable: true\n            type:\n              description: Contract type.\n              properties:\n                id:\n                  description: String identifying the contract type.\n                  enum:\n                    - PRO\n                    - COP\n                    - PLO\n                    - COR\n                    - CES\n                  example: PRO\n                  type: string\n                label:\n                  description: Label of the contract type. This value is translated\n                    according to the 'Accept-Language' header.\n                  example: Production\n                  type: string\n              required:\n                - id\n                - label\n              type: object\n          required:\n            - type\n          type: object\n        costing_capacity:\n          description: Value of the costing capacity.\n          example: 1465\n          format: int32\n          minimum: 0\n          type: integer\n          nullable: true\n        creation_timestamp:\n          description: Timestamp for when the series was created in the customer's database.\n          example: 1503655564\n          format: int64\n          type: integer\n        first_date:\n          description: Date of the first event in the series.\n          example: 2018-05-22\n          format: date\n          type: string\n        id:\n          description: Unique ID of the series.\n          example: 263\n          format: int32\n          type: integer\n        label:\n          description: Label of the series.\n          example: Tintin et Milou Live - Paris 2018\n          type: string\n        last_date:\n          description: Date of the last event in the series.\n          example: 2018-06-03\n          format: date\n          type: string\n        last_update_timestamp:\n          description: Timestamp for when the series was last updated in the customer's\n            database.\n          example: 1516500001\n          format: int64\n          type: integer\n        type:\n          description: Type of the series\n          properties:\n            id:\n              description: String identifying the series type.\n              enum:\n                - TOU\n                - LGS\n              example: LGS\n              type: string\n            label:\n              description: Label of the series type. This value is translated according to\n                the 'Accept-Language' header.\n              example: Long series\n              type: string\n          required:\n            - id\n            - label\n          type: object\n        venue:\n          $ref: \"#/components/schemas/VenuesEntity\"\n      required:\n        - id\n        - type\n        - label\n        - first_date\n        - last_date\n        - creation_timestamp\n        - last_update_timestamp\n      title: Series\n      type: object\n    TicketCountsDetailedEntity:\n      properties:\n        approved:\n          description: Defines whether this ticket count is approved or not.\n          example: true\n          type: boolean\n        comment:\n          description: Comment for the ticket count.\n          example: No sales\n          type: string\n          nullable: true\n        date:\n          description: Date of the ticket count.\n          example: 2018-07-03\n          format: date\n          type: string\n        event_channels:\n          description: Array of event channels where the sales were made.\n          items:\n            properties:\n              event_categories:\n                description: Array of event categories which where sold.\n                items:\n                  properties:\n                    event_price_ranges:\n                      description: Array of event price ranges which where sold.\n                      items:\n                        properties:\n                          currency:\n                            description: Currency of the gross (\u003ca\n                              href='https://en.wikipedia.org/wiki/ISO_4217#Active_codes'\u003eISO\n                              4212 alphabetic code\u003c/a\u003e).\n                            example: EUR\n                            type: string\n                          gross:\n                            description: Gross (= income for the sold tickets for the\n                              current channel/category/price range, including\n                              VAT but excluding all commissions).\n                            example: 864\n                            format: float\n                            minimum: 0\n                            type: number\n                            nullable: true\n                          id:\n                            description: ID of the event price range.\n                            example: 24680\n                            format: int32\n                            type: integer\n                          reservations:\n                            description: Detailed ticket reservations (= number of reserved\n                              tickets for the current channel/category/price\n                              range). *This field may be omitted according to\n                              the customer configuration.*\n                            example: 0\n                            format: int32\n                            minimum: 0\n                            type: integer\n                            nullable: true\n                          sales:\n                            description: Detailed ticket sales (= number of sold tickets\n                              for the current channel/category/price range).\n                            example: 37\n                            format: int32\n                            minimum: 0\n                            type: integer\n                            nullable: true\n                        required:\n                          - id\n                          - sales\n                          - gross\n                          - currency\n                        type: object\n                      type: array\n                    id:\n                      description: ID of the event category.\n                      example: 56789\n                      format: int32\n                      type: integer\n                  required:\n                    - id\n                    - event_price_ranges\n                  type: object\n                type: array\n              id:\n                description: ID of the event channel.\n                example: 12345\n                format: int32\n                type: integer\n            required:\n              - id\n              - event_categories\n            type: object\n          type: array\n        final:\n          description: Whether this ticket count is the last and final one of its event or\n            not. If it is, it means that no further ticket counts will be added\n            for the event it belongs to.\n          example: false\n          type: boolean\n        id:\n          description: Unique ID of the ticket count.\n          example: 12345\n          format: int32\n          type: integer\n      required:\n        - id\n        - date\n        - comment\n        - approved\n        - final\n      title: Detailed ticket count\n      type: object\n    TicketCountsEntity:\n      properties:\n        approved:\n          description: Defines whether this ticket count is approved or not.\n          example: true\n          type: boolean\n        comment:\n          description: Comment for the ticket count.\n          example: No sales\n          type: string\n          nullable: true\n        currency:\n          description: Currency of the gross (\u003ca\n            href='https://en.wikipedia.org/wiki/ISO_4217#Active_codes'\u003eISO 4212\n            alphabetic code\u003c/a\u003e).\n          example: EUR\n          type: string\n        date:\n          description: Date of the ticket count.\n          example: 2018-07-03\n          format: date\n          type: string\n        final:\n          description: Whether this ticket count is the last and final one of its event or\n            not. If it is, it means that no further ticket counts will be added\n            for the event it belongs to.\n          example: false\n          type: boolean\n        gross:\n          description: Gross (= income for the sold tickets, including VAT but excluding\n            all commissions).\n          example: 48735.6\n          format: float\n          minimum: 0\n          type: number\n        id:\n          description: Unique ID of the ticket count.\n          example: 12345\n          format: int32\n          type: integer\n        reservations:\n          description: Ticket reservations (= number of reserved tickets). *This field may\n            be omitted according to the customer configuration.*\n          example: 81\n          format: int32\n          minimum: 0\n          type: integer\n        sales:\n          description: Ticket sales (= number of sold tickets).\n          example: 1025\n          format: int32\n          minimum: 0\n          type: integer\n      required:\n        - id\n        - date\n        - comment\n        - approved\n        - final\n        - sales\n      title: Ticket count\n      type: object\n    VenuesEntity:\n      properties:\n        alternative_labels:\n          description: Array of alternative/old names of the venue.\n          items:\n            type: string\n          type: array\n        city:\n          description: City in which the venue is.\n          example: Saint-Herblain\n          type: string\n        country_code:\n          description: Country in which the venue is (\u003ca\n            href='https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3'\u003eISO 3166-1\n            alpha-3 code\u003c/a\u003e).\n          example: FR\n          type: string\n        creation_timestamp:\n          description: Timestamp for when the venue was created in the customer's database.\n          example: 1262300401\n          format: int64\n          type: integer\n        first_address:\n          description: First address field of the venue.\n          example: ZAC d'Ar Mor\n          type: string\n          nullable: true\n        id:\n          description: Unique ID of the venue.\n          example: 27\n          format: int32\n          type: integer\n        label:\n          description: Name of the venue.\n          example: Zénith de Nantes Métropole\n          type: string\n        last_update_timestamp:\n          description: Timestamp for when the venue was last updated in the customer's\n            database.\n          example: 1473008115\n          format: int64\n          type: integer\n        major_city:\n          description: Major city or metropolitan area the venue belongs to.\n          example: Nantes\n          type: string\n          nullable: true\n        second_address:\n          description: Second address field of the venue.\n          example: Boulevard du Zénith\n          type: string\n          nullable: true\n        type:\n          properties:\n            id:\n              description: String identifying the venue type.\n              enum:\n                - SAL\n                - FES\n              example: SAL\n              type: string\n            label:\n              description: Label of the venue type. This value is translated according to\n                the 'Accept-Language' header.\n              example: Venue\n              type: string\n          required:\n            - id\n            - label\n          type: object\n        zip_code:\n          description: ZIP code of the venue.\n          example: \"44800\"\n          type: string\n          nullable: true\n      required:\n        - id\n        - type\n        - label\n        - first_address\n        - second_address\n        - zip_code\n        - city\n        - major_city\n        - country_code\n        - creation_timestamp\n        - last_update_timestamp\n      title: Venue\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/pims.io-1.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/pims.io-1.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/series/{series_id}/promotions\": get: responses: 200: contents: unsupported content types: [application/hal+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}