{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/alphagov/pay-adminusers"
		},
		"file": {
			"name": "adminusers_spec.yaml",
			"size": 0,
			"path": "openapi/adminusers_spec.yaml",
			"byteSize": 44408,
			"content": "openapi: 3.0.1\ninfo:\n  description: Adminusers API\n  title: Adminusers API\n  version: v1.0.0\npaths:\n  /healthcheck:\n    get:\n      operationId: healthCheck\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n                example:\n                  database:\n                    healthy: true\n                    message: Healthy\n                  deadlocks:\n                    healthy: true\n                    message: Healthy\n          description: OK\n        \"503\":\n          description: Service unavailable. If any healthchecks fail\n      summary: \"Healthcheck endpoint for adminusers. Check database, and deadlocks\"\n      tags:\n      - Other\n  /v1/api/forgotten-passwords:\n    post:\n      operationId: sendForgottenPassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                username: a75f2719456c80eb29a10bbf1c92e7b7@example.com\n              required:\n              - username\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Invalid payload\n        \"404\":\n          description: Not found\n      summary: Create a new forgotten password request (sends email to user)\n      tags:\n      - Passwords\n  /v1/api/forgotten-passwords/{code}:\n    get:\n      operationId: findNonExpiredForgottenPassword\n      parameters:\n      - example: bc9039e00cba4e63b2c92ecd0e188aba\n        in: path\n        name: code\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForgottenPassword'\n          description: OK\n        \"404\":\n          description: Not found\n      summary: Verify forgotten password code\n      tags:\n      - Passwords\n  /v1/api/invites:\n    get:\n      operationId: getInvites\n      parameters:\n      - example: ahq8745yq387\n        in: query\n        name: serviceId\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Invite'\n          description: OK\n      summary: List invites for a service\n      tags:\n      - Invites\n  /v1/api/invites/otp/resend:\n    post:\n      operationId: resendOtp\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InviteOtpRequest'\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Invalid payload\n      summary: Resend OTP\n      tags:\n      - Invites\n  /v1/api/invites/otp/validate:\n    post:\n      operationId: createUserUponOtpValidation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InviteValidateOtpRequest'\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Invalid payload\n      summary: Validates OTP for the invite and creates user\n      tags:\n      - Invites\n  /v1/api/invites/otp/validate/service:\n    post:\n      operationId: validateOtpKeyForService\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InviteValidateOtpRequest'\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Invalid payload\n      summary: Validates OTP for the invite - part of creating service\n      tags:\n      - Invites\n  /v1/api/invites/service:\n    post:\n      operationId: createServiceInvite\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                telephone_number: +440787654534\n                email: example@example.gov.uk\n                password: plain-txt-passsword\n              required:\n              - email\n              - password\n              - telephone_number\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invite'\n          description: Created\n        \"400\":\n          description: Invalid payload\n      summary: Creates an invitation to allow self provisioning new service with Pay\n      tags:\n      - Invites\n  /v1/api/invites/user:\n    post:\n      operationId: createUserInvite\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InviteUserRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invite'\n          description: Created\n        \"400\":\n          description: Invalid payload\n        \"404\":\n          description: Not found\n      summary: Creates an invitation to allow a new team member to join an existing\n        service.\n      tags:\n      - Invites\n  /v1/api/invites/{code}:\n    get:\n      operationId: getInvite\n      parameters:\n      - example: d02jddeib0lqpsir28fbskg9v0rv\n        in: path\n        name: code\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invite'\n          description: OK\n        \"404\":\n          description: Not found\n      summary: Find invite for invite code\n      tags:\n      - Invites\n  /v1/api/invites/{code}/complete:\n    post:\n      description: \"In the case of a user invite, this resource will assign the new\\\n        \\ service to the existing user and disables the invite. \u003cbr\u003eIn the case of\\\n        \\ a service invite, this resource will create a new service, assign gateway\\\n        \\ account ids (if provided) and also creates a new user and assign to the\\\n        \\ service\u003cbr\u003eThe response contains the user and the service id's affected\\\n        \\ as part of the invite completion in addition to the invite\"\n      operationId: completeInvite\n      parameters:\n      - example: d02jddeib0lqpsir28fbskg9v0rv\n        in: path\n        name: code\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/InviteCompleteRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InviteCompleteResponse'\n          description: OK\n        \"404\":\n          description: Not found\n      summary: Completes the invite by creating user/service and invalidating the\n        invite code\n      tags:\n      - Invites\n  /v1/api/invites/{code}/otp/generate:\n    post:\n      operationId: generateAndDispatchOtp\n      parameters:\n      - example: d02jddeib0lqpsir28fbskg9v0rv\n        in: path\n        name: code\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                telephone_number: \"07451234567\"\n                password: a-password\n              required:\n              - password\n              - telephone_number\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Invalid payload\n        \"404\":\n          description: Not found\n      summary: Generates and sends otp verification code to the phone number registered\n        in the invite.\n      tags:\n      - Invites\n  /v1/api/reset-password:\n    post:\n      operationId: resetForgottenPassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                forgotten_password_code: bc9039e00cba4e63b2c92ecd0e188aba\n                new_password: new-password\n              required:\n              - forgotten_password_code\n              - new_password\n      responses:\n        \"204\":\n          description: Updated password successfully\n        \"400\":\n          description: Invalid payload\n        \"404\":\n          description: Expired or non-existent code\n      summary: Reset password\n      tags:\n      - Passwords\n  /v1/api/services:\n    get:\n      operationId: findServices\n      parameters:\n      - example: 1\n        in: query\n        name: gatewayAccountId\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Service'\n          description: OK\n        \"400\":\n          description: Missing gateway account ID\n        \"404\":\n          description: Not found\n      summary: Find service associated with gateway account ID\n      tags:\n      - Services\n    post:\n      description: This endpoint creates a new service. And assigns to gateway account\n        ids (Optional). \u003cbr\u003e `service_name` keys are supported ISO-639-1 language\n        codes and values are translated service names | key must be `\"en\"` or `\"cy\"`\n      operationId: createService\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                gateway_account_ids:\n                - \"1\"\n                service_name:\n                  en: Some service name\n                  cy: Service name in welsh\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Service'\n          description: Created\n        \"409\":\n          description: Gateway account IDs provided has already been assigned to another\n            service\n        \"500\":\n          description: Invalid JSON payload\n      summary: Create new service\n      tags:\n      - Services\n  /v1/api/services/list:\n    get:\n      operationId: getServices\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Service'\n          description: OK\n      summary: Get all services\n      tags:\n      - Services\n  /v1/api/services/search:\n    post:\n      description: This endpoint returns a list of services using lexical meaning\n        to determine a match to the search criteria\n      operationId: searchServices\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                service_name: service name\n                service_merchant_name: service merchant name\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Service'\n          description: OK\n        \"400\":\n          description: Invalid JSON payload\n      summary: Search services by name or merchant name\n      tags:\n      - Toolbox\n  /v1/api/services/{serviceExternalId}:\n    get:\n      operationId: findService\n      parameters:\n      - example: 7d19aff33f8948deb97ed16b2912dcd3\n        in: path\n        name: serviceExternalId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Service'\n          description: OK\n        \"404\":\n          description: Not found\n      summary: Find service by external ID\n      tags:\n      - Services\n    patch:\n      description: \"Allows patching below service attributes. Each attribute has its\\\n        \\ own validation depending on data type. Request can either be a single object\\\n        \\ or an array of objects. It’s similar to (but not 100% compliant with) [JSON\\\n        \\ Patch](http://jsonpatch.com/).\u003cbr\u003e\\n  | op |  field | example |\\n| --- |\\\n        \\  --- | ----|\\n| add | gateway_account_ids  | [\\\"1\\\"] |\\n| replace | redirect_to_service_immediately_on_terminal_state\\\n        \\ | false |\\n| replace | experimental_features_enabled | false |\\n| replace\\\n        \\ | agent_initiated_moto_enabled | false |\\n| replace | collect_billing_address\\\n        \\ | true |\\n| replace | current_go_live_stage | NOT_STARTED |\\n| replace |\\\n        \\ current_psp_test_account_stage | NOT_STARTED |\\n| replace | merchant_details/name,\\\n        \\ organisatio | name |\\n| replace | merchant_details/address_line1, Address\\\n        \\ lin | 1 |\\n| replace | merchant_details/address_line2, Address lin | 2 \\\n        \\ |\\n| replace | merchant_details/address_city | London |\\n| replace | merchant_details/address_country\\\n        \\ | GB |\\n| replace | merchant_details/address_postcode | E6 8XX |\\n| replace\\\n        \\ | merchant_detail |/email,  |\\n| replace | merchant_details/email, email@exampl\\\n        \\ |.com |\\n| replace | merchant_detail |/url,  |\\n| replace | merchant_details/url,\\\n        \\ http://www.exampl |.org |\\n| replace | merchant_detail |/telephone_number,\\\n        \\  |\\n| replace | merchant_details/telephone_number | 447700900000 |\\n| replace\\\n        \\ | custom_branding | { \\\"css_url\\\": \\\"css url\\\", \\\"image_url\\\": \\\"image url\\\"\\\n        } |\\n| replace | custom_branding | {} |\\n| replace | service_name/en | Some\\\n        \\ service name |\\n| replace | sector | local government |\\n| replace | internal\\\n        \\ | true |\\n| replace | archived | true |\\n| replace | went_live_date | 2022-04-09T18:07:46Z\\\n        \\ |\\n| replace | default_billing_address_country | GB | \"\n      operationId: updateServiceAttribute\n      parameters:\n      - example: 7d19aff33f8948deb97ed16b2912dcd3\n        in: path\n        name: serviceExternalId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/ServiceUpdateRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Service'\n          description: OK\n        \"400\":\n          description: Invalid payload\n      summary: Patch service attributes\n      tags:\n      - Services\n  /v1/api/services/{serviceExternalId}/govuk-pay-agreement:\n    get:\n      description: Retrieves the user's email address and timestamp that the GOV.UK\n        Pay terms were accepted on for the service.\n      operationId: getGovUkPayAgreement\n      parameters:\n      - example: 7d19aff33f8948deb97ed16b2912dcd3\n        in: path\n        name: serviceExternalId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GovUkPayAgreement'\n          description: OK\n        \"404\":\n          description: Service with serviceExternalId not found\n      summary: Get details about the acceptance of GOV.UK Pay terms\n      tags:\n      - Services\n    post:\n      operationId: createGovUkPayAgreement\n      parameters:\n      - example: 7d19aff33f8948deb97ed16b2912dcd3\n        in: path\n        name: serviceExternalId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                user_external_id: 12e3eccfab284ae5bc1108e9c0456ba7\n              required:\n              - user_external_id\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GovUkPayAgreement'\n          description: Created\n        \"400\":\n          description: Invalid payload\n        \"404\":\n          description: Service with serviceExternalId not found\n        \"409\":\n          description: Agreement already exists for the service.\n      summary: Record acceptance of GOV.UK Pay terms\n      tags:\n      - Services\n  /v1/api/services/{serviceExternalId}/merchant-details:\n    put:\n      operationId: updateServiceMerchantDetails\n      parameters:\n      - example: 7d19aff33f8948deb97ed16b2912dcd3\n        in: path\n        name: serviceExternalId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateMerchantDetailsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Service'\n          description: OK\n        \"400\":\n          description: Invalid payload\n      summary: Update merchant details of a service\n      tags:\n      - Services\n  /v1/api/services/{serviceExternalId}/send-live-email:\n    post:\n      description: \"This endpoint will send an email to the user who signed the agreement\\\n        \\ with GOV.UK Pay for the service informing them that their service is now\\\n        \\ live.The email address used is the email address of the user provided to\\\n        \\ the [POST /v1/api/services/`{serviceExternalId}`/govuk-pay-agreement] endpoint.\"\n      operationId: sendLiveAccountCreatedEmail\n      parameters:\n      - example: 7d19aff33f8948deb97ed16b2912dcd3\n        in: path\n        name: serviceExternalId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          description: Service with serviceExternalId not found\n      summary: Sends an email to the user who signed the service agreement to inform\n        them that their service is live\n      tags:\n      - Services\n  /v1/api/services/{serviceExternalId}/stripe-agreement:\n    get:\n      description: Retrieves the IP address and timestamp that the Stripe terms were\n        accepted on for the service.\n      operationId: getStripeAgreement\n      parameters:\n      - example: 7d19aff33f8948deb97ed16b2912dcd3\n        in: path\n        name: serviceExternalId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StripeAgreement'\n          description: OK\n        \"404\":\n          description: Not found\n      summary: Get details about the acceptance of Stripe terms\n      tags:\n      - Services\n    post:\n      description: Records that a GOV.UK Pay agreement has been accepted for the service.\n      operationId: createStripeAgreement\n      parameters:\n      - example: 7d19aff33f8948deb97ed16b2912dcd3\n        in: path\n        name: serviceExternalId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StripeAgreementRequest'\n        required: true\n      responses:\n        \"201\":\n          description: Created\n        \"409\":\n          description: Conflict. Another stripe agreement already exists for the service\n        \"422\":\n          description: Invalid JSON payload or IP address\n      summary: Record acceptance of Stripe terms\n      tags:\n      - Services\n  /v1/api/services/{serviceExternalId}/users:\n    get:\n      operationId: findUsersByServiceId\n      parameters:\n      - in: path\n        name: serviceExternalId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/User'\n          description: OK\n        \"404\":\n          description: Not found\n      summary: Find users of a service\n      tags:\n      - Services\n  /v1/api/services/{serviceExternalId}/users/{userExternalId}:\n    delete:\n      operationId: removeUserFromService\n      parameters:\n      - example: 7d19aff33f8948deb97ed16b2912dcd3\n        in: path\n        name: serviceExternalId\n        required: true\n        schema:\n          type: string\n      - description: Admin user external ID of the service\n        example: 0ddf69c1ba924deca07f0ee748ff1533\n        in: path\n        name: userExternalId\n        required: true\n        schema:\n          type: string\n      - description: User external ID to remove from service\n        example: d012mkldfdfnsdhqha7f0ee748ff1546\n        in: header\n        name: GovUkPay-User-Context\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: OK\n        \"403\":\n          description: Forbidden. `GovUkPay-User-Context` header is blank\n        \"409\":\n          description: Conflict. `GovUkPay-User-Context` is same as userExternalId\n            or user with `userExternalId` is not admin of the service\n      summary: Delete user from a service\n      tags:\n      - Services\n  /v1/api/toolbox/services/{serviceExternalId}/users/{userExternalId}:\n    delete:\n      operationId: removeUserFromServiceUsingToolbox\n      parameters:\n      - example: 7d19aff33f8948deb97ed16b2912dcd3\n        in: path\n        name: serviceExternalId\n        required: true\n        schema:\n          type: string\n      - example: 93ba1ec4ed6a4238a59f16ad97b4fa12\n        in: path\n        name: userExternalId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Delete user from service\n        \"404\":\n          description: User or Service not found\n      summary: Remove user from service (Toolbox use only)\n      tags:\n      - Toolbox\n  /v1/api/users:\n    get:\n      operationId: getUsers\n      parameters:\n      - in: query\n        name: ids\n        schema:\n          type: string\n          example: \"93ba1ec4ed6a4238a59f16ad97b4fa12,1234\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/User'\n          description: OK\n      summary: Gets users with the associated external ids\n      tags:\n      - Users\n    post:\n      operationId: createUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUserRequest'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Created\n        \"400\":\n          description: Invalid payload\n        \"409\":\n          description: User with username already exists\n        \"500\":\n          description: Internal server error\n      summary: Create new user\n      tags:\n      - Users\n  /v1/api/users/admin-emails-for-gateway-accounts:\n    post:\n      operationId: getAdminUserEmailsForGatewayAccountIds\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                gatewayAccountIds:\n                - \"1\"\n                - \"2\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n                example:\n                  \"1\":\n                  - user@somegovernmentdept.gov.uk\n                  \"2\":\n                  - user2@somegovernmentdept.gov.uk\n          description: OK\n        \"422\":\n          description: Invalid request\n      summary: Get admin user emails for given gateway account IDs\n      tags:\n      - Users\n  /v1/api/users/authenticate:\n    post:\n      operationId: authenticate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                username: user@somegovernmentdept.gov.uk\n                password: a-password\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        \"400\":\n          description: Invalid payload\n        \"401\":\n          description: Unauthorised\n      summary: Authenticate a given username/password\n      tags:\n      - Users\n  /v1/api/users/find:\n    post:\n      operationId: findUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                username: user@somegovernmentdept.gov.uk\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        \"400\":\n          description: Invalid search params\n        \"404\":\n          description: Not found\n      summary: Find user by username\n      tags:\n      - Users\n  /v1/api/users/{userExternalId}:\n    get:\n      operationId: getUser\n      parameters:\n      - example: 93ba1ec4ed6a4238a59f16ad97b4fa12\n        in: path\n        name: userExternalId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        \"404\":\n          description: Not found\n      summary: Find user by user external ID\n      tags:\n      - Users\n    patch:\n      description: \"Patch user attributes. \u003cbr\u003eSupports patching (replace op) fields\\\n        \\ `disabled, email, features, telephone_number` and `append` for attrbute\\\n        \\ `sessionVersion`.\"\n      operationId: updateUserAttribute\n      parameters:\n      - example: 93ba1ec4ed6a4238a59f16ad97b4fa12\n        in: path\n        name: userExternalId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        \"400\":\n          description: Invalid payload\n        \"404\":\n          description: User with userExternalId not found\n      summary: Update user attributes\n      tags:\n      - Users\n  /v1/api/users/{userExternalId}/reset-second-factor:\n    post:\n      operationId: resetSecondFactor\n      parameters:\n      - example: 93ba1ec4ed6a4238a59f16ad97b4fa12\n        in: path\n        name: userExternalId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        \"404\":\n          description: User with userExternalId not found\n      summary: Reset 2FA to SMS\n      tags:\n      - Users\n  /v1/api/users/{userExternalId}/second-factor:\n    post:\n      operationId: sendOtpSms\n      parameters:\n      - example: 93ba1ec4ed6a4238a59f16ad97b4fa12\n        in: path\n        name: userExternalId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                provisional: false\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Invalid payload\n        \"404\":\n          description: Not found\n      summary: Send OTP via SMS for an existing user\n      tags:\n      - Users\n  /v1/api/users/{userExternalId}/second-factor/activate:\n    post:\n      operationId: activateSecondFactorOtpKey\n      parameters:\n      - example: 93ba1ec4ed6a4238a59f16ad97b4fa12\n        in: path\n        name: userExternalId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                code: 123456\n                second_factor: SMS\n              required:\n              - code\n              - second_factor\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        \"400\":\n          description: Invalid payload\n        \"401\":\n          description: Unauthorised\n      summary: Activate a new OTP key and method for a user\n      tags:\n      - Users\n  /v1/api/users/{userExternalId}/second-factor/authenticate:\n    post:\n      operationId: authenticateSecondFactor\n      parameters:\n      - example: 93ba1ec4ed6a4238a59f16ad97b4fa12\n        in: path\n        name: userExternalId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                code: 123456\n              required:\n              - code\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        \"400\":\n          description: Invalid payload\n        \"401\":\n          description: Unauthorised\n      summary: Authenticate 2FA code\n      tags:\n      - Users\n  /v1/api/users/{userExternalId}/second-factor/provision:\n    post:\n      operationId: newSecondFactorOtpKey\n      parameters:\n      - example: 93ba1ec4ed6a4238a59f16ad97b4fa12\n        in: path\n        name: userExternalId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        \"404\":\n          description: Not found\n      summary: Create a new provisional OTP key for a user\n      tags:\n      - Users\n  /v1/api/users/{userExternalId}/services:\n    post:\n      operationId: createServiceRole\n      parameters:\n      - example: 93ba1ec4ed6a4238a59f16ad97b4fa12\n        in: path\n        name: userExternalId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                service_external_id: 7d19aff33f8948deb97ed16b2912dcd3\n                role_name: admin\n              required:\n              - role_name\n              - service_external_id\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        \"400\":\n          description: Invalid payload\n        \"404\":\n          description: User with userExternalId not found\n        \"409\":\n          description: User already got access to service\n      summary: Assign a new service along with role to a user\n      tags:\n      - Users\n  /v1/api/users/{userExternalId}/services/{serviceExternalId}:\n    put:\n      operationId: updateServiceRole\n      parameters:\n      - example: 93ba1ec4ed6a4238a59f16ad97b4fa12\n        in: path\n        name: userExternalId\n        required: true\n        schema:\n          type: string\n      - example: 7d19aff33f8948deb97ed16b2912dcd3\n        in: path\n        name: serviceExternalId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                role_name: admin\n              required:\n              - role_name\n              - service_external_id\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        \"400\":\n          description: Invalid payload\n        \"404\":\n          description: Not found\n        \"409\":\n          description: User does not belong to service\n      summary: Update user's role for a service\n      tags:\n      - Users\ncomponents:\n  schemas:\n    CreateUserRequest:\n      type: object\n      properties:\n        email:\n          type: string\n          example: user@somegovernmentdept.gov.uk\n        features:\n          type: string\n          example: \"feature1, feature2\"\n        gateway_account_ids:\n          type: array\n          items:\n            type: string\n            example: \"1\"\n        otp_key:\n          type: string\n          example: 43c3c4t\n        password:\n          type: string\n          writeOnly: true\n        service_external_ids:\n          type: array\n          items:\n            type: string\n            example: 7d19aff33f8948deb97ed16b2912dcd3\n        telephone_number:\n          type: string\n          example: \"447700900000\"\n        username:\n          type: string\n          example: user@somegovernmentdept.gov.uk\n    ForgottenPassword:\n      type: object\n      properties:\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n        code:\n          type: string\n          example: bc9039e00cba4e63b2c92ecd0e188aba\n        date:\n          type: string\n          format: date-time\n          example: 2022-04-06T21:27:06.376Z\n        user_external_id:\n          type: string\n          example: 12e3eccfab284ae5bc1108e9c0456ba7\n    GovUkPayAgreement:\n      type: object\n      properties:\n        agreement_time:\n          type: string\n          format: date-time\n          example: 2022-04-10T16:23:35.684Z\n        email:\n          type: string\n          example: someone@somedepartment.gov.uk\n    Invite:\n      type: object\n      properties:\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n        attempt_counter:\n          type: integer\n          format: int32\n          example: 0\n        disabled:\n          type: boolean\n          example: false\n        email:\n          type: string\n          example: example@example.gov.uk\n        expired:\n          type: boolean\n          example: false\n        inviteLink:\n          type: string\n          writeOnly: true\n        password_set:\n          type: boolean\n          example: false\n        role:\n          type: string\n          example: view-only\n        telephone_number:\n          type: string\n          example: +440787654534\n        type:\n          type: string\n          example: service\n        user_exist:\n          type: boolean\n    InviteCompleteRequest:\n      type: object\n      properties:\n        gateway_account_ids:\n          type: array\n          items:\n            type: string\n    InviteCompleteResponse:\n      type: object\n      properties:\n        invite:\n          $ref: '#/components/schemas/Invite'\n        service_external_id:\n          type: string\n          example: 89wi6il2364328\n        user_external_id:\n          type: string\n          example: 287cg75v3737\n    InviteOtpRequest:\n      type: object\n      properties:\n        code:\n          type: string\n          example: d02jddeib0lqpsir28fbskg9v0rv\n          maxLength: 255\n        password:\n          type: string\n          example: a-password\n        telephone_number:\n          type: string\n          example: \"440787654534\"\n      required:\n      - code\n      - telephone_number\n    InviteUserRequest:\n      type: object\n      properties:\n        email:\n          type: string\n          example: example@example.gov.uk\n        otp_key:\n          type: string\n        role_name:\n          type: string\n          example: view-only\n        sender:\n          type: string\n          description: User external ID\n          example: d0wksn12nklsdf1nd02nd9n2ndk\n        service_external_id:\n          type: string\n          example: dj2jkejke32jfhh3\n      required:\n      - email\n      - role_name\n      - sender\n      - service_external_id\n    InviteValidateOtpRequest:\n      type: object\n      properties:\n        code:\n          type: string\n          example: d02jddeib0lqpsir28fbskg9v0rv\n          maxLength: 255\n        otp_code:\n          type: integer\n          format: int32\n          example: 123456\n      required:\n      - code\n      - otp_code\n    JsonNode:\n      type: object\n    Link:\n      type: object\n      properties:\n        href:\n          type: string\n          example: https://an.example.link\n        method:\n          type: string\n          example: GET\n        rel:\n          type: string\n          example: self\n    MerchantDetails:\n      type: object\n      properties:\n        address_city:\n          type: string\n          example: London\n        address_country:\n          type: string\n          example: GB\n        address_line1:\n          type: string\n          example: Address line 1\n        address_line2:\n          type: string\n          example: Address line 2\n        address_postcode:\n          type: string\n          example: E1 8XX\n        email:\n          type: string\n          example: email@example.com\n        name:\n          type: string\n          example: organisation name\n        telephone_number:\n          type: string\n          example: \"447700900000\"\n        url:\n          type: string\n          example: http://www.example.org\n    PatchRequest:\n      type: object\n      properties:\n        op:\n          type: string\n          example: replace\n        path:\n          type: string\n          example: email\n        value:\n          type: string\n          example: user@somegovernmentdept.gov.uk\n    Permission:\n      type: object\n      properties:\n        description:\n          type: string\n          example: Revokekey\n        name:\n          type: string\n          example: tokens:delete\n    Role:\n      type: object\n      properties:\n        description:\n          type: string\n          example: Administrator\n        name:\n          type: string\n          example: admin\n        permissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Permission'\n          uniqueItems: true\n    Service:\n      type: object\n      properties:\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n        agent_initiated_moto_enabled:\n          type: boolean\n          example: false\n        archived:\n          type: boolean\n          example: false\n        collect_billing_address:\n          type: boolean\n          example: true\n        created_date:\n          type: string\n          format: date-time\n          example: 2022-04-01T12:07:46.568Z\n        current_go_live_stage:\n          type: string\n          enum:\n          - NOT_STARTED\n          - ENTERED_ORGANISATION_NAME\n          - ENTERED_ORGANISATION_ADDRESS\n          - CHOSEN_PSP_STRIPE\n          - CHOSEN_PSP_WORLDPAY\n          - CHOSEN_PSP_SMARTPAY\n          - CHOSEN_PSP_EPDQ\n          - CHOSEN_PSP_GOV_BANKING_WORLDPAY\n          - TERMS_AGREED_STRIPE\n          - TERMS_AGREED_WORLDPAY\n          - TERMS_AGREED_SMARTPAY\n          - TERMS_AGREED_EPDQ\n          - TERMS_AGREED_GOV_BANKING_WORLDPAY\n          - DENIED\n          - LIVE\n          example: NOT_STARTED\n        current_psp_test_account_stage:\n          type: string\n          enum:\n          - NOT_STARTED\n          - REQUEST_SUBMITTED\n          - CREATED\n          example: NOT_STARTED\n        custom_branding:\n          type: object\n          additionalProperties:\n            type: object\n            example:\n              css_url: css url\n              image_url: image url\n          example:\n            css_url: css url\n            image_url: image url\n        default_billing_address_country:\n          type: string\n          example: GB\n        experimental_features_enabled:\n          type: boolean\n          example: false\n        external_id:\n          type: string\n          example: 7d19aff33f8948deb97ed16b2912dcd3\n        gateway_account_ids:\n          type: array\n          items:\n            type: string\n            example: \"1\"\n        id:\n          type: integer\n          format: int32\n        internal:\n          type: boolean\n          example: false\n        merchant_details:\n          $ref: '#/components/schemas/MerchantDetails'\n        name:\n          type: string\n          example: Some service name\n        redirect_to_service_immediately_on_terminal_state:\n          type: boolean\n          example: false\n        sector:\n          type: string\n          example: local government\n        service_name:\n          type: object\n          additionalProperties:\n            type: string\n            example: \"{\\\"en\\\":\\\"Some service name\\\",\\\"cy\\\":\\\"Service name in welsh\\\"\\\n              }\"\n          example:\n            cy: Service name in welsh\n            en: Some service name\n        went_live_date:\n          type: string\n          format: date-time\n          example: 2022-04-09T18:07:46.568Z\n    ServiceRole:\n      type: object\n      properties:\n        role:\n          $ref: '#/components/schemas/Role'\n        service:\n          $ref: '#/components/schemas/Service'\n    ServiceUpdateRequest:\n      type: object\n      properties:\n        op:\n          type: string\n          example: replace\n        path:\n          type: string\n          example: experimental_features_enabled\n        value:\n          type: string\n          example: \"false\"\n    StripeAgreement:\n      type: object\n      properties:\n        agreement_time:\n          type: string\n          format: date-time\n          example: 2022-04-09T16:01:56.82Z\n        ip_address:\n          type: string\n          example: 0.0.0.0\n    StripeAgreementRequest:\n      type: object\n      properties:\n        ip_address:\n          type: string\n          example: 0.0.0.0\n      required:\n      - ip_address\n    UpdateMerchantDetailsRequest:\n      type: object\n      properties:\n        address_city:\n          type: string\n          example: London\n        address_country:\n          type: string\n          example: GB\n        address_line1:\n          type: string\n          example: Address line 1\n        address_line2:\n          type: string\n          example: Address line 2\n        address_postcode:\n          type: string\n          example: E1 8XX\n        email:\n          type: string\n          example: email@example.com\n        name:\n          type: string\n          example: organisation name\n        telephone_number:\n          type: string\n          example: \"447700900000\"\n        url:\n          type: string\n          example: http://www.example.org\n      required:\n      - address_city\n      - address_country\n      - address_line1\n      - address_postcode\n      - name\n    User:\n      type: object\n      properties:\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n        disabled:\n          type: boolean\n          example: false\n        email:\n          type: string\n          example: user@somegovernmentdept.gov.uk\n        external_id:\n          type: string\n          example: 93ba1ec4ed6a4238a59f16ad97b4fa12\n        features:\n          type: string\n          example: \"feature1, feature2\"\n        last_logged_in_at:\n          type: string\n          format: date-time\n          example: 2022-04-06T23:03:41.665Z\n        login_counter:\n          type: integer\n          format: int32\n          example: 0\n        otp_key:\n          type: string\n          example: 43c3c4t\n        password:\n          type: string\n          writeOnly: true\n        provisional_otp_key:\n          type: string\n          example: FC5IHFH2CFSKEZBBXTYEGQXQOH344LLO\n        provisional_otp_key_created_at:\n          type: string\n          format: date-time\n        second_factor:\n          type: string\n          enum:\n          - sms\n          - app\n          example: SMS\n        service_roles:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceRole'\n        session_version:\n          type: integer\n          format: int32\n        telephone_number:\n          type: string\n          example: \"447700900000\"\n        username:\n          type: string\n          example: user@somegovernmentdept.gov.uk\n",
			"canonicalURL": "/github.com/alphagov/pay-adminusers@4e2f0306e545c1af60aedfc1cb43786ce03d5e5e/-/blob/openapi/adminusers_spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/alphagov/pay-adminusers/blob/4e2f0306e545c1af60aedfc1cb43786ce03d5e5e/openapi/adminusers_spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/api/invites/{code}/complete\": post: requestBody: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}