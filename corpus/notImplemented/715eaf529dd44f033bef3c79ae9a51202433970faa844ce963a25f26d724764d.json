{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ikuchmin/jmix-microservice"
		},
		"file": {
			"name": "gateway-service-api.yaml",
			"size": 0,
			"path": "gateway-service/gateway-service-api/config/gateway-service-api.yaml",
			"byteSize": 12761,
			"content": "openapi: 3.0.0\ninfo:\n  title: Gateway Service API\n  description: API for Gateway\n  version: 1.0.0\ntags:\n  - name: employee-controller\n    description: Employee Controller\n  - name: department-controller\n    description: Department Controller\n  - name: organization-controller\n    description: Organization Controller\npaths:\n  /employee/:\n    get:\n      tags:\n        - employee-controller\n      summary: Find all employees\n      operationId: findAllEmployees\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/EmployeeDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n    post:\n      tags:\n        - employee-controller\n      summary: Add employee\n      operationId: addEmployee\n      requestBody:\n        required: true\n        content: \n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmployeeDto'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeDto'\n        '201':\n          description: Created\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /employee/department/{departmentId}:\n    get:\n      tags:\n        - employee-controller\n      summary: Find employee by department\n      operationId: findEmployeeByDepartment\n      parameters:\n        - name: departmentId\n          in: path\n          description: departmentId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/EmployeeDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /employee/organization/{organizationId}:\n    get:\n      tags:\n        - employee-controller\n      summary: Find employee by organization\n      operationId: findEmployeeByOrganization\n      parameters:\n        - name: organizationId\n          in: path\n          description: organizationId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/EmployeeDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /employee/{id}:\n    get:\n      tags:\n        - employee-controller\n      summary: Find employee by Id\n      operationId: findEmployeeById\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /department/:\n    get:\n      tags:\n        - department-controller\n      summary: Dind all departments\n      operationId: findAllDepartments\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DepartmentDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n    post:\n      tags:\n        - department-controller\n      summary: Add department\n      operationId: addDepartment\n      requestBody:\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DepartmentDto'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DepartmentDto'\n        '201':\n          description: Created\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /department/organization/{organizationId}:\n    get:\n      tags:\n        - department-controller\n      summary: Find department by organization\n      operationId: findDepartmentByOrganization\n      parameters:\n        - name: organizationId\n          in: path\n          description: organizationId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DepartmentDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /department/organization/{organizationId}/with-employees:\n    get:\n      tags:\n        - department-controller\n      summary: Find department by organization Id with employees\n      operationId: findDepartmentByOrganizationWithEmployees\n      parameters:\n        - name: organizationId\n          in: path\n          description: organizationId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DepartmentDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /department/{id}:\n    get:\n      tags:\n        - department-controller\n      summary: Find department by Id\n      operationId: findDepartmentById\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DepartmentDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /organization/:\n    get:\n      tags:\n        - organization-controller\n      summary: Find all organizations\n      operationId: findAllOrganizations\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OrganizationDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n    post:\n      tags:\n        - organization-controller\n      summary: Add organization\n      operationId: addOrganization\n      requestBody:\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationDto'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationDto'\n        '201':\n          description: Created\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /organization/{id}:\n    get:\n      tags:\n        - organization-controller\n      summary: Find organization by Id\n      operationId: findOrganizationById\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /organization/{id}/with-departments:\n    get:\n      tags:\n        - organization-controller\n      summary: Find organization by Id with departments\n      operationId: findOrganizationByIdWithDepartments\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /organization/{id}/with-departments-and-employees:\n    get:\n      tags:\n        - organization-controller\n      summary: Find Organization by Id with departments and employees\n      operationId: findOrganizationByIdWithDepartmentsAndEmployees\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /organization/{id}/with-employees:\n    get:\n      tags:\n        - organization-controller\n      summary: Find organization by Id with employees\n      operationId: findOrganizationByIdWithEmployees\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    OpenID:\n      type: openIdConnect\n      openIdConnectUrl: http://localhost:8060/auth/realms/master/.well-known/openid-configuration\n\n  schemas:\n    EmployeeDto:\n      type: object\n      properties:\n        age:\n          type: integer\n          format: int32\n        departmentId:\n          type: integer\n          format: int64\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        organizationId:\n          type: integer\n          format: int64\n        position:\n          type: string\n      title: Employee\n    DepartmentDto:\n      type: object\n      properties:\n        employees:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmployeeDto'\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        organizationId:\n          type: integer\n          format: int64\n      title: Department\n    OrganizationDto:\n      type: object\n      properties:\n        address:\n          type: string\n        departments:\n          type: array\n          items:\n            $ref: '#/components/schemas/DepartmentDto'\n        employees:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmployeeDto'\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      title: Organization\nsecurity:\n  - BearerAuth: []\n  - OpenID: []",
			"canonicalURL": "/github.com/ikuchmin/jmix-microservice@90b9662a2369660d1561c20a4e16c87e2ac2a1f4/-/blob/gateway-service/gateway-service-api/config/gateway-service-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ikuchmin/jmix-microservice/blob/90b9662a2369660d1561c20a4e16c87e2ac2a1f4/gateway-service/gateway-service-api/config/gateway-service-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/organization/\": get: security: security \"OpenID\" (index 1): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}