{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mmolenda/missalemeum"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 17234,
			"content": "openapi: 3.0.0\ninfo:\n  title: \"Missale Meum API.\"\n  description: Missale Meum API provides access to the liturgical calendar calculated for any year and for the propers texts for any day, according to 1962 missal.\n  version: \"3.0\"\n  contact:\n    email: \"marcin@missalemeum.com\"\n  license:\n    name: \"Apache 2.0\"\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\nservers:\n  - url: https://www.missalemeum.com/\n    description: \"Production server.\"\npaths:\n  /{lang}/api/v3/calendar:\n    get:\n      tags:\n      - \"Calendar\"\n      summary: \"Get current calendar\"\n      description: \"Get liturgical calendar according to the 1962 missal for the current year. It contains all the feasts, commemorations, etc.\"\n      operationId: \"getCalendarCurrent\"\n      parameters:\n      - $ref: '#/components/parameters/langParam'\n      responses:\n        \"404\":\n          description: \"Not Found\"\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CalendarApiResponse\"\n              examples:\n                'default':\n                  $ref: \"#/components/examples/CalendarApiResponseExample\"\n  /{lang}/api/v3/calendar/{year}:\n    get:\n      tags:\n      - \"Calendar\"\n      summary: \"Get calendar for given year\"\n      description: \"Get liturgical calendar according to the 1962 missal for the selected year. It contains all the feasts, commemorations, etc.\"\n      operationId: \"getCalendar\"\n      parameters:\n      - $ref: '#/components/parameters/langParam'\n      - in: \"path\"\n        name: \"year\"\n        description: \"Year of the calendar. If not provided calendar for current year will be displayed.\"\n        required: true\n        schema:\n          type: \"number\"\n          example: 2022\n      responses:\n        \"404\":\n          description: \"Not Found\"\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CalendarApiResponse\"\n              examples:\n                'default':\n                  $ref: \"#/components/examples/CalendarApiResponseExample\"\n  /{lang}/api/v3/date/{date}:\n    get:\n      tags:\n      - \"Propers\"\n      summary: \"Get proper by date\"\n      description: \"Get proper for a given calendar day.\"\n      operationId: \"getProperByDate\"\n      parameters:\n      - $ref: '#/components/parameters/langParam'\n      - in: \"path\"\n        name: \"date\"\n        description: \"Calendar day to get the propers for.\"\n        required: true\n        schema:\n          type: \"string\"\n          example: \"2022-01-21\"\n      responses:\n        \"400\":\n          description: \"Incorrect date format\"\n        \"404\":\n          description: \"Not Found\"\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProperByDateApiResponse\"\n  /{lang}/api/v3/proper/{id}:\n    get:\n      tags:\n      - \"Propers\"\n      summary: \"Get proper by ID\"\n      description: \"Get proper for given observance by ID, regardless of its place in the calendar. ID can be found in the response from `/calendar` endpoint, e.g. `sancti:12-24:1:v` for Nativity Vigil or `tempora:Adv4-0:1:v` for fourth Sunday of Advent.\"\n      operationId: \"getProperById\"\n      parameters:\n      - $ref: '#/components/parameters/langParam'\n      - in: \"path\"\n        name: \"id\"\n        description: \"ID of the proper. For more details see the response body schema.\"\n        required: true\n        schema:\n          type: \"string\"\n          example: \"tempora:Adv4-0:1:v\"\n      responses:\n        \"404\":\n          description: \"Not Found\"\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProperByIdApiResponse\"\n  /{lang}/api/v3/ordo:\n    get:\n      tags:\n      - \"Ordo\"\n      summary: \"Get ordinary\"\n      description: \"Get invariable texts, or ordinary of the Mass\"\n      operationId: \"getOrdo\"\n      parameters:\n      - $ref: '#/components/parameters/langParam'\n      responses:\n        \"404\":\n          description: \"Not Found\"\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OrdoResponse\"\n  /{lang}/api/v3/supplement/{id}:\n    get:\n      tags:\n      - \"Supplement\"\n      summary: \"Get supplement's content\"\n      description: \"Get supplement's content\"\n      operationId: \"getSupplement\"\n      parameters:\n      - $ref: '#/components/parameters/langParam'\n      - in: \"path\"\n        name: \"id\"\n        description: \"ID of the supplement.\"\n        required: true\n        schema:\n          type: \"string\"\n          example: \"3-boze-narodzenie\"\n      responses:\n        \"404\":\n          description: \"Not Found\"\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SupplementResponse\"\n  /{lang}/api/v3/supplement/{path}/{id}:\n    get:\n      tags:\n      - \"Supplement\"\n      summary: \"Get supplement's content from subdir\"\n      description: \"Get supplement's content from subdir\"\n      operationId: \"getSupplementFromSubdir\"\n      parameters:\n      - $ref: '#/components/parameters/langParam'\n      - in: \"path\"\n        name: \"path\"\n        description: \"Name of the subdir\"\n        required: true\n        schema:\n          type: \"string\"\n          example: \"canticum\"\n      - in: \"path\"\n        name: \"id\"\n        description: \"ID of the supplement.\"\n        required: true\n        schema:\n          type: \"string\"\n          example: \"adoro-te\"\n      responses:\n        \"404\":\n          description: \"Not Found\"\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SupplementResponse\"\n  /{lang}/api/v3/version:\n    get:\n      tags:\n      - Miscellaneous\n      summary: Get API version\n      operationId: \"getVersion\"\n      parameters:\n      - $ref: '#/components/parameters/langParam'\n      responses:\n        \"404\":\n          description: \"Not Found\"\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  version:\n                    type: string\n                    example: v4.3.21\n  /{lang}/api/v3/icalendar:\n    get:\n      tags:\n      - Miscellaneous\n      summary: Get calendar in iCalendar format\n      description: Get the calendar in iCalendar format, which can be imported to any calendar software such as Google Calendar. This endpoint returns only feast with rank 1 and 2. For other ranks see `/{lang}/api/v3/icalendar/{rank}`.\n      operationId: \"getIcalendar\"\n      parameters:\n      - $ref: '#/components/parameters/langParam'\n      responses:\n        \"404\":\n          description: \"Not Found\"\n        \"200\":\n          description: \"OK\"\n          content:\n            text/calendar:\n              schema:\n                type: string\n              examples:\n                'default':\n                  $ref: \"#/components/examples/IcalendarApiReponseExample\"\n  /{lang}/api/v3/icalendar/{rank}:\n    get:\n      tags:\n      - Miscellaneous\n      summary: Get calendar in iCalendar format\n      description: Get the calendar in iCalendar format, which can be imported to any calendar software such as Google Calendar.\n      operationId: \"getIcalendarForRank\"\n      parameters:\n      - $ref: '#/components/parameters/langParam'\n      - in: \"path\"\n        name: \"rank\"\n        description: \"Only show the feasts of this rank and higher (e.g. rank 2 will show feast with rank 1 and 2).\"\n        required: true\n        schema:\n          type: \"string\"\n          example: \"2\"\n      responses:\n        \"404\":\n          description: \"Not Found\"\n        \"200\":\n          description: \"OK\"\n          content:\n            text/calendar:\n              schema:\n                type: string\n              examples:\n                'default':\n                  $ref: \"#/components/examples/IcalendarApiReponseExample\"\n\ncomponents:\n  parameters:\n    langParam:\n      in: \"path\"\n      name: \"lang\"\n      description: \"Language of the response.\"\n      required: true\n      schema:\n        type: \"string\"\n        enum: [ \"en\", \"pl\" ]\n  schemas:\n    Observance:\n      type: \"object\"\n      description: \"`Observance` object contains the details of a given feast.\"\n      properties:\n        id:\n          $ref: '#/components/schemas/IdField'\n        title:\n          $ref: '#/components/schemas/TitleField'\n        rank:\n          $ref: '#/components/schemas/RankField'\n        colors:\n          $ref: '#/components/schemas/ColorsField'\n    Proper:\n      type: \"object\"\n      description: \"Object representing a proper for a given feast.\"\n      properties:\n        info:\n          type: \"object\"\n          description: \"Proper info such as title, ID, etc.\"\n          properties:\n            id:\n              $ref: '#/components/schemas/IdField'\n            title:\n              $ref: '#/components/schemas/TitleField'\n            rank:\n              $ref: '#/components/schemas/RankField'\n            colors:\n              $ref: '#/components/schemas/ColorsField'\n            additional_info:\n              $ref: '#/components/schemas/AdditionalInfoField'\n            description:\n              type: string\n        sections:\n          $ref: '#/components/schemas/SectionsField'\n    ProperByDate:\n      type: \"object\"\n      description: \"Object representing a proper for a given feast falling on a given date.\"\n      properties:\n        info:\n          type: \"object\"\n          description: \"Proper info such as title, ID, etc.\"\n          properties:\n            id:\n              $ref: '#/components/schemas/IdField'\n            title:\n              $ref: '#/components/schemas/TitleField'\n            rank:\n              $ref: '#/components/schemas/RankField'\n            colors:\n              $ref: '#/components/schemas/ColorsField'\n            additional_info:\n              $ref: '#/components/schemas/AdditionalInfoField'\n            description:\n              type: string\n            date:\n              type: string\n              description: \"Calendar date for which the proper is generated. Format YYYY-MM-DD.\"\n              example: \"2022-01-23\"\n        sections:\n          $ref: '#/components/schemas/SectionsField'\n    CalendarApiResponse:\n      type: \"object\"\n      description: \"Each key of the response object is a date string representing one calendar day (format YYYY-MM-DD, e.g. 2022-01-21) and its value is another object containing details about the observances in the given day.\"\n      additionalProperties:\n        type: \"object\"\n        description: \"Each calendar day contains three arrays, each containing zero or more `Observance`s.\"\n        properties:\n          celebration:\n            type: \"array\"\n            description: \"`Observance` which is observed on a given day. Usually this array contains one object. It can have more if there is more than one proper for given observance, for instance on the first Christmas day. Also some Easter days have additional pre-55 proper in some languages and they're present as another `Observance` object here as well.\"\n            items:\n              $ref: '#/components/schemas/Observance'\n          commemoration:\n            type: \"array\"\n            description: \"`Observance` objects representing commemorations existing next to the main observance.\"\n            items:\n              $ref: '#/components/schemas/Observance'\n          tempora:\n            type: \"array\"\n            description: \"`Observance` object representing the place in current liturgical season. Might be empty if the celebration comes from tempora. For example on Jan 21 2022 the main celebration is st. Agnes, but according to the seasonal order, it is Friday after 2nd Sunday after Epiphany. It can contain zero or one object.\"\n            items:\n              $ref: '#/components/schemas/Observance'\n    ProperByDateApiResponse:\n      type: \"array\"\n      description: \"\"\n      items:\n        $ref: \"#/components/schemas/ProperByDate\"\n    ProperByIdApiResponse:\n      type: \"array\"\n      description: \"\"\n      items:\n        $ref: \"#/components/schemas/Proper\"\n    OrdoResponse:\n      type: array\n      description: Ordered array of objects representing sections of the Mass Ordinary.\n      items:\n        type: object\n        description: Each section contains a title in vernacular and a list of actual texts in both vernacular and Latin.\n        properties:\n          title:\n            type: string\n            description: Title of the section in vernacular language\n            example: Asperges\n          body:\n            type: array\n            description: One section can contain multiple subsections.\n            example:\n              - - \"On Sundays, the blessing of holy water and sprinkling with it may be carried out.\"\n              - - \"Thou shalt sprinkle me, O Lord, with hyssop, and I shall be cleansed...\"\n                - \"Aspérges me, Dómine, hyssópo, et mundábor...\"\n            items:\n              type: array\n              description: Each subsection is represented by an array, which can contain either one or two strings. One string is treated as a rubric. When there are two strings, the first one is vernacular text and the second one is the Latin one.\n              items:\n               type: string\n    SupplementResponse:\n      type: object\n      required:\n        - title\n        - body\n      properties:\n        title:\n          type: string\n          description: Title of the supplement\n          example: Adoro te\n        body:\n          type: string\n          description: Supplement's content in HTML format.\n          example: \"\u003cp\u003eADORO TE, devote, latens Deitas\u003c/p\u003e\"\n        tags:\n          type: array\n          description: List of plain text tags\n          items:\n            type: string\n          example:\n            - Eucharystyczne\n    IdField:\n      type: \"string\"\n      description: \"ID's structure reflects the files' structure in DivinumOfficium. It contains four components split by a colon. First two parts of the ID are parsed into the path of the source file, for example id tempora:Quadp3-3:1:v leads to the file divinum-officium/web/www/missa/English/Tempora/Quadp3-3.txt. Remaining components indicate rank and color. In this case 1 - first class and color v - violet.\"\n      example: \"tempora:Epi3-0:2:g\"\n    TitleField:\n      type: \"string\"\n      description: \"Human readable title of the feast.\"\n      example: \"III Sunday after Epiphany\"\n    RankField:\n      type: \"integer\"\n      description: \"Feast's class or rank.\"\n      enum: [1, 2, 3, 4]\n      example: 2\n    ColorsField:\n      type: \"array\"\n      description: \"Feast's color b - black, g - green, etc. One observation can have multiple colors. For instance Palm Sunday in post-55 has red (r) and violet (v) as the procession has different color than the Mass itself.\"\n      items:\n        type: \"string\"\n        enum: [\"b\", \"g\", \"r\", \"v\", \"w\"]\n        example: g\n    AdditionalInfoField:\n      description: \"List of additional informations such as liturgical color, station church, etc.\"\n      type: array\n      items:\n        type: string\n        example: Color green\n    SectionsField:\n      type: array\n      items:\n        type: object\n        description: Object representing one section from the propers, such as introit, collect, etc.\n        properties:\n          id:\n            type: string\n            description: Unique in the scope of one proper. It's simply a Latin name of the section\n            example: Oratio\n          label:\n            type: string\n            description: Name of the section in vernacular languange\n            example: Collect\n          body:\n            type: array\n            description: Body of the section can contain either one or two strings. One string is treated as a rubric. When there are two strings, the first one represents the text in vernacular and the second one - in Latin. Text is formatted using DivinumOfficium format, which is similar to Markdown, but with some differences.\n            items:\n              type: string\n              example:\n                - \"Almighty and everlasting God...\"\n                - \"Omnípotens sempitérne Deus...\"\n\n  examples:\n    CalendarApiResponseExample:\n      value:\n        '2022-01-21':\n          celebration:\n          - colors:\n            - r\n            id: sancti:01-21:3:r\n            rank: 3\n            title: St. Agnes\n          commemoration: []\n          tempora:\n          - colors:\n            - g\n            id: tempora:Epi2-5:4:g\n            rank: 4\n            title: Feria VI after II Sunday after Epiphany\n    IcalendarApiReponseExample:\n      value: |\n        BEGIN:VEVENT\n        SUMMARY:Vigil of Christmas\n        DTSTART;VALUE=DATE:20221224\n        DTSTAMP;VALUE=DATE-TIME:20220307T140546Z\n        UID:20221224@missalemeum.comDESCRIPTION:https://www.missalemeum.com/en/2022-12-24\n        END:VEVENT\n",
			"canonicalURL": "/github.com/mmolenda/missalemeum@cefaddd6f7abfc77ef349a2573f89937e5e859a8/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mmolenda/missalemeum/blob/cefaddd6f7abfc77ef349a2573f89937e5e859a8/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/{lang}/api/v3/icalendar\": get: responses: 200: contents: unsupported content types: [text/calendar]",
	"NotImplemented": [
		"unsupported content types"
	]
}