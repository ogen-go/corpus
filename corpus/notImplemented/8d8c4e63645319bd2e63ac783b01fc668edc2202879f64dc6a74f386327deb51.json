{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bm-metamorph/MetaMorph"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "tmp/go-redfish-api-wrapper/api/openapi.yaml",
			"byteSize": 40544,
			"content": "openapi: 3.0.2\ninfo:\n  title: Redfish OAPI specification\n  description: 'Partial Redfish OAPI specification for a limited client'\n  version: 0.0.1\ncomponents:\n  schemas:\n    BootSource:\n      type: string\n      enum:\n      - None\n      - Pxe\n      - Floppy\n      - Cd\n      - Usb\n      - Hdd\n      - BiosSetup\n      - Utilities\n      - Diags\n      - UefiShell\n      - UefiTarget\n      - SDCard\n      - UefiHttp\n      - RemoteDrive\n      - UefiBootNext\n    BootSourceOverrideEnabled:\n      type: string\n      enum:\n      - Once\n      - Continuous\n    State:\n      type: string\n      enum:\n      - Enabled\n      - Disabled\n      - StandbyOffline\n      - StandbySpare\n      - InTest\n      - Starting\n      - Absent\n      - UnavailableOffline\n      - Deferring\n      - Quiesced\n      - Updating\n    Health:\n      type: string\n      enum:\n      - OK\n      - Warning\n      - Critical\n    PowerState:\n      type: string\n      enum:\n      - \"On\"\n      - \"Off\"\n      - PoweringOn\n      - PoweringOff\n    ResetType:\n      type: string\n      enum:\n      - \"On\"\n      - ForceOff\n      - GracefulShutdown\n      - GracefulRestart\n      - ForceRestart\n      - Nmi\n      - ForceOn\n      - PushPowerButton\n      - PowerCycle\n    IndicatorLED:\n      type: string\n      enum:\n      - Unknown\n      - Lit\n      - Blinking\n      - \"Off\"\n    ManagerType:\n      enum:\n      - ManagementController\n      - EnclosureManager\n      - BMC\n      - RackManager\n      - AuxiliaryController\n      - Service\n      type: string\n    ConnectedVia:\n      enum:\n      - NotConnected\n      - URI\n      - Applet\n      - Oem\n      type: string\n    TransferMethod:\n      enum:\n      - Stream\n      - Upload\n      type: string\n    TransferProtocolType:\n      enum:\n      - CIFS\n      - FTP\n      - SFTP\n      - HTTP\n      - HTTPS\n      - NFS\n      - SCP\n      - TFTP\n      type: string\n    context:\n      description: The OData description of a payload.\n      format: uri-reference\n      readOnly: true\n      type: string\n    count:\n      description: The number of items in a collection.\n      readOnly: true\n      type: integer\n    name:\n      description: The name of the resource.\n      readOnly: true\n      type: string\n    etag:\n      description: The current ETag of the resource.\n      readOnly: true\n      type: string\n    id:\n      description: The name of the resource.\n      readOnly: true\n      type: string\n    odataId:\n      description: The unique identifier for a resource.\n      format: uri-reference\n      readOnly: true\n      type: string\n    idRef:\n      additionalProperties: false\n      description: A reference to a resource.\n      properties:\n        '@odata.id':\n          $ref: '#/components/schemas/odataId'\n      type: object\n    nextLink:\n      description: The URI to the resource containing the next set of partial members.\n      format: uri-reference\n      readOnly: true\n      type: string\n    rtype:\n      description: The type of a resource.\n      readOnly: true\n      type: string\n    UUID:\n      pattern: ([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})\n      type: string\n    Message:\n      additionalProperties: false\n      properties:\n        Message:\n          readOnly: true\n          type: string\n        MessageArgs:\n          items:\n            type: string\n          readOnly: true\n          type: array\n        MessageId:\n          readOnly: true\n          type: string\n        RelatedProperties:\n          items:\n            type: string\n          readOnly: true\n          type: array\n        Resolution:\n          readOnly: true\n          type: string\n        Severity:\n          readOnly: true\n          type: string\n      required:\n      - MessageId\n      type: object\n    RedfishError:\n      description: Contains an error payload from a Redfish Service.\n      properties:\n        error:\n          properties:\n            '@Message.ExtendedInfo':\n              items:\n                $ref: '#/components/schemas/Message'\n              type: array\n            code:\n              readOnly: true\n              type: string\n            message:\n              readOnly: true\n              type: string\n          required:\n          - code\n          - message\n          type: object\n      required:\n      - error\n      type: object\n    Root:\n      type: object\n      additionalProperties: false\n      description: Root redfish path.\n      required:\n      - '@odata.id'\n      - '@odata.type'\n      - 'Name'\n      properties:\n        'Id':\n          $ref: '#/components/schemas/id'\n        'Name':\n          $ref: '#/components/schemas/name'\n        'RedfishVersion':\n          type: string\n          description: redfish version\n        'UUID':\n          $ref: '#/components/schemas/UUID'\n        '@odata.type':\n          $ref: '#/components/schemas/rtype'\n        '@odata.id':\n          $ref: '#/components/schemas/odataId'\n        '@Redfish.Copyright':\n          type: string\n          description: redfish copyright\n        'Systems':\n          $ref: '#/components/schemas/idRef'\n        'Managers':\n          $ref: '#/components/schemas/idRef'\n    Collection:\n      type: object\n      additionalProperties: false\n      description: A Collection of ComputerSystem resource instances.\n      required:\n      - 'Members'\n      - '@odata.id'\n      - '@odata.type'\n      - 'Name'\n      properties:\n        '@odata.context':\n          type: string\n          description: context\n        '@odata.etag':\n          type: string\n          description: etag\n        '@odata.id':\n          type: string\n          description: id\n        '@odata.type':\n          type: string\n          description: type\n        'Description':\n          type: string\n          description: \"description\"\n          nullable: true\n          readOnly: true\n        'Members':\n          description: Contains the members of this collection.\n          items:\n            $ref: '#/components/schemas/idRef'\n          readOnly: true\n          type: array\n        'Members@odata.count':\n          $ref: '#/components/schemas/count'\n        'Members@odata.nextLink':\n          $ref: '#/components/schemas/nextLink'\n        'Name':\n          $ref: '#/components/schemas/name'\n          readOnly: true\n    Status:\n      type: object\n      additionalProperties: false\n      properties:\n        Health:\n          $ref: '#/components/schemas/Health'\n          nullable: true\n          readOnly: true\n        HealthRollup:\n          $ref: '#/components/schemas/Health'\n          nullable: true\n          readOnly: true\n        State:\n          $ref: '#/components/schemas/State'\n          nullable: true\n          readOnly: true\n    Boot:\n      type: object\n      additionalProperties: false\n      properties:\n        BootSourceOverrideEnabled:\n          $ref: '#/components/schemas/BootSourceOverrideEnabled'\n        BootSourceOverrideTarget:\n          $ref: '#/components/schemas/BootSource'\n        BootSourceOverrideTarget@Redfish.AllowableValues:\n          type: array\n          items:\n            $ref: '#/components/schemas/BootSource'\n    ProcessorSummary:\n      type: object\n      additionalProperties: false\n      properties:\n        Count:\n          minimum: 0\n          nullable: true\n          readOnly: true\n          type: integer\n        Status:\n          $ref: '#/components/schemas/Status'\n    MemorySummary:\n      type: object\n      additionalProperties: false\n      properties:\n        TotalSystemMemoryGiB:\n          minimum: 0\n          nullable: true\n          readOnly: true\n          type: number\n        TotalSystemPersistentMemoryGiB:\n          minimum: 0\n          nullable: true\n          readOnly: true\n          type: number\n        Status:\n          $ref: '#/components/schemas/Status'\n    SystemLinks:\n      type: object\n      additionalProperties: false\n      properties:\n        Chassis:\n          type: array\n          items:\n            $ref: '#/components/schemas/idRef'\n        ManagedBy:\n          type: array\n          items:\n            $ref: '#/components/schemas/idRef'\n    ManagerLinks:\n      type: object\n      additionalProperties: false\n      properties:\n        ManagerForServers:\n          type: array\n          items:\n            $ref: '#/components/schemas/idRef'\n        ManagerForChassis:\n          type: array\n          items:\n            $ref: '#/components/schemas/idRef'\n        ManagerForSwitches:\n          type: array\n          items:\n            $ref: '#/components/schemas/idRef'\n        ManagerInChassis:\n          type: array\n          items:\n            $ref: '#/components/schemas/idRef'\n    ComputerSystemReset:\n      type: object\n      additionalProperties: false\n      properties:\n        target:\n          $ref: '#/components/schemas/odataId'\n        ResetType@Redfish.AllowableValues:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResetType'\n    ResetRequestBody:\n      additionalProperties: false\n      properties:\n        ResetType:\n          $ref: '#/components/schemas/ResetType'\n      type: object\n    ComputerSystem:\n      type: object\n      additionalProperties: false\n      description: Root redfish path.\n      required:\n      - '@odata.id'\n      - '@odata.type'\n      - 'Name'\n      properties:\n        'Id':\n          $ref: '#/components/schemas/id'\n        'Name':\n          $ref: '#/components/schemas/name'\n        'RedfishVersion':\n          type: string\n          description: redfish version\n        'UUID':\n          $ref: '#/components/schemas/UUID'\n        '@odata.type':\n          $ref: '#/components/schemas/rtype'\n        '@odata.id':\n          $ref: '#/components/schemas/odataId'\n        '@odata.context':\n          $ref: '#/components/schemas/context'\n        '@Redfish.Copyright':\n          type: string\n          description: redfish copyright\n        'Bios':\n          $ref: '#/components/schemas/idRef'\n        'Processors':\n          $ref: '#/components/schemas/idRef'\n        'Memory':\n          $ref: '#/components/schemas/idRef'\n        'EthernetInterfaces':\n          $ref: '#/components/schemas/idRef'\n        'SimpleStorage':\n          $ref: '#/components/schemas/idRef'\n        'PowerState':\n          $ref: '#/components/schemas/PowerState'\n        'Status':\n          $ref: '#/components/schemas/Status'\n        'Boot':\n          $ref: '#/components/schemas/Boot'\n        'ProcessorSummary':\n          $ref: '#/components/schemas/ProcessorSummary'\n        'MemorySummary':\n          $ref: '#/components/schemas/MemorySummary'\n        'IndicatorLED':\n          $ref: '#/components/schemas/IndicatorLED'\n        'Links':\n          $ref: '#/components/schemas/SystemLinks'\n        'Actions':\n          type: object\n          properties:\n            \"#ComputerSystem.Reset\":\n              $ref: '#/components/schemas/ComputerSystemReset'\n    Manager:\n      type: object\n      additionalProperties: false\n      description: Redfish manager resource.\n      required:\n      - '@odata.id'\n      - '@odata.type'\n      - 'Name'\n      properties:\n        'Id':\n          $ref: '#/components/schemas/id'\n        'Name':\n          $ref: '#/components/schemas/name'\n        'UUID':\n          $ref: '#/components/schemas/UUID'\n        'ServiceEntryPointUUID':\n          $ref: '#/components/schemas/UUID'\n        '@odata.type':\n          $ref: '#/components/schemas/rtype'\n        '@odata.id':\n          $ref: '#/components/schemas/odataId'\n        '@odata.context':\n          $ref: '#/components/schemas/context'\n        '@Redfish.Copyright':\n          type: string\n          description: redfish copyright\n        'Model':\n          nullable: true\n          readOnly: true\n          type: string\n        'ManagerType':\n          $ref: '#/components/schemas/ManagerType'\n          readOnly: true\n        'Status':\n          $ref: '#/components/schemas/Status'\n        'DateTime':\n          #format: date-time\n          format: string\n          nullable: true\n          readOnly: false\n          type: string\n        'DateTimeLocalOffset':\n          description: 'The time offset from UTC that the DateTime property is set\n            to in format: +06:00 .'\n          nullable: true\n          pattern: ([-+][0-1][0-9]:[0-5][0-9])\n          readOnly: false\n          type: string\n        'Description':\n          type: string\n          description: \"description\"\n          nullable: true\n          readOnly: true\n        'EthernetInterfaces':\n          $ref: '#/components/schemas/idRef'\n          readOnly: true\n        'FirmwareVersion':\n          nullable: true\n          readOnly: true\n          type: string\n        'Links':\n          $ref: '#/components/schemas/ManagerLinks'\n        'PowerState':\n          $ref: '#/components/schemas/PowerState'\n        'VirtualMedia':\n          $ref: '#/components/schemas/idRef'\n          readOnly: true\n\n    VirtualMedia:\n      type: object\n      additionalProperties: false\n      description: Redfish virtual media resource for manager.\n      required:\n      - '@odata.id'\n      - '@odata.type'\n      - 'Name'\n      properties:\n        'Id':\n          $ref: '#/components/schemas/id'\n        'Name':\n          $ref: '#/components/schemas/name'\n        '@odata.type':\n          $ref: '#/components/schemas/rtype'\n        '@odata.id':\n          $ref: '#/components/schemas/odataId'\n        '@odata.context':\n          $ref: '#/components/schemas/context'\n        '@Redfish.Copyright':\n          type: string\n          description: redfish copyright\n        'Description':\n          type: string\n          description: \"description\"\n          nullable: true\n          readOnly: true\n        'Image':\n          format: uri-reference\n          nullable: true\n          readOnly: false\n          type: string\n        'ImageName':\n          nullable: true\n          readOnly: true\n          type: string\n        'Inserted':\n          nullable: true\n          readOnly: false\n          type: boolean\n        'ConnectedVia':\n          $ref: '#/components/schemas/ConnectedVia'\n          nullable: true\n          readOnly: true\n        'MediaTypes':\n          items:\n            type: string\n          readOnly: true\n          type: array\n        'WriteProtected':\n          nullable: true\n          readOnly: false\n          type: boolean\n        'UserName':\n          nullable: true\n          readOnly: false\n          type: string\n        'Password':\n          nullable: true\n          readOnly: false\n          type: string\n        'TransferMethod':\n          $ref: '#/components/schemas/TransferMethod'\n          nullable: true\n          readOnly: false\n        'TransferProtocolType':\n          $ref: '#/components/schemas/TransferProtocolType'\n          nullable: true\n          readOnly: false\n        'Actions':\n          type: object\n          additionalProperties: false\n          properties:\n            '#VirtualMedia.EjectMedia':\n              type: object\n              properties:\n                'target':\n                  $ref: '#/components/schemas/odataId'\n            '#VirtualMedia.InsertMedia':\n              type: object\n              properties:\n                'target':\n                  $ref: '#/components/schemas/odataId'\n    InsertMediaRequestBody:\n      additionalProperties: false\n      properties:\n        Image:\n          type: string\n        Inserted:\n          type: boolean\n        Password:\n          type: string\n        TransferMethod:\n          $ref: '#/components/schemas/TransferMethod'\n        TransferProtocolType:\n          $ref: '#/components/schemas/TransferProtocolType'\n        UserName:\n          type: string\n        WriteProtected:\n          type: boolean\n      required:\n      - Image\n      type: object\n    EjectMediaRequestBody:\n      additionalProperties: false\n      properties: {}\n      type: object\n    FirmwareInventory:\n      type: object\n      properties:\n        '@odata.id':\n          $ref: '#/components/schemas/odataId'\n    UpdateService:\n      type: object\n      additionalProperties: false\n      description: Redfish Update Service.\n      required:\n      - '@odata.id'\n      - '@odata.type'\n      - 'Name'\n      properties:\n        'FirmwareInventory':\n          $ref: '#/components/schemas/FirmwareInventory'\n        'Id':\n          $ref: '#/components/schemas/id'\n        'Name':\n          $ref: '#/components/schemas/name'\n        '@odata.type':\n          $ref: '#/components/schemas/rtype'\n        '@odata.id':\n          $ref: '#/components/schemas/odataId'\n        '@odata.context':\n          $ref: '#/components/schemas/context'\n        'Description':\n          type: string\n          description: \"description\"\n          nullable: true\n          readOnly: true\n        'HttpPushUri':\n          format: uri-reference\n          readOnly: true\n          type: string\n        'ServiceEnabled':\n          nullable: true\n          readOnly: false\n          type: boolean\n        'Actions':\n          type: object\n          additionalProperties: false\n          properties:\n            '#UpdateService.SimpleUpdate':\n              type: object\n              properties:\n                'target':\n                  $ref: '#/components/schemas/odataId'\n            '#UpdateService.StartUpdate':\n              type: object\n              properties:\n                'target':\n                  $ref: '#/components/schemas/odataId'\n    SimpleUpdateRequestBody:\n      additionalProperties: false\n      properties:\n        ImageURI:\n          format: uri-reference\n          type: string\n        Targets:\n          type: array\n          items:\n            type: string\n        TransferProtocolType:\n          $ref: '#/components/schemas/TransferProtocolType'\n      required:\n      - ImageURI\n      type: object\n    Payload:\n      additionalProperties: false\n      description: The HTTP and JSON payload details for this Task.\n      properties:\n        HttpHeaders:\n          description: This represents the HTTP headers used in the operation of this\n            Task.\n          items:\n            type: string\n          readOnly: true\n          type: array\n          x-longDescription: The value of this property shall be an array of HTTP\n            headers used in the execution of this Task.\n        HttpOperation:\n          description: The HTTP operation to perform to execute this Task.\n          readOnly: true\n          type: string\n          x-longDescription: This property shall contain the HTTP operation to execute\n            for this Task.\n        JsonBody:\n          description: This property contains the JSON payload to use in the execution\n            of this Task.\n          readOnly: true\n          type: string\n          x-longDescription: The value of this property shall be JSON formatted payload\n            used for this Task.\n        TargetUri:\n          description: The URI of the target for this task.\n          format: uri\n          readOnly: true\n          type: string\n          x-longDescription: This property shall contain a URI referencing a location\n            to be used as the target for an HTTP operation.\n      type: object\n      x-longDescription: This object shall contain information detailing the HTTP\n        and JSON payload information for executing this Task.\n      x-patternProperties:\n        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$:\n          description: This property shall specify a valid odata or Redfish property.\n    TaskState:\n      enum:\n      - New\n      - Starting\n      - Running\n      - Suspended\n      - Interrupted\n      - Pending\n      - Stopping\n      - Completed\n      - Killed\n      - Exception\n      - Service\n      - Cancelling\n      - Cancelled\n      type: string\n      x-enumDeprecated:\n        Killed: This value has been deprecated and is being replaced by the value\n          Cancelled which has more determinate semantics.\n      x-enumDescriptions:\n        Cancelled: Task has been cancelled by an operator or internal process.\n        Cancelling: Task is in the process of being cancelled.\n        Completed: Task has completed.\n        Exception: Task has stopped due to an exception condition.\n        Interrupted: Task has been interrupted.\n        Killed: Task was terminated.\n        New: A new task.\n        Pending: Task is pending and has not started.\n        Running: Task is running normally.\n        Service: Task is running as a service.\n        Starting: Task is starting.\n        Stopping: Task is in the process of stopping.\n        Suspended: Task has been suspended.\n      x-enumLongDescriptions:\n        Cancelled: This value shall represent that the operation was cancelled either\n          through a Delete on a Task Monitor or Task Resource or by an internal process.\n        Cancelling: This value shall represent that the operation is in the process\n          of being cancelled.\n        Completed: This value shall represent that the operation is complete and completed\n          sucessfully or with warnings.\n        Exception: This value shall represent that the operation is complete and completed\n          with errors.\n        Interrupted: This value shall represent that the operation has been interrupted\n          but is expected to restart and is therefore not complete.\n        Killed: This value shall represent that the operation is complete because\n          the task was killed by an operator.\n        New: This value shall represent that this task is newly created but the operation\n          has not yet started.\n        Pending: This value shall represent that the operation is pending some condition\n          and has not yet begun to execute.\n        Running: This value shall represent that the operation is executing.\n        Service: This value shall represent that the operation is now running as a\n          service and expected to continue operation until stopped or killed.\n        Starting: This value shall represent that the operation is starting.\n        Stopping: This value shall represent that the operation is stopping but is\n          not yet complete.\n        Suspended: This value shall represent that the operation has been suspended\n          but is expected to restart and is therefore not complete.\n    Task:\n      additionalProperties: false\n      description: This resource contains information about a specific Task scheduled\n        by or being executed by a Redfish service's Task Service.\n      properties:\n        '@odata.context':\n          $ref: '#/components/schemas/context'\n        '@odata.etag':\n          $ref: '#/components/schemas/etag'\n        '@odata.id':\n          $ref: '#/components/schemas/id'\n        '@odata.type':\n          $ref: '#/components/schemas/rtype'\n        'Description':\n          type: string\n          description: \"description\"\n          nullable: true\n          readOnly: true\n        'EndTime':\n          description: The date-time stamp that the task was last completed.\n          format: date-time\n          readOnly: true\n          type: string\n          x-longDescription: The value of this property shall indicate the time the\n            task was completed.\n        'HidePayload':\n          description: Indicates that the contents of the Payload should be hidden\n            from view after the Task has been created.  When set to True, the Payload\n            object will not be returned on GET.\n          readOnly: true\n          type: boolean\n          x-longDescription: This property shall be set to True if the Payload object\n            shall not be returned on GET operations, and set to False if the contents\n            can be returned normally. If this property is not specified when the Task\n            is created, the default value shall be False.\n        'Id':\n          $ref: '#/components/schemas/id'\n          readOnly: true\n        'Messages':\n          description: This is an array of messages associated with the task.\n          items:\n            $ref: '#/components/schemas/Message'\n          type: array\n          x-longDescription: The value of this property shall be an array of messages\n            associated with the task.\n        'Name':\n          $ref: '#/components/schemas/name'\n          readOnly: true\n        'Oem':\n          type: string\n          description: This is the manufacturer/provider specific extension moniker\n            used to divide the Oem object into sections.\n          x-longDescription: The value of this string shall be of the format for the\n            reserved word *Oem*.\n        'Payload':\n          $ref: '#/components/schemas/Payload'\n          description: The HTTP and JSON payload details for this task.\n          x-longDescription: This object shall contain information detailing the HTTP\n            and JSON payload information for executing this task. This object shall\n            not be included in the response if the HidePayload property is set to\n            True.\n        'StartTime':\n          description: The date-time stamp that the task was last started.\n          format: date-time\n          readOnly: true\n          type: string\n          x-longDescription: The value of this property shall indicate the time the\n            task was started.\n        'TaskMonitor':\n          description: The URI of the Task Monitor for this task.\n          format: uri\n          readOnly: true\n          type: string\n          x-longDescription: This property shall contain a URI to Task Monitor as\n            defined in the Redfish Specification.\n        'TaskState':\n          $ref: '#/components/schemas/TaskState'\n          description: The state of the task.\n          readOnly: true\n          x-longDescription: The value of this property shall indicate the state of\n            the task.  New shall be used to indicate that the task is a new task which\n            has just been instantiated and is in the initial state and indicates it\n            has never been started.  Starting shall be used to indicate that the task\n            is moving from the New, Suspended, or Service states into the Running\n            state.  Running shall be used to indicate that the Task is running.  Suspended\n            shall be used to indicate  that the Task is stopped (e.g., by a user),\n            but can be restarted in a seamless manner.  Interrupted shall be used\n            to indicate  that the Task was interrupted (e.g., by a server crash) in\n            the middle of processing, and the user should either re-run/restart the\n            Task.  Pending shall be used to indicate  that the Task has been queued\n            and will be scheduled for processing as soon as resources are available\n            to handle the request.  Stopping shall be used to indicate that the Task\n            is in the process of moving to a Completed, Killed, or Exception state.  Completed\n            shall be used to indicate that the task has completed normally.  Killed\n            shall be used to indicate  that the task has been stopped by a Kill state\n            change request (non-graceful shutdown).  Exception shall be used to indicate  that\n            the Task is in an abnormal state that might be indicative of an error\n            condition.  Service shall be used to indicate that the Task is in a state\n            that supports problem discovery, or resolution, or both.  This state is\n            used when a corrective action is possible.\n        'TaskStatus':\n          $ref: '#/components/schemas/Health'\n          description: This is the completion status of the task.\n          readOnly: true\n          x-longDescription: The value of this property shall be the completion status\n            of the task, as defined in the Status section of the Redfish specification\n            and shall not be set until the task has completed.\n      required:\n      - '@odata.id'\n      - '@odata.type'\n      - Id\n      - Name\n      type: object\n      x-longDescription: This resource shall be used to represent a task for a Redfish\n        implementation.\n      x-patternProperties:\n        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$:\n          description: This property shall specify a valid odata or Redfish property.\n    DriveIDref:\n      type: object\n      additionalProperties:\n          $ref: '#/components/schemas/idRef'\n    CreateVirtualDiskRequestBody:\n      additionalProperties: false\n      properties:\n        VolumeType:\n          type: string\n        Name:\n          type: string\n        Drives:\n          type: array\n          items:\n            $ref: '#/components/schemas/idRef'\n      required:\n      - Drives\n      - Name\n      - VolumeType\n      type: object\npaths:\n  /redfish/v1:\n    get:\n      operationId: get_root\n      responses:\n        '200':\n          description: Get redfish root\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/Root'\n  /redfish/v1/Systems:\n    get:\n      operationId: list_systems\n      responses:\n        '200':\n          description: Computer Systems List\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/Collection'\n  /redfish/v1/Systems/{systemId}:\n    get:\n      operationId: get_system\n      responses:\n        '200':\n          description: Computer Systems List\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ComputerSystem'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n          description: Error condition\n    patch:\n      operationId: set_system\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ComputerSystem'\n        required: true\n      responses:\n        '200':\n          description: ComputerSystem Properties set successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComputerSystem'\n        '204':\n          description: Success, but no response data\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n          description: Error condition\n    parameters:\n    - name: systemId\n      in: path\n      description: ID of resource\n      required: true\n      schema:\n        type: string\n  /redfish/v1/Systems/{ComputerSystemId}/Actions/ComputerSystem.Reset:\n    parameters:\n    - in: path\n      name: ComputerSystemId\n      required: true\n      schema:\n        type: string\n    post:\n      operationId: reset_system\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResetRequestBody'\n        required: true\n      responses:\n        '200':\n          description: Success with response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n        '204':\n          description: Success, but no response data\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n          description: Error condition\n  /redfish/v1/Managers:\n    get:\n      operationId: list_managers\n      responses:\n        '200':\n          description: Managers List\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/Collection'\n  /redfish/v1/Managers/{managerId}:\n    get:\n      operationId: get_manager\n      responses:\n        '200':\n          description: Get Manager\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/Manager'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n          description: Error condition\n\n    parameters:\n    - name: managerId\n      in: path\n      description: ID of resource\n      required: true\n      schema:\n        type: string\n  /redfish/v1/Managers/{managerId}/VirtualMedia:\n    get:\n      operationId: list_manager_virtual_media\n      responses:\n        '200':\n          description: \"Get a list of Manager's virtual media\"\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/Collection'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n          description: Error condition\n\n    parameters:\n    - name: managerId\n      in: path\n      description: ID of resource\n      required: true\n      schema:\n        type: string\n  /redfish/v1/Managers/{managerId}/VirtualMedia/{virtualMediaId}:\n    get:\n      operationId: get_manager_virtual_media\n      responses:\n        '200':\n          description: \"Get a list of Manager's virtual media\"\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/VirtualMedia'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n          description: Error condition\n\n    parameters:\n    - name: managerId\n      in: path\n      description: ID of resource\n      required: true\n      schema:\n        type: string\n    - name: virtualMediaId\n      in: path\n      description: ID of resource\n      required: true\n      schema:\n        type: string\n  /redfish/v1/Managers/{managerId}/VirtualMedia/{virtualMediaId}/Actions/VirtualMedia.InsertMedia:\n    post:\n      operationId: insert_virtual_media\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InsertMediaRequestBody'\n        required: true\n      responses:\n        '200':\n          description: \"Insert virtual media\"\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n          description: Error condition\n    parameters:\n    - name: managerId\n      in: path\n      description: ID of resource\n      required: true\n      schema:\n        type: string\n    - name: virtualMediaId\n      in: path\n      description: ID of resource\n      required: true\n      schema:\n        type: string\n  /redfish/v1/Managers/{managerId}/VirtualMedia/{virtualMediaId}/Actions/VirtualMedia.EjectMedia:\n    post:\n      operationId: eject_virtual_media\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EjectMediaRequestBody'\n        required: true\n      responses:\n        '200':\n          description: \"Insert virtual media\"\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n          description: Error condition\n    parameters:\n    - name: managerId\n      in: path\n      description: ID of resource\n      required: true\n      schema:\n        type: string\n    - name: virtualMediaId\n      in: path\n      description: ID of resource\n      required: true\n      schema:\n        type: string\n  /redfish/v1/UpdateService:\n    get:\n      operationId: Update_Service\n      responses:\n        '200':\n          description: Update Service\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/UpdateService'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n          description: Error condition\n  /redfish/v1/UpdateService/Actions/UpdateService.SimpleUpdate:\n    post:\n      operationId: UpdateService_Simple_Update\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SimpleUpdateRequestBody'\n        required: true\n      responses:\n        '200':\n          description: \"Update Service Simple Update\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n          description: Error condition\n  /redfish/v1/UpdateService/FirmwareInventory:\n    get:\n      operationId: Firmware_Inventory\n      responses:\n        '200':\n          description: Collection of Firmware Inventory\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/Collection'\n    post:\n      operationId: FirmwareInventory_Download_Image\n      requestBody:\n        content:\n          multipart/formdata:\n            schema:\n              type: object\n              properties:\n                 softwareImage:\n                    type: string\n                    format: binary\n            encoding:\n              softwareImage:\n                 contentType: application/octet-stream\n        required: true\n      responses:\n        '200':\n          description: \"Update Service Simple Update\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n          description: Error condition\n  /redfish/v1/TaskService/Tasks/{taskId}:\n    get:\n      operationId: get_task\n      responses:\n        '200':\n          description: \"Get details of a Task\"\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/Task'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n          description: Error condition\n    parameters:\n    - name: taskId\n      in: path\n      description: Task ID\n      required: true\n      schema:\n        type: string\n  /redfish/v1/Systems/{ComputerSystemId}/Storage/{StorageControllerId}/Volumes:\n    get:\n      operationId: get_volumes\n      responses:\n        '200':\n          description: \"Get Volumes of given Storage Controller\"\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/Collection'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n          description: Error condition\n    post:\n      operationId: create_virtual_disk\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateVirtualDiskRequestBody'\n        required: true\n      responses:\n        '200':\n          description: \"Create Virual Disk Update\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n          description: Error condition\n    parameters:\n    - name: ComputerSystemId\n      in: path\n      description: System ID\n      required: true\n      schema:\n        type: string\n    - name: StorageControllerId\n      in: path\n      description: Storage Controller ID\n      required: true\n      schema:\n        type: string\n  /redfish/v1/Systems/{ComputerSystemId}/Storage/Volumes/{StorageId}:\n    delete:\n      operationId: delete_virtualdisk\n      responses:\n        '200':\n          description: \"Delete virtual Disk\"\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedfishError'\n          description: Error condition\n    parameters:\n    - name: ComputerSystemId\n      in: path\n      description: System ID\n      required: true\n      schema:\n        type: string\n    - name: StorageId\n      in: path\n      description: Storage ID\n      required: true\n      schema:\n        type: string \n      allowReserved: true\n",
			"canonicalURL": "/github.com/bm-metamorph/MetaMorph@0ab21bcb979f6ba271f30e8d1b7959ce4f21bf4c/-/blob/tmp/go-redfish-api-wrapper/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bm-metamorph/MetaMorph/blob/0ab21bcb979f6ba271f30e8d1b7959ce4f21bf4c/tmp/go-redfish-api-wrapper/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/redfish/v1/UpdateService/FirmwareInventory\": post: requestBody: contents: unsupported content types: [multipart/formdata]",
	"NotImplemented": [
		"unsupported content types"
	]
}