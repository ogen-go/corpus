{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-spanner-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-spanner-v1-swagger.yaml",
			"byteSize": 151238,
			"content": "openapi: 3.0.0\nx-hasEquivalentPaths: true\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  description: Cloud Spanner is a managed, mission-critical, globally consistent and\n    scalable relational database service.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Cloud Spanner\n  version: v1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n    - backend\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: google\n      url: https://spanner.googleapis.com/$discovery/rest?version=v1\n      version: v1\n  x-preferred: true\n  x-providerName: googleapis.com\n  x-serviceName: spanner\nexternalDocs:\n  url: https://cloud.google.com/spanner/\ntags:\n  - name: projects\npaths:\n  \"/v1/{database}\":\n    delete:\n      description: Drops (aka deletes) a Cloud Spanner database.\n      operationId: spanner.projects.instances.databases.dropDatabase\n      parameters:\n        - description: Required. The database to be dropped.\n          in: path\n          name: database\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.admin\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.admin\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  \"/v1/{database}/ddl\":\n    get:\n      description: \u003e-\n        Returns the schema of a Cloud Spanner database as a list of formatted\n\n        DDL statements. This method does not show pending schema updates, those may\n\n        be queried using the Operations API.\n      operationId: spanner.projects.instances.databases.getDdl\n      parameters:\n        - description: Required. The database whose schema we wish to get.\n          in: path\n          name: database\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/GetDatabaseDdlResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.admin\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.admin\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    patch:\n      description: \u003e-\n        Updates the schema of a Cloud Spanner database by\n\n        creating/altering/dropping tables, columns, indexes, etc. The returned\n\n        long-running operation will have a name of\n\n        the format `\u003cdatabase_name\u003e/operations/\u003coperation_id\u003e` and can be used to\n\n        track execution of the schema change(s). The\n\n        metadata field type is\n\n        UpdateDatabaseDdlMetadata.  The operation has no response.\n      operationId: spanner.projects.instances.databases.updateDdl\n      parameters:\n        - description: Required. The database to update.\n          in: path\n          name: database\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateDatabaseDdlRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Operation\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.admin\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.admin\n      tags:\n        - projects\n  \"/v1/{database}/sessions\":\n    get:\n      description: Lists all sessions in a given database.\n      operationId: spanner.projects.instances.databases.sessions.list\n      parameters:\n        - description: Required. The database in which to list sessions.\n          in: path\n          name: database\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n        - description: \u003e-\n            An expression for filtering the results of the request. Filter rules\n            are\n\n            case insensitive. The fields eligible for filtering are:\n\n              * `labels.key` where key is the name of a label\n\n            Some examples of using filters are:\n\n              * `labels.env:*` --\u003e The session has the label \"env\".\n              * `labels.env:dev` --\u003e The session has the label \"env\" and the value of\n                                   the label contains the string \"dev\".\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: \u003e-\n            Number of sessions to be returned in the response. If 0 or less,\n            defaults\n\n            to the server's maximum allowed page size.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: |-\n            If non-empty, `page_token` should contain a\n            next_page_token from a previous\n            ListSessionsResponse.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListSessionsResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.data\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.data\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Creates a new session. A session can be used to perform\n\n        transactions that read and/or modify data in a Cloud Spanner database.\n\n        Sessions are meant to be reused for many consecutive\n\n        transactions.\n\n\n        Sessions can only execute one transaction at a time. To execute\n\n        multiple concurrent read-write/write-only transactions, create\n\n        multiple sessions. Note that standalone reads and queries use a\n\n        transaction internally, and count toward the one transaction\n\n        limit.\n\n\n        Active sessions use additional server resources, so it is a good idea to\n\n        delete idle and unneeded sessions.\n\n        Aside from explicit deletes, Cloud Spanner can delete sessions for which no\n\n        operations are sent for more than an hour. If a session is deleted,\n\n        requests to it return `NOT_FOUND`.\n\n\n        Idle sessions can be kept alive by sending a trivial SQL query\n\n        periodically, e.g., `\"SELECT 1\"`.\n      operationId: spanner.projects.instances.databases.sessions.create\n      parameters:\n        - description: Required. The database in which the new session is created.\n          in: path\n          name: database\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateSessionRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Session\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.data\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.data\n      tags:\n        - projects\n  \"/v1/{database}/sessions:batchCreate\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Creates multiple new sessions.\n\n\n        This API can be used to initialize a session cache on the clients.\n\n        See https://goo.gl/TgSFN2 for best practices on session cache management.\n      operationId: spanner.projects.instances.databases.sessions.batchCreate\n      parameters:\n        - description: Required. The database in which the new sessions are created.\n          in: path\n          name: database\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchCreateSessionsRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/BatchCreateSessionsResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.data\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.data\n      tags:\n        - projects\n  \"/v1/{name}\":\n    delete:\n      description: \u003e-\n        Deletes a long-running operation. This method indicates that the client\n        is\n\n        no longer interested in the operation result. It does not cancel the\n\n        operation. If the server doesn't support this method, it returns\n\n        `google.rpc.Code.UNIMPLEMENTED`.\n      operationId: spanner.projects.instances.operations.delete\n      parameters:\n        - description: The name of the operation resource to be deleted.\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.admin\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.admin\n      tags:\n        - projects\n    get:\n      description: Gets information about a particular instance configuration.\n      operationId: spanner.projects.instanceConfigs.get\n      parameters:\n        - description: \u003e-\n            Required. The name of the requested instance configuration. Values\n            are of\n\n            the form `projects/\u003cproject\u003e/instanceConfigs/\u003cconfig\u003e`.\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/InstanceConfig\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.admin\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.admin\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    patch:\n      description: \u003e-\n        Updates an instance, and begins allocating or releasing resources\n\n        as requested. The returned long-running\n\n        operation can be used to track the\n\n        progress of updating the instance. If the named instance does not\n\n        exist, returns `NOT_FOUND`.\n\n\n        Immediately upon completion of this request:\n\n          * For resource types for which a decrease in the instance's allocation\n            has been requested, billing is based on the newly-requested level.\n\n        Until completion of the returned operation:\n\n          * Cancelling the operation sets its metadata's\n            cancel_time, and begins\n            restoring resources to their pre-request values. The operation\n            is guaranteed to succeed at undoing all resource changes,\n            after which point it terminates with a `CANCELLED` status.\n          * All other attempts to modify the instance are rejected.\n          * Reading the instance via the API continues to give the pre-request\n            resource levels.\n\n        Upon completion of the returned operation:\n\n          * Billing begins for all successfully-allocated resources (some types\n            may have lower than the requested levels).\n          * All newly-reserved resources are available for serving the instance's\n            tables.\n          * The instance's new resource levels are readable via the API.\n\n        The returned long-running operation will\n\n        have a name of the format `\u003cinstance_name\u003e/operations/\u003coperation_id\u003e` and\n\n        can be used to track the instance modification.  The\n\n        metadata field type is\n\n        UpdateInstanceMetadata.\n\n        The response field type is\n\n        Instance, if successful.\n\n\n        Authorization requires `spanner.instances.update` permission on\n\n        resource name.\n      operationId: spanner.projects.instances.patch\n      parameters:\n        - description: \u003e-\n            Required. A unique identifier for the instance, which cannot be\n            changed\n\n            after the instance is created. Values are of the form\n\n            `projects/\u003cproject\u003e/instances/a-z*[a-z0-9]`. The final\n\n            segment of the name must be between 2 and 64 characters in length.\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateInstanceRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Operation\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.admin\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.admin\n      tags:\n        - projects\n  \"/v1/{name}:cancel\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Starts asynchronous cancellation on a long-running operation.  The\n        server\n\n        makes a best effort to cancel the operation, but success is not\n\n        guaranteed.  If the server doesn't support this method, it returns\n\n        `google.rpc.Code.UNIMPLEMENTED`.  Clients can use\n\n        Operations.GetOperation or\n\n        other methods to check whether the cancellation succeeded or whether the\n\n        operation completed despite cancellation. On successful cancellation,\n\n        the operation is not deleted; instead, it becomes an operation with\n\n        an Operation.error value with a google.rpc.Status.code of 1,\n\n        corresponding to `Code.CANCELLED`.\n      operationId: spanner.projects.instances.operations.cancel\n      parameters:\n        - description: The name of the operation resource to be cancelled.\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.admin\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.admin\n      tags:\n        - projects\n  \"/v1/{parent}/databases\":\n    get:\n      description: Lists Cloud Spanner databases.\n      operationId: spanner.projects.instances.databases.list\n      parameters:\n        - description: |-\n            Number of databases to be returned in the response. If 0 or less,\n            defaults to the server's maximum allowed page size.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: |-\n            If non-empty, `page_token` should contain a\n            next_page_token from a\n            previous ListDatabasesResponse.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: |-\n            Required. The instance whose databases should be listed.\n            Values are of the form `projects/\u003cproject\u003e/instances/\u003cinstance\u003e`.\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListDatabasesResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.admin\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.admin\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Creates a new Cloud Spanner database and starts to prepare it for\n        serving.\n\n        The returned long-running operation will\n\n        have a name of the format `\u003cdatabase_name\u003e/operations/\u003coperation_id\u003e` and\n\n        can be used to track preparation of the database. The\n\n        metadata field type is\n\n        CreateDatabaseMetadata. The\n\n        response field type is\n\n        Database, if successful.\n      operationId: spanner.projects.instances.databases.create\n      parameters:\n        - description: |-\n            Required. The name of the instance that will serve the new database.\n            Values are of the form `projects/\u003cproject\u003e/instances/\u003cinstance\u003e`.\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateDatabaseRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Operation\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.admin\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.admin\n      tags:\n        - projects\n  \"/v1/{parent}/instanceConfigs\":\n    get:\n      description: Lists the supported instance configurations for a given project.\n      operationId: spanner.projects.instanceConfigs.list\n      parameters:\n        - description: \u003e-\n            Number of instance configurations to be returned in the response. If\n            0 or\n\n            less, defaults to the server's maximum allowed page size.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: |-\n            If non-empty, `page_token` should contain a\n            next_page_token\n            from a previous ListInstanceConfigsResponse.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: \u003e-\n            Required. The name of the project for which a list of supported\n            instance\n\n            configurations is requested. Values are of the form\n\n            `projects/\u003cproject\u003e`.\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListInstanceConfigsResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.admin\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.admin\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  \"/v1/{parent}/instances\":\n    get:\n      description: Lists all instances in the given project.\n      operationId: spanner.projects.instances.list\n      parameters:\n        - description: \u003e-\n            An expression for filtering the results of the request. Filter rules\n            are\n\n            case insensitive. The fields eligible for filtering are:\n\n              * `name`\n              * `display_name`\n              * `labels.key` where key is the name of a label\n\n            Some examples of using filters are:\n\n              * `name:*` --\u003e The instance has a name.\n              * `name:Howl` --\u003e The instance's name contains the string \"howl\".\n              * `name:HOWL` --\u003e Equivalent to above.\n              * `NAME:howl` --\u003e Equivalent to above.\n              * `labels.env:*` --\u003e The instance has the label \"env\".\n              * `labels.env:dev` --\u003e The instance has the label \"env\" and the value of\n                                   the label contains the string \"dev\".\n              * `name:howl labels.env:dev` --\u003e The instance's name contains \"howl\" and\n                                             it has the label \"env\" with its value\n                                             containing \"dev\".\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: \u003e-\n            Number of instances to be returned in the response. If 0 or less,\n            defaults\n\n            to the server's maximum allowed page size.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: |-\n            If non-empty, `page_token` should contain a\n            next_page_token from a\n            previous ListInstancesResponse.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: |-\n            Required. The name of the project for which a list of instances is\n            requested. Values are of the form `projects/\u003cproject\u003e`.\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListInstancesResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.admin\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.admin\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Creates an instance and begins preparing it to begin serving. The\n\n        returned long-running operation\n\n        can be used to track the progress of preparing the new\n\n        instance. The instance name is assigned by the caller. If the\n\n        named instance already exists, `CreateInstance` returns\n\n        `ALREADY_EXISTS`.\n\n\n        Immediately upon completion of this request:\n\n          * The instance is readable via the API, with all requested attributes\n            but no allocated resources. Its state is `CREATING`.\n\n        Until completion of the returned operation:\n\n          * Cancelling the operation renders the instance immediately unreadable\n            via the API.\n          * The instance can be deleted.\n          * All other attempts to modify the instance are rejected.\n\n        Upon completion of the returned operation:\n\n          * Billing for all successfully-allocated resources begins (some types\n            may have lower than the requested levels).\n          * Databases can be created in the instance.\n          * The instance's allocated resource levels are readable via the API.\n          * The instance's state becomes `READY`.\n\n        The returned long-running operation will\n\n        have a name of the format `\u003cinstance_name\u003e/operations/\u003coperation_id\u003e` and\n\n        can be used to track creation of the instance.  The\n\n        metadata field type is\n\n        CreateInstanceMetadata.\n\n        The response field type is\n\n        Instance, if successful.\n      operationId: spanner.projects.instances.create\n      parameters:\n        - description: \u003e-\n            Required. The name of the project in which to create the instance.\n            Values\n\n            are of the form `projects/\u003cproject\u003e`.\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateInstanceRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Operation\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.admin\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.admin\n      tags:\n        - projects\n  \"/v1/{resource}:getIamPolicy\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Gets the access control policy for a database resource.\n        Returns an empty policy if a database exists but does\n        not have a policy set.\n\n        Authorization requires `spanner.databases.getIamPolicy` permission on\n        resource.\n      operationId: spanner.projects.instances.databases.getIamPolicy\n      parameters:\n        - description: \"REQUIRED: The Cloud Spanner resource for which the policy is being\n            retrieved. The format is `projects/\u003cproject ID\u003e/instances/\u003cinstance\n            ID\u003e` for instance resources and `projects/\u003cproject\n            ID\u003e/instances/\u003cinstance ID\u003e/databases/\u003cdatabase ID\u003e` for database\n            resources.\"\n          in: path\n          name: resource\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetIamPolicyRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Policy\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.admin\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.admin\n      tags:\n        - projects\n  \"/v1/{resource}:setIamPolicy\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Sets the access control policy on a database resource.\n        Replaces any existing policy.\n\n        Authorization requires `spanner.databases.setIamPolicy`\n        permission on resource.\n      operationId: spanner.projects.instances.databases.setIamPolicy\n      parameters:\n        - description: \"REQUIRED: The Cloud Spanner resource for which the policy is being\n            set. The format is `projects/\u003cproject ID\u003e/instances/\u003cinstance ID\u003e`\n            for instance resources and `projects/\u003cproject\n            ID\u003e/instances/\u003cinstance ID\u003e/databases/\u003cdatabase ID\u003e` for databases\n            resources.\"\n          in: path\n          name: resource\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SetIamPolicyRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Policy\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.admin\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.admin\n      tags:\n        - projects\n  \"/v1/{resource}:testIamPermissions\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Returns permissions that the caller has on the specified database\n        resource.\n\n\n        Attempting this RPC on a non-existent Cloud Spanner database will\n\n        result in a NOT_FOUND error if the user has\n\n        `spanner.databases.list` permission on the containing Cloud\n\n        Spanner instance. Otherwise returns an empty set of permissions.\n      operationId: spanner.projects.instances.databases.testIamPermissions\n      parameters:\n        - description: \"REQUIRED: The Cloud Spanner resource for which permissions are\n            being tested. The format is `projects/\u003cproject\n            ID\u003e/instances/\u003cinstance ID\u003e` for instance resources and\n            `projects/\u003cproject ID\u003e/instances/\u003cinstance ID\u003e/databases/\u003cdatabase\n            ID\u003e` for database resources.\"\n          in: path\n          name: resource\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TestIamPermissionsRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/TestIamPermissionsResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.admin\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.admin\n      tags:\n        - projects\n  \"/v1/{session}:beginTransaction\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Begins a new transaction. This step can often be skipped:\n        Read, ExecuteSql and\n        Commit can begin a new transaction as a\n        side-effect.\n      operationId: spanner.projects.instances.databases.sessions.beginTransaction\n      parameters:\n        - description: Required. The session in which the transaction runs.\n          in: path\n          name: session\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BeginTransactionRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.data\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.data\n      tags:\n        - projects\n  \"/v1/{session}:commit\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Commits a transaction. The request includes the mutations to be\n        applied to rows in the database.\n\n        `Commit` might return an `ABORTED` error. This can occur at any time;\n        commonly, the cause is conflicts with concurrent\n        transactions. However, it can also happen for a variety of other\n        reasons. If `Commit` returns `ABORTED`, the caller should re-attempt\n        the transaction from the beginning, re-using the same session.\n      operationId: spanner.projects.instances.databases.sessions.commit\n      parameters:\n        - description: Required. The session in which the transaction to be committed is\n            running.\n          in: path\n          name: session\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CommitRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/CommitResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.data\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.data\n      tags:\n        - projects\n  \"/v1/{session}:executeBatchDml\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Executes a batch of SQL DML statements. This method allows many\n        statements\n\n        to be run with lower latency than submitting them sequentially with\n\n        ExecuteSql.\n\n\n        Statements are executed in sequential order. A request can succeed even if\n\n        a statement fails. The ExecuteBatchDmlResponse.status field in the\n\n        response provides information about the statement that failed. Clients must\n\n        inspect this field to determine whether an error occurred.\n\n\n        Execution stops after the first failed statement; the remaining statements\n\n        are not executed.\n      operationId: spanner.projects.instances.databases.sessions.executeBatchDml\n      parameters:\n        - description: Required. The session in which the DML statements should be\n            performed.\n          in: path\n          name: session\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ExecuteBatchDmlRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ExecuteBatchDmlResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.data\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.data\n      tags:\n        - projects\n  \"/v1/{session}:executeSql\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Executes an SQL statement, returning all results in a single reply. This\n        method cannot be used to return a result set larger than 10 MiB;\n        if the query yields more data than that, the query fails with\n        a `FAILED_PRECONDITION` error.\n\n        Operations inside read-write transactions might return `ABORTED`. If\n        this occurs, the application should restart the transaction from\n        the beginning. See Transaction for more details.\n\n        Larger result sets can be fetched in streaming fashion by calling\n        ExecuteStreamingSql instead.\n      operationId: spanner.projects.instances.databases.sessions.executeSql\n      parameters:\n        - description: Required. The session in which the SQL query should be performed.\n          in: path\n          name: session\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ExecuteSqlRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ResultSet\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.data\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.data\n      tags:\n        - projects\n  \"/v1/{session}:executeStreamingSql\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Like ExecuteSql, except returns the result\n        set as a stream. Unlike ExecuteSql, there\n        is no limit on the size of the returned result set. However, no\n        individual row in the result set can exceed 100 MiB, and no\n        column value can exceed 10 MiB.\n      operationId: spanner.projects.instances.databases.sessions.executeStreamingSql\n      parameters:\n        - description: Required. The session in which the SQL query should be performed.\n          in: path\n          name: session\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ExecuteSqlRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/PartialResultSet\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.data\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.data\n      tags:\n        - projects\n  \"/v1/{session}:partitionQuery\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Creates a set of partition tokens that can be used to execute a query\n\n        operation in parallel.  Each of the returned partition tokens can be used\n\n        by ExecuteStreamingSql to specify a subset\n\n        of the query result to read.  The same session and read-only transaction\n\n        must be used by the PartitionQueryRequest used to create the\n\n        partition tokens and the ExecuteSqlRequests that use the partition tokens.\n\n\n        Partition tokens become invalid when the session used to create them\n\n        is deleted, is idle for too long, begins a new transaction, or becomes too\n\n        old.  When any of these happen, it is not possible to resume the query, and\n\n        the whole operation must be restarted from the beginning.\n      operationId: spanner.projects.instances.databases.sessions.partitionQuery\n      parameters:\n        - description: Required. The session used to create the partitions.\n          in: path\n          name: session\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PartitionQueryRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/PartitionResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.data\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.data\n      tags:\n        - projects\n  \"/v1/{session}:partitionRead\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Creates a set of partition tokens that can be used to execute a read\n\n        operation in parallel.  Each of the returned partition tokens can be used\n\n        by StreamingRead to specify a subset of the read\n\n        result to read.  The same session and read-only transaction must be used by\n\n        the PartitionReadRequest used to create the partition tokens and the\n\n        ReadRequests that use the partition tokens.  There are no ordering\n\n        guarantees on rows returned among the returned partition tokens, or even\n\n        within each individual StreamingRead call issued with a partition_token.\n\n\n        Partition tokens become invalid when the session used to create them\n\n        is deleted, is idle for too long, begins a new transaction, or becomes too\n\n        old.  When any of these happen, it is not possible to resume the read, and\n\n        the whole operation must be restarted from the beginning.\n      operationId: spanner.projects.instances.databases.sessions.partitionRead\n      parameters:\n        - description: Required. The session used to create the partitions.\n          in: path\n          name: session\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PartitionReadRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/PartitionResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.data\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.data\n      tags:\n        - projects\n  \"/v1/{session}:read\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Reads rows from the database using key lookups and scans, as a\n        simple key/value style alternative to\n        ExecuteSql.  This method cannot be used to\n        return a result set larger than 10 MiB; if the read matches more\n        data than that, the read fails with a `FAILED_PRECONDITION`\n        error.\n\n        Reads inside read-write transactions might return `ABORTED`. If\n        this occurs, the application should restart the transaction from\n        the beginning. See Transaction for more details.\n\n        Larger result sets can be yielded in streaming fashion by calling\n        StreamingRead instead.\n      operationId: spanner.projects.instances.databases.sessions.read\n      parameters:\n        - description: Required. The session in which the read should be performed.\n          in: path\n          name: session\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ReadRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ResultSet\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.data\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.data\n      tags:\n        - projects\n  \"/v1/{session}:rollback\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Rolls back a transaction, releasing any locks it holds. It is a good\n        idea to call this for any transaction that includes one or more\n        Read or ExecuteSql requests and\n        ultimately decides not to commit.\n\n        `Rollback` returns `OK` if it successfully aborts the transaction, the\n        transaction was already aborted, or the transaction is not\n        found. `Rollback` never returns `ABORTED`.\n      operationId: spanner.projects.instances.databases.sessions.rollback\n      parameters:\n        - description: Required. The session in which the transaction to roll back is\n            running.\n          in: path\n          name: session\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RollbackRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.data\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.data\n      tags:\n        - projects\n  \"/v1/{session}:streamingRead\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Like Read, except returns the result set as a\n        stream. Unlike Read, there is no limit on the\n        size of the returned result set. However, no individual row in\n        the result set can exceed 100 MiB, and no column value can exceed\n        10 MiB.\n      operationId: spanner.projects.instances.databases.sessions.streamingRead\n      parameters:\n        - description: Required. The session in which the read should be performed.\n          in: path\n          name: session\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ReadRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/PartialResultSet\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/spanner.data\n          Oauth2c:\n            - https://www.googleapis.com/auth/spanner.data\n      tags:\n        - projects\nservers:\n  - url: https://spanner.googleapis.com/\ncomponents:\n  parameters:\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n          - media\n          - proto\n        default: json\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be\n        any arbitrary string assigned to a user, but should not exceed 40\n        characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        type: string\n        enum:\n          - \"1\"\n          - \"2\"\n  requestBodies:\n    ReadRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ReadRequest\"\n    ExecuteSqlRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ExecuteSqlRequest\"\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n            https://www.googleapis.com/auth/spanner.admin: Administer your Spanner databases\n            https://www.googleapis.com/auth/spanner.data: View and manage the contents of your Spanner databases\n    Oauth2c:\n      description: Oauth 2.0 accessCode authentication\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n            https://www.googleapis.com/auth/spanner.admin: Administer your Spanner databases\n            https://www.googleapis.com/auth/spanner.data: View and manage the contents of your Spanner databases\n  schemas:\n    BatchCreateSessionsRequest:\n      description: The request for BatchCreateSessions.\n      properties:\n        sessionCount:\n          description: \u003e-\n            Required. The number of sessions to be created in this batch call.\n\n            The API may return fewer than the requested number of sessions. If a\n\n            specific number of sessions are desired, the client can make additional\n\n            calls to BatchCreateSessions (adjusting\n\n            session_count as necessary).\n          format: int32\n          type: integer\n        sessionTemplate:\n          $ref: \"#/components/schemas/Session\"\n      type: object\n    BatchCreateSessionsResponse:\n      description: The response for BatchCreateSessions.\n      properties:\n        session:\n          description: The freshly created sessions.\n          items:\n            $ref: \"#/components/schemas/Session\"\n          type: array\n      type: object\n    BeginTransactionRequest:\n      description: The request for BeginTransaction.\n      properties:\n        options:\n          $ref: \"#/components/schemas/TransactionOptions\"\n      type: object\n    Binding:\n      description: Associates `members` with a `role`.\n      properties:\n        condition:\n          $ref: \"#/components/schemas/Expr\"\n        members:\n          description: \u003e+\n            Specifies the identities requesting access for a Cloud Platform\n            resource.\n\n            `members` can have the following values:\n\n\n            * `allUsers`: A special identifier that represents anyone who is\n               on the internet; with or without a Google account.\n\n            * `allAuthenticatedUsers`: A special identifier that represents anyone\n               who is authenticated with a Google account or a service account.\n\n            * `user:{emailid}`: An email address that represents a specific Google\n               account. For example, `alice@example.com` .\n\n\n            * `serviceAccount:{emailid}`: An email address that represents a service\n               account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n            * `group:{emailid}`: An email address that represents a Google group.\n               For example, `admins@example.com`.\n\n\n            * `domain:{domain}`: The G Suite domain (primary) that represents all the\n               users of that domain. For example, `google.com` or `example.com`.\n\n          items:\n            type: string\n          type: array\n        role:\n          description: |-\n            Role that is assigned to `members`.\n            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.\n          type: string\n      type: object\n    ChildLink:\n      description: |-\n        Metadata associated with a parent-child relationship appearing in a\n        PlanNode.\n      properties:\n        childIndex:\n          description: The node to which the link points.\n          format: int32\n          type: integer\n        type:\n          description: \u003e-\n            The type of the link. For example, in Hash Joins this could be used\n            to\n\n            distinguish between the build child and the probe child, or in the case\n\n            of the child being an output variable, to represent the tag associated\n\n            with the output variable.\n          type: string\n        variable:\n          description: \u003e-\n            Only present if the child node is SCALAR and corresponds\n\n            to an output variable of the parent node. The field carries the name of\n\n            the output variable.\n\n            For example, a `TableScan` operator that reads rows from a table will\n\n            have child links to the `SCALAR` nodes representing the output variables\n\n            created for each column that is read by the operator. The corresponding\n\n            `variable` fields will be set to the variable names assigned to the\n\n            columns.\n          type: string\n      type: object\n    CommitRequest:\n      description: The request for Commit.\n      properties:\n        mutations:\n          description: |-\n            The mutations to be executed when this transaction commits. All\n            mutations are applied atomically, in the order they appear in\n            this list.\n          items:\n            $ref: \"#/components/schemas/Mutation\"\n          type: array\n        singleUseTransaction:\n          $ref: \"#/components/schemas/TransactionOptions\"\n        transactionId:\n          description: Commit a previously-started transaction.\n          format: byte\n          type: string\n      type: object\n    CommitResponse:\n      description: The response for Commit.\n      properties:\n        commitTimestamp:\n          description: The Cloud Spanner timestamp at which the transaction committed.\n          format: google-datetime\n          type: string\n      type: object\n    CreateDatabaseMetadata:\n      description: |-\n        Metadata type for the operation returned by\n        CreateDatabase.\n      properties:\n        database:\n          description: The database being created.\n          type: string\n      type: object\n    CreateDatabaseRequest:\n      description: The request for CreateDatabase.\n      properties:\n        createStatement:\n          description: \u003e-\n            Required. A `CREATE DATABASE` statement, which specifies the ID of\n            the\n\n            new database.  The database ID must conform to the regular expression\n\n            `a-z*[a-z0-9]` and be between 2 and 30 characters in length.\n\n            If the database ID is a reserved word or if it contains a hyphen, the\n\n            database ID must be enclosed in backticks (`` ` ``).\n          type: string\n        extraStatements:\n          description: |-\n            An optional list of DDL statements to run inside the newly created\n            database. Statements can create tables, indexes, etc. These\n            statements execute atomically with the creation of the database:\n            if there is an error in any statement, the database is not created.\n          items:\n            type: string\n          type: array\n      type: object\n    CreateInstanceMetadata:\n      description: |-\n        Metadata type for the operation returned by\n        CreateInstance.\n      properties:\n        cancelTime:\n          description: \u003e-\n            The time at which this operation was cancelled. If set, this\n            operation is\n\n            in the process of undoing itself (which is guaranteed to succeed) and\n\n            cannot be cancelled again.\n          format: google-datetime\n          type: string\n        endTime:\n          description: The time at which this operation failed or was completed\n            successfully.\n          format: google-datetime\n          type: string\n        instance:\n          $ref: \"#/components/schemas/Instance\"\n        startTime:\n          description: |-\n            The time at which the\n            CreateInstance request was\n            received.\n          format: google-datetime\n          type: string\n      type: object\n    CreateInstanceRequest:\n      description: The request for CreateInstance.\n      properties:\n        instance:\n          $ref: \"#/components/schemas/Instance\"\n        instanceId:\n          description: \u003e-\n            Required. The ID of the instance to create.  Valid identifiers are\n            of the\n\n            form `a-z*[a-z0-9]` and must be between 2 and 64 characters in\n\n            length.\n          type: string\n      type: object\n    CreateSessionRequest:\n      description: The request for CreateSession.\n      properties:\n        session:\n          $ref: \"#/components/schemas/Session\"\n      type: object\n    Database:\n      description: A Cloud Spanner database.\n      properties:\n        name:\n          description: |-\n            Required. The name of the database. Values are of the form\n            `projects/\u003cproject\u003e/instances/\u003cinstance\u003e/databases/\u003cdatabase\u003e`,\n            where `\u003cdatabase\u003e` is as specified in the `CREATE DATABASE`\n            statement. This name can be passed to other API methods to\n            identify the database.\n          type: string\n        state:\n          description: Output only. The current database state.\n          enum:\n            - STATE_UNSPECIFIED\n            - CREATING\n            - READY\n          type: string\n      type: object\n    Delete:\n      description: Arguments to delete operations.\n      properties:\n        keySet:\n          $ref: \"#/components/schemas/KeySet\"\n        table:\n          description: Required. The table whose rows will be deleted.\n          type: string\n      type: object\n    Empty:\n      description: \u003e-\n        A generic empty message that you can re-use to avoid defining duplicated\n\n        empty messages in your APIs. A typical example is to use it as the request\n\n        or the response type of an API method. For instance:\n\n            service Foo {\n              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n            }\n\n        The JSON representation for `Empty` is empty JSON object `{}`.\n      properties: {}\n      type: object\n    ExecuteBatchDmlRequest:\n      description: The request for ExecuteBatchDml.\n      properties:\n        seqno:\n          description: \u003e-\n            A per-transaction sequence number used to identify this request.\n            This field\n\n            makes each request idempotent such that if the request is received multiple\n\n            times, at most one will succeed.\n\n\n            The sequence number must be monotonically increasing within the\n\n            transaction. If a request arrives for the first time with an out-of-order\n\n            sequence number, the transaction may be aborted. Replays of previously\n\n            handled requests will yield the same response as the first execution.\n          format: int64\n          type: string\n        statements:\n          description: \u003e-\n            The list of statements to execute in this batch. Statements are\n            executed\n\n            serially, such that the effects of statement `i` are visible to statement\n\n            `i+1`. Each statement must be a DML statement. Execution stops at the\n\n            first failed statement; the remaining statements are not executed.\n\n\n            Callers must provide at least one statement.\n          items:\n            $ref: \"#/components/schemas/Statement\"\n          type: array\n        transaction:\n          $ref: \"#/components/schemas/TransactionSelector\"\n      type: object\n    ExecuteBatchDmlResponse:\n      description: \u003e-\n        The response for ExecuteBatchDml. Contains a list\n\n        of ResultSet messages, one for each DML statement that has successfully\n\n        executed, in the same order as the statements in the request. If a statement\n\n        fails, the status in the response body identifies the cause of the failure.\n\n\n        To check for DML statements that failed, use the following approach:\n\n\n        1. Check the status in the response message. The google.rpc.Code enum\n           value `OK` indicates that all statements were executed successfully.\n        2. If the status was not `OK`, check the number of result sets in the\n           response. If the response contains `N` ResultSet messages, then\n           statement `N+1` in the request failed.\n\n        Example 1:\n\n\n        * Request: 5 DML statements, all executed successfully.\n\n        * Response: 5 ResultSet messages, with the status `OK`.\n\n\n        Example 2:\n\n\n        * Request: 5 DML statements. The third statement has a syntax error.\n\n        * Response: 2 ResultSet messages, and a syntax error (`INVALID_ARGUMENT`)\n          status. The number of ResultSet messages indicates that the third\n          statement failed, and the fourth and fifth statements were not executed.\n      properties:\n        resultSets:\n          description: \u003e-\n            One ResultSet for each statement in the request that ran\n            successfully,\n\n            in the same order as the statements in the request. Each ResultSet does\n\n            not contain any rows. The ResultSetStats in each ResultSet contain\n\n            the number of rows modified by the statement.\n\n\n            Only the first ResultSet in the response contains valid\n\n            ResultSetMetadata.\n          items:\n            $ref: \"#/components/schemas/ResultSet\"\n          type: array\n        status:\n          $ref: \"#/components/schemas/Status\"\n      type: object\n    ExecuteSqlRequest:\n      description: |-\n        The request for ExecuteSql and\n        ExecuteStreamingSql.\n      properties:\n        paramTypes:\n          additionalProperties:\n            $ref: \"#/components/schemas/Type\"\n          description: \u003e-\n            It is not always possible for Cloud Spanner to infer the right SQL\n            type\n\n            from a JSON value.  For example, values of type `BYTES` and values\n\n            of type `STRING` both appear in params as JSON strings.\n\n\n            In these cases, `param_types` can be used to specify the exact\n\n            SQL type for some or all of the SQL statement parameters. See the\n\n            definition of Type for more information\n\n            about SQL types.\n          type: object\n        params:\n          additionalProperties:\n            description: Properties of the object.\n          description: \u003e-\n            Parameter names and values that bind to placeholders in the SQL\n            string.\n\n\n            A parameter placeholder consists of the `@` character followed by the\n\n            parameter name (for example, `@firstName`). Parameter names can contain\n\n            letters, numbers, and underscores.\n\n\n            Parameters can appear anywhere that a literal value is expected.  The same\n\n            parameter name can be used more than once, for example:\n\n\n            `\"WHERE id \u003e @msg_id AND id \u003c @msg_id + 100\"`\n\n\n            It is an error to execute a SQL statement with unbound parameters.\n          type: object\n        partitionToken:\n          description: |-\n            If present, results will be restricted to the specified partition\n            previously created using PartitionQuery().  There must be an exact\n            match for the values of fields common to this message and the\n            PartitionQueryRequest message used to create this partition_token.\n          format: byte\n          type: string\n        queryMode:\n          description: |-\n            Used to control the amount of debugging information returned in\n            ResultSetStats. If partition_token is set, query_mode can only\n            be set to QueryMode.NORMAL.\n          enum:\n            - NORMAL\n            - PLAN\n            - PROFILE\n          type: string\n        resumeToken:\n          description: \u003e-\n            If this request is resuming a previously interrupted SQL statement\n\n            execution, `resume_token` should be copied from the last\n\n            PartialResultSet yielded before the interruption. Doing this\n\n            enables the new SQL statement execution to resume where the last one left\n\n            off. The rest of the request parameters must exactly match the\n\n            request that yielded this token.\n          format: byte\n          type: string\n        seqno:\n          description: \u003e-\n            A per-transaction sequence number used to identify this request.\n            This field\n\n            makes each request idempotent such that if the request is received multiple\n\n            times, at most one will succeed.\n\n\n            The sequence number must be monotonically increasing within the\n\n            transaction. If a request arrives for the first time with an out-of-order\n\n            sequence number, the transaction may be aborted. Replays of previously\n\n            handled requests will yield the same response as the first execution.\n\n\n            Required for DML statements. Ignored for queries.\n          format: int64\n          type: string\n        sql:\n          description: Required. The SQL string.\n          type: string\n        transaction:\n          $ref: \"#/components/schemas/TransactionSelector\"\n      type: object\n    Expr:\n      description: |-\n        Represents an expression text. Example:\n\n            title: \"User account presence\"\n            description: \"Determines whether the request has a user account\"\n            expression: \"size(request.user) \u003e 0\"\n      properties:\n        description:\n          description: \u003e-\n            An optional description of the expression. This is a longer text\n            which\n\n            describes the expression, e.g. when hovered over it in a UI.\n          type: string\n        expression:\n          description: |-\n            Textual representation of an expression in\n            Common Expression Language syntax.\n\n            The application context of the containing message determines which\n            well-known feature set of CEL is supported.\n          type: string\n        location:\n          description: \u003e-\n            An optional string indicating the location of the expression for\n            error\n\n            reporting, e.g. a file name and a position in the file.\n          type: string\n        title:\n          description: |-\n            An optional title for the expression, i.e. a short string describing\n            its purpose. This can be used e.g. in UIs which allow to enter the\n            expression.\n          type: string\n      type: object\n    Field:\n      description: Message representing a single field of a struct.\n      properties:\n        name:\n          description: |-\n            The name of the field. For reads, this is the column name. For\n            SQL queries, it is the column alias (e.g., `\"Word\"` in the\n            query `\"SELECT 'hello' AS Word\"`), or the column name (e.g.,\n            `\"ColName\"` in the query `\"SELECT ColName FROM Table\"`). Some\n            columns might have an empty name (e.g., !\"SELECT\n            UPPER(ColName)\"`). Note that a query result can contain\n            multiple fields with the same name.\n          type: string\n        type:\n          $ref: \"#/components/schemas/Type\"\n      type: object\n    GetDatabaseDdlResponse:\n      description: The response for GetDatabaseDdl.\n      properties:\n        statements:\n          description: \u003e-\n            A list of formatted DDL statements defining the schema of the\n            database\n\n            specified in the request.\n          items:\n            type: string\n          type: array\n      type: object\n    GetIamPolicyRequest:\n      description: Request message for `GetIamPolicy` method.\n      properties:\n        options:\n          $ref: \"#/components/schemas/GetPolicyOptions\"\n      type: object\n    GetPolicyOptions:\n      description: Encapsulates settings provided to GetIamPolicy.\n      properties:\n        requestedPolicyVersion:\n          description: \u003e-\n            Optional. The policy format version to be returned.\n\n            Acceptable values are 0, 1, and 3.\n\n            If the value is 0, or the field is omitted, policy format version 1 will be\n\n            returned.\n          format: int32\n          type: integer\n      type: object\n    Instance:\n      description: An isolated set of Cloud Spanner resources on which databases can be\n        hosted.\n      properties:\n        config:\n          description: \u003e-\n            Required. The name of the instance's configuration. Values are of\n            the form\n\n            `projects/\u003cproject\u003e/instanceConfigs/\u003cconfiguration\u003e`. See\n\n            also InstanceConfig and\n\n            ListInstanceConfigs.\n          type: string\n        displayName:\n          description: \u003e-\n            Required. The descriptive name for this instance as it appears in\n            UIs.\n\n            Must be unique per project and between 4 and 30 characters in length.\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: \u003e-\n            Cloud Labels are a flexible and lightweight mechanism for organizing\n            cloud\n\n            resources into groups that reflect a customer's organizational needs and\n\n            deployment strategies. Cloud Labels can be used to filter collections of\n\n            resources. They can be used to control how resource metrics are aggregated.\n\n            And they can be used as arguments to policy management rules (e.g. route,\n\n            firewall, load balancing, etc.).\n\n             * Label keys must be between 1 and 63 characters long and must conform to\n               the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.\n             * Label values must be between 0 and 63 characters long and must conform\n               to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.\n             * No more than 64 labels can be associated with a given resource.\n\n            See https://goo.gl/xmQnxf for more information on and examples of labels.\n\n\n            If you plan to use labels in your own code, please note that additional\n\n            characters may be allowed in the future. And so you are advised to use an\n\n            internal label representation, such as JSON, which doesn't rely upon\n\n            specific characters being disallowed.  For example, representing labels\n\n            as the string:  name + \"_\" + value  would prove problematic if we were to\n\n            allow \"_\" in a future release.\n          type: object\n        name:\n          description: \u003e-\n            Required. A unique identifier for the instance, which cannot be\n            changed\n\n            after the instance is created. Values are of the form\n\n            `projects/\u003cproject\u003e/instances/a-z*[a-z0-9]`. The final\n\n            segment of the name must be between 2 and 64 characters in length.\n          type: string\n        nodeCount:\n          description: \u003e-\n            Required. The number of nodes allocated to this instance. This may\n            be zero\n\n            in API responses for instances that are not yet in state `READY`.\n\n\n            See [the\n\n            documentation](https://cloud.google.com/spanner/docs/instances#node_count)\n\n            for more information about nodes.\n          format: int32\n          type: integer\n        state:\n          description: |-\n            Output only. The current instance state. For\n            CreateInstance, the state must be\n            either omitted or set to `CREATING`. For\n            UpdateInstance, the state must be\n            either omitted or set to `READY`.\n          enum:\n            - STATE_UNSPECIFIED\n            - CREATING\n            - READY\n          type: string\n      type: object\n    InstanceConfig:\n      description: |-\n        A possible configuration for a Cloud Spanner instance. Configurations\n        define the geographic placement of nodes and their replication.\n      properties:\n        displayName:\n          description: The name of this instance configuration as it appears in UIs.\n          type: string\n        name:\n          description: |-\n            A unique identifier for the instance configuration.  Values\n            are of the form\n            `projects/\u003cproject\u003e/instanceConfigs/a-z*`\n          type: string\n        replicas:\n          description: \u003e-\n            The geographic placement of nodes in this instance configuration and\n            their\n\n            replication properties.\n          items:\n            $ref: \"#/components/schemas/ReplicaInfo\"\n          type: array\n      type: object\n    KeyRange:\n      description: |-\n        KeyRange represents a range of rows in a table or index.\n\n        A range has a start key and an end key. These keys can be open or\n        closed, indicating if the range includes rows with that key.\n\n        Keys are represented by lists, where the ith value in the list\n        corresponds to the ith component of the table or index primary key.\n        Individual values are encoded as described\n        here.\n\n        For example, consider the following table definition:\n\n            CREATE TABLE UserEvents (\n              UserName STRING(MAX),\n              EventDate STRING(10)\n            ) PRIMARY KEY(UserName, EventDate);\n\n        The following keys name rows in this table:\n\n            \"Bob\", \"2014-09-23\"\n\n        Since the `UserEvents` table's `PRIMARY KEY` clause names two\n        columns, each `UserEvents` key has two elements; the first is the\n        `UserName`, and the second is the `EventDate`.\n\n        Key ranges with multiple components are interpreted\n        lexicographically by component using the table or index key's declared\n        sort order. For example, the following range returns all events for\n        user `\"Bob\"` that occurred in the year 2015:\n\n            \"start_closed\": [\"Bob\", \"2015-01-01\"]\n            \"end_closed\": [\"Bob\", \"2015-12-31\"]\n\n        Start and end keys can omit trailing key components. This affects the\n        inclusion and exclusion of rows that exactly match the provided key\n        components: if the key is closed, then rows that exactly match the\n        provided components are included; if the key is open, then rows\n        that exactly match are not included.\n\n        For example, the following range includes all events for `\"Bob\"` that\n        occurred during and after the year 2000:\n\n            \"start_closed\": [\"Bob\", \"2000-01-01\"]\n            \"end_closed\": [\"Bob\"]\n\n        The next example retrieves all events for `\"Bob\"`:\n\n            \"start_closed\": [\"Bob\"]\n            \"end_closed\": [\"Bob\"]\n\n        To retrieve events before the year 2000:\n\n            \"start_closed\": [\"Bob\"]\n            \"end_open\": [\"Bob\", \"2000-01-01\"]\n\n        The following range includes all rows in the table:\n\n            \"start_closed\": []\n            \"end_closed\": []\n\n        This range returns all users whose `UserName` begins with any\n        character from A to C:\n\n            \"start_closed\": [\"A\"]\n            \"end_open\": [\"D\"]\n\n        This range returns all users whose `UserName` begins with B:\n\n            \"start_closed\": [\"B\"]\n            \"end_open\": [\"C\"]\n\n        Key ranges honor column sort order. For example, suppose a table is\n        defined as follows:\n\n            CREATE TABLE DescendingSortedTable {\n              Key INT64,\n              ...\n            ) PRIMARY KEY(Key DESC);\n\n        The following range retrieves all rows with key values between 1\n        and 100 inclusive:\n\n            \"start_closed\": [\"100\"]\n            \"end_closed\": [\"1\"]\n\n        Note that 100 is passed as the start, and 1 is passed as the end,\n        because `Key` is a descending column in the schema.\n      properties:\n        endClosed:\n          description: |-\n            If the end is closed, then the range includes all rows whose\n            first `len(end_closed)` key columns exactly match `end_closed`.\n          items: {}\n          type: array\n        endOpen:\n          description: |-\n            If the end is open, then the range excludes rows whose first\n            `len(end_open)` key columns exactly match `end_open`.\n          items: {}\n          type: array\n        startClosed:\n          description: |-\n            If the start is closed, then the range includes all rows whose\n            first `len(start_closed)` key columns exactly match `start_closed`.\n          items: {}\n          type: array\n        startOpen:\n          description: |-\n            If the start is open, then the range excludes rows whose first\n            `len(start_open)` key columns exactly match `start_open`.\n          items: {}\n          type: array\n      type: object\n    KeySet:\n      description: \u003e-\n        `KeySet` defines a collection of Cloud Spanner keys and/or key ranges.\n        All\n\n        the keys are expected to be in the same table or index. The keys need\n\n        not be sorted in any particular way.\n\n\n        If the same key is specified multiple times in the set (for example\n\n        if two ranges, two keys, or a key and a range overlap), Cloud Spanner\n\n        behaves as if the key were only specified once.\n      properties:\n        all:\n          description: |-\n            For convenience `all` can be set to `true` to indicate that this\n            `KeySet` matches all keys in the table or index. Note that any keys\n            specified in `keys` or `ranges` are only yielded once.\n          type: boolean\n        keys:\n          description: |-\n            A list of specific keys. Entries in `keys` should have exactly as\n            many elements as there are columns in the primary or index key\n            with which this `KeySet` is used.  Individual key values are\n            encoded as described here.\n          items:\n            items: {}\n            type: array\n          type: array\n        ranges:\n          description: |-\n            A list of key ranges. See KeyRange for more information about\n            key range specifications.\n          items:\n            $ref: \"#/components/schemas/KeyRange\"\n          type: array\n      type: object\n    ListDatabasesResponse:\n      description: The response for ListDatabases.\n      properties:\n        databases:\n          description: Databases that matched the request.\n          items:\n            $ref: \"#/components/schemas/Database\"\n          type: array\n        nextPageToken:\n          description: |-\n            `next_page_token` can be sent in a subsequent\n            ListDatabases call to fetch more\n            of the matching databases.\n          type: string\n      type: object\n    ListInstanceConfigsResponse:\n      description: The response for ListInstanceConfigs.\n      properties:\n        instanceConfigs:\n          description: The list of requested instance configurations.\n          items:\n            $ref: \"#/components/schemas/InstanceConfig\"\n          type: array\n        nextPageToken:\n          description: |-\n            `next_page_token` can be sent in a subsequent\n            ListInstanceConfigs call to\n            fetch more of the matching instance configurations.\n          type: string\n      type: object\n    ListInstancesResponse:\n      description: The response for ListInstances.\n      properties:\n        instances:\n          description: The list of requested instances.\n          items:\n            $ref: \"#/components/schemas/Instance\"\n          type: array\n        nextPageToken:\n          description: |-\n            `next_page_token` can be sent in a subsequent\n            ListInstances call to fetch more\n            of the matching instances.\n          type: string\n      type: object\n    ListOperationsResponse:\n      description: The response message for Operations.ListOperations.\n      properties:\n        nextPageToken:\n          description: The standard List next-page token.\n          type: string\n        operations:\n          description: A list of operations that matches the specified filter in the\n            request.\n          items:\n            $ref: \"#/components/schemas/Operation\"\n          type: array\n      type: object\n    ListSessionsResponse:\n      description: The response for ListSessions.\n      properties:\n        nextPageToken:\n          description: |-\n            `next_page_token` can be sent in a subsequent\n            ListSessions call to fetch more of the matching\n            sessions.\n          type: string\n        sessions:\n          description: The list of requested sessions.\n          items:\n            $ref: \"#/components/schemas/Session\"\n          type: array\n      type: object\n    Mutation:\n      description: |-\n        A modification to one or more Cloud Spanner rows.  Mutations can be\n        applied to a Cloud Spanner database by sending them in a\n        Commit call.\n      properties:\n        delete:\n          $ref: \"#/components/schemas/Delete\"\n        insert:\n          $ref: \"#/components/schemas/Write\"\n        insertOrUpdate:\n          $ref: \"#/components/schemas/Write\"\n        replace:\n          $ref: \"#/components/schemas/Write\"\n        update:\n          $ref: \"#/components/schemas/Write\"\n      type: object\n    Operation:\n      description: \u003e-\n        This resource represents a long-running operation that is the result of\n        a\n\n        network API call.\n      properties:\n        done:\n          description: \u003e-\n            If the value is `false`, it means the operation is still in\n            progress.\n\n            If `true`, the operation is completed, and either `error` or `response` is\n\n            available.\n          type: boolean\n        error:\n          $ref: \"#/components/schemas/Status\"\n        metadata:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: \u003e-\n            Service-specific metadata associated with the operation.  It\n            typically\n\n            contains progress information and common metadata such as create time.\n\n            Some services might not provide such metadata.  Any method that returns a\n\n            long-running operation should document the metadata type, if any.\n          type: object\n        name:\n          description: \u003e-\n            The server-assigned name, which is only unique within the same\n            service that\n\n            originally returns it. If you use the default HTTP mapping, the\n\n            `name` should be a resource name ending with `operations/{unique_id}`.\n          type: string\n        response:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: \u003e-\n            The normal response of the operation in case of success.  If the\n            original\n\n            method returns no data on success, such as `Delete`, the response is\n\n            `google.protobuf.Empty`.  If the original method is standard\n\n            `Get`/`Create`/`Update`, the response should be the resource.  For other\n\n            methods, the response should have the type `XxxResponse`, where `Xxx`\n\n            is the original method name.  For example, if the original method name\n\n            is `TakeSnapshot()`, the inferred response type is\n\n            `TakeSnapshotResponse`.\n          type: object\n      type: object\n    PartialResultSet:\n      description: |-\n        Partial results from a streaming read or SQL query. Streaming reads and\n        SQL queries better tolerate large result sets, large rows, and large\n        values, but are a little trickier to consume.\n      properties:\n        chunkedValue:\n          description: |-\n            If true, then the final value in values is chunked, and must\n            be combined with more values from subsequent `PartialResultSet`s\n            to obtain a complete field value.\n          type: boolean\n        metadata:\n          $ref: \"#/components/schemas/ResultSetMetadata\"\n        resumeToken:\n          description: |-\n            Streaming calls might be interrupted for a variety of reasons, such\n            as TCP connection loss. If this occurs, the stream of results can\n            be resumed by re-sending the original request and including\n            `resume_token`. Note that executing any other transaction in the\n            same session invalidates the token.\n          format: byte\n          type: string\n        stats:\n          $ref: \"#/components/schemas/ResultSetStats\"\n        values:\n          description: \u003e-\n            A streamed result set consists of a stream of values, which might\n\n            be split into many `PartialResultSet` messages to accommodate\n\n            large rows and/or large values. Every N complete values defines a\n\n            row, where N is equal to the number of entries in\n\n            metadata.row_type.fields.\n\n\n            Most values are encoded based on type as described\n\n            here.\n\n\n            It is possible that the last value in values is \"chunked\",\n\n            meaning that the rest of the value is sent in subsequent\n\n            `PartialResultSet`(s). This is denoted by the chunked_value\n\n            field. Two or more chunked values can be merged to form a\n\n            complete value as follows:\n\n              * `bool/number/null`: cannot be chunked\n              * `string`: concatenate the strings\n              * `list`: concatenate the lists. If the last element in a list is a\n                `string`, `list`, or `object`, merge it with the first element in\n                the next list by applying these rules recursively.\n              * `object`: concatenate the (field name, field value) pairs. If a\n                field name is duplicated, then apply these rules recursively\n                to merge the field values.\n\n            Some examples of merging:\n\n                # Strings are concatenated.\n                \"foo\", \"bar\" =\u003e \"foobar\"\n\n                # Lists of non-strings are concatenated.\n                [2, 3], [4] =\u003e [2, 3, 4]\n\n                # Lists are concatenated, but the last and first elements are merged\n                # because they are strings.\n                [\"a\", \"b\"], [\"c\", \"d\"] =\u003e [\"a\", \"bc\", \"d\"]\n\n                # Lists are concatenated, but the last and first elements are merged\n                # because they are lists. Recursively, the last and first elements\n                # of the inner lists are merged because they are strings.\n                [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] =\u003e [\"a\", [\"b\", \"cd\"], \"e\"]\n\n                # Non-overlapping object fields are combined.\n                {\"a\": \"1\"}, {\"b\": \"2\"} =\u003e {\"a\": \"1\", \"b\": 2\"}\n\n                # Overlapping object fields are merged.\n                {\"a\": \"1\"}, {\"a\": \"2\"} =\u003e {\"a\": \"12\"}\n\n                # Examples of merging objects containing lists of strings.\n                {\"a\": [\"1\"]}, {\"a\": [\"2\"]} =\u003e {\"a\": [\"12\"]}\n\n            For a more complete example, suppose a streaming SQL query is\n\n            yielding a result set whose rows contain a single string\n\n            field. The following `PartialResultSet`s might be yielded:\n\n                {\n                  \"metadata\": { ... }\n                  \"values\": [\"Hello\", \"W\"]\n                  \"chunked_value\": true\n                  \"resume_token\": \"Af65...\"\n                }\n                {\n                  \"values\": [\"orl\"]\n                  \"chunked_value\": true\n                  \"resume_token\": \"Bqp2...\"\n                }\n                {\n                  \"values\": [\"d\"]\n                  \"resume_token\": \"Zx1B...\"\n                }\n\n            This sequence of `PartialResultSet`s encodes two rows, one\n\n            containing the field value `\"Hello\"`, and a second containing the\n\n            field value `\"World\" = \"W\" + \"orl\" + \"d\"`.\n          items: {}\n          type: array\n      type: object\n    Partition:\n      description: |-\n        Information returned for each partition returned in a\n        PartitionResponse.\n      properties:\n        partitionToken:\n          description: \u003e-\n            This token can be passed to Read, StreamingRead, ExecuteSql, or\n\n            ExecuteStreamingSql requests to restrict the results to those identified by\n\n            this partition token.\n          format: byte\n          type: string\n      type: object\n    PartitionOptions:\n      description: |-\n        Options for a PartitionQueryRequest and\n        PartitionReadRequest.\n      properties:\n        maxPartitions:\n          description: \u003e-\n            **Note:** This hint is currently ignored by PartitionQuery and\n\n            PartitionRead requests.\n\n\n            The desired maximum number of partitions to return.  For example, this may\n\n            be set to the number of workers available.  The default for this option\n\n            is currently 10,000. The maximum value is currently 200,000.  This is only\n\n            a hint.  The actual number of partitions returned may be smaller or larger\n\n            than this maximum count request.\n          format: int64\n          type: string\n        partitionSizeBytes:\n          description: \u003e-\n            **Note:** This hint is currently ignored by PartitionQuery and\n\n            PartitionRead requests.\n\n\n            The desired data size for each partition generated.  The default for this\n\n            option is currently 1 GiB.  This is only a hint. The actual size of each\n\n            partition may be smaller or larger than this size request.\n          format: int64\n          type: string\n      type: object\n    PartitionQueryRequest:\n      description: The request for PartitionQuery\n      properties:\n        paramTypes:\n          additionalProperties:\n            $ref: \"#/components/schemas/Type\"\n          description: \u003e-\n            It is not always possible for Cloud Spanner to infer the right SQL\n            type\n\n            from a JSON value.  For example, values of type `BYTES` and values\n\n            of type `STRING` both appear in params as JSON strings.\n\n\n            In these cases, `param_types` can be used to specify the exact\n\n            SQL type for some or all of the SQL query parameters. See the\n\n            definition of Type for more information\n\n            about SQL types.\n          type: object\n        params:\n          additionalProperties:\n            description: Properties of the object.\n          description: \u003e-\n            Parameter names and values that bind to placeholders in the SQL\n            string.\n\n\n            A parameter placeholder consists of the `@` character followed by the\n\n            parameter name (for example, `@firstName`). Parameter names can contain\n\n            letters, numbers, and underscores.\n\n\n            Parameters can appear anywhere that a literal value is expected.  The same\n\n            parameter name can be used more than once, for example:\n\n\n            `\"WHERE id \u003e @msg_id AND id \u003c @msg_id + 100\"`\n\n\n            It is an error to execute a SQL statement with unbound parameters.\n          type: object\n        partitionOptions:\n          $ref: \"#/components/schemas/PartitionOptions\"\n        sql:\n          description: \u003e-\n            The query request to generate partitions for. The request will fail\n            if\n\n            the query is not root partitionable. The query plan of a root\n\n            partitionable query has a single distributed union operator. A distributed\n\n            union operator conceptually divides one or more tables into multiple\n\n            splits, remotely evaluates a subquery independently on each split, and\n\n            then unions all results.\n\n\n            This must not contain DML commands, such as INSERT, UPDATE, or\n\n            DELETE. Use ExecuteStreamingSql with a\n\n            PartitionedDml transaction for large, partition-friendly DML operations.\n          type: string\n        transaction:\n          $ref: \"#/components/schemas/TransactionSelector\"\n      type: object\n    PartitionReadRequest:\n      description: The request for PartitionRead\n      properties:\n        columns:\n          description: |-\n            The columns of table to be returned for each row matching\n            this request.\n          items:\n            type: string\n          type: array\n        index:\n          description: |-\n            If non-empty, the name of an index on table. This index is\n            used instead of the table primary key when interpreting key_set\n            and sorting result rows. See key_set for further information.\n          type: string\n        keySet:\n          $ref: \"#/components/schemas/KeySet\"\n        partitionOptions:\n          $ref: \"#/components/schemas/PartitionOptions\"\n        table:\n          description: Required. The name of the table in the database to be read.\n          type: string\n        transaction:\n          $ref: \"#/components/schemas/TransactionSelector\"\n      type: object\n    PartitionResponse:\n      description: |-\n        The response for PartitionQuery\n        or PartitionRead\n      properties:\n        partitions:\n          description: Partitions created by this request.\n          items:\n            $ref: \"#/components/schemas/Partition\"\n          type: array\n        transaction:\n          $ref: \"#/components/schemas/Transaction\"\n      type: object\n    PartitionedDml:\n      description: Message type to initiate a Partitioned DML transaction.\n      properties: {}\n      type: object\n    PlanNode:\n      description: Node information for nodes appearing in a QueryPlan.plan_nodes.\n      properties:\n        childLinks:\n          description: List of child node `index`es and their relationship to this parent.\n          items:\n            $ref: \"#/components/schemas/ChildLink\"\n          type: array\n        displayName:\n          description: The display name for the node.\n          type: string\n        executionStats:\n          additionalProperties:\n            description: Properties of the object.\n          description: \u003e-\n            The execution statistics associated with the node, contained in a\n            group of\n\n            key-value pairs. Only present if the plan was returned as a result of a\n\n            profile query. For example, number of executions, number of rows/time per\n\n            execution etc.\n          type: object\n        index:\n          description: The `PlanNode`'s index in node list.\n          format: int32\n          type: integer\n        kind:\n          description: |-\n            Used to determine the type of node. May be needed for visualizing\n            different kinds of nodes differently. For example, If the node is a\n            SCALAR node, it will have a condensed representation\n            which can be used to directly embed a description of the node in its\n            parent.\n          enum:\n            - KIND_UNSPECIFIED\n            - RELATIONAL\n            - SCALAR\n          type: string\n        metadata:\n          additionalProperties:\n            description: Properties of the object.\n          description: \u003e-\n            Attributes relevant to the node contained in a group of key-value\n            pairs.\n\n            For example, a Parameter Reference node could have the following\n\n            information in its metadata:\n\n                {\n                  \"parameter_reference\": \"param1\",\n                  \"parameter_type\": \"array\"\n                }\n          type: object\n        shortRepresentation:\n          $ref: \"#/components/schemas/ShortRepresentation\"\n      type: object\n    Policy:\n      description: \u003e-\n        Defines an Identity and Access Management (IAM) policy. It is used to\n\n        specify access control policies for Cloud Platform resources.\n\n\n\n        A `Policy` consists of a list of `bindings`. A `binding` binds a list of\n\n        `members` to a `role`, where the members can be user accounts, Google groups,\n\n        Google domains, and service accounts. A `role` is a named list of permissions\n\n        defined by IAM.\n\n\n        **JSON Example**\n\n            {\n              \"bindings\": [\n                {\n                  \"role\": \"roles/owner\",\n                  \"members\": [\n                    \"user:mike@example.com\",\n                    \"group:admins@example.com\",\n                    \"domain:google.com\",\n                    \"serviceAccount:my-other-app@appspot.gserviceaccount.com\"\n                  ]\n                },\n                {\n                  \"role\": \"roles/viewer\",\n                  \"members\": [\"user:sean@example.com\"]\n                }\n              ]\n            }\n\n        **YAML Example**\n\n            bindings:\n            - members:\n              - user:mike@example.com\n              - group:admins@example.com\n              - domain:google.com\n              - serviceAccount:my-other-app@appspot.gserviceaccount.com\n              role: roles/owner\n            - members:\n              - user:sean@example.com\n              role: roles/viewer\n\n\n        For a description of IAM and its features, see the\n\n        [IAM developer's guide](https://cloud.google.com/iam/docs).\n      properties:\n        bindings:\n          description: |-\n            Associates a list of `members` to a `role`.\n            `bindings` with no members will result in an error.\n          items:\n            $ref: \"#/components/schemas/Binding\"\n          type: array\n        etag:\n          description: \u003e-\n            `etag` is used for optimistic concurrency control as a way to help\n\n            prevent simultaneous updates of a policy from overwriting each other.\n\n            It is strongly suggested that systems make use of the `etag` in the\n\n            read-modify-write cycle to perform policy updates in order to avoid race\n\n            conditions: An `etag` is returned in the response to `getIamPolicy`, and\n\n            systems are expected to put that etag in the request to `setIamPolicy` to\n\n            ensure that their change will be applied to the same version of the policy.\n\n\n            If no `etag` is provided in the call to `setIamPolicy`, then the existing\n\n            policy is overwritten.\n          format: byte\n          type: string\n        version:\n          description: Deprecated.\n          format: int32\n          type: integer\n      type: object\n    QueryPlan:\n      description: Contains an ordered list of nodes appearing in the query plan.\n      properties:\n        planNodes:\n          description: \u003e-\n            The nodes in the query plan. Plan nodes are returned in pre-order\n            starting\n\n            with the plan root. Each PlanNode's `id` corresponds to its index in\n\n            `plan_nodes`.\n          items:\n            $ref: \"#/components/schemas/PlanNode\"\n          type: array\n      type: object\n    ReadOnly:\n      description: Message type to initiate a read-only transaction.\n      properties:\n        exactStaleness:\n          description: |-\n            Executes all reads at a timestamp that is `exact_staleness`\n            old. The timestamp is chosen soon after the read is started.\n\n            Guarantees that all writes that have committed more than the\n            specified number of seconds ago are visible. Because Cloud Spanner\n            chooses the exact timestamp, this mode works even if the client's\n            local clock is substantially skewed from Cloud Spanner commit\n            timestamps.\n\n            Useful for reading at nearby replicas without the distributed\n            timestamp negotiation overhead of `max_staleness`.\n          format: google-duration\n          type: string\n        maxStaleness:\n          description: |-\n            Read data at a timestamp \u003e= `NOW - max_staleness`\n            seconds. Guarantees that all writes that have committed more\n            than the specified number of seconds ago are visible. Because\n            Cloud Spanner chooses the exact timestamp, this mode works even if\n            the client's local clock is substantially skewed from Cloud Spanner\n            commit timestamps.\n\n            Useful for reading the freshest data available at a nearby\n            replica, while bounding the possible staleness if the local\n            replica has fallen behind.\n\n            Note that this option can only be used in single-use\n            transactions.\n          format: google-duration\n          type: string\n        minReadTimestamp:\n          description: |-\n            Executes all reads at a timestamp \u003e= `min_read_timestamp`.\n\n            This is useful for requesting fresher data than some previous\n            read, or data that is fresh enough to observe the effects of some\n            previously committed transaction whose timestamp is known.\n\n            Note that this option can only be used in single-use transactions.\n\n            A timestamp in RFC3339 UTC \\\"Zulu\\\" format, accurate to nanoseconds.\n            Example: `\"2014-10-02T15:01:23.045123456Z\"`.\n          format: google-datetime\n          type: string\n        readTimestamp:\n          description: |-\n            Executes all reads at the given timestamp. Unlike other modes,\n            reads at a specific timestamp are repeatable; the same read at\n            the same timestamp always returns the same data. If the\n            timestamp is in the future, the read will block until the\n            specified timestamp, modulo the read's deadline.\n\n            Useful for large scale consistent reads such as mapreduces, or\n            for coordinating many reads against a consistent snapshot of the\n            data.\n\n            A timestamp in RFC3339 UTC \\\"Zulu\\\" format, accurate to nanoseconds.\n            Example: `\"2014-10-02T15:01:23.045123456Z\"`.\n          format: google-datetime\n          type: string\n        returnReadTimestamp:\n          description: |-\n            If true, the Cloud Spanner-selected read timestamp is included in\n            the Transaction message that describes the transaction.\n          type: boolean\n        strong:\n          description: |-\n            Read at a timestamp where all previously committed transactions\n            are visible.\n          type: boolean\n      type: object\n    ReadRequest:\n      description: |-\n        The request for Read and\n        StreamingRead.\n      properties:\n        columns:\n          description: |-\n            The columns of table to be returned for each row matching\n            this request.\n          items:\n            type: string\n          type: array\n        index:\n          description: |-\n            If non-empty, the name of an index on table. This index is\n            used instead of the table primary key when interpreting key_set\n            and sorting result rows. See key_set for further information.\n          type: string\n        keySet:\n          $ref: \"#/components/schemas/KeySet\"\n        limit:\n          description: \u003e-\n            If greater than zero, only the first `limit` rows are yielded. If\n            `limit`\n\n            is zero, the default is no limit. A limit cannot be specified if\n\n            `partition_token` is set.\n          format: int64\n          type: string\n        partitionToken:\n          description: |-\n            If present, results will be restricted to the specified partition\n            previously created using PartitionRead().    There must be an exact\n            match for the values of fields common to this message and the\n            PartitionReadRequest message used to create this partition_token.\n          format: byte\n          type: string\n        resumeToken:\n          description: |-\n            If this request is resuming a previously interrupted read,\n            `resume_token` should be copied from the last\n            PartialResultSet yielded before the interruption. Doing this\n            enables the new read to resume where the last read left off. The\n            rest of the request parameters must exactly match the request\n            that yielded this token.\n          format: byte\n          type: string\n        table:\n          description: Required. The name of the table in the database to be read.\n          type: string\n        transaction:\n          $ref: \"#/components/schemas/TransactionSelector\"\n      type: object\n    ReadWrite:\n      description: |-\n        Message type to initiate a read-write transaction. Currently this\n        transaction type has no options.\n      properties: {}\n      type: object\n    ReplicaInfo:\n      properties:\n        defaultLeaderLocation:\n          description: \u003e-\n            If true, this location is designated as the default leader location\n            where\n\n            leader replicas are placed. See the [region types\n\n            documentation](https://cloud.google.com/spanner/docs/instances#region_types)\n\n            for more details.\n          type: boolean\n        location:\n          description: The location of the serving resources, e.g. \"us-central1\".\n          type: string\n        type:\n          description: The type of replica.\n          enum:\n            - TYPE_UNSPECIFIED\n            - READ_WRITE\n            - READ_ONLY\n            - WITNESS\n          type: string\n      type: object\n    ResultSet:\n      description: |-\n        Results from Read or\n        ExecuteSql.\n      properties:\n        metadata:\n          $ref: \"#/components/schemas/ResultSetMetadata\"\n        rows:\n          description: |-\n            Each element in `rows` is a row whose format is defined by\n            metadata.row_type. The ith element\n            in each row matches the ith field in\n            metadata.row_type. Elements are\n            encoded based on type as described\n            here.\n          items:\n            items: {}\n            type: array\n          type: array\n        stats:\n          $ref: \"#/components/schemas/ResultSetStats\"\n      type: object\n    ResultSetMetadata:\n      description: Metadata about a ResultSet or PartialResultSet.\n      properties:\n        rowType:\n          $ref: \"#/components/schemas/StructType\"\n        transaction:\n          $ref: \"#/components/schemas/Transaction\"\n      type: object\n    ResultSetStats:\n      description: Additional statistics about a ResultSet or PartialResultSet.\n      properties:\n        queryPlan:\n          $ref: \"#/components/schemas/QueryPlan\"\n        queryStats:\n          additionalProperties:\n            description: Properties of the object.\n          description: \u003e-\n            Aggregated statistics from the execution of the query. Only present\n            when\n\n            the query is profiled. For example, a query could return the statistics as\n\n            follows:\n\n                {\n                  \"rows_returned\": \"3\",\n                  \"elapsed_time\": \"1.22 secs\",\n                  \"cpu_time\": \"1.19 secs\"\n                }\n          type: object\n        rowCountExact:\n          description: Standard DML returns an exact count of rows that were modified.\n          format: int64\n          type: string\n        rowCountLowerBound:\n          description: |-\n            Partitioned DML does not offer exactly-once semantics, so it\n            returns a lower bound of the rows modified.\n          format: int64\n          type: string\n      type: object\n    RollbackRequest:\n      description: The request for Rollback.\n      properties:\n        transactionId:\n          description: Required. The transaction to roll back.\n          format: byte\n          type: string\n      type: object\n    Session:\n      description: A session in the Cloud Spanner API.\n      properties:\n        approximateLastUseTime:\n          description: \u003e-\n            Output only. The approximate timestamp when the session is last\n            used. It is\n\n            typically earlier than the actual last use time.\n          format: google-datetime\n          type: string\n        createTime:\n          description: Output only. The timestamp when the session is created.\n          format: google-datetime\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: \u003e-\n            The labels for the session.\n\n             * Label keys must be between 1 and 63 characters long and must conform to\n               the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.\n             * Label values must be between 0 and 63 characters long and must conform\n               to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.\n             * No more than 64 labels can be associated with a given session.\n\n            See https://goo.gl/xmQnxf for more information on and examples of labels.\n          type: object\n        name:\n          description: \u003e-\n            The name of the session. This is always system-assigned; values\n            provided\n\n            when creating a session are ignored.\n          type: string\n      type: object\n    SetIamPolicyRequest:\n      description: Request message for `SetIamPolicy` method.\n      properties:\n        policy:\n          $ref: \"#/components/schemas/Policy\"\n      type: object\n    ShortRepresentation:\n      description: |-\n        Condensed representation of a node and its subtree. Only present for\n        `SCALAR` PlanNode(s).\n      properties:\n        description:\n          description: A string representation of the expression subtree rooted at this\n            node.\n          type: string\n        subqueries:\n          additionalProperties:\n            format: int32\n            type: integer\n          description: \u003e-\n            A mapping of (subquery variable name) -\u003e (subquery node id) for\n            cases\n\n            where the `description` string of this node references a `SCALAR`\n\n            subquery contained in the expression subtree rooted at this node. The\n\n            referenced `SCALAR` subquery may not necessarily be a direct child of\n\n            this node.\n          type: object\n      type: object\n    Statement:\n      description: A single DML statement.\n      properties:\n        paramTypes:\n          additionalProperties:\n            $ref: \"#/components/schemas/Type\"\n          description: \u003e-\n            It is not always possible for Cloud Spanner to infer the right SQL\n            type\n\n            from a JSON value.  For example, values of type `BYTES` and values\n\n            of type `STRING` both appear in params as JSON strings.\n\n\n            In these cases, `param_types` can be used to specify the exact\n\n            SQL type for some or all of the SQL statement parameters. See the\n\n            definition of Type for more information\n\n            about SQL types.\n          type: object\n        params:\n          additionalProperties:\n            description: Properties of the object.\n          description: \u003e-\n            Parameter names and values that bind to placeholders in the DML\n            string.\n\n\n            A parameter placeholder consists of the `@` character followed by the\n\n            parameter name (for example, `@firstName`). Parameter names can contain\n\n            letters, numbers, and underscores.\n\n\n            Parameters can appear anywhere that a literal value is expected.  The\n\n            same parameter name can be used more than once, for example:\n\n\n            `\"WHERE id \u003e @msg_id AND id \u003c @msg_id + 100\"`\n\n\n            It is an error to execute a SQL statement with unbound parameters.\n          type: object\n        sql:\n          description: Required. The DML string.\n          type: string\n      type: object\n    Status:\n      description: \u003e-\n        The `Status` type defines a logical error model that is suitable for\n\n        different programming environments, including REST APIs and RPC APIs. It is\n\n        used by [gRPC](https://github.com/grpc). Each `Status` message contains\n\n        three pieces of data: error code, error message, and error details.\n\n\n        You can find out more about this error model and how to work with it in the\n\n        [API Design Guide](https://cloud.google.com/apis/design/errors).\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: \u003e-\n            A list of messages that carry the error details.  There is a common\n            set of\n\n            message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        message:\n          description: |-\n            A developer-facing error message, which should be in English. Any\n            user-facing error message should be localized and sent in the\n            google.rpc.Status.details field, or localized by the client.\n          type: string\n      type: object\n    StructType:\n      description: \"`StructType` defines the fields of a STRUCT type.\"\n      properties:\n        fields:\n          description: |-\n            The list of fields that make up this struct. Order is\n            significant, because values of this struct type are represented as\n            lists, where the order of field values matches the order of\n            fields in the StructType. In turn, the order of fields\n            matches the order of columns in a read request, or the order of\n            fields in the `SELECT` clause of a query.\n          items:\n            $ref: \"#/components/schemas/Field\"\n          type: array\n      type: object\n    TestIamPermissionsRequest:\n      description: Request message for `TestIamPermissions` method.\n      properties:\n        permissions:\n          description: \u003e-\n            REQUIRED: The set of permissions to check for 'resource'.\n\n            Permissions with wildcards (such as '*', 'spanner.*', 'spanner.instances.*') are not allowed.\n          items:\n            type: string\n          type: array\n      type: object\n    TestIamPermissionsResponse:\n      description: Response message for `TestIamPermissions` method.\n      properties:\n        permissions:\n          description: |-\n            A subset of `TestPermissionsRequest.permissions` that the caller is\n            allowed.\n          items:\n            type: string\n          type: array\n      type: object\n    Transaction:\n      description: A transaction.\n      properties:\n        id:\n          description: |-\n            `id` may be used to identify the transaction in subsequent\n            Read,\n            ExecuteSql,\n            Commit, or\n            Rollback calls.\n\n            Single-use read-only transactions do not have IDs, because\n            single-use transactions do not support multiple requests.\n          format: byte\n          type: string\n        readTimestamp:\n          description: |-\n            For snapshot read-only transactions, the read timestamp chosen\n            for the transaction. Not returned by default: see\n            TransactionOptions.ReadOnly.return_read_timestamp.\n\n            A timestamp in RFC3339 UTC \\\"Zulu\\\" format, accurate to nanoseconds.\n            Example: `\"2014-10-02T15:01:23.045123456Z\"`.\n          format: google-datetime\n          type: string\n      type: object\n    TransactionOptions:\n      description: \u003e-\n        # Transactions\n\n\n\n        Each session can have at most one active transaction at a time. After the\n\n        active transaction is completed, the session can immediately be\n\n        re-used for the next transaction. It is not necessary to create a\n\n        new session for each transaction.\n\n\n        # Transaction Modes\n\n\n        Cloud Spanner supports three transaction modes:\n\n          1. Locking read-write. This type of transaction is the only way\n             to write data into Cloud Spanner. These transactions rely on\n             pessimistic locking and, if necessary, two-phase commit.\n             Locking read-write transactions may abort, requiring the\n             application to retry.\n\n          2. Snapshot read-only. This transaction type provides guaranteed\n             consistency across several reads, but does not allow\n             writes. Snapshot read-only transactions can be configured to\n             read at timestamps in the past. Snapshot read-only\n             transactions do not need to be committed.\n\n          3. Partitioned DML. This type of transaction is used to execute\n             a single Partitioned DML statement. Partitioned DML partitions\n             the key space and runs the DML statement over each partition\n             in parallel using separate, internal transactions that commit\n             independently. Partitioned DML transactions do not need to be\n             committed.\n\n        For transactions that only read, snapshot read-only transactions\n\n        provide simpler semantics and are almost always faster. In\n\n        particular, read-only transactions do not take locks, so they do\n\n        not conflict with read-write transactions. As a consequence of not\n\n        taking locks, they also do not abort, so retry loops are not needed.\n\n\n        Transactions may only read/write data in a single database. They\n\n        may, however, read/write data in different tables within that\n\n        database.\n\n\n        ## Locking Read-Write Transactions\n\n\n        Locking transactions may be used to atomically read-modify-write\n\n        data anywhere in a database. This type of transaction is externally\n\n        consistent.\n\n\n        Clients should attempt to minimize the amount of time a transaction\n\n        is active. Faster transactions commit with higher probability\n\n        and cause less contention. Cloud Spanner attempts to keep read locks\n\n        active as long as the transaction continues to do reads, and the\n\n        transaction has not been terminated by\n\n        Commit or\n\n        Rollback.  Long periods of\n\n        inactivity at the client may cause Cloud Spanner to release a\n\n        transaction's locks and abort it.\n\n\n        Conceptually, a read-write transaction consists of zero or more\n\n        reads or SQL statements followed by\n\n        Commit. At any time before\n\n        Commit, the client can send a\n\n        Rollback request to abort the\n\n        transaction.\n\n\n        ### Semantics\n\n\n        Cloud Spanner can commit the transaction if all read locks it acquired\n\n        are still valid at commit time, and it is able to acquire write\n\n        locks for all writes. Cloud Spanner can abort the transaction for any\n\n        reason. If a commit attempt returns `ABORTED`, Cloud Spanner guarantees\n\n        that the transaction has not modified any user data in Cloud Spanner.\n\n\n        Unless the transaction commits, Cloud Spanner makes no guarantees about\n\n        how long the transaction's locks were held for. It is an error to\n\n        use Cloud Spanner locks for any sort of mutual exclusion other than\n\n        between Cloud Spanner transactions themselves.\n\n\n        ### Retrying Aborted Transactions\n\n\n        When a transaction aborts, the application can choose to retry the\n\n        whole transaction again. To maximize the chances of successfully\n\n        committing the retry, the client should execute the retry in the\n\n        same session as the original attempt. The original session's lock\n\n        priority increases with each consecutive abort, meaning that each\n\n        attempt has a slightly better chance of success than the previous.\n\n\n        Under some circumstances (e.g., many transactions attempting to\n\n        modify the same row(s)), a transaction can abort many times in a\n\n        short period before successfully committing. Thus, it is not a good\n\n        idea to cap the number of retries a transaction can attempt;\n\n        instead, it is better to limit the total amount of wall time spent\n\n        retrying.\n\n\n        ### Idle Transactions\n\n\n        A transaction is considered idle if it has no outstanding reads or\n\n        SQL queries and has not started a read or SQL query within the last 10\n\n        seconds. Idle transactions can be aborted by Cloud Spanner so that they\n\n        don't hold on to locks indefinitely. In that case, the commit will\n\n        fail with error `ABORTED`.\n\n\n        If this behavior is undesirable, periodically executing a simple\n\n        SQL query in the transaction (e.g., `SELECT 1`) prevents the\n\n        transaction from becoming idle.\n\n\n        ## Snapshot Read-Only Transactions\n\n\n        Snapshot read-only transactions provides a simpler method than\n\n        locking read-write transactions for doing several consistent\n\n        reads. However, this type of transaction does not support writes.\n\n\n        Snapshot transactions do not take locks. Instead, they work by\n\n        choosing a Cloud Spanner timestamp, then executing all reads at that\n\n        timestamp. Since they do not acquire locks, they do not block\n\n        concurrent read-write transactions.\n\n\n        Unlike locking read-write transactions, snapshot read-only\n\n        transactions never abort. They can fail if the chosen read\n\n        timestamp is garbage collected; however, the default garbage\n\n        collection policy is generous enough that most applications do not\n\n        need to worry about this in practice.\n\n\n        Snapshot read-only transactions do not need to call\n\n        Commit or\n\n        Rollback (and in fact are not\n\n        permitted to do so).\n\n\n        To execute a snapshot transaction, the client specifies a timestamp\n\n        bound, which tells Cloud Spanner how to choose a read timestamp.\n\n\n        The types of timestamp bound are:\n\n          - Strong (the default).\n          - Bounded staleness.\n          - Exact staleness.\n\n        If the Cloud Spanner database to be read is geographically distributed,\n\n        stale read-only transactions can execute more quickly than strong\n\n        or read-write transaction, because they are able to execute far\n\n        from the leader replica.\n\n\n        Each type of timestamp bound is discussed in detail below.\n\n\n        ### Strong\n\n\n        Strong reads are guaranteed to see the effects of all transactions\n\n        that have committed before the start of the read. Furthermore, all\n\n        rows yielded by a single read are consistent with each other -- if\n\n        any part of the read observes a transaction, all parts of the read\n\n        see the transaction.\n\n\n        Strong reads are not repeatable: two consecutive strong read-only\n\n        transactions might return inconsistent results if there are\n\n        concurrent writes. If consistency across reads is required, the\n\n        reads should be executed within a transaction or at an exact read\n\n        timestamp.\n\n\n        See TransactionOptions.ReadOnly.strong.\n\n\n        ### Exact Staleness\n\n\n        These timestamp bounds execute reads at a user-specified\n\n        timestamp. Reads at a timestamp are guaranteed to see a consistent\n\n        prefix of the global transaction history: they observe\n\n        modifications done by all transactions with a commit timestamp \u003c=\n\n        the read timestamp, and observe none of the modifications done by\n\n        transactions with a larger commit timestamp. They will block until\n\n        all conflicting transactions that may be assigned commit timestamps\n\n        \u003c= the read timestamp have finished.\n\n\n        The timestamp can either be expressed as an absolute Cloud Spanner commit\n\n        timestamp or a staleness relative to the current time.\n\n\n        These modes do not require a \"negotiation phase\" to pick a\n\n        timestamp. As a result, they execute slightly faster than the\n\n        equivalent boundedly stale concurrency modes. On the other hand,\n\n        boundedly stale reads usually return fresher results.\n\n\n        See TransactionOptions.ReadOnly.read_timestamp and\n\n        TransactionOptions.ReadOnly.exact_staleness.\n\n\n        ### Bounded Staleness\n\n\n        Bounded staleness modes allow Cloud Spanner to pick the read timestamp,\n\n        subject to a user-provided staleness bound. Cloud Spanner chooses the\n\n        newest timestamp within the staleness bound that allows execution\n\n        of the reads at the closest available replica without blocking.\n\n\n        All rows yielded are consistent with each other -- if any part of\n\n        the read observes a transaction, all parts of the read see the\n\n        transaction. Boundedly stale reads are not repeatable: two stale\n\n        reads, even if they use the same staleness bound, can execute at\n\n        different timestamps and thus return inconsistent results.\n\n\n        Boundedly stale reads execute in two phases: the first phase\n\n        negotiates a timestamp among all replicas needed to serve the\n\n        read. In the second phase, reads are executed at the negotiated\n\n        timestamp.\n\n\n        As a result of the two phase execution, bounded staleness reads are\n\n        usually a little slower than comparable exact staleness\n\n        reads. However, they are typically able to return fresher\n\n        results, and are more likely to execute at the closest replica.\n\n\n        Because the timestamp negotiation requires up-front knowledge of\n\n        which rows will be read, it can only be used with single-use\n\n        read-only transactions.\n\n\n        See TransactionOptions.ReadOnly.max_staleness and\n\n        TransactionOptions.ReadOnly.min_read_timestamp.\n\n\n        ### Old Read Timestamps and Garbage Collection\n\n\n        Cloud Spanner continuously garbage collects deleted and overwritten data\n\n        in the background to reclaim storage space. This process is known\n\n        as \"version GC\". By default, version GC reclaims versions after they\n\n        are one hour old. Because of this, Cloud Spanner cannot perform reads\n\n        at read timestamps more than one hour in the past. This\n\n        restriction also applies to in-progress reads and/or SQL queries whose\n\n        timestamp become too old while executing. Reads and SQL queries with\n\n        too-old read timestamps fail with the error `FAILED_PRECONDITION`.\n\n\n        ## Partitioned DML Transactions\n\n\n        Partitioned DML transactions are used to execute DML statements with a\n\n        different execution strategy that provides different, and often better,\n\n        scalability properties for large, table-wide operations than DML in a\n\n        ReadWrite transaction. Smaller scoped statements, such as an OLTP workload,\n\n        should prefer using ReadWrite transactions.\n\n\n        Partitioned DML partitions the keyspace and runs the DML statement on each\n\n        partition in separate, internal transactions. These transactions commit\n\n        automatically when complete, and run independently from one another.\n\n\n        To reduce lock contention, this execution strategy only acquires read locks\n\n        on rows that match the WHERE clause of the statement. Additionally, the\n\n        smaller per-partition transactions hold locks for less time.\n\n\n        That said, Partitioned DML is not a drop-in replacement for standard DML used\n\n        in ReadWrite transactions.\n\n         - The DML statement must be fully-partitionable. Specifically, the statement\n           must be expressible as the union of many statements which each access only\n           a single row of the table.\n\n         - The statement is not applied atomically to all rows of the table. Rather,\n           the statement is applied atomically to partitions of the table, in\n           independent transactions. Secondary index rows are updated atomically\n           with the base table rows.\n\n         - Partitioned DML does not guarantee exactly-once execution semantics\n           against a partition. The statement will be applied at least once to each\n           partition. It is strongly recommended that the DML statement should be\n           idempotent to avoid unexpected results. For instance, it is potentially\n           dangerous to run a statement such as\n           `UPDATE table SET column = column + 1` as it could be run multiple times\n           against some rows.\n\n         - The partitions are committed automatically - there is no support for\n           Commit or Rollback. If the call returns an error, or if the client issuing\n           the ExecuteSql call dies, it is possible that some rows had the statement\n           executed on them successfully. It is also possible that statement was\n           never executed against other rows.\n\n         - Partitioned DML transactions may only contain the execution of a single\n           DML statement via ExecuteSql or ExecuteStreamingSql.\n\n         - If any error is encountered during the execution of the partitioned DML\n           operation (for instance, a UNIQUE INDEX violation, division by zero, or a\n           value that cannot be stored due to schema constraints), then the\n           operation is stopped at that point and an error is returned. It is\n           possible that at this point, some partitions have been committed (or even\n           committed multiple times), and other partitions have not been run at all.\n\n        Given the above, Partitioned DML is good fit for large, database-wide,\n\n        operations that are idempotent, such as deleting old rows from a very large\n\n        table.\n      properties:\n        partitionedDml:\n          $ref: \"#/components/schemas/PartitionedDml\"\n        readOnly:\n          $ref: \"#/components/schemas/ReadOnly\"\n        readWrite:\n          $ref: \"#/components/schemas/ReadWrite\"\n      type: object\n    TransactionSelector:\n      description: |-\n        This message is used to select the transaction in which a\n        Read or\n        ExecuteSql call runs.\n\n        See TransactionOptions for more information about transactions.\n      properties:\n        begin:\n          $ref: \"#/components/schemas/TransactionOptions\"\n        id:\n          description: Execute the read or SQL query in a previously-started transaction.\n          format: byte\n          type: string\n        singleUse:\n          $ref: \"#/components/schemas/TransactionOptions\"\n      type: object\n    Type:\n      description: \u003e-\n        `Type` indicates the type of a Cloud Spanner value, as might be stored\n        in a\n\n        table cell or returned from an SQL query.\n      properties:\n        arrayElementType:\n          $ref: \"#/components/schemas/Type\"\n        code:\n          description: Required. The TypeCode for this type.\n          enum:\n            - TYPE_CODE_UNSPECIFIED\n            - BOOL\n            - INT64\n            - FLOAT64\n            - TIMESTAMP\n            - DATE\n            - STRING\n            - BYTES\n            - ARRAY\n            - STRUCT\n          type: string\n        structType:\n          $ref: \"#/components/schemas/StructType\"\n      type: object\n    UpdateDatabaseDdlMetadata:\n      description: |-\n        Metadata type for the operation returned by\n        UpdateDatabaseDdl.\n      properties:\n        commitTimestamps:\n          description: |-\n            Reports the commit timestamps of all statements that have\n            succeeded so far, where `commit_timestamps[i]` is the commit\n            timestamp for the statement `statements[i]`.\n          items:\n            format: google-datetime\n            type: string\n          type: array\n        database:\n          description: The database being modified.\n          type: string\n        statements:\n          description: |-\n            For an update this list contains all the statements. For an\n            individual statement, this list contains only that statement.\n          items:\n            type: string\n          type: array\n      type: object\n    UpdateDatabaseDdlRequest:\n      description: |-\n        Enqueues the given DDL statements to be applied, in order but not\n        necessarily all at once, to the database schema at some point (or\n        points) in the future. The server checks that the statements\n        are executable (syntactically valid, name tables that exist, etc.)\n        before enqueueing them, but they may still fail upon\n        later execution (e.g., if a statement from another batch of\n        statements is applied first and it conflicts in some way, or if\n        there is some data-related problem like a `NULL` value in a column to\n        which `NOT NULL` would be added). If a statement fails, all\n        subsequent statements in the batch are automatically cancelled.\n\n        Each batch of statements is assigned a name which can be used with\n        the Operations API to monitor\n        progress. See the\n        operation_id field for more\n        details.\n      properties:\n        operationId:\n          description: |-\n            If empty, the new update request is assigned an\n            automatically-generated operation ID. Otherwise, `operation_id`\n            is used to construct the name of the resulting\n            Operation.\n\n            Specifying an explicit operation ID simplifies determining\n            whether the statements were executed in the event that the\n            UpdateDatabaseDdl call is replayed,\n            or the return value is otherwise lost: the database and\n            `operation_id` fields can be combined to form the\n            name of the resulting\n            longrunning.Operation: `\u003cdatabase\u003e/operations/\u003coperation_id\u003e`.\n\n            `operation_id` should be unique within the database, and must be\n            a valid identifier: `a-z*`. Note that\n            automatically-generated operation IDs always begin with an\n            underscore. If the named operation already exists,\n            UpdateDatabaseDdl returns\n            `ALREADY_EXISTS`.\n          type: string\n        statements:\n          description: DDL statements to be applied to the database.\n          items:\n            type: string\n          type: array\n      type: object\n    UpdateInstanceMetadata:\n      description: |-\n        Metadata type for the operation returned by\n        UpdateInstance.\n      properties:\n        cancelTime:\n          description: \u003e-\n            The time at which this operation was cancelled. If set, this\n            operation is\n\n            in the process of undoing itself (which is guaranteed to succeed) and\n\n            cannot be cancelled again.\n          format: google-datetime\n          type: string\n        endTime:\n          description: The time at which this operation failed or was completed\n            successfully.\n          format: google-datetime\n          type: string\n        instance:\n          $ref: \"#/components/schemas/Instance\"\n        startTime:\n          description: |-\n            The time at which UpdateInstance\n            request was received.\n          format: google-datetime\n          type: string\n      type: object\n    UpdateInstanceRequest:\n      description: The request for UpdateInstance.\n      properties:\n        fieldMask:\n          description: \u003e-\n            Required. A mask specifying which fields in\n            [][google.spanner.admin.instance.v1.UpdateInstanceRequest.instance]\n            should be updated.\n\n            The field mask must always be specified; this prevents any future fields in\n\n            [][google.spanner.admin.instance.v1.Instance] from being erased accidentally by clients that do not know\n\n            about them.\n          format: google-fieldmask\n          type: string\n        instance:\n          $ref: \"#/components/schemas/Instance\"\n      type: object\n    Write:\n      description: |-\n        Arguments to insert, update, insert_or_update, and\n        replace operations.\n      properties:\n        columns:\n          description: |-\n            The names of the columns in table to be written.\n\n            The list of columns must contain enough columns to allow\n            Cloud Spanner to derive values for all primary key columns in the\n            row(s) to be modified.\n          items:\n            type: string\n          type: array\n        table:\n          description: Required. The table whose rows will be written.\n          type: string\n        values:\n          description: |-\n            The values to be written. `values` can contain more than one\n            list of values. If it does, then multiple rows are written, one\n            for each entry in `values`. Each list in `values` must have\n            exactly as many entries as there are entries in columns\n            above. Sending multiple lists is equivalent to sending multiple\n            `Mutation`s, each containing one `values` entry and repeating\n            table and columns. Individual values in each list are\n            encoded as described here.\n          items:\n            items: {}\n            type: array\n          type: array\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-spanner-v1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-spanner-v1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/{database}\": delete: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}