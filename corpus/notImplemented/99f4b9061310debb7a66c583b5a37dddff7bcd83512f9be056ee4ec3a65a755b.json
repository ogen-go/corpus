{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/docs-is"
		},
		"file": {
			"name": "tenant-management.yaml",
			"size": 0,
			"path": "en/docs/apis/restapis/tenant-management.yaml",
			"byteSize": 21293,
			"content": "openapi: 3.0.0\ninfo:\n  version: \"v1\"\n  title: WSO2 Identity Server - Tenant Management API\n  description: \u003e-\n    This is the RESTful API for managing Tenants in the WSO2 Identity\n    Server.\n  contact:\n    name: WSO2 Identity Server\n    url: 'https://wso2.com/identity-and-access-management/'\n    email: architecture@wso2.com\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nsecurity:\n  - OAuth2: []\n  - BasicAuth: []\npaths:\n  /tenants:\n    get:\n      tags:\n        - Tenants\n      summary: Retrieve all tenants.\n      operationId: retrieveTenants\n      description: |\n        Retrieve all tenants in the system.\n\n        \u003cb\u003ePermission required:\u003c/b\u003e\n        * /permission/protected/manage/monitor/tenants/list\n\n        \u003cb\u003escope required:\u003c/b\u003e\n        * internal_list_tenants\n      parameters:\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/offsetQueryParam'\n        - $ref: '#/components/parameters/sortOrderQueryParam'\n        - $ref: '#/components/parameters/sortByQueryParam'\n        - $ref: '#/components/parameters/filterQueryParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/TenantsListResponse'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n        '501':\n          description: Not Implemented\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n        - Tenants\n      summary: Add tenant.\n      operationId: addTenant\n      description: |\n        This API provides the capability to create new tenants.\n\n        \u003cb\u003ePermission required:\u003c/b\u003e\n        * /permission/protected/manage/monitor/tenants/list\n\n        \u003cb\u003escope required:\u003c/b\u003e\n        * internal_list_tenants\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TenantModel'\n        description: This represents the tenant to be created.\n        required: true\n      responses:\n        '201':\n          description: Item Created\n          headers:\n            location:\n              description: Location of the newly created tenant\n              schema:\n                type: string\n        '400':\n          $ref: '#/components/responses/InvalidInput'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '409':\n          $ref: '#/components/responses/Conflict'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /channel-verified-tenants:\n    post:\n      tags:\n        - Tenants\n      summary: Add tenant.\n      operationId: addChannelVerifiedTenant\n      description: |\n        This API provides the capability to create new channel verified tenants.\n\n        \u003cb\u003ePermission required:\u003c/b\u003e\n        * /permission/protected/manage/monitor/tenants/list\n\n        \u003cb\u003escope required:\u003c/b\u003e\n        * internal_list_tenants\n\n        \u003cb\u003e cURL\u003c/b\u003e\n        curl -k -v -X POST -H \"Authorization: Basic YWRtaW5Ad3NvMi5jb206YWRtaW4=\" -H \"Content-Type: application/json\" -d '{ \"domain\":\"lanka.com\", \"purpose\":\"Personal\", \"code\":\"2d962a0b-9280-4394-8652-0137a25d9bac\", \"owners\":[ { \"username\":\"lanka@wso2.com\", \"email\":\"lanka@wso2.com\",\"password\":\"Pass#word2\", \"firstname\":\"Lanka\", \"lastname\":\"Jaya\", \"provisioningMethod\":\"verified-lite-user\", \"additionalClaims\":[ { \"claim\":\"http://wso2.org/claims/telephone\", \"value\":\"+94 562 8723\" } ] } ] }' \"https://localhost:9443/t/carbon.super/api/server/v1/channel-verified-tenants\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChannelVerifiedTenantModel'\n        description: This represents the tenant to be created.\n        required: true\n      responses:\n        '201':\n          description: Item Created\n          headers:\n            location:\n              description: Location of the newly created tenant\n              schema:\n                type: string\n        '400':\n          $ref: '#/components/responses/InvalidInput'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '409':\n          $ref: '#/components/responses/Conflict'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/tenants/{tenant-id}':\n    get:\n      tags:\n        - Tenants\n      summary: Retrieve tenant by tenant ID.\n      operationId: getTenant\n      description: |\n        Retrieve tenant using the tenant ID.\n\n        \u003cb\u003ePermission required:\u003c/b\u003e\n        * /permission/protected/manage/monitor/tenants/list\n\n        \u003cb\u003escope required:\u003c/b\u003e\n        * internal_list_tenants\n      parameters:\n        - $ref: '#/components/parameters/tenantIdPathParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/TenantResponseModel'\n        '400':\n          $ref: '#/components/responses/InvalidInput'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/tenants/domain/{tenant-domain}':\n    get:\n      tags:\n        - Tenants\n      summary: Get tenant by domain.\n      operationId: getTenantByDomain\n      description: |\n        Get the tenant using domain.\n\n        \u003cb\u003ePermission required:\u003c/b\u003e\n        * /permission/protected/manage/monitor/tenants/list\n\n        \u003cb\u003escope required:\u003c/b\u003e\n        * internal_list_tenants\n      parameters:\n        - $ref: '#/components/parameters/tenantDomainPathParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/TenantResponseModel'\n        '400':\n          $ref: '#/components/responses/InvalidInput'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n    head:\n      tags:\n        - Tenants\n      summary: Check domain Existence.\n      operationId: isDomainExist\n      description: |\n        Check the tenant existence using domain.\n\n        \u003cb\u003ePermission required:\u003c/b\u003e\n        * /permission/protected/manage/monitor/tenants/list\n\n        \u003cb\u003escope required:\u003c/b\u003e\n        * internal_list_tenants\n      parameters:\n        - $ref: '#/components/parameters/tenantDomainPathParam'\n      responses:\n        '200':\n          $ref: '#/components/responses/ResourceExist'\n        '400':\n          $ref: '#/components/responses/InvalidInput'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  '/tenants/{tenant-id}/lifecycle-status':\n    put:\n      tags:\n        - Tenants\n      summary: Activate or deactivate tenant.\n      operationId: updateTenantStatus\n      description: |\n        This API activates/deactivates the specified tenant.\n\n        \u003cb\u003ePermission required:\u003c/b\u003e\n        * /permission/protected/manage/modify/tenants\n\n        \u003cb\u003escope required:\u003c/b\u003e\n        * internal_modify_tenants\n      parameters:\n        - $ref: '#/components/parameters/tenantIdPathParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TenantPutModel'\n        description: This represents the tenant to be updated.\n        required: true\n      responses:\n        '200' :\n          description: Successfully updated\n          headers:\n            Location:\n              description: Location of the updated tenant.\n              schema:\n                type: string\n        '400':\n          $ref: '#/components/responses/InvalidInput'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '409':\n          $ref: '#/components/responses/Conflict'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/tenants/{tenant-id}/owners':\n    get:\n      tags:\n        - Tenants\n      summary: Retrieve tenant's owners.\n      operationId: getOwners\n      description: |\n        Retrieve owners of the tenant which are identified by the provided tenant id.\n\n        \u003cb\u003ePermission required:\u003c/b\u003e\n        * /permission/protected/manage/monitor/tenants/list\n\n        \u003cb\u003escope required:\u003c/b\u003e\n        * internal_list_tenants\n      parameters:\n        - $ref: '#/components/parameters/tenantIdPathParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OwnerResponse'\n\n        '400':\n          $ref: '#/components/responses/InvalidInput'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/tenants/{tenant-id}/metadata':\n      delete:\n        tags:\n          - Tenants\n        summary: |\n          Delete tenant's metadata by ID\n        operationId: deleteTenantMetadata\n        description: |\n          This API provides the capability to delete the tenant meta data(tenant specific data like tenant domain,\n          tenant owner details). \u003cbr\u003e\n            \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n                * /permission/protected/manage/modify/tenants \u003cbr\u003e\n            \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n                * internal_modify_tenants\n        parameters:\n          - $ref: '#/components/parameters/tenantIdPathParam'\n        responses:\n          '204':\n            description: Successfully Deleted\n          '400':\n            description: Bad Request\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'\n          '401':\n            description: Unauthorized\n          '403':\n            description: Forbidden\n          '404':\n            description: Not Found\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'\n          '500':\n            description: Server Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'\n\nservers:\n  - url: 'https://localhost:9443/t/{tenant-domain}/api/server/v1'\n    variables:\n      tenant-domain:\n        default: carbon.super\n\ncomponents:\n  parameters:\n    tenantIdPathParam:\n      in: path\n      name: tenant-id\n      required: true\n      description: tenant id\n      schema:\n        type: string\n    tenantDomainPathParam:\n      in: path\n      name: tenant-domain\n      required: true\n      description: tenant domain\n      schema:\n        type: string\n    offsetQueryParam:\n      in: query\n      name: offset\n      description: \u003e-\n        Number of records to skip for pagination.\n      schema:\n        type: integer\n        format: int32\n        minimum: 0\n    limitQueryParam:\n      in: query\n      name: limit\n      description: \u003e-\n        Maximum number of records to return.\n      schema:\n        type: integer\n        format: int32\n        minimum: 0\n    sortOrderQueryParam:\n      in: query\n      name: sortOrder\n      required: false\n      description: \u003e-\n        Define the order in which the retrieved tenants should be sorted.\n      schema:\n        type: string\n        enum:\n          - asc\n          - desc\n    sortByQueryParam:\n      in: query\n      name: sortBy\n      required: false\n      description: \u003e-\n        Attribute by which the retrieved records should be sorted. Currently sorting through _\u003cb\u003edomainName\u003cb\u003e_ only\n        supported.\n      schema:\n        type: string\n    filterQueryParam:\n      in: query\n      name: filter\n      required: false\n      description: \u003e\n        Condition to filter the retrival of records. Supports 'sw', 'co', 'ew'\n        and 'eq' operations and also complex queries with 'and' operations. E.g.\n        /tenants?filter=domain+sw+\"wso2\". _\u003cb\u003eThis\n        option is not yet supported.\u003cb\u003e_\n      schema:\n        type: string\n  responses:\n    NotFound:\n      description: The specified resource is not found\n      content:\n        'application/json':\n          schema:\n            $ref: '#/components/schemas/Error'\n    Unauthorized:\n      description: Unauthorized\n    Forbidden:\n      description: Resource Forbidden\n    ResourceExist:\n      description: Requested Resource Exists\n    ServerError:\n      description: Internal Server Error\n      content:\n        'application/json':\n          schema:\n            $ref: '#/components/schemas/Error'\n    InvalidInput:\n      description: Invalid Input Request\n      content:\n        'application/json':\n          schema:\n            $ref: '#/components/schemas/Error'\n    Conflict:\n      description: Element Already Exists\n      content:\n        'application/json':\n          schema:\n            $ref: '#/components/schemas/Error'\n    Deleted:\n      description: No Content\n    Updated:\n      description: Successful\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    OAuth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://localhost:9443/oauth2/authorize'\n          tokenUrl: 'https://localhost:9443/oauth2/token'\n          scopes: {}\n  schemas:\n    TenantModel:\n      type: object\n      required:\n        - domain\n        - owners\n      properties:\n        domain:\n          type: string\n          example: wso2.com\n          description: Tenant domain of the tenant.\n        owners:\n          type: array\n          items:\n            $ref: '#/components/schemas/Owner'\n\n    ChannelVerifiedTenantModel:\n      type: object\n      required:\n        - domain\n        - owners\n        - code\n      properties:\n        domain:\n          type: string\n          example: wso2.com\n          description: Tenant domain of the tenant.\n        code:\n          type: string\n          example: 3723dghdg32yt236734563236\n          description: Tenant domain of the tenant.\n        purpose:\n          $ref: '#/components/schemas/Purpose'\n        owners:\n          type: array\n          items:\n            $ref: '#/components/schemas/Owner'\n\n    TenantListItem:\n      type: object\n      properties:\n        id:\n          type: string\n          example: \"123e4567-e89b-12d3-a456-556642440000\"\n          description: tenant id of the tenant owner.\n        domain:\n          type: string\n          example: abc.com\n          description: Tenant domain of the tenant.\n        owners:\n          type: array\n          items:\n            $ref: '#/components/schemas/OwnerResponse'\n        createdDate:\n          type: string\n          example: \"2020-03-03T17:04:06.570+05:30\"\n          readOnly: true\n          description: Tenant created time.\n        lifecycleStatus:\n          $ref: '#/components/schemas/LifeCycleStatus'\n        region:\n          type: string\n          example: \"USA\"\n          readOnly: true\n          description: Region of the tenant.\n\n    TenantsListResponse:\n      type: object\n      properties:\n        totalResults:\n          type: integer\n          example: 10\n        startIndex:\n          type: integer\n          example: 1\n        count:\n          type: integer\n          example: 10\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n          example:\n            [\n                {\n                    \"href\": \"/t/carbon.super/api/server/v1/tenants?offset=50\u0026limit=10\",\n                    \"rel\": \"next\",\n                },  {\n                    \"href\": \"/t/carbon.super/api/server/v1/tenants?offset=30\u0026limit=10\",\n                    \"rel\": \"previous\",\n                }\n            ]\n        tenants:\n          type: array\n          items:\n            $ref: '#/components/schemas/TenantListItem'\n\n    TenantResponseModel:\n      type: object\n      properties:\n        id:\n          type: string\n          example: \"123e4567-e89b-12d3-a456-556642440000\"\n          description: tenant id of the tenant owner.\n        domain:\n          type: string\n          example: abc.com\n          description: Tenant domain of the tenant.\n        owners:\n          type: array\n          items:\n            $ref: '#/components/schemas/OwnerResponse'\n        createdDate:\n          type: string\n          example: \"2020-06-19T17:36:46.271Z\"\n          readOnly: true\n          description: Tenant created time in ISO-8601 format.\n        lifecycleStatus:\n          $ref: '#/components/schemas/LifeCycleStatus'\n        region:\n          type: string\n          example: \"USA\"\n          readOnly: true\n          description: Region of the tenant.\n\n    TenantPutModel:\n      type: object\n      required:\n        - lifecycleStatus\n      properties:\n        activated:\n          type: boolean\n          example: false\n          description: Active status of the tenant.\n\n    Owner:\n      type: object\n      required:\n        - username\n        - email\n        - firstname\n        - lastname\n        - provisioningMethod\n      properties:\n        username:\n          type: string\n          example: kim\n          description: Username for the tenant owner.\n        password:\n          type: string\n          example: kim123\n          description: Password of the owner.\n        email:\n          type: string\n          example: kim@wso2.com\n          description: Email address of the owner.\n        firstname:\n          type: string\n          example: kim\n          description: First name of the owner.\n        lastname:\n          type: string\n          example: kim\n          description: Last name of the owner.\n        provisioningMethod:\n          type: string\n          example: inline-password\n          description: If the provisioning method is inline-password then a valid password should be sent in the request body, if the provisioning method is invite-via-email then password doesn't need to be send through request body, instead an emai link will be sent to the given email address to set the password.\n        additionalClaims:\n          type: array\n          items:\n            $ref: '#/components/schemas/AdditionalClaims'\n\n    OwnerResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: \"4875-jhgr-454hb\"\n          description: id of the tenant owner.\n        username:\n          type: string\n          example: \"kim\"\n          description: user name of the tenant owner.\n\n    AdditionalClaims:\n      type: object\n      properties:\n        claim:\n          type: string\n          example: \"http://wso2.org/claims/telephone\"\n          description: Claim uri.\n        value:\n          type: string\n          example: \"+94 562 8723\"\n          description: Mobile number of the tenant owner.\n\n    Attribute:\n      type: object\n      properties:\n        key:\n          type: string\n          example: \"Organization Name\"\n          description: Name of the organization.\n        value:\n          type: string\n          example: \"Asgardio\"\n          description: Name of the organization.\n\n    Purpose:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          example: Personal\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/Attribute'\n\n    LifeCycleStatus:\n      type: object\n      properties:\n        activated:\n          type: boolean\n          example: true\n          description: Status of the tenant life cycle\n\n    Link:\n      type: object\n      properties:\n        href:\n          type: string\n          description: Path to the target resource.\n          example: \u003e-\n            '/t/carbon.super/api/server/v1/tenants/394b8adcce24c64a8a09a8d80abf8c337bd253de'\n        rel:\n          type: string\n          description: Describes how the current context is related to the target resource\n          example: tenants\n      readOnly: true\n\n\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: string\n          example: ETM10001\n        message:\n          type: string\n          example: Some Error Message\n        description:\n          type: string\n          example: Some Error Description\n        traceId:\n          type: string\n          example: 3erfee-232-efewv-2321-43ferfe24r",
			"canonicalURL": "/github.com/wso2/docs-is@f2d50568ff23afffacf786beeec7725e7e41fd60/-/blob/en/docs/apis/restapis/tenant-management.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/docs-is/blob/f2d50568ff23afffacf786beeec7725e7e41fd60/en/docs/apis/restapis/tenant-management.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/tenants\": get: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}