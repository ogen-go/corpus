{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/identity-api-server"
		},
		"file": {
			"name": "secretManager.yaml",
			"size": 0,
			"path": "components/org.wso2.carbon.identity.api.server.secret.management/org.wso2.carbon.identity.api.server.secret.management.v1/src/main/resources/secretManager.yaml",
			"byteSize": 19497,
			"content": "openapi: 3.0.0\ninfo:\n  title: WSO2 Identity Server - Secret Manager API Definition\n  description: This document specifies a **RESTful API** for **WSO2 Identity Server secret management**\n  contact:\n    name: WSO2\n    url: http://wso2.com/products/identity-server/\n    email: iam-dev@wso2.org\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: \"v1\"\nservers:\n  - url: https://localhost:9443/t/{tenant-domain}/api/server/v1\n    variables:\n      tenant-domain:\n        default: carbon.super\nsecurity:\n  - OAuth2: []\n  - BasicAuth: []\npaths:\n  \"/secret-type\":\n    post:\n      tags:\n        - Secret Type\n      description: |\n        This API is used to create a new secret type.\n      summary: |\n        Create secret type\n      operationId: createSecretType\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecretTypeAddRequest'\n      responses:\n        \"201\":\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecretTypeResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"405\":\n          description: Method Not Allowed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/secret-type/{name}':\n    get:\n      tags:\n        - Secret Type\n      summary: Retrieve secret type by name\n      description: |\n        This API provides the capability to retrieve a secret type.\n      operationId: getSecretType\n      parameters:\n        - name: name\n          in: path\n          description: name of the secret Type\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecretTypeResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"405\":\n          description: Method Not Allowed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n        - Secret Type\n      summary: Update a secret type\n      description: |\n        This API provides the capability to update a secret type by name.\n      operationId: updateSecretType\n      parameters:\n        - name: name\n          in: path\n          description: name of the secret type\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecretTypeUpdateRequest'\n        required: true\n      responses:\n        \"200\":\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecretTypeResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"405\":\n          description: Method Not Allowed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      tags:\n        - Secret Type\n      summary: Delete an secret type by name\n      description: |\n        This API provides the capability to delete a secret by\n        name.\n      operationId: deleteSecretType\n      parameters:\n        - name: name\n          in: path\n          description: name of the secret\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"405\":\n          description: Method Not Allowed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /secrets/{secret-type}:\n    get:\n      tags:\n        - Secret\n      summary: Get a list of configured secrets\n      description: |\n        This API provides the capability to retrieve the list of configured secrets.\n      operationId: getSecretsList\n      parameters:\n        - name: secret-type\n          in: path\n          description: name of the secret type\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecretsList'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"405\":\n          description: Method Not Allowed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n        - Secret\n      summary: Create a secret\n      description: |\n        This API provides the capability to create a secret\n      operationId: createSecret\n      parameters:\n        - name: secret-type\n          in: path\n          description: name of the secret type\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/secretAddRequest'\n\n      responses:\n        \"201\":\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecretResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"405\":\n          description: Method Not Allowed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/secrets/{secret-type}/{name}':\n    get:\n      tags:\n        - Secret\n      summary: Retrieve secret by name\n      description: |\n        This API provides the capability to retrieve a secret\n      operationId: getSecret\n      parameters:\n        - name: secret-type\n          in: path\n          description: name of the secret type\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: name of the secret\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecretResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"405\":\n          description: Method Not Allowed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n        - Secret\n      summary: Update a secret\n      description: |\n        This API provides the capability to update a secret name.\n      operationId: updateSecret\n      parameters:\n        - name: secret-type\n          in: path\n          description: name of the secret type\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: name of the secret\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecretUpdateRequest'\n\n        required: true\n      responses:\n        \"200\":\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecretResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"405\":\n          description: Method Not Allowed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n        - Secret\n      summary: Patch a secret by name.\n      description: \u003e\n        This API provides the capability to update a secret using patch request by using its name.\n      operationId: patchSecret\n      parameters:\n        - name: secret-type\n          in: path\n          description: name of the secret type\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: name of the secret\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecretPatchRequest'\n\n        required: true\n      responses:\n        \"200\":\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecretResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"405\":\n          description: Method Not Allowed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n    delete:\n      tags:\n        - Secret\n      summary: Delete a secret by name\n      description: |\n        This API provides the capability to delete a secret by\n        name.\n      operationId: deleteSecret\n      parameters:\n        - name: secret-type\n          in: path\n          description: name of the secret type\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: name of the secret\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"405\":\n          description: Method Not Allowed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  schemas:\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n          example: SECRETM-00000\n        message:\n          type: string\n          example: Some Error Message\n        description:\n          type: string\n          example: Some Error Description\n        traceId:\n          type: string\n          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\n    secretAddRequest:\n      required:\n        - name\n        - value\n      type: object\n      properties:\n        name:\n          type: string\n          example: sample-secret\n        value:\n          type: string\n          example: sample-value\n        description:\n          type: string\n          example: Some Error Description\n\n    SecretResponse:\n      required:\n        - secretId\n        - secretName\n        - lastModified\n        - created\n        - type\n      type: object\n      properties:\n        secretId:\n          type: string\n          example: 30103923-923c-485f-a8f9-606398\n        secretName:\n          type: string\n          example: sample-secret\n        created:\n          type: string\n          example: 2021-09-29 10:36:24.976\n        lastModified:\n          type: string\n          example: 2021-09-29 10:36:24.976\n        type:\n          type: string\n          example: adaptive\n        description:\n          type: string\n          example: sample_description\n\n    SecretUpdateRequest:\n      required:\n        - value\n      type: object\n      properties:\n        value:\n          type: string\n          example: new-sample-value\n        description:\n          type: string\n          example: sample_description\n\n    SecretPatchRequest:\n      required:\n        - operation\n        - path\n      properties:\n        operation:\n          type: string\n          description: The operation to be performed\n          enum:\n            - ADD\n            - REMOVE\n            - REPLACE\n          example: REPLACE\n        path:\n          type: string\n          description: A JSON-Pointer\n          example: /value\n        value:\n          type: string\n          description: The value to be used within the operations\n          example: 'dummyValue'\n\n    SecretsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SecretResponse'\n\n    SecretTypeAddRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n\n    SecretTypeResponse:\n      type: object\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n        description:\n          type: string\n\n    SecretTypeUpdateRequest:\n      type: object\n      properties:\n        description:\n          type: string\n          example: sample_description\n\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    OAuth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://localhost:9443/oauth2/authorize\n          tokenUrl: https://localhost:9443/oauth2/token\n          scopes: {}\n",
			"canonicalURL": "/github.com/wso2/identity-api-server@1c81f70117e6130228ac537f8526ad3655061b43/-/blob/components/org.wso2.carbon.identity.api.server.secret.management/org.wso2.carbon.identity.api.server.secret.management.v1/src/main/resources/secretManager.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/identity-api-server/blob/1c81f70117e6130228ac537f8526ad3655061b43/components/org.wso2.carbon.identity.api.server.secret.management/org.wso2.carbon.identity.api.server.secret.management.v1/src/main/resources/secretManager.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/secret-type\": post: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}