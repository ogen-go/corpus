{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/chanzuckerberg/single-cell-data-portal"
		},
		"file": {
			"name": "curation-api.yml",
			"size": 0,
			"path": "backend/config/curation-api.yml",
			"byteSize": 30050,
			"content": "openapi: 3.0.0\ninfo:\n  version: \"1.0.0\"\n  title: Chan Zuckerburg Initiative cellxgene Data Portal Curator API\nservers:\n  - description: Production environment\n    url: https://api.corpora.cziscience.com\n  - description: Development environment\n    url: https://api.dev.corpora.cziscience.com\n  - description: Staging environment\n    url: https://api.staging.corpora.cziscience.com\npaths:\n  /v1/auth/token:\n    post:\n      summary: Generate an access token\n      tags:\n        - authentication\n      description: \u003e-\n        Returns a bearer access token that must be passed as a parameter to requests that\n        require authorization such as creating a new Collection.\n      operationId: backend.corpora.lambdas.api.v1.curation.auth.token.post\n      parameters:\n        - in: header\n          name: x-api-key\n          schema:\n            type: string\n            example: \"\u003cYOUR-CURATOR-API-KEY\u003e\"\n          required: true\n          description: Your curation API key.\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  access_token:\n                    type: string\n        \"401\":\n          $ref: \"#/components/responses/401\"\n\n  /v1/collections:\n    get:\n      summary: Fetch Collections metadata.\n      description: \u003e-\n        * When the visibility parameter is unspecified or set to `PUBLIC`, a list of all public collections is returned.\n        The Authorization header is not required. If a collection in the list has been deleted, then it is annotated\n        with tombstone set to True.\n\n        * When the visibility parameter is set to `PRIVATE`, a list of all private collections that the user is\n        authorized to access is returned. The Authorization header is required. If a collection in the list is a private\n        revision of a public collection, then it is annotated with revision_of.\n\n        * Each collection in the list contains a subset of collection metadata as a preview.\n\n        * To retrieve full collection metadata for a specific collection, `GET /v1/collections/{collection_uuid}`\n        must be used.\n      operationId: backend.corpora.lambdas.api.v1.collection.get_collections_curation\n      security:\n        - curatorAccessLenient: []\n        - {}\n      tags:\n        - collection\n      parameters:\n        - $ref: \"#/components/parameters/query_visibility\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  collections:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          $ref: \"#/components/schemas/collection_uuid\"\n                        name:\n                          type: string\n                        visibility:\n                          $ref: \"#/components/schemas/visibility\"\n                        collection_url:\n                          type: string\n                        contact_name:\n                          type: string\n                        contact_email:\n                          type: string\n                        curator_name:\n                          type: string\n                        revised_at:\n                          type: number\n                          nullable: true\n                        created_at:\n                          type: number\n                        links:\n                          $ref: \"#/components/schemas/links\"\n                        datasets:\n                          type: array\n                          items:\n                            $ref: \"#/components/schemas/dataset_preview\"\n                        access_type:\n                          type: string\n                          enum: [READ, WRITE]\n                        published_at:\n                          type: number\n                          nullable: true\n                        description:\n                          type: string\n                        publisher_metadata:\n                          $ref: \"#/components/schemas/publisher_metadata\"\n                          nullable: true\n                        revision_of:\n                          type: string\n                          nullable: true\n                        tombstone:\n                          type: boolean\n                        processing_status:\n                          $ref: \"#/components/schemas/processing_status\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n    post:\n      summary: Create a Collection\n      description: Create a new Collection\n      operationId: backend.corpora.lambdas.api.v1.collection.create_collection\n      tags:\n        - collection\n      security:\n        - curatorAccess: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/collection_form_metadata\"\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  collection_uuid:\n                    $ref: \"#/components/schemas/collection_uuid\"\n        \"400\":\n          $ref: \"#/components/responses/400_multiple\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n\n  /v1/collections/{collection_uuid}:\n    get:\n      summary: Fetch a Collection with Datasets\n      description: Fetch full Collection metadata and associated Datasets.\n      operationId: backend.corpora.lambdas.api.v1.collection.get_collection_details\n      security:\n        - curatorAccessLenient: []\n        - {}\n      tags:\n        - collection\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_uuid\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    $ref: \"#/components/schemas/collection_uuid\"\n                  name:\n                    type: string\n                  visibility:\n                    $ref: \"#/components/schemas/visibility\"\n                  collection_url:\n                    type: string\n                  contact_name:\n                    type: string\n                  contact_email:\n                    type: string\n                  curator_name:\n                    type: string\n                  revised_at:\n                    type: number\n                  created_at:\n                    type: number\n                  links:\n                    $ref: \"#/components/schemas/links\"\n                  datasets:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/dataset\"\n                  access_type:\n                    type: string\n                    enum: [READ, WRITE]\n                  published_at:\n                    type: number\n                  description:\n                    type: string\n                  publisher_metadata:\n                    $ref: \"#/components/schemas/publisher_metadata\"\n                  revision_of:\n                    type: string\n                  tombstone:\n                    type: boolean\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n    put:\n      summary: Update a Collection's metadata.\n      description: \u003e-\n        Update a private Collection or a Revision. If any Collection metadata fields are included in the body of the\n        request, these fields SHALL be updated for the specified Collection.\n      operationId: backend.corpora.lambdas.api.v1.collection.update_collection\n      security:\n        - curatorAccess: []\n      tags:\n        - collection\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_uuid\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/collection_form_metadata\"\n            examples:\n              update_name:\n                summary: Update the name\n                value:\n                  name: \"New Collection name\"\n              update_description:\n                summary: Update the description\n                value:\n                  description: \"New Collection description\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200\"\n        \"201\":\n          $ref: \"#/components/responses/201\"\n        \"400\":\n          $ref: \"#/components/responses/400_multiple\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n    delete:\n      summary: Delete a private collection.\n      description: \u003e-\n        Delete a private collection or cancel a revision.\n      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_uuid.actions.delete\n      security:\n        - curatorAccess: []\n      tags:\n        - collection\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_uuid\"\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/204\"\n        \"400\":\n          $ref: \"#/components/responses/400_multiple\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"405\":\n          $ref: \"#/components/responses/405\"\n  /v1/collections/{collection_uuid}/revision:\n    post:\n      summary: Start a revision of a published Collection\n      description: \u003e-\n        This starts a Revision of a published Collection. A Revision is a private Collection that is a copy of a\n        published Collection. When published, a Revision replaces the original published Collection in-place. Only one\n        ongoing Revision may exist per published Collection at any given time.\n\n        All methods of updating or adding Datasets and metadata to a Revision work the same as for a private Collection.\n      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_uuid.revision.post_collection_revision\n      security:\n        - curatorAccess: []\n      tags:\n        - collection\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_uuid\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  revision_id:\n                    $ref: \"#/components/schemas/collection_uuid\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"409\":\n          $ref: \"#/components/responses/409\"\n\n  /v1/collections/{collection_uuid}/datasets:\n    delete:\n      summary: Delete a private Dataset\n      description: \u003e-\n        Delete a Dataset. The **collection_uuid** MUST reference either a private Collection OR a Revision. MUST\n        indicate the Dataset by providing *one* of either the **curator_tag** (non-null) OR the **dataset_uuid**\n        parameters.\n      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_uuid.dataset.delete_dataset\n      tags:\n        - collection\n      security:\n        - curatorAccess: []\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_uuid\"\n        - $ref: \"#/components/parameters/query_curator_tag\"\n        - $ref: \"#/components/parameters/query_dataset_uuid\"\n      responses:\n        \"202\":\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n    patch:\n      summary: Update a Dataset's curator tag.\n      tags:\n        - collection\n      description: \u003e-\n        Update a Dataset's curator-provided tag. The Dataset MUST NOT belong to a published Collection. MUST indicate\n        the Dataset by providing *one* of either the **curator_tag** (non-null) OR the **dataset_uuid** parameters.\n      security:\n        - curatorAccess: []\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_uuid\"\n        - $ref: \"#/components/parameters/query_curator_tag\"\n        - $ref: \"#/components/parameters/query_dataset_uuid\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: false\n              properties:\n                curator_tag:\n                  type: string\n                  description: curator-provided tag\n            example:\n              curator_tag: \"new/curator_tag\"\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/204\"\n        \"400\":\n          $ref: \"#/components/responses/400_multiple\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n\n  /v1/collections/{collection_uuid}/datasets/upload-link:\n    put:\n      summary: Upload a Dataset by providing a link\n      description: \u003e-\n        Upload a Dataset. The Dataset will be uploaded from the provided link. MUST include a **curator_tag** in the\n        request body; if an existing Dataset has this tag, the existing Dataset SHALL be replaced, otherwise a new\n        Dataset will be added. MAY include the **id** of an existing Dataset, in which case the existing Dataset\n        SHALL be replaced.\n      operationId: backend.corpora.lambdas.api.v1.collection_uuid.upload.relink\n      tags:\n        - collection\n      security:\n        - curatorAccess: []\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_uuid\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: false\n              properties:\n                curator_tag:\n                  type: string\n                id:\n                  $ref: \"#/components/schemas/dataset_uuid\"\n                link:\n                  $ref: \"#/components/schemas/upload_link\"\n            examples:\n              tag:\n                summary: Using the tag\n                value:\n                  curator_tag: \"\u003cnew_or_existing_tag\u003e\"\n                  link: \"\u003cdownload_link_for_data_source_file\u003e\"\n              id:\n                summary: Using the dataset uuid\n                value:\n                  id: \"\u003cexisting_dataset_uuid\u003e\"\n                  link: \"\u003cdownload_link_for_data_source_file\u003e\"\n      responses:\n        \"202\":\n          $ref: \"#/components/responses/202\"\n        \"400\":\n          $ref: \"#/components/responses/400_multiple\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n\n  /v1/collections/{collection_uuid}/datasets/s3-upload-credentials:\n    post:\n      summary: Get credentials for uploading local files\n      tags:\n        - collection\n      description: \u003e-\n        Retrieve temporary AWS credentials for uploading Dataset source files to S3 to create\n        or update Datasets for the specified Collection.\n\n        * Uploads to \u003croot_bucket\u003e MUST take the form of `s3://\u003croot_bucket\u003e/\u003ccollection_uuid\u003e/\u003ccurator_tag\u003e`.\n\n        * `\u003ccollection_uuid\u003e` MUST NOT be a published Collection. Only uploads to private Collections\n        (unpublished OR ongoing Revision) will be processed.\n\n        * If there is no Dataset with tag `\u003ccurator_tag\u003e` in `\u003ccollection_uuid\u003e`, a new Dataset SHALL be added.\n\n        * If there is an existing Dataset with tag `\u003ccurator_tag\u003e` in `\u003ccollection_uuid\u003e`, the existing Dataset\n        SHALL be replaced.\n\n\n        The response contains the credentials required for uploading to our AWS S3 bucket:\n\n        * access_key\n\n        * secret_access_key\n\n        * session_token\n\n\n        To upload the files to S3, use the Python boto3 package. Once a file is successfully uploaded, it wil be\n        processed and added to the Collection (specified in the S3 key path) with no further user action required.\n        Include an email address in the S3 file upload metadata to receive processing and error notifications.\n        Alternatively, use `/curation/collections/{collection_uuid}/datasets/status` to check on the processing\n        status for a given Dataset.\n\n      security:\n        - curatorAccess: []\n      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_uuid.dataset.post_s3_credentials\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_uuid\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  credentials:\n                    type: object\n                    properties:\n                      AccessKeyId:\n                        type: string\n                      SecretAccessKey:\n                        type: string\n                      SessionToken:\n                        type: string\n                  UploadKeyPrefix:\n                    type: string\n                  Bucket:\n                    type: string\n        \"401\":\n          $ref: \"#/components/responses/401\"\n\n  /v1/collections/{collection_uuid}/datasets/status:\n    get:\n      summary: Get a Dataset's processing status\n      tags:\n        - collection\n      description: \u003e-\n        Get the processing status for a Dataset. MUST indicate the Dataset by providing *one* of either the\n        **curator_tag** (non-null) OR the **dataset_uuid** parameters.\n      security:\n        - curatorAccess: []\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_uuid\"\n        - $ref: \"#/components/parameters/query_curator_tag\"\n        - $ref: \"#/components/parameters/query_dataset_uuid\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    $ref: \"#/components/schemas/processing_status\"\n                  file_statuses:\n                    type: object\n                    properties:\n                      cxg:\n                        $ref: \"#/components/schemas/conversion_status\"\n                      h5ad:\n                        $ref: \"#/components/schemas/conversion_status\"\n                      rds:\n                        $ref: \"#/components/schemas/conversion_status\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n\n  /v1/collections/{collection_uuid}/asset:\n    get:\n      summary: Retrieve links for downloading a dataset\n      tags:\n        - collection\n      description: \u003e-\n        Request to download a file which on success will generate and return a pre-signed URL to download\n        the dataset. MUST include *one* of the **curator_tag** and **dataset_uuid** parameters.\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_uuid\"\n        - $ref: \"#/components/parameters/query_curator_tag\"\n        - $ref: \"#/components/parameters/query_dataset_uuid\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  dataset_uuid:\n                    $ref: \"#/components/schemas/dataset_uuid\"\n                  curator_tag:\n                    $ref: \"#/components/schemas/curator_tag\"\n                  assets:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        presigned_url:\n                          type: string\n                        file_name:\n                          type: string\n                        file_size:\n                          type: number\n                        filetype:\n                          type: string\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n\ncomponents:\n  schemas:\n    collection_uuid:\n      description: A unique identifier of a Collection.\n      type: string\n      example: fedcba98-7654-3210-fedc-ba9876543210\n    conversion_status:\n      type: string\n      description: Status for a Dataset asset generated during initial Dataset source file processing\n      enum: [CONVERTED, CONVERTING, FAILED, NA, UPLOADING, UPLOADED, SKIPPED]\n    curator_tag:\n      description: A curator-provided tag for a Dataset that serves as a unique identifier *within a Collection*.\n      type: string\n      example: an/example/curator_tag.h5ad\n    dataset_uuid:\n      description: A unique identifier of a Dataset.\n      type: string\n      example: 01234567-89ab-cdef-0123-456789abcdef\n    visibility:\n      description: \u003e-\n        Determines the visibility of the collection, that will either make the collection visible on the public\n        sites or only viewable through obfuscated URLs.\n      type: string\n      enum: [PUBLIC, PRIVATE]\n      default: PUBLIC\n    distribution:\n      description: \u003e-\n        Cellxgene runs a heuristic to detect the approximate distribution of the data in X so that it can accurately\n        calculate statistical properties of the data. This field enables the curator to override this heuristic\n        and specify the data distribution explicitly.\n      type: string\n      enum: [COUNT, NORMAL]\n    is_primary_data:\n      description: \u003e-\n        Describes whether cellular observations for this dataset are all canonical (PRIMARY),\n        all non-canonical (SECONDARY), or contain a mixture (BOTH).\n      type: string\n      enum: [PRIMARY, SECONDARY, BOTH]\n    links:\n      type: array\n      items:\n        type: object\n        additionalProperties: false\n        required:\n          - link_url\n          - link_type\n        properties:\n          link_name:\n            type: string\n            nullable: true\n          link_url:\n            type: string\n            nullable: true\n          link_type:\n            type: string\n            enum: [PROTOCOL, RAW_DATA, DOI, LAB_WEBSITE, OTHER, DATA_SOURCE]\n            nullable: true\n    dataset:\n      allOf:\n        - $ref: \"#/components/schemas/dataset_preview\"\n        - type: object\n          properties:\n            name:\n              type: string\n            revision:\n              type: integer\n            revised_at:\n              type: number\n            is_primary_data:\n              $ref: \"#/components/schemas/is_primary_data\"\n            X_normalization:\n              type: string\n            dataset_assets:\n              type: array\n              items:\n                $ref: \"#/components/schemas/dataset_asset\"\n            sex:\n              $ref: \"#/components/schemas/ontology_elements\"\n            ethnicity:\n              $ref: \"#/components/schemas/ontology_elements\"\n            development_stage:\n              $ref: \"#/components/schemas/ontology_elements\"\n            dataset_deployments:\n              type: array\n              items:\n                type: object\n                properties:\n                  url:\n                    type: string\n            cell_type:\n              $ref: \"#/components/schemas/ontology_elements\"\n            cell_count:\n              type: integer\n            X_approximate_distribution:\n              $ref: \"#/components/schemas/distribution\"\n            batch_condition:\n              type: array\n              items:\n                type: string\n            mean_genes_per_cell:\n              type: number\n            schema_version:\n              type: string\n    dataset_preview:\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/dataset_uuid\"\n        curator_tag:\n          $ref: \"#/components/schemas/curator_tag\"\n          nullable: true\n        tissue:\n          $ref: \"#/components/schemas/ontology_elements\"\n        assay:\n          $ref: \"#/components/schemas/ontology_elements\"\n        disease:\n          $ref: \"#/components/schemas/ontology_elements\"\n        organism:\n          $ref: \"#/components/schemas/ontology_elements\"\n        tombstone:\n          type: boolean\n    dataset_asset:\n      type: object\n      properties:\n        filetype:\n          type: string\n          enum: [H5AD, RDS]\n        filename:\n          type: string\n    ontology_element:\n      type: object\n      properties:\n        ontology_term_id:\n          type: string\n        label:\n          type: string\n    ontology_elements:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ontology_element\"\n    problem:\n      type: object\n      description: Error message container for HTTP APIs.\n      properties:\n        type:\n          type: string\n        title:\n          type: string\n        detail:\n          type: string\n    processing_status:\n      type: string\n      description: Processing status for a Dataset or Collection\n      enum: [FAILURE, PENDING, SUCCESS]\n    publisher_metadata:\n      type: object\n      properties:\n        authors:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n              given:\n                type: string\n              family:\n                type: string\n        is_preprint:\n          type: boolean\n        journal:\n          type: string\n        published_day:\n          type: number\n        published_month:\n          type: number\n        published_year:\n          type: number\n    collection_form_metadata:\n      type: object\n      additionalProperties: false\n      required:\n        - name\n        - description\n        - contact_name\n        - contact_email\n      properties:\n        name:\n          type: string\n          description: name of the collection\n        description:\n          type: string\n          description: description of the collection\n        contact_name:\n          type: string\n          description: name of the primary person of contact for the collection\n        contact_email:\n          type: string\n          description: email of contact person for the collection\n        links:\n          $ref: \"#/components/schemas/links\"\n    upload_link:\n      description: A user-provided link to the dataset source file.\n      type: string\n\n  parameters:\n    query_curator_tag:\n      name: curator_tag\n      description: \u003e-\n        A curator-provided tag. MUST be unique within a given Collection. MAY be used to uniquely identify a Dataset\n        when using the Curator API. SHALL default to null for Datasets created using the Data Portal UI.\n      in: query\n      required: false\n      schema:\n        $ref: \"#/components/schemas/curator_tag\"\n    query_dataset_uuid:\n      name: dataset_uuid\n      description: The uuid of the Dataset.\n      in: query\n      required: false\n      schema:\n        $ref: \"#/components/schemas/dataset_uuid\"\n    path_collection_uuid:\n      name: collection_uuid\n      description: The uuid of a Collection.\n      in: path\n      required: true\n      schema:\n        $ref: \"#/components/schemas/collection_uuid\"\n    query_visibility:\n      name: visibility\n      description: The 'visibility' of a Collection (and its constituent Datasets).\n      in: query\n      required: false\n      schema:\n        $ref: \"#/components/schemas/visibility\"\n  responses:\n    200:\n      description: OK\n    201:\n      description: Created\n    202:\n      description: Accepted\n    204:\n      description: No content\n    400:\n      description: Invalid or missing parameter\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/problem\"\n    400_multiple:\n      description: Invalid or missing parameters\n      content:\n        application/problem+json:\n          schema:\n            type: array\n            items:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: the errant parameter\n                value:\n                  type: string\n                  description: the errant value\n                reason:\n                  type: string\n                  description: the specific problem with the parameter\n    401:\n      description: Failed to authenticate\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/problem\"\n    403:\n      description: Forbidden\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/problem\"\n    404:\n      description: Resource not found\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/problem\"\n    405:\n      description: Method not allowed\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/problem\"\n    409:\n      description: File conflict\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/problem\"\n    413:\n      description: Exceed File Size Limit\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/problem\"\n  securitySchemes:\n    curatorAccess:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n      x-bearerInfoFunc: backend.corpora.lambdas.api.v1.authentication.curation_apikey_info_func\n    curatorAccessLenient:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n      x-bearerInfoFunc: backend.corpora.lambdas.api.v1.authentication.curation_apikey_info_func_lenient\n",
			"canonicalURL": "/github.com/chanzuckerberg/single-cell-data-portal@6591fd9b0773db669ed694a6c5df1fa095d1de4d/-/blob/backend/config/curation-api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/chanzuckerberg/single-cell-data-portal/blob/6591fd9b0773db669ed694a6c5df1fa095d1de4d/backend/config/curation-api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/auth/token\": post: responses: 401: contents: unsupported content types: [application/problem+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}