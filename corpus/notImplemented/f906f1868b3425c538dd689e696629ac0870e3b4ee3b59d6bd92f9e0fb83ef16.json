{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/getzoop/api-docs"
		},
		"file": {
			"name": "users-and-markeplaces.yaml",
			"size": 0,
			"path": "adquirencia/users-and-markeplaces.yaml",
			"byteSize": 8984,
			"content": "openapi: 3.0.2\ninfo:\n  title: Gestão de Usuários\n  version: \"1.1\"\nsecurity:\n  - basicAuth: []\ntags:\n  - name: 'Usuários'\n    description: Usuários de acesso a API\nservers:\n  - url: https://api.zoop.ws\npaths:\n# V1\n  '/v1/marketplaces/{marketplace_id}/users':\n    parameters:\n      - $ref: '#/components/parameters/marketplaceId'\n    post:\n      parameters:\n        - $ref: '#/components/parameters/marketplaceId'\n        - $ref: '#/components/parameters/invite'\n      tags:\n        - Usuários\n      summary: Criar usuário Dashboard e Minha Conta\n      description: Cria novos usuários para acesso ao Dashboard ou Minha Conta dependendo da permissão\n      requestBody:\n        content:\n          application/json:\n            schema:\n              anyOf:\n                - $ref: '#/components/schemas/creatUserRequest'\n                - $ref: '#/components/schemas/creatUserMCRequest'\n      responses:\n        '200':\n          description: Usuario criado com sucesso\n    get:\n      tags:\n        - Usuários\n      summary: Listar usuários do Dashboard e Minha Conta\n      description: Cria novos usuários para acesso ao Dashboard ou Minha Conta dependendo da permissão\n      responses:\n        '200':\n          description: Usuario criado com sucesso\n  '/v1/marketplaces/{marketplace_id}/users/{user_id}/password':\n    parameters:\n      - $ref: '#/components/parameters/marketplaceId'\n      - $ref: '#/components/parameters/userId'\n    post:\n      tags:\n        - Usuários\n      summary: Criar nova senha para usuário Dashboard e Minha Conta\n      description: Criar nova senha para usários Dashboard e Minha Conta\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UsersNewPasswordRequest'\n      responses:\n        '200':\n          description: Senha alterada com sucesso\n  '/v1/marketplaces/{marketplace_id}/users/recover-access':\n    parameters:\n      - $ref: '#/components/parameters/marketplaceId'\n      - $ref: '#/components/parameters/UserEmail'\n    post:\n      tags:\n        - Usuários\n      summary: Recuperar senha com envio de email Dashboard e Minha Conta\n      description: Criar nova senha para usários Dashboard e Minha Conta\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RecoverUserPasswordRequest'\n      responses:\n        '200':\n          description: Senha criada com sucesso\n  '/v1/marketplaces/{marketplace_id}/users/{user_id}/permissions':\n    parameters:\n      - $ref: '#/components/parameters/marketplaceId'\n      - $ref: '#/components/parameters/userId'\n    post:\n      tags:\n        - Usuários\n      summary: Criar permissão para usuário do Dashboard e Minha Conta\n      description: Criar permissão para usários Dashboard e Minha Conta\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserPemissionRequest'\n      responses:\n        '200':\n          description: Permissão concedida com sucesso\n    get:\n      tags:\n        - Usuários\n      summary: Listar permissão para usuário do Dashboard e Minha Conta pelo identificador\n      description: Criar permissão para usários Dashboard e Minha Conta\n      responses:\n        '200':\n          description: Permissão listada sucesso\n  '/v1/marketplaces/{marketplace_id}/users/{user_id}':\n    parameters:\n      - $ref: '#/components/parameters/marketplaceId'\n      - $ref: '#/components/parameters/userId'\n    patch:\n      tags:\n        - Usuários\n      summary: Alterar nome e sobrenome de usuário do Dashboard e Minha Conta\n      description: Alterar nome e sobrenome de usuário\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditUserRequest'\n      responses:\n        '200':\n          description: Alteração realizada com sucesso.\n    get:\n      tags:\n        - Usuários\n      summary: Listar usuário do Dashboard e Minha Conta pelo identificador\n      responses:\n        '200':\n          description: Permissão deletada com sucesso.\n    delete:\n      tags:\n        - Usuários\n      summary: Deletar permissão de usuário do Dashboard e Minha Conta\n      description: Deletar permissão para usuário do Dashboard e Minha Conta\n      responses:\n        '200':\n          description: Permissão deletada com sucesso.\n  '/v1/users/signin':\n    post:\n      tags:\n        - Usuários\n      summary: Verificar acesso de usuário do Dashboard e Minha Conta\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoginUserRequest'\n      responses:\n        '200':\n          description: Login realizado com sucesso\ncomponents:\n  parameters:\n    marketplaceId:\n      name: marketplace_id\n      in: path\n      description: ID do marketplace\n      required: true\n      schema:\n        type: string\n    invite:\n      name: invite\n      in: query\n      description: true envia false não envia (email para o usuário convidando para acessar a conta)\n      required: false\n      schema:\n        type: boolean\n    userId:\n      name: user_id\n      in: path\n      description: ID do usuário\n      required: true\n      schema:\n        type: string\n    UserEmail:\n      name: application\n      in: query\n      description: Vazio (campo sem valor) envia email para o usuário do Dashboard, \"panel\" envia email para o usuário do Minha Conta, \"mobile\" envia email para usuário do APP\n      required: false\n      schema:\n        type: string\n        enum:\n          - panel\n          - mobile\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n  schemas:\n    creatUserRequest:\n      type: object\n      properties:\n        username:\n          type: string\n          description: Email do usuário\n          example: teste@zoop.com.br\n        first_name:\n          type: string\n          description: Primeiro nome do usuário\n          example: Jose\n        last_name:\n          type: string\n          description: Sobrenome nome do usuário\n        password:\n          type: string\n        permissions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/creatUserPermission\"\n    creatUserMCRequest:\n      type: object\n      properties:\n        username:\n          type: string\n          description: Email do usuário\n          example: teste@zoop.com.br\n        first_name:\n          type: string\n          description: Primeiro nome do usuário\n          example: Jose\n        last_name:\n          type: string\n          description: Sobrenome nome do usuário\n        password:\n          type: string\n        permissions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/creatUserMCPermission\"\n    creatUserPermission:\n          type: object\n          properties:\n            type:\n              type: string\n              example: model\n            model_name:\n              type: string\n              enum:\n                - full_access_admin\n                - full_visualization\n                - full_access_operation\n                - full_access_configuration\n                - customers\n    creatUserMCPermission:\n          type: object\n          properties:\n            type:\n              type: string\n              example: model\n            model_name:\n              type: string\n              enum:\n                - customers\n            customer_id:\n              type: string\n              example: '12345eff1f964412345899aea3245a62'\n    UserPemissionRequest:\n     type: object\n     properties:\n       permissions:\n        type: array\n        items:\n          $ref: \"#/components/schemas/UserPermission\"\n    UserPermission:\n      type: object\n      properties:\n        type:\n          type: string\n          example: model\n        marketplace:\n          type: string\n        model_name:\n          type: string\n          enum:\n            - full_access_admin\n            - full_visualization\n            - full_access_operation\n            - full_access_configuration\n            - customers\n    UsersNewPasswordRequest:\n      type: object\n      properties:\n        current_password:\n          type: string\n          description: Senha atual\n        new_password:\n          type: string\n          description: Nova senha\n    RecoverUserPasswordRequest:\n      type: object\n      properties:\n        username:\n          type: string\n          description: Email do usuário\n          example: teste@zoop.com.br\n    EditUserRequest:\n      type: object\n      properties:\n        profile:\n          type: object\n          properties:\n            first_name:\n              type: string\n            last_name:\n              type: string\n    LoginUserRequest:\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n        marketplace_id:\n          type: string",
			"canonicalURL": "/github.com/getzoop/api-docs@d112ae4ee6d40e7b1857ee8b72f364a6869b1c58/-/blob/adquirencia/users-and-markeplaces.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/getzoop/api-docs/blob/d112ae4ee6d40e7b1857ee8b72f364a6869b1c58/adquirencia/users-and-markeplaces.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/marketplaces/{marketplace_id}/users\": post: requestBody: contents: application/json: generate schema: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}