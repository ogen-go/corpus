{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/factset/enterprise-sdk"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "code/java/Formula/v1/api/openapi.yaml",
			"byteSize": 217760,
			"content": "openapi: 3.0.0\ninfo:\n  description: |2\n\n    **FactSet Formula API**\n\n    FactSet’s Formula API is a modern, flexible, formula-based API that enables users to access FactSet’s wide range of financial data and content. The API offers two endpoints, one optimized for time-series analysis and one designed for cross-sectional analysis, providing users a simplified interface into FactSet’s expansive offering. By providing two endpoints, it allows for the optimization of user workflows, while reducing complexity.\n\n    Leverage the power and flexibility of the Formula API to -\n      * Pull data from across most content sets that a user has access to in a single request\n      * Include business logic and mathematical operations in request\n      * Submit a dynamic universe in both endpoints\n      * Return the fsymId to easily combine with other FactSet content / products\n      * Set the trading calendar\n      * Define custom display names\n\n    **Formula API Request Builder**\n\n    The Formula API Request Builder provides users everything they need to form a Formula API request. In the Request Builder, you can select identifiers, build a universe expression, select FQL or Screening formulas, easily apply business logic and mathematical functions to the FQL or Screening formulas, specify optional parameters, and construct a GET or POST request. The Request Builder eliminates the need to have previous FQL and Screening knowledge and allows you to quickly find your desired data items and form the request.\n\n    The Formula API Request Builder can be accessed by navigating to [https://developer.factset.com/formula-api-request-builder](https://developer.factset.com/formula-api-request-builder) and logging in using your FactSet.net ID. When using the Request Builder to construct requests for the one of the Formula API's endpoints, be sure to toggle to the correct endpoint at the top of the page.\n\n    **How to Check the Health and Availability of the Formula API**\n\n    Please use the below endpoint to check the health and availability of the Formula API. You must be authorized for this API to use the Health endpoint.\n\n    [https://api.factset.com/formula-api/health](https://api.factset.com/formula-api/health)\n\n    **How to Programmatically Download API Specification File**\n\n    Please use the below endpoint to download the FactSet Formula API Specification File in .yaml. You must be authorized for this API to extract. This specification can then be used for Codegen to create your own SDKs. You can also download the spec using the \"Download Spec\" button to the right of the version number.\n\n    [https://api.factset.com/formula-api/v1/spec](https://api.factset.com/formula-api/v1/spec)\n  title: FactSet Formula API\n  version: 1.2.0\nservers:\n- description: Production\n  url: https://api.factset.com/formula-api\nsecurity:\n- FactSetApiKey: []\n- FactSetOAuth2: []\npaths:\n  /v1/time-series:\n    get:\n      description: |\n        The `/time-series` endpoint is closely aligned with FactSet’s powerful data retrieval language **FactSet Query Language (FQL)** which is optimized for time-series analysis. FQL can also perform sophisticated statistical, mathematical, logical, and other complex operations on the data.\n\n          This endpoint has a unique **TIMESERIES** data object that pairs the requested data with FactSet provided dates. This helps reduce the need for additional data requests and reduces the work required by users.\n\n        The `/time-series` endpoint supports Long Running asynchronous requests up to **10 minutes** via the `batch` parameter. *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n      operationId: getTimeSeriesData\n      parameters:\n      - description: |\n          List of entity identifiers.\n\n          The `ids` and `universe` parameters provide two different ways to specify the identifiers for which you want data retrieved. Please enter either the `ids` or `universe` parameter.\n        examples:\n          singleId:\n            summary: Single id\n            value:\n            - IBM\n          multipleIds:\n            summary: Multiple ids\n            value:\n            - IBM\n            - AAPL\n            - MSFT\n        explode: false\n        in: query\n        name: ids\n        required: false\n        schema:\n          items:\n            example: '[\"FDS-US\",\"IBM-US\"]'\n            type: string\n          type: array\n        style: form\n      - description: |\n          Screening expression to limit the universe\n\n          Please enter either the `ids` or `universe` parameter.\n        examples:\n          noUniverse:\n            summary: '---'\n            value: \"\"\n          oneCriteria:\n            summary: Equity Universe - S\u0026P 500 Constituents\n            value: FG_CONSTITUENTS(SP50,0,CLOSE)\n          twoCriteria:\n            summary: Equity Universe -  S\u0026P 500 Constituents with Price \u003c 10 USD\n            value: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)\u003c10)=1\n          debtUniverse:\n            description: |\n              The issuer name and amount out for all debt instruments for the Starbucks Corporation\n\n              To calculate fixed income universe, `universeType` must be set to **DEBT**.\n            summary: Debt Universe - Starbucks Debt\n            value: EQUITY(P_SYMBOL)='SBUX-US'\n        explode: false\n        in: query\n        name: universe\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Specify the universe type to calculate the `universe` in.\n\n          Find documentation below on how to build a screen for each universe type -\n          * Equity Screen - [Online Assistant Page 20606](https://my.apps.factset.com/oa/pages/20606)\n\n          * Debt Screen - [Online Assistant Page 20888](https://my.apps.factset.com/oa/pages/20888)\n\n          * Fund Screen - [Online Assistant Page 21384](https://my.apps.factset.com/oa/pages/21384)\n\n          This parameter may only be used in conjunction with the `universe` parameter.\n        explode: false\n        in: query\n        name: universeType\n        required: false\n        schema:\n          default: EQUITY\n          enum:\n          - EQUITY\n          - DEBT\n          - FUND\n          type: string\n        style: form\n      - description: List of FQL formulas\n        examples:\n          singleItem:\n            summary: Single Data Item\n            value:\n            - P_PRICE(0)\n          multipleItems:\n            summary: Multiple Data Items\n            value:\n            - P_PRICE(0,-2,D)\n            - FG_COMPANY_NAME\n            - FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,\"SEG\")\n            - FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,\"SALES\",,BUS,\"SEG\")\n          multipleItemsFlatten:\n            summary: Multiple TIMESERIES Data Items\n            value:\n            - P_PRICE_OPEN(0,-2,D)\n            - P_PRICE(0,-2,D)\n            - FG_COMPANY_NAME\n          debtDataItems:\n            summary: Multiple Debt Data Items\n            value:\n            - FI_NAME(ISSR)\n            - FI_AMOUNT_OUT(AMT,0,USD)\n          calculatedDataItems:\n            description: |\n              These data items showcase the ability to include logic, mathematical operations, and other functions in the request itself.\n\n              The first data item using the division operator to calculate a P/E ratio from the last trading day of the company’s most recent fiscal year.\n\n              The second data item uses the addition operator to calculate percentage of revenue exposure in the US and Japan for the same date as the first data item. Note that due to URI defintion of the plus sign, the **+** symbol must be URL percent encoded as **%2B** in GET requests. This means you should use **%2B** in place of the symbol **+** in the request.\n\n              The third data item uses the average function (**AVG**) and the **IF** function to indicate whether the average daily price change over the company’s most recent fiscal year is postive or negative.\n\n              You can find more information about the different functions you can use in FQL at the following Online Assistant pages -\n              * Mathematical Operators - [Online Assistant Page 10600](https://my.apps.factset.com/oa/pages/10600)\n              * Logical Functions - [Online Assistant Page 11485](https://my.apps.factset.com/oa/pages/1485)\n              * Categorical List of All Functions - [Online Assistant Page 1411](https://my.apps.factset.com/oa/pages/1411)\n            summary: Multiple Calculated Data Items\n            value:\n            - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n            - FF_GEOREV_COUNTRY_PCT(\"840\",ANN,0,,,RF)%2BFF_GEOREV_COUNTRY_PCT(\"392\",ANN,0,,,RF)\n            - IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))\u003e0,\"POSITIVE\",\"NEGATIVE\")\n        explode: false\n        in: query\n        name: formulas\n        required: true\n        schema:\n          items:\n            example: '[\"P_PRICE(0,-2,D)\",\"FG_COMPANY_NAME\"]'\n            type: string\n          type: array\n        style: form\n      - description: Calendar of data returned. The default value is FIVEDAY which\n          displays Monday through Friday, regardless of whether there were trading\n          holidays.\n        examples:\n          fiveday:\n            description: Displays Monday through Friday, regardless of whether there\n              were trading holidays. This is the default for `calendar`.\n            summary: FIVEDAY\n            value: FIVEDAY\n          sevenday:\n            description: Displays Monday through Sunday.\n            summary: SEVENDAY\n            value: SEVENDAY\n          local:\n            description: Uses the local trading calendar for each security. Local\n              exchange holidays will be skipped.\n            summary: LOCAL\n            value: LOCAL\n          region:\n            description: The calendar of a specific region. The example shown here\n              'NAY' is for the UNITED STATES calendar. You can find the calendar codes\n              for regions on [Online Assistant Page 16610](https://my.apps.factset.com/oa/pages/16610#country).\n            summary: Region Specific\n            value: NAY\n        explode: true\n        in: query\n        name: calendar\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Specify **Y** for the `fsymId` parameter to return the **fsymId** (FactSet Default Permanent Identifier) of the `requestId`, in addition to the **requestId** field, in each response object. The default value for the `fsymId` parameter is **N**.\n\n          The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).\n        explode: false\n        in: query\n        name: fsymId\n        required: false\n        schema:\n          default: \"N\"\n          enum:\n          - \"Y\"\n          - \"N\"\n          type: string\n        style: form\n      - description: |\n          Define display names for the formulas inputted. Enter the list of display names in the same order as the formulas inputted. An additional field **displayName** will be returned in the data object for a formula.\n\n          If the number of display names does not match the number of formulas provided, an error will be returned.\n\n          To define the display name for a subset of the formulas, leave a blank in the position of the formula that won't be renamed. For example - If three formulas are inputted, to define display names only for the first and third formula, enter *displayName=FORMULA_1,,FORMULA_3*. The **displayName** field will still be included in that formula, but will contain the formula as inputted.\n        examples:\n          noNames:\n            summary: '---'\n            value: \"\"\n          singleItem:\n            summary: Single Data Item\n            value:\n            - PRICE\n          multipleItems:\n            summary: Multiple Data Items\n            value:\n            - PRICE\n            - COMPANY NAME\n            - BUSINESS SEGMENT\n            - SALES SEGMENT\n        explode: false\n        in: query\n        name: displayName\n        required: false\n        schema:\n          items:\n            example: PRICE\n            type: string\n          type: array\n        style: form\n      - description: |\n          Specify **Y** for `flatten` to return a flat, table-like JSON response model instead of the standard nested JSON response model. This option is provided for easier data processing and visualization. The default value for `flatten` is **N**.\n\n          See the **Time-Series Result Object Flattened** schema for more detail on the response structure for flattened output.\n        explode: false\n        in: query\n        name: flatten\n        required: false\n        schema:\n          default: \"N\"\n          enum:\n          - \"Y\"\n          - \"N\"\n          type: string\n        style: form\n      - description: |\n          Enables the ability to asynchronously \"batch\" the request, supporting a long-running request up to **10 minutes**. Upon requesting batch=Y, the service will respond back with an HTTP Status Code of 202.\n\n          A user is limited to running 5 Batch Requests in a 10 minute period.\n\n          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n\n          Once a batch request is submitted, use `/batch-status` to see if the job has completed. Once completed, retrieve the results of the request via `/batch-result`. See the endpoints listed under *Batch Processing* for more information.\n        explode: true\n        in: query\n        name: batch\n        required: false\n        schema:\n          default: \"N\"\n          enum:\n          - \"Y\"\n          - \"N\"\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Single Id and Single Data Item:\n                  $ref: '#/components/examples/time-series-singleId-singleItem'\n                Single Id and Single Data Item with fsymId=Y:\n                  $ref: '#/components/examples/time-series-singleId-singleItem-fsymId'\n                Multiple Ids and Multiple Data Items with SEVENDAY Calendar:\n                  $ref: '#/components/examples/time-series-multipleId-multipleItem'\n                Multiple Ids and Multiple Data Items with flatten=Y:\n                  $ref: '#/components/examples/time-series-multipleId-multipleItem-flatten'\n                Multiple Ids and Multiple Calculated Data Items:\n                  $ref: '#/components/examples/time-series-multipleId-multipleCalculatedItem'\n                Small Universe and Single Data Item:\n                  $ref: '#/components/examples/time-series-smallUniv-singleItem'\n                Debt Universe and Multiple Data Items:\n                  $ref: '#/components/examples/time-series-debtUniv-multipleItem'\n              schema:\n                $ref: '#/components/schemas/time_series_response'\n          description: Gets an array of `Response Objects` for a list of IDs and FQL\n            formulas.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n            X-RateLimit-Limit-second:\n              $ref: '#/components/headers/X-RateLimit-Limit-second'\n            X-RateLimit-Remaining-second:\n              $ref: '#/components/headers/X-RateLimit-Remaining-second'\n            X-RateLimit-Limit-day:\n              $ref: '#/components/headers/X-RateLimit-Limit-day'\n            X-RateLimit-Remaining-day:\n              $ref: '#/components/headers/X-RateLimit-Remaining-day'\n        \"202\":\n          content:\n            application/json:\n              examples:\n                Batch Request Accepted:\n                  $ref: '#/components/examples/BatchStatusAcceptedResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch request has been accepted.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                parameterError - Missing Formulas:\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: parameterError\n                    title: The parameter 'formulas' is required and may not be empty.\n                    timeStamp: 2019-11-01 11:09:41.918\n                parameterError - Ids and Universe:\n                  description: The `ids` or `universe` parameter must be included.\n                    Including `ids` and `universe` parameters in the same request\n                    is not allowed.\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: parameterError\n                    title: Please enter either the ids or universe parameter.\n                    timeStamp: 2019-11-01 11:09:41.918\n                parameterError - Invalid displayName Input:\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: parameterError\n                    title: The length of the list provided for the displayName parameter\n                      must be equal to the number of formulas requested.\n                    timeStamp: 2019-11-01 11:09:41.918\n                requestBodyInvalid:\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: requestBodyInvalid\n                    title: The request body could not be read.\n                    timeStamp: 2019-11-01 11:09:41.918\n                invalidCharacter:\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: invalidCharacter\n                    title: The request contains an invalid character. Allowed characters\n                      are Unicode code points in the ranges [0x09-0x0a],[0x0d], [0x20-0x7e],\n                      [0x85], [0xa0-0xd7ff], [0xe000-0xfffd], and [0x10000-0x10ffff].\n                    timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Bad Request\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Unauthenticated USERNAME-SERIAL. This error will also occur\n            if the API request is made from IP address not specified in the API Key\n            configuration. Note that additional IP addresses can be added to an existing\n            API Key configuration.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"403\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: Unauthorized\n                title: USERNAME-SERIAL does not have permission to use /v1/{endpoint}\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Not Authorized.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"404\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: endpointNotFound\n                title: '''/formula-api/v1/{invalid endpoint}'' is not a valid endpoint.'\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Endpoint Not Found\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"405\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: methodNotAllowed\n                title: The HTTP method {unsupported method} is not allowed. Please\n                  resubmit the request using the HTTP methods GET or POST.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Method Not Allowed\n        \"406\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: badAccept\n                title: 'Accept: {unsupported Accept header} is not supported. The\n                  Accept header must include application/json.'\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Bad Accept Header\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"408\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: requestTimeout\n                title: The request took too long. Try again with a smaller request.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Request Timeout. This error may be returned if it takes more\n            than 29 seconds for the request to process or if a batch request takes\n            more than 10 minutes to process.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"415\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: badContentType\n                title: 'Content-Type: {unsupported Content-Type} is not supported.\n                  The Content-Type header must include application/json'\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Bad Content-Type Header\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"429\":\n          content:\n            application/json:\n              schema:\n                description: |\n                  Error returned if any of the user's rate limits have been reached.\n                properties:\n                  message:\n                    example: API rate limit exceeded\n                    type: string\n                title: Rate Limit Error Object\n          description: Rate Limits Exceeded\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n            X-RateLimit-Limit-second:\n              $ref: '#/components/headers/X-RateLimit-Limit-second'\n            X-RateLimit-Remaining-second:\n              $ref: '#/components/headers/X-RateLimit-Remaining-second'\n            X-RateLimit-Limit-day:\n              $ref: '#/components/headers/X-RateLimit-Limit-day'\n            X-RateLimit-Remaining-day:\n              $ref: '#/components/headers/X-RateLimit-Remaining-day'\n            Retry-After:\n              $ref: '#/components/headers/Retry-After'\n        \"500\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: genericServerError\n                title: An unexpected error happened.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Generic Server Error\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"501\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: notImplemented\n                title: The requested endpoint or functionality has not been implemented\n                  yet.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Not Implemented\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"503\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: serviceTemporarilyUnavailable\n                title: Will be sent in case the requested service is currently overloaded\n                  or can't temporarily handle the request for some other reason. Clients\n                  are expected to retry the request.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Service Temporarily Unavailable\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n      summary: Retrieve data items (FQL formulas) for a list of identifiers or defined\n        universe.\n      tags:\n      - Time-Series\n      x-factset-different-success-responses: true\n      x-accepts: application/json\n    post:\n      description: |\n        The `/time-series` endpoint is closely aligned with FactSet’s powerful data retrieval language **FactSet Query Language (FQL)** which is optimized for time-series analysis. FQL can also perform sophisticated statistical, mathematical, logical, and other complex operations on the data.\n\n          This endpoint has a unique **TIMESERIES** data object that pairs the requested data with FactSet provided dates. This helps reduce the need for additional data requests and reduces the work required by users.\n\n        The `/time-series` endpoint supports Long Running asynchronous requests up to **10 minutes** via the `batch` parameter. *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n      operationId: getTimeSeriesDataForList\n      requestBody:\n        $ref: '#/components/requestBodies/time-series-postBody'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Single Id and Single Data Item:\n                  $ref: '#/components/examples/time-series-singleId-singleItem'\n                Single Id and Single Data Item with fsymId=Y:\n                  $ref: '#/components/examples/time-series-singleId-singleItem-fsymId'\n                Multiple Ids and Multiple Data Items with SEVENDAY Calendar:\n                  $ref: '#/components/examples/time-series-multipleId-multipleItem'\n                Multiple Ids and Multiple Data Items with flatten=Y:\n                  $ref: '#/components/examples/time-series-multipleId-multipleItem-flatten'\n                Multiple Ids and Multiple Calculated Data Items:\n                  $ref: '#/components/examples/time-series-multipleId-multipleCalculatedItem'\n                Small Universe and Single Data Item:\n                  $ref: '#/components/examples/time-series-smallUniv-singleItem'\n                Debt Universe and Multiple Data Items:\n                  $ref: '#/components/examples/time-series-debtUniv-multipleItem'\n              schema:\n                $ref: '#/components/schemas/time_series_response'\n          description: Gets an array of `Response Objects` for a list of IDs and FQL\n            formulas.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n            X-RateLimit-Limit-second:\n              $ref: '#/components/headers/X-RateLimit-Limit-second'\n            X-RateLimit-Remaining-second:\n              $ref: '#/components/headers/X-RateLimit-Remaining-second'\n            X-RateLimit-Limit-day:\n              $ref: '#/components/headers/X-RateLimit-Limit-day'\n            X-RateLimit-Remaining-day:\n              $ref: '#/components/headers/X-RateLimit-Remaining-day'\n        \"202\":\n          content:\n            application/json:\n              examples:\n                Batch Request Accepted:\n                  $ref: '#/components/examples/BatchStatusAcceptedResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch request has been accepted.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                parameterError - Missing Formulas:\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: parameterError\n                    title: The parameter 'formulas' is required and may not be empty.\n                    timeStamp: 2019-11-01 11:09:41.918\n                parameterError - Ids and Universe:\n                  description: The `ids` or `universe` parameter must be included.\n                    Including `ids` and `universe` parameters in the same request\n                    is not allowed.\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: parameterError\n                    title: Please enter either the ids or universe parameter.\n                    timeStamp: 2019-11-01 11:09:41.918\n                parameterError - Invalid displayName Input:\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: parameterError\n                    title: The length of the list provided for the displayName parameter\n                      must be equal to the number of formulas requested.\n                    timeStamp: 2019-11-01 11:09:41.918\n                requestBodyInvalid:\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: requestBodyInvalid\n                    title: The request body could not be read.\n                    timeStamp: 2019-11-01 11:09:41.918\n                invalidCharacter:\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: invalidCharacter\n                    title: The request contains an invalid character. Allowed characters\n                      are Unicode code points in the ranges [0x09-0x0a],[0x0d], [0x20-0x7e],\n                      [0x85], [0xa0-0xd7ff], [0xe000-0xfffd], and [0x10000-0x10ffff].\n                    timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Bad Request\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Unauthenticated USERNAME-SERIAL. This error will also occur\n            if the API request is made from IP address not specified in the API Key\n            configuration. Note that additional IP addresses can be added to an existing\n            API Key configuration.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"403\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: Unauthorized\n                title: USERNAME-SERIAL does not have permission to use /v1/{endpoint}\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Not Authorized.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"404\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: endpointNotFound\n                title: '''/formula-api/v1/{invalid endpoint}'' is not a valid endpoint.'\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Endpoint Not Found\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"405\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: methodNotAllowed\n                title: The HTTP method {unsupported method} is not allowed. Please\n                  resubmit the request using the HTTP methods GET or POST.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Method Not Allowed\n        \"406\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: badAccept\n                title: 'Accept: {unsupported Accept header} is not supported. The\n                  Accept header must include application/json.'\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Bad Accept Header\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"408\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: requestTimeout\n                title: The request took too long. Try again with a smaller request.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Request Timeout. This error may be returned if it takes more\n            than 29 seconds for the request to process or if a batch request takes\n            more than 10 minutes to process.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"415\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: badContentType\n                title: 'Content-Type: {unsupported Content-Type} is not supported.\n                  The Content-Type header must include application/json'\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Bad Content-Type Header\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"429\":\n          content:\n            application/json:\n              schema:\n                description: |\n                  Error returned if any of the user's rate limits have been reached.\n                properties:\n                  message:\n                    example: API rate limit exceeded\n                    type: string\n                title: Rate Limit Error Object\n          description: Rate Limits Exceeded\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n            X-RateLimit-Limit-second:\n              $ref: '#/components/headers/X-RateLimit-Limit-second'\n            X-RateLimit-Remaining-second:\n              $ref: '#/components/headers/X-RateLimit-Remaining-second'\n            X-RateLimit-Limit-day:\n              $ref: '#/components/headers/X-RateLimit-Limit-day'\n            X-RateLimit-Remaining-day:\n              $ref: '#/components/headers/X-RateLimit-Remaining-day'\n            Retry-After:\n              $ref: '#/components/headers/Retry-After'\n        \"500\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: genericServerError\n                title: An unexpected error happened.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Generic Server Error\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"501\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: notImplemented\n                title: The requested endpoint or functionality has not been implemented\n                  yet.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Not Implemented\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"503\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: serviceTemporarilyUnavailable\n                title: Will be sent in case the requested service is currently overloaded\n                  or can't temporarily handle the request for some other reason. Clients\n                  are expected to retry the request.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Service Temporarily Unavailable\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n      summary: Retrieve data items (FQL formulas) for a list of identifiers or defined\n        universe.\n      tags:\n      - Time-Series\n      x-factset-different-success-responses: true\n      x-contentType: application/json\n      x-accepts: application/json\n  /v1/cross-sectional:\n    get:\n      description: |\n        The `/cross-sectional` endpoint is closely aligned with FactSet’s powerful data retrieval **Screening language** which is optimized for analysis of data items at single point in time for different entities and is extremely efficient for large universes.\n\n        The `/cross-sectional` endpoint supports Long Running asynchronous requests up to **10 minutes** via the `batch` parameter. *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n      operationId: getCrossSectionalData\n      parameters:\n      - description: |\n          List of entity identifiers.\n\n          The `ids` and `universe` parameters provide two different ways to specify the identifiers for which you want data retrieved. Please enter either the `ids` or `universe` parameter.\n        examples:\n          singleId:\n            summary: Single id\n            value:\n            - IBM\n          multipleIds:\n            summary: Multiple ids\n            value:\n            - IBM\n            - AAPL\n            - MSFT\n        explode: false\n        in: query\n        name: ids\n        required: false\n        schema:\n          items:\n            example: '[\"FDS-US\",\"IBM-US\"]'\n            type: string\n          type: array\n        style: form\n      - description: |\n          Screening expression to limit the universe\n\n          Please enter either the `ids` or `universe` parameter.\n        examples:\n          noUniverse:\n            summary: '---'\n            value: \"\"\n          oneCriteria:\n            summary: Equity Universe - S\u0026P 500 Constituents\n            value: FG_CONSTITUENTS(SP50,0,CLOSE)\n          twoCriteria:\n            summary: Equity Universe -  S\u0026P 500 Constituents with Price \u003c 10 USD\n            value: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)\u003c10)=1\n          debtUniverse:\n            description: |\n              The issuer name and amount out for all debt instruments for the Starbucks Corporation\n\n              To calculate fixed income universe, `universeType` must be set to **DEBT**.\n            summary: Debt Universe - Starbucks Debt\n            value: EQUITY(P_SYMBOL)='SBUX-US'\n        explode: false\n        in: query\n        name: universe\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Specify the universe type to calculate the `universe` in.\n\n          Find documentation below on how to build a screen for each universe type -\n          * Equity Screen - [Online Assistant Page 20606](https://my.apps.factset.com/oa/pages/20606)\n\n          * Debt Screen - [Online Assistant Page 20888](https://my.apps.factset.com/oa/pages/20888)\n\n          * Fund Screen - [Online Assistant Page 21384](https://my.apps.factset.com/oa/pages/21384)\n        explode: false\n        in: query\n        name: universeType\n        required: false\n        schema:\n          default: EQUITY\n          enum:\n          - EQUITY\n          - DEBT\n          - FUND\n          type: string\n        style: form\n      - description: List of Screening formulas\n        examples:\n          singleItem:\n            summary: Single Equity Data Item\n            value:\n            - P_PRICE(0)\n          multipleItems:\n            summary: Multiple Equity Data Items\n            value:\n            - FF_SALES(ANN_R,0)\n            - PROPER_NAME(0,SECURITY,NAME)\n            - P_PRICE(0)\n            - FF_ASSETS(ANN_R,0)\n          calculatedItems:\n            description: |\n              These data items showcase the ability to include logic, mathematical operations, and other functions in the request itself.\n\n              The first data item using the division operator to calculate a P/E ratio from the last trading day of the company’s most recent fiscal year.\n\n              The second data item uses the addition operator to calculate percentage of revenue exposure in the US and Japan for the same date as the first data item. Note that due to URI defintion of the plus sign, the **+** symbol must be URL percent encoded as **%2B** in GET requests. This means you should use **%2B** in place of the symbol **+** in the request.\n\n              The third data item uses the **IF** function and greater than operator (**\u003e**) to indicate whether the latest fiscal year's sales were higher or lower than the previous year's sales.\n\n              You can find more information about the different functions you can use in FQL at the following Online Assistant pages -\n              * Mathematical Operators - [Online Assistant Page 10600](https://my.apps.factset.com/oa/pages/10600)\n              * Logical Functions - [Online Assistant Page 11485](https://my.apps.factset.com/oa/pages/1485)\n              * Categorical List of All Functions - [Online Assistant Page 1411](https://my.apps.factset.com/oa/pages/1411)\n            summary: Multiple Calculated Data Items\n            value:\n            - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n            - FF_GEOREV_COUNTRY_PCT(840,ANN,0,RF)%2BFF_GEOREV_COUNTRY_PCT(392,ANN,0,RF)\n            - IF(FF_SALES(ANN_R,0)\u003eFF_SALES(ANN_R,-1),\"HIGHER\",\"LOWER\")\n          multipleFixedIncomeItems:\n            description: |\n              To retrieve fixed income data, `universeType` must be set to **DEBT**.\n            summary: Multiple Fixed Income Data Items\n            value:\n            - FI_NAME(ISSR)\n            - FI_AMOUNT_OUT(AMT,0,USD)\n        explode: false\n        in: query\n        name: formulas\n        required: true\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: |\n          Specify the backtest date either in **YYYY-MM-DD**, **YYYYMMDD** or **MM/DD/YYYY** format.\n\n          To learn more about backtesting, please visit [Online Assistant Page 20610](https://my.apps.factset.com/oa/pages/20610#backtest). User must have access to backtesting functionality.\n        explode: false\n        in: query\n        name: backTestDate\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Calendar of data returned. The default value is FIVEDAY which\n          displays Monday through Friday, regardless of whether there were trading\n          holidays.\n        examples:\n          fiveday:\n            description: Displays Monday through Friday, regardless of whether there\n              were trading holidays. This is the default for `calendar`.\n            summary: FIVEDAY\n            value: FIVEDAY\n          sevenday:\n            description: Displays Monday through Sunday.\n            summary: SEVENDAY\n            value: SEVENDAY\n          local:\n            description: Uses the local trading calendar for each security. Local\n              exchange holidays will be skipped.\n            summary: LOCAL\n            value: LOCAL\n          region:\n            description: The calendar of a specific region. The example shown here\n              'NAY' is for the UNITED STATES calendar. You can find the calendar codes\n              for regions on [Online Assistant Page 16610](https://my.apps.factset.com/oa/pages/16610#country).\n            summary: Region Specific\n            value: NAY\n        explode: true\n        in: query\n        name: calendar\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Specify **Y** for `fsymId` to return an additional response object containing the data\n          item **fsymId** which will contain the fsymIds of the requestIds. This is in addition to the\n          response object containing the data item **requestId**. The default value for `fsymId`\n          is **N**.\n\n          The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).\n        explode: false\n        in: query\n        name: fsymId\n        required: false\n        schema:\n          default: \"N\"\n          enum:\n          - \"Y\"\n          - \"N\"\n          type: string\n        style: form\n      - description: |\n          Define display names for the formulas inputted. Enter the list of display names in the same order as the formulas inputted. An additional field **displayName** will be returned in the data object for a formula.\n\n          If the number of display names does not match the number of formulas provided, an error will be returned.\n\n          To define the display name for a subset of the formulas, leave a blank in the position of the formula that won't be renamed. For example - If three formulas are inputted, to define display names only for the first and third formula, enter *displayName=FORMULA_1,,FORMULA_3*. The **displayName** field will still be included in that formula, but will contain the formula as inputted.\n        examples:\n          noNames:\n            summary: '---'\n            value: \"\"\n          singleItem:\n            summary: Single Data Item\n            value:\n            - PRICE\n          multipleItems:\n            summary: Multiple Data Items\n            value:\n            - SALES\n            - COMPANY NAME\n            - PRICE\n            - ASSETS\n        explode: false\n        in: query\n        name: displayName\n        required: false\n        schema:\n          items:\n            example: PRICE\n            type: string\n          type: array\n        style: form\n      - description: |\n          Specify **Y** for `flatten` to return a flat, table-like JSON response model instead of the standard nested JSON response model. This option is provided for easier data processing and visualization. The default value for `flatten` is **N**.\n\n          See the **Cross-Sectional Result Object Flattened** schema for more detail on the response structure for flattened output.\n        explode: false\n        in: query\n        name: flatten\n        required: false\n        schema:\n          default: \"N\"\n          enum:\n          - \"Y\"\n          - \"N\"\n          type: string\n        style: form\n      - description: |\n          Enables the ability to asynchronously \"batch\" the request, supporting a long-running request up to **10 minutes**. Upon requesting batch=Y, the service will respond back with an HTTP Status Code of 202.\n\n          A user is limited to running 5 Batch Requests in a 10 minute period.\n\n          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n\n          Once a batch request is submitted, use `/batch-status` to see if the job has completed. Once completed, retrieve the results of the request via `/batch-result`. See the endpoints listed under *Batch Processing* for more information.\n        explode: true\n        in: query\n        name: batch\n        required: false\n        schema:\n          default: \"N\"\n          enum:\n          - \"Y\"\n          - \"N\"\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Single Equity Id and Single Equity Data Item:\n                  $ref: '#/components/examples/cross-sectional-singleId-singleItem'\n                Single Equity Id and Single Equity Data Item with fsymId=Y:\n                  $ref: '#/components/examples/cross-sectional-singleId-singleItem-fsymId'\n                Multiple Equity Ids and Multiple Equity Data Items:\n                  $ref: '#/components/examples/cross-sectional-multipleId-multipleItem'\n                Multiple Equity Ids and Multiple Equity Data Items with flatten=Y:\n                  $ref: '#/components/examples/cross-sectional-multipleId-multipleItem-flatten'\n                Multiple Equity Ids and Multiple Calculated Equity Data Items:\n                  $ref: '#/components/examples/cross-sectional-multipleId-multipleCalculatedItem'\n                Multiple Fixed Income Ids and Multiple Fixed Income Data Items:\n                  $ref: '#/components/examples/cross-sectional-multipleFixedIncomeId-multipleItem'\n                Small Equity Universe and Single Equity Data Item:\n                  $ref: '#/components/examples/cross-sectional-smallUniv-singleItem'\n                Debt Universe and Multiple Debt Data Items:\n                  $ref: '#/components/examples/cross-sectional-debtUniv-multipleItem'\n              schema:\n                $ref: '#/components/schemas/cross_sectional_response'\n          description: Gets an array of `Response Objects` for a list of IDs and Screening\n            formulas.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n            X-RateLimit-Limit-second:\n              $ref: '#/components/headers/X-RateLimit-Limit-second'\n            X-RateLimit-Remaining-second:\n              $ref: '#/components/headers/X-RateLimit-Remaining-second'\n            X-RateLimit-Limit-day:\n              $ref: '#/components/headers/X-RateLimit-Limit-day'\n            X-RateLimit-Remaining-day:\n              $ref: '#/components/headers/X-RateLimit-Remaining-day'\n        \"202\":\n          content:\n            application/json:\n              examples:\n                Batch Request Accepted:\n                  $ref: '#/components/examples/BatchStatusAcceptedResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch request has been accepted.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                parameterError - Missing Formulas:\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: parameterError\n                    title: The parameter 'formulas' is required and may not be empty.\n                    timeStamp: 2019-11-01 11:09:41.918\n                parameterError - Ids and Universe:\n                  description: The `ids` or `universe` parameter must be included.\n                    Including `ids` and `universe` parameters in the same request\n                    is not allowed.\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: parameterError\n                    title: Please enter either the ids or universe parameter.\n                    timeStamp: 2019-11-01 11:09:41.918\n                parameterError - Invalid displayName Input:\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: parameterError\n                    title: The length of the list provided for the displayName parameter\n                      must be equal to the number of formulas requested.\n                    timeStamp: 2019-11-01 11:09:41.918\n                requestBodyInvalid:\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: requestBodyInvalid\n                    title: The request body could not be read.\n                    timeStamp: 2019-11-01 11:09:41.918\n                invalidCharacter:\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: invalidCharacter\n                    title: The request contains an invalid character. Allowed characters\n                      are Unicode code points in the ranges [0x09-0x0a],[0x0d], [0x20-0x7e],\n                      [0x85], [0xa0-0xd7ff], [0xe000-0xfffd], and [0x10000-0x10ffff].\n                    timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Bad Request\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Unauthenticated USERNAME-SERIAL. This error will also occur\n            if the API request is made from IP address not specified in the API Key\n            configuration. Note that additional IP addresses can be added to an existing\n            API Key configuration.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"403\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: Unauthorized\n                title: USERNAME-SERIAL does not have permission to use /v1/{endpoint}\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Not Authorized.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"404\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: endpointNotFound\n                title: '''/formula-api/v1/{invalid endpoint}'' is not a valid endpoint.'\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Endpoint Not Found\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"405\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: methodNotAllowed\n                title: The HTTP method {unsupported method} is not allowed. Please\n                  resubmit the request using the HTTP methods GET or POST.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Method Not Allowed\n        \"406\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: badAccept\n                title: 'Accept: {unsupported Accept header} is not supported. The\n                  Accept header must include application/json.'\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Bad Accept Header\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"408\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: requestTimeout\n                title: The request took too long. Try again with a smaller request.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Request Timeout. This error may be returned if it takes more\n            than 29 seconds for the request to process or if a batch request takes\n            more than 10 minutes to process.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"415\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: badContentType\n                title: 'Content-Type: {unsupported Content-Type} is not supported.\n                  The Content-Type header must include application/json'\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Bad Content-Type Header\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"429\":\n          content:\n            application/json:\n              schema:\n                description: |\n                  Error returned if any of the user's rate limits have been reached.\n                properties:\n                  message:\n                    example: API rate limit exceeded\n                    type: string\n                title: Rate Limit Error Object\n          description: Rate Limits Exceeded\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n            X-RateLimit-Limit-second:\n              $ref: '#/components/headers/X-RateLimit-Limit-second'\n            X-RateLimit-Remaining-second:\n              $ref: '#/components/headers/X-RateLimit-Remaining-second'\n            X-RateLimit-Limit-day:\n              $ref: '#/components/headers/X-RateLimit-Limit-day'\n            X-RateLimit-Remaining-day:\n              $ref: '#/components/headers/X-RateLimit-Remaining-day'\n            Retry-After:\n              $ref: '#/components/headers/Retry-After'\n        \"500\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: genericServerError\n                title: An unexpected error happened.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Generic Server Error\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"501\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: notImplemented\n                title: The requested endpoint or functionality has not been implemented\n                  yet.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Not Implemented\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"503\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: serviceTemporarilyUnavailable\n                title: Will be sent in case the requested service is currently overloaded\n                  or can't temporarily handle the request for some other reason. Clients\n                  are expected to retry the request.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Service Temporarily Unavailable\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n      summary: Retrieve data items (Screening formulas) for a list of identifiers\n        or defined universe.\n      tags:\n      - Cross-Sectional\n      x-factset-different-success-responses: true\n      x-accepts: application/json\n    post:\n      description: |\n        The `/cross-sectional` endpoint is closely aligned with FactSet’s powerful data retrieval **Screening language** which is optimized for analysis of data items at single point in time for different entities and is extremely efficient for large universes.\n\n        The `/cross-sectional` endpoint supports Long Running asynchronous requests up to **10 minutes** via the `batch` parameter. *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n      operationId: getCrossSectionalDataForList\n      requestBody:\n        $ref: '#/components/requestBodies/cross-sectional-postBody'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Single Equity Id and Single Equity Data Item:\n                  $ref: '#/components/examples/cross-sectional-singleId-singleItem'\n                Single Equity Id and Single Equity Data Item with fsymId=Y:\n                  $ref: '#/components/examples/cross-sectional-singleId-singleItem-fsymId'\n                Multiple Equity Ids and Multiple Equity Data Items:\n                  $ref: '#/components/examples/cross-sectional-multipleId-multipleItem'\n                Multiple Equity Ids and Multiple Equity Data Items with flatten=Y:\n                  $ref: '#/components/examples/cross-sectional-multipleId-multipleItem-flatten'\n                Multiple Equity Ids and Multiple Calculated Equity Data Items:\n                  $ref: '#/components/examples/cross-sectional-multipleId-multipleCalculatedItem'\n                Multiple Fixed Income Ids and Multiple Fixed Income Data Items:\n                  $ref: '#/components/examples/cross-sectional-multipleFixedIncomeId-multipleItem'\n                Small Equity Universe and Single Equity Data Item:\n                  $ref: '#/components/examples/cross-sectional-smallUniv-singleItem'\n                Debt Universe and Multiple Debt Data Items:\n                  $ref: '#/components/examples/cross-sectional-debtUniv-multipleItem'\n              schema:\n                $ref: '#/components/schemas/cross_sectional_response'\n          description: Gets an array of `Response Objects` for a list of IDs and Screening\n            formulas.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n            X-RateLimit-Limit-second:\n              $ref: '#/components/headers/X-RateLimit-Limit-second'\n            X-RateLimit-Remaining-second:\n              $ref: '#/components/headers/X-RateLimit-Remaining-second'\n            X-RateLimit-Limit-day:\n              $ref: '#/components/headers/X-RateLimit-Limit-day'\n            X-RateLimit-Remaining-day:\n              $ref: '#/components/headers/X-RateLimit-Remaining-day'\n        \"202\":\n          content:\n            application/json:\n              examples:\n                Batch Request Accepted:\n                  $ref: '#/components/examples/BatchStatusAcceptedResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch request has been accepted.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                parameterError - Missing Formulas:\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: parameterError\n                    title: The parameter 'formulas' is required and may not be empty.\n                    timeStamp: 2019-11-01 11:09:41.918\n                parameterError - Ids and Universe:\n                  description: The `ids` or `universe` parameter must be included.\n                    Including `ids` and `universe` parameters in the same request\n                    is not allowed.\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: parameterError\n                    title: Please enter either the ids or universe parameter.\n                    timeStamp: 2019-11-01 11:09:41.918\n                parameterError - Invalid displayName Input:\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: parameterError\n                    title: The length of the list provided for the displayName parameter\n                      must be equal to the number of formulas requested.\n                    timeStamp: 2019-11-01 11:09:41.918\n                requestBodyInvalid:\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: requestBodyInvalid\n                    title: The request body could not be read.\n                    timeStamp: 2019-11-01 11:09:41.918\n                invalidCharacter:\n                  value:\n                    id: 5EFCCA8940CAEB6E\n                    code: invalidCharacter\n                    title: The request contains an invalid character. Allowed characters\n                      are Unicode code points in the ranges [0x09-0x0a],[0x0d], [0x20-0x7e],\n                      [0x85], [0xa0-0xd7ff], [0xe000-0xfffd], and [0x10000-0x10ffff].\n                    timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Bad Request\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Unauthenticated USERNAME-SERIAL. This error will also occur\n            if the API request is made from IP address not specified in the API Key\n            configuration. Note that additional IP addresses can be added to an existing\n            API Key configuration.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"403\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: Unauthorized\n                title: USERNAME-SERIAL does not have permission to use /v1/{endpoint}\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Not Authorized.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"404\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: endpointNotFound\n                title: '''/formula-api/v1/{invalid endpoint}'' is not a valid endpoint.'\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Endpoint Not Found\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"405\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: methodNotAllowed\n                title: The HTTP method {unsupported method} is not allowed. Please\n                  resubmit the request using the HTTP methods GET or POST.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Method Not Allowed\n        \"406\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: badAccept\n                title: 'Accept: {unsupported Accept header} is not supported. The\n                  Accept header must include application/json.'\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Bad Accept Header\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"408\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: requestTimeout\n                title: The request took too long. Try again with a smaller request.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Request Timeout. This error may be returned if it takes more\n            than 29 seconds for the request to process or if a batch request takes\n            more than 10 minutes to process.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"415\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: badContentType\n                title: 'Content-Type: {unsupported Content-Type} is not supported.\n                  The Content-Type header must include application/json'\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Bad Content-Type Header\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"429\":\n          content:\n            application/json:\n              schema:\n                description: |\n                  Error returned if any of the user's rate limits have been reached.\n                properties:\n                  message:\n                    example: API rate limit exceeded\n                    type: string\n                title: Rate Limit Error Object\n          description: Rate Limits Exceeded\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n            X-RateLimit-Limit-second:\n              $ref: '#/components/headers/X-RateLimit-Limit-second'\n            X-RateLimit-Remaining-second:\n              $ref: '#/components/headers/X-RateLimit-Remaining-second'\n            X-RateLimit-Limit-day:\n              $ref: '#/components/headers/X-RateLimit-Limit-day'\n            X-RateLimit-Remaining-day:\n              $ref: '#/components/headers/X-RateLimit-Remaining-day'\n            Retry-After:\n              $ref: '#/components/headers/Retry-After'\n        \"500\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: genericServerError\n                title: An unexpected error happened.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Generic Server Error\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"501\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: notImplemented\n                title: The requested endpoint or functionality has not been implemented\n                  yet.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Not Implemented\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n        \"503\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: serviceTemporarilyUnavailable\n                title: Will be sent in case the requested service is currently overloaded\n                  or can't temporarily handle the request for some other reason. Clients\n                  are expected to retry the request.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Service Temporarily Unavailable\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n      summary: Retrieve data items (Screening formulas) for a list of identifiers\n        or defined universe.\n      tags:\n      - Cross-Sectional\n      x-factset-different-success-responses: true\n      x-contentType: application/json\n      x-accepts: application/json\n  /v1/batch-status:\n    get:\n      deprecated: false\n      description: |\n        Return the status for the underlying batch request that is specified by the id.\n\n          The Formula API supports Long Running asynchronous requests up to **10 minutes** via the `batch` parameter in the `/time-series` and `/cross-sectional` endpoints.\n\n          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n      operationId: getBatchStatus\n      parameters:\n      - allowEmptyValue: false\n        description: Batch Request identifier.\n        explode: true\n        in: query\n        name: id\n        required: true\n        schema:\n          format: uuid\n          type: string\n        style: form\n      responses:\n        \"201\":\n          content:\n            application/json:\n              examples:\n                Batch Status Done:\n                  $ref: '#/components/examples/BatchStatusDoneResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch Request has been completed and the response has been\n            created.\n          headers:\n            Location:\n              description: Path to Batch Request result.\n              example: batch/v1/result?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"202\":\n          content:\n            application/json:\n              examples:\n                Batch Status Queued:\n                  $ref: '#/components/examples/BatchStatusQueuedResponse'\n                Batch Status Executing:\n                  $ref: '#/components/examples/BatchStatusExecutingResponse'\n                Batch Status Failed:\n                  $ref: '#/components/examples/BatchStatusFailedResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch Request has not finished and the result has NOT been\n            created.\n        \"404\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: batchRequestNotFound\n                title: The Batch Request was not found. It has probably expired.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Not Found\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n      summary: Returns the status for a Batch Request\n      tags:\n      - Batch Processing\n      x-accepts: application/json\n    post:\n      deprecated: false\n      description: |\n        Return the status for the underlying batch request that is specified by the id.\n\n          The Formula API supports Long Running asynchronous requests up to **10 minutes** via the `batch` parameter in the `/time-series` and `/cross-sectional` endpoints.\n\n          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n      operationId: getBatchStatusWithPost\n      requestBody:\n        $ref: '#/components/requestBodies/batch-status-postBody'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              examples:\n                Batch Status Done:\n                  $ref: '#/components/examples/BatchStatusDoneResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch Request has been completed and the response has been\n            created.\n          headers:\n            Location:\n              description: Path to Batch Request result.\n              example: batch/v1/result?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"202\":\n          content:\n            application/json:\n              examples:\n                Batch Status Queued:\n                  $ref: '#/components/examples/BatchStatusQueuedResponse'\n                Batch Status Executing:\n                  $ref: '#/components/examples/BatchStatusExecutingResponse'\n                Batch Status Failed:\n                  $ref: '#/components/examples/BatchStatusFailedResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch Request has not finished and the result has NOT been\n            created.\n        \"404\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: batchRequestNotFound\n                title: The Batch Request was not found. It has probably expired.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Not Found\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n      summary: Returns the status for a Batch Request\n      tags:\n      - Batch Processing\n      x-contentType: application/json\n      x-accepts: application/json\n  /v1/batch-result:\n    get:\n      deprecated: false\n      description: |\n        Returns the response data for the underlying batch request that is specified by the id.\n\n          The Formula API supports Long Running asynchronous requests up to **10 minutes** via the `batch` parameter in the `/time-series` and `/cross-sectional` endpoints.\n\n          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n      operationId: getBatchData\n      parameters:\n      - allowEmptyValue: false\n        description: Batch Request identifier.\n        explode: true\n        in: query\n        name: id\n        required: true\n        schema:\n          format: uuid\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Time-Series Single Id and Single Data Item:\n                  $ref: '#/components/examples/time-series-singleId-singleItem'\n                Cross-Sectional Single Id and Single Data Item:\n                  $ref: '#/components/examples/cross-sectional-singleId-singleItem'\n              schema:\n                $ref: '#/components/schemas/BatchDataResponse'\n          description: Request Response Object when batch request has completed and\n            response is created\n        \"202\":\n          content:\n            application/json:\n              examples:\n                Batch Request Queued:\n                  $ref: '#/components/examples/BatchResultQueuedResponse'\n                Batch Request Executing:\n                  $ref: '#/components/examples/BatchResultExecutingResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch Request has not finished and the result has NOT been\n            created.\n        \"404\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: batchRequestNotFound\n                title: The Batch Request was not found. It has probably expired.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Not Found\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n      summary: Returns the response for a Batch Request\n      tags:\n      - Batch Processing\n      x-factset-different-success-responses: true\n      x-accepts: application/json\n    post:\n      deprecated: false\n      description: |\n        Returns the response data for the underlying batch request that is specified by the id.\n\n          The Formula API supports Long Running asynchronous requests up to **10 minutes** via the `batch` parameter in the `/time-series` and `/cross-sectional` endpoints.\n\n          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n      operationId: getBatchDataWithPost\n      requestBody:\n        $ref: '#/components/requestBodies/batch-result-postBody'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Time-Series Single Id and Single Data Item:\n                  $ref: '#/components/examples/time-series-singleId-singleItem'\n                Cross-Sectional Single Id and Single Data Item:\n                  $ref: '#/components/examples/cross-sectional-singleId-singleItem'\n              schema:\n                $ref: '#/components/schemas/BatchDataResponse'\n          description: Request Response Object when batch request has completed and\n            response is created\n        \"202\":\n          content:\n            application/json:\n              examples:\n                Batch Request Queued:\n                  $ref: '#/components/examples/BatchResultQueuedResponse'\n                Batch Request Executing:\n                  $ref: '#/components/examples/BatchResultExecutingResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch Request has not finished and the result has NOT been\n            created.\n        \"404\":\n          content:\n            application/json:\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: batchRequestNotFound\n                title: The Batch Request was not found. It has probably expired.\n                timeStamp: 2019-11-01 11:09:41.918\n              schema:\n                $ref: '#/components/schemas/error_detail'\n          description: Not Found\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n      summary: Returns the status for a Batch Request\n      tags:\n      - Batch Processing\n      x-factset-different-success-responses: true\n      x-contentType: application/json\n      x-accepts: application/json\ncomponents:\n  examples:\n    time-series-singleId-singleItem:\n      description: |\n        `time-series` Request for Single Price Record for IBM\n      summary: Single Id and Single Data Item\n      value:\n        data:\n        - error: 0\n          formula: P_PRICE(0)\n          requestId: IBM\n          result:\n            values:\n            - 120.77\n            dates:\n            - 2020-07-09\n          dataType: DOUBLE\n          objectType: TIMESERIES\n    time-series-singleId-singleItem-fsymId:\n      description: |\n        `time-series` Request for Single Price Record for IBM and the fsymId for IBM\n      summary: Single Id and Single Data Item with fsymId=Y\n      value:\n        data:\n        - error: 0\n          formula: P_PRICE(0)\n          requestId: IBM\n          fsymId: SJY281-R\n          result:\n            values:\n            - 120.77\n            dates:\n            - 2020-07-09\n          dataType: DOUBLE\n          objectType: TIMESERIES\n    time-series-multipleId-multipleItem:\n      description: |\n        `time-series` Request for last 3 days of Price, the Company Name, the last 2 years of Business Segment Data and Business Segment Labels for IBM, AAPL, and MSFT using a SEVENDAY trading calendar\n      summary: Mutiple Ids and Multiple Data Items with SEVENDAY Calendar\n      value:\n        data:\n        - error: 0\n          formula: P_PRICE(0,-2D,D)\n          requestId: IBM\n          result:\n            dates:\n            - 2021-01-18\n            - 2021-01-17\n            - 2021-01-16\n            values:\n            - 128.39\n            - 128.39\n            - 128.39\n          dataType: DOUBLE\n          objectType: TIMESERIES\n        - error: 0\n          formula: FG_COMPANY_NAME\n          requestId: IBM\n          result: International Business Machines Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,\"SEG\")\n          requestId: IBM\n          result:\n          - \"\"\n          - Global Technology Services\n          - Cloud \u0026 Cognitive Software\n          - Global Business Services\n          - Systems\n          - Global Financing\n          - Other\n          dataType: STRING\n          objectType: ARRAY\n        - error: 0\n          formula: FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,\"SALES\",,BUS,\"SEG\")\n          requestId: IBM\n          result:\n          - - 20191231\n            - 20181231\n          - - 27361\n            - 29146\n          - - 23200\n            - 22209\n          - - 16634\n            - 16595\n          - - 7604\n            - 8034\n          - - 1400\n            - 1590\n          - - 948\n            - 2017\n          dataType: DOUBLE\n          objectType: MATRIX\n        - error: 0\n          formula: P_PRICE(0,-2D,D)\n          requestId: AAPL\n          result:\n            dates:\n            - 2021-01-18\n            - 2021-01-17\n            - 2021-01-16\n            values:\n            - 127.14\n            - 127.14\n            - 127.14\n          dataType: DOUBLE\n          objectType: TIMESERIES\n        - error: 0\n          formula: FG_COMPANY_NAME\n          requestId: AAPL\n          result: Apple Inc.\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,\"SEG\")\n          requestId: AAPL\n          result:\n          - \"\"\n          - iPhone\n          - Services\n          - Wearables, Home \u0026 Accessories\n          - Mac\n          - iPad\n          dataType: STRING\n          objectType: ARRAY\n        - error: 0\n          formula: FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,\"SALES\",,BUS,\"SEG\")\n          requestId: AAPL\n          result:\n          - - 20200930\n            - 20190930\n          - - 137781\n            - 142381\n          - - 53768\n            - 46291\n          - - 30620\n            - 24482\n          - - 28622\n            - 25740\n          - - 23724\n            - 21280\n          dataType: DOUBLE\n          objectType: MATRIX\n        - error: 0\n          formula: P_PRICE(0,-2D,D)\n          requestId: MSFT\n          result:\n            dates:\n            - 2021-01-18\n            - 2021-01-17\n            - 2021-01-16\n            values:\n            - 212.65\n            - 212.65\n            - 212.65\n          dataType: DOUBLE\n          objectType: TIMESERIES\n        - error: 0\n          formula: FG_COMPANY_NAME\n          requestId: MSFT\n          result: Microsoft Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,\"SEG\")\n          requestId: MSFT\n          result:\n          - \"\"\n          - Intelligent Cloud\n          - More Personal Computing\n          - Productivity \u0026 Business Processes\n          dataType: STRING\n          objectType: ARRAY\n        - error: 0\n          formula: FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,\"SALES\",,BUS,\"SEG\")\n          requestId: MSFT\n          result:\n          - - 20200630\n            - 20190630\n          - - 48366\n            - 38985\n          - - 48251\n            - 45698\n          - - 46398\n            - 41160\n          dataType: DOUBLE\n          objectType: MATRIX\n    time-series-multipleId-multipleItem-flatten:\n      description: |\n        `time-series` Request for Flattened Response Model for the last 3 days of Price Open, Price Close, and the Company Name for IBM, AAPL, and MSFT\n      summary: Mutiple Ids and Multiple Data Items with flatten=Y\n      value:\n        data:\n        - requestId: IBM\n          P_PRICE_OPEN(0,-2,D): 134.57\n          date: 2021-04-08\n          P_PRICE(0,-2,D): 135.12\n          FG_COMPANY_NAME: International Business Machines Corporation\n        - requestId: IBM\n          P_PRICE_OPEN(0,-2,D): 133.84\n          date: 2021-04-07\n          P_PRICE(0,-2,D): 134.93\n          FG_COMPANY_NAME: International Business Machines Corporation\n        - requestId: IBM\n          P_PRICE_OPEN(0,-2,D): 135.58\n          date: 2021-04-06\n          P_PRICE(0,-2,D): 134.22\n          FG_COMPANY_NAME: International Business Machines Corporation\n        - requestId: AAPL\n          P_PRICE_OPEN(0,-2,D): 128.95\n          date: 2021-04-08\n          P_PRICE(0,-2,D): 130.36\n          FG_COMPANY_NAME: Apple Inc.\n        - requestId: AAPL\n          P_PRICE_OPEN(0,-2,D): 125.83\n          date: 2021-04-07\n          P_PRICE(0,-2,D): 127.9\n          FG_COMPANY_NAME: Apple Inc.\n        - requestId: AAPL\n          P_PRICE_OPEN(0,-2,D): 126.5\n          date: 2021-04-06\n          P_PRICE(0,-2,D): 126.21\n          FG_COMPANY_NAME: Apple Inc.\n        - requestId: MSFT\n          P_PRICE_OPEN(0,-2,D): 252.77\n          date: 2021-04-08\n          P_PRICE(0,-2,D): 253.25\n          FG_COMPANY_NAME: Microsoft Corporation\n        - requestId: MSFT\n          P_PRICE_OPEN(0,-2,D): 247.81\n          date: 2021-04-07\n          P_PRICE(0,-2,D): 249.9\n          FG_COMPANY_NAME: Microsoft Corporation\n        - requestId: MSFT\n          P_PRICE_OPEN(0,-2,D): 247.61\n          date: 2021-04-06\n          P_PRICE(0,-2,D): 247.86\n          FG_COMPANY_NAME: Microsoft Corporation\n    time-series-multipleId-multipleCalculatedItem:\n      description: |\n        `time-series` Request to retrieve your own P/E ratio calculation from the last trading day of the company’s most recent fiscal year, the percentage of revenue exposure in the US and Japan for the same date as the first data item, and indicator of whether the average daily price change over the company’s most recent fiscal year was postive or negative for IBM,FDS, and MSFT.\n      summary: Mutiple Ids and Multiple Calculated Data Items\n      value:\n        data:\n        - error: 0\n          formula: P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n          requestId: IBM\n          result: 12.6893365646774\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FF_GEOREV_COUNTRY_PCT(\"840\",ANN,0,,,RF)+FF_GEOREV_COUNTRY_PCT(\"392\",ANN,0,,,RF)\n          requestId: IBM\n          result: 48.0589\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))\u003e0,\"POSITIVE\",\"NEGATIVE\")\n          requestId: IBM\n          result: POSITIVE\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n          requestId: AAPL\n          result: 35.3575135861269\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FF_GEOREV_COUNTRY_PCT(\"840\",ANN,0,,,RF)+FF_GEOREV_COUNTRY_PCT(\"392\",ANN,0,,,RF)\n          requestId: AAPL\n          result: 47.580278\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))\u003e0,\"POSITIVE\",\"NEGATIVE\")\n          requestId: AAPL\n          result: POSITIVE\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n          requestId: MSFT\n          result: 35.3101414071311\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FF_GEOREV_COUNTRY_PCT(\"840\",ANN,0,,,RF)+FF_GEOREV_COUNTRY_PCT(\"392\",ANN,0,,,RF)\n          requestId: MSFT\n          result: 54.971108\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))\u003e0,\"POSITIVE\",\"NEGATIVE\")\n          requestId: MSFT\n          result: POSITIVE\n          dataType: STRING\n          objectType: SCALAR\n    time-series-smallUniv-singleItem:\n      description: '`time-series` Request for the last 4 quarters of sales for each\n        S\u0026P 500 constituent with a price less than 10 USD'\n      summary: Small Universe and Single Data Item\n      value:\n        data:\n        - error: 0\n          formula: FF_SALES(QTR_R,0,-3,FQ)\n          requestId: 25179M10\n          result:\n            values:\n            - 162\n            - 1266\n            - 1705\n            - 1720\n            dates:\n            - 2020-06-30\n            - 2020-03-31\n            - 2019-12-31\n            - 2019-09-30\n          dataType: DOUBLE\n          objectType: TIMESERIES\n        - error: 0\n          formula: FF_SALES(QTR_R,0,-3,FQ)\n          requestId: \"56584910\"\n          result:\n            values:\n            - 490\n            - 1024\n            - 1233\n            - 1249\n            dates:\n            - 2020-06-30\n            - 2020-03-31\n            - 2019-12-31\n            - 2019-09-30\n          dataType: DOUBLE\n          objectType: TIMESERIES\n        - error: 0\n          formula: FF_SALES(QTR_R,0,-3,FQ)\n          requestId: \"63707110\"\n          result:\n            values:\n            - 1496\n            - 1883\n            - 2281\n            - 2126\n            dates:\n            - 2020-06-30\n            - 2020-03-31\n            - 2019-12-31\n            - 2019-09-30\n          dataType: DOUBLE\n          objectType: TIMESERIES\n        - error: 0\n          formula: FF_SALES(QTR_R,0,-3,FQ)\n          requestId: \"36960410\"\n          result:\n            values:\n            - 17830\n            - 21066\n            - 26159\n            - 23493\n            dates:\n            - 2020-06-30\n            - 2020-03-31\n            - 2019-12-31\n            - 2019-09-30\n          dataType: DOUBLE\n          objectType: TIMESERIES\n        - error: 0\n          formula: FF_SALES(QTR_R,0,-3,FQ)\n          requestId: \"44615010\"\n          result:\n            values:\n            - 1265\n            - 1187\n            - 1364\n            - 1372\n            dates:\n            - 2020-06-30\n            - 2020-03-31\n            - 2019-12-31\n            - 2019-09-30\n          dataType: DOUBLE\n          objectType: TIMESERIES\n        - error: 0\n          formula: FF_SALES(QTR_R,0,-3,FQ)\n          requestId: \"34537086\"\n          result:\n            values:\n            - 19371\n            - 34320\n            - 39715\n            - 36990\n            dates:\n            - 2020-06-30\n            - 2020-03-31\n            - 2019-12-31\n            - 2019-09-30\n          dataType: DOUBLE\n          objectType: TIMESERIES\n        - error: 0\n          formula: FF_SALES(QTR_R,0,-3,FQ)\n          requestId: \"03741110\"\n          result:\n            values:\n            - 752\n            - 1344\n            - 1625\n            - 1438\n            dates:\n            - 2020-06-30\n            - 2020-03-31\n            - 2019-12-31\n            - 2019-09-30\n          dataType: DOUBLE\n          objectType: TIMESERIES\n        - error: 0\n          formula: FF_SALES(QTR_R,0,-3,FQ)\n          requestId: 42824C10\n          result:\n            values:\n            - 6793\n            - 5961\n            - 6923\n            - 7150\n            dates:\n            - 2020-07-31\n            - 2020-04-30\n            - 2020-01-31\n            - 2019-10-31\n          dataType: DOUBLE\n          objectType: TIMESERIES\n        - error: 0\n          formula: FF_SALES(QTR_R,0,-3,FQ)\n          requestId: G8711010\n          result:\n            values:\n            - 3170.1000000379\n            - 3140.30000000431\n            - 3739.10000004292\n            - 3335.7000000242\n            dates:\n            - 2020-06-30\n            - 2020-03-31\n            - 2019-12-31\n            - 2019-09-30\n          dataType: DOUBLE\n          objectType: TIMESERIES\n    time-series-debtUniv-multipleItem:\n      description: |\n        `time-series` Request for the issuer name and amount out for all debt instruments for the Starbucks Corporation\n      summary: Debt Universe and Multiple Debt Data Items\n      value:\n        data:\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AD\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AD\n          result: 750\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AG\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AG\n          result: 500\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AH\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AH\n          result: 350\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AJ\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AJ\n          result: 750\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AK\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AK\n          result: 500\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AM\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AM\n          result: 500\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AN\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AN\n          result: 1000\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AP\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AP\n          result: 600\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AQ\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AQ\n          result: 1250\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AR\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AR\n          result: 750\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AS\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AS\n          result: 1000\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AT\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AT\n          result: 1000\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AU\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AU\n          result: 1000\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AV\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AV\n          result: 500\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AW\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AW\n          result: 750\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AX\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AX\n          result: 500\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AY\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AY\n          result: 500\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AZ\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AZ\n          result: 1250\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244BA\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244BA\n          result: 1250\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: U8547PAA\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: U8547PAA\n          result: 85000\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: FDS01U70\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: FDS01U70\n          result: null\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: FDS02JIW\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: FDS02JIW\n          result: null\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: FDS0F9W5\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: FDS0F9W5\n          result: null\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: FDS0QANF\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: FDS0QANF\n          result: null\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: FDS1B17O\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: FDS1B17O\n          result: null\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: FDSA82FD\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: FDSA82FD\n          result: null\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: FDSB0FB5\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: FDSB0FB5\n          result: null\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AA\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AA\n          result: 0\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AB\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AB\n          result: 0\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AC\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AC\n          result: 0\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AE\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AE\n          result: 0\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AF\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AF\n          result: 0\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: 855244AL\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: 855244AL\n          result: 0\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: FDS0QARA\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: FDS0QARA\n          result: null\n          dataType: DOUBLE\n          objectType: SCALAR\n        - error: 0\n          formula: FI_NAME(ISSR)\n          requestId: FDS0VUVD\n          result: Starbucks Corporation\n          dataType: STRING\n          objectType: SCALAR\n        - error: 0\n          formula: FI_AMOUNT_OUT(AMT,0)\n          requestId: FDS0VUVD\n          result: null\n          dataType: DOUBLE\n          objectType: SCALAR\n    cross-sectional-singleId-singleItem:\n      description: |\n        `cross-sectional` Request for Single Price Record for IBM\n      summary: Single Equity Id and Single Equity Data Item\n      value:\n        data:\n        - dataItemName: requestId\n          result:\n          - IBM\n          dataType: STRING\n          error: 0\n        - dataItemName: P_PRICE(0)\n          result:\n          - 120.77\n          dataType: DOUBLE\n          error: 0\n    cross-sectional-singleId-singleItem-fsymId:\n      description: |\n        `cross-sectional` Request for Single Price Record for IBM and the fsymId for IBM\n      summary: Single Equity Id and Single Equity Data Item with fsymId=Y\n      value:\n        data:\n        - dataItemName: requestId\n          result:\n          - IBM\n          dataType: STRING\n          error: 0\n        - dataItemName: P_PRICE(0)\n          result:\n          - 120.77\n          dataType: DOUBLE\n          error: 0\n        - dataItemName: fsymId\n          result:\n          - SJY281-R\n          dataType: STRING\n          error: 0\n    cross-sectional-multipleId-multipleItem:\n      description: |\n        `cross-sectional` Request for last fiscal year's sales, the name of the company, the price for the last completed trading day, and last fiscal year's total assets for the requested 7 identifiers\n      summary: Mutiple Equity Ids and Multiple Equity Data Items\n      value:\n        data:\n        - dataItemName: requestId\n          result:\n          - IBM\n          - FDS\n          - GE\n          - GOOG\n          - AAPL\n          - MSFT\n          - TSLA\n          dataType: STRING\n          error: 0\n        - dataItemName: FF_SALES(ANN_R,0)\n          result:\n          - 77147\n          - 1494.111\n          - 95055\n          - 161402\n          - 259968\n          - 143015\n          - 24578\n          dataType: DOUBLE\n          error: 0\n        - dataItemName: PROPER_NAME(0,SECURITY,NAME)\n          result:\n          - International Business Machines Corporation\n          - FactSet Research Systems Inc.\n          - General Electric Company\n          - Alphabet Inc. Class C\n          - Apple Inc.\n          - Microsoft Corporation\n          - Tesla Inc\n          dataType: STRING\n          error: 0\n        - dataItemName: P_PRICE(0)\n          result:\n          - 125.52\n          - 333.93\n          - 7.29\n          - 1534.61\n          - 115.98\n          - 214.22\n          - 430.83\n          dataType: DOUBLE\n          error: 0\n        - dataItemName: FF_ASSETS(ANN_R,0)\n          result:\n          - 152186\n          - 2083.388\n          - 274090\n          - 275909\n          - 338516\n          - 301311\n          - 34309\n          dataType: DOUBLE\n          error: 0\n    cross-sectional-multipleId-multipleItem-flatten:\n      description: |\n        `cross-sectional` Request for last fiscal year's sales, the name of the company, the price for the last completed trading day, and last fiscal year's total assets for the requested 7 identifiers\n      summary: Mutiple Equity Ids and Multiple Equity Data Items with flatten=Y\n      value:\n        data:\n        - requestId: IBM\n          FF_SALES(ANN_R,0): 73620\n          PROPER_NAME(0,SECURITY,NAME): International Business Machines Corporation\n          P_PRICE(0): 134.93\n          FF_ASSETS(ANN_R,0): 155971\n        - requestId: FDS\n          FF_SALES(ANN_R,0): 1494.111\n          PROPER_NAME(0,SECURITY,NAME): FactSet Research Systems Inc.\n          P_PRICE(0): 309.36\n          FF_ASSETS(ANN_R,0): 2083.388\n        - requestId: GE\n          FF_SALES(ANN_R,0): 79893\n          PROPER_NAME(0,SECURITY,NAME): General Electric Company\n          P_PRICE(0): 13.39\n          FF_ASSETS(ANN_R,0): 255050\n        - requestId: GOOG\n          FF_SALES(ANN_R,0): 182350\n          PROPER_NAME(0,SECURITY,NAME): Alphabet Inc. Class C\n          P_PRICE(0): 2249.68\n          FF_ASSETS(ANN_R,0): 319616\n        - requestId: AAPL\n          FF_SALES(ANN_R,0): 274150\n          PROPER_NAME(0,SECURITY,NAME): Apple Inc.\n          P_PRICE(0): 127.9\n          FF_ASSETS(ANN_R,0): 323888\n        - requestId: MSFT\n          FF_SALES(ANN_R,0): 143015\n          PROPER_NAME(0,SECURITY,NAME): Microsoft Corporation\n          P_PRICE(0): 249.9\n          FF_ASSETS(ANN_R,0): 301311\n        - requestId: TSLA\n          FF_SALES(ANN_R,0): 31536\n          PROPER_NAME(0,SECURITY,NAME): Tesla Inc\n          P_PRICE(0): 670.97\n          FF_ASSETS(ANN_R,0): 52148\n    cross-sectional-multipleId-multipleCalculatedItem:\n      description: |\n        `cross-sectional` Request for to retrieve your own P/E ratio calculation from the last trading day of the company’s most recent fiscal year, the percentage of revenue exposure in the US and Japan for the same date as the first data item, and indicator of indicate whether the latest fiscal year's sales were higher or lower than the previous year's sales for IBM, FDS, GE, GOOG, AAPL, MSFT, and TSLA\n      summary: Mutiple Ids and Multiple Calculated Equity Data Items\n      value:\n        data:\n        - dataItemName: requestId\n          result:\n          - IBM\n          - FDS\n          - GE\n          - GOOG\n          - AAPL\n          - MSFT\n          - TSLA\n          dataType: STRING\n          error: 0\n        - dataItemName: P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n          result:\n          - 12.3145\n          - 33.9323\n          - -388.737\n          - 38.3806\n          - 40.3096\n          - 38.9243\n          - -873.152\n          dataType: DOUBLE\n          error: 0\n        - dataItemName: FF_GEOREV_COUNTRY_PCT(840,ANN,0,RF)+FF_GEOREV_COUNTRY_PCT(392,ANN,0,RF)\n          result:\n          - 48.0589\n          - 60.992432\n          - 46.614087\n          - 49.366951\n          - 47.580278\n          - 54.971108\n          - 54.065827\n          dataType: DOUBLE\n          error: 0\n        - dataItemName: IF(FF_SALES(ANN_R,0)\u003eFF_SALES(ANN_R,-1),\"HIGHER\",\"LOWER\")\n          result:\n          - LOWER\n          - HIGHER\n          - LOWER\n          - HIGHER\n          - HIGHER\n          - HIGHER\n          - HIGHER\n          dataType: STRING\n          error: 0\n    cross-sectional-multipleFixedIncomeId-multipleItem:\n      description: |\n        `cross-sectional` Request for the name of the issuer and the amount outstanding for the requested 2 fixed income identifiers\n      summary: Mutiple Fixed Income Ids and Multiple Fixed Income Data Items\n      value:\n        data:\n        - dataItemName: requestId\n          result:\n          - U88803AB\n          - 00138GAC\n          dataType: STRING\n          error: 0\n        - dataItemName: FI_NAME(ISSR)\n          result:\n          - 21st Century Fox America, Inc.\n          - AIG Life Holdings, Inc.\n          dataType: STRING\n          error: 0\n        - dataItemName: FI_AMOUNT_OUT(AMT,0,USD)\n          result:\n          - 0.2,\n          - 212\n          dataType: DOUBLE\n          error: 0\n    cross-sectional-smallUniv-singleItem:\n      description: |\n        `cross-sectional` Request for the company name for each S\u0026P 500 constituent with a price less than 10 USD\n      summary: Small Equity Universe and Single Equity Data Item\n      value:\n        data:\n        - universe: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)\u003c10)=1\n          dataItemName: requestId\n          result:\n          - \"56584910\"\n          - \"63707110\"\n          - \"36960410\"\n          - \"44615010\"\n          - \"34537086\"\n          - \"03741110\"\n          - 42824C10\n          - G8711010\n          dataType: STRING\n          error: 0\n        - dataItemName: FG_COMPANY_NAME\n          result:\n          - Marathon Oil Corporation\n          - National Oilwell Varco, Inc.\n          - General Electric Company\n          - Huntington Bancshares Incorporated\n          - Ford Motor Company\n          - Apache Corporation\n          - Hewlett Packard Enterprise Co.\n          - TechnipFMC Plc\n          dataType: STRING\n          error: 0\n    cross-sectional-debtUniv-multipleItem:\n      description: |\n        `cross-sectional` Request for the issuer name and amount out for all debt instruments for the Starbucks Corporation\n      summary: Debt Universe and Multiple Debt Data Items\n      value:\n        data:\n        - dataItemName: requestId\n          dataType: STRING\n          result:\n          - 855244AD\n          - 855244AG\n          - 855244AH\n          - 855244AJ\n          - 855244AK\n          - 855244AM\n          - 855244AN\n          - 855244AP\n          - 855244AQ\n          - 855244AR\n          - 855244AS\n          - 855244AT\n          - 855244AU\n          - 855244AV\n          - 855244AW\n          - 855244AX\n          - 855244AY\n          - 855244AZ\n          - 855244BA\n          - U8547PAA\n          - FDS01U70\n          - FDS02JIW\n          - FDS0F9W5\n          - FDS0QANF\n          - FDS1B17O\n          - FDSA82FD\n          - FDSB0FB5\n          - 855244AA\n          - 855244AB\n          - 855244AC\n          - 855244AE\n          - 855244AF\n          - 855244AL\n          - FDS0QARA\n          - FDS0VUVD\n          universe: EQUITY(P_SYMBOL)=\"SBUX-US\"\n          error: 0\n        - error: 0\n          dataItemName: FI_NAME(ISSR)\n          result:\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          - Starbucks Corporation\n          dataType: STRING\n        - error: 0\n          dataItemName: FI_AMOUNT_OUT(AMT,0,USD)\n          result:\n          - 750\n          - 500\n          - 350\n          - 750\n          - 500\n          - 500\n          - 1000\n          - 600\n          - 1250\n          - 750\n          - 1000\n          - 1000\n          - 1000\n          - 500\n          - 750\n          - 500\n          - 500\n          - 1250\n          - 1250\n          - 815.699808132134\n          - null\n          - null\n          - null\n          - null\n          - null\n          - null\n          - null\n          - 0\n          - 0\n          - 0\n          - 0\n          - 0\n          - 0\n          - null\n          - null\n          dataType: DOUBLE\n    BatchStatusAcceptedResponse:\n      description: Batch Status Accepted Response\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: QUEUED\n          startTime: 2021-06-29T18:34:52.168Z\n          endTime: null\n          error: null\n    BatchStatusQueuedResponse:\n      description: Batch Status Queued Response\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: QUEUED\n          startTime: 2021-06-29T18:34:52.168Z\n          endTime: null\n          error: null\n    BatchStatusExecutingResponse:\n      description: Batch Status Executing Response\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: EXECUTING\n          startTime: 2021-06-29T18:34:52.168Z\n          endTime: null\n          error: null\n    BatchResultQueuedResponse:\n      description: Batch Result Queued Response\n      value:\n        errors:\n          id: 618AC9B50DE76980\n          code: Accepted\n          title: Please check the status endpoint until the batch request has a status\n            of DONE and then retrieve the results from the results endpoint.\n          timestamp: 2022-01-18 18:29:59.189\n    BatchResultExecutingResponse:\n      description: Batch Result Executing Response\n      value:\n        errors:\n          id: 618AC9B50DE76980\n          code: Accepted\n          title: Please check the status endpoint until the batch request has a status\n            of DONE and then retrieve the results from the results endpoint.\n          timestamp: 2022-01-18 18:29:59.189\n    BatchStatusDoneResponse:\n      description: Batch Status Done Response\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: DONE\n          startTime: 2021-06-29T18:34:52.168Z\n          endTime: 2021-06-29T18:34:55.402Z\n          error: null\n    BatchStatusFailedResponse:\n      description: Batch Status Failed Response. The example response shows the result\n        of checking the status of a batch request that took longer than 10 minutes\n        to calculate and timed out.\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: FAILED\n          startTime: 2021-06-29T18:34:52.168Z\n          endTime: 2021-06-29T18:44:55.402Z\n          error: timeout\n  headers:\n    api-version:\n      description: the full semantic version of the API.\n      explode: false\n      schema:\n        example: 1.0.0\n        type: string\n      style: simple\n    api-supported-versions:\n      description: the comma-separated list of supported major versions.\n      explode: false\n      schema:\n        example: \"1\"\n        type: string\n      style: simple\n    api-deprecated-versions:\n      description: the comma-separated list of deprecated major versions.\n      explode: false\n      schema:\n        example: 1,2\n        type: string\n      style: simple\n    chain-id:\n      description: Unique identifier for the request. Also known as the chain id.\n      explode: false\n      schema:\n        example: 5EFCCA8940CAEA6B\n        type: string\n      style: simple\n    X-RateLimit-Limit-second:\n      description: Number of allowed requests per second.\n      explode: false\n      schema:\n        example: 5\n        type: integer\n      style: simple\n    X-RateLimit-Remaining-second:\n      description: Number of requests currently available in second.\n      explode: false\n      schema:\n        example: 4\n        type: integer\n      style: simple\n    X-RateLimit-Limit-day:\n      description: Number of allowed requests per day.\n      explode: false\n      schema:\n        example: 1000\n        type: integer\n      style: simple\n    X-RateLimit-Remaining-day:\n      description: Number of requests currently available in day.\n      explode: false\n      schema:\n        example: 854\n        type: integer\n      style: simple\n    Retry-After:\n      description: Number of seconds the service is expected to be unavailable to\n        the client. This header will be present on 429 errors.\n      explode: false\n      schema:\n        example: 62\n        type: integer\n      style: simple\n  parameters:\n    ids:\n      description: |\n        List of entity identifiers.\n\n        The `ids` and `universe` parameters provide two different ways to specify the identifiers for which you want data retrieved. Please enter either the `ids` or `universe` parameter.\n      examples:\n        singleId:\n          summary: Single id\n          value:\n          - IBM\n        multipleIds:\n          summary: Multiple ids\n          value:\n          - IBM\n          - AAPL\n          - MSFT\n      explode: false\n      in: query\n      name: ids\n      required: false\n      schema:\n        items:\n          example: '[\"FDS-US\",\"IBM-US\"]'\n          type: string\n        type: array\n      style: form\n    universe:\n      description: |\n        Screening expression to limit the universe\n\n        Please enter either the `ids` or `universe` parameter.\n      examples:\n        noUniverse:\n          summary: '---'\n          value: \"\"\n        oneCriteria:\n          summary: Equity Universe - S\u0026P 500 Constituents\n          value: FG_CONSTITUENTS(SP50,0,CLOSE)\n        twoCriteria:\n          summary: Equity Universe -  S\u0026P 500 Constituents with Price \u003c 10 USD\n          value: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)\u003c10)=1\n        debtUniverse:\n          description: |\n            The issuer name and amount out for all debt instruments for the Starbucks Corporation\n\n            To calculate fixed income universe, `universeType` must be set to **DEBT**.\n          summary: Debt Universe - Starbucks Debt\n          value: EQUITY(P_SYMBOL)='SBUX-US'\n      explode: false\n      in: query\n      name: universe\n      required: false\n      schema:\n        type: string\n      style: form\n    universeType_time_series:\n      description: |\n        Specify the universe type to calculate the `universe` in.\n\n        Find documentation below on how to build a screen for each universe type -\n        * Equity Screen - [Online Assistant Page 20606](https://my.apps.factset.com/oa/pages/20606)\n\n        * Debt Screen - [Online Assistant Page 20888](https://my.apps.factset.com/oa/pages/20888)\n\n        * Fund Screen - [Online Assistant Page 21384](https://my.apps.factset.com/oa/pages/21384)\n\n        This parameter may only be used in conjunction with the `universe` parameter.\n      explode: false\n      in: query\n      name: universeType\n      required: false\n      schema:\n        default: EQUITY\n        enum:\n        - EQUITY\n        - DEBT\n        - FUND\n        type: string\n      style: form\n    universeType_cross_sectional:\n      description: |\n        Specify the universe type to calculate the `universe` in.\n\n        Find documentation below on how to build a screen for each universe type -\n        * Equity Screen - [Online Assistant Page 20606](https://my.apps.factset.com/oa/pages/20606)\n\n        * Debt Screen - [Online Assistant Page 20888](https://my.apps.factset.com/oa/pages/20888)\n\n        * Fund Screen - [Online Assistant Page 21384](https://my.apps.factset.com/oa/pages/21384)\n      explode: false\n      in: query\n      name: universeType\n      required: false\n      schema:\n        default: EQUITY\n        enum:\n        - EQUITY\n        - DEBT\n        - FUND\n        type: string\n      style: form\n    formulas_time_series:\n      description: List of FQL formulas\n      examples:\n        singleItem:\n          summary: Single Data Item\n          value:\n          - P_PRICE(0)\n        multipleItems:\n          summary: Multiple Data Items\n          value:\n          - P_PRICE(0,-2,D)\n          - FG_COMPANY_NAME\n          - FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,\"SEG\")\n          - FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,\"SALES\",,BUS,\"SEG\")\n        multipleItemsFlatten:\n          summary: Multiple TIMESERIES Data Items\n          value:\n          - P_PRICE_OPEN(0,-2,D)\n          - P_PRICE(0,-2,D)\n          - FG_COMPANY_NAME\n        debtDataItems:\n          summary: Multiple Debt Data Items\n          value:\n          - FI_NAME(ISSR)\n          - FI_AMOUNT_OUT(AMT,0,USD)\n        calculatedDataItems:\n          description: |\n            These data items showcase the ability to include logic, mathematical operations, and other functions in the request itself.\n\n            The first data item using the division operator to calculate a P/E ratio from the last trading day of the company’s most recent fiscal year.\n\n            The second data item uses the addition operator to calculate percentage of revenue exposure in the US and Japan for the same date as the first data item. Note that due to URI defintion of the plus sign, the **+** symbol must be URL percent encoded as **%2B** in GET requests. This means you should use **%2B** in place of the symbol **+** in the request.\n\n            The third data item uses the average function (**AVG**) and the **IF** function to indicate whether the average daily price change over the company’s most recent fiscal year is postive or negative.\n\n            You can find more information about the different functions you can use in FQL at the following Online Assistant pages -\n            * Mathematical Operators - [Online Assistant Page 10600](https://my.apps.factset.com/oa/pages/10600)\n            * Logical Functions - [Online Assistant Page 11485](https://my.apps.factset.com/oa/pages/1485)\n            * Categorical List of All Functions - [Online Assistant Page 1411](https://my.apps.factset.com/oa/pages/1411)\n          summary: Multiple Calculated Data Items\n          value:\n          - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n          - FF_GEOREV_COUNTRY_PCT(\"840\",ANN,0,,,RF)%2BFF_GEOREV_COUNTRY_PCT(\"392\",ANN,0,,,RF)\n          - IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))\u003e0,\"POSITIVE\",\"NEGATIVE\")\n      explode: false\n      in: query\n      name: formulas\n      required: true\n      schema:\n        items:\n          example: '[\"P_PRICE(0,-2,D)\",\"FG_COMPANY_NAME\"]'\n          type: string\n        type: array\n      style: form\n    formulas_cross_sectional:\n      description: List of Screening formulas\n      examples:\n        singleItem:\n          summary: Single Equity Data Item\n          value:\n          - P_PRICE(0)\n        multipleItems:\n          summary: Multiple Equity Data Items\n          value:\n          - FF_SALES(ANN_R,0)\n          - PROPER_NAME(0,SECURITY,NAME)\n          - P_PRICE(0)\n          - FF_ASSETS(ANN_R,0)\n        calculatedItems:\n          description: |\n            These data items showcase the ability to include logic, mathematical operations, and other functions in the request itself.\n\n            The first data item using the division operator to calculate a P/E ratio from the last trading day of the company’s most recent fiscal year.\n\n            The second data item uses the addition operator to calculate percentage of revenue exposure in the US and Japan for the same date as the first data item. Note that due to URI defintion of the plus sign, the **+** symbol must be URL percent encoded as **%2B** in GET requests. This means you should use **%2B** in place of the symbol **+** in the request.\n\n            The third data item uses the **IF** function and greater than operator (**\u003e**) to indicate whether the latest fiscal year's sales were higher or lower than the previous year's sales.\n\n            You can find more information about the different functions you can use in FQL at the following Online Assistant pages -\n            * Mathematical Operators - [Online Assistant Page 10600](https://my.apps.factset.com/oa/pages/10600)\n            * Logical Functions - [Online Assistant Page 11485](https://my.apps.factset.com/oa/pages/1485)\n            * Categorical List of All Functions - [Online Assistant Page 1411](https://my.apps.factset.com/oa/pages/1411)\n          summary: Multiple Calculated Data Items\n          value:\n          - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n          - FF_GEOREV_COUNTRY_PCT(840,ANN,0,RF)%2BFF_GEOREV_COUNTRY_PCT(392,ANN,0,RF)\n          - IF(FF_SALES(ANN_R,0)\u003eFF_SALES(ANN_R,-1),\"HIGHER\",\"LOWER\")\n        multipleFixedIncomeItems:\n          description: |\n            To retrieve fixed income data, `universeType` must be set to **DEBT**.\n          summary: Multiple Fixed Income Data Items\n          value:\n          - FI_NAME(ISSR)\n          - FI_AMOUNT_OUT(AMT,0,USD)\n      explode: false\n      in: query\n      name: formulas\n      required: true\n      schema:\n        items:\n          type: string\n        type: array\n      style: form\n    backTestDate:\n      description: |\n        Specify the backtest date either in **YYYY-MM-DD**, **YYYYMMDD** or **MM/DD/YYYY** format.\n\n        To learn more about backtesting, please visit [Online Assistant Page 20610](https://my.apps.factset.com/oa/pages/20610#backtest). User must have access to backtesting functionality.\n      explode: false\n      in: query\n      name: backTestDate\n      required: false\n      schema:\n        type: string\n      style: form\n    calendar:\n      description: Calendar of data returned. The default value is FIVEDAY which displays\n        Monday through Friday, regardless of whether there were trading holidays.\n      examples:\n        fiveday:\n          description: Displays Monday through Friday, regardless of whether there\n            were trading holidays. This is the default for `calendar`.\n          summary: FIVEDAY\n          value: FIVEDAY\n        sevenday:\n          description: Displays Monday through Sunday.\n          summary: SEVENDAY\n          value: SEVENDAY\n        local:\n          description: Uses the local trading calendar for each security. Local exchange\n            holidays will be skipped.\n          summary: LOCAL\n          value: LOCAL\n        region:\n          description: The calendar of a specific region. The example shown here 'NAY'\n            is for the UNITED STATES calendar. You can find the calendar codes for\n            regions on [Online Assistant Page 16610](https://my.apps.factset.com/oa/pages/16610#country).\n          summary: Region Specific\n          value: NAY\n      explode: true\n      in: query\n      name: calendar\n      required: false\n      schema:\n        type: string\n      style: form\n    fsymId_time_series:\n      description: |\n        Specify **Y** for the `fsymId` parameter to return the **fsymId** (FactSet Default Permanent Identifier) of the `requestId`, in addition to the **requestId** field, in each response object. The default value for the `fsymId` parameter is **N**.\n\n        The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).\n      explode: false\n      in: query\n      name: fsymId\n      required: false\n      schema:\n        default: \"N\"\n        enum:\n        - \"Y\"\n        - \"N\"\n        type: string\n      style: form\n    fsymId_cross_sectional:\n      description: |\n        Specify **Y** for `fsymId` to return an additional response object containing the data\n        item **fsymId** which will contain the fsymIds of the requestIds. This is in addition to the\n        response object containing the data item **requestId**. The default value for `fsymId`\n        is **N**.\n\n        The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).\n      explode: false\n      in: query\n      name: fsymId\n      required: false\n      schema:\n        default: \"N\"\n        enum:\n        - \"Y\"\n        - \"N\"\n        type: string\n      style: form\n    displayName_time_series:\n      description: |\n        Define display names for the formulas inputted. Enter the list of display names in the same order as the formulas inputted. An additional field **displayName** will be returned in the data object for a formula.\n\n        If the number of display names does not match the number of formulas provided, an error will be returned.\n\n        To define the display name for a subset of the formulas, leave a blank in the position of the formula that won't be renamed. For example - If three formulas are inputted, to define display names only for the first and third formula, enter *displayName=FORMULA_1,,FORMULA_3*. The **displayName** field will still be included in that formula, but will contain the formula as inputted.\n      examples:\n        noNames:\n          summary: '---'\n          value: \"\"\n        singleItem:\n          summary: Single Data Item\n          value:\n          - PRICE\n        multipleItems:\n          summary: Multiple Data Items\n          value:\n          - PRICE\n          - COMPANY NAME\n          - BUSINESS SEGMENT\n          - SALES SEGMENT\n      explode: false\n      in: query\n      name: displayName\n      required: false\n      schema:\n        items:\n          example: PRICE\n          type: string\n        type: array\n      style: form\n    displayName_cross_sectional:\n      description: |\n        Define display names for the formulas inputted. Enter the list of display names in the same order as the formulas inputted. An additional field **displayName** will be returned in the data object for a formula.\n\n        If the number of display names does not match the number of formulas provided, an error will be returned.\n\n        To define the display name for a subset of the formulas, leave a blank in the position of the formula that won't be renamed. For example - If three formulas are inputted, to define display names only for the first and third formula, enter *displayName=FORMULA_1,,FORMULA_3*. The **displayName** field will still be included in that formula, but will contain the formula as inputted.\n      examples:\n        noNames:\n          summary: '---'\n          value: \"\"\n        singleItem:\n          summary: Single Data Item\n          value:\n          - PRICE\n        multipleItems:\n          summary: Multiple Data Items\n          value:\n          - SALES\n          - COMPANY NAME\n          - PRICE\n          - ASSETS\n      explode: false\n      in: query\n      name: displayName\n      required: false\n      schema:\n        items:\n          example: PRICE\n          type: string\n        type: array\n      style: form\n    flatten_time_series:\n      description: |\n        Specify **Y** for `flatten` to return a flat, table-like JSON response model instead of the standard nested JSON response model. This option is provided for easier data processing and visualization. The default value for `flatten` is **N**.\n\n        See the **Time-Series Result Object Flattened** schema for more detail on the response structure for flattened output.\n      explode: false\n      in: query\n      name: flatten\n      required: false\n      schema:\n        default: \"N\"\n        enum:\n        - \"Y\"\n        - \"N\"\n        type: string\n      style: form\n    flatten_cross_sectional:\n      description: |\n        Specify **Y** for `flatten` to return a flat, table-like JSON response model instead of the standard nested JSON response model. This option is provided for easier data processing and visualization. The default value for `flatten` is **N**.\n\n        See the **Cross-Sectional Result Object Flattened** schema for more detail on the response structure for flattened output.\n      explode: false\n      in: query\n      name: flatten\n      required: false\n      schema:\n        default: \"N\"\n        enum:\n        - \"Y\"\n        - \"N\"\n        type: string\n      style: form\n    batch:\n      description: |\n        Enables the ability to asynchronously \"batch\" the request, supporting a long-running request up to **10 minutes**. Upon requesting batch=Y, the service will respond back with an HTTP Status Code of 202.\n\n        A user is limited to running 5 Batch Requests in a 10 minute period.\n\n        *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n\n        Once a batch request is submitted, use `/batch-status` to see if the job has completed. Once completed, retrieve the results of the request via `/batch-result`. See the endpoints listed under *Batch Processing* for more information.\n      explode: true\n      in: query\n      name: batch\n      required: false\n      schema:\n        default: \"N\"\n        enum:\n        - \"Y\"\n        - \"N\"\n        type: string\n      style: form\n    batchId:\n      allowEmptyValue: false\n      description: Batch Request identifier.\n      explode: true\n      in: query\n      name: id\n      required: true\n      schema:\n        format: uuid\n        type: string\n      style: form\n  requestBodies:\n    time-series-postBody:\n      content:\n        application/json:\n          examples:\n            time-series-singleId-singleItem:\n              summary: |\n                Single Id and Single formula\n              value:\n                data:\n                  ids:\n                  - IBM\n                  formulas:\n                  - P_PRICE(0)\n            time-series-singleId-singleItem-fsymId:\n              summary: |\n                Single Id and Single Data Item with fsymId=Y\n              value:\n                data:\n                  ids:\n                  - IBM\n                  formulas:\n                  - P_PRICE(0)\n                  fsymId: \"Y\"\n            time-series-multipleId-mulipleItem:\n              summary: |\n                Multiple Ids and Multiple Data Items with SEVENDAY Calendar\n              value:\n                data:\n                  ids:\n                  - IBM\n                  - AAPL\n                  - MSFT\n                  formulas:\n                  - P_PRICE(0,-2D,D)\n                  - FG_COMPANY_NAME\n                  - FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,\"SEG\")\n                  - FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,\"SALES\",,BUS,\"SEG\")\n                  calendar: SEVENDAY\n            time-series-multipleItemsFlatten:\n              summary: |\n                Multiple Ids and Multiple Data Items with flatten=Y\n              value:\n                data:\n                  ids:\n                  - IBM\n                  - AAPL\n                  - MSFT\n                  formulas:\n                  - P_PRICE_OPEN(0,-2,D)\n                  - P_PRICE(0,-2,D)\n                  - FG_COMPANY_NAME\n                  flatten: \"Y\"\n            time-series-multipleId-mulipleCalculatedItem:\n              description: |\n                The first data item using the division operator to calculate a P/E ratio from the last trading day of the company’s most recent fiscal year.\n\n                The second data item uses the addition operator to calculate percentage of revenue exposure in the US and Japan for the same date as the first data item.\n\n                The third data item uses the average function (**AVG**) and the **IF** function to indicate whether the average daily price change over the company’s most recent fiscal year was postive or negative.\n\n                You can find more information about the different functions you can use in FQL at the following Online Assistant pages -\n                * Mathematical Operators - [Online Assistant Page 10600](https://my.apps.factset.com/oa/pages/10600)\n                * Logical Functions - [Online Assistant Page 11485](https://my.apps.factset.com/oa/pages/1485)\n                * Categorical List of All Functions - [Online Assistant Page 1411](https://my.apps.factset.com/oa/pages/1411)\n              summary: |\n                Multiple Ids and Multiple Calculated Data Items\n              value:\n                data:\n                  ids:\n                  - IBM\n                  - AAPL\n                  - MSFT\n                  formulas:\n                  - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n                  - FF_GEOREV_COUNTRY_PCT(\"840\",ANN,0,,,RF)+FF_GEOREV_COUNTRY_PCT(\"392\",ANN,0,,,RF)\n                  - IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))\u003e0,\"POSITIVE\",\"NEGATIVE\")\n            time-series-smallUniv-singleItem:\n              summary: |\n                Small Universe and Single Data Item\n              value:\n                data:\n                  universe: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)\u003c10)=1\n                  formulas:\n                  - FF_SALES(QTR_R,0,-3,FQ)\n            time-series-debtUniv-multipleItem:\n              summary: |\n                Debt Universe and Multiple Debt Data Items\n              value:\n                data:\n                  universe: EQUITY(P_SYMBOL)='SBUX-US'\n                  universeType: DEBT\n                  formulas:\n                  - FI_NAME(ISSR)\n                  - FI_AMOUNT_OUT(AMT,0,USD)\n            time-series-batch:\n              summary: |\n                Batch Request for Multiple Ids and Multiple Data Items with SEVENDAY Calendar\n              value:\n                data:\n                  ids:\n                  - IBM\n                  - AAPL\n                  - MSFT\n                  formulas:\n                  - P_PRICE(0,-2D,D)\n                  - FG_COMPANY_NAME\n                  - FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,\"SEG\")\n                  - FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,\"SALES\",,BUS,\"SEG\")\n                  calendar: SEVENDAY\n                  batch: \"Y\"\n          schema:\n            $ref: '#/components/schemas/time_series_request'\n      required: true\n    cross-sectional-postBody:\n      content:\n        application/json:\n          examples:\n            cross-sectional-singleId-singleItem:\n              summary: Single Equity Id and Single Equity Data Item\n              value:\n                data:\n                  ids:\n                  - IBM\n                  formulas:\n                  - P_PRICE(0)\n            cross-sectional-singleId-singleItem-fsymId:\n              summary: Single Equity Id and Single Equity Data Item with fsymId=Y\n              value:\n                data:\n                  ids:\n                  - IBM\n                  formulas:\n                  - P_PRICE(0)\n                  fsymId: \"Y\"\n            cross-sectional-multipleId-mulipleItem:\n              summary: Multiple Equity Ids and Multiple Equity Data Items with SEVENDAY\n                Calendar\n              value:\n                data:\n                  ids:\n                  - IBM\n                  - FDS\n                  - GE\n                  - GOOG\n                  - AAPL\n                  - MSFT\n                  - TSLA\n                  formulas:\n                  - FF_SALES(ANN_R,0)\n                  - PROPER_NAME(0,SECURITY,NAME)\n                  - P_PRICE(0)\n                  - FF_ASSETS(ANN_R,0)\n                  calendar: SEVENDAY\n            cross-sectional-multipleId-mulipleItem-flatten:\n              summary: Multiple Equity Ids and Multiple Equity Data Items with flatten=Y\n              value:\n                data:\n                  ids:\n                  - IBM\n                  - FDS\n                  - GE\n                  - GOOG\n                  - AAPL\n                  - MSFT\n                  - TSLA\n                  formulas:\n                  - FF_SALES(ANN_R,0)\n                  - PROPER_NAME(0,SECURITY,NAME)\n                  - P_PRICE(0)\n                  - FF_ASSETS(ANN_R,0)\n                  flatten: \"Y\"\n            cross-sectional-multipleId-mulipleCalculatedItem:\n              description: |\n                The first data item using the division operator to calculate a P/E ratio from the last trading day of the company’s most recent fiscal year.\n\n                The second data item uses the addition operator to calculate percentage of revenue exposure in the US and Japan for the same date as the first data item.\n\n                The third data item uses the **IF** function and greater than operator (**\u003e**) to indicate whether the latest fiscal year's sales were higher or lower than the previous year's sales.\n\n                You can find more information about the different functions you can use in FQL at the following Online Assistant pages -\n                * Mathematical Operators - [Online Assistant Page 10600](https://my.apps.factset.com/oa/pages/10600)\n                * Logical Functions - [Online Assistant Page 11485](https://my.apps.factset.com/oa/pages/1485)\n                * Categorical List of All Functions - [Online Assistant Page 1411](https://my.apps.factset.com/oa/pages/1411)\n              summary: Multiple Ids and Multiple Calculated Data Items\n              value:\n                data:\n                  ids:\n                  - IBM\n                  - FDS\n                  - GE\n                  - GOOG\n                  - AAPL\n                  - MSFT\n                  - TSLA\n                  formulas:\n                  - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n                  - FF_GEOREV_COUNTRY_PCT(840,ANN,0,RF)%2BFF_GEOREV_COUNTRY_PCT(392,ANN,0,RF)\n                  - IF(FF_SALES(ANN_R,0)\u003eFF_SALES(ANN_R,-1),\"HIGHER\",\"LOWER\")\n            cross-sectional-multipleFixedIncomeId-mulipleItem:\n              summary: Multiple Fixed Income Ids and Multiple Fixed Data Items\n              value:\n                data:\n                  ids:\n                  - U88803AB\n                  - 00138GAC\n                  formulas:\n                  - FI_NAME(ISSR)\n                  - FI_AMOUNT_OUT(AMT,0,USD)\n            cross-sectional-smallUniv-singleItem:\n              summary: Small Equity Universe and Single Equity Data Item\n              value:\n                data:\n                  universe: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)\u003c10)=1\n                  formulas:\n                  - P_PRICE(0)\n            cross-sectional-debtUniv-multipleItem:\n              summary: Debt Universe and Multiple Debt Data Items\n              value:\n                data:\n                  universe: EQUITY(P_SYMBOL)='SBUX-US'\n                  universeType: DEBT\n                  formulas:\n                  - FI_NAME(ISSR)\n                  - FI_AMOUNT_OUT(AMT,0,USD)\n            cross-sectional-batch:\n              summary: Batch Request for Multiple Equity Ids and Multiple Equity Data\n                Items with SEVENDAY Calendar\n              value:\n                data:\n                  ids:\n                  - IBM\n                  - FDS\n                  - GE\n                  - GOOG\n                  - AAPL\n                  - MSFT\n                  - TSLA\n                  formulas:\n                  - FF_SALES(ANN_R,0)\n                  - PROPER_NAME(0,SECURITY,NAME)\n                  - P_PRICE(0)\n                  - FF_ASSETS(ANN_R,0)\n                  calendar: SEVENDAY\n                  batch: \"Y\"\n          schema:\n            $ref: '#/components/schemas/cross_sectional_request'\n      required: true\n    batch-status-postBody:\n      content:\n        application/json:\n          examples:\n            BatchStatusRequest:\n              summary: Batch Status Request\n              value:\n                data:\n                  id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          schema:\n            $ref: '#/components/schemas/BatchDataRequest'\n      required: true\n    batch-result-postBody:\n      content:\n        application/json:\n          examples:\n            BatchDataRequest:\n              summary: Batch Result Request\n              value:\n                data:\n                  id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          schema:\n            $ref: '#/components/schemas/BatchDataRequest'\n      required: true\n  responses:\n    \"400\":\n      content:\n        application/json:\n          examples:\n            parameterError - Missing Formulas:\n              value:\n                id: 5EFCCA8940CAEB6E\n                code: parameterError\n                title: The parameter 'formulas' is required and may not be empty.\n                timeStamp: 2019-11-01 11:09:41.918\n            parameterError - Ids and Universe:\n              description: The `ids` or `universe` parameter must be included. Including\n                `ids` and `universe` parameters in the same request is not allowed.\n              value:\n                id: 5EFCCA8940CAEB6E\n                code: parameterError\n                title: Please enter either the ids or universe parameter.\n                timeStamp: 2019-11-01 11:09:41.918\n            parameterError - Invalid displayName Input:\n              value:\n                id: 5EFCCA8940CAEB6E\n                code: parameterError\n                title: The length of the list provided for the displayName parameter\n                  must be equal to the number of formulas requested.\n                timeStamp: 2019-11-01 11:09:41.918\n            requestBodyInvalid:\n              value:\n                id: 5EFCCA8940CAEB6E\n                code: requestBodyInvalid\n                title: The request body could not be read.\n                timeStamp: 2019-11-01 11:09:41.918\n            invalidCharacter:\n              value:\n                id: 5EFCCA8940CAEB6E\n                code: invalidCharacter\n                title: The request contains an invalid character. Allowed characters\n                  are Unicode code points in the ranges [0x09-0x0a],[0x0d], [0x20-0x7e],\n                  [0x85], [0xa0-0xd7ff], [0xe000-0xfffd], and [0x10000-0x10ffff].\n                timeStamp: 2019-11-01 11:09:41.918\n          schema:\n            $ref: '#/components/schemas/error_detail'\n      description: Bad Request\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n    \"401\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_detail'\n      description: Unauthenticated USERNAME-SERIAL. This error will also occur if\n        the API request is made from IP address not specified in the API Key configuration.\n        Note that additional IP addresses can be added to an existing API Key configuration.\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n    \"403\":\n      content:\n        application/json:\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: Unauthorized\n            title: USERNAME-SERIAL does not have permission to use /v1/{endpoint}\n            timeStamp: 2019-11-01 11:09:41.918\n          schema:\n            $ref: '#/components/schemas/error_detail'\n      description: Not Authorized.\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n    \"404\":\n      content:\n        application/json:\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: endpointNotFound\n            title: '''/formula-api/v1/{invalid endpoint}'' is not a valid endpoint.'\n            timeStamp: 2019-11-01 11:09:41.918\n          schema:\n            $ref: '#/components/schemas/error_detail'\n      description: Endpoint Not Found\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n    \"405\":\n      content:\n        application/json:\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: methodNotAllowed\n            title: The HTTP method {unsupported method} is not allowed. Please resubmit\n              the request using the HTTP methods GET or POST.\n            timeStamp: 2019-11-01 11:09:41.918\n          schema:\n            $ref: '#/components/schemas/error_detail'\n      description: Method Not Allowed\n    \"406\":\n      content:\n        application/json:\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: badAccept\n            title: 'Accept: {unsupported Accept header} is not supported. The Accept\n              header must include application/json.'\n            timeStamp: 2019-11-01 11:09:41.918\n          schema:\n            $ref: '#/components/schemas/error_detail'\n      description: Bad Accept Header\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n    \"408\":\n      content:\n        application/json:\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: requestTimeout\n            title: The request took too long. Try again with a smaller request.\n            timeStamp: 2019-11-01 11:09:41.918\n          schema:\n            $ref: '#/components/schemas/error_detail'\n      description: Request Timeout. This error may be returned if it takes more than\n        29 seconds for the request to process or if a batch request takes more than\n        10 minutes to process.\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n    \"415\":\n      content:\n        application/json:\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: badContentType\n            title: 'Content-Type: {unsupported Content-Type} is not supported. The\n              Content-Type header must include application/json'\n            timeStamp: 2019-11-01 11:09:41.918\n          schema:\n            $ref: '#/components/schemas/error_detail'\n      description: Bad Content-Type Header\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n    \"429\":\n      content:\n        application/json:\n          schema:\n            description: |\n              Error returned if any of the user's rate limits have been reached.\n            properties:\n              message:\n                example: API rate limit exceeded\n                type: string\n            title: Rate Limit Error Object\n      description: Rate Limits Exceeded\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n        X-RateLimit-Limit-second:\n          $ref: '#/components/headers/X-RateLimit-Limit-second'\n        X-RateLimit-Remaining-second:\n          $ref: '#/components/headers/X-RateLimit-Remaining-second'\n        X-RateLimit-Limit-day:\n          $ref: '#/components/headers/X-RateLimit-Limit-day'\n        X-RateLimit-Remaining-day:\n          $ref: '#/components/headers/X-RateLimit-Remaining-day'\n        Retry-After:\n          $ref: '#/components/headers/Retry-After'\n    \"500\":\n      content:\n        application/json:\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: genericServerError\n            title: An unexpected error happened.\n            timeStamp: 2019-11-01 11:09:41.918\n          schema:\n            $ref: '#/components/schemas/error_detail'\n      description: Generic Server Error\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n    \"501\":\n      content:\n        application/json:\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: notImplemented\n            title: The requested endpoint or functionality has not been implemented\n              yet.\n            timeStamp: 2019-11-01 11:09:41.918\n          schema:\n            $ref: '#/components/schemas/error_detail'\n      description: Not Implemented\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n    \"503\":\n      content:\n        application/json:\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: serviceTemporarilyUnavailable\n            title: Will be sent in case the requested service is currently overloaded\n              or can't temporarily handle the request for some other reason. Clients\n              are expected to retry the request.\n            timeStamp: 2019-11-01 11:09:41.918\n          schema:\n            $ref: '#/components/schemas/error_detail'\n      description: Service Temporarily Unavailable\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n  schemas:\n    time_series_request:\n      description: '`/time-series` Request Body'\n      properties:\n        data:\n          $ref: '#/components/schemas/time_series_request_data'\n      required:\n      - data\n      title: Time-Series Request Body\n      type: object\n    time_series_response_object_items:\n      anyOf:\n      - $ref: '#/components/schemas/time_series_result_object_nonflattened'\n      - $ref: '#/components/schemas/time_series_result_object_flattened'\n      title: Time-Series Response Object\n    time_series_response:\n      example:\n        data:\n        - null\n        - null\n      properties:\n        data:\n          description: Array of Time-Series `Response Objects`\n          items:\n            $ref: '#/components/schemas/time_series_response_object_items'\n          type: array\n      title: Time-Series Response\n      type: object\n    time_series_result_object_nonflattened:\n      discriminator:\n        mapping:\n          SCALAR: '#/components/schemas/time_series_result_object_nonflattened_scalar'\n          ARRAY: '#/components/schemas/time_series_result_object_nonflattened_array'\n          MATRIX: '#/components/schemas/time_series_result_object_nonflattened_matrix'\n          TIMESERIES: '#/components/schemas/time_series_result_object_nonflattened_timeseries_object'\n        propertyName: objectType\n      oneOf:\n      - $ref: '#/components/schemas/time_series_result_object_nonflattened_scalar'\n      - $ref: '#/components/schemas/time_series_result_object_nonflattened_array'\n      - $ref: '#/components/schemas/time_series_result_object_nonflattened_matrix'\n      - $ref: '#/components/schemas/time_series_result_object_nonflattened_timeseries_object'\n      title: Time-Series Non-Flattened Response Object\n    time_series_result_object_nonflattened_scalar:\n      allOf:\n      - $ref: '#/components/schemas/time_series_result_object_nonflattened_base'\n      properties:\n        result:\n          $ref: '#/components/schemas/time_series_scalar_value'\n      title: Time-Series Non-Flattened Response Object with SCALAR Result Attribute\n      type: object\n    time_series_result_object_nonflattened_array:\n      allOf:\n      - $ref: '#/components/schemas/time_series_result_object_nonflattened_base'\n      description: The `result` attribute in the Time-Series Non-Flattened Response\n        Object will be an ARRAY.\n      properties:\n        result:\n          items:\n            $ref: '#/components/schemas/time_series_scalar_value'\n          type: array\n      title: Time-Series Non-Flattened Response Object with ARRAY Result Attribute\n      type: object\n    time_series_result_object_nonflattened_matrix:\n      allOf:\n      - $ref: '#/components/schemas/time_series_result_object_nonflattened_base'\n      description: The `result` attribute in the Time-Series Non-Flattened Response\n        Object will be a MATRIX, which will be represented as an array of arrays.\n        Each array can be thought of as a row in the matrix.\n      properties:\n        result:\n          items:\n            items:\n              $ref: '#/components/schemas/time_series_scalar_value'\n            type: array\n          type: array\n      title: Time-Series Non-Flattened Response Object with MATRIX Result Attribute\n      type: object\n    time_series_result_object_nonflattened_timeseries_object:\n      allOf:\n      - $ref: '#/components/schemas/time_series_result_object_nonflattened_base'\n      properties:\n        result:\n          $ref: '#/components/schemas/time_series_timeseries_object'\n      title: Time-Series Non-Flattened Response Object with TIMESERIES Result Attribute\n      type: object\n    time_series_result_object_nonflattened_base:\n      description: An object returning the results for a single identifier and formula.\n        This is the base of the response object. The result attribute depends on the\n        formula requested. Response objects with the various result attribute types\n        are outlined in separate schemas.\n      properties:\n        error:\n          description: |\n            Indicates that there was an error in the execution of the FQL Formula.\n            * Zero – success\n            * Non-zero – failure\n          example: 0\n          type: integer\n        errorMessage:\n          description: If error is non-zero, errorMessage will display the FQL formula\n            error.\n          example: |\n            parse error, unexpected ','\n          nullable: true\n          type: string\n        formula:\n          description: FQL formula requested.\n          example: P_PRICE(0,-1,D)\n          type: string\n        displayName:\n          description: Display Name.\n          example: PRICE\n          nullable: true\n          type: string\n        requestId:\n          description: Identifier requested.\n          example: IBM-US\n          type: string\n        fsymId:\n          description: |\n            The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881). Included only if the `fsymId` parameter is set to Y.\n          example: SJY281-R\n          nullable: true\n          type: string\n        dataType:\n          description: Type of data returned in `result`\n          enum:\n          - STRING\n          - INTEGER\n          - DOUBLE\n          example: STRING\n          nullable: true\n          type: string\n        objectType:\n          description: Type of object returned in `result`\n          enum:\n          - SCALAR\n          - ARRAY\n          - MATRIX\n          - TIMESERIES\n          example: ARRAY\n          type: string\n      required:\n      - dataType\n      - error\n      - formula\n      - objectType\n      - requestId\n      - result\n      title: Time-Series Non-Flattened Base Response Object\n      type: object\n    time_series_scalar_value:\n      description: The `result` attribute in the Time-Series Non-Flattened Response\n        Object will be a SCALAR.\n      nullable: true\n      oneOf:\n      - example: International Business Machines Corporation\n        nullable: true\n        type: string\n      - example: 354.98\n        format: double\n        nullable: true\n        type: number\n      - example: 4\n        nullable: true\n        type: integer\n      - example: 2021-11-09\n        format: date\n        nullable: true\n        type: string\n      title: Time-Series SCALAR Result\n    time_series_timeseries_object:\n      description: The `result` attribute in the Time-Series Non-Flattened Response\n        Object will be a TIMESERIES object. A TIMESERIES object has a values attribute\n        and a dates attribute that contain arrays of equal length so that the values\n        and dates can be align to form a time series.\n      properties:\n        values:\n          description: Representing the data returned from the requested FQL formula\n            for the requestId\n          example:\n          - 124.92\n          - 124.22\n          - 122.44\n          items:\n            $ref: '#/components/schemas/time_series_scalar_value'\n          title: values\n          type: array\n        dates:\n          description: Representing the dates corresponding the requested FQL formula\n            for the requestId\n          example:\n          - 2020-09-17\n          - 2020-09-16\n          - 2020-09-15\n          items:\n            format: date\n            nullable: true\n            type: string\n          title: dates\n          type: array\n      title: Time-Series TIMESERIES Result\n      type: object\n    time_series_result_object_flattened_addl:\n      description: |\n        The Key in the Key-Value pair will be the formula. If the `displayName` parameter is used, then the Key will be displayName specified for that formula. The Value in the Key-Value pair will be the result of the formula for that \"row\".\n      example: '\"P_PRICE(0)\": 142.32'\n      nullable: true\n      oneOf:\n      - nullable: true\n        type: string\n      - format: double\n        nullable: true\n        type: number\n      - nullable: true\n        type: integer\n      title: Key-Value Pair for Time-Series Flattened Response Object\n    time_series_result_object_flattened:\n      additionalProperties:\n        $ref: '#/components/schemas/time_series_result_object_flattened_addl'\n      description: |2\n\n        Data model returned when the parameter **flatten=Y** is used in the request. This flattened, simplified JSON output returned from **flatten=Y** can be conceptualized as a table (rows and columns) where each data object in the result is a row in the table and each field names is a column name. The response will contain at least one data object for each requestId containing the requestId, fsymId (if requested), date (if applicable) and Key-Value pairs for each data item (formula). The number of data objects (rows) per requestId is dependent the the objectTypes of the formulas requested.\n\n        ---\n        Formulas that have associated dates (TIMESERIES objectType in the standard **flatten=N** response model) will result in a data object for each date for each requestId.\n\n        **flatten=N TIMESERIES Representation**\n        ```json\n        [\n          {\n            \"requestId\": \"id\",\n            \"formula\": \"formulaName1\",\n            \"result\": {\n                \"values\": [a,b],\n                \"dates\": [DATE1,DATE2]\n              },\n            \"objectType\": \"TIMESERIES\",\n            \"dataType\": \"DOUBLE\"\n          },\n          {\n            \"requestId\": \"id\",\n            \"formula\": \"formulaName2\",\n            \"result\": {\n                \"values\": [c,d],\n                \"dates\": [DATE2,DATE3]\n              },\n            \"objectType\": \"TIMESERIES\",\n            \"dataType\": \"DOUBLE\"\n          }\n        ]\n        ```\n\n        **flatten=Y TIMESERIES Representation**\n        ```json\n        [\n          {\n            \"requestId\": \"id\",\n            \"formulaName1\": a,\n            \"formulaName2\": null,\n            \"date\": DATE1\n          },\n          {\n            \"requestId\": \"id\",\n            \"formulaName1\": b,\n            \"formulaName2\": c,\n            \"date\": DATE2\n          },\n          {\n            \"requestId\": \"id\",\n            \"formulaName1\": null,\n            \"formulaName2\": d,\n            \"date\": DATE3\n          }\n        ]\n        ```\n        ---\n\n        Formulas that result in an array (no associated dates, ARRAY objectType in the standard **flatten=N** response model) can be thought of as a column in a table. Each element in the array will be in a separate data object. The first element of the array starts in the first data object for that requestId and then then the second element of the array in the second data object for that requestId and so on (regardless of dates from other formulas).\n\n        **flatten=N ARRAY Representation**\n        ```json\n        [\n          {\n            \"requestId\": \"id\",\n            \"formula\": \"formulaName\",\n            \"result\": [a,b,c],\n            \"objectType\": \"ARRAY\",\n            \"dataType\": \"DOUBLE\"\n          }\n        ]\n        ```\n\n        **flatten=Y ARRAY Representation**\n        ```json\n        [\n          {\n            \"requestId\": \"id\",\n            \"formulaName\": a,\n          },\n          {\n            \"requestId\": \"id\",\n            \"formulaName\": b,\n          },\n          {\n            \"requestId\": \"id\",\n            \"formulaName\": c,\n          }\n        ]\n        ```\n        ---\n        Scalar data items (SCALAR objectType in the standard **flatten=N** response model) will be repeated in each data object for the requestId.\n\n        **flatten=N SCALAR Representation**\n        ```json\n        [\n          {\n            \"requestId\": \"id\",\n            \"formula\": \"formulaName\",\n            \"result\": a,\n            \"objectType\": \"ARRAY\",\n            \"dataType\": \"DOUBLE\"\n          }\n        ]\n        ```\n\n        **flatten=Y SCALAR Representation**\n        ```json\n        [\n          {\n            \"requestId\": \"id\",\n            \"formulaName\": a,\n          }\n        ]\n        ```\n        ---\n        Formulas that result in a matrix (2 dimensional array, MATRIX objectType in the standard **flatten=N** response model) can be thought of as returning a table where each array in the array of arrays is a row in the table. This can be extended to the flattened result structure where each data object is a row in a table.  The formula will have as many attributes (appended by [n]) as number of columns in the matrix result.\n\n        **flatten=N MATRIX Representation**\n        ```json\n        [\n          {\n            \"requestId\": \"id\"\n            \"formula\": \"formulaName\",\n            \"result\": [\n                [a,b,c],\n                [d,e,f]\n              ],\n            \"objectType\": \"MATRIX\",\n            \"dataType\": \"DOUBLE\"\n          }\n        ]\n        ```\n\n        **flatten=Y MATRIX Representation**\n        ```json\n        [\n          {\n            \"requestId\": \"id\"\n            \"formulaName[0]\": a,\n            \"formulaName[1]\": b,\n            \"formulaName[2]\": c\n          },\n          {\n            \"requestId\": \"id\"\n            \"formulaName[0]\": d,\n            \"formulaName[1]\": e,\n            \"formulaName[2]\": f\n          }\n        ]\n        ```\n        ---\n      properties:\n        requestId:\n          description: Identifier requested.\n          example: IBM-US\n          type: string\n        fsymId:\n          description: |\n            The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881). Included only if the `fsymId` parameter is set to Y.\n          example: SJY281-R\n          nullable: true\n          type: string\n        date:\n          description: Date associated with FQL formula.\n          example: 2021-10-18\n          format: date\n          nullable: true\n          type: string\n      required:\n      - requestId\n      title: Time-Series Flattened Response Object\n      type: object\n    cross_sectional_request:\n      description: '`/cross-sectional` Request Body'\n      properties:\n        data:\n          $ref: '#/components/schemas/cross_sectional_request_data'\n      required:\n      - data\n      title: Cross-Sectional Request Body\n      type: object\n    cross_sectional_response_object_items:\n      oneOf:\n      - $ref: '#/components/schemas/cross_sectional_result_object_nonflattened'\n      - $ref: '#/components/schemas/cross_sectional_result_object_flattened'\n      title: Cross-Sectional Response Object\n    cross_sectional_response:\n      example:\n        data:\n        - null\n        - null\n      properties:\n        data:\n          description: Array of Cross-Sectional `Response Objects`\n          items:\n            $ref: '#/components/schemas/cross_sectional_response_object_items'\n          type: array\n      title: Cross-Sectional Response\n      type: object\n    cross_sectional_result_object_nonflattened_result_attribute:\n      description: An array containing the values for the data item\n      oneOf:\n      - description: Array of strings\n        example: '[\"IBM\",\"FDS\",\"GE\",\"GOOG\",\"AAPL\",\"MSFT\",\"TSLA\"]'\n        nullable: true\n        type: string\n      - description: Array of doubles\n        format: double\n        nullable: true\n        type: number\n      - description: Array of integers\n        nullable: true\n        type: integer\n      title: Result Attribute in Cross-Sectional Non-Flattened Response Object\n    cross_sectional_result_object_nonflattened:\n      description: An object returning the results for a single formula.\n      properties:\n        universe:\n          description: If `universe` is submitted instead of `ids`, then the universe\n            attribute will display the universe expression requested.\n          example: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)\u003c10)=1\n          type: string\n        dataItemName:\n          description: Name of data item (requestId, requested Screening formula,\n            or fsymId)\n          example: P_PRICE(0)\n          type: string\n        displayName:\n          description: Display Name.\n          example: PRICE\n          nullable: true\n          type: string\n        result:\n          items:\n            $ref: '#/components/schemas/cross_sectional_result_object_nonflattened_result_attribute'\n          type: array\n        dataType:\n          description: Data type of the data item\n          enum:\n          - STRING\n          - INTEGER\n          - DOUBLE\n          example: STRING\n          type: string\n        error:\n          description: |\n            Data item error indicator.\n             * Zero – success\n             * Non-zero – failure\n          example: 0\n          type: integer\n        errorMessage:\n          description: If error is non-zero, errorMessage will display the Screening\n            formula error.\n          example: |\n            Error parsing formula arguments\n          nullable: true\n          type: string\n        warnings:\n          description: Screening formula warnings. This attribute is only displayed\n            if warnings are generated in the execution of the Screening formula.\n          items:\n            $ref: '#/components/schemas/cross_sectional_result_object_nonflattened_warnings'\n          type: array\n      required:\n      - dataItemName\n      - dataType\n      - error\n      - result\n      title: Cross-Sectional Non-Flattened Response Object\n      type: object\n    cross_sectional_result_object_flattened_addl:\n      description: |\n        The Key in the Key-Value pair will be the formula. If the `displayName` parameter is used, then the Key will be displayName specified for that formula. The Value in the Key-Value pair will be the result of the formula for that \"row\".\n      example: '\"P_PRICE(0)\": 142.32'\n      oneOf:\n      - nullable: true\n        type: string\n      - format: double\n        nullable: true\n        type: number\n      - nullable: true\n        type: integer\n      title: Key-Value Pair for Cross-Sectional Flattened Response Object\n    cross_sectional_result_object_flattened:\n      additionalProperties:\n        $ref: '#/components/schemas/cross_sectional_result_object_flattened_addl'\n      description: |2\n\n        Data model returned when the parameter **flatten=Y** is used in the request. This flattened, simplified JSON data returned from **flatten=Y** can be conceptualized as a table (rows and columns) where each data object in the result is a row in the table and the field names are the column names.\n\n        There will be one data object for each request containing the request, fsymId if requested, and Key-Value pairs for each data item (formula).\n      properties:\n        requestId:\n          description: Identifier requested.\n          example: IBM-US\n          type: string\n        fsymId:\n          description: |\n            The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881). Included only if the `fsymId` parameter is set to Y.\n          example: SJY281-R\n          nullable: true\n          type: string\n      required:\n      - requestId\n      title: Cross-Sectional Flattened Result Object\n      type: object\n    error_detail:\n      description: |\n        `Error Object` is the response returned for an unsuccessful request.\n      properties:\n        id:\n          description: Unique identifier for the request. Also known as the chain\n            id.\n          example: 5EFCCA8940CAEA6B\n          nullable: true\n          type: string\n        code:\n          description: Textual error code\n          example: notAuthenticated\n          nullable: true\n          type: string\n        title:\n          description: A short, human-readable summary of the problem\n          example: There were either no, invalid, or expired credentials present in\n            the request.\n          nullable: true\n          type: string\n        timestamp:\n          description: timestamp in YYYY-MM-DD HH:MM:SS.SSS\n          format: date-time\n          nullable: true\n          type: string\n      title: Error Object\n      type: object\n    BatchDataRequest:\n      example:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n      properties:\n        data:\n          $ref: '#/components/schemas/BatchDataRequest_data'\n      required:\n      - data\n      title: Batch Data Request\n      type: object\n    BatchStatusResponse:\n      example:\n        data:\n          startTime: 2000-01-23T04:56:07.000+00:00\n          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          endTime: 2000-01-23T04:56:07.000+00:00\n          error: The parameter 'formulas' is required and may not be empty.\n          status: QUEUED\n      properties:\n        data:\n          $ref: '#/components/schemas/BatchStatus'\n      title: Batch Status Response\n      type: object\n    BatchStatus:\n      example:\n        startTime: 2000-01-23T04:56:07.000+00:00\n        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n        endTime: 2000-01-23T04:56:07.000+00:00\n        error: The parameter 'formulas' is required and may not be empty.\n        status: QUEUED\n      properties:\n        id:\n          description: the id of batch request.\n          format: uuid\n          type: string\n        startTime:\n          description: Time when the batch request is started. This is in Eastern\n            Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS],\n            following ISO 8601.\n          format: date-time\n          nullable: true\n          type: string\n        endTime:\n          description: Time when the batch request is ended. This is in Eastern Time\n            Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following\n            ISO 8601.\n          format: date-time\n          nullable: true\n          type: string\n        status:\n          enum:\n          - QUEUED\n          - EXECUTING\n          - DONE\n          - FAILED\n          type: string\n        error:\n          description: Error message.\n          example: The parameter 'formulas' is required and may not be empty.\n          nullable: true\n          type: string\n      title: Batch Status\n      type: object\n    BatchDataResponse:\n      example:\n        data: '{}'\n      properties:\n        data:\n          description: |\n            The schema for the batched result is determined by the endpoint you used with the _batch_ parameter.\n            Please see the schema for that endpoint for the definition.\n          title: Batch Data\n          type: object\n      title: Batch Data Response\n      type: object\n    BatchData:\n      description: |\n        The schema for the batched result is determined by the endpoint you used with the _batch_ parameter.\n        Please see the schema for that endpoint for the definition.\n      title: Batch Data\n      type: object\n    time_series_request_data:\n      properties:\n        ids:\n          description: |\n            Array of entity identifiers.\n\n            The `ids` and `universe` parameters provide two different ways to specify the identifiers for which you want data retrieved. Please enter either the `ids` or `universe` parameter.\n          example:\n          - FDS-US\n          - IBM-US\n          - XOM-US\n          items:\n            type: string\n          title: ids\n          type: array\n        universe:\n          description: |\n            Screening expression to limit the universe\n\n            Please enter either the `ids` or `universe` parameter.\n          example: FG_CONSTITUENTS(SP50,0,CLOSE)\n          title: universe\n          type: string\n        universeType:\n          default: EQUITY\n          description: |\n            Specify the universe type to calculate the `universe` in.\n\n            Find documentation below on how to build a screen for each universe type -\n            * Equity Screen - [Online Assistant Page 20606](https://my.apps.factset.com/oa/pages/20606)\n\n            * Debt Screen - [Online Assistant Page 20888](https://my.apps.factset.com/oa/pages/20888)\n\n            * Fund Screen - [Online Assistant Page 21384](https://my.apps.factset.com/oa/pages/21384)\n\n            This parameter may only be used in conjunction with the `universe` parameter.\n          enum:\n          - EQUITY\n          - DEBT\n          - FUND\n          example: DEBT\n          title: universeType\n          type: string\n        formulas:\n          description: Array of FQL formulas\n          example:\n          - P_PRICE(0,-2,D)\n          - FG_COMPANY_NAME\n          items:\n            type: string\n          title: FQL formulas\n          type: array\n        calendar:\n          default: FIVEDAY\n          description: Calendar of data returned. The default value is FIVEDAY which\n            displays Monday through Friday, regardless of whether there were trading\n            holidays.\n          example: SEVENDAY\n          title: Calendar Setting\n          type: string\n        fsymId:\n          default: \"N\"\n          description: |\n            Specify **Y** for the `fsymId` parameter to return the **fsymId** (FactSet Default Permanent Identifier) of the `requestId`, in addition to the **requestId** field, in each response object. The default value for the `fsymId` parameter is **N**.\n\n            The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).\n          enum:\n          - \"Y\"\n          - \"N\"\n          example: \"Y\"\n          title: fsymId\n          type: string\n        displayName:\n          description: |\n            Define display names for the formulas inputted. Enter the list of display names in the same order as the formulas inputted. An additional field **displayName** will be returned in the data object for a formula.\n\n            If the number of display names does not match the number of formulas provided, an error will be returned.\n\n            To define the display name for a subset of the formulas, leave a blank in the position of the formula that won't be renamed. For example - If three formulas are inputted, to define display names only for the first and third formula, enter *displayName=FORMULA_1,,FORMULA_3*. The **displayName** field will still be included in that formula, but will contain the formula as inputted.\n          example:\n          - PRICE\n          - COMPANY_NAME\n          items:\n            type: string\n          title: displayName\n          type: array\n        flatten:\n          default: \"N\"\n          description: |\n            Specify **Y** for `flatten` to return a flat, table-like JSON response model instead of the standard nested JSON response model. This option is provided for easier data processing and visualization. The default value for `flatten` is **N**.\n\n            See the **Time-Series Result Object Flattened** schema for more detail on the response structure for flattened output.\n          enum:\n          - \"Y\"\n          - \"N\"\n          example: \"Y\"\n          title: flatten\n          type: string\n        batch:\n          default: \"N\"\n          description: |\n            Enables the ability to asynchronously \"batch\" the request, supporting a long-running request up to **10 minutes**. Upon requesting \"batch\": \"Y\", the service will respond back with an HTTP Status Code of 202.\n\n            A user is limited to running 5 Batch Requests in a 10 minute period.\n\n            *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n\n            Once a batch request is submitted, use `/batch-status` to see if the job has completed. Once completed, retrieve the results of the request via `/batch-result`. See the endpoints listed under *Batch Processing* for more information.\n          enum:\n          - \"Y\"\n          - \"N\"\n          example: \"Y\"\n          title: batch\n          type: string\n      required:\n      - formulas\n      type: object\n    cross_sectional_request_data:\n      properties:\n        ids:\n          description: |\n            Array of entity identifiers.\n\n            The `ids` and `universe` parameters provide two different ways to specify\n            the identifiers for which you want data retrieved. Please enter either the\n            `ids` or `universe` parameter.\n          example:\n          - FDS-US\n          - IBM-US\n          - XOM-US\n          items:\n            type: string\n          title: ids\n          type: array\n        universe:\n          description: |\n            Screening expression to limit the universe\n\n            Please enter either the `ids` or `universe` parameter.\n          example: FG_CONSTITUENTS(SP50,0,CLOSE)\n          title: universe\n          type: string\n        universeType:\n          default: EQUITY\n          description: |\n            Specify the universe type to calculate the `universe` in.\n\n            Find documentation below on how to build a screen for each universe type -\n              * Equity Screen - [Online Assistant Page 20606](https://my.apps.factset.com/oa/pages/20606)\n\n              * Debt Screen - [Online Assistant Page 20888](https://my.apps.factset.com/oa/pages/20888)\n\n              * Fund Screen - [Online Assistant Page 21384](https://my.apps.factset.com/oa/pages/21384)\n          enum:\n          - EQUITY\n          - DEBT\n          - FUND\n          example: DEBT\n          title: universeType\n          type: string\n        formulas:\n          description: Array of Screening formulas\n          example:\n          - P_PRICE(0)\n          - FG_COMPANY_NAME\n          items:\n            type: string\n          title: Screening formulas\n          type: array\n        backTestDate:\n          description: |\n            Specify the backtest date either in **YYYY-MM-DD**, **YYYYMMDD** or **MM/DD/YYYY** format.\n\n            To learn more about backtesting, please visit [Online Assistant Page 20610](https://my.apps.factset.com/oa/pages/20610#backtest). User must have access to backtesting functionality.\n          example: 2020-06-01\n          title: backTestDate\n          type: string\n        calendar:\n          default: FIVEDAY\n          description: Calendar of data returned.\n          example: SEVENDAY\n          title: Calendar Setting\n          type: string\n        fsymId:\n          default: \"N\"\n          description: |\n            Specify **Y** for `fsymId` to return an additional response object for the data item fsymId which will contain the fsymIds of the requestIds, in addition to the response object containing the data item requestId. The default value for `fsymId` is **N**.\n\n            The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).\n          enum:\n          - \"Y\"\n          - \"N\"\n          example: \"Y\"\n          title: fsymId\n          type: string\n        displayName:\n          description: |\n            Define display names for the formulas inputted. Enter the list of display names in the same order as the formulas inputted. An additional field **displayName** will be returned in the data object for a formula.\n\n            If the number of display names does not match the number of formulas provided, an error will be returned.\n\n            To define the display name for a subset of the formulas, leave a blank in the position of the formula that won't be renamed. For example - If three formulas are inputted, to define display names only for the first and third formula, enter *displayName=FORMULA_1,,FORMULA_3*. The **displayName** field will still be included in that formula, but will contain the formula as inputted.\n          example:\n          - PRICE\n          - COMPANY_NAME\n          items:\n            type: string\n          title: displayName\n          type: array\n        flatten:\n          default: \"N\"\n          description: |\n            Specify **Y** for `flatten` to return a flat, table-like JSON response model instead of the standard nested JSON response model. This option is provided for easier data processing and visualization. The default value for `flatten` is **N**.\n\n            See the **Cross-Sectional Result Object Flattened** schema for more detail on the response structure for flattened output.\n          enum:\n          - \"Y\"\n          - \"N\"\n          example: \"Y\"\n          title: flatten\n          type: string\n        batch:\n          default: \"N\"\n          description: |\n            Enables the ability to asynchronously \"batch\" the request, supporting a long-running request up to 10 minutes. Upon requesting \"batch\": \"Y\", the service will respond back with an HTTP Status Code of 202.\n\n            A user is limited to running 5 Batch Requests in a 10 minute period.\n\n            *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n\n            Once a batch request is submitted, use `/batch-status` to see if the job has completed. Once completed, retrieve the results of the request via `/batch-result`. See the endpoints listed under *Batch Processing* for more information.\n          enum:\n          - \"Y\"\n          - \"N\"\n          example: \"Y\"\n          title: batch\n          type: string\n      required:\n      - formulas\n      type: object\n    cross_sectional_result_object_nonflattened_warnings:\n      properties:\n        description:\n          description: Human readable message explaining the warning\n          nullable: true\n          type: string\n        effect:\n          description: Human readable message explaining the effect on the `result`\n          nullable: true\n          type: string\n      type: object\n    BatchDataRequest_data:\n      example:\n        id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n      properties:\n        id:\n          description: Batch Request identifier.\n          example: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          format: uuid\n          type: string\n      type: object\n  securitySchemes:\n    FactSetOAuth2:\n      flows:\n        clientCredentials:\n          scopes: {}\n          tokenUrl: https://auth.factset.com/as/token.oauth2\n      type: oauth2\n    FactSetApiKey:\n      scheme: basic\n      type: http\n\n",
			"canonicalURL": "/github.com/factset/enterprise-sdk@dcf75a02daedc726c313912a349d2863114bc92c/-/blob/code/java/Formula/v1/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/factset/enterprise-sdk/blob/dcf75a02daedc726c313912a349d2863114bc92c/code/java/Formula/v1/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/batch-status\": get: security: security \"FactSetOAuth2\" (index 1): oauth2 security not implemented",
	"NotImplemented": [
		"discriminator inference",
		"oauth2 security",
		"sum types with same names"
	]
}