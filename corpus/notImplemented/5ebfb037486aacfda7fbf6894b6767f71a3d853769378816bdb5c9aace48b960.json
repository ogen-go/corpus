{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bangumi/dev-docs"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "api.yaml",
			"byteSize": 7309,
			"content": "openapi: 3.0.2\ninfo:\n  title: Bangumi Private API\n  version: ''\n  description: '`next.bgm.tv` 域名不支持跨域，'\nservers:\n  - url: https://next.bgm.tv\n    description: Production server\npaths:\n  /p/login:\n    post:\n      tags:\n        - Auth\n      summary: 登录\n      operationId: login\n      description: \u003e\n        `h-captcha-response` 是 [hCaptcha\n        的验证码](https://docs.hcaptcha.com/#add-the-hcaptcha-widget-to-your-webpage)\n\n\n        site key 是 `4874acee-9c6e-4e47-99ad-e2ea1606961f`\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - email\n                - password\n                - h-captcha-response\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n                h-captcha-response:\n                  type: string\n      responses:\n        '200':\n          description: 账号密码正确，设置 Cookies\n          headers:\n            Set-Cookie:\n              description: 设置 cookies session\n              schema:\n                type: string\n                example: sessionID=abcde12345; Path=/; HttpOnly\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '400':\n          description: 请求错误或者验证码错误\n          content:\n            application/json:\n              example:\n                title: Bad Request\n                details:\n                  - Email为必填字段\n                  - Password为必填字段\n                  - HCaptchaResponse为必填字段\n                description: can't validate request body\n              schema:\n                title: ErrorDetail\n                required:\n                  - title\n                  - description\n                  - detail\n                type: object\n                properties:\n                  title:\n                    title: Title\n                    type: string\n                  description:\n                    title: Description\n                    type: string\n                  detail:\n                    title: Detail\n                    type: array\n                    items:\n                      type: string\n        '401':\n          description: 账号或密码错误\n          content:\n            application/json:\n              schema:\n                title: ErrorDetail\n                required:\n                  - title\n                  - description\n                  - detail\n                type: object\n                properties:\n                  title:\n                    title: Title\n                    type: string\n                  description:\n                    title: Description\n                    type: string\n                  detail:\n                    title: Detail\n                    type: object\n                    properties:\n                      remain:\n                        type: integer\n                        description: 剩余可用登录次数。\n        '422':\n          description: 无法以 JSON 格式解析请求\n        '502':\n          description: hCaptcha HTTP 请求失败\n  /p/logout:\n    post:\n      tags:\n        - Auth\n      summary: 登出\n      operationId: logout\n      security:\n        - CookiesSession: []\n      responses:\n        '204':\n          description: 正常登出\n        '401':\n          description: 用户未登录或者 session 已失效\n  /p/me:\n    get:\n      summary: 登出\n      operationId: getCurrentUser\n      security:\n        - CookiesSession: []\n      responses:\n        '200':\n          description: 返回当前用户\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '401':\n          description: 用户未登录或者 session 已失效\ncomponents:\n  schemas:\n    User:\n      example:\n        avatar:\n          large: https://lain.bgm.tv/pic/user/l/000/00/00/1.jpg?r=1391790456\n          medium: https://lain.bgm.tv/pic/user/m/000/00/00/1.jpg?r=1391790456\n          small: https://lain.bgm.tv/pic/user/s/000/00/00/1.jpg?r=1391790456\n        sign: Awesome!\n        username: sai\n        nickname: Sai🖖\n        id: 1\n        user_group: 1\n      title: User\n      description: |\n        实际的返回值可能包括文档未声明的 `url` 字段，此字段主要用于开发者从 api 响应直接转跳到网页。\n        客户端开发者请不用依赖于此特性，此字段的值随时可能会改变。\n      required:\n        - id\n        - username\n        - nickname\n        - user_group\n        - avatar\n        - sign\n      type: object\n      properties:\n        id:\n          title: ID\n          type: integer\n        username:\n          title: Username\n          type: string\n          description: 唯一用户名，初始与 UID 相同，可修改一次\n        nickname:\n          title: Nickname\n          type: string\n        user_group:\n          title: UserGroup\n          enum:\n            - 1\n            - 2\n            - 3\n            - 4\n            - 5\n            - 8\n            - 9\n            - 10\n            - 11\n          type: integer\n          description: \u003e-\n            用户组 - 1 = 管理员 - 2 = Bangumi 管理猿 - 3 = 天窗管理猿 - 4 = 禁言用户 - 5 = 禁止访问用户\n            - 8 = 人物管理猿 - 9 = 维基条目管理猿 - 10 = 用户 - 11 = 维基人\n          x-ms-enum:\n            name: UserGroup\n            modelAsString: false\n            values:\n              - Admin\n              - BangumiAdmin\n              - DoujinAdmin\n              - MutedUser\n              - BlockedUser\n              - PersonAdmin\n              - WikiAdmin\n              - User\n              - WikiUser\n          x-enum-varnames:\n            - Admin\n            - BangumiAdmin\n            - DoujinAdmin\n            - MutedUser\n            - BlockedUser\n            - PersonAdmin\n            - WikiAdmin\n            - User\n            - WikiUser\n        avatar:\n          $ref: '#/components/schemas/Avatar'\n        sign:\n          title: Sign\n          description: 个人签名\n          type: string\n    Avatar:\n      title: Avatar\n      required:\n        - large\n        - medium\n        - small\n      type: object\n      properties:\n        large:\n          title: Large\n          type: string\n          format: url\n        medium:\n          title: Medium\n          type: string\n          format: url\n        small:\n          title: Small\n          type: string\n          format: url\n    ErrorDetail:\n      title: ErrorDetail\n      required:\n        - title\n        - description\n      type: object\n      properties:\n        title:\n          title: Title\n          type: string\n        description:\n          title: Description\n          type: string\n        detail:\n          title: Detail\n          oneOf:\n            - type: string\n            - type: object\n              properties:\n                error:\n                  type: string\n                  description: error message\n                path:\n                  type: string\n                  description: request path\n  securitySchemes:\n    CookiesSession:\n      name: sessionID\n      type: apiKey\n      in: cookie\n",
			"canonicalURL": "/github.com/bangumi/dev-docs@49de4b47b8109785cdf440a4753cf360cdb5401d/-/blob/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bangumi/dev-docs/blob/49de4b47b8109785cdf440a4753cf360cdb5401d/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/p/logout\": post: security: security \"CookiesSession\" (index 0): cookie security not implemented",
	"NotImplemented": [
		"cookie security"
	]
}