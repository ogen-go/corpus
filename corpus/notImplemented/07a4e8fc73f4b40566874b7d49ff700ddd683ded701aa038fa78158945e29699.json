{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/oracle/helidon"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "examples/cors/src/main/resources/META-INF/openapi.yml",
			"byteSize": 2334,
			"content": "#\n# Copyright (c) 2019, 2021 Oracle and/or its affiliates.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n---\nopenapi: 3.0.0\ninfo:\n  title: Helidon SE Quickstart Example\n  description: A very simple application to reply with friendly greetings\n  version: 1.0.0\n\nservers:\n  - url: http://localhost:8000\n    description: Local test server\n\npaths:\n  /greet:\n    get:\n      summary: Returns a generic greeting\n      description: Greets the user generically\n      responses:\n        default:\n          description: Simple JSON containing the greeting\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GreetingMessage'\n  /greet/greeting:\n    put:\n      summary: Set the greeting prefix\n      description: Permits the client to set the prefix part of the greeting (\"Hello\")\n      requestBody:\n        description: Conveys the new greeting prefix to use in building greetings\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GreetingMessage'\n            examples:\n              greeting:\n                summary: Example greeting message to update\n                value: New greeting message\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json: {}\n  /greet/{name}:\n    get:\n      summary: Returns a personalized greeting\n      parameters:\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: Simple JSON containing the greeting\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GreetingMessage'\ncomponents:\n  schemas:\n    GreetingMessage:\n      properties:\n        message:\n          type: string\n",
			"canonicalURL": "/github.com/oracle/helidon@19863e66fba6522131bdd1e37203151af3968310/-/blob/examples/cors/src/main/resources/META-INF/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/oracle/helidon/blob/19863e66fba6522131bdd1e37203151af3968310/examples/cors/src/main/resources/META-INF/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/greet/greeting\": put: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}