{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/artsmolin/pythogen"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "tests/docs/openapi.yaml",
			"byteSize": 11780,
			"content": "openapi: 3.0.2\ninfo:\n  title: test server\n  version: 0.1.0\npaths:\n  /objects/{object_id}:\n    get:\n      tags:\n        - test\n      summary: Get Object\n      operationId: get_object\n      parameters:\n        - required: true\n          schema:\n            title: Object Id\n            type: string\n          name: object_id\n          in: path\n        - required: false\n          schema:\n            title: Return Error\n            type: string\n          name: return_error\n          in: query\n        - required: true\n          schema: { title: From, type: string, description: __safety_key__(from_) }\n          name: from\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetObjectResp'\n        '500':\n          description: Unknown Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnknownError'\n    delete:\n      tags:\n        - test\n      summary: Delete Object\n      operationId: delete_object\n      parameters:\n        - required: true\n          schema:\n            title: Object Id\n            type: string\n          name: object_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteObjectResp'\n    put:\n      tags:\n        - test\n      summary: Put Object\n      operationId: put_object\n      parameters:\n        - required: true\n          schema:\n            title: Object Id\n            type: string\n          name: object_id\n          in: path\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutObjectData'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutObjectResp'\n\n    patch:\n      tags:\n        - test\n      summary: Patch Object\n      operationId: patch_object\n      parameters:\n        - required: true\n          schema:\n            title: Object Id\n            type: string\n          name: object_id\n          in: path\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchObjectData'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PatchObjectResp'\n\n  /post-without-body:\n    post:\n      tags:\n        - test\n      summary: Post Object Without Body\n      operationId: post_object_without_body\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostObjectResp'\n  /objects:\n    get:\n      tags:\n        - test\n      summary: Get List objects\n      operationId: get_list_objects\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetObjectResp'\n    post:\n      tags:\n        - test\n      summary: Post Object\n      operationId: post_object\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostObjectData'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostObjectResp'\n\n  /text:\n    get:\n      tags:\n        - test\n      summary: Get Text\n      operationId: get_text\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            text/plain:\n              schema:\n                type: string\n  /empty:\n    get:\n      tags:\n        - test\n      summary: Get Empty\n      operationId: get_empty\n      responses:\n        '200':\n          description: Successful Response\n  /binary:\n    get:\n      tags:\n        - test\n      summary: Get Binary\n      operationId: get_binary\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/binary:\n              schema:\n                type: string\n                format: binary\n  /allof:\n    get:\n      tags:\n        - test\n      summary: Get Allof\n      operationId: get_allof\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllOfResp'\n  /objects-form-data:\n    post:\n      tags:\n        - test\n      summary: Post Form Object\n      operationId: post_form_object\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PostObjectData'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostObjectResp'\n  /multipart-form-data:\n    post:\n      tags:\n      - test\n      summary: Post Multipart Form Data\n      operationId: post_multipart_form_data\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: \"#/components/schemas/PostFile\"\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostObjectResp'\n  /slow/objects/{object_id}:\n    get:\n      tags:\n        - test\n      summary: Get Object Slow\n      operationId: get_object_slow\n      parameters:\n        - required: true\n          schema:\n            title: Object Id\n            type: string\n          name: object_id\n          in: path\n        - required: false\n          schema:\n            title: Return Error\n            type: string\n          name: return_error\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetObjectResp'\n        '500':\n          description: Unknown Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnknownError'\n    put:\n      tags:\n        - test\n      summary: Put Object Slow\n      operationId: put_object_slow\n      parameters:\n        - required: true\n          schema:\n            title: Object Id\n            type: string\n          name: object_id\n          in: path\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutObjectData'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutObjectResp'\n\ncomponents:\n  schemas:\n    AllOfResp:\n      title: All Of Resp\n      type: object\n      properties:\n        all_of:\n          title: All Of\n          allOf:\n            - $ref: '#/components/schemas/Data'\n    Data:\n      title: Data\n      type: object\n      properties:\n        id:\n          title: id\n          type: string\n        data:\n          title: Data\n          type: integer\n      additionalProperties: false\n    GetObjectResp:\n      title: GetObjectResp\n      type: object\n      properties:\n        string_data:\n          title: String Data\n          type: string\n          description: \"String Data. [__discriminator__(BaseObjectResp.string_data)]\"\n        integer_data:\n          title: Integer Data\n          type: integer\n        array_data:\n          title: Array Data\n          type: array\n          items:\n            type: string\n        boolean_data:\n          title: Boolean Data\n          type: boolean\n      additionalProperties: false\n    PostObjectData:\n      title: PostObjectData\n      required:\n        - string_data\n        - integer_data\n        - array_data\n        - boolean_data\n        - event-data\n      type: object\n      properties:\n        string_data:\n          title: String Data\n          type: string\n        integer_data:\n          title: Integer Data\n          type: integer\n        array_data:\n          title: Array Data\n          type: array\n          items:\n            type: string\n        boolean_data:\n          title: Boolean Data\n          type: boolean\n        event-data:\n          title: Event-Data\n          type: object\n          description: __safety_key__(event_data)\n        date:\n          type: string\n          format: date\n        datetime:\n          type: string\n          format: date-time\n        url:\n          type: string\n          format: uri\n      additionalProperties: false\n    PatchObjectData:\n      title: PatchObjectData\n      required:\n        - id\n        - data\n      type: object\n      properties:\n        id:\n          title: ID\n          type: string\n        data:\n          title: Data\n          type: integer\n      additionalProperties: false\n    PutObjectData:\n      title: PutObjectData\n      required:\n        - id\n        - data\n      type: object\n      properties:\n        id:\n          title: ID\n          type: string\n        data:\n          title: Data\n          type: integer\n      additionalProperties: false\n    PostFile:\n      title: PostFile\n      required:\n        - text\n      type: object\n      properties:\n        text:\n          type: string\n    PostObjectResp:\n      title: PostObjectResp\n      type: object\n      properties:\n        status:\n          title: Status\n          type: string\n          default: OK\n      additionalProperties: false\n    PatchObjectResp:\n      title: PatchObjectResp\n      type: object\n      properties:\n        status:\n          title: Status\n          type: string\n          default: OK\n      additionalProperties: false\n    PutObjectResp:\n      title: PutObjectResp\n      type: object\n      properties:\n        status:\n          title: Status\n          type: string\n          default: OK\n      additionalProperties: false\n    DeleteObjectResp:\n      title: DeleteObjectResp\n      type: object\n      properties:\n        status:\n          title: Status\n          type: string\n          default: OK\n      additionalProperties: false\n    UnknownError:\n      title: UnknownError\n      type: object\n      properties:\n        code:\n          title: Code\n          type: string\n          default: unknown_error\n      additionalProperties: false\n\n    TestSafetyKey:\n      title: model for testing safety key\n      type: object\n      properties:\n        for:\n          title: For\n          type: string\n          description: reserved word, expecting \"for_\"\n        class:\n          title: Class\n          type: string\n          description: reserved word, expecting \"class_\"\n        33with.dot-and-hyphens\u0026*:\n          title: With dot, hyphens and garbage\n          type: integer\n          description: invalid identifier, expecting \"with_dot_and_hyphens\"\n        34with.dot-and-hyphens\u0026*:\n          title: With dot, hyphens and garbage\n          type: integer\n          description: __safety_key__(old_feature_priority) invalid identifier, expecting \"old_feature_priority\"\n",
			"canonicalURL": "/github.com/artsmolin/pythogen@201d9ae8e5b35b8dea1fc197cbc1bcf253c46916/-/blob/tests/docs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/artsmolin/pythogen/blob/201d9ae8e5b35b8dea1fc197cbc1bcf253c46916/tests/docs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/objects-form-data\": post: requestBody: contents: application/x-www-form-urlencoded: complex form schema not implemented",
	"NotImplemented": [
		"complex form schema",
		"unsupported content types"
	]
}