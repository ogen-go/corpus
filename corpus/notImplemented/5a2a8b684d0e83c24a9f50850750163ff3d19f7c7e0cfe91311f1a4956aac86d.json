{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Metrilo/custom-integration"
		},
		"file": {
			"name": "metrilo_open_api_specification.yml",
			"size": 0,
			"path": "metrilo_open_api_specification.yml",
			"byteSize": 21861,
			"content": "openapi: 3.0.1\ninfo:\n  version: 2.1.1\n  title: Metrilo tracking API\n  description: Metrilo analytics tracking API\n  contact:\n    name: Metrilo\n    email: support@metrilo.com\n    url: 'https://www.metrilo.com'\nservers:\n  - url: https://trk.mtrl.me\ntags:\n  - name: API\npaths:\n  /category:\n    post:\n      tags:\n        - API\n      description: Adds a new category or updates an existing one in Metrilo.\n      operationId: categoryOperation\n      requestBody:\n        required: true\n        content:\n          text/plain:\n            schema:\n              $ref: '#/components/schemas/categoryOperationObject'\n      responses:\n        '200':\n          $ref: '#/components/responses/success'\n        '400':\n          $ref: '#/components/responses/errorBadRequest'\n        '401':\n          $ref: '#/components/responses/errorUnauthorized'\n        '402':\n          $ref: '#/components/responses/errorPaymentRequired'\n        '403':\n          $ref: '#/components/responses/errorForbidden'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n        '502':\n          $ref: '#/components/responses/badGateway'\n  /category/batch:\n    post:\n      tags:\n        - API\n      description: Adds multiple categories or updates existing ones in Metrilo.\n      operationId: categoryBatchOperation\n      requestBody:\n        required: true\n        content:\n          text/plain:\n            schema:\n              $ref: '#/components/schemas/categoryBatchOperationObject'\n      responses:\n        '200':\n          $ref: '#/components/responses/success'\n        '400':\n          $ref: '#/components/responses/errorBadRequest'\n        '401':\n          $ref: '#/components/responses/errorUnauthorized'\n        '402':\n          $ref: '#/components/responses/errorPaymentRequired'\n        '403':\n          $ref: '#/components/responses/errorForbidden'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n        '502':\n          $ref: '#/components/responses/badGateway'\n\n\n  /customer:\n    post:\n      tags:\n        - API\n      description: Adds a new customer or updates an existing one in Metrilo.\n      operationId: customerOperation\n      requestBody:\n        required: true\n        content:\n          text/plain:\n            schema:\n              $ref: '#/components/schemas/customerOperationObject'\n      responses:\n        '200':\n          $ref: '#/components/responses/success'\n        '400':\n          $ref: '#/components/responses/errorBadRequest'\n        '401':\n          $ref: '#/components/responses/errorUnauthorized'\n        '402':\n          $ref: '#/components/responses/errorPaymentRequired'\n        '403':\n          $ref: '#/components/responses/errorForbidden'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n        '502':\n          $ref: '#/components/responses/badGateway'\n  /customer/tag:\n    post:\n      tags:\n        - API\n      description: Adds tags to an existing customer in Metrilo.\n      operationId: customerTagOperation\n      requestBody:\n        required: true\n        content:\n          text/plain:\n            schema:\n              $ref: '#/components/schemas/customerTagOperationObject'\n      responses:\n        '200':\n          $ref: '#/components/responses/success'\n        '400':\n          $ref: '#/components/responses/errorBadRequest'\n        '401':\n          $ref: '#/components/responses/errorUnauthorized'\n        '402':\n          $ref: '#/components/responses/errorPaymentRequired'\n        '403':\n          $ref: '#/components/responses/errorForbidden'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n        '502':\n          $ref: '#/components/responses/badGateway'\n  /customer/untag:\n    post:\n      tags:\n        - API\n      description: Removes tags from an existing customer in Metrilo.\n      operationId: customerUntagOperation\n      requestBody:\n        required: true\n        content:\n          text/plain:\n            schema:\n              $ref: '#/components/schemas/customerUntagOperationObject'\n      responses:\n        '200':\n          $ref: '#/components/responses/success'\n        '400':\n          $ref: '#/components/responses/errorBadRequest'\n        '401':\n          $ref: '#/components/responses/errorUnauthorized'\n        '402':\n          $ref: '#/components/responses/errorPaymentRequired'\n        '403':\n          $ref: '#/components/responses/errorForbidden'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n        '502':\n          $ref: '#/components/responses/badGateway'\n  /customer/batch:\n    post:\n      tags:\n        - API\n      description: Adds multiple customers or updates existing ones in Metrilo.\n      operationId: customerBatchOperation\n      requestBody:\n        required: true\n        content:\n          text/plain:\n            schema:\n              $ref: '#/components/schemas/customerBatchOperationObject'\n      responses:\n        '200':\n          $ref: '#/components/responses/success'\n        '400':\n          $ref: '#/components/responses/errorBadRequest'\n        '401':\n          $ref: '#/components/responses/errorUnauthorized'\n        '402':\n          $ref: '#/components/responses/errorPaymentRequired'\n        '403':\n          $ref: '#/components/responses/errorForbidden'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n        '502':\n          $ref: '#/components/responses/badGateway'\n  /order:\n    post:\n      tags:\n        - API\n      description: Adds a new order or updates an existing one in Metrilo.\n      operationId: orderOperation\n      requestBody:\n        required: true\n        content:\n          text/plain:\n            schema:\n              $ref: '#/components/schemas/orderOperationObject'\n      responses:\n        '200':\n          $ref: '#/components/responses/success'\n        '400':\n          $ref: '#/components/responses/errorBadRequest'\n        '401':\n          $ref: '#/components/responses/errorUnauthorized'\n        '402':\n          $ref: '#/components/responses/errorPaymentRequired'\n        '403':\n          $ref: '#/components/responses/errorForbidden'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n        '502':\n          $ref: '#/components/responses/badGateway'\n  /order/batch:\n    post:\n      tags:\n        - API\n      description: Adds multiple orders or updates existing ones in Metrilo.\n      operationId: orderBatchOperation\n      requestBody:\n        required: true\n        content:\n          text/plain:\n            schema:\n              $ref: '#/components/schemas/orderBatchOperationObject'\n      responses:\n        '200':\n          $ref: '#/components/responses/success'\n        '400':\n          $ref: '#/components/responses/errorBadRequest'\n        '401':\n          $ref: '#/components/responses/errorUnauthorized'\n        '402':\n          $ref: '#/components/responses/errorPaymentRequired'\n        '403':\n          $ref: '#/components/responses/errorForbidden'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n        '502':\n          $ref: '#/components/responses/badGateway'\n  /product:\n    post:\n      tags:\n        - API\n      description: Adds a new product or updates an existing one in Metrilo.\n      operationId: productOperation\n      requestBody:\n        required: true\n        content:\n          text/plain:\n            schema:\n              $ref: '#/components/schemas/productOperationObject'\n      responses:\n        '200':\n          $ref: '#/components/responses/success'\n        '400':\n          $ref: '#/components/responses/errorBadRequest'\n        '401':\n          $ref: '#/components/responses/errorUnauthorized'\n        '402':\n          $ref: '#/components/responses/errorPaymentRequired'\n        '403':\n          $ref: '#/components/responses/errorForbidden'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n        '502':\n          $ref: '#/components/responses/badGateway'\n  /product/batch:\n    post:\n      tags:\n        - API\n      description: Adds multiple products or updates existing ones in Metrilo.\n      operationId: productBatchOperation\n      requestBody:\n        required: true\n        content:\n          text/plain:\n            schema:\n              $ref: '#/components/schemas/productBatchOperationObject'\n      responses:\n        '200':\n          $ref: '#/components/responses/success'\n        '400':\n          $ref: '#/components/responses/errorBadRequest'\n        '401':\n          $ref: '#/components/responses/errorUnauthorized'\n        '402':\n          $ref: '#/components/responses/errorPaymentRequired'\n        '403':\n          $ref: '#/components/responses/errorForbidden'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n        '502':\n          $ref: '#/components/responses/badGateway'\n\ncomponents:\n  responses:\n    success:\n      description: Success response.\n    errorBadRequest:\n      description: Bad request from client.\n    errorUnauthorized:\n      description: Project token is invalid.\n    errorPaymentRequired:\n      description: Project requires payment.\n    errorForbidden:\n      description: The IP that the request came from is ignored.\n    internalServerError:\n      description: Error from server while processing request.\n    badGateway:\n      description: Error from server accepting request.\n    error:\n      description: Error response.\n\n  schemas:\n    basicBackendObject:\n      type: object\n      required:\n        - time\n        - token\n      properties:\n        time:\n          type: integer\n          description: Integer representation of the event time (milliseconds from 1970).\n          example: 1518004715732\n        token:\n          type: string\n          description: Shop API token.\n          example: ccc111ddddaaaaac\n        platform:\n          type: string\n          description: Shop platform versioning.\n          example: Wordpress 4.2.7 / Woocommerce 3.5\n        pluginVersion:\n          type: string\n          description: Metrilo plugin version.\n          example: 1.1.0\n    categoryObject:\n      allOf:\n        - $ref: '#/components/schemas/categoryIdObject'\n        - required:\n            - name\n          properties:\n            name:\n              type: string\n              description: Category display name in the shop.\n              example: Clothing\n            url:\n              type: string\n              description: Landing page for the shop category.\n              example: 'http://shop-tavan.customerboard.co/cagetory/clothing'\n    customerObject:\n      allOf:\n        - $ref: '#/components/schemas/visitorIdentityObject'\n        - type: object\n          required:\n            - createdAt\n          properties:\n            createdAt:\n              type: integer\n              description: Integer representation of the time the customer was created (milliseconds from 1970).\n              example: 1518004715732\n            firstName:\n              type: string\n              description: Customer's first name.\n              example: Johny\n            lastName:\n              type: string\n              description: Customer's last name.\n              example: Bravo\n            subscribed:\n              type: boolean\n              description: If the user has opted in for receiving emails.\n              example: true\n            tags:\n              type: array\n              items:\n                  type: string\n                  description: Tag labels that are assigned to the customer in Metrilo. (tags are merged, not overwritten)\n                  example:\n                    - early_subscriber\n                    - big_spender\n    customerTagObject:\n      allOf:\n        - $ref: '#/components/schemas/visitorIdentityObject'\n        - type: object\n          required:\n            - createdAt\n            - email\n            - tags\n          properties:\n            email:\n              type: string\n              description: The email of the customer.\n              example: johnybravo@metrilo.com\n            tags:\n              type: array\n              items:\n                  type: string\n                  description: Tag labels that are assigned to the customer in Metrilo. (tags are merged, not overwritten)\n                  example:\n                    - early_subscriber\n                    - big_spender\n    customerUntagObject:\n      allOf:\n        - $ref: '#/components/schemas/visitorIdentityObject'\n        - type: object\n          required:\n            - createdAt\n            - email\n            - tags\n          properties:\n            email:\n              type: string\n              description: The email of the customer.\n              example: johnybravo@metrilo.com\n            tags:\n              type: array\n              items:\n                  type: string\n                  description: Tag labels that are removed from the customer in Metrilo. (missing tags are omitted)\n                  example:\n                    - early_subscriber\n                    - big_spender\n    orderObject:\n      type: object\n      required:\n        - id\n        - createdAt\n        - amount\n        - products\n        - status\n      properties:\n        id:\n          type: string\n          description: Unique ID of the order in the shop's database.\n          example: 14\n        createdAt:\n          type: integer\n          description: Integer representation of the time the order was created (milliseconds from 1970).\n          example: 1518004715732\n        email:\n          type: string\n          description: Customer's email address. Used to link to an existing customer.\n          example: johnybravo@metrilo.com\n        amount:\n          type: number\n          description: Total amount of the order, including all shipping expenses, tax and the price of items.\n          example: 308.42\n        coupons:\n          type: array\n          items:\n            type: string\n          description: Coupons applied to the order. Stored case insensitive.\n          example:\n            - EASTER15OFF\n        status:\n          type: string\n          description: State of the order.\n          example: completed\n        products:\n          type: array\n          items:\n            type: object\n            required:\n              - productId\n              - quantity\n            properties:\n              productId:\n                type: string\n                description: The ID of the product in the shop's database.\n                example: 91\n              quantity:\n                type: number\n                description: How many pieces of the product the visitor has added to the cart.\n                example: 2\n        billing:\n          type: object\n          description: Order's billing information.\n          properties:\n            address:\n              type: string\n              description: Full billing address.\n              example: 15 Somewhere Road, Brynmenyn\n            city:\n              type: string\n              description: The exact city of the address.\n              example: Bridgend\n            countryCode:\n              type: string\n              description: Billing country 2-letter ISO code.\n              example: CA\n            phone:\n              type: string\n              description: Phone number to contact for further details about the order.\n              example: 01559 032133\n            postcode:\n              type: string\n              description: Postcode for delivery and billing.\n              example: NW1 4DF\n            paymentMethod:\n              type: string\n              description: How the visitor will pay for the item(s), e.g. paypal, check, etc.\n              example: PayPal\n        ipAddress:\n          type: string\n          description: The IP address of the customer when they placed the order.\n          example: '111.222.333.444'\n    productObject:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        categories:\n          type: array\n          items:\n            type: string\n          description: Category ID-s of the product in the shop's database\n          example: ['42', '13']\n        id:\n          type: string\n          description: The ID of the product in the shop's database.\n          example: '91'\n        sku:\n          type: string\n          description: Unique product identifier from the shop.\n          example: CM01-R\n        imageUrl:\n          type: string\n          description: Absolute URL to the cover image of the product.\n          example: 'http://shop-tavan.customerboard.co/wp-content/uploads/2018/02/91.jpg'\n        name:\n          type: string\n          description: 'The name of the product, as displayed in the shop.'\n          example: Rare unique blue shirt\n        price:\n          type: number\n          description: Price of the product. (Price is required, if there's no option defined.)\n          example: 23.65\n        url:\n          type: string\n          description: Landing page of the product within the shop.\n          example: 'http://shop-tavan.customerboard.co/product/rare-unique-blue-shirt/'\n        options:\n          # Since options might be deleted from a store system, but still be present in orders.\n          # Based on discussion https://docs.google.com/document/d/1wbjOqfH_-vMQRw8X3DrZ5bBZ7muUIZoDXQQZVM6-cQM/edit#heading=h.u6chf4mjkopt\n          type: array\n          description: Product options/variations. (options are merged, not overwritten)\n          items:\n            type: object\n            description: 'Product option (size, color, variant, etc.) is not mandatory.'\n            required:\n              - id\n              - name\n              - price\n            properties:\n              id:\n                type: string\n                description: The ID of the product option in the shop's database.\n                example: '52'\n              sku:\n                type: string\n                description: Unique idenrifier from the shop.\n                example: CM01-W\n              name:\n                type: string\n                description: The name/title of the option as displayed in the shop.\n                example: On Sale - size XS\n              price:\n                type: number\n                description: Price of the option for this product.\n                example: 15.99\n              imageUrl:\n                type: string\n                description: Absolute URL to the cover image of the product.\n                example: 'http://shop-tavan.customerboard.co/wp-content/uploads/2018/02/91.jpg'\n    visitorIdentityObject:\n      type: object\n      required:\n        - email\n      properties:\n        email:\n          type: string\n          description: Visitor's email address.\n          example: johnybravo@metrilo.com\n    categoryIdObject:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          description: Unique ID of category in the shop database.\n          example: 12\n    categoryOperationObject:\n      allOf:\n        - $ref: '#/components/schemas/basicBackendObject'\n        - required:\n            - params\n          properties:\n            params:\n              allOf:\n                - $ref: '#/components/schemas/categoryObject'\n    categoryBatchOperationObject:\n      allOf:\n        - $ref: '#/components/schemas/basicBackendObject'\n        - type: object\n          required:\n            - batch\n          properties:\n            batch:\n              type: array\n              items:\n                $ref: '#/components/schemas/categoryObject'\n    customerOperationObject:\n      allOf:\n        - $ref: '#/components/schemas/basicBackendObject'\n        - type: object\n          required:\n            - params\n          properties:\n            params:\n              allOf:\n                - $ref: '#/components/schemas/customerObject'\n    customerTagOperationObject:\n      allOf:\n        - $ref: '#/components/schemas/basicBackendObject'\n        - type: object\n          required:\n            - params\n          properties:\n            params:\n              allOf:\n                - $ref: '#/components/schemas/customerTagObject'\n    customerUntagOperationObject:\n      allOf:\n        - $ref: '#/components/schemas/basicBackendObject'\n        - type: object\n          required:\n            - params\n          properties:\n            params:\n              allOf:\n                - $ref: '#/components/schemas/customerUntagObject'\n    customerBatchOperationObject:\n      allOf:\n        - $ref: '#/components/schemas/basicBackendObject'\n        - type: object\n          required:\n            - batch\n          properties:\n            batch:\n              type: array\n              items:\n                $ref: '#/components/schemas/customerObject'\n    orderOperationObject:\n      allOf:\n        - $ref: '#/components/schemas/basicBackendObject'\n        - required:\n            - params\n          properties:\n            params:\n              allOf:\n                - $ref: '#/components/schemas/orderObject'\n    orderBatchOperationObject:\n      allOf:\n        - $ref: '#/components/schemas/basicBackendObject'\n        - required:\n            - params\n          properties:\n            batch:\n              type: array\n              items:\n                $ref: '#/components/schemas/orderObject'\n    productOperationObject:\n      allOf:\n        - $ref: '#/components/schemas/basicBackendObject'\n        - required:\n            - params\n          properties:\n            params:\n              allOf:\n                - $ref: '#/components/schemas/productObject'\n    productBatchOperationObject:\n      allOf:\n        - $ref: '#/components/schemas/basicBackendObject'\n        - required:\n            - params\n          properties:\n            batch:\n              type: array\n              items:\n                $ref: '#/components/schemas/productObject'\n",
			"canonicalURL": "/github.com/Metrilo/custom-integration@892d6fed86b7f9530a8186829378570cd6ef5e42/-/blob/metrilo_open_api_specification.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Metrilo/custom-integration/blob/892d6fed86b7f9530a8186829378570cd6ef5e42/metrilo_open_api_specification.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/product\": post: requestBody: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}