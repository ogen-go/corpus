{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Cosmo-Tech/cosmotech-api"
		},
		"file": {
			"name": "scenariorun.yaml",
			"size": 0,
			"path": "scenariorun/src/main/openapi/scenariorun.yaml",
			"byteSize": 28718,
			"content": "openapi: 3.0.3\n\ninfo:\n  title: Cosmo Tech ScenarioRun Manager API\n  description: Cosmo Tech ScenarioRun Manager API\n  version: 0.0.8-SNAPSHOT\n\nservers:\n- url: 'https://api.azure.cosmo-platform.com'\n- url: 'http://localhost:4010'\n\nsecurity:\n- oAuth2AuthCode: [ ]\n\ntags:\n- name: scenariorun\n  description: ScenarioRun Management\n\npaths:\n  /organizations/{organization_id}/scenarioruns/search:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: searchScenarioRuns\n      tags:\n        - scenariorun\n      summary: Search ScenarioRuns\n      requestBody:\n        description: the ScenarioRun search parameters\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScenarioRunSearch'\n            examples:\n              BrewerySearch:\n                $ref: '#/components/examples/BrewerySearch'\n          application/yaml:\n            schema:\n              type: string\n              format: binary\n            examples:\n              BrewerySearch:\n                $ref: '#/components/examples/BrewerySearch'\n      responses:\n        \"200\":\n          description: the scenariorun details\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ScenarioRun'\n              examples:\n                OneScenarioRun:\n                  $ref: '#/components/examples/OneScenarioRun'\n  /organizations/{organization_id}/scenarioruns/startcontainers:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: startScenarioRunContainers\n      tags:\n        - scenariorun\n      summary: Start a new scenariorun with raw containers definition\n      requestBody:\n        description: the raw containers definition\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScenarioRunStartContainers'\n            examples:\n              ScenarioRunStartContainers:\n                $ref: '#/components/examples/BreweryScenarioRunStartContainers'\n          application/yaml:\n            schema:\n              type: string\n              format: binary\n            examples:\n              ScenarioRunStartContainers:\n                $ref: '#/components/examples/BreweryScenarioRunStartContainers'\n      responses:\n        \"202\":\n          description: the scenariorun details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScenarioRun'\n              examples:\n                ScenarioRun:\n                  $ref: '#/components/examples/BreweryScenarioRunContainer'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: the Scenario specified is unknown or you don't have access to it\n  /organizations/{organization_id}/scenarioruns/{scenariorun_id}:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: scenariorun_id\n        in: path\n        description: the ScenarioRun identifier\n        required: true\n        schema:\n          type: string\n    get:\n      operationId: findScenarioRunById\n      tags:\n        - scenariorun\n      summary: Get the details of a scenariorun\n      responses:\n        \"200\":\n          description: the ScenarioRun details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScenarioRun'\n              examples:\n                ScenarioRun:\n                  $ref: '#/components/examples/BreweryScenarioRun'\n        \"404\":\n          description: the ScenarioRun specified is unknown or you don't have access to it\n    delete:\n      operationId: deleteScenarioRun\n      tags:\n        - scenariorun\n      summary: Delete a scenariorun\n      responses:\n        \"204\":\n          description: Request succeeded\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: the ScenarioRun specified is unknown or you don't have access to it\n  /organizations/{organization_id}/scenarioruns/{scenariorun_id}/status:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: scenariorun_id\n        in: path\n        description: the ScenarioRun identifier\n        required: true\n        schema:\n          type: string\n    get:\n      operationId: getScenarioRunStatus\n      tags:\n        - scenariorun\n      summary: get the status for the ScenarioRun\n      responses:\n        \"200\":\n          description: the scenariorun status details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScenarioRunStatus'\n              examples:\n                ScenarioRun:\n                  $ref: '#/components/examples/BreweryScenarioRunStatus'\n  /organizations/{organization_id}/scenarioruns/{scenariorun_id}/logs:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: scenariorun_id\n        in: path\n        description: the ScenarioRun identifier\n        required: true\n        schema:\n          type: string\n    get:\n      operationId: getScenarioRunLogs\n      tags:\n        - scenariorun\n      summary: get the logs for the ScenarioRun\n      responses:\n        \"200\":\n          description: the scenariorun logs details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScenarioRunLogs'\n              examples:\n                ScenarioRun:\n                  $ref: '#/components/examples/BreweryScenarioRunLogs'\n  /organizations/{organization_id}/scenarioruns/{scenariorun_id}/cumulatedlogs:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: scenariorun_id\n        in: path\n        description: the ScenarioRun identifier\n        required: true\n        schema:\n          type: string\n    get:\n      operationId: getScenarioRunCumulatedLogs\n      tags:\n        - scenariorun\n      summary: Get the cumulated logs of a scenariorun\n      responses:\n        \"200\":\n          description: the ScenarioRun cumulated logs\n          content:\n            text/plain:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: the ScenarioRun specified is unknown or you don't have access to it\n  /organizations/{organization_id}/workspaces/{workspace_id}/scenarioruns:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: workspace_id\n        in: path\n        description: the Workspace identifier\n        required: true\n        schema:\n          type: string\n    get:\n      operationId: getWorkspaceScenarioRuns\n      tags:\n        - scenariorun\n      summary: get the list of ScenarioRuns for the Workspace\n      responses:\n        \"200\":\n          description: the scenariorun details list\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ScenarioRun'\n              examples:\n                OneScenarioRun:\n                  $ref: '#/components/examples/OneScenarioRun'\n  /organizations/{organization_id}/workspaces/{workspace_id}/scenarios/{scenario_id}/scenarioruns:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: workspace_id\n        in: path\n        description: the Workspace identifier\n        required: true\n        schema:\n          type: string\n      - name: scenario_id\n        in: path\n        description: the Scenario identifier\n        required: true\n        schema:\n          type: string\n    get:\n      operationId: getScenarioRuns\n      tags:\n        - scenariorun\n      summary: get the list of ScenarioRuns for the Scenario\n      responses:\n        \"200\":\n          description: the scenariorun details list\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ScenarioRun'\n              examples:\n                OneScenarioRun:\n                  $ref: '#/components/examples/OneScenarioRun'\n  /organizations/{organization_id}/workspaces/{workspace_id}/scenarios/{scenario_id}/run:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: workspace_id\n        in: path\n        description: the Workspace identifier\n        required: true\n        schema:\n          type: string\n      - name: scenario_id\n        in: path\n        description: the Scenario identifier\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: runScenario\n      tags:\n        - scenariorun\n      summary: run a ScenarioRun for the Scenario\n      responses:\n        \"200\":\n          description: the scenariorun details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScenarioRun'\n              examples:\n                ScenarioRun:\n                  $ref: '#/components/examples/BreweryScenarioRun'\n  /organizations/{organization_id}/scenarioruns/{scenariorun_id}/stop:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: scenariorun_id\n        in: path\n        description: the scenariorun identifier\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: stopScenarioRun\n      tags:\n        - scenariorun\n      summary: stop a ScenarioRun for the Scenario\n      responses:\n        \"200\":\n          description: the scenariorun status details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScenarioRunStatus'\n              examples:\n                ScenarioRun:\n                  $ref: '#/components/examples/BreweryScenarioRunStatus'\ncomponents:\n  securitySchemes:\n    oAuth2AuthCode:\n      type: oauth2\n      description: OAuth2 authentication\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/v2.0/authorize\n          scopes:\n            http://dev.api.cosmotech.com/platform: Platform scope\n  schemas:\n    ScenarioRunSearch:\n      type: object\n      description: the search options\n      properties:\n        solutionId:\n          type: string\n          description: the Solution Id to search\n        runTemplateId:\n          type: string\n          description: the Solution Analysis Id to search\n        workspaceId:\n          type: string\n          description: the Workspace Id to search\n        scenarioId:\n          type: string\n          description: the Scenario Id to search\n        state:\n          type: string\n          description: the state to search\n          enum: [\"FetchingDatasets\",\"FetchingScenarioParameters\",\"ApplyingScenarioParameters\",\"ValidatingScenarioData\",\"SendingScenarioDataToDataWarehouse\",\"PreRun\",\"Running\",\"PostRun\",\"Success\",\"Failed\"]\n        workflowId:\n          type: string\n          description: the Cosmo Tech compute cluster Argo Workflow Id to search\n        workflowName:\n          type: string\n          description: the Cosmo Tech compute cluster Argo Workflow Name\n        ownerId:\n          type: string\n          description: the owner Id to search\n    ScenarioRunStartContainers:\n      type: object\n      description: the parameters to run directly containers\n      properties:\n        generateName:\n          type: string\n          description: the base name for workflow name generation\n        csmSimulationId:\n          type: string\n          description: Cosmo Tech Simulation Run Id\n        nodeLabel:\n          type: string\n          description: the node label request\n        labels:\n          type: object\n          description: the workflow labels\n          additionalProperties:\n            type: string\n        containers:\n          type: array\n          description: the containerslist\n          items:\n            $ref: '#/components/schemas/ScenarioRunContainer'\n      required:\n        - csmSimulationId\n        - containers\n    ScenarioRunStatus:\n      type: object\n      description: a ScenarioRun status\n      properties:\n        id:\n          type: string\n          description: the ScenarioRun id\n        organizationId:\n          type: string\n          description: the ScenarioRun id\n        workflowId:\n          type: string\n          description: the Cosmo Tech compute cluster Argo Workflow Id to search\n        workflowName:\n          type: string\n          description: the Cosmo Tech compute cluster Argo Workflow Name\n        startTime:\n          type: string\n          description: the ScenarioRun start Date Time\n        endTime:\n          type: string\n          description: the ScenarioRun end Date Time\n        phase:\n          type: string\n          description: high-level summary of where the workflow is in its lifecycle\n        progress:\n          type: string\n          description: progress to completion\n        message:\n          type: string\n          description: a  human readable message indicating details about why the workflow is in this condition\n        estimatedDuration:\n          type: integer\n          description: estimatedDuration in seconds\n        nodes:\n          type: array\n          description: status of ScenarioRun nodes\n          items:\n            $ref: '#/components/schemas/ScenarioRunStatusNode'\n        state:\n          $ref: '#/components/schemas/ScenarioRunState'\n    ScenarioRunState:\n      type: string\n      readOnly: true\n      description: the ScenarioRun end-to-end state\n      enum:\n        - Running\n        - Successful\n        - Failed\n        - Unknown\n        # PROD-7420 : return data ingestion status\n        - DataIngestionInProgress\n        - DataIngestionFailure\n    ScenarioRunStatusNode:\n      type: object\n      description: status of a ScenarioRun Node\n      properties:\n        id:\n          type: string\n          description: the node id\n        name:\n          type: string\n          description: the node unique name\n        containerName:\n          type: string\n          description: the ScenarioRun container name\n        estimatedDuration:\n          type: integer\n          description: estimatedDuration in seconds\n        hostNodeName:\n          type: string\n          description: HostNodeName name of the Kubernetes node on which the Pod is running, if applicable\n        message:\n          type: string\n          description: a human readable message indicating details about why the node is in this condition\n        phase:\n          type: string\n          description: high-level summary of where the node is in its lifecycle\n        progress:\n          type: string\n          description: progress to completion\n        startTime:\n          type: string\n          description: the node start time\n        endTime:\n          type: string\n          description: the node end time\n    ScenarioRun:\n      type: object\n      description: a ScenarioRun with only base properties\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: the ScenarioRun\n        state:\n          $ref: '#/components/schemas/ScenarioRunState'\n        organizationId:\n          type: string\n          description: the Organization id\n        workflowId:\n          type: string\n          description: the Cosmo Tech compute cluster Argo Workflow Id to search\n        csmSimulationRun:\n          type: string\n          readOnly: true\n          description: the Cosmo Tech Simulation Run Id\n        generateName:\n          type: string\n          description: the base name for workflow name generation\n        workflowName:\n          type: string\n          description: the Cosmo Tech compute cluster Argo Workflow Name\n        ownerId:\n          type: string\n          readOnly: true\n          description: the user id which own this scenariorun\n        workspaceId:\n          type: string\n          readOnly: true\n          description: the Workspace Id\n        workspaceKey:\n          type: string\n          readOnly: true\n          description: technical key for resource name convention and version grouping. Must be unique\n        scenarioId:\n          type: string\n          readOnly: true\n          description: the Scenario Id\n        solutionId:\n          type: string\n          readOnly: true\n          description: the Solution Id\n        runTemplateId:\n          type: string\n          readOnly: true\n          description: the Solution Run Template id\n        computeSize:\n          type: string\n          readOnly: true\n          description: the compute size needed for this Analysis. Standard sizes are basic and highcpu. Default is basic\n        sdkVersion:\n          type: string\n          description: the MAJOR.MINOR version used to build the solution solution\n        noDataIngestionState:\n          type: boolean\n          description: set to true if the run template does not use any Datawarehouse consumers (AMQP consumers for Azure)\n        datasetList:\n          type: array\n          readOnly: true\n          description: the list of Dataset Id associated to this Analysis\n          items:\n            type: string\n        parametersValues:\n          type: array\n          readOnly: true\n          description: the list of Run Template parameters values\n          items:\n            $ref: '#/components/schemas/RunTemplateParameterValue'\n        sendDatasetsToDataWarehouse:\n          type: boolean\n          readOnly: true\n          description: whether or not the Datasets values are send to the DataWarehouse prior to Simulation Run. If not set follow the Workspace setting\n        sendInputParametersToDataWarehouse:\n          type: boolean\n          readOnly: true\n          description: whether or not the input parameters values are send to the DataWarehouse prior to Simulation Run. If not set follow the Workspace setting\n        nodeLabel:\n          type: string\n          readOnly: true\n          description: the node label request\n        containers:\n          type: array\n          description: the containers list. This information is not returned by the API.\n          items:\n            $ref: '#/components/schemas/ScenarioRunContainer'\n    RunTemplateParameterValue:\n      type: object\n      description: the value of Analysis parameter for a Scenario for this ScenarioRun\n      properties:\n        parameterId:\n          type: string\n          description: the parameter Id\n        varType:\n          type: string\n          readOnly: true\n          description: the parameter value type\n        value:\n          type: string\n          description: the parameter value\n      required:\n        - parameterId\n        - value\n    ScenarioRunContainer:\n      type: object\n      description: a ScenarioRun container description\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: the container Id\n        name:\n          type: string\n          description: the container name\n        labels:\n          type: object\n          description: the metadata labels\n          additionalProperties:\n            type: string\n        envVars:\n          type: object\n          description: environment variable map\n          additionalProperties:\n            type: string\n        image:\n          type: string\n          description: the container image URI\n        entrypoint:\n          type: string\n          description: the container entry point\n        runArgs:\n          type: array\n          description: the list of run arguments for the container\n          items:\n            type: string\n        dependencies:\n          type: array\n          description: the list of dependencies container name to run this container\n          items:\n            type: string\n        solutionContainer:\n          type: boolean\n          readOnly: true\n          description: whether or not this container is a Cosmo Tech solution container\n        artifacts:\n          type: array\n          description: the list of artifacts\n          items:\n            $ref: '#/components/schemas/ScenarioRunContainerArtifact'\n      required:\n        - name\n        - image\n    ScenarioRunContainerArtifact:\n      type: object\n      description: a scenario run container artifact\n      properties:\n        name:\n          type: string\n          description: the artifact name\n        path:\n          type: string\n          description: the artifact path (relative to /var/csmoutput)\n    ScenarioRunLogs:\n      type: object\n      description: the scenariorun logs returned by all containers\n      properties:\n        scenariorunId:\n          type: string\n          readOnly: true\n          description: the ScenarioRun Id\n        containers:\n          type: object\n          readOnly: true\n          description: the container map of logs\n          additionalProperties:\n            $ref: '#/components/schemas/ScenarioRunContainerLogs'\n    ScenarioRunContainerLogs:\n      type: object\n      description: logs for a given container\n      properties:\n        nodeId:\n          type: string\n          readOnly: true\n          description: the node Id which has executed this log\n        containerName:\n          type: string\n          readOnly: true\n          description: the container name\n        children:\n          type: array\n          readOnly: true\n          description: the list of children node id\n          items:\n            type: string\n        logs:\n          type: string\n          readOnly: true\n          description: the node logs in plain text\n  examples:\n    BreweryScenarioRun:\n      summary: Brewery ScenarioRun example\n      description: Brewery ScenarioRun example\n      value:\n        id: SR-bDMr5lM9Vp\n        organizationId: O-x2QOMVXpjX\n        workflowId: 07193ced-9895-444f-b2be-31e8bfc3e768\n        csmSimulationRun: a2880d46-a60d-4215-a593-783452e0df8f\n        generateName: workflow-s-eeypwem0kw-\n        workflowName: workflow-s-eeypwem0kw-lsczk\n        ownerId: null\n        workspaceId: W-OGNQqJ7wP0\n        workspaceKey: Brewery\n        scenarioId: S-EEYpWeM0kW\n        solutionId: SOL-w4Kn79JXKz\n        runTemplateId: hundred\n        computeSize: '%NONE%'\n        datasetList: null\n        parametersValues: null\n        sendDatasetsToDataWarehouse: false\n        sendInputParametersToDataWarehouse: false\n        nodeLabel: null\n    BreweryScenarioRunContainer:\n      summary: Brewery ScenarioRun Containers example\n      description: Brewery ScenarioRun ran with containers information example\n      value:\n        id: \"1\"\n        workflowId: \"1\"\n        workflowName: \"w1\"\n        ownerId: \"1\"\n        state: Running\n        startTime: 4/15/2021, 10:52:18.593 AM\n        nodeLabel: highcpupool\n    OneScenarioRun:\n      summary: Brewery ScenarioRun list example\n      description: Brewery ScenarioRun list example\n      value:\n        - id: SR-bDMr5lM9Vp\n          organizationId: O-x2QOMVXpjX\n          workflowId: 07193ced-9895-444f-b2be-31e8bfc3e768\n          csmSimulationRun: a2880d46-a60d-4215-a593-783452e0df8f\n          generateName: workflow-s-eeypwem0kw-\n          workflowName: workflow-s-eeypwem0kw-lsczk\n          ownerId: null\n          workspaceId: W-OGNQqJ7wP0\n          workspaceKey: Brewery\n          scenarioId: S-EEYpWeM0kW\n          solutionId: SOL-w4Kn79JXKz\n          runTemplateId: hundred\n          computeSize: '%NONE%'\n          datasetList: null\n          parametersValues: null\n          sendDatasetsToDataWarehouse: false\n          sendInputParametersToDataWarehouse: false\n          nodeLabel: null\n    BrewerySearch:\n      summary: Brewery search ScenarioRun example\n      description: Brewery search ScenarioRun of Workspace 1 in Running state example\n      value:\n        workspaceId: \"1\"\n        state: \"Running\"\n    BreweryScenarioRunStartContainers:\n      summary: Brewery start ScenarioRun directly with containers example\n      description: Brewery start ScenarioRun directly with containers example\n      value:\n        generateName: workflow-\n        nodeLabel: highcpupool\n    BreweryScenarioRunLogs:\n      summary: Brewery ScenarioRun logs  example\n      description: Brewery ScenarioRun logs with plain text example\n      value:\n        scenariorunId: \"1\"\n        containers: \n          fetchDatasetContainers:\n            nodeId: azertyuiop-123\n            containerName: azertyuiop\n            children:\n              - wxcvbn\n            logs: cannot read source file\n          runLogs:\n            nodeid: wxcvbn-123\n            containerName: wxcvbn\n            logs: cannot run solution\n    BreweryScenarioRunStatus:\n      summary: Brewery status example\n      description: Brewery Scenario Run status example\n      value:\n        id: SR-bDMr5lM9Vp\n        organizationId: O-x2QOMVXpjX\n        workflowId: 07193ced-9895-444f-b2be-31e8bfc3e768\n        workflowName: workflow-s-eeypwem0kw-lsczk\n        startTime: \"2021-05-18T16:15:29.000Z\"\n        endTime: \"2021-05-18T16:17:07.000Z\"\n        phase: Succeeded\n        progress: 5/5\n        message: null\n        estimatedDuration: null\n        nodes:\n          - id: workflow-s-eeypwem0kw-lsczk\n            name: workflow-s-eeypwem0kw-lsczk\n            displayName: workflow-s-eeypwem0kw-lsczk\n            estimatedDuration: null\n            hostNodeName: null\n            message: null\n            phase: Succeeded\n            progress: 5/5\n            startTime: \"2021-05-18T16:15:29.000Z\"\n            endTime: \"2021-05-18T16:17:07.000Z\"\n          - id: workflow-s-eeypwem0kw-lsczk-1050490228\n            name: workflow-s-eeypwem0kw-lsczk.applyParametersContainer\n            displayName: applyParametersContainer\n            estimatedDuration: null\n            hostNodeName: phoenix-worker\n            message: null\n            phase: Succeeded\n            progress: 1/1\n            startTime: \"2021-05-18T16:15:29.000Z\"\n            endTime: \"2021-05-18T16:15:43.000Z\"\n          - id: workflow-s-eeypwem0kw-lsczk-1339592929\n            name: workflow-s-eeypwem0kw-lsczk.postRunContainer\n            displayName: postRunContainer\n            estimatedDuration: null\n            hostNodeName: phoenix-worker\n            message: null\n            phase: Succeeded\n            progress: 1/1\n            startTime: \"2021-05-18T16:16:45.000Z\"\n            endTime: \"2021-05-18T16:16:57.000Z\"\n          - id: workflow-s-eeypwem0kw-lsczk-2556449795\n            name: workflow-s-eeypwem0kw-lsczk.runContainer\n            displayName: runContainer\n            estimatedDuration: null\n            hostNodeName: null\n            message: null\n            phase: Succeeded\n            progress: 1/1\n            startTime: \"2021-05-18T16:16:35.000Z\"\n            endTime: \"2021-05-18T16:16:42.000Z\"\n          - id: workflow-s-eeypwem0kw-lsczk-545137412\n            name: workflow-s-eeypwem0kw-lsczk.preRunContainer\n            displayName: preRunContainer\n            estimatedDuration: null\n            hostNodeName: phoenix-worker\n            message: null\n            phase: Succeeded\n            progress: 1/1\n            startTime: \"2021-05-18T16:16:13.000Z\"\n            endTime: \"2021-05-18T16:16:25.000Z\"\n          - id: workflow-s-eeypwem0kw-lsczk-996178104\n            name: workflow-s-eeypwem0kw-lsczk.validateDataContainer\n            displayName: validateDataContainer\n            estimatedDuration: null\n            hostNodeName: phoenix-worker\n            message: null\n            phase: Succeeded\n            progress: 1/1\n            startTime: \"2021-05-18T16:15:53.000Z\"\n            endTime: \"2021-05-18T16:16:03.000Z\"\n",
			"canonicalURL": "/github.com/Cosmo-Tech/cosmotech-api@56c19a68914e91e0ac5ec3e3ec50952c8464a03b/-/blob/scenariorun/src/main/openapi/scenariorun.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Cosmo-Tech/cosmotech-api/blob/56c19a68914e91e0ac5ec3e3ec50952c8464a03b/scenariorun/src/main/openapi/scenariorun.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/organizations/{organization_id}/scenarioruns/startcontainers\": post: security: security \"oAuth2AuthCode\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security",
		"unsupported content types"
	]
}