{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stellar/go"
		},
		"file": {
			"name": "admin_oapi.yml",
			"size": 0,
			"path": "services/horizon/internal/httpx/static/admin_oapi.yml",
			"byteSize": 6451,
			"content": "openapi: 3.0.3\ninfo:\n  title: Horizon Admin API\n  version: 1.0.0\n  description: |-\n    The Admin API is optionally published on separate local port and provides access to \n    some aspects of server config and settings. It is only enabled if runtime parameter `--admin-port=\u003cport\u003e` is specified.\nservers:\n  - url: http://localhost:4200/\npaths:\n  /metrics:\n    get:\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            text/plain:\n              example: |\n                # HELP go_gc_duration_seconds A summary of the GC invocation durations.\n                # TYPE go_gc_duration_seconds summary\n                go_gc_duration_seconds{quantile=\"0\"} 2.7834e-05\n                go_gc_duration_seconds{quantile=\"0.25\"} 0.000158374\n                go_gc_duration_seconds{quantile=\"0.5\"} 0.000334749\n                go_gc_duration_seconds{quantile=\"0.75\"} 0.000922251\n                go_gc_duration_seconds{quantile=\"1\"} 0.02497575\n                go_gc_duration_seconds_sum 2.140231182\n                go_gc_duration_seconds_count 7466\n                ... many, many more\n      summary: Get latest metrics on server runtime\n      operationId: Get latest metrics on server runtime\n      description: ''\n      tags: []\n      parameters: []\n  /pprof/heap:\n    get:\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/octet-stream:\n              example: |\n                ... binary\n      summary: Get golang performance heap dump\n      operationId: Get golang performance heap dump\n      description: ''\n      tags: []\n      parameters: []\n  /pprof/profile:\n    get:\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/octet-stream:\n              example: |\n                ... binary        \n      summary: Get golang performance profile dump\n      operationId: Get golang performance profile dump\n      description: ''\n      tags: []\n      parameters: []\n  /ingestion/filters/asset:\n    get:\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssetConfigExisting'\n      summary: Get Asset Filter Config\n      operationId: Get Asset Filter Config\n      description: Retrieve the configuration for the Asset Filter.\n      tags: []\n      parameters: []\n    put:\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssetConfigExisting'\n      summary: Update the Asset Filter Config\n      operationId: Update the Asset Filter Config\n      description: Send the new configuration model which will replace current for Asset Filter.\n      tags: []\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AssetConfigNew'\n  /ingestion/filters/account:\n    get:\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountConfigExisting'\n      summary: Get Account Filter Config\n      operationId: Get Account Filter Config\n      description: Retrieve the configuration for the Account Filter.\n      tags: []\n      parameters: []\n    put:\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountConfigExisting'\n      summary: Update the Account Filter Config\n      operationId: Update the Account Filter Config\n      description: Send the new configuration model which will replace current for Account Filter.\n      tags: []\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccountConfigNew'\ncomponents:\n  schemas: \n    AssetConfigNew:\n      title: New Asset Config Model\n      type: object\n      properties: \n        whitelist:\n          type: array\n          items:\n            type: string\n          description: |-\n            a list of canonical asset ids which the asset filter will inspect ledger transactions, if any transaction operations reference the asset id, then the transaction is ingested to local horizon history database, otherwise it will be skipped.\n          example: \n            - 'usdc:1234'\n            - 'dotx:1234'\n            - 'abdc:1234'\n        enabled:\n          type: boolean\n          description: |- \n            if disabled, the asset filter will not be executed during ingeestion.\n          example: true\n      required:\n        - whitelist\n        - enabled\n    AccountConfigNew:\n      title: New Account Config Model\n      type: object\n      properties: \n        whitelist:\n          type: array\n          items:\n            type: string\n          description: |-\n            a list of account ids which account filter will inspect ledger transactions, if any transaction operations reference the account, then the transaction is ingested to local horizon history database, otherwise it will be skipped.\n          example: \n            - 'accountid1'\n            - 'accountid2'\n            - 'accountid3'\n        enabled:\n          type: boolean\n          description: |- \n            if disabled, the account filter will not be executed during ingeestion.\n          example: true\n      required:\n        - whitelist\n        - enabled\n    AccountConfigExisting:\n      title: Existing Account Config Model\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/AccountConfigNew'\n      - properties:\n          last_modified:\n            type: integer\n            description: |- \n              unix epoch timestamp in seconds.\n            example: 1647121423\n    AssetConfigExisting:\n      title: Existing Asset Config Model\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/AssetConfigNew'\n      - properties:\n          last_modified:\n            type: integer\n            description: |- \n              unix epoch timestamp in seconds.\n            example: 1647121423        \ntags: []\n",
			"canonicalURL": "/github.com/stellar/go@096a529ad807448d53d0c65e4420f752ec82ce28/-/blob/services/horizon/internal/httpx/static/admin_oapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/stellar/go/blob/096a529ad807448d53d0c65e4420f752ec82ce28/services/horizon/internal/httpx/static/admin_oapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/metrics\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}