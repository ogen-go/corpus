{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ondata/covid19italia"
		},
		"file": {
			"name": "areeGov.csv.openapi.yaml",
			"size": 0,
			"path": "webservices/COVID-19Aree/processing/areeGov.csv.openapi.yaml",
			"byteSize": 8343,
			"content": "info:\n    version: 1.0.0\n    title: 'COVID-19: i colori delle regioni Italiane'\n    contact:\n        name: 'Associazione onData'\n        url: 'https://ondata.it'\n        email: info@ondata.it\n    x-gitrows-repository: 'https://github.com/ondata/covid19italia/blob/master/webservices/COVID-19Aree/processing/areeGov.csv'\n    x-gitrows-api-path: '@github/ondata/covid19italia/webservices/COVID-19Aree/processing/areeGov.csv'\n    description: \"Il Governo Italiano pubblica le informazioni sui colori delle regioni in formato machine readable sul sito della [Presidenza del Consiglio dei Ministri](http://www.governo.it/it/articolo/domande-frequenti-sulle-misure-adottate-dal-governo/15638).\\n\\n\\n\\n---\\n\\nKeywords: COVID-19, Italia, Colori\\n\\n---\\n\\nCreated with [GitRows](https://gitrows.com)\"\n    x-gitrows-keywords:\n        - COVID-19\n        - Italia\n        - Colori\n    license:\n        name: 'Creative Commons Zero v1.0 Universal'\n        url: 'https://creativecommons.org/publicdomain/zero/1.0/deed'\ncomponents:\n    schemas:\n        Error:\n            type: object\n            properties:\n                code:\n                    type: integer\n                    format: int32\n                message:\n                    type: string\n                documentation:\n                    type: object\n                    properties:\n                        description:\n                            type: string\n                        url:\n                            type: string\n        Record:\n            type: object\n            properties:\n                id:\n                    type: string\n                    description: 'L''identificativo della regione, usato nel file sorgente'\n                colore:\n                    type: string\n                    description: 'L''etichetta del colore della zona (giallo, arancione, rosso)'\n                nomeTesto:\n                    type: string\n                    description: 'L''etichetta dell''area geografica'\n                NUTS_code:\n                    type: string\n                    description: 'Il codice NUTS associato alla regione'\n                NUTS_level:\n                    type: integer\n                    format: int32\n                    description: 'Il livello del codice NUTS'\nopenapi: 3.0.0\nservers:\n    -\n        url: 'https://api.gitrows.com'\npaths:\n    /@github/ondata/covid19italia/webservices/COVID-19Aree/processing/areeGov.csv:\n        get:\n            description: 'Return a list of records'\n            operationId: listRecords\n            parameters:\n                -\n                    in: query\n                    name: id\n                    schema:\n                        type: string\n                    description: \"Select records that match value for `id`.\\n\\nYou can optionally use the following comparison operators as prefixes to your values, e.g. `id=*:foo`:\\n\\n`starts:` text starts with, alias: `^:`; `contains:` contains text, alias: `*:`; `ends:` text ends with, alias: `$:`\"\n                    allowReserved: true\n                -\n                    in: query\n                    name: colore\n                    schema:\n                        type: string\n                    description: \"Select records that match value for `colore`.\\n\\nYou can optionally use the following comparison operators as prefixes to your values, e.g. `colore=*:foo`:\\n\\n`starts:` text starts with, alias: `^:`; `contains:` contains text, alias: `*:`; `ends:` text ends with, alias: `$:`\"\n                    allowReserved: true\n                -\n                    in: query\n                    name: nomeTesto\n                    schema:\n                        type: string\n                    description: \"Select records that match value for `nomeTesto`.\\n\\nYou can optionally use the following comparison operators as prefixes to your values, e.g. `nomeTesto=*:foo`:\\n\\n`starts:` text starts with, alias: `^:`; `contains:` contains text, alias: `*:`; `ends:` text ends with, alias: `$:`\"\n                    allowReserved: true\n                -\n                    in: query\n                    name: NUTS_code\n                    schema:\n                        type: string\n                    description: \"Select records that match value for `NUTS_code`.\\n\\nYou can optionally use the following comparison operators as prefixes to your values, e.g. `NUTS_code=*:foo`:\\n\\n`starts:` text starts with, alias: `^:`; `contains:` contains text, alias: `*:`; `ends:` text ends with, alias: `$:`\"\n                    allowReserved: true\n                -\n                    in: query\n                    name: NUTS_level\n                    schema:\n                        oneOf:\n                            -\n                                type: integer\n                            -\n                                type: string\n                    description: \"Select records that match value for `NUTS_level`.\\n\\nYou can optionally use the following comparison operators as prefixes to your values, e.g. `NUTS_level=gt:10`:\\n\\n`not:` equals not; `lt:` less than; `lte:` less than or equal; `gt:` greater than; `gte:` greater than or equal\"\n                    allowReserved: true\n                -\n                    in: query\n                    name: $count\n                    schema:\n                        type: string\n                    description: 'Counts the records in the data set, use `*` or any `columnName` as parameter'\n                    allowReserved: true\n                -\n                    in: query\n                    name: $avg\n                    schema:\n                        type: string\n                    description: 'Calculates the average of all numeric values in `columnName`'\n                    allowReserved: true\n                -\n                    in: query\n                    name: $sum\n                    schema:\n                        type: string\n                    description: 'Calculates the sum of all numeric values in `columnName`'\n                    allowReserved: true\n                -\n                    in: query\n                    name: $min\n                    schema:\n                        type: string\n                    description: 'Returns the smallest of all numeric values in `columnName`'\n                    allowReserved: true\n                -\n                    in: query\n                    name: $max\n                    schema:\n                        type: string\n                    description: 'Returns the largest of all numeric values in `columnName`'\n                    allowReserved: true\n            responses:\n                '200':\n                    description: 'A list of records with any optionally provided filters applied.'\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: '#/components/schemas/Record'\n                default:\n                    description: 'Error Payload'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n    '/@github/ondata/covid19italia/webservices/COVID-19Aree/processing/areeGov.csv/{id}':\n        get:\n            description: 'Return a specific record'\n            operationId: getRecordById\n            parameters:\n                -\n                    name: id\n                    description: 'Distinct id to select data set by'\n                    in: path\n                    required: true\n                    schema:\n                        type: string\n            responses:\n                '200':\n                    description: 'Returns a distinct record'\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: '#/components/schemas/Record'\n                default:\n                    description: 'Error Payload'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n",
			"canonicalURL": "/github.com/ondata/covid19italia@b84fed3ff5dadead8c4039d620207ea20a1dbabe/-/blob/webservices/COVID-19Aree/processing/areeGov.csv.openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ondata/covid19italia/blob/b84fed3ff5dadead8c4039d620207ea20a1dbabe/webservices/COVID-19Aree/processing/areeGov.csv.openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: \"NUTS_level\": sum type parameter not implemented",
	"NotImplemented": [
		"sum type parameter"
	]
}