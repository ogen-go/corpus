{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "namsor.com-2.0.5-openapi.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/namsor.com-2.0.5-openapi.yaml",
			"byteSize": 97626,
			"content": "openapi: 3.0.1\nservers:\n  - description: namsor_v2\n    url: https://v2.namsor.com/NamSorAPIv2\n    variables: {}\ninfo:\n  contact:\n    email: contact@namsor.com\n    name: Namsor SAS\n    url: http://www.namsor.com/\n    x-twitter: gendreapp\n  description: \"NamSor API v2 : enpoints to process personal names (gender, cultural origin\n    or ethnicity) in all alphabets or languages. Use GET methods for small\n    tests, but prefer POST methods for higher throughput (batch processing of up\n    to 100 names at a time). Need something you can't find here? We have many\n    more features coming soon. Let us know, we'll do our best to add it! \"\n  license:\n    name: NamSorAPI_Lic_v0.0.7\n    url: https://v2.namsor.com/NamSorAPIv2/assets/pdf/201803_NamSor_API_Terms_v007.pdf\n  title: NamSor API v2\n  version: 2.0.5\n  x-apisguru-categories:\n    - text\n  x-logo:\n    url: https://twitter.com/gendreapp/profile_image?size=original\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: openapi\n      url: https://v2.namsor.com/NamSorAPIv2/api2/openapi.json\n      version: \"3.0\"\n  x-providerName: namsor.com\nexternalDocs:\n  description: NamSor API client SDKs v2 for Java, Python\n  url: https://github.com/namsor\nsecurity:\n  - api_key: []\ntags:\n  - description: \"Personal names (anthroponyms) : gender, country origin/ethnicity,\n      diaspora, US 'race'/ethniciy\"\n    name: personal\n  - description: Social media and pseudonyms\n    name: social\n  - description: CHINESE special features\n    name: chinese\n  - description: Administrative, system management.\n    name: admin\npaths:\n  \"/api2/json/addCredits/{apiKey}/{usageCredits}/{userMessage}\":\n    get:\n      operationId: addCredits\n      parameters:\n        - in: path\n          name: apiKey\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: usageCredits\n          required: true\n          schema:\n            format: int64\n            type: integer\n        - in: path\n          name: userMessage\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SystemMetricsOut\"\n          description: Estimate new after applying credits.\n        \"401\":\n          description: Missing or incorrect API Key\n      security:\n        - api_key: []\n      summary: Add usage credits to an API Key.\n      tags:\n        - admin\n  \"/api2/json/anonymize/{source}/{anonymized}\":\n    get:\n      operationId: anonymize\n      parameters:\n        - in: path\n          name: source\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: anonymized\n          required: true\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Anonymization of a source.\n        \"401\":\n          description: Missing or incorrect API Key\n      summary: Activate/deactivate anonymization for a source.\n      tags:\n        - admin\n  /api2/json/apiServices:\n    get:\n      operationId: availableServices\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIPlansOut\"\n          description: Available services\n        \"401\":\n          description: Missing or incorrect token\n      summary: List of API services and usage cost in Units (default is 1=ONE Unit).\n      tags:\n        - admin\n  /api2/json/apiUsage:\n    get:\n      operationId: apiUsage\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIPeriodUsageOut\"\n          description: Print current API usage.\n        \"401\":\n          description: Missing or incorrect API Key\n      security:\n        - api_key: []\n      summary: Print current API usage.\n      tags:\n        - admin\n  /api2/json/apiUsageHistory:\n    get:\n      operationId: apiUsageHistory\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIPeriodUsageOut\"\n          description: Print historical API usage.\n        \"401\":\n          description: Missing or incorrect API Key\n      security:\n        - api_key: []\n      summary: Print historical API usage.\n      tags:\n        - admin\n  /api2/json/apiUsageHistoryAggregate:\n    get:\n      operationId: apiUsageHistoryAggregate\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIPeriodUsageOut\"\n          description: Print historical API usage.\n        \"401\":\n          description: Missing or incorrect API Key\n      security:\n        - api_key: []\n      summary: Print historical API usage (in an aggregated view, by service, by\n        day/hour/min).\n      tags:\n        - admin\n  /api2/json/availablePlans:\n    get:\n      operationId: availablePlans_1\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIPlansOut\"\n          description: Available plans\n        \"401\":\n          description: Missing or incorrect token\n      summary: List all available plans in the default currency (usd).\n      tags:\n        - admin\n  \"/api2/json/availablePlans/{token}\":\n    get:\n      operationId: availablePlans\n      parameters:\n        - in: path\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIPlansOut\"\n          description: Available plans\n        \"401\":\n          description: Missing or incorrect token\n      summary: List all available plans in the user's preferred currency.\n      tags:\n        - admin\n  /api2/json/billingCurrencies:\n    get:\n      operationId: billingCurrencies\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CurrenciesOut\"\n          description: The supported billing currencies.\n        \"401\":\n          description: Missing or incorrect token\n      summary: List possible currency options for billing (USD, EUR, GBP, ...)\n      tags:\n        - admin\n  \"/api2/json/billingHistory/{token}\":\n    get:\n      operationId: billingHistory\n      parameters:\n        - in: path\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BillingHistoryOut\"\n          description: The billing history\n        \"401\":\n          description: Missing or incorrect token\n      summary: Read the history billing information (invoices paid via Stripe or\n        manually).\n      tags:\n        - admin\n  \"/api2/json/billingInfo/{token}\":\n    get:\n      operationId: billingInfo\n      parameters:\n        - in: path\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BillingInfoInOut\"\n          description: The current billing info\n        \"401\":\n          description: Missing or incorrect token\n      summary: Read the billing information (company name, address, phone, vat ID)\n      tags:\n        - admin\n  /api2/json/charge:\n    post:\n      operationId: charge\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              properties:\n                stripeEmail:\n                  type: string\n                stripeToken:\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIKeyOut\"\n          description: A stripe customerID\n        \"401\":\n          description: Missing or incorrect email or payment token\n      summary: Create a Stripe Customer, based on a payment card token (from secure\n        StripeJS) and email.\n      tags:\n        - admin\n  \"/api2/json/chineseNameCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}\":\n    get:\n      operationId: chineseNameCandidates\n      parameters:\n        - in: path\n          name: chineseSurnameLatin\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: chineseGivenNameLatin\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RomanizedNameOut\"\n          description: A romanized name.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Identify Chinese name candidates, based on the romanized name ex. Wang\n        Xiaoming\n      tags:\n        - chinese\n  /api2/json/chineseNameCandidatesBatch:\n    post:\n      operationId: chineseNameCandidatesBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchFirstLastNameIn\"\n        description: A list of personal Chinese names in LATIN, firstName =\n          chineseGivenName; lastName=chineseSurname\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchNameMatchCandidatesOut\"\n          description: A list of genderized names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Identify Chinese name candidates, based on the romanized name (firstName\n        = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming\n      tags:\n        - chinese\n  /api2/json/chineseNameCandidatesGenderBatch:\n    post:\n      operationId: chineseNameCandidatesGenderBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchFirstLastNameIn\"\n        description: A list of personal Chinese names in LATIN, firstName =\n          chineseGivenName; lastName=chineseSurname\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchNameMatchCandidatesOut\"\n          description: A list of genderized names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Identify Chinese name candidates, based on the romanized name (firstName\n        = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming.\n      tags:\n        - chinese\n  \"/api2/json/chineseNameGenderCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}/{knownGender}\":\n    get:\n      operationId: chineseNameGenderCandidates\n      parameters:\n        - in: path\n          name: chineseSurnameLatin\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: chineseGivenNameLatin\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: knownGender\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RomanizedNameOut\"\n          description: A romanized name.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Identify Chinese name candidates, based on the romanized name ex. Wang\n        Xiaoming - having a known gender ('male' or 'female')\n      tags:\n        - chinese\n  \"/api2/json/chineseNameMatch/{chineseSurnameLatin}/{chineseGivenNameLatin}/{chineseName}\":\n    get:\n      operationId: chineseNameMatch\n      parameters:\n        - in: path\n          name: chineseSurnameLatin\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: chineseGivenNameLatin\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: chineseName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RomanizedNameOut\"\n          description: A romanized name.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Return a score for matching Chinese name ex. 王晓明 with a romanized name\n        ex. Wang Xiaoming\n      tags:\n        - chinese\n  /api2/json/chineseNameMatchBatch:\n    post:\n      operationId: chineseNameMatchBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchFirstLastNameIn\"\n        description: A list of personal Chinese names in LATIN, firstName =\n          chineseGivenName; lastName=chineseSurname\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchNameMatchCandidatesOut\"\n          description: A list of genderized names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Identify Chinese name candidates, based on the romanized name (firstName\n        = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming\n      tags:\n        - chinese\n  \"/api2/json/corporateKey/{apiKey}/{corporate}\":\n    get:\n      operationId: corporateKey\n      parameters:\n        - in: path\n          name: apiKey\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: corporate\n          required: true\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: API Key set to a corporate status.\n        \"401\":\n          description: Missing or incorrect API Key\n      summary: Setting an API Key to a corporate status.\n      tags:\n        - admin\n  \"/api2/json/country/{personalNameFull}\":\n    get:\n      operationId: country\n      parameters:\n        - in: path\n          name: personalNameFull\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalNameGeoOut\"\n          description: A origined name.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"[USES 10 UNITS] Infer the likely country of residence of a personal\n        full name, or one surname. Assumes names as they are in the country of\n        residence OR the country of origin.\"\n      tags:\n        - personal\n  /api2/json/countryBatch:\n    post:\n      operationId: countryBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchPersonalNameIn\"\n        description: A list of personal names\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchPersonalNameGeoOut\"\n          description: A list of genderized names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"[USES 10 UNITS] Infer the likely country of residence of up to 100\n        personal full names, or surnames. Assumes names as they are in the\n        country of residence OR the country of origin.\"\n      tags:\n        - personal\n  \"/api2/json/debugLevel/{logger}/{level}\":\n    get:\n      operationId: debugLevel\n      parameters:\n        - in: path\n          name: logger\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: level\n          required: true\n          schema:\n            type: string\n      responses:\n        \"401\":\n          description: Missing or incorrect API Key\n      summary: Update debug level for a classifier\n      tags:\n        - admin\n  \"/api2/json/diaspora/{countryIso2}/{firstName}/{lastName}\":\n    get:\n      operationId: diaspora\n      parameters:\n        - in: path\n          name: countryIso2\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: firstName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: lastName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FirstLastNameDiasporaedOut\"\n          description: A diaspora / ethnicity for given name and geography.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"[USES 20 UNITS] Infer the likely ethnicity/diaspora of a personal name,\n        given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.)\"\n      tags:\n        - personal\n  /api2/json/diasporaBatch:\n    post:\n      operationId: diasporaBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchFirstLastNameGeoIn\"\n        description: A list of personal names\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchFirstLastNameDiasporaedOut\"\n          description: A list of diaspora / ethnicity given a name and residency.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"[USES 20 UNITS] Infer the likely ethnicity/diaspora of up to 100\n        personal names, given a country of residence ISO2 code (ex. US, CA, AU,\n        NZ etc.)\"\n      tags:\n        - personal\n  /api2/json/flush:\n    get:\n      operationId: flush\n      responses:\n        \"200\":\n          description: Shutdown AI.\n        \"401\":\n          description: Missing or incorrect API Key\n      security:\n        - api_key: []\n      summary: Flush counters.\n      tags:\n        - admin\n  \"/api2/json/gender/{firstName}/{lastName}\":\n    get:\n      operationId: gender\n      parameters:\n        - in: path\n          name: firstName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: lastName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FirstLastNameGenderedOut\"\n          description: A genderized name.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely gender of a name.\n      tags:\n        - personal\n  /api2/json/genderBatch:\n    post:\n      operationId: genderBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchFirstLastNameIn\"\n        description: A list of personal names\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchFirstLastNameGenderedOut\"\n          description: A list of genderized names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely gender of up to 100 names, detecting automatically the\n        cultural context.\n      tags:\n        - personal\n  \"/api2/json/genderChineseName/{chineseName}\":\n    get:\n      operationId: genderChineseName\n      parameters:\n        - in: path\n          name: chineseName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalNameGenderedOut\"\n          description: A genderized name.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely gender of a Chinese full name ex. 王晓明\n      tags:\n        - chinese\n  /api2/json/genderChineseNameBatch:\n    post:\n      operationId: genderChineseNameBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchPersonalNameIn\"\n        description: A list of personal names, with a country ISO2 code\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchPersonalNameGenderedOut\"\n          description: A list of genderized names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely gender of up to 100 full names ex. 王晓明\n      tags:\n        - chinese\n  \"/api2/json/genderChineseNamePinyin/{chineseSurnameLatin}/{chineseGivenNameLatin}\":\n    get:\n      operationId: genderChineseNamePinyin\n      parameters:\n        - in: path\n          name: chineseSurnameLatin\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: chineseGivenNameLatin\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FirstLastNameGenderedOut\"\n          description: A genderized name.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely gender of a Chinese name in LATIN (Pinyin).\n      tags:\n        - chinese\n  /api2/json/genderChineseNamePinyinBatch:\n    post:\n      operationId: genderChineseNamePinyinBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchFirstLastNameIn\"\n        description: A list of names, with country code.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchFirstLastNameGenderedOut\"\n          description: A list of genderized names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin).\n      tags:\n        - chinese\n  \"/api2/json/genderFull/{fullName}\":\n    get:\n      operationId: genderFull\n      parameters:\n        - in: path\n          name: fullName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FirstLastNameGenderedOut\"\n          description: A genderized name.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely gender of a full name, ex. John H. Smith\n      tags:\n        - personal\n  /api2/json/genderFullBatch:\n    post:\n      operationId: genderFullBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchPersonalNameIn\"\n        description: A list of personal names\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchPersonalNameGenderedOut\"\n          description: A list of genderized names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely gender of up to 100 full names, detecting automatically\n        the cultural context.\n      tags:\n        - personal\n  \"/api2/json/genderFullGeo/{fullName}/{countryIso2}\":\n    get:\n      operationId: genderFullGeo\n      parameters:\n        - in: path\n          name: fullName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: countryIso2\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FirstLastNameGenderedOut\"\n          description: A genderized name.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely gender of a full name, given a local context (ISO2\n        country code).\n      tags:\n        - personal\n  /api2/json/genderFullGeoBatch:\n    post:\n      operationId: genderFullGeoBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchPersonalNameGeoIn\"\n        description: A list of personal names, with a country ISO2 code\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchPersonalNameGenderedOut\"\n          description: A list of genderized names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely gender of up to 100 full names, with a given cultural\n        context (country ISO2 code).\n      tags:\n        - personal\n  \"/api2/json/genderGeo/{firstName}/{lastName}/{countryIso2}\":\n    get:\n      operationId: genderGeo\n      parameters:\n        - in: path\n          name: firstName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: lastName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: countryIso2\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FirstLastNameGenderedOut\"\n          description: A genderized name.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely gender of a name, given a local context (ISO2 country\n        code).\n      tags:\n        - personal\n  /api2/json/genderGeoBatch:\n    post:\n      operationId: genderGeoBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchFirstLastNameGeoIn\"\n        description: A list of names, with country code.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchFirstLastNameGenderedOut\"\n          description: A list of genderized names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely gender of up to 100 names, each given a local context\n        (ISO2 country code).\n      tags:\n        - personal\n  /api2/json/invalidateCache:\n    get:\n      operationId: invalidateCache\n      responses:\n        \"200\":\n          description: Clear caches.\n        \"401\":\n          description: Missing or incorrect API Key\n      summary: Invalidate system caches.\n      tags:\n        - admin\n  \"/api2/json/learnable/{source}/{learnable}\":\n    get:\n      operationId: learnable\n      parameters:\n        - in: path\n          name: source\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: learnable\n          required: true\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Vetting of a source.\n        \"401\":\n          description: Missing or incorrect API Key\n      summary: Activate/deactivate learning from a source.\n      tags:\n        - admin\n  /api2/json/namsorCounter:\n    get:\n      operationId: namsorCounter\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SoftwareVersionOut\"\n          description: The overall API counter\n        \"401\":\n          description: Missing or incorrect token\n      summary: Get the overall API counter\n      tags:\n        - admin\n  \"/api2/json/origin/{firstName}/{lastName}\":\n    get:\n      operationId: origin\n      parameters:\n        - in: path\n          name: firstName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: lastName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FirstLastNameOriginedOut\"\n          description: A origined name.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"[USES 10 UNITS] Infer the likely country of origin of a personal name.\n        Assumes names as they are in the country of origin. For US, CA, AU, NZ\n        and other melting-pots : use 'diaspora' instead.\"\n      tags:\n        - personal\n  /api2/json/originBatch:\n    post:\n      operationId: originBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchFirstLastNameIn\"\n        description: A list of personal names\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchFirstLastNameOriginedOut\"\n          description: A list of genderized names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"[USES 10 UNITS] Infer the likely country of origin of up to 100 names,\n        detecting automatically the cultural context.\"\n      tags:\n        - personal\n  \"/api2/json/parseChineseName/{chineseName}\":\n    get:\n      operationId: parseChineseName\n      parameters:\n        - in: path\n          name: chineseName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalNameParsedOut\"\n          description: A origined name.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely first/last name structure of a name, ex. 王晓明 -\u003e\n        王(surname) 晓明(given name)\n      tags:\n        - chinese\n  /api2/json/parseChineseNameBatch:\n    post:\n      operationId: parseChineseNameBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchPersonalNameIn\"\n        description: A list of personal names\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchPersonalNameParsedOut\"\n          description: A list of parsed names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely first/last name structure of a name, ex. 王晓明 -\u003e\n        王(surname) 晓明(given name).\n      tags:\n        - chinese\n  \"/api2/json/parseName/{nameFull}\":\n    get:\n      operationId: parseName\n      parameters:\n        - in: path\n          name: nameFull\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalNameParsedOut\"\n          description: A origined name.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"Infer the likely first/last name structure of a name, ex. John Smith or\n        SMITH, John or SMITH; John. \"\n      tags:\n        - personal\n  \"/api2/json/parseName/{nameFull}/{countryIso2}\":\n    get:\n      operationId: parseNameGeo\n      parameters:\n        - in: path\n          name: nameFull\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: countryIso2\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalNameParsedOut\"\n          description: A origined name.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely first/last name structure of a name, ex. John Smith or\n        SMITH, John or SMITH; John. For better accuracy, provide a geographic\n        context.\n      tags:\n        - personal\n  /api2/json/parseNameBatch:\n    post:\n      operationId: parseNameBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchPersonalNameIn\"\n        description: A list of personal names\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchPersonalNameParsedOut\"\n          description: A list of parsed names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely first/last name structure of a name, ex. John Smith or\n        SMITH, John or SMITH; John.\n      tags:\n        - personal\n  /api2/json/parseNameGeoBatch:\n    post:\n      operationId: parseNameGeoBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchPersonalNameGeoIn\"\n        description: A list of personal names\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchPersonalNameParsedOut\"\n          description: A list of parsed names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"Infer the likely first/last name structure of a name, ex. John Smith or\n        SMITH, John or SMITH; John. Giving a local context improves precision. \"\n      tags:\n        - personal\n  /api2/json/parsedGenderBatch:\n    post:\n      operationId: parsedGenderBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchParsedFullNameIn\"\n        description: A list of personal names\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchFirstLastNameGenderedOut\"\n          description: A list of genderized names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely gender of up to 100 fully parsed names, detecting\n        automatically the cultural context.\n      tags:\n        - personal\n  /api2/json/parsedGenderGeoBatch:\n    post:\n      operationId: parsedGenderGeoBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchParsedFullNameGeoIn\"\n        description: A list of personal names\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchFirstLastNameGenderedOut\"\n          description: A list of genderized names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Infer the likely gender of up to 100 fully parsed names, detecting\n        automatically the cultural context.\n      tags:\n        - personal\n  \"/api2/json/paymentInfo/{token}\":\n    get:\n      operationId: paymentInfo\n      parameters:\n        - in: path\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIKeyOut\"\n          description: An session token\n        \"401\":\n          description: Missing or incorrect token\n      summary: Get the Stripe payment information associated with the current google\n        auth session token.\n      tags:\n        - admin\n  \"/api2/json/phoneCode/{firstName}/{lastName}/{phoneNumber}\":\n    get:\n      operationId: phoneCode\n      parameters:\n        - in: path\n          name: firstName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: lastName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: phoneNumber\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FirstLastNamePhoneCodedOut\"\n          description: A name with country and phone code.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"[USES 11 UNITS] Infer the likely country and phone prefix, given a\n        personal name and formatted / unformatted phone number.\"\n      tags:\n        - social\n  /api2/json/phoneCodeBatch:\n    post:\n      operationId: phoneCodeBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchFirstLastNamePhoneNumberIn\"\n        description: A list of personal names\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchFirstLastNamePhoneCodedOut\"\n          description: A list of genderized names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"[USES 11 UNITS] Infer the likely country and phone prefix, of up to 100\n        personal names, detecting automatically the local context given a name\n        and formatted / unformatted phone number.\"\n      tags:\n        - social\n  \"/api2/json/phoneCodeGeo/{firstName}/{lastName}/{phoneNumber}/{countryIso2}\":\n    get:\n      operationId: phoneCodeGeo\n      parameters:\n        - in: path\n          name: firstName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: lastName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: phoneNumber\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: countryIso2\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FirstLastNamePhoneCodedOut\"\n          description: A name with country and phone code.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"[USES 11 UNITS] Infer the likely phone prefix, given a personal name\n        and formatted / unformatted phone number, with a local context (ISO2\n        country of residence).\"\n      tags:\n        - social\n  /api2/json/phoneCodeGeoBatch:\n    post:\n      operationId: phoneCodeGeoBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchFirstLastNamePhoneNumberGeoIn\"\n        description: A list of personal names\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchFirstLastNamePhoneCodedOut\"\n          description: A list of genderized names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"[USES 11 UNITS] Infer the likely country and phone prefix, of up to 100\n        personal names, with a local context (ISO2 country of residence).\"\n      tags:\n        - social\n  \"/api2/json/phoneCodeGeoFeedbackLoop/{firstName}/{lastName}/{phoneNumber}/{phoneNumberE164}/{countryIso2}\":\n    get:\n      operationId: phoneCodeGeoFeedbackLoop\n      parameters:\n        - in: path\n          name: firstName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: lastName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: phoneNumber\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: phoneNumberE164\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: countryIso2\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FirstLastNamePhoneCodedOut\"\n          description: A name with country and phone code.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix,\n        given a personal name and formatted / unformatted phone number, with a\n        local context (ISO2 country of residence).\"\n      tags:\n        - social\n  \"/api2/json/pinyinChineseName/{chineseName}\":\n    get:\n      operationId: pinyinChineseName\n      parameters:\n        - in: path\n          name: chineseName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalNameParsedOut\"\n          description: A pinyin name.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Romanize the Chinese name to Pinyin, ex. 王晓明 -\u003e Wang (surname) Xiaoming\n        (given name)\n      tags:\n        - chinese\n  /api2/json/pinyinChineseNameBatch:\n    post:\n      operationId: pinyinChineseNameBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchPersonalNameIn\"\n        description: A list of Chinese names\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchPersonalNameParsedOut\"\n          description: A list of Pinyin names.\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: Romanize a list of Chinese name to Pinyin, ex. 王晓明 -\u003e Wang (surname)\n        Xiaoming (given name).\n      tags:\n        - chinese\n  \"/api2/json/procureKey/{token}\":\n    get:\n      operationId: procureKey\n      parameters:\n        - in: path\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIKeyOut\"\n          description: An API Key\n        \"401\":\n          description: Missing or incorrect token\n      summary: Procure an API Key (sent via Email), based on an auth token. Keep your\n        API Key secret.\n      tags:\n        - admin\n  /api2/json/redeployUI:\n    get:\n      operationId: redeployUI_1\n      responses:\n        \"200\":\n          description: Redeploy UI from DEV.\n        \"401\":\n          description: Missing or incorrect API Key\n      security:\n        - api_key: []\n      summary: Redeploy UI from current dev branch.\n      tags:\n        - admin\n  \"/api2/json/redeployUI/{live}\":\n    get:\n      operationId: redeployUI\n      parameters:\n        - in: path\n          name: live\n          required: true\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Redeploy UI from DEV.\n        \"401\":\n          description: Missing or incorrect API Key\n      security:\n        - api_key: []\n      summary: Redeploy UI from current dev branch.\n      tags:\n        - admin\n  \"/api2/json/removeUserAccount/{token}\":\n    get:\n      operationId: removeUserAccount\n      parameters:\n        - in: path\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIPlanSubscriptionOut\"\n          description: An API subscription\n        \"401\":\n          description: Missing or incorrect token\n      summary: Remove the user account.\n      tags:\n        - admin\n  \"/api2/json/removeUserAccountOnBehalf/{apiKey}\":\n    get:\n      operationId: removeUserAccountOnBehalf\n      parameters:\n        - in: path\n          name: apiKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIPlanSubscriptionOut\"\n          description: An API subscription\n        \"401\":\n          description: Missing or incorrect token\n      summary: Remove (on behalf) a user account.\n      tags:\n        - admin\n  /api2/json/shutdown:\n    get:\n      operationId: shutdown\n      responses:\n        \"200\":\n          description: Shutdown AI.\n        \"401\":\n          description: Missing or incorrect API Key\n      security:\n        - api_key: []\n      summary: Stop learning and shutdown system.\n      tags:\n        - admin\n  /api2/json/softwareVersion:\n    get:\n      operationId: softwareVersion\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SoftwareVersionOut\"\n          description: The current software version\n        \"401\":\n          description: Missing or incorrect token\n      summary: Get the current software version\n      tags:\n        - admin\n  \"/api2/json/sourceStats/{source}\":\n    get:\n      operationId: sourceStats\n      parameters:\n        - in: path\n          name: source\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SystemMetricsOut\"\n          description: Current system status.\n        \"401\":\n          description: Missing or incorrect API Key\n      security:\n        - api_key: []\n      summary: Print basic source statistics.\n      tags:\n        - admin\n  /api2/json/stats:\n    get:\n      operationId: stats\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SystemMetricsOut\"\n          description: Current system status.\n        \"401\":\n          description: Missing or incorrect API Key\n      security:\n        - api_key: []\n      summary: Print basic system statistics.\n      tags:\n        - admin\n  /api2/json/stripeConnect:\n    get:\n      operationId: stripeConnect\n      parameters:\n        - in: query\n          name: scope\n          schema:\n            type: string\n        - in: query\n          name: code\n          schema:\n            type: string\n        - in: query\n          name: error\n          schema:\n            type: string\n        - in: query\n          name: error_description\n          schema:\n            type: string\n      responses:\n        \"401\":\n          description: Missing or incorrect email or payment token\n      summary: Connects a Stripe Account.\n      tags:\n        - admin\n  \"/api2/json/subscribePlan/{planName}/{token}\":\n    get:\n      operationId: subscribePlan\n      parameters:\n        - in: path\n          name: planName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIPlanSubscriptionOut\"\n          description: An API subscription\n        \"401\":\n          description: Missing or incorrect token\n      summary: Subscribe to a give API plan, using the user's preferred or default\n        currency.\n      tags:\n        - admin\n  \"/api2/json/subscribePlanOnBehalf/{planName}/{apiKey}\":\n    get:\n      operationId: subscribePlanOnBehalf\n      parameters:\n        - in: path\n          name: planName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: apiKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIPlanSubscriptionOut\"\n          description: An API subscription\n        \"401\":\n          description: Missing or incorrect token\n      summary: Subscribe to a give API plan, using the user's preferred or default\n        currency (admin only).\n      tags:\n        - admin\n  \"/api2/json/updateBillingInfo/{token}\":\n    post:\n      operationId: updateBillingInfo\n      parameters:\n        - in: path\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json;charset=UTF-8:\n            schema:\n              $ref: \"#/components/schemas/BillingInfoInOut\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BillingInfoInOut\"\n          description: The updated billing info\n        \"401\":\n          description: Missing or incorrect token\n      summary: Sets or update the billing information (company name, address, phone,\n        vat ID)\n      tags:\n        - admin\n  \"/api2/json/updateLimit/{usageLimit}/{hardOrSoft}/{token}\":\n    get:\n      operationId: updateLimit\n      parameters:\n        - in: path\n          name: usageLimit\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: hardOrSoft\n          required: true\n          schema:\n            type: boolean\n        - in: path\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIPeriodUsageOut\"\n          description: An API subscription\n        \"401\":\n          description: Missing or incorrect token\n      summary: Modifies the hard/soft limit on the API plan's overages (default is 0$\n        soft limit).\n      tags:\n        - admin\n  \"/api2/json/updatePaymentDefault/{defautSourceId}/{token}\":\n    get:\n      operationId: updatePaymentDefault\n      parameters:\n        - in: path\n          name: defautSourceId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIKeyOut\"\n          description: An session token\n        \"401\":\n          description: Missing or incorrect token\n      summary: Update the default Stripe card associated with the current google auth\n        session token.\n      tags:\n        - admin\n  \"/api2/json/usRaceEthnicity/{firstName}/{lastName}\":\n    get:\n      operationId: usRaceEthnicity\n      parameters:\n        - in: path\n          name: firstName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: lastName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FirstLastNameUSRaceEthnicityOut\"\n          description: \"a US resident's likely race/ethnicity : W_NL (white, non latino),\n            HL (hispano latino),  A (asian, non latino), B_NL (black, non\n            latino).\"\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"[USES 10 UNITS] Infer a US resident's likely race/ethnicity according\n        to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A\n        (asian, non latino), B_NL (black, non latino).\"\n      tags:\n        - personal\n  /api2/json/usRaceEthnicityBatch:\n    post:\n      operationId: usRaceEthnicityBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchFirstLastNameGeoIn\"\n        description: A list of personal names\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchFirstLastNameUSRaceEthnicityOut\"\n          description: A list of US resident's likely race/ethnicity. W_NL (white, non\n            latino), HL (hispano latino),  A (asian, non latino), B_NL (black,\n            non latino).\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"[USES 10 UNITS] Infer up-to 100 US resident's likely race/ethnicity\n        according to US Census taxonomy.\"\n      tags:\n        - personal\n  \"/api2/json/usRaceEthnicityZIP5/{firstName}/{lastName}/{zip5Code}\":\n    get:\n      operationId: usRaceEthnicityZIP5\n      parameters:\n        - in: path\n          name: firstName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: lastName\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: zip5Code\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FirstLastNameUSRaceEthnicityOut\"\n          description: \"a US resident's likely race/ethnicity : W_NL (white, non latino),\n            HL (hispano latino),  A (asian, non latino), B_NL (black, non\n            latino).\"\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"[USES 10 UNITS] Infer a US resident's likely race/ethnicity according\n        to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL\n        (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL\n        (black, non latino).\"\n      tags:\n        - personal\n  /api2/json/usZipRaceEthnicityBatch:\n    post:\n      operationId: usZipRaceEthnicityBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchFirstLastNameGeoZippedIn\"\n        description: A list of personal names\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchFirstLastNameUSRaceEthnicityOut\"\n          description: A list of US resident's likely race/ethnicity. W_NL (white, non\n            latino), HL (hispano latino),  A (asian, non latino), B_NL (black,\n            non latino).\n        \"401\":\n          description: Missing or incorrect API Key\n        \"403\":\n          description: API Limit Reached or API Key Disabled\n      security:\n        - api_key: []\n      summary: \"[USES 10 UNITS] Infer up-to 100 US resident's likely race/ethnicity\n        according to US Census taxonomy, with (optional) ZIP code.\"\n      tags:\n        - personal\n  \"/api2/json/userInfo/{token}\":\n    get:\n      operationId: userInfo\n      parameters:\n        - in: path\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIKeyOut\"\n          description: An session token\n        \"401\":\n          description: Missing or incorrect token\n      summary: Get the user profile associated with the current google auth session\n        token.\n      tags:\n        - admin\n  \"/api2/json/verifyEmail/{emailToken}\":\n    get:\n      operationId: verifyEmail\n      parameters:\n        - in: path\n          name: emailToken\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIKeyOut\"\n          description: An API Key\n        \"401\":\n          description: Missing or incorrect token\n      summary: Verifies an email, based on token sent to that email\n      tags:\n        - admin\n  \"/api2/json/verifyRemoveEmail/{emailToken}\":\n    get:\n      operationId: verifyRemoveEmail\n      parameters:\n        - in: path\n          name: emailToken\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIKeyOut\"\n          description: An API Key\n        \"401\":\n          description: Missing or incorrect token\n      summary: Verifies an email, based on token sent to that email\n      tags:\n        - admin\n  \"/api2/json/vetting/{source}/{vetted}\":\n    get:\n      operationId: vet\n      parameters:\n        - in: path\n          name: source\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: vetted\n          required: true\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Vetting of a source.\n        \"401\":\n          description: Missing or incorrect API Key\n      summary: Vetting of a source.\n      tags:\n        - admin\ncomponents:\n  schemas:\n    APIBillingPeriodUsageOut:\n      properties:\n        apiKey:\n          type: string\n        billingStatus:\n          type: string\n        hardLimit:\n          format: int64\n          type: integer\n        periodEnded:\n          format: int64\n          type: integer\n        periodStarted:\n          format: int64\n          type: integer\n        softLimit:\n          format: int64\n          type: integer\n        stripeCurrentPeriodEnd:\n          format: int64\n          type: integer\n        stripeCurrentPeriodStart:\n          format: int64\n          type: integer\n        subscriptionStarted:\n          format: int64\n          type: integer\n        usage:\n          format: int64\n          type: integer\n      type: object\n      xml:\n        name: APIBillingPeriodUsageOut\n    APICounterV2Out:\n      properties:\n        apiKey:\n          $ref: \"#/components/schemas/APIKeyOut\"\n        apiService:\n          type: string\n        createdDateTime:\n          format: int64\n          type: integer\n        lastFlushedDateTime:\n          format: int64\n          type: integer\n        lastUsedDateTime:\n          format: int64\n          type: integer\n        serviceFeaturesUsage:\n          additionalProperties:\n            format: int64\n            type: integer\n          type: object\n        totalUsage:\n          format: int64\n          type: integer\n      type: object\n      xml:\n        name: APICallStatOut\n    APIKeyOut:\n      properties:\n        admin:\n          type: boolean\n        anonymized:\n          type: boolean\n        apiKey:\n          type: string\n          xml:\n            name: api_key\n        corporate:\n          type: boolean\n        disabled:\n          type: boolean\n        learnable:\n          type: boolean\n        partner:\n          type: boolean\n        striped:\n          type: boolean\n        userId:\n          type: string\n        vetted:\n          type: boolean\n      type: object\n      xml:\n        name: APIKeyOut\n    APIPeriodUsageOut:\n      properties:\n        billingPeriod:\n          $ref: \"#/components/schemas/APIBillingPeriodUsageOut\"\n        overageCurrency:\n          type: string\n        overageExclTax:\n          format: double\n          type: number\n        overageInclTax:\n          format: double\n          type: number\n        overageQuantity:\n          format: int64\n          type: integer\n        subscription:\n          $ref: \"#/components/schemas/APIPlanSubscriptionOut\"\n      type: object\n      xml:\n        name: APICurrentUsageOut\n    APIPlanOut:\n      properties:\n        planName:\n          type: string\n        planQuota:\n          format: int64\n          type: integer\n        price:\n          format: double\n          type: number\n        priceOverage:\n          format: double\n          type: number\n      type: object\n      xml:\n        name: APIPlanOut\n    APIPlanSubscriptionOut:\n      properties:\n        apiKey:\n          type: string\n        currency:\n          type: string\n        currencyFactor:\n          format: double\n          type: number\n        planBaseFeesKey:\n          type: string\n        planEnded:\n          format: int64\n          type: integer\n        planName:\n          type: string\n        planQuota:\n          format: int64\n          type: integer\n        planStarted:\n          format: int64\n          type: integer\n        planStatus:\n          type: string\n        price:\n          format: double\n          type: number\n        priceOverage:\n          format: double\n          type: number\n        priceOverageUSD:\n          format: double\n          type: number\n        priceUSD:\n          format: double\n          type: number\n        priorPlanStarted:\n          format: int64\n          type: integer\n        stripeCustomerId:\n          type: string\n        stripeStatus:\n          type: string\n        stripeSubscription:\n          type: string\n        taxRate:\n          format: double\n          type: number\n        userId:\n          type: string\n      type: object\n      xml:\n        name: APIPlanSubscriptionOut\n    APIPlansOut:\n      properties:\n        currencyIso3:\n          type: string\n        currencySymbol:\n          type: string\n        plans:\n          items:\n            $ref: \"#/components/schemas/APIPlanOut\"\n          type: array\n        usageRatioForDupplicates:\n          format: int64\n          type: integer\n      type: object\n      xml:\n        name: APIPlansOut\n    APIServiceOut:\n      properties:\n        costInUnits:\n          format: int32\n          type: integer\n        serviceGroup:\n          type: string\n        serviceName:\n          type: string\n      type: object\n      xml:\n        name: APIServiceOut\n    APIServicesOut:\n      properties:\n        apiServices:\n          items:\n            $ref: \"#/components/schemas/APIServiceOut\"\n          type: array\n      type: object\n      xml:\n        name: APIServicesOut\n    APIUsageAggregatedOut:\n      properties:\n        colHeaders:\n          items:\n            type: string\n          type: array\n        data:\n          items:\n            items:\n              format: int32\n              type: integer\n            type: array\n          type: array\n        historyTruncated:\n          type: boolean\n        periodEnd:\n          format: int64\n          type: integer\n        periodStart:\n          format: int64\n          type: integer\n        rowHeaders:\n          items:\n            type: string\n          type: array\n        timeUnit:\n          type: string\n        totalUsage:\n          format: int64\n          type: integer\n      type: object\n      xml:\n        name: APIUsageAggregatedOut\n    BatchFirstLastNameDiasporaedOut:\n      description: Represents the output of inferring the LIKELY ethnicity from a personal\n        name, given an country of residence.\n      properties:\n        personalNames:\n          items:\n            $ref: \"#/components/schemas/FirstLastNameDiasporaedOut\"\n          type: array\n      type: object\n      xml:\n        name: BatchFirstLastNameDiasporaedOut\n    BatchFirstLastNameGenderIn:\n      properties:\n        personalNames:\n          items:\n            $ref: \"#/components/schemas/FirstLastNameGenderIn\"\n          type: array\n      type: object\n      xml:\n        name: BatchFirstLastNameGenderIn\n    BatchFirstLastNameGenderedOut:\n      description: Represents the output of inferring the LIKELY gender from a list of\n        personal names.\n      properties:\n        personalNames:\n          items:\n            $ref: \"#/components/schemas/FirstLastNameGenderedOut\"\n          type: array\n      type: object\n      xml:\n        name: BatchFirstLastNameGenderedOut\n    BatchFirstLastNameGeoIn:\n      properties:\n        personalNames:\n          items:\n            $ref: \"#/components/schemas/FirstLastNameGeoIn\"\n          type: array\n      type: object\n      xml:\n        name: BatchFirstLastNameGeoIn\n    BatchFirstLastNameGeoZippedIn:\n      properties:\n        personalNames:\n          items:\n            $ref: \"#/components/schemas/FirstLastNameGeoZippedIn\"\n          type: array\n      type: object\n      xml:\n        name: BatchFirstLastNameGeoZippedIn\n    BatchFirstLastNameIn:\n      properties:\n        personalNames:\n          items:\n            $ref: \"#/components/schemas/FirstLastNameIn\"\n          type: array\n      type: object\n      xml:\n        name: BatchFirstLastNameIn\n    BatchFirstLastNameOriginedOut:\n      description: Represents the output of inferring the LIKELY origin from a list of\n        personal names.\n      properties:\n        personalNames:\n          items:\n            $ref: \"#/components/schemas/FirstLastNameOriginedOut\"\n          type: array\n      type: object\n      xml:\n        name: BatchFirstLastNameOriginedOut\n    BatchFirstLastNamePhoneCodedOut:\n      description: Represents the output of inferring the LIKELY country and phone code of\n        personal names+phones.\n      properties:\n        personalNamesWithPhoneNumbers:\n          items:\n            $ref: \"#/components/schemas/FirstLastNamePhoneCodedOut\"\n          type: array\n      type: object\n      xml:\n        name: BatchFirstLastNamePhoneCodedOut\n    BatchFirstLastNamePhoneNumberGeoIn:\n      properties:\n        personalNamesWithPhoneNumbers:\n          items:\n            $ref: \"#/components/schemas/FirstLastNamePhoneNumberGeoIn\"\n          type: array\n      type: object\n      xml:\n        name: BatchFirstLastNamePhoneNumberGeoIn\n    BatchFirstLastNamePhoneNumberIn:\n      properties:\n        personalNamesWithPhoneNumbers:\n          items:\n            $ref: \"#/components/schemas/FirstLastNamePhoneNumberIn\"\n          type: array\n      type: object\n      xml:\n        name: BatchFirstLastNamePhoneNumberIn\n    BatchFirstLastNameUSRaceEthnicityOut:\n      description: Represents the output of inferring the LIKELY US 'race/ethnicity' from a\n        personal name, given US country of residence and (optionally) a ZIP5\n        code.\n      properties:\n        personalNames:\n          items:\n            $ref: \"#/components/schemas/FirstLastNameUSRaceEthnicityOut\"\n          type: array\n      type: object\n      xml:\n        name: BatchFirstLastNameUSRaceEthnicityOut\n    BatchMatchPersonalFirstLastNameIn:\n      properties:\n        personalNames:\n          items:\n            $ref: \"#/components/schemas/MatchPersonalFirstLastNameIn\"\n          type: array\n      type: object\n      xml:\n        name: BatchMatchPersonalFirstLastNameIn\n    BatchNameMatchCandidatesOut:\n      properties:\n        namesAndMatchCandidates:\n          items:\n            $ref: \"#/components/schemas/NameMatchCandidatesOut\"\n          type: array\n      type: object\n      xml:\n        name: BatchNameMatchCandidatesOut\n    BatchNameMatchedOut:\n      properties:\n        matchedNames:\n          items:\n            $ref: \"#/components/schemas/NameMatchedOut\"\n          type: array\n      type: object\n      xml:\n        name: BatchNameMatchedOut\n    BatchParsedFullNameGeoIn:\n      properties:\n        personalNames:\n          items:\n            $ref: \"#/components/schemas/ParsedFullNameGeoIn\"\n          type: array\n      type: object\n      xml:\n        name: BatchParsedFullNameGeoIn\n    BatchParsedFullNameIn:\n      properties:\n        personalNames:\n          items:\n            $ref: \"#/components/schemas/ParsedFullNameIn\"\n          type: array\n      type: object\n      xml:\n        name: BatchParsedFullNameIn\n    BatchPersonalNameGenderedOut:\n      properties:\n        personalNames:\n          items:\n            $ref: \"#/components/schemas/PersonalNameGenderedOut\"\n          type: array\n      type: object\n      xml:\n        name: BatchPersonalNameGenderedOut\n    BatchPersonalNameGeoIn:\n      properties:\n        personalNames:\n          items:\n            $ref: \"#/components/schemas/PersonalNameGeoIn\"\n          type: array\n      type: object\n      xml:\n        name: BatchPersonalNameGeoIn\n    BatchPersonalNameGeoOut:\n      properties:\n        personalNames:\n          items:\n            $ref: \"#/components/schemas/PersonalNameGeoOut\"\n          type: array\n      type: object\n      xml:\n        name: BatchPersonalNameGeoOut\n    BatchPersonalNameIn:\n      properties:\n        personalNames:\n          items:\n            $ref: \"#/components/schemas/PersonalNameIn\"\n          type: array\n      type: object\n      xml:\n        name: BatchPersonalNameIn\n    BatchPersonalNameParsedOut:\n      properties:\n        personalNames:\n          items:\n            $ref: \"#/components/schemas/PersonalNameParsedOut\"\n          type: array\n      type: object\n      xml:\n        name: BatchPersonalNameParsedOut\n    BillingHistoryOut:\n      properties:\n        corporateInvoices:\n          items:\n            $ref: \"#/components/schemas/InvoiceOut\"\n          type: array\n        stripeInvoices:\n          items:\n            $ref: \"#/components/schemas/InvoiceOut\"\n          type: array\n      type: object\n      xml:\n        name: BillingHistoryOut\n    BillingInfoInOut:\n      properties:\n        addressCity:\n          type: string\n        addressCountry:\n          type: string\n        addressLine1:\n          type: string\n        addressLine2:\n          type: string\n        addressPostalCode:\n          type: string\n        addressState:\n          type: string\n        billingEmail:\n          type: string\n        customerName:\n          type: string\n        customerPhone:\n          type: string\n        preferredCurrency:\n          type: string\n        vatID:\n          type: string\n      type: object\n      xml:\n        name: BillingInfoInOut\n    ClassifierMetricsOut:\n      description: Simple metrics on a classifier\n      properties:\n        aiNonVettedEstimatePrecision:\n          format: double\n          type: number\n        aiNonVettedEstimateRecall:\n          format: double\n          type: number\n        aiNonVettedEstimateTotal:\n          format: int64\n          type: integer\n        aiNonVettedExpectedClassMetrics:\n          items:\n            $ref: \"#/components/schemas/ExpectedClassMetricsOut\"\n          type: array\n        aiNonVettedLearnTotal:\n          format: int64\n          type: integer\n        aiStartTime:\n          format: int64\n          type: integer\n        aiVettedEstimatePrecision:\n          format: double\n          type: number\n        aiVettedEstimateRecall:\n          format: double\n          type: number\n        aiVettedEstimateTotal:\n          format: int64\n          type: integer\n        aiVettedExpectedClassMetrics:\n          items:\n            $ref: \"#/components/schemas/ExpectedClassMetricsOut\"\n          type: array\n        aiVettedLearnTotal:\n          format: int64\n          type: integer\n        bufferSize:\n          format: int32\n          type: integer\n        classifierName:\n          type: string\n        classifyDurationsCurrent:\n          format: double\n          type: number\n        classifyDurationsSummary:\n          format: double\n          type: number\n        factKeysSize:\n          format: int32\n          type: integer\n        factsLearned:\n          format: int64\n          type: integer\n        featuresSize:\n          format: int64\n          type: integer\n        learnDurationsCurrent:\n          format: double\n          type: number\n        learnDurationsSummary:\n          format: double\n          type: number\n        learnQueueSize:\n          format: int32\n          type: integer\n        metricTimeStamp:\n          format: int64\n          type: integer\n        preClassifyQueueSize:\n          format: int32\n          type: integer\n      type: object\n      xml:\n        name: ClassifierMetricsOut\n    CurrenciesOut:\n      properties:\n        currenciesIso3:\n          items:\n            type: string\n          type: array\n      type: object\n      xml:\n        name: CurrenciesOut\n    DeployUIOut:\n      properties:\n        errorMessage:\n          type: string\n        succeeded:\n          type: boolean\n      type: object\n      xml:\n        name: DeployUIOut\n    ExpectedClassMetricsOut:\n      description: Simple metrics on a classifier, for a given expected class\n      properties:\n        aiEstimatePrecision:\n          format: double\n          type: number\n        aiEstimateRecall:\n          format: double\n          type: number\n        aiEstimateTotal:\n          format: int64\n          type: integer\n        aiLearnTotal:\n          format: int64\n          type: integer\n        classifierName:\n          type: string\n        expectedClass:\n          type: string\n      type: object\n      xml:\n        name: ExpectedClassMetricsOut\n    FeedbackLoopOut:\n      properties:\n        feedbackCredits:\n          format: int64\n          type: integer\n      type: object\n      xml:\n        name: FeedbackLoopOut\n    FirstLastNameDiasporaedOut:\n      description: Represents the output of inferring the LIKELY ethnicity from a personal\n        name, given an country of residence.\n      properties:\n        countryIso2:\n          type: string\n          xml:\n            attribute: true\n        ethnicity:\n          type: string\n          xml:\n            attribute: true\n        ethnicityAlt:\n          type: string\n          xml:\n            attribute: true\n        firstName:\n          type: string\n        id:\n          type: string\n        lastName:\n          type: string\n        lifted:\n          type: boolean\n          xml:\n            attribute: true\n        score:\n          description: Compatibility to NamSor_v1 Origin score value\n          format: double\n          type: number\n      type: object\n      xml:\n        name: FirstLastNameDiasporaedOut\n    FirstLastNameGenderIn:\n      properties:\n        firstName:\n          type: string\n          xml:\n            attribute: true\n        gender:\n          type: string\n          xml:\n            attribute: true\n        id:\n          type: string\n          xml:\n            attribute: true\n        lastName:\n          type: string\n          xml:\n            attribute: true\n      type: object\n      xml:\n        name: FirstLastName\n    FirstLastNameGenderedOut:\n      description: Represents the output of inferring the LIKELY gender from a personal\n        name.\n      properties:\n        firstName:\n          type: string\n        genderScale:\n          description: Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value\n          format: double\n          type: number\n        id:\n          type: string\n        lastName:\n          type: string\n        likelyGender:\n          description: Most likely gender\n          enum:\n            - male\n            - female\n            - unknown\n          type: string\n        probabilityCalibrated:\n          format: double\n          type: number\n        score:\n          format: double\n          type: number\n      type: object\n      xml:\n        name: FirstLastNameGenderedOut\n    FirstLastNameGeoIn:\n      properties:\n        countryIso2:\n          type: string\n          xml:\n            attribute: true\n        firstName:\n          type: string\n          xml:\n            attribute: true\n        id:\n          type: string\n          xml:\n            attribute: true\n        lastName:\n          type: string\n          xml:\n            attribute: true\n      type: object\n      xml:\n        name: FirstLastNameGeoIn\n    FirstLastNameGeoZippedIn:\n      properties:\n        countryIso2:\n          type: string\n          xml:\n            attribute: true\n        firstName:\n          type: string\n          xml:\n            attribute: true\n        id:\n          type: string\n          xml:\n            attribute: true\n        lastName:\n          type: string\n          xml:\n            attribute: true\n        zipCode:\n          type: string\n          xml:\n            attribute: true\n      type: object\n      xml:\n        name: FirstLastNameGeoZippedIn\n    FirstLastNameIn:\n      properties:\n        firstName:\n          type: string\n          xml:\n            attribute: true\n        id:\n          type: string\n          xml:\n            attribute: true\n        lastName:\n          type: string\n          xml:\n            attribute: true\n      type: object\n      xml:\n        name: FirstLastName\n    FirstLastNameOriginedOut:\n      description: Represents the output of inferring the LIKELY country of Origin from a\n        personal name.\n      properties:\n        countryOrigin:\n          description: Most likely country of Origin\n          type: string\n        countryOriginAlt:\n          description: \"Second best alternative : country of Origin\"\n          type: string\n        firstName:\n          type: string\n        id:\n          type: string\n        lastName:\n          type: string\n        regionOrigin:\n          description: Most likely region of Origin (based on countryOrigin ISO2 code)\n          type: string\n        score:\n          description: Compatibility to NamSor_v1 Origin score value\n          format: double\n          type: number\n        subRegionOrigin:\n          description: Most likely region of Origin (based on countryOrigin ISO2 code)\n          type: string\n        topRegionOrigin:\n          description: Most likely region of Origin (based on countryOrigin ISO2 code)\n          type: string\n      type: object\n      xml:\n        name: FirstLastNameOriginedOut\n    FirstLastNameOut:\n      properties:\n        firstName:\n          type: string\n        id:\n          type: string\n        lastName:\n          type: string\n      type: object\n      xml:\n        name: FirstLastNameOut\n    FirstLastNamePhoneCodedOut:\n      description: Represents the output of inferring the LIKELY country and phone code\n        from a personal name and phone number.\n      properties:\n        countryIso2:\n          type: string\n        firstName:\n          type: string\n        id:\n          type: string\n        internationalPhoneNumberVerified:\n          type: string\n        lastName:\n          type: string\n        originCountryIso2:\n          type: string\n        originCountryIso2Alt:\n          type: string\n        phoneCountryCode:\n          format: int32\n          type: integer\n        phoneCountryCodeAlt:\n          format: int32\n          type: integer\n        phoneCountryIso2:\n          type: string\n        phoneCountryIso2Alt:\n          type: string\n        phoneCountryIso2Verified:\n          type: string\n        phoneNumber:\n          type: string\n        score:\n          format: double\n          type: number\n        verified:\n          type: boolean\n      type: object\n      xml:\n        name: FirstLastNamePhoneCodedOut\n    FirstLastNamePhoneNumberGeoIn:\n      properties:\n        FirstLastNameOriginedOut:\n          $ref: \"#/components/schemas/FirstLastNameOriginedOut\"\n        countryIso2:\n          type: string\n        countryIso2Alt:\n          type: string\n        firstName:\n          type: string\n          xml:\n            attribute: true\n        id:\n          type: string\n          xml:\n            attribute: true\n        lastName:\n          type: string\n          xml:\n            attribute: true\n        phoneNumber:\n          type: string\n      type: object\n      xml:\n        name: FirstLastNamePhoneNumberGeoIn\n    FirstLastNamePhoneNumberIn:\n      properties:\n        FirstLastNameOriginedOut:\n          $ref: \"#/components/schemas/FirstLastNameOriginedOut\"\n        firstName:\n          type: string\n          xml:\n            attribute: true\n        id:\n          type: string\n          xml:\n            attribute: true\n        lastName:\n          type: string\n          xml:\n            attribute: true\n        phoneNumber:\n          type: string\n      type: object\n      xml:\n        name: FirstLastNamePhoneNumberIn\n    FirstLastNameUSRaceEthnicityOut:\n      description: Represents the output of inferring the LIKELY US 'race/ethnicity' from a\n        personal name, given US country of residence and (optionally) a ZIP5\n        code.\n      properties:\n        firstName:\n          type: string\n        id:\n          type: string\n        lastName:\n          type: string\n        raceEthnicity:\n          description: Most likely US 'race'/ethnicity\n          enum:\n            - W_NL\n            - HL\n            - A\n            - B_NL\n          type: string\n          xml:\n            attribute: true\n        raceEthnicityAlt:\n          description: Second most likely US 'race'/ethnicity\n          enum:\n            - W_NL\n            - HL\n            - A\n            - B_NL\n          type: string\n          xml:\n            attribute: true\n        score:\n          description: Compatibility to NamSor_v1 Origin score value\n          format: double\n          type: number\n      type: object\n      xml:\n        name: FirstLastNameUSRaceEthnicityOut\n    InvoiceItemOut:\n      properties:\n        amount:\n          format: int64\n          type: integer\n        currency:\n          type: string\n        description:\n          type: string\n        invoiceItemType:\n          type: string\n        itemId:\n          type: string\n        planDesc:\n          type: string\n        planName:\n          type: string\n        planNickname:\n          type: string\n        quantity:\n          format: int64\n          type: integer\n        subscription:\n          type: string\n        subscriptionItem:\n          type: string\n      type: object\n      xml:\n        name: InvoiceItemOut\n    InvoiceOut:\n      properties:\n        amountDue:\n          format: int64\n          type: integer\n        amountPaid:\n          format: int64\n          type: integer\n        amountRemaining:\n          format: int64\n          type: integer\n        attempted:\n          type: boolean\n        currency:\n          type: string\n        description:\n          type: string\n        dueDate:\n          format: date-time\n          type: string\n        invoiceDate:\n          format: date-time\n          type: string\n        invoiceId:\n          type: string\n        invoicePdf:\n          type: string\n        invoiceStatus:\n          type: string\n        isStriped:\n          type: boolean\n        items:\n          items:\n            $ref: \"#/components/schemas/InvoiceItemOut\"\n          type: array\n        periodEnd:\n          format: date-time\n          type: string\n        periodStart:\n          format: date-time\n          type: string\n        receiptNumber:\n          type: string\n        stripeCustomerId:\n          type: string\n        subTotal:\n          format: int64\n          type: integer\n        tax:\n          format: int64\n          type: integer\n        taxPercent:\n          format: int64\n          type: integer\n        total:\n          format: int64\n          type: integer\n        userId:\n          type: string\n      type: object\n      xml:\n        name: InvoiceOut\n    MatchPersonalFirstLastNameIn:\n      properties:\n        id:\n          type: string\n          xml:\n            attribute: true\n        name:\n          type: string\n        name1:\n          $ref: \"#/components/schemas/FirstLastNameIn\"\n        name2:\n          $ref: \"#/components/schemas/PersonalNameIn\"\n      type: object\n      xml:\n        name: MatchPersonalFirstLastNameIn\n    NamSorCounterOut:\n      properties:\n        counter:\n          format: int64\n          type: integer\n      type: object\n      xml:\n        name: NamSorCounterOut\n    NameMatchCandidateOut:\n      properties:\n        candidateName:\n          type: string\n        probability:\n          format: double\n          type: number\n      type: object\n      xml:\n        name: NameMatchCandidateOut\n    NameMatchCandidatesOut:\n      properties:\n        firstName:\n          type: string\n        id:\n          type: string\n        lastName:\n          type: string\n        matchCandidates:\n          items:\n            $ref: \"#/components/schemas/NameMatchCandidateOut\"\n          type: array\n      type: object\n      xml:\n        name: NameMatchCandidatesOut\n    NameMatchedOut:\n      properties:\n        id:\n          type: string\n        matchStatus:\n          type: string\n        score:\n          format: double\n          type: number\n      type: object\n      xml:\n        name: NameMatchedOut\n    ParsedFullNameGeoIn:\n      properties:\n        countryIso2:\n          type: string\n          xml:\n            attribute: true\n        firstName:\n          type: string\n          xml:\n            attribute: true\n        id:\n          type: string\n          xml:\n            attribute: true\n        lastName:\n          type: string\n          xml:\n            attribute: true\n        middleName:\n          type: string\n          xml:\n            attribute: true\n        prefixOrTitle:\n          type: string\n          xml:\n            attribute: true\n        suffix:\n          type: string\n          xml:\n            attribute: true\n      type: object\n      xml:\n        name: ParsedFullNameGeoIn\n    ParsedFullNameIn:\n      properties:\n        firstName:\n          type: string\n          xml:\n            attribute: true\n        id:\n          type: string\n          xml:\n            attribute: true\n        lastName:\n          type: string\n          xml:\n            attribute: true\n        middleName:\n          type: string\n          xml:\n            attribute: true\n        prefixOrTitle:\n          type: string\n          xml:\n            attribute: true\n        suffix:\n          type: string\n          xml:\n            attribute: true\n      type: object\n      xml:\n        name: ParsedFullNameIn\n    PersonalNameGenderedOut:\n      properties:\n        genderScale:\n          description: Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value\n          format: double\n          type: number\n        id:\n          type: string\n        likelyGender:\n          description: Most likely gender\n          enum:\n            - male\n            - female\n            - unknown\n          type: string\n        name:\n          type: string\n        score:\n          format: double\n          type: number\n      type: object\n      xml:\n        name: PersonalNameGenderedOut\n    PersonalNameGeoIn:\n      properties:\n        countryIso2:\n          type: string\n          xml:\n            attribute: true\n        id:\n          type: string\n          xml:\n            attribute: true\n        name:\n          type: string\n          xml:\n            attribute: true\n      type: object\n      xml:\n        name: PersonalNameGeoIn\n    PersonalNameGeoOut:\n      properties:\n        country:\n          type: string\n        countryAlt:\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        region:\n          type: string\n        score:\n          format: double\n          type: number\n        subRegion:\n          type: string\n        topRegion:\n          type: string\n      type: object\n      xml:\n        name: PersonalNameGeoOut\n    PersonalNameIn:\n      properties:\n        id:\n          type: string\n          xml:\n            attribute: true\n        name:\n          type: string\n          xml:\n            attribute: true\n      type: object\n      xml:\n        name: PersonalNameIn\n    PersonalNameParsedOut:\n      properties:\n        firstLastName:\n          $ref: \"#/components/schemas/FirstLastNameOut\"\n        id:\n          type: string\n        name:\n          type: string\n        nameParserType:\n          type: string\n        nameParserTypeAlt:\n          type: string\n        score:\n          format: double\n          type: number\n      type: object\n      xml:\n        name: PersonalNameParsedOut\n    RomanizedNameOut:\n      properties:\n        id:\n          type: string\n        latinName:\n          type: string\n        originalName:\n          type: string\n        score:\n          format: double\n          type: number\n        sourceLanguage:\n          type: string\n        sourceScript:\n          type: string\n        targetLanguage:\n          type: string\n        targetScript:\n          type: string\n      type: object\n      xml:\n        name: RomanizedNameOut\n    SoftwareVersionOut:\n      properties:\n        softwareNameAndVersion:\n          type: string\n        softwareVersion:\n          items:\n            format: int32\n            type: integer\n          type: array\n      type: object\n      xml:\n        name: SoftwareVersionOut\n    SourceDetailedMetricsOut:\n      description: Simple metrics on source, with details by classifier.\n      properties:\n        aiEstimatePrecision:\n          format: double\n          type: number\n        aiEstimateRecall:\n          format: double\n          type: number\n        aiEstimateTotal:\n          format: int64\n          type: integer\n        aiLearnTotal:\n          format: int64\n          type: integer\n        aiStartTime:\n          format: int64\n          type: integer\n        classifierName:\n          type: string\n        expectedClassMetrics:\n          items:\n            $ref: \"#/components/schemas/ExpectedClassMetricsOut\"\n          type: array\n        metricTimeStamp:\n          format: int64\n          type: integer\n        snapshotDate:\n          format: int64\n          type: integer\n        source:\n          $ref: \"#/components/schemas/APIKeyOut\"\n      type: object\n      xml:\n        name: SourceDetailedMetricsOut\n    SourceMetricsOut:\n      description: Simple metrics on a classifier, for a given source\n      properties:\n        aiEstimatePrecision:\n          format: double\n          type: number\n        aiEstimateRecall:\n          format: double\n          type: number\n        aiEstimateTotal:\n          format: int64\n          type: integer\n        aiLearnTotal:\n          format: int64\n          type: integer\n        aiStartTime:\n          format: int64\n          type: integer\n        classifierName:\n          type: string\n        metricTimeStamp:\n          format: int64\n          type: integer\n        snapshotDate:\n          format: int64\n          type: integer\n        source:\n          $ref: \"#/components/schemas/APIKeyOut\"\n      type: object\n      xml:\n        name: SourceMetricsOut\n    StripeCardOut:\n      properties:\n        brand:\n          type: string\n        defaultCard:\n          type: boolean\n        expMonth:\n          format: int64\n          type: integer\n        expYear:\n          format: int64\n          type: integer\n        last4:\n          type: string\n        sourceId:\n          type: string\n      type: object\n      xml:\n        name: StripeCustomerOut\n    StripeCustomerOut:\n      properties:\n        sourceCountry:\n          type: string\n        sourceCurrency:\n          type: string\n        stripeCustomerId:\n          type: string\n        stripedCards:\n          items:\n            $ref: \"#/components/schemas/StripeCardOut\"\n          type: array\n      type: object\n      xml:\n        name: StripeCustomerOut\n    SystemMetricsOut:\n      properties:\n        classifierMetrics:\n          items:\n            $ref: \"#/components/schemas/ClassifierMetricsOut\"\n          type: array\n        freeMem:\n          format: int64\n          type: integer\n        maxMem:\n          format: int64\n          type: integer\n        sourceMetrics:\n          items:\n            $ref: \"#/components/schemas/SourceMetricsOut\"\n          type: array\n        totalMem:\n          format: int64\n          type: integer\n      type: object\n      xml:\n        name: SystemMetricsOut\n    UserInfoOut:\n      properties:\n        apiKey:\n          type: string\n        disabled:\n          type: boolean\n        displayName:\n          type: string\n        email:\n          type: string\n        emailVerified:\n          type: boolean\n        firstKnownIpAddress:\n          type: string\n        otherInfos:\n          items:\n            $ref: \"#/components/schemas/UserInfoOut\"\n          type: array\n        phoneNumber:\n          type: string\n        photoUrl:\n          type: string\n        providerId:\n          type: string\n        stripeCustomerId:\n          type: string\n        stripePerishableKey:\n          type: string\n        timeStamp:\n          format: int64\n          type: integer\n        uid:\n          type: string\n        verifyToken:\n          type: string\n      type: object\n      xml:\n        name: UserInfoOut\n  securitySchemes:\n    api_key:\n      description: api_key required\n      in: header\n      name: X-API-KEY\n      type: apiKey\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/namsor.com-2.0.5-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/namsor.com-2.0.5-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api2/json/charge\": post: requestBody: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}