{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/light-example-4j"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "kafka/sidecar-backend/src/main/resources/config/openapi.yaml",
			"byteSize": 4845,
			"content": "---\nopenapi: \"3.0.0\"\ninfo:\n  version: \"1.0.0\"\n  title: \"Sidecar Backend\"\n  license:\n    name: \"MIT\"\nservers:\n  - url: \"http://backend.sidecar.networknt.com\"\npaths:\n  /kafka/records:\n    post:\n      summary: \"Post a list of Kafka records\"\n      operationId: \"postRecords\"\n      requestBody:\n        description: \"An array of consumer records\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Records\"\n      security:\n        - sidecar_auth:\n            - \"write:sidecar\"\n      responses:\n        \"201\":\n          description: \"Null response\"\n  /kafka/ksqldb:\n    post:\n      summary: \"Process the ksqlDB record\"\n      operationId: \"ksqlDBProcess\"\n      requestBody:\n        description: \"process a ksqlDB row\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      security:\n        - sidecar_auth:\n            - \"write:sidecar\"\n      responses:\n        \"201\":\n          description: \"Null response\"\n    get:\n      summary: \"get the ksqlDB record\"\n      operationId: \"ksqlDBget\"\n      parameters:\n        - name: id\n          in: query\n          required: false\n          description: The user id\n          schema:\n            type: string\n        - name: type\n          in: query\n          required: false\n          description: The query type\n          schema:\n            type: string\n        - name: queryname\n          in: query\n          required: true\n          description: The query name to run\n          schema:\n            type: string\n      security:\n        - sidecar_auth:\n            - \"write:sidecar\"\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: object\n        '404':\n          description: Consumer instance not found\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Status\"\n  /kafka/dlq/active/producer:\n    post:\n      summary: \"Post a list of Kafka records\"\n      operationId: \"postRecordsToDlq\"\n      requestBody:\n        description: \"An array of consumer records\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RecordProcessedResults\"\n      security:\n        - sidecar_auth:\n            - \"write:sidecar\"\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          description: Consumer instance not found\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Status\"\n\ncomponents:\n  securitySchemes:\n    sidecar_auth:\n      type: \"oauth2\"\n      description: \"This API uses OAuth 2 with the client credential grant flow.\"\n      flows:\n        clientCredentials:\n          tokenUrl: \"https://localhost:6882/token\"\n          scopes:\n            write:sidecar: \"Add records\"\n  schemas:\n    Records:\n      type: \"array\"\n      items:\n        $ref: \"#/components/schemas/Record\"\n    Record:\n      type: \"object\"\n      properties:\n        topic:\n          type: \"string\"\n        key:\n          oneOf:\n            - $ref: \"#/components/schemas/StringKey\"\n            - $ref: \"#/components/schemas/ObjectKey\"\n        value:\n          oneOf:\n            - $ref: \"#/components/schemas/StringValue\"\n            - $ref: \"#/components/schemas/ObjectValue\"\n        header:\n          type: \"object\"\n        partition:\n          type: \"integer\"\n          minimum: 0\n        offset:\n          type: \"number\"\n          minimum: 0\n    StringKey:\n      type: \"string\"\n    ObjectKey:\n      type: \"object\"\n    StringValue:\n      type: \"string\"\n    ObjectValue:\n      type: \"object\"\n    RecordProcessedResults:\n      type: \"array\"\n      items:\n        $ref: \"#/components/schemas/RecordProcessedResult\"\n    RecordProcessedResult:\n      type: \"object\"\n      properties:\n        record:\n          $ref: \"#/components/schemas/Record\"\n        key:\n          type: string\n        correlationId:\n          type: string\n        traceabilityId:\n          type: string\n        stacktrace:\n          type: string\n        processed:\n          type: boolean\n\n    Status:\n      type: object\n      properties:\n        statusCode:\n          description: HTTP response code\n          type: integer\n        code:\n          description: Code is the machine-readable error code\n          type: string\n        message:\n          description: Error messsage\n          type: string\n        description:\n          description: The detailed description of the error status\n          type: string\n      required:\n        - statusCode\n        - code\n",
			"canonicalURL": "/github.com/networknt/light-example-4j@74513c019570e65623b80c1cadc1423e7a18807a/-/blob/kafka/sidecar-backend/src/main/resources/config/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/networknt/light-example-4j/blob/74513c019570e65623b80c1cadc1423e7a18807a/kafka/sidecar-backend/src/main/resources/config/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/kafka/dlq/active/producer\": post: security: security \"sidecar_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}