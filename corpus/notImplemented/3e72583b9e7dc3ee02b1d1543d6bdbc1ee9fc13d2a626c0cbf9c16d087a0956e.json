{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/saps4hana.itcm.user/openapi.yaml",
			"byteSize": 5933,
			"content": "openapi: 3.0.1\ninfo:\n  title: User Service\n  description: \u003e\n    This is a generated connector for [SAPS4HANA Intelligent Trade Claims Management API v1.0.0](https://help.sap.com/viewer/902b9d277dfe48fea582d28849d54935/CURRENT/en-US) OpenAPI specification. \n    \n    The User service allows you to create, add, and delete information about users in SAPS4HANA Intelligent Trade Claims Management.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n\n    Create and configure an OAuth2 client credentials by following [this guide](https://help.sap.com/viewer/b865ed651e414196b39f8922db2122c7/LATEST/en-US/7aefa21a65f94b25b7e639c3931b6f83.html).\n  x-ballerina-display:\n    label: SAPS4HANA ITCM User\n    iconPath: \"icon.png\"\n  contact:\n    name: ITCM\n  license:\n    name: SAP.\n  version: 1.0.0\nexternalDocs:\n  description: Business Documentation for User Service\n  url: https://help.sap.com/viewer/902b9d277dfe48fea582d28849d54935/CURRENT/en-US/a70cc9edd46742a098a9362a1e3120b1.html\n# servers:\n# - url: https://{host}.{environment}.{domain}/v1\n#   variables:\n#     host:\n#       default: api.dev1\n#       description: Your host where SAP Intelligent Trade Claims Management has deployed\n#     environment:\n#       default: e2e\n#       description: Your defined environment for your SAP Intelligent Trade Claims Management account\n#     domain:\n#       default: eurekacloud.io\nsecurity:\n- OAuth2: []\ntags:\n- name: User\npaths:\n  /users:\n    post:\n      tags:\n      - User\n      summary: Create a new User\n      description: Using this API, user can create a User. As of now, batch creation is not supported\n      operationId: createUser\n      requestBody:\n        description: userProfileDTO\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserProfileDTO'\n        required: true\n      responses:\n        '201':\n          description: Success Created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponseDTO'\n        '401':\n          description: Unauthorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseUnauthorizedMessage'\n        '403':\n          description: Forbidden (insufficient authorization).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseForbiddenMessage'\n      deprecated: false\n      security:\n      - OAuth2: []\ncomponents:\n  schemas:\n    AvatarIconDTO:\n      title: AvatarIconDTO\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n          - GenderNeutralIcon\n          - Initials\n          - Image\n        value:\n          type: string\n    UserNameDTO:\n      title: UserNameDTO\n      type: object\n      properties:\n        firstName:\n          type: string\n        lastName:\n          type: string\n    UserProfileDTO:\n      title: UserProfileDTO\n      type: object\n      example:\n        email: sam@sap.com\n        phone: '+13977168971'\n        userName:\n          firstName: sam\n          lastName: bill\n      properties:\n        avatarIcon:\n          $ref: '#/components/schemas/AvatarIconDTO'\n        creationTime:\n          type: string\n        dateFormat:\n          type: string\n        email:\n          type: string\n        externalUserId:\n          type: string\n        familyNameFirst:\n          type: boolean\n        id:\n          type: integer\n          format: int64\n        language:\n          type: string\n        phone:\n          pattern: (^[0-9]*)\n          type: string\n        pictureId:\n          type: integer\n          format: int64\n        role:\n          type: string\n        s4ExternalUserId:\n          type: string\n        status:\n          type: string\n          enum:\n          - INITIAL\n          - WAITING_COMPANY\n          - WAITED_COMPANY\n        tenantId:\n          type: integer\n          format: int64\n        timeFormat:\n          type: string\n        timeZone:\n          type: string\n        userName:\n          $ref: '#/components/schemas/UserNameDTO'\n        userUpdateState:\n          type: integer\n          format: int64\n    ResponseForbiddenMessage:\n      type: object\n      example:\n        message: Access denied\n        timestamp: '2021-01-18T18:33:18.914Z'\n      properties:\n        message:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n        uri:\n          type: string\n      title: Forbidden Message\n    ResponseUnauthorizedMessage:\n      type: object\n      example:\n        message: Unauthorized/API key not found\n        timestamp: '2021-01-18T18:33:18.914Z'\n      properties:\n        message:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n        uri:\n          type: string\n      title: Unauthorized Message\n    UserResponseDTO:\n      title: User Response\n      type: object\n      example:\n        id: 3456\n        message: Success Created\n        timestamp: '2021-01-18T18:33:18.914Z'\n      properties:\n        id:\n          type: integer\n        message:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n  securitySchemes:\n    OAuth2:\n      type: oauth2\n      description: To use this API, you need to get OAuth client credentials (client ID and secret) from SAP ITCM, and be authorized to use the relevant scope. Refer to the \u003ca href=\"https://developer.sap.com/api-reference/authentication/getting-started.html\"\u003efull authentication information\u003c/a\u003e for more information.\n      flows:\n        clientCredentials:\n          tokenUrl: https://colgate-dev1.authentication.us30.hana.ondemand.com/oauth/token\n          scopes: {}\nx-sap-shortText: The User service represents Users that can be posted to SAP Intelligent Trade Claims Management by a user.",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/saps4hana.itcm.user/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/saps4hana.itcm.user/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/users\": post: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}