{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/googleapis.com/servicecontrol/v1/openapi.yaml",
			"byteSize": 92301,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://servicecontrol.googleapis.com/\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: \"Provides admission control and telemetry reporting for services integrated with Service Infrastructure. \"\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Service Control API\n  version: v1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n    - analytics\n    - media\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - format: google\n      url: https://servicecontrol.googleapis.com/$discovery/rest?version=v1\n      version: v1\n  x-preferred: false\n  x-providerName: googleapis.com\n  x-serviceName: servicecontrol\nexternalDocs:\n  url: https://cloud.google.com/service-control/\ntags:\n  - name: services\npaths:\n  \"/v1/services/{serviceName}:allocateQuota\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      description: Attempts to allocate quota for the specified consumer. It should be called before the operation is executed. This method requires the `servicemanagement.services.quota` permission on the specified service. For more information, see [Cloud IAM](https://cloud.google.com/iam). **NOTE:** The client **must** fail-open on server errors `INTERNAL`, `UNKNOWN`, `DEADLINE_EXCEEDED`, and `UNAVAILABLE`. To ensure system reliability, the server may inject these errors to prohibit any hard dependency on the quota functionality.\n      operationId: servicecontrol.services.allocateQuota\n      parameters:\n        - description: Name of the service as specified in the service configuration. For example, `\"pubsub.googleapis.com\"`. See google.api.Service for the definition of a service name.\n          in: path\n          name: serviceName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AllocateQuotaRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AllocateQuotaResponse\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/servicecontrol\n          Oauth2c:\n            - https://www.googleapis.com/auth/servicecontrol\n      tags:\n        - services\n  \"/v1/services/{serviceName}:check\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      description: \"Checks whether an operation on a service should be allowed to proceed based on the configuration of the service and related policies. It must be called before the operation is executed. If feasible, the client should cache the check results and reuse them for 60 seconds. In case of any server errors, the client should rely on the cached results for much longer time to avoid outage. WARNING: There is general 60s delay for the configuration and policy propagation, therefore callers MUST NOT depend on the `Check` method having the latest policy information. NOTE: the CheckRequest has the size limit (wire-format byte size) of 1MB. This method requires the `servicemanagement.services.check` permission on the specified service. For more information, see [Cloud IAM](https://cloud.google.com/iam).\"\n      operationId: servicecontrol.services.check\n      parameters:\n        - description: The service name as specified in its service configuration. For example, `\"pubsub.googleapis.com\"`. See [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service) for the definition of a service name.\n          in: path\n          name: serviceName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CheckRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckResponse\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/servicecontrol\n          Oauth2c:\n            - https://www.googleapis.com/auth/servicecontrol\n      tags:\n        - services\n  \"/v1/services/{serviceName}:report\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      description: \"Reports operation results to Google Service Control, such as logs and metrics. It should be called after an operation is completed. If feasible, the client should aggregate reporting data for up to 5 seconds to reduce API traffic. Limiting aggregation to 5 seconds is to reduce data loss during client crashes. Clients should carefully choose the aggregation time window to avoid data loss risk more than 0.01% for business and compliance reasons. NOTE: the ReportRequest has the size limit (wire-format byte size) of 1MB. This method requires the `servicemanagement.services.report` permission on the specified service. For more information, see [Google Cloud IAM](https://cloud.google.com/iam).\"\n      operationId: servicecontrol.services.report\n      parameters:\n        - description: The service name as specified in its service configuration. For example, `\"pubsub.googleapis.com\"`. See [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service) for the definition of a service name.\n          in: path\n          name: serviceName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ReportRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReportResponse\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/servicecontrol\n          Oauth2c:\n            - https://www.googleapis.com/auth/servicecontrol\n      tags:\n        - services\ncomponents:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n          - \"1\"\n          - \"2\"\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n          - json\n          - media\n          - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    AllocateInfo:\n      properties:\n        unusedArguments:\n          description: A list of label keys that were unused by the server in processing the request. Thus, for similar requests repeated in a certain future time window, the caller can choose to ignore these labels in the requests to achieve better client-side cache hits and quota aggregation for rate quota. This field is not populated for allocation quota checks.\n          items:\n            type: string\n          type: array\n      type: object\n    AllocateQuotaRequest:\n      description: Request message for the AllocateQuota method.\n      properties:\n        allocateOperation:\n          $ref: \"#/components/schemas/QuotaOperation\"\n          description: Operation that describes the quota allocation.\n        serviceConfigId:\n          description: Specifies which version of service configuration should be used to process the request. If unspecified or no matching version can be found, the latest one will be used.\n          type: string\n      type: object\n    AllocateQuotaResponse:\n      description: Response message for the AllocateQuota method.\n      properties:\n        allocateErrors:\n          description: Indicates the decision of the allocate.\n          items:\n            $ref: \"#/components/schemas/QuotaError\"\n          type: array\n        allocateInfo:\n          $ref: \"#/components/schemas/AllocateInfo\"\n          description: \"WARNING: DO NOT use this field until this warning message is removed.\"\n        operationId:\n          description: The same operation_id value used in the AllocateQuotaRequest. Used for logging and diagnostics purposes.\n          type: string\n        quotaMetrics:\n          description: 'Quota metrics to indicate the result of allocation. Depending on the request, one or more of the following metrics will be included: 1. Per quota group or per quota metric incremental usage will be specified using the following delta metric : \"serviceruntime.googleapis.com/api/consumer/quota_used_count\" 2. The quota limit reached condition will be specified using the following boolean metric : \"serviceruntime.googleapis.com/quota/exceeded\"'\n          items:\n            $ref: \"#/components/schemas/MetricValueSet\"\n          type: array\n        serviceConfigId:\n          description: ID of the actual config used to process the request.\n          type: string\n      type: object\n    AttributeValue:\n      description: The allowed types for [VALUE] in a `[KEY]:[VALUE]` attribute.\n      properties:\n        boolValue:\n          description: A Boolean value represented by `true` or `false`.\n          type: boolean\n        intValue:\n          description: A 64-bit signed integer.\n          format: int64\n          type: string\n        stringValue:\n          $ref: \"#/components/schemas/TruncatableString\"\n          description: A string up to 256 bytes long.\n      type: object\n    Attributes:\n      description: A set of attributes, each in the format `[KEY]:[VALUE]`.\n      properties:\n        attributeMap:\n          additionalProperties:\n            $ref: \"#/components/schemas/AttributeValue\"\n          description: \"The set of attributes. Each attribute's key can be up to 128 bytes long. The value can be a string up to 256 bytes, a signed 64-bit integer, or the Boolean values `true` and `false`. For example: \\\"/instance_id\\\": \\\"my-instance\\\" \\\"/http/user_agent\\\": \\\"\\\" \\\"/http/request_bytes\\\": 300 \\\"abc.com/myattribute\\\": true\"\n          type: object\n        droppedAttributesCount:\n          description: The number of attributes that were discarded. Attributes can be discarded because their keys are too long or because there are too many attributes. If this value is 0 then all attributes are valid.\n          format: int32\n          type: integer\n      type: object\n    AuditLog:\n      description: \"Common audit log format for Google Cloud Platform API operations. \"\n      properties:\n        authenticationInfo:\n          $ref: \"#/components/schemas/AuthenticationInfo\"\n          description: Authentication information.\n        authorizationInfo:\n          description: Authorization information. If there are multiple resources or permissions involved, then there is one AuthorizationInfo element for each {resource, permission} tuple.\n          items:\n            $ref: \"#/components/schemas/AuthorizationInfo\"\n          type: array\n        metadata:\n          additionalProperties:\n            description: Properties of the object.\n          description: Other service-specific data about the request, response, and other information associated with the current audited event.\n          type: object\n        methodName:\n          description: The name of the service method or operation. For API calls, this should be the name of the API method. For example, \"google.cloud.bigquery.v2.TableService.InsertTable\" \"google.logging.v2.ConfigServiceV2.CreateSink\"\n          type: string\n        numResponseItems:\n          description: The number of items returned from a List or Query API method, if applicable.\n          format: int64\n          type: string\n        policyViolationInfo:\n          $ref: \"#/components/schemas/PolicyViolationInfo\"\n          description: Indicates the policy violations for this request. If the request is denied by the policy, violation information will be logged here.\n        request:\n          additionalProperties:\n            description: Properties of the object.\n          description: The operation request. This may not include all request parameters, such as those that are too large, privacy-sensitive, or duplicated elsewhere in the log record. It should never include user-generated data, such as file contents. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.\n          type: object\n        requestMetadata:\n          $ref: \"#/components/schemas/RequestMetadata\"\n          description: Metadata about the operation.\n        resourceLocation:\n          $ref: \"#/components/schemas/ResourceLocation\"\n          description: The resource location information.\n        resourceName:\n          description: 'The resource or collection that is the target of the operation. The name is a scheme-less URI, not including the API service name. For example: \"projects/PROJECT_ID/zones/us-central1-a/instances\" \"projects/PROJECT_ID/datasets/DATASET_ID\"'\n          type: string\n        resourceOriginalState:\n          additionalProperties:\n            description: Properties of the object.\n          description: The resource's original state before mutation. Present only for operations which have successfully modified the targeted resource(s). In general, this field should contain all changed fields, except those that are already been included in `request`, `response`, `metadata` or `service_data` fields. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.\n          type: object\n        response:\n          additionalProperties:\n            description: Properties of the object.\n          description: The operation response. This may not include all response elements, such as those that are too large, privacy-sensitive, or duplicated elsewhere in the log record. It should never include user-generated data, such as file contents. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.\n          type: object\n        serviceData:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: Deprecated. Use the `metadata` field instead. Other service-specific data about the request, response, and other activities.\n          type: object\n        serviceName:\n          description: The name of the API service performing the operation. For example, `\"compute.googleapis.com\"`.\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n          description: The status of the overall operation.\n      type: object\n    Auth:\n      description: This message defines request authentication attributes. Terminology is based on the JSON Web Token (JWT) standard, but the terms also correlate to concepts in other standards.\n      properties:\n        accessLevels:\n          description: 'A list of access level resource names that allow resources to be accessed by authenticated requester. It is part of Secure GCP processing for the incoming request. An access level string has the format: \"//{api_service_name}/accessPolicies/{policy_id}/accessLevels/{short_name}\" Example: \"//accesscontextmanager.googleapis.com/accessPolicies/MY_POLICY_ID/accessLevels/MY_LEVEL\"'\n          items:\n            type: string\n          type: array\n        audiences:\n          description: 'The intended audience(s) for this authentication information. Reflects the audience (`aud`) claim within a JWT. The audience value(s) depends on the `issuer`, but typically include one or more of the following pieces of information: * The services intended to receive the credential. For example, [\"https://pubsub.googleapis.com/\", \"https://storage.googleapis.com/\"]. * A set of service-based scopes. For example, [\"https://www.googleapis.com/auth/cloud-platform\"]. * The client id of an app, such as the Firebase project id for JWTs from Firebase Auth. Consult the documentation for the credential issuer to determine the information provided.'\n          items:\n            type: string\n          type: array\n        claims:\n          additionalProperties:\n            description: Properties of the object.\n          description: \"Structured claims presented with the credential. JWTs include `{key: value}` pairs for standard and private claims. The following is a subset of the standard required and optional claims that would typically be presented for a Google-based JWT: {'iss': 'accounts.google.com', 'sub': '113289723416554971153', 'aud': ['123456789012', 'pubsub.googleapis.com'], 'azp': '123456789012.apps.googleusercontent.com', 'email': 'jsmith@example.com', 'iat': 1353601026, 'exp': 1353604926} SAML assertions are similarly specified, but with an identity provider dependent structure.\"\n          type: object\n        presenter:\n          description: 'The authorized presenter of the credential. Reflects the optional Authorized Presenter (`azp`) claim within a JWT or the OAuth client id. For example, a Google Cloud Platform client id looks as follows: \"123456789012.apps.googleusercontent.com\".'\n          type: string\n        principal:\n          description: 'The authenticated principal. Reflects the issuer (`iss`) and subject (`sub`) claims within a JWT. The issuer and subject should be `/` delimited, with `/` percent-encoded within the subject fragment. For Google accounts, the principal format is: \"https://accounts.google.com/{id}\"'\n          type: string\n      type: object\n    AuthenticationInfo:\n      description: Authentication information for the operation.\n      properties:\n        authoritySelector:\n          description: The authority selector specified by the requestor, if any. It is not guaranteed that the principal was allowed to use this authority.\n          type: string\n        principalEmail:\n          description: The email address of the authenticated user (or service account on behalf of third party principal) making the request. For third party identity callers, the `principal_subject` field is populated instead of this field. For privacy reasons, the principal email address is sometimes redacted. For more information, see [Caller identities in audit logs](https://cloud.google.com/logging/docs/audit#user-id).\n          type: string\n        principalSubject:\n          description: String representation of identity of requesting party. Populated for both first and third party identities.\n          type: string\n        serviceAccountDelegationInfo:\n          description: Identity delegation history of an authenticated service account that makes the request. It contains information on the real authorities that try to access GCP resources by delegating on a service account. When multiple authorities present, they are guaranteed to be sorted based on the original ordering of the identity delegation events.\n          items:\n            $ref: \"#/components/schemas/ServiceAccountDelegationInfo\"\n          type: array\n        serviceAccountKeyName:\n          description: 'The name of the service account key used to create or exchange credentials for authenticating the service account making the request. This is a scheme-less URI full resource name. For example: \"//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}\"'\n          type: string\n        thirdPartyPrincipal:\n          additionalProperties:\n            description: Properties of the object.\n          description: The third party identification (if any) of the authenticated user making the request. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.\n          type: object\n      type: object\n    AuthorizationInfo:\n      description: Authorization information for the operation.\n      properties:\n        granted:\n          description: Whether or not authorization for `resource` and `permission` was granted.\n          type: boolean\n        permission:\n          description: The required IAM permission.\n          type: string\n        resource:\n          description: \"The resource being accessed, as a REST-style or cloud resource string. For example: bigquery.googleapis.com/projects/PROJECTID/datasets/DATASETID or projects/PROJECTID/datasets/DATASETID\"\n          type: string\n        resourceAttributes:\n          $ref: \"#/components/schemas/Resource\"\n          description: Resource attributes used in IAM condition evaluation. This field contains resource attributes like resource type and resource name. To get the whole view of the attributes used in IAM condition evaluation, the user must also look into `AuditLog.request_metadata.request_attributes`.\n      type: object\n    CheckError:\n      description: Defines the errors to be returned in google.api.servicecontrol.v1.CheckResponse.check_errors.\n      properties:\n        code:\n          description: The error code.\n          enum:\n            - ERROR_CODE_UNSPECIFIED\n            - NOT_FOUND\n            - PERMISSION_DENIED\n            - RESOURCE_EXHAUSTED\n            - BUDGET_EXCEEDED\n            - DENIAL_OF_SERVICE_DETECTED\n            - LOAD_SHEDDING\n            - ABUSER_DETECTED\n            - SERVICE_NOT_ACTIVATED\n            - VISIBILITY_DENIED\n            - BILLING_DISABLED\n            - PROJECT_DELETED\n            - PROJECT_INVALID\n            - CONSUMER_INVALID\n            - IP_ADDRESS_BLOCKED\n            - REFERER_BLOCKED\n            - CLIENT_APP_BLOCKED\n            - API_TARGET_BLOCKED\n            - API_KEY_INVALID\n            - API_KEY_EXPIRED\n            - API_KEY_NOT_FOUND\n            - SPATULA_HEADER_INVALID\n            - LOAS_ROLE_INVALID\n            - NO_LOAS_PROJECT\n            - LOAS_PROJECT_DISABLED\n            - SECURITY_POLICY_VIOLATED\n            - INVALID_CREDENTIAL\n            - LOCATION_POLICY_VIOLATED\n            - NAMESPACE_LOOKUP_UNAVAILABLE\n            - SERVICE_STATUS_UNAVAILABLE\n            - BILLING_STATUS_UNAVAILABLE\n            - QUOTA_CHECK_UNAVAILABLE\n            - LOAS_PROJECT_LOOKUP_UNAVAILABLE\n            - CLOUD_RESOURCE_MANAGER_BACKEND_UNAVAILABLE\n            - SECURITY_POLICY_BACKEND_UNAVAILABLE\n            - LOCATION_POLICY_BACKEND_UNAVAILABLE\n          type: string\n        detail:\n          description: Free-form text providing details on the error cause of the error.\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n          description: Contains public information about the check error. If available, `status.code` will be non zero and client can propagate it out as public error.\n        subject:\n          description: 'Subject to whom this error applies. See the specific code enum for more details on this field. For example: - \"project:\" - \"folder:\" - \"organization:\"'\n          type: string\n      type: object\n    CheckInfo:\n      description: Contains additional information about the check operation.\n      properties:\n        consumerInfo:\n          $ref: \"#/components/schemas/ConsumerInfo\"\n          description: Consumer info of this check.\n        unusedArguments:\n          description: A list of fields and label keys that are ignored by the server. The client doesn't need to send them for following requests to improve performance and allow better aggregation.\n          items:\n            type: string\n          type: array\n      type: object\n    CheckRequest:\n      description: Request message for the Check method.\n      properties:\n        operation:\n          $ref: \"#/components/schemas/Operation\"\n          description: The operation to be checked.\n        requestProjectSettings:\n          description: Requests the project settings to be returned as part of the check response.\n          type: boolean\n        serviceConfigId:\n          description: Specifies which version of service configuration should be used to process the request. If unspecified or no matching version can be found, the latest one will be used.\n          type: string\n        skipActivationCheck:\n          description: 'Indicates if service activation check should be skipped for this request. Default behavior is to perform the check and apply relevant quota. WARNING: Setting this flag to \"true\" will disable quota enforcement.'\n          type: boolean\n      type: object\n    CheckResponse:\n      description: Response message for the Check method.\n      properties:\n        checkErrors:\n          description: Indicate the decision of the check. If no check errors are present, the service should process the operation. Otherwise the service should use the list of errors to determine the appropriate action.\n          items:\n            $ref: \"#/components/schemas/CheckError\"\n          type: array\n        checkInfo:\n          $ref: \"#/components/schemas/CheckInfo\"\n          description: Feedback data returned from the server during processing a Check request.\n        operationId:\n          description: The same operation_id value used in the CheckRequest. Used for logging and diagnostics purposes.\n          type: string\n        quotaInfo:\n          $ref: \"#/components/schemas/QuotaInfo\"\n          description: \"Quota information for the check request associated with this response. \"\n        serviceConfigId:\n          description: The actual config id used to process the request.\n          type: string\n        serviceRolloutId:\n          description: The current service rollout id used to process the request.\n          type: string\n      type: object\n    ConsumerInfo:\n      description: \"`ConsumerInfo` provides information about the consumer.\"\n      properties:\n        consumerNumber:\n          description: The consumer identity number, can be Google cloud project number, folder number or organization number e.g. 1234567890. A value of 0 indicates no consumer number is found.\n          format: int64\n          type: string\n        projectNumber:\n          description: \"The Google cloud project number, e.g. 1234567890. A value of 0 indicates no project number is found. NOTE: This field is deprecated after Chemist support flexible consumer id. New code should not depend on this field anymore.\"\n          format: int64\n          type: string\n        type:\n          description: The type of the consumer which should have been defined in [Google Resource Manager](https://cloud.google.com/resource-manager/).\n          enum:\n            - CONSUMER_TYPE_UNSPECIFIED\n            - PROJECT\n            - FOLDER\n            - ORGANIZATION\n            - SERVICE_SPECIFIC\n          type: string\n      type: object\n    Distribution:\n      description: \"Distribution represents a frequency distribution of double-valued sample points. It contains the size of the population of sample points plus additional optional information: * the arithmetic mean of the samples * the minimum and maximum of the samples * the sum-squared-deviation of the samples, used to compute variance * a histogram of the values of the sample points\"\n      properties:\n        bucketCounts:\n          description: The number of samples in each histogram bucket. `bucket_counts` are optional. If present, they must sum to the `count` value. The buckets are defined below in `bucket_option`. There are N buckets. `bucket_counts[0]` is the number of samples in the underflow bucket. `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples in each of the finite buckets. And `bucket_counts[N] is the number of samples in the overflow bucket. See the comments of `bucket_option` below for more details. Any suffix of trailing zeros may be omitted.\n          items:\n            format: int64\n            type: string\n          type: array\n        count:\n          description: The total number of samples in the distribution. Must be \u003e= 0.\n          format: int64\n          type: string\n        exemplars:\n          description: Example points. Must be in increasing order of `value` field.\n          items:\n            $ref: \"#/components/schemas/Exemplar\"\n          type: array\n        explicitBuckets:\n          $ref: \"#/components/schemas/ExplicitBuckets\"\n          description: Buckets with arbitrary user-provided width.\n        exponentialBuckets:\n          $ref: \"#/components/schemas/ExponentialBuckets\"\n          description: Buckets with exponentially growing width.\n        linearBuckets:\n          $ref: \"#/components/schemas/LinearBuckets\"\n          description: Buckets with constant width.\n        maximum:\n          description: The maximum of the population of values. Ignored if `count` is zero.\n          format: double\n          type: number\n        mean:\n          description: The arithmetic mean of the samples in the distribution. If `count` is zero then this field must be zero.\n          format: double\n          type: number\n        minimum:\n          description: The minimum of the population of values. Ignored if `count` is zero.\n          format: double\n          type: number\n        sumOfSquaredDeviation:\n          description: \"The sum of squared deviations from the mean: Sum[i=1..count]((x_i - mean)^2) where each x_i is a sample values. If `count` is zero then this field must be zero, otherwise validation of the request fails.\"\n          format: double\n          type: number\n      type: object\n    Exemplar:\n      description: Exemplars are example points that may be used to annotate aggregated distribution values. They are metadata that gives information about a particular value added to a Distribution bucket, such as a trace ID that was active when a value was added. They may contain further information, such as a example values and timestamps, origin, etc.\n      properties:\n        attachments:\n          description: \"Contextual information about the example value. Examples are: Trace: type.googleapis.com/google.monitoring.v3.SpanContext Literal string: type.googleapis.com/google.protobuf.StringValue Labels dropped during aggregation: type.googleapis.com/google.monitoring.v3.DroppedLabels There may be only a single attachment of any given message type in a single exemplar, and this is enforced by the system.\"\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        timestamp:\n          description: The observation (sampling) time of the above value.\n          format: google-datetime\n          type: string\n        value:\n          description: Value of the exemplar point. This value determines to which bucket the exemplar belongs.\n          format: double\n          type: number\n      type: object\n    ExplicitBuckets:\n      description: Describing buckets with arbitrary user-provided width.\n      properties:\n        bounds:\n          description: \"'bound' is a list of strictly increasing boundaries between buckets. Note that a list of length N-1 defines N buckets because of fenceposting. See comments on `bucket_options` for details. The i'th finite bucket covers the interval [bound[i-1], bound[i]) where i ranges from 1 to bound_size() - 1. Note that there are no finite buckets at all if 'bound' only contains a single element; in that special case the single bound defines the boundary between the underflow and overflow buckets. bucket number lower bound upper bound i == 0 (underflow) -inf bound[i] 0 \u003c i \u003c bound_size() bound[i-1] bound[i] i == bound_size() (overflow) bound[i-1] +inf\"\n          items:\n            format: double\n            type: number\n          type: array\n      type: object\n    ExponentialBuckets:\n      description: Describing buckets with exponentially growing width.\n      properties:\n        growthFactor:\n          description: The i'th exponential bucket covers the interval [scale * growth_factor^(i-1), scale * growth_factor^i) where i ranges from 1 to num_finite_buckets inclusive. Must be larger than 1.0.\n          format: double\n          type: number\n        numFiniteBuckets:\n          description: The number of finite buckets. With the underflow and overflow buckets, the total number of buckets is `num_finite_buckets` + 2. See comments on `bucket_options` for details.\n          format: int32\n          type: integer\n        scale:\n          description: The i'th exponential bucket covers the interval [scale * growth_factor^(i-1), scale * growth_factor^i) where i ranges from 1 to num_finite_buckets inclusive. Must be \u003e 0.\n          format: double\n          type: number\n      type: object\n    FirstPartyPrincipal:\n      description: First party identity principal.\n      properties:\n        principalEmail:\n          description: The email address of a Google account. .\n          type: string\n        serviceMetadata:\n          additionalProperties:\n            description: Properties of the object.\n          description: Metadata about the service that uses the service account. .\n          type: object\n      type: object\n    HttpRequest:\n      description: A common proto for logging HTTP requests. Only contains semantics defined by the HTTP specification. Product-specific logging information MUST be defined in a separate message.\n      properties:\n        cacheFillBytes:\n          description: The number of HTTP response bytes inserted into cache. Set only when a cache fill was attempted.\n          format: int64\n          type: string\n        cacheHit:\n          description: Whether or not an entity was served from cache (with or without validation).\n          type: boolean\n        cacheLookup:\n          description: Whether or not a cache lookup was attempted.\n          type: boolean\n        cacheValidatedWithOriginServer:\n          description: Whether or not the response was validated with the origin server before being served from cache. This field is only meaningful if `cache_hit` is True.\n          type: boolean\n        latency:\n          description: The request processing latency on the server, from the time the request was received until the response was sent.\n          format: google-duration\n          type: string\n        protocol:\n          description: 'Protocol used for the request. Examples: \"HTTP/1.1\", \"HTTP/2\", \"websocket\"'\n          type: string\n        referer:\n          description: The referer URL of the request, as defined in [HTTP/1.1 Header Field Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\n          type: string\n        remoteIp:\n          description: 'The IP address (IPv4 or IPv6) of the client that issued the HTTP request. Examples: `\"192.168.1.1\"`, `\"FE80::0202:B3FF:FE1E:8329\"`.'\n          type: string\n        requestMethod:\n          description: 'The request method. Examples: `\"GET\"`, `\"HEAD\"`, `\"PUT\"`, `\"POST\"`.'\n          type: string\n        requestSize:\n          description: The size of the HTTP request message in bytes, including the request headers and the request body.\n          format: int64\n          type: string\n        requestUrl:\n          description: 'The scheme (http, https), the host name, the path, and the query portion of the URL that was requested. Example: `\"http://example.com/some/info?color=red\"`.'\n          type: string\n        responseSize:\n          description: The size of the HTTP response message sent back to the client, in bytes, including the response headers and the response body.\n          format: int64\n          type: string\n        serverIp:\n          description: The IP address (IPv4 or IPv6) of the origin server that the request was sent to.\n          type: string\n        status:\n          description: \"The response code indicating the status of the response. Examples: 200, 404.\"\n          format: int32\n          type: integer\n        userAgent:\n          description: 'The user agent sent by the client. Example: `\"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)\"`.'\n          type: string\n      type: object\n    LinearBuckets:\n      description: Describing buckets with constant width.\n      properties:\n        numFiniteBuckets:\n          description: The number of finite buckets. With the underflow and overflow buckets, the total number of buckets is `num_finite_buckets` + 2. See comments on `bucket_options` for details.\n          format: int32\n          type: integer\n        offset:\n          description: The i'th linear bucket covers the interval [offset + (i-1) * width, offset + i * width) where i ranges from 1 to num_finite_buckets, inclusive.\n          format: double\n          type: number\n        width:\n          description: The i'th linear bucket covers the interval [offset + (i-1) * width, offset + i * width) where i ranges from 1 to num_finite_buckets, inclusive. Must be strictly positive.\n          format: double\n          type: number\n      type: object\n    LogEntry:\n      description: An individual log entry.\n      properties:\n        httpRequest:\n          $ref: \"#/components/schemas/HttpRequest\"\n          description: Optional. Information about the HTTP request associated with this log entry, if applicable.\n        insertId:\n          description: A unique ID for the log entry used for deduplication. If omitted, the implementation will generate one based on operation_id.\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: A set of user-defined (key, value) data that provides additional information about the log entry.\n          type: object\n        name:\n          description: 'Required. The log to which this log entry belongs. Examples: `\"syslog\"`, `\"book_log\"`.'\n          type: string\n        operation:\n          $ref: \"#/components/schemas/LogEntryOperation\"\n          description: Optional. Information about an operation associated with the log entry, if applicable.\n        protoPayload:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: The log entry payload, represented as a protocol buffer that is expressed as a JSON object. The only accepted type currently is AuditLog.\n          type: object\n        severity:\n          description: The severity of the log entry. The default value is `LogSeverity.DEFAULT`.\n          enum:\n            - DEFAULT\n            - DEBUG\n            - INFO\n            - NOTICE\n            - WARNING\n            - ERROR\n            - CRITICAL\n            - ALERT\n            - EMERGENCY\n          type: string\n        sourceLocation:\n          $ref: \"#/components/schemas/LogEntrySourceLocation\"\n          description: Optional. Source code location information associated with the log entry, if any.\n        structPayload:\n          additionalProperties:\n            description: Properties of the object.\n          description: The log entry payload, represented as a structure that is expressed as a JSON object.\n          type: object\n        textPayload:\n          description: The log entry payload, represented as a Unicode string (UTF-8).\n          type: string\n        timestamp:\n          description: The time the event described by the log entry occurred. If omitted, defaults to operation start time.\n          format: google-datetime\n          type: string\n        trace:\n          description: \"Optional. Resource name of the trace associated with the log entry, if any. If this field contains a relative resource name, you can assume the name is relative to `//tracing.googleapis.com`. Example: `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`\"\n          type: string\n      type: object\n    LogEntryOperation:\n      description: Additional information about a potentially long-running operation with which a log entry is associated.\n      properties:\n        first:\n          description: Optional. Set this to True if this is the first log entry in the operation.\n          type: boolean\n        id:\n          description: Optional. An arbitrary operation identifier. Log entries with the same identifier are assumed to be part of the same operation.\n          type: string\n        last:\n          description: Optional. Set this to True if this is the last log entry in the operation.\n          type: boolean\n        producer:\n          description: 'Optional. An arbitrary producer identifier. The combination of `id` and `producer` must be globally unique. Examples for `producer`: `\"MyDivision.MyBigCompany.com\"`, `\"github.com/MyProject/MyApplication\"`.'\n          type: string\n      type: object\n    LogEntrySourceLocation:\n      description: Additional information about the source code location that produced the log entry.\n      properties:\n        file:\n          description: Optional. Source file name. Depending on the runtime environment, this might be a simple name or a fully-qualified name.\n          type: string\n        function:\n          description: \"Optional. Human-readable name of the function or method being invoked, with optional context such as the class or package name. This information may be used in contexts such as the logs viewer, where a file and line number are less meaningful. The format can vary by language. For example: `qual.if.ied.Class.method` (Java), `dir/package.func` (Go), `function` (Python).\"\n          type: string\n        line:\n          description: Optional. Line within the source file. 1-based; 0 indicates no line number available.\n          format: int64\n          type: string\n      type: object\n    MetricValue:\n      description: Represents a single metric value.\n      properties:\n        boolValue:\n          description: A boolean value.\n          type: boolean\n        distributionValue:\n          $ref: \"#/components/schemas/Distribution\"\n          description: A distribution value.\n        doubleValue:\n          description: A double precision floating point value.\n          format: double\n          type: number\n        endTime:\n          description: The end of the time period over which this metric value's measurement applies. If not specified, google.api.servicecontrol.v1.Operation.end_time will be used.\n          format: google-datetime\n          type: string\n        int64Value:\n          description: A signed 64-bit integer value.\n          format: int64\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: The labels describing the metric value. See comments on google.api.servicecontrol.v1.Operation.labels for the overriding relationship. Note that this map must not contain monitored resource labels.\n          type: object\n        moneyValue:\n          $ref: \"#/components/schemas/Money\"\n          description: A money value.\n        startTime:\n          description: The start of the time period over which this metric value's measurement applies. The time period has different semantics for different metric types (cumulative, delta, and gauge). See the metric definition documentation in the service configuration for details. If not specified, google.api.servicecontrol.v1.Operation.start_time will be used.\n          format: google-datetime\n          type: string\n        stringValue:\n          description: A text string value.\n          type: string\n      type: object\n    MetricValueSet:\n      description: Represents a set of metric values in the same metric. Each metric value in the set should have a unique combination of start time, end time, and label values.\n      properties:\n        metricName:\n          description: The metric name defined in the service configuration.\n          type: string\n        metricValues:\n          description: The values in this metric.\n          items:\n            $ref: \"#/components/schemas/MetricValue\"\n          type: array\n      type: object\n    Money:\n      description: Represents an amount of money with its currency type.\n      properties:\n        currencyCode:\n          description: The three-letter currency code defined in ISO 4217.\n          type: string\n        nanos:\n          description: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.\n          format: int32\n          type: integer\n        units:\n          description: The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.\n          format: int64\n          type: string\n      type: object\n    Operation:\n      description: Represents information regarding an operation.\n      properties:\n        consumerId:\n          description: \"Identity of the consumer who is using the service. This field should be filled in for the operations initiated by a consumer, but not for service-initiated operations that are not related to a specific consumer. - This can be in one of the following formats: - project:PROJECT_ID, - project`_`number:PROJECT_NUMBER, - projects/PROJECT_ID or PROJECT_NUMBER, - folders/FOLDER_NUMBER, - organizations/ORGANIZATION_NUMBER, - api`_`key:API_KEY.\"\n          type: string\n        endTime:\n          description: End time of the operation. Required when the operation is used in ServiceController.Report, but optional when the operation is used in ServiceController.Check.\n          format: google-datetime\n          type: string\n        importance:\n          description: DO NOT USE. This is an experimental field.\n          enum:\n            - LOW\n            - HIGH\n            - DEBUG\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: \"Labels describing the operation. Only the following labels are allowed: - Labels describing monitored resources as defined in the service configuration. - Default labels of metric values. When specified, labels defined in the metric value override these default. - The following labels defined by Google Cloud Platform: - `cloud.googleapis.com/location` describing the location where the operation happened, - `servicecontrol.googleapis.com/user_agent` describing the user agent of the API request, - `servicecontrol.googleapis.com/service_agent` describing the service used to handle the API request (e.g. ESP), - `servicecontrol.googleapis.com/platform` describing the platform where the API is served, such as App Engine, Compute Engine, or Kubernetes Engine.\"\n          type: object\n        logEntries:\n          description: Represents information to be logged.\n          items:\n            $ref: \"#/components/schemas/LogEntry\"\n          type: array\n        metricValueSets:\n          description: Represents information about this operation. Each MetricValueSet corresponds to a metric defined in the service configuration. The data type used in the MetricValueSet must agree with the data type specified in the metric definition. Within a single operation, it is not allowed to have more than one MetricValue instances that have the same metric names and identical label value combinations. If a request has such duplicated MetricValue instances, the entire request is rejected with an invalid argument error.\n          items:\n            $ref: \"#/components/schemas/MetricValueSet\"\n          type: array\n        operationId:\n          description: Identity of the operation. This must be unique within the scope of the service that generated the operation. If the service calls Check() and Report() on the same operation, the two calls should carry the same id. UUID version 4 is recommended, though not required. In scenarios where an operation is computed from existing information and an idempotent id is desirable for deduplication purpose, UUID version 5 is recommended. See RFC 4122 for details.\n          type: string\n        operationName:\n          description: Fully qualified name of the operation. Reserved for future use.\n          type: string\n        quotaProperties:\n          $ref: \"#/components/schemas/QuotaProperties\"\n          description: Represents the properties needed for quota check. Applicable only if this operation is for a quota check request. If this is not specified, no quota check will be performed.\n        resources:\n          description: The resources that are involved in the operation. The maximum supported number of entries in this field is 100.\n          items:\n            $ref: \"#/components/schemas/ResourceInfo\"\n          type: array\n        startTime:\n          description: Required. Start time of the operation.\n          format: google-datetime\n          type: string\n        traceSpans:\n          description: Unimplemented. A list of Cloud Trace spans. The span names shall contain the id of the destination project which can be either the produce or the consumer project.\n          items:\n            $ref: \"#/components/schemas/TraceSpan\"\n          type: array\n        userLabels:\n          additionalProperties:\n            type: string\n          description: Private Preview. This feature is only available for approved services. User defined labels for the resource that this operation is associated with.\n          type: object\n      type: object\n    OrgPolicyViolationInfo:\n      description: Represents OrgPolicy Violation information.\n      properties:\n        payload:\n          additionalProperties:\n            description: Properties of the object.\n          description: Optional. Resource payload that is currently in scope and is subjected to orgpolicy conditions. This payload may be the subset of the actual Resource that may come in the request. This payload should not contain any core content.\n          type: object\n        resourceTags:\n          additionalProperties:\n            type: string\n          description: Optional. Tags referenced on the resource at the time of evaluation. These also include the federated tags, if they are supplied in the CheckOrgPolicy or CheckCustomConstraints Requests. Optional field as of now. These tags are the Cloud tags that are available on the resource during the policy evaluation and will be available as part of the OrgPolicy check response for logging purposes.\n          type: object\n        resourceType:\n          description: \"Optional. Resource type that the orgpolicy is checked against. Example: compute.googleapis.com/Instance, store.googleapis.com/bucket\"\n          type: string\n        violationInfo:\n          description: Optional. Policy violations\n          items:\n            $ref: \"#/components/schemas/ViolationInfo\"\n          type: array\n      type: object\n    Peer:\n      description: This message defines attributes for a node that handles a network request. The node can be either a service or an application that sends, forwards, or receives the request. Service peers should fill in `principal` and `labels` as appropriate.\n      properties:\n        ip:\n          description: The IP address of the peer.\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: The labels associated with the peer.\n          type: object\n        port:\n          description: The network port of the peer.\n          format: int64\n          type: string\n        principal:\n          description: The identity of this peer. Similar to `Request.auth.principal`, but relative to the peer instead of the request. For example, the idenity associated with a load balancer that forwared the request.\n          type: string\n        regionCode:\n          description: The CLDR country/region code associated with the above IP address. If the IP address is private, the `region_code` should reflect the physical location where this peer is running.\n          type: string\n      type: object\n    PolicyViolationInfo:\n      description: Information related to policy violations for this request.\n      properties:\n        orgPolicyViolationInfo:\n          $ref: \"#/components/schemas/OrgPolicyViolationInfo\"\n          description: Indicates the orgpolicy violations for this resource.\n      type: object\n    QuotaError:\n      description: Represents error information for QuotaOperation.\n      properties:\n        code:\n          description: Error code.\n          enum:\n            - UNSPECIFIED\n            - RESOURCE_EXHAUSTED\n            - OUT_OF_RANGE\n            - BILLING_NOT_ACTIVE\n            - PROJECT_DELETED\n            - API_KEY_INVALID\n            - API_KEY_EXPIRED\n            - SPATULA_HEADER_INVALID\n            - LOAS_ROLE_INVALID\n            - NO_LOAS_PROJECT\n            - PROJECT_STATUS_UNAVAILABLE\n            - SERVICE_STATUS_UNAVAILABLE\n            - BILLING_STATUS_UNAVAILABLE\n            - QUOTA_SYSTEM_UNAVAILABLE\n          type: string\n        description:\n          description: Free-form text that provides details on the cause of the error.\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n          description: Contains additional information about the quota error. If available, `status.code` will be non zero.\n        subject:\n          description: Subject to whom this error applies. See the specific enum for more details on this field. For example, \"clientip:\" or \"project:\".\n          type: string\n      type: object\n    QuotaInfo:\n      description: Contains the quota information for a quota check response.\n      properties:\n        limitExceeded:\n          description: \"Quota Metrics that have exceeded quota limits. For QuotaGroup-based quota, this is QuotaGroup.name For QuotaLimit-based quota, this is QuotaLimit.name See: google.api.Quota Deprecated: Use quota_metrics to get per quota group limit exceeded status.\"\n          items:\n            type: string\n          type: array\n        quotaConsumed:\n          additionalProperties:\n            format: int32\n            type: integer\n          description: \"Map of quota group name to the actual number of tokens consumed. If the quota check was not successful, then this will not be populated due to no quota consumption. We are not merging this field with 'quota_metrics' field because of the complexity of scaling in Chemist client code base. For simplicity, we will keep this field for Castor (that scales quota usage) and 'quota_metrics' for SuperQuota (that doesn't scale quota usage). \"\n          type: object\n        quotaMetrics:\n          description: 'Quota metrics to indicate the usage. Depending on the check request, one or more of the following metrics will be included: 1. For rate quota, per quota group or per quota metric incremental usage will be specified using the following delta metric: \"serviceruntime.googleapis.com/api/consumer/quota_used_count\" 2. For allocation quota, per quota metric total usage will be specified using the following gauge metric: \"serviceruntime.googleapis.com/allocation/consumer/quota_used_count\" 3. For both rate quota and allocation quota, the quota limit reached condition will be specified using the following boolean metric: \"serviceruntime.googleapis.com/quota/exceeded\"'\n          items:\n            $ref: \"#/components/schemas/MetricValueSet\"\n          type: array\n      type: object\n    QuotaOperation:\n      description: Represents information regarding a quota operation.\n      properties:\n        consumerId:\n          description: \"Identity of the consumer for whom this quota operation is being performed. This can be in one of the following formats: project:, project_number:, api_key:.\"\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: Labels describing the operation.\n          type: object\n        methodName:\n          description: \"Fully qualified name of the API method for which this quota operation is requested. This name is used for matching quota rules or metric rules and billing status rules defined in service configuration. This field should not be set if any of the following is true: (1) the quota operation is performed on non-API resources. (2) quota_metrics is set because the caller is doing quota override. Example of an RPC method name: google.example.library.v1.LibraryService.CreateShelf\"\n          type: string\n        operationId:\n          description: Identity of the operation. For Allocation Quota, this is expected to be unique within the scope of the service that generated the operation, and guarantees idempotency in case of retries. In order to ensure best performance and latency in the Quota backends, operation_ids are optimally associated with time, so that related operations can be accessed fast in storage. For this reason, the recommended token for services that intend to operate at a high QPS is Unix time in nanos + UUID\n          type: string\n        quotaMetrics:\n          description: Represents information about this operation. Each MetricValueSet corresponds to a metric defined in the service configuration. The data type used in the MetricValueSet must agree with the data type specified in the metric definition. Within a single operation, it is not allowed to have more than one MetricValue instances that have the same metric names and identical label value combinations. If a request has such duplicated MetricValue instances, the entire request is rejected with an invalid argument error. This field is mutually exclusive with method_name.\n          items:\n            $ref: \"#/components/schemas/MetricValueSet\"\n          type: array\n        quotaMode:\n          description: Quota mode for this operation.\n          enum:\n            - UNSPECIFIED\n            - NORMAL\n            - BEST_EFFORT\n            - CHECK_ONLY\n            - ADJUST_ONLY\n          type: string\n      type: object\n    QuotaProperties:\n      description: Represents the properties needed for quota operations.\n      properties:\n        quotaMode:\n          description: Quota mode for this operation.\n          enum:\n            - ACQUIRE\n            - ACQUIRE_BEST_EFFORT\n            - CHECK\n            - RELEASE\n          type: string\n      type: object\n    ReportError:\n      description: Represents the processing error of one Operation in the request.\n      properties:\n        operationId:\n          description: The Operation.operation_id value from the request.\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n          description: Details of the error when processing the Operation.\n      type: object\n    ReportRequest:\n      description: Request message for the Report method.\n      properties:\n        operations:\n          description: Operations to be reported. Typically the service should report one operation per request. Putting multiple operations into a single request is allowed, but should be used only when multiple operations are natually available at the time of the report. There is no limit on the number of operations in the same ReportRequest, however the ReportRequest size should be no larger than 1MB. See ReportResponse.report_errors for partial failure behavior.\n          items:\n            $ref: \"#/components/schemas/Operation\"\n          type: array\n        serviceConfigId:\n          description: Specifies which version of service config should be used to process the request. If unspecified or no matching version can be found, the latest one will be used.\n          type: string\n      type: object\n    ReportResponse:\n      description: Response message for the Report method.\n      properties:\n        reportErrors:\n          description: \"Partial failures, one for each `Operation` in the request that failed processing. There are three possible combinations of the RPC status: 1. The combination of a successful RPC status and an empty `report_errors` list indicates a complete success where all `Operations` in the request are processed successfully. 2. The combination of a successful RPC status and a non-empty `report_errors` list indicates a partial success where some `Operations` in the request succeeded. Each `Operation` that failed processing has a corresponding item in this list. 3. A failed RPC status indicates a general non-deterministic failure. When this happens, it's impossible to know which of the 'Operations' in the request succeeded or failed.\"\n          items:\n            $ref: \"#/components/schemas/ReportError\"\n          type: array\n        serviceConfigId:\n          description: The actual config id used to process the request.\n          type: string\n        serviceRolloutId:\n          description: The current service rollout id used to process the request.\n          type: string\n      type: object\n    Request:\n      description: This message defines attributes for an HTTP request. If the actual request is not an HTTP request, the runtime system should try to map the actual request to an equivalent HTTP request.\n      properties:\n        auth:\n          $ref: \"#/components/schemas/Auth\"\n          description: The request authentication. May be absent for unauthenticated requests. Derived from the HTTP request `Authorization` header or equivalent.\n        headers:\n          additionalProperties:\n            type: string\n          description: The HTTP request headers. If multiple headers share the same key, they must be merged according to the HTTP spec. All header keys must be lowercased, because HTTP header keys are case-insensitive.\n          type: object\n        host:\n          description: The HTTP request `Host` header value.\n          type: string\n        id:\n          description: The unique ID for a request, which can be propagated to downstream systems. The ID should have low probability of collision within a single day for a specific service.\n          type: string\n        method:\n          description: The HTTP request method, such as `GET`, `POST`.\n          type: string\n        path:\n          description: The HTTP URL path, excluding the query parameters.\n          type: string\n        protocol:\n          description: The network protocol used with the request, such as \"http/1.1\", \"spdy/3\", \"h2\", \"h2c\", \"webrtc\", \"tcp\", \"udp\", \"quic\". See https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids for details.\n          type: string\n        query:\n          description: The HTTP URL query in the format of `name1=value1\u0026name2=value2`, as it appears in the first line of the HTTP request. No decoding is performed.\n          type: string\n        reason:\n          description: A special parameter for request reason. It is used by security systems to associate auditing information with a request.\n          type: string\n        scheme:\n          description: The HTTP URL scheme, such as `http` and `https`.\n          type: string\n        size:\n          description: The HTTP request size in bytes. If unknown, it must be -1.\n          format: int64\n          type: string\n        time:\n          description: The timestamp when the `destination` service receives the last byte of the request.\n          format: google-datetime\n          type: string\n      type: object\n    RequestMetadata:\n      description: Metadata about the request.\n      properties:\n        callerIp:\n          description: The IP address of the caller. For caller from internet, this will be public IPv4 or IPv6 address. For caller from a Compute Engine VM with external IP address, this will be the VM's external IP address. For caller from a Compute Engine VM without external IP address, if the VM is in the same organization (or project) as the accessed resource, `caller_ip` will be the VM's internal IPv4 address, otherwise the `caller_ip` will be redacted to \"gce-internal-ip\". See https://cloud.google.com/compute/docs/vpc/ for more information.\n          type: string\n        callerNetwork:\n          description: 'The network of the caller. Set only if the network host project is part of the same GCP organization (or project) as the accessed resource. See https://cloud.google.com/compute/docs/vpc/ for more information. This is a scheme-less URI full resource name. For example: \"//compute.googleapis.com/projects/PROJECT_ID/global/networks/NETWORK_ID\"'\n          type: string\n        callerSuppliedUserAgent:\n          description: \"The user agent of the caller. This information is not authenticated and should be treated accordingly. For example: + `google-api-python-client/1.4.0`: The request was made by the Google API client for Python. + `Cloud SDK Command Line Tool apitools-client/1.0 gcloud/0.9.62`: The request was made by the Google Cloud SDK CLI (gcloud). + `AppEngine-Google; (+http://code.google.com/appengine; appid: s~my-project`: The request was made from the `my-project` App Engine app. NOLINT\"\n          type: string\n        destinationAttributes:\n          $ref: \"#/components/schemas/Peer\"\n          description: The destination of a network activity, such as accepting a TCP connection. In a multi hop network activity, the destination represents the receiver of the last hop. Only two fields are used in this message, Peer.port and Peer.ip. These fields are optionally populated by those services utilizing the IAM condition feature.\n        requestAttributes:\n          $ref: \"#/components/schemas/Request\"\n          description: Request attributes used in IAM condition evaluation. This field contains request attributes like request time and access levels associated with the request. To get the whole view of the attributes used in IAM condition evaluation, the user must also look into `AuditLog.authentication_info.resource_attributes`.\n      type: object\n    Resource:\n      description: This message defines core attributes for a resource. A resource is an addressable (named) entity provided by the destination service. For example, a file stored on a network storage service.\n      properties:\n        annotations:\n          additionalProperties:\n            type: string\n          description: \"Annotations is an unstructured key-value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/user-guide/annotations\"\n          type: object\n        createTime:\n          description: Output only. The timestamp when the resource was created. This may be either the time creation was initiated or when it was completed.\n          format: google-datetime\n          type: string\n        deleteTime:\n          description: Output only. The timestamp when the resource was deleted. If the resource is not deleted, this must be empty.\n          format: google-datetime\n          type: string\n        displayName:\n          description: Mutable. The display name set by clients. Must be \u003c= 63 characters.\n          type: string\n        etag:\n          description: Output only. An opaque value that uniquely identifies a version or generation of a resource. It can be used to confirm that the client and server agree on the ordering of a resource being written.\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: The labels or tags on the resource, such as AWS resource tags and Kubernetes resource labels.\n          type: object\n        location:\n          description: Immutable. The location of the resource. The location encoding is specific to the service provider, and new encoding may be introduced as the service evolves. For Google Cloud products, the encoding is what is used by Google Cloud APIs, such as `us-east1`, `aws-us-east-1`, and `azure-eastus2`. The semantics of `location` is identical to the `cloud.googleapis.com/location` label used by some Google Cloud APIs.\n          type: string\n        name:\n          description: 'The stable identifier (name) of a resource on the `service`. A resource can be logically identified as \"//{resource.service}/{resource.name}\". The differences between a resource name and a URI are: * Resource name is a logical identifier, independent of network protocol and API version. For example, `//pubsub.googleapis.com/projects/123/topics/news-feed`. * URI often includes protocol and version information, so it can be used directly by applications. For example, `https://pubsub.googleapis.com/v1/projects/123/topics/news-feed`. See https://cloud.google.com/apis/design/resource_names for details.'\n          type: string\n        service:\n          description: The name of the service that this resource belongs to, such as `pubsub.googleapis.com`. The service may be different from the DNS hostname that actually serves the request.\n          type: string\n        type:\n          description: The type of the resource. The syntax is platform-specific because different platforms define their resources differently. For Google APIs, the type format must be \"{service}/{kind}\", such as \"pubsub.googleapis.com/Topic\".\n          type: string\n        uid:\n          description: The unique identifier of the resource. UID is unique in the time and space for this resource within the scope of the service. It is typically generated by the server on successful creation of a resource and must not be changed. UID is used to uniquely identify resources with resource name reuses. This should be a UUID4.\n          type: string\n        updateTime:\n          description: Output only. The timestamp when the resource was last updated. Any change to the resource made by users must refresh this value. Changes to a resource made by the service should refresh this value.\n          format: google-datetime\n          type: string\n      type: object\n    ResourceInfo:\n      description: Describes a resource associated with this operation.\n      properties:\n        resourceContainer:\n          description: \"The identifier of the parent of this resource instance. Must be in one of the following formats: - `projects/` - `folders/` - `organizations/`\"\n          type: string\n        resourceLocation:\n          description: 'The location of the resource. If not empty, the resource will be checked against location policy. The value must be a valid zone, region or multiregion. For example: \"europe-west4\" or \"northamerica-northeast1-a\"'\n          type: string\n        resourceName:\n          description: Name of the resource. This is used for auditing purposes.\n          type: string\n      type: object\n    ResourceLocation:\n      description: Location information about a resource.\n      properties:\n        currentLocations:\n          description: \"The locations of a resource after the execution of the operation. Requests to create or delete a location based resource must populate the 'current_locations' field and not the 'original_locations' field. For example: \\\"europe-west1-a\\\" \\\"us-east1\\\" \\\"nam3\\\"\"\n          items:\n            type: string\n          type: array\n        originalLocations:\n          description: \"The locations of a resource prior to the execution of the operation. Requests that mutate the resource's location must populate both the 'original_locations' as well as the 'current_locations' fields. For example: \\\"europe-west1-a\\\" \\\"us-east1\\\" \\\"nam3\\\"\"\n          items:\n            type: string\n          type: array\n      type: object\n    ServiceAccountDelegationInfo:\n      description: Identity delegation history of an authenticated service account.\n      properties:\n        firstPartyPrincipal:\n          $ref: \"#/components/schemas/FirstPartyPrincipal\"\n          description: First party (Google) identity as the real authority.\n        principalSubject:\n          description: A string representing the principal_subject associated with the identity. For most identities, the format will be `principal://iam.googleapis.com/{identity pool name}/subject/{subject)` except for some GKE identities (GKE_WORKLOAD, FREEFORM, GKE_HUB_WORKLOAD) that are still in the legacy format `serviceAccount:{identity pool name}[{subject}]`\n          type: string\n        thirdPartyPrincipal:\n          $ref: \"#/components/schemas/ThirdPartyPrincipal\"\n          description: Third party identity as the real authority.\n      type: object\n    SpanContext:\n      description: \"The context of a span. This is attached to an Exemplar in Distribution values during aggregation. It contains the name of a span with format: projects/[PROJECT_ID_OR_NUMBER]/traces/[TRACE_ID]/spans/[SPAN_ID]\"\n      properties:\n        spanName:\n          description: \"The resource name of the span. The format is: projects/[PROJECT_ID_OR_NUMBER]/traces/[TRACE_ID]/spans/[SPAN_ID] `[TRACE_ID]` is a unique identifier for a trace within a project; it is a 32-character hexadecimal encoding of a 16-byte array. `[SPAN_ID]` is a unique identifier for a span within a trace; it is a 16-character hexadecimal encoding of an 8-byte array.\"\n          type: string\n      type: object\n    Status:\n      description: \"The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).\"\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        message:\n          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.\n          type: string\n      type: object\n    ThirdPartyPrincipal:\n      description: Third party identity principal.\n      properties:\n        thirdPartyClaims:\n          additionalProperties:\n            description: Properties of the object.\n          description: Metadata about third party identity.\n          type: object\n      type: object\n    TraceSpan:\n      description: A span represents a single operation within a trace. Spans can be nested to form a trace tree. Often, a trace contains a root span that describes the end-to-end latency, and one or more subspans for its sub-operations. A trace can also contain multiple root spans, or none at all. Spans do not need to be contiguous—there may be gaps or overlaps between spans in a trace.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/Attributes\"\n          description: A set of attributes on the span. You can have up to 32 attributes per span.\n        childSpanCount:\n          description: An optional number of child spans that were generated while this span was active. If set, allows implementation to detect missing child spans.\n          format: int32\n          type: integer\n        displayName:\n          $ref: \"#/components/schemas/TruncatableString\"\n          description: A description of the span's operation (up to 128 bytes). Stackdriver Trace displays the description in the Google Cloud Platform Console. For example, the display name can be a qualified method name or a file name and a line number where the operation is called. A best practice is to use the same display name within an application and at the same call point. This makes it easier to correlate spans in different traces.\n        endTime:\n          description: The end time of the span. On the client side, this is the time kept by the local machine where the span execution ends. On the server side, this is the time when the server application handler stops running.\n          format: google-datetime\n          type: string\n        name:\n          description: \"The resource name of the span in the following format: projects/[PROJECT_ID]/traces/[TRACE_ID]/spans/SPAN_ID is a unique identifier for a trace within a project; it is a 32-character hexadecimal encoding of a 16-byte array. [SPAN_ID] is a unique identifier for a span within a trace; it is a 16-character hexadecimal encoding of an 8-byte array.\"\n          type: string\n        parentSpanId:\n          description: The [SPAN_ID] of this span's parent span. If this is a root span, then this field must be empty.\n          type: string\n        sameProcessAsParentSpan:\n          description: (Optional) Set this parameter to indicate whether this span is in the same process as its parent. If you do not set this parameter, Stackdriver Trace is unable to take advantage of this helpful information.\n          type: boolean\n        spanId:\n          description: The [SPAN_ID] portion of the span's resource name.\n          type: string\n        spanKind:\n          description: Distinguishes between spans generated in a particular context. For example, two spans with the same name may be distinguished using `CLIENT` (caller) and `SERVER` (callee) to identify an RPC call.\n          enum:\n            - SPAN_KIND_UNSPECIFIED\n            - INTERNAL\n            - SERVER\n            - CLIENT\n            - PRODUCER\n            - CONSUMER\n          type: string\n        startTime:\n          description: The start time of the span. On the client side, this is the time kept by the local machine where the span execution starts. On the server side, this is the time when the server's application handler starts running.\n          format: google-datetime\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n          description: An optional final status for this span.\n      type: object\n    TruncatableString:\n      description: Represents a string that might be shortened to a specified length.\n      properties:\n        truncatedByteCount:\n          description: The number of bytes removed from the original string. If this value is 0, then the string was not shortened.\n          format: int32\n          type: integer\n        value:\n          description: The shortened string. For example, if the original string is 500 bytes long and the limit of the string is 128 bytes, then `value` contains the first 128 bytes of the 500-byte string. Truncation always happens on a UTF8 character boundary. If there are multi-byte characters in the string, then the length of the shortened string might be less than the size limit.\n          type: string\n      type: object\n    V1HttpRequest:\n      description: A common proto for logging HTTP requests. Only contains semantics defined by the HTTP specification. Product-specific logging information MUST be defined in a separate message.\n      properties:\n        cacheFillBytes:\n          description: The number of HTTP response bytes inserted into cache. Set only when a cache fill was attempted.\n          format: int64\n          type: string\n        cacheHit:\n          description: Whether or not an entity was served from cache (with or without validation).\n          type: boolean\n        cacheLookup:\n          description: Whether or not a cache lookup was attempted.\n          type: boolean\n        cacheValidatedWithOriginServer:\n          description: Whether or not the response was validated with the origin server before being served from cache. This field is only meaningful if `cache_hit` is True.\n          type: boolean\n        latency:\n          description: The request processing latency on the server, from the time the request was received until the response was sent.\n          format: google-duration\n          type: string\n        protocol:\n          description: 'Protocol used for the request. Examples: \"HTTP/1.1\", \"HTTP/2\", \"websocket\"'\n          type: string\n        referer:\n          description: The referer URL of the request, as defined in [HTTP/1.1 Header Field Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\n          type: string\n        remoteIp:\n          description: 'The IP address (IPv4 or IPv6) of the client that issued the HTTP request. Examples: `\"192.168.1.1\"`, `\"FE80::0202:B3FF:FE1E:8329\"`.'\n          type: string\n        requestMethod:\n          description: 'The request method. Examples: `\"GET\"`, `\"HEAD\"`, `\"PUT\"`, `\"POST\"`.'\n          type: string\n        requestSize:\n          description: The size of the HTTP request message in bytes, including the request headers and the request body.\n          format: int64\n          type: string\n        requestUrl:\n          description: 'The scheme (http, https), the host name, the path, and the query portion of the URL that was requested. Example: `\"http://example.com/some/info?color=red\"`.'\n          type: string\n        responseSize:\n          description: The size of the HTTP response message sent back to the client, in bytes, including the response headers and the response body.\n          format: int64\n          type: string\n        serverIp:\n          description: The IP address (IPv4 or IPv6) of the origin server that the request was sent to.\n          type: string\n        status:\n          description: \"The response code indicating the status of the response. Examples: 200, 404.\"\n          format: int32\n          type: integer\n        userAgent:\n          description: 'The user agent sent by the client. Example: `\"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)\"`.'\n          type: string\n      type: object\n    V1LogEntry:\n      description: An individual log entry.\n      properties:\n        httpRequest:\n          $ref: \"#/components/schemas/V1HttpRequest\"\n          description: Optional. Information about the HTTP request associated with this log entry, if applicable.\n        insertId:\n          description: A unique ID for the log entry used for deduplication. If omitted, the implementation will generate one based on operation_id.\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: A set of user-defined (key, value) data that provides additional information about the log entry.\n          type: object\n        monitoredResourceLabels:\n          additionalProperties:\n            type: string\n          description: A set of user-defined (key, value) data that provides additional information about the moniotored resource that the log entry belongs to.\n          type: object\n        name:\n          description: 'Required. The log to which this log entry belongs. Examples: `\"syslog\"`, `\"book_log\"`.'\n          type: string\n        operation:\n          $ref: \"#/components/schemas/V1LogEntryOperation\"\n          description: Optional. Information about an operation associated with the log entry, if applicable.\n        protoPayload:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: The log entry payload, represented as a protocol buffer that is expressed as a JSON object. The only accepted type currently is AuditLog.\n          type: object\n        severity:\n          description: The severity of the log entry. The default value is `LogSeverity.DEFAULT`.\n          enum:\n            - DEFAULT\n            - DEBUG\n            - INFO\n            - NOTICE\n            - WARNING\n            - ERROR\n            - CRITICAL\n            - ALERT\n            - EMERGENCY\n          type: string\n        sourceLocation:\n          $ref: \"#/components/schemas/V1LogEntrySourceLocation\"\n          description: Optional. Source code location information associated with the log entry, if any.\n        structPayload:\n          additionalProperties:\n            description: Properties of the object.\n          description: The log entry payload, represented as a structure that is expressed as a JSON object.\n          type: object\n        textPayload:\n          description: The log entry payload, represented as a Unicode string (UTF-8).\n          type: string\n        timestamp:\n          description: The time the event described by the log entry occurred. If omitted, defaults to operation start time.\n          format: google-datetime\n          type: string\n        trace:\n          description: \"Optional. Resource name of the trace associated with the log entry, if any. If this field contains a relative resource name, you can assume the name is relative to `//tracing.googleapis.com`. Example: `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`\"\n          type: string\n      type: object\n    V1LogEntryOperation:\n      description: Additional information about a potentially long-running operation with which a log entry is associated.\n      properties:\n        first:\n          description: Optional. Set this to True if this is the first log entry in the operation.\n          type: boolean\n        id:\n          description: Optional. An arbitrary operation identifier. Log entries with the same identifier are assumed to be part of the same operation.\n          type: string\n        last:\n          description: Optional. Set this to True if this is the last log entry in the operation.\n          type: boolean\n        producer:\n          description: 'Optional. An arbitrary producer identifier. The combination of `id` and `producer` must be globally unique. Examples for `producer`: `\"MyDivision.MyBigCompany.com\"`, `\"github.com/MyProject/MyApplication\"`.'\n          type: string\n      type: object\n    V1LogEntrySourceLocation:\n      description: Additional information about the source code location that produced the log entry.\n      properties:\n        file:\n          description: Optional. Source file name. Depending on the runtime environment, this might be a simple name or a fully-qualified name.\n          type: string\n        function:\n          description: \"Optional. Human-readable name of the function or method being invoked, with optional context such as the class or package name. This information may be used in contexts such as the logs viewer, where a file and line number are less meaningful. The format can vary by language. For example: `qual.if.ied.Class.method` (Java), `dir/package.func` (Go), `function` (Python).\"\n          type: string\n        line:\n          description: Optional. Line within the source file. 1-based; 0 indicates no line number available.\n          format: int64\n          type: string\n      type: object\n    ViolationInfo:\n      description: Provides information about the Policy violation info for this request.\n      properties:\n        checkedValue:\n          description: Optional. Value that is being checked for the policy. This could be in encrypted form (if pii sensitive). This field will only be emitted in LIST_POLICY types\n          type: string\n        constraint:\n          description: Optional. Constraint name\n          type: string\n        errorMessage:\n          description: Optional. Error message that policy is indicating.\n          type: string\n        policyType:\n          description: Optional. Indicates the type of the policy.\n          enum:\n            - POLICY_TYPE_UNSPECIFIED\n            - BOOLEAN_CONSTRAINT\n            - LIST_CONSTRAINT\n            - CUSTOM_CONSTRAINT\n          type: string\n      type: object\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.\n            https://www.googleapis.com/auth/servicecontrol: Manage your Google Service Control data\n      type: oauth2\n    Oauth2c:\n      description: Oauth 2.0 authorizationCode authentication\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.\n            https://www.googleapis.com/auth/servicecontrol: Manage your Google Service Control data\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n      type: oauth2\nsource:\n  url: {}\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/googleapis.com/servicecontrol/v1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/googleapis.com/servicecontrol/v1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/services/{serviceName}:allocateQuota\": post: security: security \"Oauth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}