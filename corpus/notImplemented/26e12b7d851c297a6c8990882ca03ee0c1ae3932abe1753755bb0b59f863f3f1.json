{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/factset/enterprise-sdk"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "code/java/OptimizationEngineAPIMultiperiod/v1/api/openapi.yaml",
			"byteSize": 67571,
			"content": "openapi: 3.0.1\ninfo:\n  description: \"\"\n  title: fpo_mp_input\n  version: \"1\"\nservers:\n- url: /\nsecurity:\n- FactSetApiKey: []\n- FactSetOAuth2: []\npaths:\n  /mpo/v1/optimizeFPO:\n    post:\n      requestBody:\n        content:\n          application/x-protobuf:\n            schema:\n              $ref: '#/components/schemas/optimizer.inputs.MultiPeriodInput'\n        description: Multiperiod protobuf input\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/x-protobuf:\n              schema:\n                $ref: '#/components/schemas/optimizer.outputs.MultiPeriodOutput'\n          description: Multiperiod protobuf output\n      x-codegen-request-body-name: MultiPeriodInput\n      x-contentType: application/x-protobuf\n      x-accepts: application/x-protobuf\ncomponents:\n  schemas:\n    VAR.DistributionType:\n      description: \"0 - eMonteCarlo \\n1 - eExtremeEventSimulation \\n2 - eHistorical\\\n        \\ \\n3 - eFactorStressTest \\n4 - eExtremeEventStressTest \\n5 - eStressTestPerSe\\\n        \\ \\n6 - eFactorExposure \"\n      enum:\n      - 0\n      - 1\n      - 2\n      - 3\n      - 4\n      - 5\n      - 6\n      type: number\n    VAR.StatusIndicator:\n      description: \"0 - eSuccess \\n1 - eFailure \"\n      enum:\n      - 0\n      - 1\n      type: number\n    VAR.DistributionDescription:\n      properties:\n        riskModel:\n          type: string\n        factorGroup:\n          type: string\n        factors:\n          items:\n            type: string\n          type: array\n        distributionType:\n          $ref: '#/components/schemas/VAR.DistributionType'\n        reportDate:\n          format: int32\n          type: integer\n        reportCurrency:\n          type: string\n        horizonInTradingDays:\n          format: float\n          type: number\n        returnDates:\n          description: Only possibly defined for historical distributions\n          items:\n            format: int32\n            type: integer\n          type: array\n      type: object\n    VAR.SimulatedReturns:\n      properties:\n        entity:\n          type: string\n        returns:\n          items:\n            format: float\n            type: number\n          type: array\n      type: object\n    VAR.DistributionStatus:\n      properties:\n        indicator:\n          $ref: '#/components/schemas/VAR.StatusIndicator'\n        message:\n          type: string\n      type: object\n    VAR.DistributionDataMessage:\n      properties:\n        description:\n          $ref: '#/components/schemas/VAR.DistributionDescription'\n        securitySimulations:\n          items:\n            $ref: '#/components/schemas/VAR.SimulatedReturns'\n          type: array\n        status:\n          $ref: '#/components/schemas/VAR.DistributionStatus'\n      type: object\n    optimizer.inputs.MultiPeriodInput:\n      properties:\n        strategy:\n          $ref: '#/components/schemas/optimizer.inputs.MultiPeriodStrategy'\n        universe:\n          $ref: '#/components/schemas/optimizer.inputs.TotalUniverse'\n        portfolios:\n          $ref: '#/components/schemas/optimizer.inputs.Portfolios'\n        riskmodels:\n          $ref: '#/components/schemas/optimizer.inputs.MultiPeriodRiskModels'\n        lookup_tables:\n          $ref: '#/components/schemas/optimizer.inputs.LookupTables'\n        output_statistics:\n          type: boolean\n      type: object\n    optimizer.inputs.MPFrontierInput:\n      properties:\n        input:\n          $ref: '#/components/schemas/optimizer.inputs.MultiPeriodInput'\n        frontier:\n          $ref: '#/components/schemas/optimizer.inputs.FrontierSettings'\n      type: object\n    optimizer.inputs.MultiPeriodStrategy:\n      properties:\n        objective:\n          $ref: '#/components/schemas/optimizer.inputs.MultiPeriodObjective'\n        constraints:\n          $ref: '#/components/schemas/optimizer.inputs.MultiPeriodConstraints'\n        transaction_cost:\n          $ref: '#/components/schemas/optimizer.inputs.TransactionCost'\n        options:\n          $ref: '#/components/schemas/optimizer.inputs.MultiPeriodOptions'\n        expected_return:\n          $ref: '#/components/schemas/optimizer.inputs.ExpectedReturn'\n      type: object\n    optimizer.inputs.MultiPeriodConstraints:\n      properties:\n        expected_returns:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPExpectedReturnConstraint'\n          type: array\n        diversification:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPDiversificationConstraint'\n          type: array\n        factor_exposures:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPFactorExposureConstraint'\n          type: array\n        general_linear:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPGeneralLinearConstraint'\n          type: array\n        holding_threshold:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPHoldingsThresholdConstraint'\n          type: array\n        leverage:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPLeverageConstraint'\n          type: array\n        num_of_assets:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPNumberofAssetsConstraint'\n          type: array\n        sensitivity:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPSensitivityConstraint'\n          type: array\n        weight_constraint:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPHoldingsWeightConstraint'\n          type: array\n        number_of_buys:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPNumberOfBuysConstraint'\n          type: array\n        number_of_sells:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPNumberOfSellsConstraint'\n          type: array\n        round_lots:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPRoundlotsConstraint'\n          type: array\n        trade_threshold:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPTradeThresholdConstraint'\n          type: array\n        trading_turnover:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPTurnoverConstraint'\n          type: array\n        risk_contribution:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPRiskContributionConstraint'\n          type: array\n        risk_volatility:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPRiskVolatilityConstraint'\n          type: array\n        tail_risk:\n          description: MultiPeriod-Specific\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPLimitTailRiskConstraint'\n          type: array\n        target_probability:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPTargetProbabilityConstraint'\n          type: array\n      type: object\n    optimizer.inputs.MPExpectedReturnConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.ExpectedReturnConstraint'\n        constraint_on:\n          $ref: '#/components/schemas/optimizer.inputs.BoundSource.Enum'\n        annualization_factor:\n          format: double\n          type: number\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.MPDiversificationConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.DiversificationConstraint'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n      type: object\n    optimizer.inputs.MPFactorExposureConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.FactorExposureConstraint'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.MPGeneralLinearConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.GeneralLinearConstraint'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.MPHoldingsThresholdConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.HoldingsThresholdConstraint'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n      type: object\n    optimizer.inputs.MPLeverageConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.LeverageConstraint'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n      type: object\n    optimizer.inputs.MPNumberofAssetsConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.NumberofAssetsConstraint'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n      type: object\n    optimizer.inputs.MPSensitivityConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.SensitivityConstraint'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.MPHoldingsWeightConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.HoldingsWeightConstraint'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n      type: object\n    optimizer.inputs.MPNumberOfBuysConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.NumberOfBuysConstraint'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n      type: object\n    optimizer.inputs.MPNumberOfSellsConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.NumberOfSellsConstraint'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n      type: object\n    optimizer.inputs.MPRoundlotsConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.RoundlotsConstraint'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n      type: object\n    optimizer.inputs.MPTradeThresholdConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.TradeThresholdConstraint'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n      type: object\n    optimizer.inputs.MPTransactionCostConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.TransactionCostConstraint'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.MPTurnoverConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.TurnoverConstraint'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.MPRiskContributionConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.RiskContributionConstraint'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n      type: object\n    optimizer.inputs.MPRiskVolatilityConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.RiskVolatilityConstraint'\n        constraint_on:\n          $ref: '#/components/schemas/optimizer.inputs.BoundSource.Enum'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.MPLimitTailRiskConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.LimitTailRiskConstraint'\n        constraint_on:\n          $ref: '#/components/schemas/optimizer.inputs.BoundSource.Enum'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.LimitTailRiskConstraint:\n      properties:\n        name:\n          type: string\n        risk_measure:\n          $ref: '#/components/schemas/optimizer.inputs.TailRiskMeasure.Enum'\n        max_risk:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        confidence_level:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        penalty:\n          $ref: '#/components/schemas/optimizer.inputs.Penalty'\n        active_risk:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n        hierarchy:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.MPTargetProbabilityConstraint:\n      properties:\n        constraint:\n          $ref: '#/components/schemas/optimizer.inputs.TargetProbabilityConstraint'\n        constraint_on:\n          $ref: '#/components/schemas/optimizer.inputs.BoundSource.Enum'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.TargetProbabilityConstraint:\n      properties:\n        name:\n          type: string\n        threshold_min:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        threshold_max:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        min_probability:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        max_probability:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        hierarchy:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.EFPOConstraintWeightType:\n      type: object\n    optimizer.inputs.EFPOConstraintAssetType:\n      type: object\n    optimizer.inputs.EConstraintReturnType:\n      type: object\n    optimizer.inputs.EConstraintRiskRelativeInterpretationType:\n      type: object\n    optimizer.inputs.EConstraintGroupType:\n      type: object\n    optimizer.inputs.EConstraintTurnoverType:\n      type: object\n    optimizer.inputs.EConstraintValueType:\n      type: object\n    optimizer.inputs.ELeverageValueType:\n      type: object\n    optimizer.inputs.EConstraintLevel:\n      type: object\n    optimizer.inputs.EConstraintPenaltyType:\n      type: object\n    optimizer.inputs.EConstraintRiskType:\n      type: object\n    optimizer.inputs.EConstraintUnitType:\n      type: object\n    optimizer.inputs.EWeightingMethodType:\n      description: 'ToDo :: follow-up for what unit type the optimizer expects,'\n      type: object\n    optimizer.inputs.ConstraintGroup:\n      properties:\n        min:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        max:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        id:\n          type: string\n        nested_groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        group_lookup_index:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.FactorExposureAttributes:\n      properties:\n        min:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        max:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n      type: object\n    optimizer.inputs.Penalty:\n      properties:\n        enabled:\n          type: boolean\n        penalty_type:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintPenaltyType.Enum'\n        penalty_value:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        max_violation:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n      type: object\n    optimizer.inputs.Constraints:\n      properties:\n        expected_returns:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ExpectedReturnConstraint'\n          type: array\n        diversification:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.DiversificationConstraint'\n          type: array\n        factor_exposures:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.FactorExposureConstraint'\n          type: array\n        general_linear:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.GeneralLinearConstraint'\n          type: array\n        holding_threshold:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.HoldingsThresholdConstraint'\n          type: array\n        leverage:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.LeverageConstraint'\n          type: array\n        num_of_assets:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.NumberofAssetsConstraint'\n          type: array\n        sensitivity:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.SensitivityConstraint'\n          type: array\n        weight_constraint:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.HoldingsWeightConstraint'\n          type: array\n        number_of_buys:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.NumberOfBuysConstraint'\n          type: array\n        number_of_sells:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.NumberOfSellsConstraint'\n          type: array\n        round_lots:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.RoundlotsConstraint'\n          type: array\n        trade_threshold:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.TradeThresholdConstraint'\n          type: array\n        transaction_cost:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.TransactionCostConstraint'\n          type: array\n        trading_turnover:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.TurnoverConstraint'\n          type: array\n        risk_etl:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.LimitRiskETLConstraint'\n          type: array\n        risk_contribution:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.RiskContributionConstraint'\n          type: array\n        risk_volatility:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.RiskVolatilityConstraint'\n          type: array\n        limit_trade_constraint:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.TradingLimitTradeConstraint'\n          type: array\n      type: object\n    optimizer.inputs.ExpectedReturnConstraint:\n      description: \"1\"\n      properties:\n        name:\n          type: string\n        min:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        max:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        return_value:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        use_strategy_return_value:\n          type: boolean\n        penalty:\n          $ref: '#/components/schemas/optimizer.inputs.Penalty'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        return_type:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintReturnType.Enum'\n        rel_to_benchmark:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n        hierarchy:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.DiversificationConstraint:\n      description: \"2\"\n      properties:\n        name:\n          type: string\n        asset_value:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        max_percent:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        penalty:\n          $ref: '#/components/schemas/optimizer.inputs.Penalty'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        unit:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintUnitType.Enum'\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        hierarchy:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.FactorExposureConstraint:\n      description: \"3\"\n      properties:\n        name:\n          type: string\n        penalty:\n          $ref: '#/components/schemas/optimizer.inputs.Penalty'\n        rel_to_benchmark:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n        factors:\n          $ref: '#/components/schemas/optimizer.inputs.FactorExposureAttributes'\n        hierarchy:\n          format: int32\n          type: integer\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n      type: object\n    optimizer.inputs.GeneralLinearConstraint:\n      description: \"4\"\n      properties:\n        name:\n          type: string\n        security_attribute:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        min:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        max:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        penalty:\n          $ref: '#/components/schemas/optimizer.inputs.Penalty'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        weighting_method:\n          $ref: '#/components/schemas/optimizer.inputs.EWeightingMethodType.Enum'\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        hierarchy:\n          format: int32\n          type: integer\n        rel_to_benchmark:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.HoldingsThresholdConstraint:\n      description: \"5\"\n      properties:\n        name:\n          type: string\n        custom_asset:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        min:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        asset_type:\n          $ref: '#/components/schemas/optimizer.inputs.EFPOConstraintAssetType.Enum'\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        unit:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintUnitType.Enum'\n        hierarchy:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.LeverageConstraint:\n      description: \"6\"\n      properties:\n        name:\n          type: string\n        value:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        value_type:\n          $ref: '#/components/schemas/optimizer.inputs.ELeverageValueType.Enum'\n        hierarchy:\n          format: int32\n          type: integer\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n      type: object\n    optimizer.inputs.NumberofAssetsConstraint:\n      description: \"7\"\n      properties:\n        name:\n          type: string\n        min:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        max:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        hierarchy:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.SensitivityConstraint:\n      description: \"8\"\n      properties:\n        name:\n          type: string\n        min:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        max:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        sensitivity_attribute:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        penalty:\n          $ref: '#/components/schemas/optimizer.inputs.Penalty'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        rel_to_benchmark:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n        hierarchy:\n          format: int32\n          type: integer\n        unit:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintUnitType.Enum'\n      type: object\n    optimizer.inputs.HoldingsWeightConstraint:\n      description: \"9\"\n      properties:\n        name:\n          type: string\n        custom_asset:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        min:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        max:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        penalty:\n          $ref: '#/components/schemas/optimizer.inputs.Penalty'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        unit:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintUnitType.Enum'\n        weight_type:\n          $ref: '#/components/schemas/optimizer.inputs.EFPOConstraintWeightType.Enum'\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        asset_type:\n          $ref: '#/components/schemas/optimizer.inputs.EFPOConstraintAssetType.Enum'\n        rel_to_benchmark:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n        hierarchy:\n          format: int32\n          type: integer\n        apply_only_to_direct:\n          type: boolean\n      type: object\n    optimizer.inputs.NumberOfBuysConstraint:\n      description: \"10\"\n      properties:\n        name:\n          type: string\n        max:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        hierarchy:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.NumberOfSellsConstraint:\n      description: \"11\"\n      properties:\n        name:\n          type: string\n        max:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        hierarchy:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.RoundlotsConstraint:\n      description: \"12\"\n      properties:\n        name:\n          type: string\n        asset_level:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        custom_asset:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        asset_type:\n          $ref: '#/components/schemas/optimizer.inputs.EFPOConstraintAssetType.Enum'\n        general_value:\n          format: double\n          type: number\n        hierarchy:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.TradeThresholdConstraint:\n      description: \"13\"\n      properties:\n        name:\n          type: string\n        min:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        custom_asset:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        unit:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintUnitType.Enum'\n        asset_type:\n          $ref: '#/components/schemas/optimizer.inputs.EFPOConstraintAssetType.Enum'\n        hierarchy:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.TransactionCostConstraint:\n      description: \"14\"\n      properties:\n        name:\n          type: string\n        max:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        custom_asset:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        unit:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintUnitType.Enum'\n        asset_type:\n          $ref: '#/components/schemas/optimizer.inputs.EFPOConstraintAssetType.Enum'\n        hierarchy:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.TurnoverConstraint:\n      description: \"15\"\n      properties:\n        name:\n          type: string\n        max:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        custom_asset:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        penalty:\n          $ref: '#/components/schemas/optimizer.inputs.Penalty'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        value_type:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintValueType.Enum'\n        asset_type:\n          $ref: '#/components/schemas/optimizer.inputs.EFPOConstraintAssetType.Enum'\n        turnover_type:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintTurnoverType.Enum'\n        hierarchy:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.TradingLimitTradeConstraint:\n      description: \"19\"\n      properties:\n        name:\n          type: string\n        custom_asset:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        min:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        max:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        penalty:\n          $ref: '#/components/schemas/optimizer.inputs.Penalty'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        unit:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintUnitType.Enum'\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        asset_type:\n          $ref: '#/components/schemas/optimizer.inputs.EFPOConstraintAssetType.Enum'\n        hierarchy:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.LimitRiskETLConstraint:\n      description: \"16\"\n      properties:\n        name:\n          type: string\n        max_etl:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        confidence_level:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        penalty:\n          $ref: '#/components/schemas/optimizer.inputs.Penalty'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        active_etl:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n        hierarchy:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.RiskContributionConstraint:\n      description: \"17\"\n      properties:\n        name:\n          type: string\n        max_percent:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        custom_asset:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        asset_type:\n          $ref: '#/components/schemas/optimizer.inputs.EFPOConstraintAssetType.Enum'\n        risk_type:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintRiskType.Enum'\n        hierarchy:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.RiskVolatilityConstraint:\n      description: \"18\"\n      properties:\n        name:\n          type: string\n        max_value_of_risk:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        level:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintLevel.Enum'\n        penalty:\n          $ref: '#/components/schemas/optimizer.inputs.Penalty'\n        groups:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ConstraintGroup'\n          type: array\n        risk_type:\n          $ref: '#/components/schemas/optimizer.inputs.EConstraintRiskType.Enum'\n        active_risk:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n        hierarchy:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.EValueType:\n      type: object\n    optimizer.inputs.Value:\n      properties:\n        value_type:\n          $ref: '#/components/schemas/optimizer.inputs.EValueType.Enum'\n        raw_value:\n          format: double\n          type: number\n        ref_index:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.BoundSource:\n      type: object\n    optimizer.inputs.OnPeriods:\n      properties:\n        periods:\n          items:\n            format: int32\n            type: integer\n          type: array\n      type: object\n    optimizer.inputs.AcrossPeriods:\n      properties:\n        start_period:\n          format: int32\n          type: integer\n        end_period:\n          format: int32\n          type: integer\n        rolling:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods.RollingPeriods'\n      type: object\n    optimizer.inputs.RollingMethod:\n      type: object\n    optimizer.inputs.TailRiskMeasure:\n      type: object\n    optimizer.inputs.MultiPeriodObjective:\n      properties:\n        factor_exposure:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPFactorExposureTerm'\n          type: array\n        volatility:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPVolatilityTerm'\n          type: array\n        general_linear:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPGeneralLinearTerm'\n          type: array\n        expected_return:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPExpectedReturnTerm'\n          type: array\n        sensitivity:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPSensitivityTerm'\n          type: array\n        objective_ratio:\n          $ref: '#/components/schemas/optimizer.inputs.MPObjectiveRatioTerm'\n        tail_risk:\n          description: MultiPeriod-Specific\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPTailRiskTerm'\n          type: array\n        target_probability:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.MPTargetProbabilityTerm'\n          type: array\n      type: object\n    optimizer.inputs.MPFactorExposureTerm:\n      properties:\n        term:\n          $ref: '#/components/schemas/optimizer.inputs.FactorExposureTerm'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.MPVolatilityTerm:\n      properties:\n        term:\n          $ref: '#/components/schemas/optimizer.inputs.VolatilityTerm'\n        term_on:\n          $ref: '#/components/schemas/optimizer.inputs.BoundSource.Enum'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.MPGeneralLinearTerm:\n      properties:\n        term:\n          $ref: '#/components/schemas/optimizer.inputs.GeneralLinearTerm'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.MPExpectedReturnTerm:\n      properties:\n        term:\n          $ref: '#/components/schemas/optimizer.inputs.ExpectedReturnTerm'\n        term_on:\n          $ref: '#/components/schemas/optimizer.inputs.BoundSource.Enum'\n        annualization_factor:\n          format: double\n          type: number\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.MPSensitivityTerm:\n      properties:\n        term:\n          $ref: '#/components/schemas/optimizer.inputs.SensitivityTerm'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.MPObjectiveRatioTerm:\n      properties:\n        sharpe_ratio:\n          $ref: '#/components/schemas/optimizer.inputs.SharpeRatioTerm'\n        starr:\n          $ref: '#/components/schemas/optimizer.inputs.STARRTerm'\n        diversification_ratio:\n          $ref: '#/components/schemas/optimizer.inputs.DiversificationRatioTerm'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.MPTargetProbabilityTerm:\n      properties:\n        term:\n          $ref: '#/components/schemas/optimizer.inputs.TargetProbabilityTerm'\n        constrain_on:\n          $ref: '#/components/schemas/optimizer.inputs.BoundSource.Enum'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.TargetProbabilityTerm:\n      properties:\n        name:\n          type: string\n        multiplier:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        direction:\n          $ref: '#/components/schemas/optimizer.inputs.EObjectiveTermDirection.Enum'\n        threshold_min:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        threshold_max:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n      type: object\n    optimizer.inputs.MPTailRiskTerm:\n      properties:\n        term:\n          $ref: '#/components/schemas/optimizer.inputs.TailRiskTerm'\n        term_on:\n          $ref: '#/components/schemas/optimizer.inputs.BoundSource.Enum'\n        on_periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n        across_periods:\n          $ref: '#/components/schemas/optimizer.inputs.AcrossPeriods'\n      type: object\n    optimizer.inputs.TailRiskTerm:\n      properties:\n        name:\n          type: string\n        multiplier:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        direction:\n          $ref: '#/components/schemas/optimizer.inputs.EObjectiveTermDirection.Enum'\n        risk_measure:\n          $ref: '#/components/schemas/optimizer.inputs.TailRiskMeasure.Enum'\n        confidence_level:\n          format: double\n          type: number\n        use_centered_etl:\n          type: boolean\n        active_risk:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.EObjectiveTermDirection:\n      type: object\n    optimizer.inputs.EAggregationMethod:\n      type: object\n    optimizer.inputs.EObjectiveRiskType:\n      type: object\n    optimizer.inputs.Objective:\n      description: ToDo :Note to circle back to this when we have more info on factors\n      properties:\n        factor_exposure:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.FactorExposureTerm'\n          type: array\n        expected_tail_loss:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ExpectedTailLossTerm'\n          type: array\n        volatility:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.VolatilityTerm'\n          type: array\n        drawdown:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.DrawdownTerm'\n          type: array\n        general_linear:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.GeneralLinearTerm'\n          type: array\n        expected_return:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ExpectedReturnTerm'\n          type: array\n        sensitivity:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.SensitivityTerm'\n          type: array\n        sharpe_ratio:\n          $ref: '#/components/schemas/optimizer.inputs.SharpeRatioTerm'\n        starr:\n          $ref: '#/components/schemas/optimizer.inputs.STARRTerm'\n        diversification_ratio:\n          $ref: '#/components/schemas/optimizer.inputs.DiversificationRatioTerm'\n        null_risk_parity:\n          description: This is true when there is no risk_parity\n          type: boolean\n        risk_parity:\n          $ref: '#/components/schemas/optimizer.inputs.RiskParityTerm'\n        transaction_cost:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.TransactionCostTerm'\n          type: array\n      type: object\n    optimizer.inputs.FactorExposureTerm:\n      properties:\n        name:\n          type: string\n        multiplier:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        factors:\n          items:\n            type: string\n          type: array\n        direction:\n          $ref: '#/components/schemas/optimizer.inputs.EObjectiveTermDirection.Enum'\n        rel_to_benchmark:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.ExpectedTailLossTerm:\n      properties:\n        name:\n          type: string\n        multiplier:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        direction:\n          $ref: '#/components/schemas/optimizer.inputs.EObjectiveTermDirection.Enum'\n        confidence_level:\n          format: double\n          type: number\n        use_centered_etl:\n          type: boolean\n        active_risk:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.VolatilityTerm:\n      properties:\n        name:\n          type: string\n        multiplier:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        direction:\n          $ref: '#/components/schemas/optimizer.inputs.EObjectiveTermDirection.Enum'\n        risk_type:\n          $ref: '#/components/schemas/optimizer.inputs.EObjectiveRiskType.Enum'\n        factors:\n          items:\n            type: string\n          type: array\n        active_risk:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.DrawdownTerm:\n      properties:\n        name:\n          type: string\n        multiplier:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        direction:\n          $ref: '#/components/schemas/optimizer.inputs.EObjectiveTermDirection.Enum'\n        confidence_level:\n          format: double\n          type: number\n      type: object\n    optimizer.inputs.GeneralLinearTerm:\n      properties:\n        name:\n          type: string\n        multiplier:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        attribute:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        direction:\n          $ref: '#/components/schemas/optimizer.inputs.EObjectiveTermDirection.Enum'\n        method:\n          $ref: '#/components/schemas/optimizer.inputs.EAggregationMethod.Enum'\n        rel_to_benchmark:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.ExpectedReturnTerm:\n      properties:\n        name:\n          type: string\n        multiplier:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        return_values:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        direction:\n          $ref: '#/components/schemas/optimizer.inputs.EObjectiveTermDirection.Enum'\n        use_alpha:\n          type: boolean\n        rel_to_benchmark:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.TransactionCostTerm:\n      properties:\n        name:\n          type: string\n        multiplier:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        direction:\n          $ref: '#/components/schemas/optimizer.inputs.EObjectiveTermDirection.Enum'\n      type: object\n    optimizer.inputs.SensitivityTerm:\n      properties:\n        name:\n          type: string\n        multiplier:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        sensitivity_attribute:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        direction:\n          $ref: '#/components/schemas/optimizer.inputs.EObjectiveTermDirection.Enum'\n        rel_to_benchmark:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.SharpeRatioTerm:\n      properties:\n        name:\n          type: string\n        multiplier:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        risk_free_rate:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        direction:\n          $ref: '#/components/schemas/optimizer.inputs.EObjectiveTermDirection.Enum'\n        active_risk:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.STARRTerm:\n      properties:\n        name:\n          type: string\n        multiplier:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        risk_free_rate:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        direction:\n          $ref: '#/components/schemas/optimizer.inputs.EObjectiveTermDirection.Enum'\n        confidence_level:\n          format: double\n          type: number\n        use_centered_etl:\n          type: boolean\n        active_risk:\n          type: boolean\n        benchmark_index:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.DiversificationRatioTerm:\n      properties:\n        name:\n          type: string\n        multiplier:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        direction:\n          $ref: '#/components/schemas/optimizer.inputs.EObjectiveTermDirection.Enum'\n      type: object\n    optimizer.inputs.RiskParityTerm:\n      properties:\n        name:\n          type: string\n        risk_type:\n          $ref: '#/components/schemas/optimizer.inputs.EObjectiveRiskType.Enum'\n      type: object\n    optimizer.inputs.MultiPeriodOptions:\n      properties:\n        options:\n          $ref: '#/components/schemas/optimizer.inputs.Options'\n        weight_rebalance_periods:\n          items:\n            format: int32\n            type: integer\n          type: array\n        total_periods_count:\n          format: int32\n          type: integer\n        initial_point_randomization_count:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.Options:\n      properties:\n        maxRunTime:\n          format: int32\n          type: integer\n        ConvergenceTolerance:\n          format: double\n          type: number\n        cash_flow_formula:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        convert_weights_to_cash_for_ip:\n          type: boolean\n        convert_weights_to_cash_for_bmk:\n          type: boolean\n        composite_asset_lookthrough_level:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.ETransactionCostUnitType:\n      description: |-\n        ToDo :: follow-up for what unit type the optimizer expects,\n        and we can populate it accordingly in the request?\n      type: object\n    optimizer.inputs.TransactionCost:\n      properties:\n        unit_type:\n          $ref: '#/components/schemas/optimizer.inputs.ETransactionCostUnitType.Enum'\n        buy_cost:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        sell_cost:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n      type: object\n    optimizer.inputs.EAlphaUnitType:\n      type: object\n    optimizer.inputs.ExpectedReturn:\n      properties:\n        alpha:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n        alpha_unit:\n          $ref: '#/components/schemas/optimizer.inputs.EAlphaUnitType.Enum'\n      type: object\n    optimizer.inputs.MultiPeriodRiskModels:\n      properties:\n        risk_models:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.RiskModelForPeriods'\n          type: array\n      type: object\n    optimizer.inputs.RiskModelForPeriods:\n      description: Must have *one* model for each period\n      properties:\n        risk_model:\n          $ref: '#/components/schemas/optimizer.inputs.RiskModel'\n        periods:\n          $ref: '#/components/schemas/optimizer.inputs.OnPeriods'\n      type: object\n    optimizer.inputs.RiskModel:\n      properties:\n        simulated_risk_model:\n          $ref: '#/components/schemas/optimizer.inputs.SimulatedRiskModel'\n        quant_risk_model:\n          $ref: '#/components/schemas/optimizer.inputs.QuantRiskModel'\n        raw_model:\n          $ref: '#/components/schemas/optimizer.inputs.RawRiskModel'\n      type: object\n    optimizer.inputs.QuantRiskModel:\n      properties:\n        raw_data:\n          $ref: '#/components/schemas/optimizer.inputs.QuantRiskModelRawData'\n        request_info:\n          $ref: '#/components/schemas/optimizer.inputs.QuantRiskRequestInfo'\n      type: object\n    optimizer.inputs.QuantRiskRequestInfo:\n      properties:\n        service_url:\n          description: POST\n          type: string\n        json_post_body:\n          type: string\n        lima_header:\n          type: string\n        pickup_base_url:\n          type: string\n      type: object\n    optimizer.inputs.QuantRiskModelRawData:\n      properties:\n        labels:\n          $ref: '#/components/schemas/optimizer.inputs.Labels'\n        RawAssetCovarianceMatrix:\n          $ref: '#/components/schemas/optimizer.inputs.SparseMatrix'\n        RawFactorExposure:\n          $ref: '#/components/schemas/optimizer.inputs.SparseMatrix'\n        RawFactorCovarianceMatrix:\n          $ref: '#/components/schemas/optimizer.inputs.DenseMatrix'\n        RiskModelCoverageFlag:\n          items:\n            format: int32\n            type: integer\n          type: array\n      type: object\n    optimizer.inputs.Labels:\n      description: Labeling and index information to be able to reconstruct the calculated\n        data results to the provided inputs from the request.\n      properties:\n        factor:\n          $ref: '#/components/schemas/optimizer.inputs.Factor'\n        security:\n          $ref: '#/components/schemas/optimizer.inputs.Security'\n      type: object\n    optimizer.inputs.Factor:\n      description: Labels relevant to calculation-levels with 'Factor' in the name\n      properties:\n        ids:\n          items:\n            type: string\n          type: array\n        names:\n          items:\n            type: string\n          type: array\n      type: object\n    optimizer.inputs.Security:\n      description: Labels relevant to calculation-levels with 'Security' in the name\n      properties:\n        ids:\n          items:\n            type: string\n          type: array\n      type: object\n    optimizer.inputs.SparseMatrix:\n      description: Represents a sparse matrix in the CSR format\n      properties:\n        rows:\n          format: int32\n          type: integer\n        columns:\n          format: int32\n          type: integer\n        indexPointer:\n          items:\n            format: int32\n            type: integer\n          type: array\n        indices:\n          items:\n            format: int32\n            type: integer\n          type: array\n        value:\n          items:\n            format: double\n            type: number\n          type: array\n      type: object\n    optimizer.inputs.DenseMatrix:\n      description: Represents a dense matrix\n      properties:\n        value:\n          description: 2D array of doubles\n          items:\n            $ref: '#/components/schemas/google.protobuf.ListValue'\n          type: array\n      type: object\n    optimizer.inputs.SimulatedRiskModel:\n      properties:\n        raw_data:\n          $ref: '#/components/schemas/VAR.DistributionDataMessage'\n        request_info:\n          $ref: '#/components/schemas/optimizer.inputs.SimulatedRiskRequestInfo'\n      type: object\n    optimizer.inputs.SimulatedRiskRequestInfo:\n      properties:\n        url:\n          description: GET\n          type: string\n        lima_header:\n          type: string\n      type: object\n    optimizer.inputs.RawRiskModel:\n      properties:\n        simulations:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.RawRiskModel.Simulations'\n          type: array\n      type: object\n    optimizer.inputs.TotalUniverse:\n      properties:\n        assets:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.Asset'\n          type: array\n        composite_assets:\n          $ref: '#/components/schemas/optimizer.inputs.CompositeAsset'\n        derivatives:\n          $ref: '#/components/schemas/optimizer.inputs.Derivative'\n      type: object\n    optimizer.inputs.Asset:\n      properties:\n        symbol:\n          type: string\n        price:\n          format: double\n          type: number\n      type: object\n    optimizer.inputs.AssetPrice:\n      properties:\n        source:\n          $ref: '#/components/schemas/optimizer.inputs.AssetPrice.EPriceSource'\n        price_override:\n          format: double\n          type: number\n      type: object\n    optimizer.inputs.CompositeConstituent:\n      properties:\n        univ_index:\n          format: int32\n          type: integer\n        weight:\n          format: double\n          type: number\n        price:\n          $ref: '#/components/schemas/optimizer.inputs.AssetPrice'\n      type: object\n    optimizer.inputs.CompositeAsset:\n      properties:\n        constituents:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.CompositeConstituent'\n          type: array\n      type: object\n    optimizer.inputs.Derivative:\n      properties:\n        offset_index:\n          description: Index of the offset. E.g. CASH_USD_FUT for Futures or 2nd leg\n            for Forwards. -1 if no offset generated\n          format: int32\n          type: integer\n        future:\n          $ref: '#/components/schemas/optimizer.inputs.Derivative.Future'\n        forward:\n          description: Nothing else is needed for forwards.\n          type: boolean\n      type: object\n    optimizer.inputs.LookupTables:\n      properties:\n        groups:\n          description: tables to be referenced by index from the strategy.\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.GroupDefinition'\n          type: array\n        values:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.ValueReference'\n          type: array\n      type: object\n    optimizer.inputs.GroupDefinition:\n      description: |-\n        Contains the subset of assets associated with a\n        constraint group. (excluding Factor groups, as the\n        optimizer will be respondible for fetching the risk\n        model and expanding factor groups.\n      properties:\n        univ_indices:\n          items:\n            format: int32\n            type: integer\n          type: array\n      type: object\n    optimizer.inputs.ValueReference:\n      description: |-\n        Contains the results of an asset-level formula from FPO,\n        mapping the TotalUniverse asset index to resulting value.\n        The list of ValueReferences in the LookupTables should\n        provide results for ALL formulae referenced throughout\n        the FPO strategy. When the optimizer encounters a \"reference\"\n        value in the strategy, it will come here to resolve the\n        value for each asset within the scope of that reference.\n      properties:\n        asset_values:\n          format: double\n          type: number\n      type: object\n    optimizer.inputs.Portfolios:\n      properties:\n        initial:\n          $ref: '#/components/schemas/optimizer.inputs.Portfolio'\n        benchmarks:\n          description: index 0 is always the \"Primary Benchmark\"\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.Portfolio'\n          type: array\n        buylist:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.BuyListItem'\n          type: array\n        cash_univ_index:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.Portfolio:\n      properties:\n        holdings:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.PortfolioItem'\n          type: array\n      type: object\n    optimizer.inputs.PortfolioItem:\n      properties:\n        univ_index:\n          format: int32\n          type: integer\n        price:\n          $ref: '#/components/schemas/optimizer.inputs.AssetPrice'\n        shares:\n          format: double\n          type: number\n      type: object\n    optimizer.inputs.BuyListItem:\n      properties:\n        univ_index:\n          format: int32\n          type: integer\n        price:\n          $ref: '#/components/schemas/optimizer.inputs.AssetPrice'\n      type: object\n    optimizer.inputs.FrontierSettings:\n      properties:\n        constraint_name:\n          type: string\n        objective_term_name:\n          type: string\n        min:\n          $ref: '#/components/schemas/optimizer.inputs.Range'\n        max:\n          $ref: '#/components/schemas/optimizer.inputs.Range'\n      type: object\n    optimizer.inputs.Range:\n      properties:\n        points:\n          description: points determined by Engine\n          format: int32\n          type: integer\n        start_to_end:\n          $ref: '#/components/schemas/optimizer.inputs.StartEndRange'\n        specific_points:\n          $ref: '#/components/schemas/optimizer.inputs.SpecificPoints'\n      type: object\n    optimizer.inputs.StartEndRange:\n      properties:\n        start:\n          format: double\n          type: number\n        end:\n          format: double\n          type: number\n        points:\n          format: int32\n          type: integer\n      type: object\n    optimizer.inputs.SpecificPoints:\n      properties:\n        points:\n          items:\n            format: double\n            type: number\n          type: array\n      type: object\n    optimizer.outputs.MultiPeriodOutput:\n      properties:\n        periods:\n          items:\n            $ref: '#/components/schemas/optimizer.outputs.Periods'\n          type: array\n        raw_stats:\n          description: temporary\n          type: string\n      type: object\n    optimizer.outputs.Periods:\n      properties:\n        weights:\n          format: double\n          type: number\n      type: object\n    google.protobuf.Struct:\n      properties:\n        fields:\n          $ref: '#/components/schemas/optimizer.inputs.Value'\n      type: object\n    google.protobuf.Value:\n      properties:\n        nullValue:\n          $ref: '#/components/schemas/google.protobuf.NullValue'\n        numberValue:\n          format: double\n          type: number\n        stringValue:\n          type: string\n        boolValue:\n          type: boolean\n        structValue:\n          $ref: '#/components/schemas/google.protobuf.Struct'\n        listValue:\n          $ref: '#/components/schemas/google.protobuf.ListValue'\n      type: object\n    google.protobuf.NullValue:\n      description: '0 - NULL_VALUE '\n      enum:\n      - 0\n      type: number\n    google.protobuf.ListValue:\n      properties:\n        values:\n          items:\n            $ref: '#/components/schemas/optimizer.inputs.Value'\n          type: array\n      type: object\n    optimizer.inputs.EFPOConstraintWeightType.Enum:\n      description: \"0 - ePercentOfPortfolioValue \\n1 - ePercentOfExposure \"\n      enum:\n      - 0\n      - 1\n      type: number\n    optimizer.inputs.EFPOConstraintAssetType.Enum:\n      description: \"0 - eAll \\n1 - eCustom \\n2 - eBuyList \"\n      enum:\n      - 0\n      - 1\n      - 2\n      type: number\n    optimizer.inputs.EConstraintReturnType.Enum:\n      description: \"0 - eTarget \\n1 - eMaximizeProbability \"\n      enum:\n      - 0\n      - 1\n      type: number\n    optimizer.inputs.EConstraintRiskRelativeInterpretationType.Enum:\n      description: \"0 - eVolatilityDifference \\n1 - eTrackingError \"\n      enum:\n      - 0\n      - 1\n      type: number\n    optimizer.inputs.EConstraintGroupType.Enum:\n      description: \"0 - eTotal \\n1 - eSelection \\n2 - eSecurity \"\n      enum:\n      - 0\n      - 1\n      - 2\n      type: number\n    optimizer.inputs.EConstraintTurnoverType.Enum:\n      description: \"0 - eTotal \\n1 - eBuy \\n2 - eSell \"\n      enum:\n      - 0\n      - 1\n      - 2\n      type: number\n    optimizer.inputs.EConstraintValueType.Enum:\n      description: \"0 - eMarketValue \\n1 - eExposureValue \"\n      enum:\n      - 0\n      - 1\n      type: number\n    optimizer.inputs.ELeverageValueType.Enum:\n      description: \"0 - eFixedValue \\n1 - eMaximumValue \"\n      enum:\n      - 0\n      - 1\n      type: number\n    optimizer.inputs.EConstraintLevel.Enum:\n      description: \"0 - ePortfolio \\n1 - eGroup \\n2 - eAsset \"\n      enum:\n      - 0\n      - 1\n      - 2\n      type: number\n    optimizer.inputs.EConstraintPenaltyType.Enum:\n      description: \"0 - eLinear \\n1 - eQuadratic \\n2 - eScaledQuadratic \"\n      enum:\n      - 0\n      - 1\n      - 2\n      type: number\n    optimizer.inputs.EConstraintRiskType.Enum:\n      description: \"0 - eStandardDevition \\n1 - eVariance \"\n      enum:\n      - 0\n      - 1\n      type: number\n    optimizer.inputs.EConstraintUnitType.Enum:\n      description: \"0 - eCurrency \\n1 - ePercentage \\n2 - eNumber \"\n      enum:\n      - 0\n      - 1\n      - 2\n      type: number\n    optimizer.inputs.EWeightingMethodType.Enum:\n      description: \"0 - eWeights \\n1 - eShares \"\n      enum:\n      - 0\n      - 1\n      type: number\n    optimizer.inputs.EValueType.Enum:\n      description: \"0 - eNA \\n1 - eRaw \\n2 - eReference \\n3 - eExpandRaw \"\n      enum:\n      - 0\n      - 1\n      - 2\n      - 3\n      type: number\n    optimizer.inputs.BoundSource.Enum:\n      description: \"0 - ePortfolioReturn \\n1 - ePortfolioValue \\n2 - eFundingRatio\\\n        \\ \\n3 - eSurplusReturn \\n4 - eDrawdownPercent \\n5 - eDrawdownValue \"\n      enum:\n      - 0\n      - 1\n      - 2\n      - 3\n      - 4\n      - 5\n      type: number\n    optimizer.inputs.AcrossPeriods.RollingPeriods:\n      properties:\n        frequency:\n          format: int32\n          type: integer\n        method:\n          $ref: '#/components/schemas/optimizer.inputs.RollingMethod.Enum'\n      type: object\n    optimizer.inputs.RollingMethod.Enum:\n      description: \"0 - eValuePerPath \\n1 - eAllValues \\n2 - eMinPerStep \\n3 - eMaxPerStep \"\n      enum:\n      - 0\n      - 1\n      - 2\n      - 3\n      type: number\n    optimizer.inputs.TailRiskMeasure.Enum:\n      description: \"0 - ETL \\n1 - VaR \"\n      enum:\n      - 0\n      - 1\n      type: number\n    optimizer.inputs.EObjectiveTermDirection.Enum:\n      description: \"0 - eMinimize \\n1 - eMaximize \"\n      enum:\n      - 0\n      - 1\n      type: number\n    optimizer.inputs.EAggregationMethod.Enum:\n      description: \"0 - eWeights \\n1 - eQuantity \"\n      enum:\n      - 0\n      - 1\n      type: number\n    optimizer.inputs.EObjectiveRiskType.Enum:\n      description: \"0 - eETL \\n1 - eStandardDeviation \\n2 - eVariance \"\n      enum:\n      - 0\n      - 1\n      - 2\n      type: number\n    optimizer.inputs.ETransactionCostUnitType.Enum:\n      description: \"0 - ePercent \\n1 - eCostPerShare \"\n      enum:\n      - 0\n      - 1\n      type: number\n    optimizer.inputs.EAlphaUnitType.Enum:\n      description: \"0 - ePercent \\n1 - eAbsolute \"\n      enum:\n      - 0\n      - 1\n      type: number\n    optimizer.inputs.RawRiskModel.Simulations:\n      properties:\n        id:\n          type: string\n        simulatedReturns:\n          items:\n            format: double\n            type: number\n          type: array\n      type: object\n    optimizer.inputs.AssetPrice.EPriceSource:\n      description: \"0 - eTotalUniverse \\n1 - eOverride \"\n      enum:\n      - 0\n      - 1\n      type: number\n    optimizer.inputs.Derivative.Future:\n      properties:\n        contract_size:\n          format: double\n          type: number\n        method:\n          $ref: '#/components/schemas/optimizer.inputs.Derivative.Future.EComputationMethod.Enum'\n        using_pa_multiply:\n          type: boolean\n      type: object\n    optimizer.inputs.Derivative.Future.EComputationMethod:\n      type: object\n    optimizer.inputs.Derivative.Future.EComputationMethod.Enum:\n      description: \"0 - eCost \\n1 - eTotalCost \\n2 - eMarkToMarket \"\n      enum:\n      - 0\n      - 1\n      - 2\n      type: number\n  securitySchemes:\n    FactSetApiKey:\n      scheme: basic\n      type: http\n    FactSetOAuth2:\n      flows:\n        clientCredentials:\n          scopes: {}\n          tokenUrl: https://auth.factset.com/as/token.oauth2\n      type: oauth2\nx-original-swagger-version: \"2.0\"\n\n",
			"canonicalURL": "/github.com/factset/enterprise-sdk@dcf75a02daedc726c313912a349d2863114bc92c/-/blob/code/java/OptimizationEngineAPIMultiperiod/v1/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/factset/enterprise-sdk/blob/dcf75a02daedc726c313912a349d2863114bc92c/code/java/OptimizationEngineAPIMultiperiod/v1/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/mpo/v1/optimizeFPO\": post: requestBody: contents: unsupported content types: [application/x-protobuf]",
	"NotImplemented": [
		"unsupported content types"
	]
}