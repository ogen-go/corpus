{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ITISFoundation/osparc-simcore"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "services/dynamic-sidecar/openapi.json",
			"byteSize": 26260,
			"content": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"FastAPI\",\n    \"version\": \"0.1.0\"\n  },\n  \"paths\": {\n    \"/health\": {\n      \"get\": {\n        \"summary\": \"Health Endpoint\",\n        \"operationId\": \"health_endpoint_health_get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApplicationHealth\"\n                }\n              }\n            }\n          },\n          \"503\": {\n            \"description\": \"Service is unhealthy\"\n          }\n        }\n      }\n    },\n    \"/v1/containers\": {\n      \"get\": {\n        \"tags\": [\n          \"containers\"\n        ],\n        \"summary\": \"Containers Docker Inspect\",\n        \"description\": \"Returns entire docker inspect data, if only_state is True,\\nthe status of the containers is returned\",\n        \"operationId\": \"containers_docker_inspect_v1_containers_get\",\n        \"parameters\": [\n          {\n            \"description\": \"if True only show the status of the container\",\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Only Status\",\n              \"type\": \"boolean\",\n              \"description\": \"if True only show the status of the container\",\n              \"default\": false\n            },\n            \"name\": \"only_status\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Errors in container\"\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"containers\"\n        ],\n        \"summary\": \"Runs Docker Compose Up\",\n        \"description\": \"Expects the docker-compose spec as raw-body utf-8 encoded text\",\n        \"operationId\": \"runs_docker_compose_up_v1_containers_post\",\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Cannot validate submitted compose spec\"\n          }\n        }\n      }\n    },\n    \"/v1/containers:down\": {\n      \"post\": {\n        \"tags\": [\n          \"containers\"\n        ],\n        \"summary\": \"Runs Docker Compose Down\",\n        \"description\": \"Removes the previously started service\\nand returns the docker-compose output\",\n        \"operationId\": \"runs_docker_compose_down_v1_containers_down_post\",\n        \"parameters\": [\n          {\n            \"description\": \"docker-compose down command timeout default\",\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Command Timeout\",\n              \"type\": \"number\",\n              \"description\": \"docker-compose down command timeout default\",\n              \"default\": 10.0\n            },\n            \"name\": \"command_timeout\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"No compose spec found\"\n          },\n          \"422\": {\n            \"description\": \"Error while shutting down containers\"\n          }\n        }\n      }\n    },\n    \"/v1/containers/{id}/logs\": {\n      \"get\": {\n        \"tags\": [\n          \"containers\"\n        ],\n        \"summary\": \"Get Container Logs\",\n        \"description\": \"Returns the logs of a given container if found\",\n        \"operationId\": \"get_container_logs_v1_containers__id__logs_get\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Id\",\n              \"type\": \"string\"\n            },\n            \"name\": \"id\",\n            \"in\": \"path\"\n          },\n          {\n            \"description\": \"Only return logs since this time, as a UNIX timestamp\",\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Timestamp\",\n              \"type\": \"integer\",\n              \"description\": \"Only return logs since this time, as a UNIX timestamp\",\n              \"default\": 0\n            },\n            \"name\": \"since\",\n            \"in\": \"query\"\n          },\n          {\n            \"description\": \"Only return logs before this time, as a UNIX timestamp\",\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Timestamp\",\n              \"type\": \"integer\",\n              \"description\": \"Only return logs before this time, as a UNIX timestamp\",\n              \"default\": 0\n            },\n            \"name\": \"until\",\n            \"in\": \"query\"\n          },\n          {\n            \"description\": \"Enabling this parameter will include timestamps in logs\",\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Display timestamps\",\n              \"type\": \"boolean\",\n              \"description\": \"Enabling this parameter will include timestamps in logs\",\n              \"default\": false\n            },\n            \"name\": \"timestamps\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Container does not exists\"\n          },\n          \"500\": {\n            \"description\": \"Errors in container\"\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/containers/name\": {\n      \"get\": {\n        \"tags\": [\n          \"containers\"\n        ],\n        \"summary\": \"Get Entrypoint Container Name\",\n        \"description\": \"Searches for the container's name given the network\\non which the proxy communicates with it.\\nSupported filters:\\n    network: name of the network\",\n        \"operationId\": \"get_entrypoint_container_name_v1_containers_name_get\",\n        \"parameters\": [\n          {\n            \"description\": \"JSON encoded dictionary. FastAPI does not allow for dict as type in query parameters\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Filters\",\n              \"type\": \"string\",\n              \"description\": \"JSON encoded dictionary. FastAPI does not allow for dict as type in query parameters\"\n            },\n            \"name\": \"filters\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"No entrypoint container found or spec is not yet present\"\n          },\n          \"422\": {\n            \"description\": \"Filters could not be parsed\"\n          }\n        }\n      }\n    },\n    \"/v1/containers/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"containers\"\n        ],\n        \"summary\": \"Inspect Container\",\n        \"description\": \"Returns information about the container, like docker inspect command\",\n        \"operationId\": \"inspect_container_v1_containers__id__get\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Id\",\n              \"type\": \"string\"\n            },\n            \"name\": \"id\",\n            \"in\": \"path\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Container does not exist\"\n          },\n          \"500\": {\n            \"description\": \"Errors in container\"\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/containers/state:restore\": {\n      \"post\": {\n        \"tags\": [\n          \"containers\"\n        ],\n        \"summary\": \"Restores the state of the dynamic service\",\n        \"description\": \"When restoring the state:\\n- pull inputs via nodeports\\n- pull all the extra state paths\",\n        \"operationId\": \"restore_state_v1_containers_state_restore_post\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful Response\"\n          }\n        }\n      }\n    },\n    \"/v1/containers/state:save\": {\n      \"post\": {\n        \"tags\": [\n          \"containers\"\n        ],\n        \"summary\": \"Stores the state of the dynamic service\",\n        \"operationId\": \"save_state_v1_containers_state_save_post\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful Response\"\n          }\n        }\n      }\n    },\n    \"/v1/containers/ports/inputs:pull\": {\n      \"post\": {\n        \"tags\": [\n          \"containers\"\n        ],\n        \"summary\": \"Pull input ports data\",\n        \"operationId\": \"pull_input_ports_v1_containers_ports_inputs_pull_post\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"title\": \"Port Keys\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/containers/directory-watcher\": {\n      \"patch\": {\n        \"tags\": [\n          \"containers\"\n        ],\n        \"summary\": \"Enable/disable directory-watcher event propagation\",\n        \"operationId\": \"toggle_directory_watcher_v1_containers_directory_watcher_patch\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PatchDirectoryWatcherItem\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/containers/ports/outputs/dirs\": {\n      \"post\": {\n        \"tags\": [\n          \"containers\"\n        ],\n        \"summary\": \"Creates the output directories declared by the docker images's labels. It is more convenient to pass the labels from director-v2, since it already has all the machinery to call into director-v0 to retrieve them.\",\n        \"operationId\": \"create_output_dirs_v1_containers_ports_outputs_dirs_post\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateDirsRequestItem\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/containers/ports/outputs:pull\": {\n      \"post\": {\n        \"tags\": [\n          \"containers\"\n        ],\n        \"summary\": \"Pull output ports data\",\n        \"operationId\": \"pull_output_ports_v1_containers_ports_outputs_pull_post\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"title\": \"Port Keys\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/containers/ports/outputs:push\": {\n      \"post\": {\n        \"tags\": [\n          \"containers\"\n        ],\n        \"summary\": \"Push output ports data\",\n        \"operationId\": \"push_output_ports_v1_containers_ports_outputs_push_post\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"title\": \"Port Keys\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful Response\"\n          },\n          \"404\": {\n            \"description\": \"Could not find node_uuid in the database\"\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/containers:restart\": {\n      \"post\": {\n        \"tags\": [\n          \"containers\"\n        ],\n        \"summary\": \"Restarts Containers\",\n        \"description\": \"Removes the previously started service\\nand returns the docker-compose output\",\n        \"operationId\": \"restarts_containers_v1_containers_restart_post\",\n        \"parameters\": [\n          {\n            \"description\": \"docker-compose stop command timeout default\",\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Command Timeout\",\n              \"type\": \"number\",\n              \"description\": \"docker-compose stop command timeout default\",\n              \"default\": 10.0\n            },\n            \"name\": \"command_timeout\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful Response\"\n          },\n          \"404\": {\n            \"description\": \"Container does not exist\"\n          },\n          \"422\": {\n            \"description\": \"Error while running docker-compose command\"\n          }\n        }\n      }\n    },\n    \"/v1/containers/{id}/networks:attach\": {\n      \"post\": {\n        \"tags\": [\n          \"containers\"\n        ],\n        \"summary\": \"attach container to a network, if not already attached\",\n        \"operationId\": \"attach_container_to_network_v1_containers__id__networks_attach_post\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Id\",\n              \"type\": \"string\"\n            },\n            \"name\": \"id\",\n            \"in\": \"path\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AttachContainerToNetworkItem\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/containers/{id}/networks:detach\": {\n      \"post\": {\n        \"tags\": [\n          \"containers\"\n        ],\n        \"summary\": \"detach container from a network, if not already detached\",\n        \"operationId\": \"detach_container_from_network_v1_containers__id__networks_detach_post\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Id\",\n              \"type\": \"string\"\n            },\n            \"name\": \"id\",\n            \"in\": \"path\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DetachContainerFromNetworkItem\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"ApplicationHealth\": {\n        \"title\": \"ApplicationHealth\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"is_healthy\": {\n            \"title\": \"Is Healthy\",\n            \"type\": \"boolean\",\n            \"description\": \"returns True if the service sis running correctly\",\n            \"default\": true\n          },\n          \"error_message\": {\n            \"title\": \"Error Message\",\n            \"type\": \"string\",\n            \"description\": \"in case of error this gets set\"\n          }\n        }\n      },\n      \"AttachContainerToNetworkItem\": {\n        \"title\": \"AttachContainerToNetworkItem\",\n        \"required\": [\n          \"network_id\",\n          \"network_aliases\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"network_id\": {\n            \"title\": \"Network Id\",\n            \"type\": \"string\"\n          },\n          \"network_aliases\": {\n            \"title\": \"Network Aliases\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"CreateDirsRequestItem\": {\n        \"title\": \"CreateDirsRequestItem\",\n        \"required\": [\n          \"outputs_labels\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"outputs_labels\": {\n            \"title\": \"Outputs Labels\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/ServiceOutput\"\n            }\n          }\n        }\n      },\n      \"DetachContainerFromNetworkItem\": {\n        \"title\": \"DetachContainerFromNetworkItem\",\n        \"required\": [\n          \"network_id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"network_id\": {\n            \"title\": \"Network Id\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"HTTPValidationError\": {\n        \"title\": \"HTTPValidationError\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"detail\": {\n            \"title\": \"Detail\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ValidationError\"\n            }\n          }\n        }\n      },\n      \"PatchDirectoryWatcherItem\": {\n        \"title\": \"PatchDirectoryWatcherItem\",\n        \"required\": [\n          \"is_enabled\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"is_enabled\": {\n            \"title\": \"Is Enabled\",\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"SelectBox\": {\n        \"title\": \"SelectBox\",\n        \"required\": [\n          \"structure\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"structure\": {\n            \"title\": \"Structure\",\n            \"minItems\": 1,\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Structure\"\n            }\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ServiceOutput\": {\n        \"title\": \"ServiceOutput\",\n        \"required\": [\n          \"label\",\n          \"description\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"displayOrder\": {\n            \"title\": \"Displayorder\",\n            \"type\": \"number\",\n            \"description\": \"DEPRECATED: new display order is taken from the item position. This will be removed.\",\n            \"deprecated\": true\n          },\n          \"label\": {\n            \"title\": \"Label\",\n            \"type\": \"string\",\n            \"description\": \"short name for the property\",\n            \"example\": \"Age\"\n          },\n          \"description\": {\n            \"title\": \"Description\",\n            \"type\": \"string\",\n            \"description\": \"description of the property\",\n            \"example\": \"Age in seconds since 1970\"\n          },\n          \"type\": {\n            \"title\": \"Type\",\n            \"pattern\": \"^(number|integer|boolean|string|ref_contentSchema|data:([^/\\\\s,]+/[^/\\\\s,]+|\\\\[[^/\\\\s,]+/[^/\\\\s,]+(,[^/\\\\s]+/[^/,\\\\s]+)*\\\\]))$\",\n            \"type\": \"string\",\n            \"description\": \"data type expected on this input glob matching for data type is allowed\"\n          },\n          \"contentSchema\": {\n            \"title\": \"Contentschema\",\n            \"type\": \"object\",\n            \"description\": \"jsonschema of this input/output. Required when type='ref_contentSchema'\"\n          },\n          \"fileToKeyMap\": {\n            \"title\": \"Filetokeymap\",\n            \"type\": \"object\",\n            \"description\": \"Place the data associated with the named keys in files\"\n          },\n          \"unit\": {\n            \"title\": \"Unit\",\n            \"type\": \"string\",\n            \"description\": \"Units, when it refers to a physical quantity\"\n          },\n          \"widget\": {\n            \"title\": \"Widget\",\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Widget\"\n              }\n            ],\n            \"description\": \"custom widget to use instead of the default one determined from the data-type\",\n            \"deprecated\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Base class for service input/outputs\"\n      },\n      \"Structure\": {\n        \"title\": \"Structure\",\n        \"required\": [\n          \"key\",\n          \"label\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"key\": {\n            \"title\": \"Key\",\n            \"anyOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"type\": \"boolean\"\n              },\n              {\n                \"type\": \"number\"\n              }\n            ]\n          },\n          \"label\": {\n            \"title\": \"Label\",\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"TextArea\": {\n        \"title\": \"TextArea\",\n        \"required\": [\n          \"minHeight\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"minHeight\": {\n            \"title\": \"Minheight\",\n            \"exclusiveMinimum\": true,\n            \"type\": \"integer\",\n            \"description\": \"minimum Height of the textarea\",\n            \"minimum\": 0\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ValidationError\": {\n        \"title\": \"ValidationError\",\n        \"required\": [\n          \"loc\",\n          \"msg\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"loc\": {\n            \"title\": \"Location\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"msg\": {\n            \"title\": \"Message\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"title\": \"Error Type\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Widget\": {\n        \"title\": \"Widget\",\n        \"required\": [\n          \"type\",\n          \"details\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/WidgetType\"\n              }\n            ],\n            \"description\": \"type of the property\"\n          },\n          \"details\": {\n            \"title\": \"Details\",\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/components/schemas/TextArea\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/SelectBox\"\n              }\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"WidgetType\": {\n        \"title\": \"WidgetType\",\n        \"enum\": [\n          \"TextArea\",\n          \"SelectBox\"\n        ],\n        \"type\": \"string\",\n        \"description\": \"An enumeration.\"\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/ITISFoundation/osparc-simcore@226c16254c8fab772aa97ba14cbb1eff90b7e25b/-/blob/services/dynamic-sidecar/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/ITISFoundation/osparc-simcore/blob/226c16254c8fab772aa97ba14cbb1eff90b7e25b/services/dynamic-sidecar/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/containers/ports/outputs/dirs\": post: requestBody: contents: application/json: generate schema: field outputs_labels: item: field widget: allOf: field details: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf",
		"unsupported content types"
	]
}