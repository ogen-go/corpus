{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vippsas/vipps-login-api"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "docs/swagger.yaml",
			"byteSize": 33057,
			"content": "openapi: 3.0.0\ninfo:\n  description: \u003e\n    Welcome to the Vipps Login API documentation. You will find documentation\n    for all HTTP APIs here.\n  title: Vipps Login\n  version: 1.0.3\nservers:\n  - url: https://apitest.vipps.no\n  - url: https://api.vipps.no\npaths:\n  /access-management-1.0/access/oauth2/auth:\n    get:\n      description: \u003e-\n        The resource owner (end user) is redirected to this endpoint at the\n        beginning of the authentication process,\n\n        and it is used to obtain an authorization grant.\n\n        To learn more about this endpoint please refer to the specification at https://tools.ietf.org/html/rfc6749#section-3.1\n      tags:\n        - Vipps Login API\n      summary: The OAuth 2.0 authorize endpoint\n      operationId: oauthAuth\n      responses:\n        \"302\":\n          description: Empty response\n        \"401\":\n          description: genericError\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"500\":\n          description: genericError\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /access-management-1.0/access/oauth2/token:\n    post:\n      security:\n        - basic: []\n      description: \u003e-\n        The token endpoint is used by the client to obtain an access token by\n        presenting its authorization grant.\n\n        To learn more about this endpoint please refer to the specification at https://tools.ietf.org/html/rfc6749#section-3.2\n      tags:\n        - Vipps Login API\n      summary: The OAuth 2.0 token endpoint\n      operationId: oauth2Token\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                grant_type:\n                  type: string\n                  example: \n                code:\n                  type: string\n                redirect_uri:\n                  type: string\n                  example: 'https://example.com/vipps-login-result-page'\n                  description: \u003e-\n                    The redirect URL which the user agent is redirected to after finishing a login.\n                    If the URL is using a custom URL scheme, such as myapp://, a path is required: myapp://path-to-something.\n                    The URL must be exactly the same as the one specified on portal.vipps.no.\n                    Be extra careful with trailing slashed and URL-encoded entoities.\n                client_id:\n                  type: string\n              required:\n                - grant_type\n      responses:\n        \"200\":\n          description: oauth2TokenResponse\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OauthTokenResponse\"\n        \"401\":\n          description: genericError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"500\":\n          description: genericError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /vipps-userinfo-api/userinfo:\n    get:\n      security:\n        - oauth2: []\n      description: This endpoint returns the payload with the information that the user has consented to share. Find more info on the `/userinfo` endpoint at the OIDC Standard https://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n      tags:\n        - Userinfo API\n      operationId: userinfoAuthorizationCode\n      parameters:\n        - in: header\n          name: Authorization\n          description: The access token is required to authorize the userinfo request. It should be sent as a Bearer token. The access token is received on a successful request to the token endpoint `POST:/oauth2/token`. In Vipps Login the access token is valid for 1 hour.\n          required: true\n          schema:\n            type: string\n          example: Bearer mM60UNNAQTbLS5aJCeFGUbUYaoJT...\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/UserinfoApiV1'\n                  - $ref: '#/components/schemas/UserinfoApiV2'\n                example:\n                  oneof:\n                    - UserinfoApiV1:\n                        sub: 'c06c4afe-d9e1-4c5d-939a-177d752a0944'\n                        birthdate: '10.12.1815'\n                        email: 'user@example.com'\n                        email_verified: true\n                        nnin: '10121550047'\n                        name: 'Ada Lovelace'\n                        given_name: 'Ada'\n                        family_name: 'Lovelace'\n                        sid: '7d78a726-af92-499e-b857-de263ef9a969'\n                        phone_number: '47912345678'\n                        address:\n                          - street_address: 'Suburbia 23'\n                            postal_code: '2101'\n                            region: 'OSLO'\n                            country: 'NO'\n                            formatted: 'Suburbia 23\\n2101 OSLO\\nNO'\n                            address_type: 'home'\n                            default: true\n                          - street_address: 'Fancy Office Street 2'\n                            postal_code: '0218'\n                            region: 'OSLO'\n                            country: 'NO'\n                            formatted: 'Fancy Office Street 2\\n0218 OSLO\\nNO'\n                            address_type: 'work'\n                            default: false\n                          - street_address: 'Summer House Lane 14'\n                            postal_code: '1452'\n                            region: 'OSLO'\n                            country: 'NO'\n                            formatted: 'Summer House Lane 14\\n1452 OSLO\\nNO'\n                            address_type: 'other'\n                            default: false\n                        accounts:\n                          - account_name: \"My savings\"\n                            account_number: \"12064590675\"\n                            bank_name: \"My bank\"\n                    - UserinfoApiV2:\n                        sub: 'c06c4afe-d9e1-4c5d-939a-177d752a0944'\n                        birthdate: '1815-12-10'\n                        email: 'user@example.com'\n                        email_verified: true\n                        nin: '10121550047'\n                        name: 'Ada Lovelace'\n                        given_name: 'Ada'\n                        family_name: 'Lovelace'\n                        sid: '7d78a726-af92-499e-b857-de263ef9a969'\n                        phone_number: '47912345678'\n                        address:\n                          street_address: 'Suburbia 23'\n                          postal_code: '2101'\n                          region: 'OSLO'\n                          country: 'NO'\n                          formatted: 'Suburbia 23\\n2101 OSLO\\nNO'\n                          address_type: 'home'\n                        other_addresses:\n                          - street_address: 'Fancy Office Street 2'\n                            postal_code: '0218'\n                            region: 'OSLO'\n                            country: 'NO'\n                            formatted: 'Fancy Office Street 2\\n0218 OSLO\\nNO'\n                            address_type: 'work'\n                          - street_address: 'Summer House Lane 14'\n                            postal_code: '1452'\n                            region: 'OSLO'\n                            country: 'NO'\n                            formatted: 'Summer House Lane 14\\n1452 OSLO\\nNO'\n                            address_type: 'other'\n                        accounts:\n                          - account_name: \"My savings\"\n                            account_number: \"12064590675\"\n                            bank_name: \"My bank\"\n\n  /access-management-1.0/access/.well-known/openid-configuration:\n    get:\n      description: \u003e-\n        The well known endpoint can be used to retrieve configuration\n        information for OpenID Connect clients.\n\n        To learn more about this endpoint please refer to the specification at https://openid.net/specs/openid-connect-discovery-1_0.html\n      tags:\n        - Vipps Login API\n      summary: OpenID Connect Discovery\n      operationId: discoverOpenIDConfiguration\n      responses:\n        \"200\":\n          description: wellKnown\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WellKnown\"\n        \"401\":\n          description: genericError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"500\":\n          description: genericError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /access-management-1.0/access/.well-known/jwks.json:\n    get:\n      description: \u003e-\n        This endpoint returns JSON Web Keys to be used as public keys for\n        verifying OpenID Connect ID Tokens and,\n\n        if enabled, OAuth 2.0 JWT Access Tokens.\n      tags:\n        - Vipps Login API\n      summary: JSON Web Keys Discovery\n      operationId: wellKnown\n      responses:\n        \"200\":\n          description: JSONWebKeySet\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JSONWebKeySet\"\n        \"500\":\n          description: genericError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\ncomponents:\n  securitySchemes:\n    basic:\n      type: http\n      scheme: basic\n    oauth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://base_url/oauth2/auth\n          tokenUrl: https://base_url/oauth2/token\n          scopes:\n            openid: Request an OpenID Connect ID Token\n  schemas:\n    JSONWebKey:\n      type: object\n      required:\n        - use\n        - kty\n        - kid\n        - alg\n      properties:\n        alg:\n          description: The 'alg' (algorithm) parameter identifies the algorithm intended\n            for use for the key.  The values used should either be registered in\n            the IANA 'JSON Web Signature and Encryption Algorithms' registry\n            established by [JWA] or be a value that contains a collision\n            resistant name.\n          type: string\n          example: RS256\n        crv:\n          type: string\n          example: P-256\n        d:\n          type: string\n          example: T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE\n        dp:\n          type: string\n          example: G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0\n        dq:\n          type: string\n          example: s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk\n        e:\n          type: string\n          example: AQAB\n        k:\n          type: string\n          example: GawgguFyGrWKav7AX4VKUg\n        kid:\n          description: |-\n            The \"kid\" (key ID) parameter is used to match a specific key. This\n            is used, for example, to choose among a set of keys within a JWK Set\n            during key rollover. The format of the \"kid\" value is\n            unspecified.  When \"kid\" values are used within a JWK Set, different\n            keys within the JWK Set SHOULD use distinct \"kid\" values.  (One\n            example in which different keys might use the same \"kid\" value is if\n            they have different \"kty\" (key type) values but are considered to be\n            equivalent alternatives by the application using them.)  The \"kid\"\n            value is a case-sensitive string.\n          type: string\n          x-go-name: Kid\n          example: 1603dfe0af8f4596\n        kty:\n          description: \u003e-\n            The \"kty\" (key type) parameter identifies the cryptographic\n            algorithm\n\n            family used with the key, such as \"RSA\" or \"EC\". \"kty\" values should\n\n            either be registered in the IANA \"JSON Web Key Types\" registry\n\n            established by [JWA] or be a value that contains a Collision-\n\n            Resistant Name.  The \"kty\" value is a case-sensitive string.\n          type: string\n          example: RSA\n        n:\n          type: string\n          example: vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0\n        p:\n          type: string\n          example: 6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ\n        q:\n          type: string\n          example: 0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ\n        qi:\n          type: string\n          example: GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU\n        use:\n          description: \u003e-\n            Use (\"public key use\") identifies the intended use of\n\n            the public key. The \"use\" parameter is employed to indicate whether\n\n            a public key is used for encrypting data or verifying the signature\n\n            on data. Values are commonly \"sig\" (signature) or \"enc\" (encryption).\n          type: string\n          example: sig\n        x:\n          type: string\n          example: f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU\n        x5c:\n          description: \u003e-\n            The \"x5c\" (X.509 certificate chain) parameter contains a chain of\n            one\n\n            or more PKIX certificates [RFC5280].  The certificate chain is\n\n            represented as a JSON array of certificate value strings.  Each\n\n            string in the array is a base64-encoded (Section 4 of [RFC4648] --\n\n            not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.\n\n            The PKIX certificate containing the key value MUST be the first\n\n            certificate.\n          type: array\n          items:\n            type: string\n        y:\n          type: string\n          example: x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0\n    JSONWebKeySet:\n      type: object\n      properties:\n        keys:\n          description: The value of the 'keys' parameter is an array of JWK values.  By\n            default, the order of the JWK values within the array does not imply\n            an order of preference among them, although applications of JWK Sets\n            can choose to assign a meaning to the order for their purposes, if\n            desired.\n          type: array\n          items:\n            $ref: \"#/components/schemas/JSONWebKey\"\n    WellKnown:\n      description: It includes links to several endpoints (e.g. /oauth2/token) and exposes\n        information on supported signature algorithms among others.\n      type: object\n      title: WellKnown\n      required:\n        - authorization_endpoint\n        - id_token_signing_alg_values_supported\n        - issuer\n        - jwks_uri\n        - response_types_supported\n        - subject_types_supported\n        - token_endpoint\n      properties:\n        authorization_endpoint:\n          description: URL of the OP's OAuth 2.0 Authorization Endpoint.\n          type: string\n          example: https://apitest.vipps.no/access-management-1.0/access/oauth2/auth\n        claims_parameter_supported:\n          description: Boolean value specifying whether the OP supports use of the claims\n            parameter, with true indicating support.\n          type: boolean\n          example: false\n        claims_supported:\n          description: JSON array containing a list of the Claim Names of the Claims that\n            the OpenID Provider MAY be able to supply values for. Note that for\n            privacy or other reasons, this might not be an exhaustive list.\n          type: array\n          items:\n            type: string\n            example:\n              - sub\n        grant_types_supported:\n          description: JSON array containing a list of the OAuth 2.0 Grant Type values that\n            this OP supports.\n          type: array\n          items:\n            type: string\n            example:\n              - openid\n              - name\n              - phoneNumber\n              - address\n              - birthDate\n              - email\n        id_token_signing_alg_values_supported:\n          description: JSON array containing a list of the JWS signing algorithms (alg\n            values) supported by the OP for the ID Token to encode the Claims in\n            a JWT.\n          type: array\n          items:\n            type: string\n            example:\n              - RS256\n        issuer:\n          description: URL using the https scheme with no query or fragment component that\n            the OP asserts as its IssuerURL Identifier. If IssuerURL discovery\n            is supported , this value MUST be identical to the issuer value\n            returned by WebFinger. This also MUST be identical to the iss Claim\n            value in ID Tokens issued from this IssuerURL.\n          type: string\n          example: https://apitest.vipps.no/access-management-1.0/access/\n        jwks_uri:\n          description: URL of the OP's JSON Web Key Set [JWK] document. This contains the\n            signing key(s) the RP uses to validate signatures from the OP. The\n            JWK Set MAY also contain the Server's encryption key(s), which are\n            used by RPs to encrypt requests to the Server. When both signing and\n            encryption keys are made available, a use (Key Use) parameter value\n            is REQUIRED for all keys in the referenced JWK Set to indicate each\n            key's intended usage. Although some algorithms allow the same key to\n            be used for both signatures and encryption, doing so is NOT\n            RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be used\n            to provide X.509 representations of keys provided. When used, the\n            bare key values MUST still be present and MUST match those in the\n            certificate.\n          type: string\n          example: https://apitest.vipps.no/access-management-1.0/access/.well-known/jwks.json\n        request_parameter_supported:\n          description: Boolean value specifying whether the OP supports use of the request\n            parameter, with true indicating support.\n          type: boolean\n          example: true\n        request_uri_parameter_supported:\n          description: Boolean value specifying whether the OP supports use of the\n            request_uri parameter, with true indicating support.\n          type: boolean\n          example: true\n        require_request_uri_registration:\n          description: Boolean value specifying whether the OP requires any request_uri\n            values used to be pre-registered using the request_uris registration\n            parameter.\n          type: boolean\n          example: true\n        response_modes_supported:\n          description: JSON array containing a list of the OAuth 2.0 response_mode values\n            that this OP supports.\n          type: array\n          items:\n            type: string\n            example:\n              - query\n        response_types_supported:\n          description: JSON array containing a list of the OAuth 2.0 response_type values\n            that this OP supports.\n          type: array\n          items:\n            type: string\n            example:\n              - code\n        scopes_supported:\n          description: JSON array containing a list of the OAuth 2.0 [RFC6749] scope values\n            that this server supports. The server MUST support the openid scope\n            value. Servers MAY choose not to advertise some supported scope\n            values even when this parameter is used.\n          type: array\n          items:\n            type: string\n            example:\n              - openid\n              - address\n              - name\n              - email\n              - phoneNumber\n              - nnin\n              - birthDate\n        subject_types_supported:\n          description: JSON array containing a list of the Subject Identifier types that\n            this OP supports. Valid types include pairwise and public.\n          type: array\n          items:\n            type: string\n            example:\n              - pairwise\n        token_endpoint:\n          description: URL of the OP's OAuth 2.0 Token Endpoint\n          type: string\n        token_endpoint_auth_methods_supported:\n          description: JSON array containing a list of Client Authentication methods\n            supported by this Token Endpoint. The options are\n            client_secret_post, client_secret_basic, client_secret_jwt, and\n            private_key_jwt, as described in Section 9 of OpenID Connect Core\n            1.0\n          type: array\n          items:\n            type: string\n            example:\n              - client_secret_basic\n              - client_secret_post\n        userinfo_endpoint:\n          description: URL of the OP's UserInfo Endpoint.\n          type: string\n          example: https://apitest.vipps.no/access-management-1.0/access/userinfo\n        userinfo_signing_alg_values_supported:\n          description: JSON array containing a list of the JWS [JWS] signing algorithms\n            (alg values) [JWA] supported by the UserInfo Endpoint to encode the\n            Claims in a JWT [JWT].\n          type: array\n          items:\n            type: string\n            example:\n              - RS256\n    UserinfoApiV1:\n      type: object\n      properties:\n        accounts:\n          description: 'Contains an array with the end user''s accounts registered in the Vipps app'\n          type: array\n          items:\n            $ref: '#/components/schemas/AccountInfoApi'\n        address:\n          description: 'Contains an array with the end users addresses. This list will always contain an address with the address_type home, but can also contain a work and/or other address if the user has registered them in the Vipps app'\n          type: array\n          items:\n            $ref: '#/components/schemas/AddressApi'\n        birthdate:\n          description: 'End-User''s birthday formatted as DD.MM.YYYY'\n          type: string\n          example: '31.12.2000'\n        email:\n          description: 'End user''s email address.'\n          type: string\n        email_verified:\n          description: 'Boolean value if the End user''s email address is verified.'\n          type: boolean\n        family_name:\n          description: 'Surname(s) or last name(s) of the end user.'\n          type: string\n        given_name:\n          description: 'Given name(s) or first name(s) of the end user. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.'\n          type: string\n        name:\n          description: 'End user''s full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User''s locale and preferences.'\n          type: string\n        nnin:\n          description: 'Norwegian national identity number'\n          type: string\n          example: '09057517287'\n          pattern: '^\\d{11}$'\n        phone_number:\n          description: 'End-User''s telephone number on MSISDN format, up to 15 digits.'\n          type: string\n          example: ´47912345678'\n          pattern: '^\\d{15}$'\n        sid:\n          description: 'Session identifier - This represents a Session of a User Agent or device. Currently not in use'\n          type: string\n          example: '7d78a726-af92-499e-b857-de263ef9a969'\n        sub:\n          description: 'Subject - Identifier for the end user'\n          type: string\n          example: 'c06c4afe-d9e1-4c5d-939a-177d752a0944'\n    UserinfoApiV2:\n      type: object\n      properties:\n        accounts:\n          description: 'Contains an array with the end user''s accounts registered in the Vipps app'\n          type: array\n          items:\n            $ref: '#/components/schemas/AccountInfoApi'\n        address:\n          description: 'Contains the end user''s preferred addresses.'\n          items:\n            $ref: '#/components/schemas/AddressApi'\n        other_addresses:\n          description: 'Contains an array with the end user''s none default addresses, if any. This list can contain an address with the address_type home, work, and/or other, if the user has registered them in the Vipps app'\n          type: array\n          items:\n            $ref: '#/components/schemas/AddressApi'\n        birthdate:\n          description: 'End-User''s birthday formatted as YYYY-MM-DD'\n          type: string\n          example: '2000-12-31'\n        email:\n          description: 'End user''s email address.'\n          type: string\n        email_verified:\n          description: 'Boolean value if the End user''s email address is verified.'\n          type: boolean\n        family_name:\n          description: 'Surname(s) or last name(s) of the end user.'\n          type: string\n        given_name:\n          description: 'Given name(s) or first name(s) of the end user. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.'\n          type: string\n        name:\n          description: 'End user''s full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User''s locale and preferences.'\n          type: string\n        nin:\n          description: 'National identity number'\n          type: string\n          example: '09057517287'\n          pattern: '^\\d{11}$'\n        phone_number:\n          description: 'End-User''s telephone number on MSISDN format, up to 15 digits.'\n          type: string\n          example: '47912345678'\n          pattern: '^\\d{15}$'\n        sid:\n          description: 'Session identifier - This represents a Session of a User Agent or device. Currently not in use'\n          type: string\n          example: '7d78a726-af92-499e-b857-de263ef9a969'\n        sub:\n          description: 'Subject - Identifier for the end user'\n          type: string\n          example: 'c06c4afe-d9e1-4c5d-939a-177d752a0944'\n    AccountInfoApi:\n      type: object\n      properties:\n        account_name:\n          description: \"User''s defined name for account\"\n          type: string\n        account_number:\n          description: \"User''s account number\"\n          type: string\n        bank_name:\n          description: \"Bank connected to the account number\"\n          type: string\n    AddressApi:\n      type: object\n      properties:\n        address_type:\n          description: 'Address type is either home, work or other'\n          type: string\n        country:\n          description: 'Two letter country code'\n          type: string\n        default:\n          description: 'If this is default address'\n          type: boolean\n        formatted:\n          description: 'End user address as a formatted string'\n          type: string\n        postal_code:\n          description: 'Postal code'\n          type: string\n        region:\n          description: 'End user region'\n          type: string\n        street_address:\n          description: 'End user street address'\n          type: string\n    OauthTokenResponse:\n      description: The token response\n      type: object\n      properties:\n        access_token:\n          description: The access token issued by the authorization server.\n          type: string\n        expires_in:\n          description: \u003e-\n            The lifetime in seconds of the access token.  For example, the value\n            \"3600\" denotes that the access token will\n\n            expire in one hour from the time the response was generated.\n          type: integer\n          format: int64\n        id_token:\n          description: To retrieve a refresh token request the id_token scope.\n          type: integer\n          format: int64\n        refresh_token:\n          description: \u003e-\n            The refresh token, which can be used to obtain new\n\n            access tokens. To retrieve it add the scope \"offline\" to your access token request.\n          type: string\n        scope:\n          description: The scope of the access token\n          type: string\n        token_type:\n          description: The type of the token issued\n          type: string\n      example:\n        access_token: shxuQPSLpKAiBrgD-HPbgDWc3RHzcXq3skcydKwRroo.Y5aH3PavJkZnSq5dffj8AmKVE-SdwRcbKhUKkmqimoQ\n        expires_in: 3599\n        id_token: eyJhbGciOiJSUzI1NiIsImtpZCI6InB1YmxpYzo2ZjIxMTlkZS03ZWY4LTQ0NDQtYjNkYy1lNDNiYWY2MDUwMGYifQ.eyJhdF9oYXNoIjoiUGpLVVQ0VUpFYkZWY05MempyOVppQSIsImF1ZCI6WyJlZGRkYjMyZi01MDI4LTQzOTctYjBhYi1lOGVjZjIxOGZkYzIiXSwiYXV0aF90aW1lIjoxNjQzMTIwMjA0LCJleHAiOjE2NDMxMjM4MDUsImlhdCI6MTY0MzEyMDIwNSwiaXNzIjoiaHR0cHM6Ly9lY2U0NmVjNC02ZjljLTQ4OWItOGZlNS0xNDZhODllMTE2MzUudGVjaC0wMi5uZXQvYWNjZXNzLW1hbmFnZW1lbnQtMS4wL2FjY2Vzcy8iLCJqdGkiOiI1MzM2NzJlYi1lY2M0LTQ0OTQtYjM4NS02NWY2MGJkMTk1YTciLCJub25jZSI6IjU4OTU0MTFlLWU5MzAtNDMyYS05ZWIzLWQzYTAzODhlMWIzOSIsInJhdCI6MTY0MzEyMDAwNywic2lkIjoiYWJlMjIzOTUtZThkNC00ODFlLThjZDItNTU0YmYwOWY0MzJmIiwic3ViIjoiNjNkODMwM2YtNDFkNS00MTUwLTllMzMtMGEzOWVkODE4NTZjIn0.Nejx0nIAPhGjDAOKIpLUVK2bcfTmUr7JfKU8V_7SHUdLGFjSHmDSXkAqYIL_oFXmTQsBrVXTQO-yjL6WGpR5nrpYPHzpY7hMUj00VQ1KTd9gwoMk6uBDvXAnSN7O-cNqC0ehZAlZ6ofR9TwDn03fhS1UcxhLnFq9phzxKD4q7EgBkHOQiwv90M8ZvrZMqdwtdjqIOABks0tVcYlQFKKDDrij0Df90vrFR-coAZeXJzRGsMUivvZlkwlYEQAlTx2BxBT2WqJr407DX-W0k0mj7QPnPQNV-0qT0VLJ6liUwFUi6MQrQ01yosrHwrmwY-0f_GwDDSPp4HizkTmT_CecQy9CLsbnASrcBurpLvjl9bfxXiYtZvvDlxyoyjMd05z94MmuADvM-nIWztKHIbU4ez6qRS1uyMPN2P9-_wzD7Tj2RCrAfSHlgTrx-grhqdkIqcVKdx8RVj5cmmbLDsmgfwLdM0m5Z_QYmctxq7TsLWm0x2A2-rbxlAma5USRDfPpzWBwbZDbJygXEIccGUwgG7SK6XHeTblHmgz87Tx7yfqTw9YSYbzxjnCCBwCXlKUUcHOLMRF_L0BwTBaNaFtYfgc5ne68Ej0V2Mz_BodR3OpRnukTdb1_nXAbDs4JiKhM22aR3R7qopAUnhUAFbde2q1sfwGr-b21a4NgEaWtFwk\n        token_type: bearer\n        scope: openid name phoneNumber address birthDate email\n    ErrorResponse:\n      description: Error responses are sent when an error (e.g. unauthorized, bad request,\n        ...) occurred.\n      type: object\n      title: ErrorResponse\n      required:\n        - error\n      properties:\n        error:\n          description: Name is the error name.\n          type: string\n        error_code:\n          description: Code represents the error status code (404, 403, 401, ...).\n          type: integer\n          format: int64\n        error_debug:\n          description: Debug contains debug information. This is usually not available and\n            has to be enabled.\n          type: string\n      example:\n        error: invalid_request\n        error_code: 400\n        error_debug: The request is missing a required parameter, includes an invalid\n          parameter or is otherwise malformed.\n",
			"canonicalURL": "/github.com/vippsas/vipps-login-api@9e4017867f27e40487079a0426153b785de562ec/-/blob/docs/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/vippsas/vipps-login-api/blob/9e4017867f27e40487079a0426153b785de562ec/docs/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/access-management-1.0/access/oauth2/auth\": get: responses: 401: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"oauth2 security",
		"unsupported content types"
	]
}