{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/HumanCellAtlas/fusillade"
		},
		"file": {
			"name": "fusillade-api.yml",
			"size": 0,
			"path": "fusillade-api.yml",
			"byteSize": 53858,
			"content": "openapi: 3.0.0\ninfo:\n  title: Fusillade app demo\n  description: |\n    Human Cell Atlas Data Coordination Platform Fusillade app demo\n\n    Log in: [Auth0](/login?state=ABC\u0026redirect_uri=https://$API_DOMAIN_NAME/internal/echo)\n\n    [OIDC spec](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n    # Pagination\n    The Fusillade API supports pagination in a manner consistent with the\n    [GitHub API](https://developer.github.com/v3/guides/traversing-with-pagination/),\n    which is based on [RFC 5988](https://tools.ietf.org/html/rfc5988). When the\n    results of an API call exceed the page size specified, the HTTP response will\n    contain a `Link` header of the following form:\n    `Link: \u003chttps://auth.data.humancellatlas.org/v1/users?per_page=30\u0026next_token=123\u003e; rel=\"next\"`.\n    The URL in the header refers to the next page of the results to be fetched;\n    if no `Link rel=\"next\"` URL is included, then all results have been fetched.\n    The client should recognize and parse the `Link` header appropriately according\n    to RFC 5988, and retrieve the next page if requested by the user, or if all\n    results are being retrieved.\n    Additional Pagination Headers are returned to assist with client pagination these are:\n    `X-OpenAPI-Pagination` - boolean that indicates if there are more pages.\n    `X-OpenAPI-Paginated-Content-Key` - string that indicates which key in the response will be paged.\n\n  version: $FUS_VERSION\nservers:\n  - url: https://$API_DOMAIN_NAME\npaths:\n  /login:\n    get:\n      summary: Establish the users identity using the OIDC provider\n      description: Send the user agent to an identity provider selector and\n        generate a user account to establish the user's identity. This is a\n        redirect endpoint.\n      operationId: fusillade.api.oauth.login\n      tags:\n        - oauth\n      parameters:\n        - name: redirect_uri\n          description: Where to redirect to once login is complete.\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: state\n          description: An opaque parameter that is returned back to the `redirect_uri`.\n          in: query\n          schema:\n            type: string\n      responses:\n        301:\n          description: OK.\n        default:\n          description: Unexpected error.\n  /logout:\n    get:\n      summary: Logout the user from current sessions with the OIDC provider.\n      description: Logout the user from current sessions with the OIDC provider. You can log the users out from a\n        specific application if the you know the client_id for the application. Otherwise the user will be logged out\n        of the default application by oauth2_config.\n      operationId: fusillade.api.oauth.logout\n      tags:\n        - oauth\n      parameters:\n        - name: client_id\n          in: query\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK.\n        default:\n          description: Unexpected error.\n  /.well-known/openid-configuration:\n    get:\n      summary: See documentation at\n        [Provider Config](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig)\n      description: This endpoint is part of OIDC, see documentation at\n        [Provider Config](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig)\n      tags:\n        - oauth\n      parameters:\n        - in: header\n          name: host\n          schema:\n            type: string\n            default: $API_DOMAIN_NAME\n          required: true\n          description: Must be `$API_DOMAIN_NAME`.\n      operationId: fusillade.api.oauth.serve_openid_config\n      responses:\n        200:\n          description: Returns the supported openid endpoints.\n  /.well-known/jwks.json:\n    get:\n      summary: This endpoint is part of OIDC\n      description: Provide the public key used to sign all JWTs minted by the OIDC provider.\n        See [JSON Web Key Set](https://auth0.com/docs/jwks) for more info.\n      tags:\n        - oauth\n      operationId: fusillade.api.oauth.serve_jwks_json\n      responses:\n        200:\n          description: Returns the well known jwks.\n  /oauth/authorize:\n    get:\n      summary: See [Auth Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest)\n      description: This endpoint is part of OIDC and is used to redirect to an openid provider.\n        See [Auth Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest)\n      operationId: fusillade.api.oauth.authorize\n      tags:\n        - oauth\n      parameters:\n        - name: redirect_uri\n          in: query\n          schema:\n            type: string\n        - name: state\n          in: query\n          schema:\n            type: string\n        - name: client_id\n          in: query\n          schema:\n            type: string\n        - name: scope\n          in: query\n          schema:\n            type: string\n        - name: respone_type\n          in: query\n          schema:\n            type: string\n        - name: nonce\n          in: query\n          schema:\n            type: string\n        - name: prompt\n          in: query\n          schema:\n            type: string\n      responses:\n        302:\n          description: Redirecting to authentication server.\n          headers:\n            Location:\n              schema:\n                type: string\n        default:\n          description: Unexpected error.\n  /oauth/revoke:\n    post:\n      summary: Revoke a refresh token\n      description: Revokes a refresh token from a client making all future token refresh requests fail.\n      operationId: fusillade.api.oauth.revoke\n      tags:\n        - oauth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - client_id\n                - token\n              properties:\n                client_id:\n                  type: string\n                token:\n                  type: string\n                  description: The refresh token to revoke.\n      responses:\n        200:\n          description: OK.\n        default:\n          description: Unexpected error.\n  /oauth/token:\n    post:\n      summary: Retrieve the authentications token\n      description: This endpoint is part of OIDC and is used to redirect to an openid provider.\n        See [Token Endpoint](https://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint), and\n        [Refresh Tokens](https://openid.net/specs/openid-connect-core-1_0.html#RefreshTokens)\n      operationId: fusillade.api.oauth.serve_oauth_token\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                redirect_uri:\n                  description: Where to redirect to once login is complete.\n                  type: string\n                code:\n                  description: The code used to retrieve an access token from OIDC authentication flow.\n                  type: string\n                grant_type:\n                  description: The type of grant requested.\n                  type: string\n                client_id:\n                  type: string\n                client_secret:\n                  type: string\n                refresh_token:\n                  type: string\n                scope:\n                  type: string\n\n      tags:\n        - oauth\n      responses:\n        302:\n          description: OK.\n          headers:\n            Cache-Control:\n              schema:\n                type: string\n            Pragma:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: object\n        default:\n          description: Unexpected error.\n  /oauth/userinfo:\n    get:\n      summary: See [User Info](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo)\n      description: This endpoint is part of OIDC and is used to redirect to an openid provider.\n        See [User Info](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo)\n      operationId: fusillade.api.oauth.get_userinfo\n      security:\n        - BearerAuth: []\n      tags:\n        - oauth\n      responses:\n        200:\n          $ref: '#/components/responses/userinfo'\n        401:\n          $ref: '#/components/responses/401'\n    post:\n      summary: See [User Info](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo)\n      description: This endpoint is part of OIDC and is used to redirect to an openid provider.\n        See [User Info](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo)\n      operationId: fusillade.api.oauth.post_userinfo\n      security:\n        - BearerAuth: []\n      tags:\n        - oauth\n      responses:\n        200:\n          $ref: '#/components/responses/userinfo'\n        401:\n          $ref: '#/components/responses/401'\n  /echo:\n    get:\n      summary: echoes the response\n      description: Echoes the response back.\n      operationId: fusillade.api.internal.echo\n      responses:\n        200:\n          description: Echo.\n  /v1/policies/evaluate:\n    post:\n      summary: Evaluate a user's permissions\n      description: Given a set of principals, actions, and resources, return a\n        set of access control decisions.\n      operationId: fusillade.api.evaluate.evaluate_policy_api\n      security:\n        - BearerAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - principal\n                - action\n                - resource\n              type: object\n              properties:\n                principal:\n                  description: Attested user identifier.\n                  type: string\n                action:\n                  description: The action the principal is attempting to perform.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/policy_action'\n                resource:\n                  description: The resource the principal will perform the action against.\n                  type: array\n                  maxItems: 1\n                  minItems: 1\n                  items:\n                    $ref: '#/components/schemas/resource_name'\n      responses:\n        200:\n          description: The result of the policy evaluation.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: boolean\n                  reason:\n                    type: string\n        default:\n          description: Unexpected error.\n  /v1/users:\n    get:\n      summary: List users\n      description: Paginate through all users.\n      operationId: fusillade.api.users.get_users\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/per_page'\n      responses:\n        200:\n          $ref: '#/components/responses/200_paged'\n        206:\n          $ref: '#/components/responses/206'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n      tags:\n        - user\n  /v1/user:\n    post:\n      summary: Create a new user\n      description: Create a new user with the specified groups, roles, and iam policy.\n      operationId: fusillade.api.users.post_user\n      security:\n        - BearerAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - user_id\n              type: object\n              properties:\n                user_id:\n                  $ref: '#/components/schemas/custom_identifier'\n                groups:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/custom_identifier'\n                roles:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/custom_identifier'\n                policy:\n                  $ref: '#/components/schemas/policy_document'\n      tags:\n        - user\n      responses:\n        201:\n          description: User was created.\n        401:\n          $ref: '#/components/responses/401'\n        default:\n          description: Unexpected error.\n  /v1/user/{user_id}:\n    get:\n      summary: Retrieve information about a user\n      description: Retrieve information about the user's status and the policies attached.\n      operationId: fusillade.api.users.get_user\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/user_id'\n      tags:\n        - user\n      responses:\n        200:\n          description: Information about the user is returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n    put:\n      summary: Modify user status\n      description: Enable or disable a user. A disabled user will return false\n        for all evaluations with that user as principal.\n      operationId: fusillade.api.users.put_user\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/user_id'\n        - $ref: '#/components/parameters/user_status'\n      tags:\n        - user\n      responses:\n        200:\n          description: Status set.\n        401:\n          $ref: '#/components/responses/401'\n        default:\n          description: Unexpected error.\n  /v1/user/{user_id}/owns:\n    get:\n      summary: Retrieve the resources owned by the user\n      description: Paginate through a list of resources owned by a user.\n      operationId: fusillade.api.users.get_users_owns\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/user_id'\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/resource_type'\n      tags:\n        - user\n      responses:\n        200:\n          $ref: '#/components/responses/200_paged'\n        206:\n          $ref: '#/components/responses/206'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n  /v1/user/{user_id}/groups:\n    get:\n      summary: Retrieve group(s) for a user\n      description: Paginate through a list of groups of which a user is a member.\n      operationId: fusillade.api.users.get_users_groups\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/user_id'\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/per_page'\n      tags:\n        - user\n      responses:\n        200:\n          $ref: '#/components/responses/200_paged'\n        206:\n          $ref: '#/components/responses/206'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n    put:\n      summary: Add or remove a user from group(s)\n      description: Modify group(s) in which a user is a member.\n      operationId: fusillade.api.users.put_users_groups\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/user_id'\n        - $ref: '#/components/parameters/action'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/groups'\n      tags:\n        - user\n      responses:\n        200:\n          description: Action successful.\n        401:\n          $ref: '#/components/responses/401'\n        304:\n          description: The user is already a member of this group.\n        default:\n          description: Unexpected error.\n  /v1/user/{user_id}/roles:\n    get:\n      summary: Retrieve roles a user is in\n      description: Paginate through all roles attached to a user.\n      operationId: fusillade.api.users.get_users_roles\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/user_id'\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/per_page'\n      tags:\n        - user\n      responses:\n        200:\n          $ref: '#/components/responses/200_paged'\n        206:\n          $ref: '#/components/responses/206'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n    put:\n      summary: Add or remove user from role(s)\n      description: Modify the role(s) attached to a user.\n      operationId: fusillade.api.users.put_users_roles\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/user_id'\n        - $ref: '#/components/parameters/action'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/roles'\n      tags:\n        - user\n      responses:\n        200:\n          description: Action successful.\n        401:\n          $ref: '#/components/responses/401'\n        304:\n          description: The user already has this role attached.\n        default:\n          description: Unexpected error.\n  /v1/user/{user_id}/policy:\n    put:\n      summary: Modify policy\n      description: Modify or add the user's IAM policy.\n      operationId: fusillade.api.users.put_user_policy\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/user_id'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                policy:\n                  $ref: '#/components/schemas/policy_document'\n      responses:\n        200:\n          description: Policy modified.\n        401:\n          $ref: '#/components/responses/401'\n        default:\n          description: Unexpected error.\n      tags:\n        - user\n  /v1/groups:\n    get:\n      summary: List groups\n      description: Paginate through all groups.\n      operationId: fusillade.api.groups.get_groups\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/per_page'\n      responses:\n        200:\n          $ref: '#/components/responses/200_paged'\n        206:\n          $ref: '#/components/responses/206'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n      tags:\n        - group\n  /v1/group:\n    post:\n      summary: Create a new group\n      description: Create a new group, attach an IAM policy, and assign roles.\n      operationId: fusillade.api.groups.post_group\n      security:\n        - BearerAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  required:\n                    - group_id\n                  properties:\n                    group_id:\n                      $ref: '#/components/schemas/custom_identifier'\n                    policy:\n                      $ref: '#/components/schemas/policy_document'\n                - $ref: '#/components/schemas/roles'\n      responses:\n        201:\n          description: Group was successfully created.\n        401:\n          $ref: '#/components/responses/401'\n        default:\n          description: Unexpected error.\n      tags:\n        - group\n  /v1/group/{group_id}:\n    get:\n      summary: Get properties of a group\n      description: Get properties of a group, including the group's IAM policy.\n      operationId: fusillade.api.groups.get_group\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/group_id'\n      responses:\n        200:\n          description: Information about the group was successfully returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n      tags:\n        - group\n    delete:\n      summary: Remove a group from the system\n      description: Remove all users, policies, and roles from the group, and delete the group.\n      operationId: fusillade.api.groups.delete_group\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/group_id'\n      responses:\n        200:\n          description: Group was successfully deleted.\n        401:\n          $ref: '#/components/responses/401'\n        default:\n          description: Unexpected error.\n      tags:\n        - group\n  /v1/group/{group_id}/roles:\n    get:\n      summary: Retrieve role(s) for a group\n      description: Paginate through all roles assigned to the group.\n      operationId: fusillade.api.groups.get_groups_roles\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/group_id'\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/per_page'\n      responses:\n        200:\n          description: All roles have been successfully returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/roles'\n        206:\n          $ref: '#/components/responses/206'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n      tags:\n        - group\n    put:\n      summary: Add or remove a group from role(s)\n      description: Modify the role(s) assigned to a group.\n      operationId: fusillade.api.groups.put_groups_roles\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/group_id'\n        - $ref: '#/components/parameters/action'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/roles'\n      responses:\n        200:\n          description: Action successful.\n        401:\n          $ref: '#/components/responses/401'\n        304:\n          description: The group already has this role attached.\n        default:\n          description: Unexpected error.\n      tags:\n        - group\n  /v1/group/{group_id}/users:\n    get:\n      summary: Retrieve user(s) in a group\n      description: Paginate through all users in a group.\n      operationId: fusillade.api.groups.get_group_users\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/group_id'\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/per_page'\n      responses:\n        200:\n          description: All users have been returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/users'\n        206:\n          $ref: '#/components/responses/206'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n      tags:\n        - group\n    put:\n      summary: Add or remove user(s) from a group\n      description: Modify the user(s) assigned to a group.\n      operationId: fusillade.api.groups.put_groups_users\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/group_id'\n        - $ref: '#/components/parameters/action'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                users:\n                  type: array\n                  minItems: 1\n                  maxItems: 10\n                  items:\n                    $ref: '#/components/schemas/custom_identifier'\n      responses:\n        200:\n          description: Action successful.\n        401:\n          $ref: '#/components/responses/401'\n        304:\n          description: One or more users is already in this group.\n        default:\n          description: Unexpected error.\n      tags:\n        - group\n  /v1/group/{group_id}/policy:\n    put:\n      summary: Modify policy\n      description: Modify or create a policy attached to a group.\n      operationId: fusillade.api.groups.put_group_policy\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/group_id'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                policy:\n                  $ref: '#/components/schemas/policy_document'\n      responses:\n        200:\n          description: Policy modified.\n        401:\n          $ref: '#/components/responses/401'\n        default:\n          description: Unexpected error.\n      tags:\n        - group\n  /v1/roles:\n    get:\n      summary: List roles\n      description: Paginate through all roles.\n      operationId: fusillade.api.roles.get_roles\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/per_page'\n      responses:\n        200:\n          $ref: '#/components/responses/200_paged'\n        206:\n          $ref: '#/components/responses/206'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n      tags:\n        - role\n  /v1/role:\n    post:\n      summary: Create a new role\n      description: Create a new role and attach a IAM policy.\n      operationId: fusillade.api.roles.post_role\n      security:\n        - BearerAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - role_id\n                - policy\n              properties:\n                role_id:\n                  $ref: '#/components/schemas/custom_identifier'\n                policy:\n                  $ref: '#/components/schemas/policy_document'\n      responses:\n        201:\n          description: Role was created.\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        409:\n          $ref: '#/components/responses/409'\n        default:\n          description: Unexpected error.\n      tags:\n        - role\n  /v1/role/{role_id}:\n    get:\n      summary: Get properties of a role\n      description: Get properties of a role.\n      operationId: fusillade.api.roles.get_role\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/role_id'\n      responses:\n        200:\n          description: Information about the role is returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n      tags:\n        - role\n    delete:\n      summary: Remove a role from the system\n      description: Remove the role from all users and groups, and finally delete the role.\n      operationId: fusillade.api.roles.delete_role\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/role_id'\n      responses:\n        200:\n          description: Role was deleted.\n        401:\n          $ref: '#/components/responses/401'\n        default:\n          description: Unexpected error.\n      tags:\n        - role\n  /v1/role/{role_id}/policy:\n    put:\n      summary: Modify policy\n      description: Modify the IAM policy attached to the role.\n      operationId: fusillade.api.roles.put_role_policy\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/role_id'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                policy:\n                  $ref: '#/components/schemas/policy_document'\n      responses:\n        200:\n          description: Policy modified.\n        401:\n          $ref: '#/components/responses/401'\n        default:\n          description: Unexpected error.\n      tags:\n        - role\n  /v1/resources:\n    get:\n      summary:  List available resource types\n      description: List available resource types\n      operationId: fusillade.api.resources.get\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/per_page'\n      responses:\n        200:\n          $ref: '#/components/responses/200_paged'\n        206:\n          $ref: '#/components/responses/206'\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        default:\n          description: Unexpected error.\n      tags:\n        - resource\n  /v1/resource/{resource_type_name}:\n    get:\n      summary: List all resources for this resource type\n      description: List all resources for this resource type\n      operationId: fusillade.api.resource.resource_type_name.get\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/per_page'\n      responses:\n        200:\n          $ref: '#/components/responses/200_paged'\n        206:\n          $ref: '#/components/responses/206'\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n      tags:\n        - resource\n    post:\n      summary: Create a new resource type.\n      description: Create a new resource type.\n      operationId: fusillade.api.resource.resource_type_name.post\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  properties:\n                    owner_policy:\n                      $ref: '#/components/schemas/policy_document'\n                - $ref: '#/components/schemas/policy_actions'\n      responses:\n        201:\n          description: The new resource type has been created.\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        409:\n          $ref: '#/components/responses/409'\n        default:\n          description: Unexpected error.\n      tags:\n        - resource\n    delete:\n      summary: Delete an existing resource type.\n      description: Delete an existing resource type if there are no ids of that resource type stored.\n      operationId: fusillade.api.resource.resource_type_name.delete\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n      responses:\n        201:\n          description: The resource has been deleted.\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        409:\n          $ref: '#/components/responses/Resource_not_empty'\n        default:\n          description: Unexpected error.\n      tags:\n        - resource\n  /v1/resource/{resource_type_name}/actions:\n    get:\n      summary: List all actions for this resource type.\n      description: List all actions for this resource type.\n      operationId: fusillade.api.resource.resource_type_name.actions.get\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/policy_actions'\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n      tags:\n        - resource\n    put:\n      summary: Add a new action for a resource type.\n      description: Add a new action for a resource type.\n      operationId: fusillade.api.resource.resource_type_name.actions.put\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/policy_actions'\n      responses:\n        200:\n          description: OK\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        404:\n          $ref: '#/components/responses/404'\n        409:\n          $ref: '#/components/responses/409'\n        default:\n          description: Unexpected error.\n      tags:\n        - resource\n    delete:\n      summary: Delete an existing action for a resource type.\n      description: Delete an existing action for a resource type.\n      operationId: fusillade.api.resource.resource_type_name.actions.delete\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/policy_actions'\n      responses:\n        200:\n          description: OK\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        404:\n          $ref: '#/components/responses/404'\n        409:\n          $ref: '#/components/responses/409'\n        default:\n          description: Unexpected error.\n      tags:\n        - resource\n  /v1/resource/{resource_type_name}/policies:\n    get:\n      summary: List the available policies for this resource type.\n      description: List the available policies for this resource type.\n      operationId: fusillade.api.resource.resource_type_name.policies.get\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/per_page'\n      responses:\n        200:\n          $ref: '#/components/responses/200_paged'\n        206:\n          $ref: '#/components/responses/206'\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n      tags:\n        - resource\n  /v1/resource/{resource_type_name}/policy/{policy_name}:\n    get:\n      summary: Retrieve information about resource policy\n      description: Retrieve information about resource policy.\n      operationId: fusillade.api.resource.resource_type_name.policy.policy_name.get\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n        - $ref: '#/components/parameters/policy_name'\n      tags:\n        - resource\n      responses:\n        200:\n          description: The {policy_name} policy for {resource_type_name} returned.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  policy:\n                    $ref: '#/components/schemas/policy_document'\n                  policy_type:\n                    $ref: '#/components/schemas/policy_type'\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n    post:\n      summary: Add a new resource policy for the specified resource type.\n      description: Add a new resource policy. This makes the resource policy available for all resources of that type\n        . Once added, the new resource policy can be applied to members by using PUT\n        /v1/resource/{resource_type_name}/id/{resource_id}/members\n      operationId: fusillade.api.resource.resource_type_name.policy.policy_name.post\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n        - $ref: '#/components/parameters/policy_name'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - policy\n              properties:\n                  policy:\n                    $ref: '#/components/schemas/policy_document'\n                  policy_type:\n                    $ref: '#/components/schemas/policy_type'\n      tags:\n        - resource\n      responses:\n        200:\n          description: Created the {policy_name} policy for {resource_type_name}.\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        404:\n          $ref: '#/components/responses/404'\n        409:\n          $ref: '#/components/responses/409'\n        default:\n          description: Unexpected error.\n    put:\n      summary: Modify an existing resource policy for the specified resource type\n      description: Modify an existing resource policy. This will affect all members that use this resource policy to access a {resource_type_name}/{resource_ids}.\n      operationId: fusillade.api.resource.resource_type_name.policy.policy_name.put\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n        - $ref: '#/components/parameters/policy_name'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                policy:\n                  $ref: '#/components/schemas/policy_document'\n      responses:\n        200:\n          description: Modified the {policy_name} policy for {resource_type_name}.\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n      tags:\n        - resource\n    delete:\n      summary: Delete an existing resource policy for the specified resource type.\n      description: Delete an existing resource policy. This will affect all members that use this resource policy to access a {resource_type_name}/{resource_ids}.\n      operationId: fusillade.api.resource.resource_type_name.policy.policy_name.delete\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n        - $ref: '#/components/parameters/policy_name'\n      tags:\n        - resource\n      responses:\n        200:\n          description: Deleted the {policy_name} policy for {resource_type_name}.\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n  /v1/resource/{resource_type_name}/ids:\n    get:\n      summary: List ids of all resources matching the specified resource type.\n      description: List ids of all resources matching the specified resource type.\n      operationId: fusillade.api.resource.resource_type_name.ids.get\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/per_page'\n      responses:\n        200:\n          $ref: '#/components/responses/200_paged'\n        206:\n          $ref: '#/components/responses/206'\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n      tags:\n        - resource\n  /v1/resource/{resource_type_name}/id/{resource_id}:\n    get:\n      summary: Check if a resource of type resource_type_name with id resource_id exist.\n      description: Check if a resource of type resource_type_name with id resource_id exist.\n      operationId: fusillade.api.resource.resource_type_name.id.resource_id.get\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n        - $ref: '#/components/parameters/resource_id'\n      responses:\n        200:\n          description: Resource was found.\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        409:\n          $ref: '#/components/responses/409'\n        default:\n          description: Unexpected error.\n      tags:\n        - resource\n    post:\n      summary: Create a new resource.\n      description: Create a new resource.\n      operationId: fusillade.api.resource.resource_type_name.id.resource_id.post\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n        - $ref: '#/components/parameters/resource_id'\n      responses:\n        200:\n          description: Resource was created.\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        409:\n          $ref: '#/components/responses/409'\n        default:\n          description: Unexpected error.\n      tags:\n        - resource\n    delete:\n      summary: Delete a resource.\n      description: Delete a resource.\n      operationId: fusillade.api.resource.resource_type_name.id.resource_id.delete\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n        - $ref: '#/components/parameters/resource_id'\n      responses:\n        200:\n          description: Resource was deleted.\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n      tags:\n        - resource\n  /v1/resource/{resource_type_name}/id/{resource_id}/members:\n    get:\n      summary: List all members that have access to this resource.\n      description: List all members that have access to this resource. Members include users, and groups with any\n        level of access to this resource.\n      operationId: fusillade.api.resource.resource_type_name.id.resource_id.members.get\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n        - $ref: '#/components/parameters/resource_id'\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/per_page'\n      responses:\n        200:\n          $ref: '#/components/responses/200_paged'\n        206:\n          $ref: '#/components/responses/206'\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        404:\n          $ref: '#/components/responses/404'\n    put:\n      summary: Give a principal access defined by a {resource_policy} to {resource_type_name}/{resource_id}.\n      description:  Give a principal access defined by {policy_name} to {resource_type_name}/{resource_id}.\n      operationId: fusillade.api.resource.resource_type_name.id.resource_id.members.put\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resource_type_name'\n        - $ref: '#/components/parameters/resource_id'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/resource_member'\n              maxItems: 1\n              minItems: 1\n      responses:\n        200:\n          description: The {type}/{entity_id} has been added to the policy.\n        401:\n          $ref: '#/components/responses/401'\n        403:\n          $ref: '#/components/responses/403'\n        404:\n          $ref: '#/components/responses/404'\n        default:\n          description: Unexpected error.\n      tags:\n        - resource\ncomponents:\n  parameters:\n    user_id:\n      name: user_id\n      in: path\n      required: true\n      description: User ID (email).\n      schema:\n        $ref: '#/components/schemas/custom_identifier'\n    role_id:\n      name: role_id\n      in: path\n      description: The name of the role.\n      required: true\n      schema:\n        $ref: '#/components/schemas/custom_identifier'\n    group_id:\n      name: group_id\n      in: path\n      description: The name of the group.\n      required: true\n      schema:\n        $ref: '#/components/schemas/custom_identifier'\n    resource_type:\n      name: resource_type\n      in: query\n      required: true\n      schema:\n        $ref: '#/components/schemas/custom_identifier'\n    resource_type_name:\n      name: resource_type_name\n      in: path\n      required: true\n      description: The name of a type of resources to which a resource policy can be applied.\n      schema:\n        $ref: '#/components/schemas/custom_identifier'\n    resource_id:\n      name: resource_id\n      in: path\n      required: true\n      description: The id of the resource.\n      schema:\n        $ref: '#/components/schemas/custom_identifier'\n    action:\n      name: action\n      in: query\n      required: true\n      schema:\n        type: string\n        enum: [add, remove]\n    user_status:\n      name: status\n      in: query\n      required: true\n      schema:\n        $ref: '#/components/schemas/user_status'\n    next_token:\n      name: next_token\n      in: query\n      required: false\n      schema:\n        type: string\n    per_page:\n      name: per_page\n      in: query\n      required: false\n      schema:\n        type: integer\n        minimum: 5\n        maximum: 30\n        default: 15\n    policy_name:\n      name: policy_name\n      in: path\n      required: true\n      schema:\n        type: string\n  schemas:\n    principal_type:\n      type: string\n      enum: [user, group]\n    paged_results:\n      type: array\n      items:\n        type: string\n    policy_type:\n      type: string\n      enum: ['ResourcePolicy', 'IAMPolicy']\n    resource_types:\n      description: A list of resource types.\n      type: object\n      properties:\n        resources:\n          $ref: '#/components/schemas/paged_results'\n    resource_ids:\n      description: A list of resource ids from a resource type.\n      type: object\n      properties:\n        resource_ids:\n          $ref: '#/components/schemas/paged_results'\n        resource_type:\n          type: string\n    resource_name:\n      type: string\n      pattern: 'arn:([\\w\\-\\*]+:){2,4}[\\w\\-\\*/]+'\n    resource_member:\n      type: object\n      properties:\n        member:\n          type: string\n        member_type:\n          $ref: '#/components/schemas/principal_type'\n        access_level:\n          type: string\n      required:\n        - member\n        - member_type\n      example:\n        Add or update access:\n          value:\n            member: i_am_a_user_name\n            member_type: user\n            access_level: read\n        Remove access:\n          value:\n            member: i_am_a_user_name\n            member_type: user\n    policy_action:\n      type: string\n      pattern: '[A-z]\\w*[^\\W_]:[A-z]\\w*[^\\W_]'\n    policy_actions:\n      type: object\n      properties:\n        actions:\n          type: array\n          items:\n            $ref: '#/components/schemas/policy_action'\n    members:\n      type: object\n      properties:\n        members:\n          type: array\n          items:\n            $ref: '#/components/schemas/resource_member'\n    policy_document:\n      description: A resource policy, used for controlling access to a resource.\n      type: object\n      nullable: true\n      properties:\n        Statements:\n          type: array\n          items:\n            type: object\n            properties:\n              Sid:\n                type: string\n              Effect:\n                type: string\n                enum: ['Allow', 'Deny']\n              Actions:\n                type: array\n                items:\n                  $ref: '#/components/schemas/policy_action'\n              Resource:\n                type: array\n                items:\n                  $ref: '#/components/schemas/resource_name'\n    policies:\n      type: array\n      items:\n        $ref: '#/components/schemas/policy_document'\n    groups:\n      type: object\n      properties:\n        groups:\n          $ref: '#/components/schemas/paged_results'\n    roles:\n      type: object\n      properties:\n        roles:\n          $ref: '#/components/schemas/paged_results'\n    users:\n      type: object\n      properties:\n        users:\n          $ref: '#/components/schemas/paged_results'\n    custom_identifier:\n      description: Used to identify users, groups, and roles.\n      type: string\n      minLength: 1\n      maxLength: 128\n      pattern: '^[0-9a-zA-Z.@_\\-$,=]*$'\n    user_status:\n      type: string\n      enum: ['enabled', 'disabled']\n    User:\n      type: object\n      properties:\n        user_id:\n          $ref: '#/components/schemas/custom_identifier'\n        status:\n          $ref: '#/components/schemas/user_status'\n        policies:\n          type: object\n          nullable: true\n    Group:\n      type: object\n      properties:\n        group_id:\n          $ref: '#/components/schemas/custom_identifier'\n        policies:\n          $ref: '#/components/schemas/policy_document'\n        roles:\n          type: array\n          items:\n            $ref: '#/components/schemas/custom_identifier'\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/custom_identifier'\n    Role:\n      type: object\n      properties:\n        role_id:\n          $ref: '#/components/schemas/custom_identifier'\n        policies:\n          $ref: '#/components/schemas/policy_document'\n  responses:\n    userinfo:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              sub:\n                description: A unique identifier for the user. This is part of the OIDC standard.\n                type: string\n              email:\n                description: The user's email associated with access token.\n                type: string\n              https://$API_DOMAIN_NAME/app_metadata:\n                description: Contains information about what the user has access too.\n                type: object\n                properties:\n                  authorization:\n                    type: object\n                    properties:\n                      role:\n                        description: A list of roles the user can use.\n                        type: array\n                        items:\n                          type: string\n                      group:\n                        description: A list of groups the user is in.\n                        type: array\n                        items:\n                          type: string\n                      scope:\n                        description: A list of actions the user can perform.\n                        type: array\n                        items:\n                          type: string\n    200_paged:\n      description: All results have been retrieved.\n      content:\n        application/json:\n          schema:\n            anyOf:\n              - $ref: '#/components/schemas/groups'\n              - $ref: '#/components/schemas/roles'\n              - $ref: '#/components/schemas/users'\n              - $ref: '#/components/schemas/members'\n              - $ref: '#/components/schemas/resource_types'\n              - $ref: '#/components/schemas/policies'\n              - $ref: '#/components/schemas/resource_ids'\n    206:\n      description: A single page of results was retrieved.\n      headers:\n        X-OpenAPI-Pagination:\n          schema:\n            type: boolean\n        X-OpenAPI-Paginated-Content-Key:\n          schema:\n            type: string\n          description: The JSON response body key containing an array of results that are paginated.\n        Link:\n          description: URL to retrieve the next page of results.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            anyOf:\n              - $ref: '#/components/schemas/groups'\n              - $ref: '#/components/schemas/roles'\n              - $ref: '#/components/schemas/users'\n              - $ref: '#/components/schemas/members'\n              - $ref: '#/components/schemas/resource_types'\n              - $ref: '#/components/schemas/policies'\n              - $ref: '#/components/schemas/resource_ids'\n    401:\n      description: The users credentials failed to authenticate.\n    403:\n      description: The user is not authorized because they do not have adequate\n        permission to perform the action.\n    404:\n      description: Resource not found.\n    409:\n      description: The object already exists.\n    Resource_not_empty:\n      description: All resource ids must be deleted before the resource type can be deleted.\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n      x-bearerInfoFunc: fusillade.utils.security.verify_jwt\n",
			"canonicalURL": "/github.com/HumanCellAtlas/fusillade@5634b77440bb71aa075b6ca442baccbdd436dfd7/-/blob/fusillade-api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/HumanCellAtlas/fusillade/blob/5634b77440bb71aa075b6ca442baccbdd436dfd7/fusillade-api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/resource/{resource_type_name}/ids\": get: responses: 200: contents: application/json: generate schema: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}