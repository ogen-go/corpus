{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/factset/enterprise-sdk"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "code/java/FactSetTrading/v1/api/openapi.yaml",
			"byteSize": 37662,
			"content": "openapi: 3.0.1\ninfo:\n  contact:\n    email: analytics.api.support@factset.com\n    name: Analytics API Support\n    url: https://developer.factset.com/contact\n  description: Allow clients to trade orders.\n  license:\n    name: Apache License 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.txt\n  title: EMS API\n  version: \"1\"\nservers:\n- url: https://api.factset.com\nsecurity:\n- FactSetApiKey: []\n- FactSetOAuth2: []\npaths:\n  /trading/ems/v1/orders/create:\n    post:\n      description: This endpoint takes the list of orders and place them on EMS for\n        execution.\n      operationId: create\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Multiple Orders:\n                value:\n                  data:\n                    investorId: MyOrganization\n                    orders:\n                    - orderId: OR0000001\n                      instrument:\n                        symbol: GOOGL\n                      side: buy\n                      orderType: market\n                      orderQuantity: 1000\n                      price: 450\n                      currency: USD\n                      handlingInstructions: auto_ord_pub\n                    - orderId: OR0000002\n                      instrument:\n                        symbol: MSFT\n                      side: sell\n                      orderType: limit\n                      orderQuantity: 1000\n                      price: 450\n                      currency: USD\n                      handlingInstructions: auto_ord_pub\n                    - orderId: OR0000003\n                      instrument:\n                        symbol: TSLA\n                      side: buy\n                      orderType: market_on_close\n                      orderQuantity: 1000\n                      price: 450\n                      currency: USD\n                      handlingInstructions: auto_ord_pub\n              Single Order (Minimum Fields):\n                summary: Very basic single order with only required fields.\n                value:\n                  data:\n                    investorId: MyOrganization\n                    orders:\n                    - instrument:\n                        symbol: GOOGL\n                      side: buy\n                      orderType: market\n                      orderQuantity: 1000\n                      price: 450\n                      currency: USD\n                      handlingInstructions: auto_ord_pub\n              Single Order:\n                value:\n                  data:\n                    investorId: MyOrganization\n                    orders:\n                    - orderId: OR0000004\n                      instrument:\n                        symbol: GOOGL\n                      side: buy\n                      orderType: market\n                      orderQuantity: 1000\n                      price: 450\n                      stopPrice: 500\n                      strikePrice: 60\n                      currency: USD\n                      isCovered: false\n                      maxShow: 30\n                      maxFloor: 20\n                      settlementType: regular\n                      settlementDate: \"20211024\"\n                      handlingInstructions: auto_ord_pub\n                      locateRequired: false\n                      account: ACCT1\n                      timeInForce:\n                        tif: GTC\n            schema:\n              $ref: '#/components/schemas/EMSOrdersRoot'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                data:\n                  accepted:\n                    OR123456789:\n                      symbol: GOOGL\n                      side: buy\n                      orderType: market\n                      orderQuantity: 2500\n                    OR123456790:\n                      symbol: MSFT\n                      side: buy\n                      orderType: market\n                      orderQuantity: 200\n                  rejected:\n                    OR123456791:\n                      symbol: TSLA\n                      side: buy\n                      orderType: market\n                      orderQuantity: 500\n              schema:\n                $ref: '#/components/schemas/EMSOrdersCreateResponseRoot'\n          description: Expected response, returns the list of orders.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientErrorResponse'\n          description: Invalid post body parameters.\n        \"401\":\n          description: Missing or invalid authentication.\n        \"403\":\n          description: User is forbidden with current credentials\n        \"415\":\n          description: Missing/Invalid Content-Type header. Header needs to be set\n            to application/json.\n        \"429\":\n          description: Rate limit reached. Wait before sending further requests.\n        \"500\":\n          description: Server error. Log the X-DataDirect-Request-Key header to assist\n            in troubleshooting.\n        \"503\":\n          description: Request timed out. Retry the request in sometime.\n      summary: Send orders to EMS for execution.\n      tags:\n      - Orders\n      x-contentType: application/json\n      x-accepts: application/json\n  /trading/ems/v1/orders/replace:\n    post:\n      description: This endpoint takes the list of orders to be replaced on the EMS\n        system.\n      operationId: replace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EMSReplaceOrdersRoot'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                data:\n                  accepted:\n                    OR123456789:\n                      symbol: GOOGL\n                      side: buy\n                      orderType: market\n                      orderQuantity: 2500\n                    OR123456790:\n                      symbol: MSFT\n                      side: buy\n                      orderType: market\n                      orderQuantity: 200\n                  rejected:\n                    OR123456791:\n                      symbol: TSLA\n                      side: buy\n                      orderType: market\n                      orderQuantity: 500\n              schema:\n                $ref: '#/components/schemas/EMSOrdersCreateResponseRoot'\n          description: Expected response, returns the list of order ids.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientErrorResponse'\n          description: Invalid post body parameters.\n        \"401\":\n          description: Missing or invalid authentication.\n        \"403\":\n          description: User is forbidden with current credentials\n        \"415\":\n          description: Missing/Invalid Content-Type header. Header needs to be set\n            to application/json.\n        \"429\":\n          description: Rate limit reached. Wait before sending further requests.\n        \"500\":\n          description: Server error. Log the X-DataDirect-Request-Key header to assist\n            in troubleshooting.\n        \"503\":\n          description: Request timed out. Retry the request in sometime.\n      summary: Replace the orders on EMS system.\n      tags:\n      - Orders\n      x-contentType: application/json\n      x-accepts: application/json\n  /trading/ems/v1/orders/cancel:\n    post:\n      description: This endpoint takes the list of orders to be cancelled on the EMS\n        system.\n      operationId: cancel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EMSCancelOrdersRoot'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                data:\n                  accepted:\n                    OR123456789:\n                      symbol: GOOGL\n                      side: buy\n                      orderType: market\n                      orderQuantity: 2500\n                    OR123456790:\n                      symbol: MSFT\n                      side: buy\n                      orderType: market\n                      orderQuantity: 200\n                  rejected:\n                    OR123456791:\n                      symbol: TSLA\n                      side: buy\n                      orderType: market\n                      orderQuantity: 500\n              schema:\n                $ref: '#/components/schemas/EMSOrdersCreateResponseRoot'\n          description: Expected response, returns the list of order ids.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientErrorResponse'\n          description: Invalid post body parameters.\n        \"401\":\n          description: Missing or invalid authentication.\n        \"403\":\n          description: User is forbidden with current credentials\n        \"415\":\n          description: Missing/Invalid Content-Type header. Header needs to be set\n            to application/json.\n        \"429\":\n          description: Rate limit reached. Wait before sending further requests.\n        \"500\":\n          description: Server error. Log the X-DataDirect-Request-Key header to assist\n            in troubleshooting.\n        \"503\":\n          description: Request timed out. Retry the request in sometime.\n      summary: Cancel the orders on EMS system.\n      tags:\n      - Orders\n      x-contentType: application/json\n      x-accepts: application/json\ncomponents:\n  schemas:\n    ClientErrorResponse:\n      additionalProperties: false\n      properties:\n        errors:\n          description: List of errors\n          items:\n            $ref: '#/components/schemas/Error'\n          type: array\n      type: object\n    EMSCancelOrder:\n      additionalProperties: false\n      example:\n        originalOrderId: originalOrderId\n      properties:\n        originalOrderId:\n          type: string\n      required:\n      - originalOrderId\n      type: object\n    EMSCancelOrders:\n      additionalProperties: false\n      example:\n        investorId: investorId\n        orders:\n        - originalOrderId: originalOrderId\n        - originalOrderId: originalOrderId\n      properties:\n        investorId:\n          type: string\n        orders:\n          items:\n            $ref: '#/components/schemas/EMSCancelOrder'\n          type: array\n      type: object\n    EMSCancelOrdersRoot:\n      additionalProperties: false\n      example:\n        data:\n          investorId: investorId\n          orders:\n          - originalOrderId: originalOrderId\n          - originalOrderId: originalOrderId\n      properties:\n        data:\n          $ref: '#/components/schemas/EMSCancelOrders'\n      type: object\n    EMSOrder:\n      additionalProperties: false\n      example:\n        settlementType: regular\n        orderType: market\n        side: buy\n        executionInstructions: not_held\n        orderId: \"12322123\"\n        effectiveTime: 20210622-12:15:30\n        maxFloor: 100\n        instrument:\n          symbol: TATAMOTORS\n          securityType: securityType\n          maturityMonthYear: maturityMonthYear\n          maturityDay: maturityDay\n          securityExchange: securityExchange\n          securityDescription: securityDescription\n          cfiCode: cfiCode\n          issuer: issuer\n        settlementDate: \"20210622\"\n        orderQuantity: 350\n        maxShow: 100\n        userDefinedFields:\n          key: userDefinedFields\n        stopPrice: 800\n        price: 800\n        currency: USD\n        prevClosePrice: 100\n        timeInForce:\n          tif: DAY\n          expireTime: expireTime\n          expireDate: expireDate\n        strikePrice: 400\n        isCovered: false\n        handlingInstructions: auto_ord_pub\n        account: Test.ACCT\n        locateRequired: false\n      properties:\n        orderId:\n          description: Unique id for the order\n          example: \"12322123\"\n          type: string\n        instrument:\n          $ref: '#/components/schemas/Instrument'\n        side:\n          description: Side can be buy or sell\n          enum:\n          - buy\n          - sell\n          example: buy\n          type: string\n        orderType:\n          description: Type of the order\n          enum:\n          - market\n          - limit\n          - stop\n          - stop_limit\n          - market_on_close\n          - limit_or_better\n          example: market\n          type: string\n        orderQuantity:\n          description: Order quantity\n          example: 350\n          format: double\n          type: number\n        price:\n          description: Order Price\n          example: 800\n          format: double\n          type: number\n        stopPrice:\n          description: Stop Price\n          example: 800\n          format: double\n          type: number\n        strikePrice:\n          description: Strike Price\n          example: 400\n          format: double\n          type: number\n        currency:\n          description: Currency\n          example: USD\n          type: string\n        isCovered:\n          description: Currency\n          example: false\n          type: boolean\n        maxShow:\n          description: Max Show\n          example: 100\n          format: double\n          type: number\n        maxFloor:\n          description: Max Floor\n          example: 100\n          format: double\n          type: number\n        prevClosePrice:\n          description: Previous close price\n          example: 100\n          format: double\n          type: number\n        settlementType:\n          description: Settlement type\n          example: regular\n          type: string\n        settlementDate:\n          description: Settlement date in YYYYMMDD format\n          example: \"20210622\"\n          type: string\n        handlingInstructions:\n          description: Handling instructions\n          enum:\n          - auto_ord_pvt\n          - auto_ord_pub\n          - best_execution\n          example: auto_ord_pub\n          type: string\n        executionInstructions:\n          description: Execution instructions\n          enum:\n          - not_held\n          - work\n          - go_along\n          - over_the_day\n          - held\n          - participate_dont_initiate\n          - strict_scale\n          - try_to_scale\n          - stay_on_bidside\n          - stay_on_offerside\n          - no_cross\n          - ok_to_cross\n          - call_first\n          - percent_of_volume\n          - do_not_increase\n          - do_not_reduce\n          - all_or_none\n          - reinstate_on_system_failure\n          - institutions_only\n          - reinstate_on_trading_halt\n          - cancel_on_trading_halt\n          - last_peg\n          - mid_price_peg\n          - non_negotiable\n          - opening_peg\n          - market_peg\n          - cancel_on_system_failure\n          - primary_peg\n          - suspend\n          - fixed_peg_to_local_best_bid\n          - customer_display_instruction\n          - netting\n          - peg_to_vwap\n          - trade_along\n          - try_to_stop\n          - cancel_if_not_best\n          - trailing_stop_peg\n          - strict_limit\n          - ignore_price_validity_checks\n          - peg_to_limit_price\n          - work_to_target_strategy\n          - intermarket_sweep\n          - external_routing_allowed\n          - external_routing_not_allowed\n          - imbalance_only\n          - single_execution_requested_for_block_trade\n          - best_execution\n          example: not_held\n          type: string\n        locateRequired:\n          description: Locate Required\n          example: false\n          type: boolean\n        effectiveTime:\n          description: Effective time in YYYYMMDD-HH:MM:SS format expressed in UTC\n          example: 20210622-12:15:30\n          type: string\n        account:\n          description: Account\n          example: Test.ACCT\n          type: string\n        timeInForce:\n          $ref: '#/components/schemas/TimeInForce'\n        userDefinedFields:\n          additionalProperties:\n            type: string\n          description: User defined fields\n          type: object\n      required:\n      - handlingInstructions\n      - instrument\n      - orderType\n      - side\n      type: object\n    EMSOrderMetadata:\n      additionalProperties: false\n      example:\n        symbol: symbol\n        orderType: market\n        side: buy\n        orderId: orderId\n        error: error\n        orderQuantity: 0.8008281904610115\n        info: info\n      properties:\n        symbol:\n          description: Symbol\n          type: string\n        side:\n          description: Side\n          enum:\n          - buy\n          - sell\n          type: string\n        orderType:\n          description: Order Type\n          enum:\n          - market\n          - limit\n          - stop\n          - stop_limit\n          - market_on_close\n          - limit_or_better\n          type: string\n        orderQuantity:\n          description: Order Quantity\n          format: double\n          type: number\n        error:\n          description: Error message\n          type: string\n        info:\n          description: information\n          type: string\n        orderId:\n          description: Order Id\n          type: string\n      type: object\n    EMSOrders:\n      additionalProperties: false\n      example:\n        investorId: DEMO-12345\n        orders:\n        - settlementType: regular\n          orderType: market\n          side: buy\n          executionInstructions: not_held\n          orderId: \"12322123\"\n          effectiveTime: 20210622-12:15:30\n          maxFloor: 100\n          instrument:\n            symbol: TATAMOTORS\n            securityType: securityType\n            maturityMonthYear: maturityMonthYear\n            maturityDay: maturityDay\n            securityExchange: securityExchange\n            securityDescription: securityDescription\n            cfiCode: cfiCode\n            issuer: issuer\n          settlementDate: \"20210622\"\n          orderQuantity: 350\n          maxShow: 100\n          userDefinedFields:\n            key: userDefinedFields\n          stopPrice: 800\n          price: 800\n          currency: USD\n          prevClosePrice: 100\n          timeInForce:\n            tif: DAY\n            expireTime: expireTime\n            expireDate: expireDate\n          strikePrice: 400\n          isCovered: false\n          handlingInstructions: auto_ord_pub\n          account: Test.ACCT\n          locateRequired: false\n        - settlementType: regular\n          orderType: market\n          side: buy\n          executionInstructions: not_held\n          orderId: \"12322123\"\n          effectiveTime: 20210622-12:15:30\n          maxFloor: 100\n          instrument:\n            symbol: TATAMOTORS\n            securityType: securityType\n            maturityMonthYear: maturityMonthYear\n            maturityDay: maturityDay\n            securityExchange: securityExchange\n            securityDescription: securityDescription\n            cfiCode: cfiCode\n            issuer: issuer\n          settlementDate: \"20210622\"\n          orderQuantity: 350\n          maxShow: 100\n          userDefinedFields:\n            key: userDefinedFields\n          stopPrice: 800\n          price: 800\n          currency: USD\n          prevClosePrice: 100\n          timeInForce:\n            tif: DAY\n            expireTime: expireTime\n            expireDate: expireDate\n          strikePrice: 400\n          isCovered: false\n          handlingInstructions: auto_ord_pub\n          account: Test.ACCT\n          locateRequired: false\n      properties:\n        investorId:\n          description: Investor Id\n          example: DEMO-12345\n          type: string\n        orders:\n          items:\n            $ref: '#/components/schemas/EMSOrder'\n          type: array\n      required:\n      - orders\n      type: object\n    EMSOrdersCreateResponse:\n      additionalProperties: false\n      example:\n        rejected:\n          key:\n            symbol: symbol\n            orderType: market\n            side: buy\n            orderId: orderId\n            error: error\n            orderQuantity: 0.8008281904610115\n            info: info\n        accepted:\n          key:\n            symbol: symbol\n            orderType: market\n            side: buy\n            orderId: orderId\n            error: error\n            orderQuantity: 0.8008281904610115\n            info: info\n      properties:\n        accepted:\n          additionalProperties:\n            $ref: '#/components/schemas/EMSOrderMetadata'\n          type: object\n        rejected:\n          additionalProperties:\n            $ref: '#/components/schemas/EMSOrderMetadata'\n          type: object\n      type: object\n    EMSOrdersCreateResponseRoot:\n      additionalProperties: false\n      example:\n        data:\n          rejected:\n            key:\n              symbol: symbol\n              orderType: market\n              side: buy\n              orderId: orderId\n              error: error\n              orderQuantity: 0.8008281904610115\n              info: info\n          accepted:\n            key:\n              symbol: symbol\n              orderType: market\n              side: buy\n              orderId: orderId\n              error: error\n              orderQuantity: 0.8008281904610115\n              info: info\n      properties:\n        data:\n          $ref: '#/components/schemas/EMSOrdersCreateResponse'\n      required:\n      - data\n      type: object\n    EMSOrdersRoot:\n      additionalProperties: false\n      example:\n        data:\n          investorId: DEMO-12345\n          orders:\n          - settlementType: regular\n            orderType: market\n            side: buy\n            executionInstructions: not_held\n            orderId: \"12322123\"\n            effectiveTime: 20210622-12:15:30\n            maxFloor: 100\n            instrument:\n              symbol: TATAMOTORS\n              securityType: securityType\n              maturityMonthYear: maturityMonthYear\n              maturityDay: maturityDay\n              securityExchange: securityExchange\n              securityDescription: securityDescription\n              cfiCode: cfiCode\n              issuer: issuer\n            settlementDate: \"20210622\"\n            orderQuantity: 350\n            maxShow: 100\n            userDefinedFields:\n              key: userDefinedFields\n            stopPrice: 800\n            price: 800\n            currency: USD\n            prevClosePrice: 100\n            timeInForce:\n              tif: DAY\n              expireTime: expireTime\n              expireDate: expireDate\n            strikePrice: 400\n            isCovered: false\n            handlingInstructions: auto_ord_pub\n            account: Test.ACCT\n            locateRequired: false\n          - settlementType: regular\n            orderType: market\n            side: buy\n            executionInstructions: not_held\n            orderId: \"12322123\"\n            effectiveTime: 20210622-12:15:30\n            maxFloor: 100\n            instrument:\n              symbol: TATAMOTORS\n              securityType: securityType\n              maturityMonthYear: maturityMonthYear\n              maturityDay: maturityDay\n              securityExchange: securityExchange\n              securityDescription: securityDescription\n              cfiCode: cfiCode\n              issuer: issuer\n            settlementDate: \"20210622\"\n            orderQuantity: 350\n            maxShow: 100\n            userDefinedFields:\n              key: userDefinedFields\n            stopPrice: 800\n            price: 800\n            currency: USD\n            prevClosePrice: 100\n            timeInForce:\n              tif: DAY\n              expireTime: expireTime\n              expireDate: expireDate\n            strikePrice: 400\n            isCovered: false\n            handlingInstructions: auto_ord_pub\n            account: Test.ACCT\n            locateRequired: false\n      properties:\n        data:\n          $ref: '#/components/schemas/EMSOrders'\n      type: object\n    EMSReplaceOrder:\n      additionalProperties: false\n      example:\n        settlementType: regular\n        orderType: market\n        side: buy\n        executionInstructions: not_held\n        orderId: \"12322123\"\n        effectiveTime: 20210622-12:15:30\n        maxFloor: 100\n        instrument:\n          symbol: TATAMOTORS\n          securityType: securityType\n          maturityMonthYear: maturityMonthYear\n          maturityDay: maturityDay\n          securityExchange: securityExchange\n          securityDescription: securityDescription\n          cfiCode: cfiCode\n          issuer: issuer\n        settlementDate: \"20210622\"\n        orderQuantity: 350\n        maxShow: 100\n        userDefinedFields:\n          key: userDefinedFields\n        stopPrice: 800\n        originalOrderId: originalOrderId\n        price: 800\n        currency: USD\n        prevClosePrice: 100\n        timeInForce:\n          tif: DAY\n          expireTime: expireTime\n          expireDate: expireDate\n        strikePrice: 400\n        isCovered: false\n        handlingInstructions: auto_ord_pub\n        account: Test.ACCT\n        locateRequired: false\n      properties:\n        originalOrderId:\n          type: string\n        orderId:\n          description: Unique id for the order\n          example: \"12322123\"\n          type: string\n        instrument:\n          $ref: '#/components/schemas/Instrument'\n        side:\n          description: Side can be buy or sell\n          enum:\n          - buy\n          - sell\n          example: buy\n          type: string\n        orderType:\n          description: Type of the order\n          enum:\n          - market\n          - limit\n          - stop\n          - stop_limit\n          - market_on_close\n          - limit_or_better\n          example: market\n          type: string\n        orderQuantity:\n          description: Order quantity\n          example: 350\n          format: double\n          type: number\n        price:\n          description: Order Price\n          example: 800\n          format: double\n          type: number\n        stopPrice:\n          description: Stop Price\n          example: 800\n          format: double\n          type: number\n        strikePrice:\n          description: Strike Price\n          example: 400\n          format: double\n          type: number\n        currency:\n          description: Currency\n          example: USD\n          type: string\n        isCovered:\n          description: Currency\n          example: false\n          type: boolean\n        maxShow:\n          description: Max Show\n          example: 100\n          format: double\n          type: number\n        maxFloor:\n          description: Max Floor\n          example: 100\n          format: double\n          type: number\n        prevClosePrice:\n          description: Previous close price\n          example: 100\n          format: double\n          type: number\n        settlementType:\n          description: Settlement type\n          example: regular\n          type: string\n        settlementDate:\n          description: Settlement date in YYYYMMDD format\n          example: \"20210622\"\n          type: string\n        handlingInstructions:\n          description: Handling instructions\n          enum:\n          - auto_ord_pvt\n          - auto_ord_pub\n          - best_execution\n          example: auto_ord_pub\n          type: string\n        executionInstructions:\n          description: Execution instructions\n          enum:\n          - not_held\n          - work\n          - go_along\n          - over_the_day\n          - held\n          - participate_dont_initiate\n          - strict_scale\n          - try_to_scale\n          - stay_on_bidside\n          - stay_on_offerside\n          - no_cross\n          - ok_to_cross\n          - call_first\n          - percent_of_volume\n          - do_not_increase\n          - do_not_reduce\n          - all_or_none\n          - reinstate_on_system_failure\n          - institutions_only\n          - reinstate_on_trading_halt\n          - cancel_on_trading_halt\n          - last_peg\n          - mid_price_peg\n          - non_negotiable\n          - opening_peg\n          - market_peg\n          - cancel_on_system_failure\n          - primary_peg\n          - suspend\n          - fixed_peg_to_local_best_bid\n          - customer_display_instruction\n          - netting\n          - peg_to_vwap\n          - trade_along\n          - try_to_stop\n          - cancel_if_not_best\n          - trailing_stop_peg\n          - strict_limit\n          - ignore_price_validity_checks\n          - peg_to_limit_price\n          - work_to_target_strategy\n          - intermarket_sweep\n          - external_routing_allowed\n          - external_routing_not_allowed\n          - imbalance_only\n          - single_execution_requested_for_block_trade\n          - best_execution\n          example: not_held\n          type: string\n        locateRequired:\n          description: Locate Required\n          example: false\n          type: boolean\n        effectiveTime:\n          description: Effective time in YYYYMMDD-HH:MM:SS format expressed in UTC\n          example: 20210622-12:15:30\n          type: string\n        account:\n          description: Account\n          example: Test.ACCT\n          type: string\n        timeInForce:\n          $ref: '#/components/schemas/TimeInForce'\n        userDefinedFields:\n          additionalProperties:\n            type: string\n          description: User defined fields\n          type: object\n      required:\n      - handlingInstructions\n      - instrument\n      - orderType\n      - originalOrderId\n      - side\n      type: object\n    EMSReplaceOrders:\n      additionalProperties: false\n      example:\n        investorId: DEMO-12345\n        orders:\n        - settlementType: regular\n          orderType: market\n          side: buy\n          executionInstructions: not_held\n          orderId: \"12322123\"\n          effectiveTime: 20210622-12:15:30\n          maxFloor: 100\n          instrument:\n            symbol: TATAMOTORS\n            securityType: securityType\n            maturityMonthYear: maturityMonthYear\n            maturityDay: maturityDay\n            securityExchange: securityExchange\n            securityDescription: securityDescription\n            cfiCode: cfiCode\n            issuer: issuer\n          settlementDate: \"20210622\"\n          orderQuantity: 350\n          maxShow: 100\n          userDefinedFields:\n            key: userDefinedFields\n          stopPrice: 800\n          originalOrderId: originalOrderId\n          price: 800\n          currency: USD\n          prevClosePrice: 100\n          timeInForce:\n            tif: DAY\n            expireTime: expireTime\n            expireDate: expireDate\n          strikePrice: 400\n          isCovered: false\n          handlingInstructions: auto_ord_pub\n          account: Test.ACCT\n          locateRequired: false\n        - settlementType: regular\n          orderType: market\n          side: buy\n          executionInstructions: not_held\n          orderId: \"12322123\"\n          effectiveTime: 20210622-12:15:30\n          maxFloor: 100\n          instrument:\n            symbol: TATAMOTORS\n            securityType: securityType\n            maturityMonthYear: maturityMonthYear\n            maturityDay: maturityDay\n            securityExchange: securityExchange\n            securityDescription: securityDescription\n            cfiCode: cfiCode\n            issuer: issuer\n          settlementDate: \"20210622\"\n          orderQuantity: 350\n          maxShow: 100\n          userDefinedFields:\n            key: userDefinedFields\n          stopPrice: 800\n          originalOrderId: originalOrderId\n          price: 800\n          currency: USD\n          prevClosePrice: 100\n          timeInForce:\n            tif: DAY\n            expireTime: expireTime\n            expireDate: expireDate\n          strikePrice: 400\n          isCovered: false\n          handlingInstructions: auto_ord_pub\n          account: Test.ACCT\n          locateRequired: false\n      properties:\n        investorId:\n          description: Investor Id\n          example: DEMO-12345\n          type: string\n        orders:\n          items:\n            $ref: '#/components/schemas/EMSReplaceOrder'\n          type: array\n      type: object\n    EMSReplaceOrdersRoot:\n      additionalProperties: false\n      example:\n        data:\n          investorId: DEMO-12345\n          orders:\n          - settlementType: regular\n            orderType: market\n            side: buy\n            executionInstructions: not_held\n            orderId: \"12322123\"\n            effectiveTime: 20210622-12:15:30\n            maxFloor: 100\n            instrument:\n              symbol: TATAMOTORS\n              securityType: securityType\n              maturityMonthYear: maturityMonthYear\n              maturityDay: maturityDay\n              securityExchange: securityExchange\n              securityDescription: securityDescription\n              cfiCode: cfiCode\n              issuer: issuer\n            settlementDate: \"20210622\"\n            orderQuantity: 350\n            maxShow: 100\n            userDefinedFields:\n              key: userDefinedFields\n            stopPrice: 800\n            originalOrderId: originalOrderId\n            price: 800\n            currency: USD\n            prevClosePrice: 100\n            timeInForce:\n              tif: DAY\n              expireTime: expireTime\n              expireDate: expireDate\n            strikePrice: 400\n            isCovered: false\n            handlingInstructions: auto_ord_pub\n            account: Test.ACCT\n            locateRequired: false\n          - settlementType: regular\n            orderType: market\n            side: buy\n            executionInstructions: not_held\n            orderId: \"12322123\"\n            effectiveTime: 20210622-12:15:30\n            maxFloor: 100\n            instrument:\n              symbol: TATAMOTORS\n              securityType: securityType\n              maturityMonthYear: maturityMonthYear\n              maturityDay: maturityDay\n              securityExchange: securityExchange\n              securityDescription: securityDescription\n              cfiCode: cfiCode\n              issuer: issuer\n            settlementDate: \"20210622\"\n            orderQuantity: 350\n            maxShow: 100\n            userDefinedFields:\n              key: userDefinedFields\n            stopPrice: 800\n            originalOrderId: originalOrderId\n            price: 800\n            currency: USD\n            prevClosePrice: 100\n            timeInForce:\n              tif: DAY\n              expireTime: expireTime\n              expireDate: expireDate\n            strikePrice: 400\n            isCovered: false\n            handlingInstructions: auto_ord_pub\n            account: Test.ACCT\n            locateRequired: false\n      properties:\n        data:\n          $ref: '#/components/schemas/EMSReplaceOrders'\n      type: object\n    Error:\n      additionalProperties: false\n      properties:\n        id:\n          description: Identifier for the error\n          type: string\n        code:\n          type: string\n        title:\n          type: string\n        detail:\n          description: Explanation specific to the occurrence of the error\n          type: string\n        source:\n          $ref: '#/components/schemas/ErrorSource'\n      type: object\n    ErrorSource:\n      additionalProperties: false\n      properties:\n        pointer:\n          description: Pointer to the associated entity in the request body\n          type: string\n        parameter:\n          description: Indicates which path or URI query parameter caused the error\n          type: string\n      type: object\n    Instrument:\n      additionalProperties: false\n      example:\n        symbol: TATAMOTORS\n        securityType: securityType\n        maturityMonthYear: maturityMonthYear\n        maturityDay: maturityDay\n        securityExchange: securityExchange\n        securityDescription: securityDescription\n        cfiCode: cfiCode\n        issuer: issuer\n      properties:\n        symbol:\n          description: Symbol\n          example: TATAMOTORS\n          type: string\n        securityType:\n          description: Security Type\n          type: string\n        cfiCode:\n          description: Cfi Code\n          type: string\n        securityExchange:\n          description: Security exchange\n          type: string\n        issuer:\n          description: Issuer\n          type: string\n        securityDescription:\n          description: Security Description\n          type: string\n        maturityMonthYear:\n          description: Maturity month year\n          type: string\n        maturityDay:\n          description: Maturity day\n          type: string\n      required:\n      - symbol\n      type: object\n    TimeInForce:\n      additionalProperties: false\n      example:\n        tif: DAY\n        expireTime: expireTime\n        expireDate: expireDate\n      properties:\n        tif:\n          description: 'Time in force: if GTD, then Expire Time or Expire Date is\n            a required field'\n          enum:\n          - DAY\n          - GTC\n          - OPG\n          - IOC\n          - FOK\n          - GTX\n          - GTD\n          - ATC\n          type: string\n        expireDate:\n          description: Expire date in YYYYMMDD format expressed in UTC\n          type: string\n        expireTime:\n          description: Expire time in YYYYMMDD-HH:MM:SS format expressed in UTC\n          type: string\n      type: object\n  securitySchemes:\n    FactSetOAuth2:\n      flows:\n        clientCredentials:\n          scopes: {}\n          tokenUrl: https://auth.factset.com/as/token.oauth2\n      type: oauth2\n    FactSetApiKey:\n      scheme: basic\n      type: http\n\n",
			"canonicalURL": "/github.com/factset/enterprise-sdk@dcf75a02daedc726c313912a349d2863114bc92c/-/blob/code/java/FactSetTrading/v1/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/factset/enterprise-sdk/blob/dcf75a02daedc726c313912a349d2863114bc92c/code/java/FactSetTrading/v1/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/trading/ems/v1/orders/cancel\": post: security: security \"FactSetOAuth2\" (index 1): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}