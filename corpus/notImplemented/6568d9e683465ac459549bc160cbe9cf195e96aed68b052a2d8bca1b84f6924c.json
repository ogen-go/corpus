{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/identity-api-user"
		},
		"file": {
			"name": "authorizedApps.yaml",
			"size": 0,
			"path": "components/org.wso2.carbon.identity.api.user.authorized.apps/org.wso2.carbon.identity.rest.api.user.authorized.apps.v2/src/main/resources/authorizedApps.yaml",
			"byteSize": 11820,
			"content": "openapi: 3.0.0\ninfo:\n  description: |\n    This is the RESTful API for managing OAuth2 Authorized Apps.\n\n    Through this API, authenticated users can view and revoke the OAuth2/OIDC applications which they have permanently provided consent (by clicking on 'Approve Always' during OAuth2 user consent collection) to act on behalf of the user without continuously requesting consent.\n\n    Additionally, privileged user can view and revoke other users' authorized apps using the API.\n  version: '2.0'\n  title: WSO2 Identity Server - OAuth2 Authorized Apps API\n  contact:\n    name: \"WSO2 Identity Server\"\n    url: \"https://wso2.com/identity-and-access-management/\"\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n\nservers:\n  - url: 'https://localhost:9443/t/{tenant-domain}/api/users/v2'\n    variables:\n      tenant-domain:\n        default: carbon.super\n# host: is.wso2.com\n# basePath: /t/{tenant-domain}/api/identity/1.0.0/\n\n# tags are used for organizing operations\ntags:\n  - name: me\n    description: |\n      Operations for the authenticated user.\n  - name: admin\n    description: |\n      Operations available for privileged users, to be invoked on behalf of another user.\n\n      **These endpoints are not released in WSO2 Identity Server - 5.9.0 version and will be released in the next product version.**\n\nsecurity:\n  - OAuth2: []\n  - BasicAuth: []\n\npaths:\n  '/me/authorized-apps':\n    get:\n      tags:\n        - me\n      summary: \"List authorized applications for the authenticated user\"\n      operationId: listLoggedInUserAuthorizedApps\n      description:\n        Lists approved OAuth applications of the authenticated user\u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n        * None \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n        * internal_login\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AuthorizedAppDTO'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      tags:\n        - me\n      summary: \"Removes authorized applications for the authenticated user\"\n      operationId: deleteLoggedInUserAuthorizedApps\n      description:\n        Removes approved OAuth applications of the authenticated user\u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n        * None \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n        * internal_login\n      responses:\n        '204':\n          $ref: '#/components/responses/Deleted'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  '/me/authorized-apps/{application-id}':\n    get:\n      tags:\n        - me\n      summary: \"Retrieve authorized app by app ID for the authenticated user\"\n      operationId: getLoggedInUserAuthorizedAppByAppId\n      description:\n        Retrieves authorized OAuth app by an app ID for the authenticated user\u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n        * None \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n        * internal_login\n      parameters:\n        - $ref: '#/components/parameters/applicationNamePathParam'\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizedAppDTO'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      tags:\n        - me\n      summary: \"Removes authorized app by app ID for the authenticated user\"\n      operationId: deleteLoggedInUserAuthorizedAppByAppId\n      description:\n        Removes authorized OAuth app by an app ID for the authenticated user\u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n        * None \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n        * internal_login\n      parameters:\n        - $ref: '#/components/parameters/applicationNamePathParam'\n      responses:\n        '204':\n          $ref: '#/components/responses/Deleted'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  '/{user-id}/authorized-apps':\n    get:\n      tags:\n        - admin\n      summary: List authorized applications of a user\n      operationId: listUserAuthorizedApps\n      description: |\n        List approved OAuth applications for a given user\n      parameters:\n        - $ref: '#/components/parameters/usernamePathParams'\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AuthorizedAppDTO'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      tags:\n        - admin\n      summary: \"Remove all authorized applications of a user\"\n      operationId:  deleteUserAuthorizedApps\n      description: |\n        Removes authorization from all OAuth apps of a given user\n      parameters:\n        - $ref: '#/components/parameters/usernamePathParams'\n      responses:\n        '204':\n          $ref: '#/components/responses/Deleted'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  '/{user-id}/authorized-apps/{application-id}':\n    get:\n      tags:\n        - admin\n      summary: \"Retrieve authorized app by app ID for a user\"\n      operationId: listUserAuthorizedAppsByAppId\n      description: |\n        Retrived autherized OAuth apps by an app ID for a given user\n      parameters:\n        - $ref: '#/components/parameters/usernamePathParams'\n        - $ref: '#/components/parameters/applicationNamePathParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizedAppDTO'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      tags:\n        - admin\n      summary: \"Removes challenge question answers\"\n      operationId: deleteUserAuthorizedAppsByAppId\n      description: |\n        Removes autherized OAuth apps by an app ID for a given user\n      parameters:\n        - $ref: '#/components/parameters/usernamePathParams'\n        - $ref: '#/components/parameters/applicationNamePathParam'\n      responses:\n        '204':\n          $ref: '#/components/responses/Deleted'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  '/authorized-apps/{application-id}/tokens':\n    delete:\n      tags:\n        - admin\n      summary: \"Removes all the tokens granted for an application\"\n      operationId: deleteIssuedTokensByAppId\n      description: |\n        Removes all the tokens granted for a given app ID\n      parameters:\n        - $ref: '#/components/parameters/applicationNamePathParam'\n      responses:\n        '204':\n          $ref: '#/components/responses/Deleted'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\ncomponents:\n  parameters:\n    usernamePathParams:\n      in: path\n      name: user-id\n      required: true\n      description: username of the user\n      schema:\n        type: string\n    applicationNamePathParam:\n      in: path\n      name: application-id\n      required: true\n      description: Application ID\n      schema:\n        type: string\n\n  schemas:\n    #-----------------------------------------------------\n    # AuthorizedApp Properties object\n    #-----------------------------------------------------\n    AuthorizedAppDTO:\n      type: object\n      required:\n        - id\n        - name\n        - clientId\n        - approvedScopes\n      properties:\n        id:\n          type: string\n          example: \"298c5fd8-01ac-4ada-bc10-1ce37f32140\"\n          description: Unique Id of the application.\n        name:\n          type: string\n          example: \"FooApp\"\n          description: Name of the application\n        clientId:\n          type: string\n          example: \"7y7zPj4wDX3nRtfPKrmt8Auke44a\"\n          description: Client Id of the application.\n        approvedScopes:\n          $ref: '#/components/schemas/ArrayOfApprovedScopes'\n\n    ArrayOfApprovedScopes:\n      type: array\n      description: Approved scopes\n      items:\n        type: string\n        example: [approved_scope_1, approved_scope_2]\n\n    #-----------------------------------------------------\n    # The Error Response  object\n    #-----------------------------------------------------\n    ErrorDTO:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: string\n          example: \"some_error_code\"\n        message:\n          type: string\n          example: \"Some Error Message\"\n        description:\n          type: string\n          example: \"Some Error Description\"\n        traceId:\n          type: string\n          example: \"Some Correlation for Error Instance\"\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    # ClientCertificate:\n    #   type: custom\n    OAuth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://localhost:9443/oauth2/authorize'\n          tokenUrl: 'https://localhost:9443/oauth2/token'\n          scopes: {}\n  #-----------------------------------------------------\n  # Descriptions of common responses\n  #-----------------------------------------------------\n  responses:\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorDTO'\n    Unauthorized:\n      description: Unauthorized\n    ServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorDTO'\n    InvalidInput:\n      description: Invalid input, request invalid\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorDTO'\n    Conflict:\n      description: Element Already Exists\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorDTO'\n    Created:\n      description: Item Created\n    OK:\n      description: OK\n    Deleted:\n      description: Item Deleted\n    Forbidden:\n      description: Resource Forbidden\n",
			"canonicalURL": "/github.com/wso2/identity-api-user@65a783723f43928af9a15ede87312635232d7b87/-/blob/components/org.wso2.carbon.identity.api.user.authorized.apps/org.wso2.carbon.identity.rest.api.user.authorized.apps.v2/src/main/resources/authorizedApps.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/identity-api-user/blob/65a783723f43928af9a15ede87312635232d7b87/components/org.wso2.carbon.identity.api.user.authorized.apps/org.wso2.carbon.identity.rest.api.user.authorized.apps.v2/src/main/resources/authorizedApps.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/{user-id}/authorized-apps/{application-id}\": get: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}