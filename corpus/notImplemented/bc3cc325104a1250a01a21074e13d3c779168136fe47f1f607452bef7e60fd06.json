{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Cosmo-Tech/cosmotech-api"
		},
		"file": {
			"name": "solution.yaml",
			"size": 0,
			"path": "solution/src/main/openapi/solution.yaml",
			"byteSize": 26296,
			"content": "openapi: 3.0.3\n\ninfo:\n  title: Cosmo Tech Solution Manager API\n  description: Cosmo Tech Solution Manager API\n  version: 0.0.8-SNAPSHOT\n\nservers:\n- url: 'https://api.azure.cosmo-platform.com'\n- url: 'http://localhost:4010'\n\nsecurity:\n- oAuth2AuthCode: [ ]\n\ntags:\n- name: solution\n  description: Solution Management\n\npaths:\n  /organizations/{organization_id}/solutions:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: createSolution\n      tags:\n        - solution\n      summary: Register a new solution\n      requestBody:\n        description: the Solution to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Solution'\n            examples:\n              Brewery:\n                $ref: '#/components/examples/Brewery'\n          application/yaml:\n            schema:\n              type: string\n              format: binary\n            examples:\n              ADTConnector:\n                $ref: '#/components/examples/Brewery'\n      responses:\n        \"201\":\n          description: the solution details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Solution'\n              examples:\n                Brewery:\n                  $ref: '#/components/examples/Brewery'\n        \"400\":\n          description: Bad request\n    get:\n      operationId: findAllSolutions\n      tags:\n        - solution\n      summary: List all Solutions\n      responses:\n        \"200\":\n          description: the solution details\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Solution'\n              examples:\n                Two:\n                  $ref: '#/components/examples/OneSolution'\n\n  /organizations/{organization_id}/solutions/{solution_id}:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: solution_id\n        in: path\n        description: the Solution identifier\n        required: true\n        schema:\n          type: string\n    get:\n      operationId: findSolutionById\n      tags:\n        - solution\n      summary: Get the details of a solution\n      responses:\n        \"200\":\n          description: the Solution details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Solution'\n              examples:\n                Brewery:\n                  $ref: '#/components/examples/Brewery'\n        \"404\":\n          description: the Solution specified is unknown or you don't have access to it\n    patch:\n      operationId: updateSolution\n      tags:\n        - solution\n      summary: Update a solution\n      requestBody:\n        description: the new Solution details.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Solution'\n            examples:\n              BreweryUpdate:\n                $ref: '#/components/examples/BreweryUpdate'\n          application/yaml:\n            schema:\n              type: string\n              format: binary\n            examples:\n              BreweryUpdate:\n                $ref: '#/components/examples/BreweryUpdate'\n      responses:\n        \"200\":\n          description: the solution details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Solution'\n              examples:\n                BreweryUpdated:\n                  $ref: '#/components/examples/BreweryUpdated'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: the Solution specified is unknown or you don't have access to it\n    delete:\n      operationId: deleteSolution\n      tags:\n        - solution\n      summary: Delete a solution\n      responses:\n        \"204\":\n          description: Request succeeded\n        \"404\":\n          description: the Solution specified is unknown or you don't have access to it\n\n  /organizations/{organization_id}/solutions/{solution_id}/parameters:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: solution_id\n        in: path\n        description: the Solution identifier\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: addOrReplaceParameters\n      tags:\n        - solution\n      summary: Add Parameters. Any item with the same ID will be overwritten\n      requestBody:\n        description: the Parameters\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/RunTemplateParameter\"\n      responses:\n        \"201\":\n          description: the Parameters\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RunTemplateParameter'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: the Solution specified is unknown or you don't have access to it\n    delete:\n      operationId: removeAllSolutionParameters\n      tags:\n        - solution\n      summary: Remove all Parameters from the Solution specified\n      responses:\n        \"204\":\n          description: the operation succeeded\n        \"404\":\n          description: the Solution specified is unknown or you don't have access to it\n\n  /organizations/{organization_id}/solutions/{solution_id}/parameterGroups:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: solution_id\n        in: path\n        description: the Solution identifier\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: addOrReplaceParameterGroups\n      tags:\n        - solution\n      summary: Add Parameter Groups. Any item with the same ID will be overwritten\n      requestBody:\n        description: the Parameter Groups\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/RunTemplateParameterGroup\"\n      responses:\n        \"201\":\n          description: the Parameter Groups\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RunTemplateParameterGroup'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: the Solution specified is unknown or you don't have access to it\n    delete:\n      operationId: removeAllSolutionParameterGroups\n      tags:\n        - solution\n      summary: Remove all Parameter Groups from the Solution specified\n      responses:\n        \"204\":\n          description: the operation succeeded\n        \"404\":\n          description: the Solution specified is unknown or you don't have access to it\n\n  /organizations/{organization_id}/solutions/{solution_id}/runTemplates:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: solution_id\n        in: path\n        description: the Solution identifier\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: addOrReplaceRunTemplates\n      tags:\n        - solution\n      summary: Add Run Templates. Any item with the same ID will be overwritten\n      requestBody:\n        description: the Run Templates\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/RunTemplate\"\n      responses:\n        \"201\":\n          description: the Parameters\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RunTemplate'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: the Solution specified is unknown or you don't have access to it\n    delete:\n      operationId: removeAllRunTemplates\n      tags:\n        - solution\n      summary: Remove all Run Templates from the Solution specified\n      responses:\n        \"204\":\n          description: the operation succeeded\n        \"404\":\n          description: the Solution specified is unknown or you don't have access to it\n\n  /organizations/{organization_id}/solutions/{solution_id}/runTemplates/{run_template_id}:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: solution_id\n        in: path\n        description: the Solution identifier\n        required: true\n        schema:\n          type: string\n      - name: run_template_id\n        in: path\n        description: the Run Template identifier\n        required: true\n        schema:\n          type: string\n\n    patch:\n      operationId: updateSolutionRunTemplate\n      tags:\n        - solution\n      summary: Update the specified Solution Run Template\n      requestBody:\n        description: the Run Templates\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RunTemplate\"\n          application/yaml:\n            schema:\n              $ref: \"#/components/schemas/RunTemplate\"\n      responses:\n        \"200\":\n          description: the Parameters\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RunTemplate'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: the Solution or Run Template specified is unknown or you don't have access to it\n\n    delete:\n      operationId: deleteSolutionRunTemplate\n      tags:\n        - solution\n      summary: Remove the specified Solution Run Template\n      responses:\n        \"204\":\n          description: the operation succeeded\n        \"404\":\n          description: the Solution specified is unknown or you don't have access to it\n\n  /organizations/{organization_id}/solutions/{solution_id}/runtemplates/{run_template_id}/handlers/{handler_id}/download:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: solution_id\n        in: path\n        description: the Solution identifier\n        required: true\n        schema:\n          type: string\n      - name: run_template_id\n        in: path\n        description: the Run Template identifier\n        required: true\n        schema:\n          type: string\n      - name: handler_id\n        in: path\n        description: the Handler identifier\n        required: true\n        schema:\n          $ref: '#/components/schemas/RunTemplateHandlerId'\n    get:\n      operationId: downloadRunTemplateHandler\n      tags:\n        - solution\n      summary: Download a Run Template step handler zip file\n      responses:\n        \"200\":\n          description: the run template handle file as a resource\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        \"404\":\n          description: the Run Template Handler file specified is unknown or you don't have access to it\n  /organizations/{organization_id}/solutions/{solution_id}/runtemplates/{run_template_id}/handlers/{handler_id}/upload:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: solution_id\n        in: path\n        description: the Solution identifier\n        required: true\n        schema:\n          type: string\n      - name: run_template_id\n        in: path\n        description: the Run Template identifier\n        required: true\n        schema:\n          type: string\n      - name: handler_id\n        in: path\n        description: the Handler identifier\n        required: true\n        schema:\n          $ref: '#/components/schemas/RunTemplateHandlerId'\n      - name: overwrite\n        in: query\n        description: whether to overwrite any existing handler resource\n        schema:\n          type: boolean\n          default: false\n    post:\n      operationId: uploadRunTemplateHandler\n      tags:\n        - solution\n      summary: Upload a Run Template step handler zip file\n      requestBody:\n        required: true\n        content:\n          application/octet-stream:\n            # Using 'application/octet-stream' so Swagger UI can display a file upload button.\n            # See https://github.com/swagger-api/swagger-ui/issues/5636\n            # In any case, the request body mime type is enforced in the Service implementation.\n            schema:\n              type: string\n              format: binary\n      responses:\n        \"201\":\n          description: zip file uploaded\n        \"400\":\n          description: Bad request\n\ncomponents:\n  securitySchemes:\n    oAuth2AuthCode:\n      type: oauth2\n      description: OAuth2 authentication\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/v2.0/authorize\n          scopes:\n            http://dev.api.cosmotech.com/platform: Platform scope\n  schemas:\n    Solution:\n      type: object\n      description: a version of a Solution\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: the Solution version unique identifier\n        key:\n          type: string\n          description: the Solution key which group Solution versions\n        name:\n          type: string\n          description: the Solution name\n        description:\n          type: string\n          description: the Solution description\n        repository:\n          type: string\n          description: the registry repository containing the image\n        csmSimulator:\n          type: string\n          description: the main Cosmo Tech simulator name used in standard Run Template\n        version:\n          type: string\n          description: the Solution version MAJOR.MINOR.PATCH. Must be aligned with an existing repository tag\n        ownerId:\n          type: string\n          readOnly: true\n          description: the User id which own this Solution\n        sdkVersion:\n          type: string\n          description: the MAJOR.MINOR version used to build this solution\n        url:\n          type: string\n          description: an optional URL link to solution page\n        tags:\n          type: array\n          description: the list of tags\n          items:\n            type: string\n        parameters:\n          type: array\n          description: the list of Run Template Parameters\n          items:\n            $ref: '#/components/schemas/RunTemplateParameter'\n        parameterGroups:\n          type: array\n          description: the list of parameters groups for the Run Templates\n          items:\n            $ref: '#/components/schemas/RunTemplateParameterGroup'\n        runTemplates:\n          type: array\n          description: list of Run Template\n          items:\n            $ref: '#/components/schemas/RunTemplate'\n      required:\n        - key\n        - name\n        - repository\n        - version\n        - runTemplates\n    RunTemplate:\n      type: object\n      description: a Solution Run Template\n      properties:\n        id:\n          type: string\n          description: the Solution Run Template id\n        name:\n          type: string\n          description: the Run Template name\n        description:\n          type: string\n          description: the Run Template description\n        csmSimulation:\n          type: string\n          description: the Cosmo Tech simulation name. This information is send to the Engine. Mandatory information if no Engine is defined\n        tags:\n          type: array\n          description: the list of Run Template tags\n          items:\n            type: string\n        computeSize:\n          type: string\n          description: the compute size needed for this Run Template. Standard sizes are basic and highcpu. Default is basic\n        noDataIngestionState:\n          type: boolean\n          description: set to true if the run template does not want to check data ingestion state (no probes or not control plane)\n        fetchDatasets:\n          type: boolean\n          description: whether or not the fetch dataset step is done\n        scenarioDataDownloadTransform:\n          type: boolean\n          description: whether or not the scenario data download transform step step is done\n        fetchScenarioParameters:\n          type: boolean\n          description: whether or not the fetch parameters step is done\n        applyParameters:\n          type: boolean\n          description: whether or not the apply parameter step is done\n        validateData:\n          type: boolean\n          description: whether or not the validate step is done\n        sendDatasetsToDataWarehouse:\n          type: boolean\n          description: whether or not the Datasets values are send to the DataWarehouse prior to Simulation Run. If not set follow the Workspace setting\n        sendInputParametersToDataWarehouse:\n          type: boolean\n          description: whether or not the input parameters values are send to the DataWarehouse prior to Simulation Run. If not set follow the Workspace setting\n        preRun:\n          type: boolean\n          description: whether or not the pre-run step is done\n        run:\n          type: boolean\n          description: whether or not the run step is done\n        postRun:\n          type: boolean\n          description: whether or not the post-run step is done\n        parametersJson:\n          type: boolean\n          description: whether or not to store the scenario parameters in json instead of csv\n        parametersHandlerSource:\n          $ref: \"#/components/schemas/RunTemplateStepSource\"\n        datasetValidatorSource:\n          $ref: \"#/components/schemas/RunTemplateStepSource\"\n        preRunSource:\n          $ref: \"#/components/schemas/RunTemplateStepSource\"\n        runSource:\n          $ref: \"#/components/schemas/RunTemplateStepSource\"\n        postRunSource:\n          $ref: \"#/components/schemas/RunTemplateStepSource\"\n        scenariodataTransformSource:\n          $ref: \"#/components/schemas/RunTemplateStepSource\"\n        parameterGroups:\n          type: array\n          description: the ordered list of parameters groups for the Run Template\n          items:\n            type: string\n            description: a Run Template Group Parameter id\n        stackSteps:\n          type: boolean\n          description: whether or not to stack adjacent scenario run steps in one container run which will chain steps\n        gitRepositoryUrl:\n          type: string\n          description: an optional URL to the git repository\n        gitBranchName:\n          type: string\n          description: an optional git branch name\n        runTemplateSourceDir:\n          type: string\n          description: an optional directory where to find the run template source\n      required:\n        - id\n        - name\n    RunTemplateHandlerId:\n      type: string\n      description: the Run Template step handler identifier\n      enum: [\"parameters_handler\",\"validator\",\"prerun\",\"engine\",\"postrun\",\"scenariodata_transform\"]\n    RunTemplateStepSource:\n      type: string\n      description: the source local, cloud or git repository\n      enum: [\"cloud\",\"git\",\"local\",\"platform\"]\n    RunTemplateParameterGroup:\n      type: object\n      description: a Parameter Group for a Run Template\n      properties:\n        id:\n          type: string\n          description: the Parameter Group id\n        labels:\n          $ref: '#/components/schemas/TranslatedLabels'\n        isTable:\n          type: boolean\n          description: does the group define a table\n        options:\n          type: object\n          description: freeform options\n          additionalProperties: true\n        parentId:\n          type: string\n          description: the Run Template Group parent Id\n        parameters:\n          type: array\n          description: an ordered list of Run Template Parameters\n          items:\n            type: string\n            description: a Run Template Parameter id\n      required:\n        - id\n        - labels\n        - parameters\n    RunTemplateParameter:\n      type: object\n      description: a Run Template Parameter\n      properties:\n        id:\n          type: string\n          description: the Parameter id\n        labels:\n          $ref: '#/components/schemas/TranslatedLabels'\n        varType:\n          type: string\n          description: the variable type for the parameter. Basic types or special type %DATASETID%\n        defaultValue:\n          type: string\n          description: the default value for this parameter\n        minValue:\n          type: string\n          description: the minimum value for this parameter\n        maxValue:\n          type: string\n          description: the maximum value for this parameter\n        regexValidation:\n          type: string\n          description: a regex to validate the value\n        options:\n          type: object\n          description: freeform options\n          additionalProperties: true\n      required:\n        - id\n        - labels\n        - varType\n    TranslatedLabels:\n      type: object\n      description: a translated label with key as ISO 639-1 code\n      additionalProperties:\n        type: string\n  examples:\n    Brewery:\n      summary: Brewery Solution\n      description: Brewery Solution example\n      value:\n        id: \"1\"\n        key: Brewery Solution\n        name:  Brewery Solution\n        description: A Brewery Supplier Solution Model which simulate stock, production, transport and customer satisfaction\n        repository: brewery_solution\n        version: \"1.0.0\"\n        ownerId: \"1\"\n        url: https://github.com/Cosm-Tech/brewery.git\n        tags:\n          - Brewery\n        parameters:\n          - id: prefix\n            labels:\n              fr: Prefix des noms\n              en: Names prefix\n            varType: string\n        parameterGroups:\n          - id: consumers\n            labels:\n              fr: Consommateurs\n              en: Consumers\n            parameters:\n              - prefix\n        runTemplates:\n          - id: hundred\n            name: Full simulation 100 steps\n            description: Run a full simulation with 100 steps\n            csmSimulation: DeployedSimulation\n            tags:\n              - Full\n              - Supply\n            computeSize: highcpu\n            parameterGroups:\n              - consumers\n    BreweryUpdate:\n      summary: Brewery Solution update\n      description: Brewery Solution update example\n      value:\n        name: Brewery Solution 2021\n    BreweryUpdated:\n      summary: Brewery Solution\n      description: Brewery Solution example\n      value:\n        id: \"1\"\n        key: Brewery Solution\n        name:  Brewery Solution 2021\n        description: A Brewery Supplier Solution Model which simulate stock, production, transport and customer satisfaction\n        repository: brewery_solution\n        version: \"1.0.0\"\n        ownerId: \"1\"\n        url: https://github.com/Cosm-Tech/brewery.git\n        tags:\n          - Brewery\n        parameters:\n          - id: prefix\n            labels:\n              fr: Prefix des noms\n              en: Names prefix\n            varType: string\n        parameterGroups:\n          - id: consumers\n            labels:\n              fr: Consommateurs\n              en: Consumers\n            parameters:\n              - prefix\n        runTemplates:\n          - id: hundred\n            name: Full simulation 100 steps\n            description: Run a full simulation with 100 steps\n            csmSimulation: DeployedSimulation\n            tags:\n              - Full\n              - Supply\n            computeSize: highcpu\n            parameterGroups:\n              - consumers\n    OneSolution:\n      summary: Brewery Solution\n      description: Brewery Solution example\n      value:\n        - id: \"1\"\n          key: Brewery Solution\n          name:  Brewery Solution\n          description: A Brewery Supplier Solution Model which simulate stock, production, transport and customer satisfaction\n          repository: brewery_solution\n          version: \"1.0.0\"\n          ownerId: \"1\"\n          url: https://github.com/Cosm-Tech/brewery.git\n          tags:\n            - Brewery\n          parameters:\n            - id: prefix\n              labels:\n                fr: Prefix des noms\n                en: Names prefix\n              varType: string\n          parameterGroups:\n          - id: consumers\n            labels:\n              fr: Consommateurs\n              en: Consumers\n            parameters:\n              - prefix\n          runTemplates:\n            - id: hundred\n              name: Full simulation 100 steps\n              description: Run a full simulation with 100 steps\n              csmSimulation: DeployedSimulation\n              tags:\n                - Full\n                - Supply\n              computeSize: highcpu\n              parameterGroups:\n                - consumers\n            - id: standard\n              name: Standard Simulation\n              description: Run the standard Simulation\n              csmSimulation: DeployedSimulation\n              tags:\n                - Full\n                - Supply\n              computeSize: basic\n",
			"canonicalURL": "/github.com/Cosmo-Tech/cosmotech-api@56c19a68914e91e0ac5ec3e3ec50952c8464a03b/-/blob/solution/src/main/openapi/solution.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Cosmo-Tech/cosmotech-api/blob/56c19a68914e91e0ac5ec3e3ec50952c8464a03b/solution/src/main/openapi/solution.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/organizations/{organization_id}/solutions/{solution_id}/runTemplates\": post: security: security \"oAuth2AuthCode\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}