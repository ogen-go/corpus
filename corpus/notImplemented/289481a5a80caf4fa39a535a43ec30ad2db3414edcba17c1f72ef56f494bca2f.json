{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/light-oauth2"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "db/sqlserver/config/oauth2-client/openapi.yaml",
			"byteSize": 8597,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: OAuth2 Client Registration\n  description: OAuth2 Client Registration microservices endpoints.\n  contact:\n    email: stevehu@gmail.com\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nservers:\n   - url: 'https://oauth2.networknt.com'    \npaths:\n  /oauth2/client:\n    post:\n      description: Return a client object\n      operationId: createClient\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Client'\n      security:\n        - client_auth:\n            - oauth.client.w\n      requestBody:\n        $ref: '#/components/requestBodies/Client'\n    put:\n      description: Return the updated client\n      operationId: updateClient\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Client'\n      security:\n        - client_auth:\n            - oauth.client.w\n      requestBody:\n        $ref: '#/components/requestBodies/Client'\n    get:\n      description: Return all clients\n      operationId: getAllClient\n      parameters:\n        - name: page\n          in: query\n          description: Page number\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: pageSize\n          in: query\n          description: Pag size\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: clientName\n          in: query\n          description: Partial clientName for filter\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Client'\n      security:\n        - client_auth:\n            - oauth.client.r\n  '/oauth2/client/{clientId}':\n    delete:\n      description: Delete a client by Id\n      operationId: deleteClient\n      parameters:\n        - name: clientId\n          in: path\n          description: Client Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '400':\n          description: Invalid clientId supplied\n        '404':\n          description: Client not found\n      security:\n        - client_auth:\n            - oauth.client.w\n    get:\n      description: Get a client by Id\n      operationId: getClient\n      parameters:\n        - name: clientId\n          in: path\n          description: Client Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Client'\n        '400':\n          description: Invalid clientId supplied\n        '404':\n          description: Client not found\n      security:\n        - client_auth:\n            - oauth.client.r\n            - oauth.client.w\n  '/oauth2/client/{clientId}/service':\n    delete:\n      description: Delete all associated services for a client by clientId\n      operationId: deleteAllClientService\n      parameters:\n        - name: clientId\n          in: path\n          description: Client Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n        '404':\n          description: Client not found\n      security:\n        - client_auth:\n            - oauth.client.w\n    get:\n      description: Get all associated services and endpoints by clientId\n      operationId: getAllClientService\n      parameters:\n        - name: clientId\n          in: path\n          description: Client Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n        '404':\n          description: Client not found\n      security:\n        - client_auth:\n            - oauth.client.r\n            - oauth.client.w\n  '/oauth2/client/{clientId}/service/{serviceId}':\n    post:\n      description: Link a service and its endpoints to a client\n      operationId: linkClientService\n      parameters:\n        - name: clientId\n          in: path\n          description: Client Id\n          required: true\n          schema:\n            type: string\n        - name: serviceId\n          in: path\n          description: Service Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n        '404':\n          description: Client or service not found\n      security:\n        - client_auth:\n            - oauth.client.w\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n        description: A list of endpoints that needs to be linked to the client\n        required: true\n    delete:\n      description: Delete all endpoints of a service for a client\n      operationId: deleteClientService\n      parameters:\n        - name: clientId\n          in: path\n          description: Client Id\n          required: true\n          schema:\n            type: string\n        - name: serviceId\n          in: path\n          description: Service Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n        '404':\n          description: Client or service not found\n      security:\n        - client_auth:\n            - oauth.client.w\n    get:\n      description: Get linked endpoints of a service from a client\n      operationId: getClientService\n      parameters:\n        - name: clientId\n          in: path\n          description: Client Id\n          required: true\n          schema:\n            type: string\n        - name: serviceId\n          in: path\n          description: Service Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n        '404':\n          description: Client or service not found\n      security:\n        - client_auth:\n            - oauth.client.r\n            - oauth.client.w\ncomponents:\n  requestBodies:\n    Client:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Client'\n      description: Client object that needs to be added\n      required: true\n  securitySchemes:\n    client_auth:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: 'http://localhost:8888/oauth2/code'\n          scopes:\n            oauth.client.w: write oauth client\n            oauth.client.r: read oauth client\n  schemas:\n    Client:\n      type: object\n      required:\n        - clientType\n        - clientProfile\n        - clientName\n        - clientDesc\n        - ownerId\n        - host\n        - scope\n      properties:\n        clientId:\n          type: string\n          description: a unique client id\n        clientSecret:\n          type: string\n          description: client secret\n        clientType:\n          type: string\n          description: client type\n          enum:\n            - confidential\n            - public\n            - trusted\n            - external\n        clientProfile:\n          type: string\n          description: client profile\n          enum:\n            - webserver\n            - browser\n            - mobile\n            - service\n            - batch\n        clientName:\n          type: string\n          description: client name\n        clientDesc:\n          type: string\n          description: client description\n        ownerId:\n          type: string\n          description: client owner id\n        host:\n          type: string\n          description: client host\n        scope:\n          type: string\n          description: client scope separated by space\n        customClaim:\n          type: string\n          description: custom claim string in JSON format\n        redirectUri:\n          type: string\n          description: redirect uri\n        authenticateClass:\n          type: string\n          description: authenticate class\n        derefClientId:\n          type: string\n          description: the client that can call de-reference token endpoint",
			"canonicalURL": "/github.com/networknt/light-oauth2@edc7f0722a59778e71ddb7bc3a7be42007addacd/-/blob/db/sqlserver/config/oauth2-client/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/networknt/light-oauth2/blob/edc7f0722a59778e71ddb7bc3a7be42007addacd/db/sqlserver/config/oauth2-client/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/oauth2/client\": get: security: security \"client_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}