{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/docusign.click/openapi.yaml",
			"byteSize": 54594,
			"content": "openapi: 3.0.1\ninfo:\n  title: DocuSign Click API\n  description: \u003e-\n    This is a generated connector for [DocuSign Click API](https://developers.docusign.com/docs/click-api/) OpenAPI specification.\n    DocuSign Click lets you capture consent to standard agreement terms with a single click terms and conditions, terms of service, terms of use, privacy policies, and more. The Click API lets you include this customizable clickwrap solution in your DocuSign integrations.\n  termsOfService: https://www.docusign.com/company/terms-and-conditions/web\n  contact:\n    name: DocuSign Developer Center\n    url: https://developers.docusign.com/\n    email: devcenter@docusign.com\n  version: v1\n  x-ballerina-init-description: \n    The connector initialization requires setting the API credentials.\n\n    Create a [DocuSign account](https://www.docusign.com/) and obtain tokens by following [this guide](https://developers.docusign.com/docs/click-api/click101/auth/).\n  x-ballerina-display:\n    label: DocuSign Click\n    iconPath: \"icon.png\" \nservers:\n- url: https://www.docusign.net/clickapi\ntags:\n- name: ClickWraps\n  description: \"\"\npaths:\n  /service_information:\n    get:\n      tags:\n      - ClickWraps\n      summary: Gets the current version and other information about the Click API.\n      description: |-\n        The response includes information about the version of the Click API.\n\n        ```\n        {\n          \"serviceVersions\": [\n            {\n              \"version\": \"v1\",\n              \"versionUrl\": \"https://demo.docusign.net/clickapi/v1\"\n            }\n          ],\n          \"buildVersion\": \"20.4.0.16708 (20.4.00.00_newt.16708+g236a94)\",\n          \"linkedSites\": [\n            \"https://demo.docusign.net\"\n          ]\n        }\n        ```\n      operationId: Get Service Information\n      responses:\n        200:\n          description: Successful response.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/serviceInformation'\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: getServiceInformation\n      x-ds-method: getServiceInformation\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\n  /v1/accounts/{accountId}/clickwraps:\n    get:\n      tags:\n      - ClickWraps\n      summary: Gets all the clickwraps for an account.\n      description: Gets all the clickwraps for an account.\n      operationId: Get Clickwraps\n      parameters:\n      - name: accountId\n        in: path\n        description: A GUID that identifies your account.\n        required: true\n        schema:\n          type: string\n      - name: from_date\n        in: query\n        description: Optional. The earliest date to return agreements from.\n        schema:\n          type: string\n      - name: ownerUserId\n        in: query\n        description: Optional. The user ID of the owner.\n        schema:\n          type: string\n      - name: page_number\n        in: query\n        description: Optional. The page number to return.\n        schema:\n          type: string\n      - name: status\n        in: query\n        description: |-\n          Optional. The status of the clickwraps to filter by. One of:\n\n          - `active`\n          - `inactive`\n\n        schema:\n          type: string\n      - name: to_date\n        in: query\n        description: Optional. The latest date to return agreements from.\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful response.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/clickwrapVersionsResponse'\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: getClickwraps\n      x-ds-method: getClickwraps\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\n    post:\n      tags:\n      - ClickWraps\n      summary: Creates a clickwrap for an account.\n      description: Creates a clickwrap for an account and returns the response with created agreement.\n      operationId: Post Clickwrap\n      parameters:\n      - name: accountId\n        in: path\n        description: A GUID that identifies your account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Request body for working with clickwrap.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/clickwrapRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/clickwrapRequest'\n        required: false\n      responses:\n        201:\n          description: Successful response.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/clickwrapVersionSummaryResponse'\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: createClickwrap\n      x-ds-method: createClickwrap\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: clickwrapRequest\n    delete:\n      tags:\n      - ClickWraps\n      summary: Deletes clickwraps for an account.\n      description: Deletes all clickwraps for an account or only the ones specified in the `clickwrapIds` query parameter.\n      operationId: Delete Clickwraps\n      parameters:\n      - name: accountId\n        in: path\n        description: A GUID that identifies your account.\n        required: true\n        schema:\n          type: string\n      - name: clickwrapIds\n        in: query\n        description: A comma-separated list of clickwrap IDs to delete.\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful response.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/clickwrapsDeleteResponse'\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: deleteClickwraps\n      x-ds-method: deleteClickwraps\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\n  /v1/accounts/{accountId}/clickwraps/{clickwrapId}:\n    get:\n      tags:\n      - ClickWraps\n      summary: Gets a  single clickwrap object.\n      description: Gets a  single clickwrap object.\n      operationId: Get Clickwrap\n      parameters:\n      - name: accountId\n        in: path\n        description: A GUID that identifies your account.\n        required: true\n        schema:\n          type: string\n      - name: clickwrapId\n        in: path\n        description: The ID of the clickwrap.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful response.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/clickwrapVersionResponse'\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: getClickwrap\n      x-ds-method: getClickwrap\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\n    put:\n      tags:\n      - ClickWraps\n      summary: Updates the user ID of a clickwrap.\n      description: Updates the user ID of a clickwrap. You specify the old and the new user ID in the request body.\n      operationId: Put Clickwrap\n      parameters:\n      - name: accountId\n        in: path\n        description: A GUID that identifies your account.\n        required: true\n        schema:\n          type: string\n      - name: clickwrapId\n        in: path\n        description: The ID of the clickwrap.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: \"Clieckwrap transfer payload\"\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/clickwrapTransferRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/clickwrapTransferRequest'\n        required: false\n      responses:\n        200:\n          description: Successful response.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/clickwrapVersionSummaryResponse'\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: updateClickwrap\n      x-ds-method: updateClickwrap\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: clickwrapTransferRequest\n    delete:\n      tags:\n      - ClickWraps\n      summary: Deletes a clickwrap and all of its versions.\n      description: Deletes the clickwrap specified by `clickwrapId` and all of its versions. Active clickwraps are not deleted\n      operationId: Delete Clickwrap\n      parameters:\n      - name: accountId\n        in: path\n        description: A GUID that identifies your account.\n        required: true\n        schema:\n          type: string\n      - name: clickwrapId\n        in: path\n        description: The ID of the clickwrap.\n        required: true\n        schema:\n          type: string\n      - name: versions\n        in: query\n        description: A comma-separated list of versions to delete.\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful response.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/clickwrapVersionsDeleteResponse'\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: deleteClickwrap\n      x-ds-method: deleteClickwrap\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\n  /v1/accounts/{accountId}/clickwraps/{clickwrapId}/agreements:\n    post:\n      tags:\n      - ClickWraps\n      summary: Checks if a user has agreed to a clickwrap.\n      description: |-\n        Checks if a user has agreed to a clickwrap and returns a response with the agreement URL.\n        \n        Returns HTTP status code OK if the user has no pending agreement.\n      operationId: Check If User Has Agreed\n      parameters:\n      - name: accountId\n        in: path\n        description: A GUID that identifies your account.\n        required: true\n        schema:\n          type: string\n      - name: clickwrapId\n        in: path\n        description: The ID of the clickwrap.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: \"User agreement payload\"\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/userAgreementRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/userAgreementRequest'\n        required: false\n      responses:\n        201:\n          description: Successful response.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/userAgreementResponse'\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: createHasAgreed\n      x-ds-method: createHasAgreed\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: userAgreementRequest\n  /v1/accounts/{accountId}/clickwraps/{clickwrapId}/agreements/{agreementId}:\n    get:\n      tags:\n      - ClickWraps\n      summary: Gets a specific agreement for a specified clickwrap.\n      description: |-\n        Gets the agreement specified by `agreementId`.\n\n        You can omit `agreementId` to get the latest agreement.\n      operationId: Get User Agreement\n      parameters:\n      - name: accountId\n        in: path\n        description: A GUID that identifies your account.\n        required: true\n        schema:\n          type: string\n      - name: agreementId\n        in: path\n        description: The agreement ID.\n        required: true\n        schema:\n          type: string\n      - name: clickwrapId\n        in: path\n        description: The ID of the clickwrap.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful response.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/userAgreementResponse'\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: getAgreement\n      x-ds-method: getAgreement\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\n  /v1/accounts/{accountId}/clickwraps/{clickwrapId}/agreements/{agreementId}/download:\n    get:\n      tags:\n      - ClickWraps\n      summary: Gets the completed user agreement PDF.\n      description: |-\n        Gets the PDF of  `agreementId` for the clickwrap specified by `ciickwrapId`.\n\n        The response to this method is the bytes of the PDF file.\n        The response includes the HTTP header `application/pdf.\n      operationId: Get Agreement Pdf\n      parameters:\n      - name: accountId\n        in: path\n        description: A GUID that identifies your account.\n        required: true\n        schema:\n          type: string\n      - name: agreementId\n        in: path\n        description: The agreement ID.\n        required: true\n        schema:\n          type: string\n      - name: clickwrapId\n        in: path\n        description: The ID of the clickwrap.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful response.\n          content: {}\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: getAgreementPdf\n      x-ds-method: getAgreementPdf\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\n  /v1/accounts/{accountId}/clickwraps/{clickwrapId}/users:\n    get:\n      tags:\n      - ClickWraps\n      summary: Get user agreements\n      description: |\n        Get user agreements\n      operationId: Get Clickwrap Agreements\n      parameters:\n      - name: accountId\n        in: path\n        description: A GUID that identifies your account.\n        required: true\n        schema:\n          type: string\n      - name: clickwrapId\n        in: path\n        description: The ID of the clickwrap.\n        required: true\n        schema:\n          type: string\n      - name: client_user_id\n        in: query\n        description: |\n          The client ID.\n        schema:\n          type: string\n      - name: from_date\n        in: query\n        description: Optional. The earliest date to return agreements from.\n        schema:\n          type: string\n      - name: page_number\n        in: query\n        description: |\n          Optional. The page number to return.\n        schema:\n          type: string\n      - name: status\n        in: query\n        description: Optional. The status of the clickwraps to return.\n        schema:\n          type: string\n      - name: to_date\n        in: query\n        description: Optional. The latest date to return agreements from.\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful response.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/clickwrapAgreementsResponse'\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: getClickwrapAgreements\n      x-ds-method: getClickwrapAgreements\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\n  /v1/accounts/{accountId}/clickwraps/{clickwrapId}/versions:\n    post:\n      tags:\n      - ClickWraps\n      summary: Creates a new clickwrap version.\n      description: Creates a new clickwrap version.\n      operationId: Create Clickwrap Version\n      parameters:\n      - name: accountId\n        in: path\n        description: A GUID that identifies your account.\n        required: true\n        schema:\n          type: string\n      - name: clickwrapId\n        in: path\n        description: The ID of the clickwrap.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Request body for working with clickwrap.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/clickwrapRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/clickwrapRequest'\n        required: false\n      responses:\n        201:\n          description: Successful response.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/clickwrapVersionSummaryResponse'\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: createClickwrapVersion\n      x-ds-method: createClickwrapVersion\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: clickwrapRequest\n    delete:\n      tags:\n      - ClickWraps\n      summary: Deletes the versions of a clickwrap.\n      description: Deletes all versions of a clickwrap, or only the ones specified in the `clickwrapVersionIds` query parameter.\n      operationId: Delete Clickwrap Versions\n      parameters:\n      - name: accountId\n        in: path\n        description: A GUID that identifies your account.\n        required: true\n        schema:\n          type: string\n      - name: clickwrapId\n        in: path\n        description: The ID of the clickwrap.\n        required: true\n        schema:\n          type: string\n      - name: clickwrapVersionIds\n        in: query\n        description: A comma-separated list of clickwrap version IDs to delete.\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful response.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/clickwrapVersionsDeleteResponse'\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: deleteClickwrapVersions\n      x-ds-method: deleteClickwrapVersions\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\n  /v1/accounts/{accountId}/clickwraps/{clickwrapId}/versions/{versionId}:\n    get:\n      tags:\n      - ClickWraps\n      summary: Gets a specific version from a clickwrap.\n      description: Gets the version specified by `versionId`  from the clickwrap `clickwrapId`.\n      operationId: Get Clickwrap Version\n      parameters:\n      - name: accountId\n        in: path\n        description: A GUID that identifies your account.\n        required: true\n        schema:\n          type: string\n      - name: clickwrapId\n        in: path\n        description: The ID of the clickwrap.\n        required: true\n        schema:\n          type: string\n      - name: versionId\n        in: path\n        description: The ID of the version.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful response.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/clickwrapVersionResponse'\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: getClickwrapVersion\n      x-ds-method: getClickwrapVersion\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\n    put:\n      tags:\n      - ClickWraps\n      summary: Updates a specific version of a clickwrap.\n      description: Updates the clickwrap version `versionId` of the clickwrap `clickwrapId`.\n      operationId: Update Clickwrap Version\n      parameters:\n      - name: accountId\n        in: path\n        description: A GUID that identifies your account.\n        required: true\n        schema:\n          type: string\n      - name: clickwrapId\n        in: path\n        description: The ID of the clickwrap.\n        required: true\n        schema:\n          type: string\n      - name: versionId\n        in: path\n        description: The ID of the version.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Request body for working with clickwrap.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/clickwrapRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/clickwrapRequest'\n        required: false\n      responses:\n        200:\n          description: Successful response.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/clickwrapVersionSummaryResponse'\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: updateClickwrapVersion\n      x-ds-method: updateClickwrapVersion\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: clickwrapRequest\n    delete:\n      tags:\n      - ClickWraps\n      summary: Deletes a specific version of a clickwrap.\n      description: Deletes the clickwrap version `versionId` of the clickwrap `clickwrapId`.\n      operationId: Delete Clickwrap Version\n      parameters:\n      - name: accountId\n        in: path\n        description: A GUID that identifies your account.\n        required: true\n        schema:\n          type: string\n      - name: clickwrapId\n        in: path\n        description: The ID of the clickwrap.\n        required: true\n        schema:\n          type: string\n      - name: versionId\n        in: path\n        description: The ID of the version.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful response.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/clickwrapVersionDeleteResponse'\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: deleteClickwrapVersion\n      x-ds-method: deleteClickwrapVersion\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\n  /v1/accounts/{accountId}/clickwraps/{clickwrapId}/versions/{versionId}/users:\n    get:\n      tags:\n      - ClickWraps\n      summary: Gets the agreement responses for a clickwrap version.\n      description: Gets the agreement responses for a specific version.\n      operationId: Get Clickwrap Version User Agreements\n      parameters:\n      - name: accountId\n        in: path\n        description: A GUID that identifies your account.\n          This value is automatically generated by DocuSign for any account you create. Copy the value from \n          the **API Account ID** field in the **API and Keys** page in eSignature Settings.\n        required: true\n        schema:\n          type: string\n      - name: clickwrapId\n        in: path\n        description: The ID of the clickwrap.\n        required: true\n        schema:\n          type: string\n      - name: versionId\n        in: path\n        description: The ID of the version.\n        required: true\n        schema:\n          type: string\n      - name: client_user_id\n        in: query\n        description: Client user ID.\n        schema:\n          type: string\n      - name: from_date\n        in: query\n        description: Optional. The earliest date to return agreements from.\n        schema:\n          type: string\n      - name: page_number\n        in: query\n        description: Optional. The page number to return.\n        schema:\n          type: string\n      - name: status\n        in: query\n        description: |-\n          Clickwrap status. Possible values:\n\n          - `active`\n          - `inactive`\n          - `deleted`\n        schema:\n          type: string\n      - name: to_date\n        in: query\n        description: Optional. The latest date to return agreements from.\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful response.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/clickwrapAgreementsResponse'\n        400:\n          description: Error encountered.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/errorDetails'\n      deprecated: false\n      x-ds-methodname: getClickwrapVersionAgreements\n      x-ds-method: getClickwrapVersionAgreements\n      x-ds-service: Uncategorized\n      x-ds-in-sdk: true\ncomponents:\n  schemas:\n    clickwrapAgreementsResponse:\n      type: object\n      properties:\n        beginCreatedOn:\n          type: object\n          properties: {}\n          description: User agreements from this datetime.\n        minimumPagesRemaining:\n          type: integer\n          description: Number of pages remaining in the response.\n          format: int32\n        page:\n          type: integer\n          description: The number of the current page.\n          format: int32\n        pageSize:\n          type: integer\n          description: The number of items per page.\n          format: int32\n        userAgreements:\n          type: array\n          description: An array of user agreements.\n          items:\n            $ref: '#/components/schemas/userAgreementResponse'\n      description: \"\"\n      x-ds-definition-name: clickwrapAgreementsResponse\n      x-ms-summary: \"\"\n    clickwrapDeleteResponse:\n      type: object\n      properties:\n        clickwrapId:\n          type: string\n          description: The ID of the clickwrap.\n        clickwrapName:\n          type: string\n          description: The name of the clickwrap.\n        deletionMessage:\n          type: string\n          description: |-\n            A message describing the result of deletion request. One of:\n\n            - `alreadyDeleted`: Clickwrap is already deleted.\n            - `deletionSuccess`: Successfully deleted the clickwrap.\n            - `deletionFailure`: Failed to delete the clickwrap.\n            - `cannotDelete`: Active clickwrap version cannot be deleted.\n        deletionSuccess:\n          type: boolean\n          description: '**True** if the clickwrap was deleted successfully. **False**\n            otherwise.'\n        status:\n          type: string\n          description: |-\n            Clickwrap status. Possible values:\n\n            - `active`\n            - `inactive`\n            - `deleted`\n      description: \"\"\n      x-ds-definition-name: clickwrapDeleteResponse\n      x-ms-summary: \"\"\n    clickwrapRequest:\n      type: object\n      properties:\n        clickwrapName:\n          type: string\n          description: The name of the clickwrap.\n        displaySettings:\n          $ref: '#/components/schemas/displaySettings'\n        documents:\n          type: array\n          description: An array of documents.\n          items:\n            $ref: '#/components/schemas/document'\n        fieldsToNull:\n          type: string\n          description: |\n            Specifies whether `scheduledReacceptance` and `scheduledDate` should be cleared. May be one of:\n\n            - `\"scheduledReacceptance\"`\n            - `\"scheduledDate\"`\n            - `\"scheduledReacceptance,scheduledDate\"`\n        isMajorVersion:\n          type: boolean\n          description: When **true**, the next version created is a major version.\n            When **false** the next version created is minor.\n        isShared:\n          type: boolean\n          description: \"Shared status\"\n        name:\n          type: string\n          description: Name of the clickwrap.\n        requireReacceptance:\n          type: boolean\n          description: |-\n            When **true**, requires signers who have previously agreed to this\n            clickwrap to sign again. The version number is incremented.\n        scheduledDate:\n          type: object\n          properties: {}\n          description: The time and date when this clickwrap is activated.\n        scheduledReacceptance:\n          $ref: '#/components/schemas/clickwrapScheduledReacceptance'\n        status:\n          type: object\n          properties: {}\n          description: |-\n            Clickwrap status. Possible values:\n\n            - `active`\n            - `inactive`\n            - `deleted`\n        transferFromUserId:\n          type: string\n          description: The user ID of current owner of the clickwrap.\n        transferToUserId:\n          type: string\n          description: The user ID of the new owner of the clickwrap.\n      description: Request body for working with clickwrap.\n      x-ds-definition-name: clickwrapRequest\n      x-ms-summary: Request body for working with clickwrap.\n    clickwrapScheduledReacceptance:\n      type: object\n      properties:\n        recurrenceInterval:\n          type: integer\n          description: |-\n            The time between recurrences specified in `recurrenceIntervalType` units.\n\n            The minimum and maximum values depend on `recurrenceIntervalType`:\n\n            - `days`: 1 - 365\n            - `weeks`: 1 - 52\n            - `months`: 1 - 12\n            - `years`: 1\n          format: int32\n        recurrenceIntervalType:\n          type: string\n          description: |\n            The units of the `recurrenceInterval`. Must be one of:\n\n            - `days`\n            - `weeks`\n            - `month`\n            - `years`\n        startDateTime:\n          type: object\n          properties: {}\n          description: The date when the recurrence interval starts.\n      description: \"Specifies the interval between recceptance in days, weeks, months or years\"\n      x-ds-definition-name: clickwrapScheduledReacceptance\n      x-ms-summary: \"\"\n    clickwrapsDeleteResponse:\n      type: object\n      properties:\n        clickwraps:\n          type: array\n          description: \"\"\n          items:\n            $ref: '#/components/schemas/clickwrapDeleteResponse'\n      description: \"\"\n      x-ds-definition-name: clickwrapsDeleteResponse\n      x-ms-summary: \"\"\n    clickwrapTransferRequest:\n      type: object\n      properties:\n        transferFromUserId:\n          type: string\n          description: ID of the user to transfer from.\n        transferToUserId:\n          type: string\n          description: ID of the user to transfer to.\n      description: \"Clieckwrap transfer payload\"\n      x-ds-definition-name: clickwrapTransferRequest\n      x-ms-summary: \"\"\n    clickwrapVersion:\n      type: object\n      properties:\n        clickwrapVersionId:\n          type: string\n          description: The unique version ID, a GUID, of this clickwrap version.\n        createdTime:\n          type: object\n          properties: {}\n          description: The time that the clickwrap was created.\n        lastModified:\n          type: object\n          properties: {}\n          description: The time that the clickwrap was last modified.\n        lastModifiedBy:\n          type: string\n          description: The user ID of the last user who modified this clickwrap.\n        ownerUserId:\n          type: string\n          description: The user ID of the owner of this clickwrap.\n        requireReacceptance:\n          type: boolean\n          description: |-\n            When **true**, requires signers who have previously agreed to this\n            clickwrap to sign again. The version number is incremented.\n        scheduledDate:\n          type: object\n          properties: {}\n          description: The time and date when this clickwrap is activated.\n        scheduledReacceptance:\n          $ref: '#/components/schemas/clickwrapScheduledReacceptance'\n        status:\n          type: string\n          description: |-\n            Clickwrap status. Possible values:\n\n            - `active`\n            - `inactive`\n            - `deleted`\n        versionId:\n          type: string\n          description: The ID of the version.\n        versionNumber:\n          type: string\n          description: Version of the clickwrap.\n      description: \"\"\n      x-ds-definition-name: clickwrapVersion\n      x-ms-summary: \"\"\n    clickwrapVersionDeleteResponse:\n      type: object\n      properties:\n        clickwrapVersionId:\n          type: string\n          description: The unique version ID, a GUID, of this clickwrap version.\n        createdTime:\n          type: object\n          properties: {}\n          description: The time that the clickwrap was created.\n        deletionMessage:\n          type: string\n          description: |-\n            A message describing the result of deletion request. One of:\n\n            - `alreadyDeleted`: Clickwrap is already deleted.\n            - `deletionSuccess`: Successfully deleted the clickwrap.\n            - `deletionFailure`: Failed to delete the clickwrap.\n            - `cannotDelete`: Active clickwrap version cannot be deleted.\n        deletionSuccess:\n          type: boolean\n          description: '**True** if the clickwrap was deleted successfully. **False**\n            otherwise.'\n        lastModified:\n          type: object\n          properties: {}\n          description: The time that the clickwrap was last modified.\n        lastModifiedBy:\n          type: string\n          description: The user ID of the last user who modified this clickwrap.\n        ownerUserId:\n          type: string\n          description: The user ID of the owner of this clickwrap.\n        requireReacceptance:\n          type: boolean\n          description: |-\n            When **true**, requires signers who have previously agreed to this\n            clickwrap to sign again. The version number is incremented.\n        scheduledDate:\n          type: object\n          properties: {}\n          description: The time and date when this clickwrap is activated.\n        scheduledReacceptance:\n          $ref: '#/components/schemas/clickwrapScheduledReacceptance'\n        status:\n          type: string\n          description: |-\n            Clickwrap status. Possible values:\n\n            - `active`\n            - `inactive`\n            - `deleted`\n        versionId:\n          type: string\n          description: The ID of the version.\n        versionNumber:\n          type: string\n          description: Version of the clickwrap.\n      description: \"\"\n      x-ds-definition-name: clickwrapVersionDeleteResponse\n      x-ms-summary: \"\"\n    clickwrapVersionResponse:\n      type: object\n      properties:\n        accountId:\n          type: string\n          description:         A GUID that identifies your account.\n            This value is automatically generated by\n            DocuSign for any account you create. Copy the\n            value from the **API Account ID** field in\n            the **API and Keys** page in\n            eSignature Settings.\n        clickwrapId:\n          type: string\n          description: The ID of the clickwrap.\n        clickwrapName:\n          type: string\n          description: The name of the clickwrap.\n        clickwrapVersionId:\n          type: string\n          description: The unique version ID, a GUID, of this clickwrap version.\n        createdTime:\n          type: object\n          properties: {}\n          description: The time that the clickwrap was created.\n        displaySettings:\n          $ref: '#/components/schemas/displaySettings'\n        documents:\n          type: array\n          description: An array of documents.\n          items:\n            $ref: '#/components/schemas/document'\n        lastModified:\n          type: object\n          properties: {}\n          description: The time that the clickwrap was last modified.\n        lastModifiedBy:\n          type: string\n          description: The user ID of the last user who modified this clickwrap.\n        ownerUserId:\n          type: string\n          description: The user ID of the owner of this clickwrap.\n        requireReacceptance:\n          type: boolean\n          description: |-\n            When **true**, requires signers who have previously agreed to this\n            clickwrap to sign again. The version number is incremented.\n        scheduledDate:\n          type: object\n          properties: {}\n          description: The time and date when this clickwrap is activated.\n        scheduledReacceptance:\n          $ref: '#/components/schemas/clickwrapScheduledReacceptance'\n        status:\n          type: string\n          description: |-\n            Clickwrap status. Possible values:\n\n            - `active`\n            - `inactive`\n            - `deleted`\n        versionId:\n          type: string\n          description: The ID of the version.\n        versionNumber:\n          type: string\n          description: Version of the clickwrap.\n      description: \"\"\n      x-ds-definition-name: clickwrapVersionResponse\n      x-ms-summary: \"\"\n    clickwrapVersionsDeleteResponse:\n      type: object\n      properties:\n        clickwrapId:\n          type: string\n          description: The ID of the clickwrap.\n        clickwrapName:\n          type: string\n          description: The name of the clickwrap.\n        versions:\n          type: array\n          description: An array delete responses.\n          items:\n            $ref: '#/components/schemas/clickwrapVersionDeleteResponse'\n      description: \"\"\n      x-ds-definition-name: clickwrapVersionsDeleteResponse\n      x-ms-summary: \"\"\n    clickwrapVersionsPagedResponse:\n      type: object\n      properties:\n        accountId:\n          type: string\n          description:         A GUID that identifies your account.\n            This value is automatically generated by\n            DocuSign for any account you create. Copy the\n            value from the **API Account ID** field in\n            the **API and Keys** page in\n            eSignature Settings.\n        clickwrapId:\n          type: string\n          description: The ID of the clickwrap.\n        clickwrapName:\n          type: string\n          description: The name of the clickwrap.\n        minimumPagesRemaining:\n          type: integer\n          description: Number of pages remaining in the response.\n          format: int32\n        page:\n          type: integer\n          description: The number of the current page.\n          format: int32\n        pageSize:\n          type: integer\n          description: The number of items per page.\n          format: int32\n        versions:\n          type: array\n          description: An array of clickwrap versions.\n          items:\n            $ref: '#/components/schemas/clickwrapVersion'\n      description: \"\"\n      x-ds-definition-name: clickwrapVersionsPagedResponse\n      x-ms-summary: \"\"\n    clickwrapVersionsResponse:\n      type: object\n      properties:\n        clickwraps:\n          type: array\n          description: An array of `clickwrapVersionSummaryResponse` objects.\n          items:\n            $ref: '#/components/schemas/clickwrapVersionSummaryResponse'\n        minimumPagesRemaining:\n          type: integer\n          description: Number of pages remaining in the response.\n          format: int32\n        page:\n          type: integer\n          description: The number of the current page.\n          format: int32\n        pageSize:\n          type: integer\n          description: The number of items per page.\n          format: int32\n      description: \"\"\n      x-ds-definition-name: clickwrapVersionsResponse\n      x-ms-summary: \"\"\n    clickwrapVersionSummaryResponse:\n      type: object\n      properties:\n        accountId:\n          type: string\n          description:         A GUID that identifies your account.\n            This value is automatically generated by\n            DocuSign for any account you create. Copy the\n            value from the **API Account ID** field in\n            the **API and Keys** page in\n            eSignature Settings.\n        clickwrapId:\n          type: string\n          description: The ID of the clickwrap.\n        clickwrapName:\n          type: string\n          description: The name of the clickwrap.\n        clickwrapVersionId:\n          type: string\n          description: The unique version ID, a GUID, of this clickwrap version.\n        createdTime:\n          type: object\n          properties: {}\n          description: The time that the clickwrap was created.\n        lastModified:\n          type: object\n          properties: {}\n          description: The time that the clickwrap was last modified.\n        lastModifiedBy:\n          type: string\n          description: The user ID of the last user who modified this clickwrap.\n        ownerUserId:\n          type: string\n          description: The user ID of the owner of this clickwrap.\n        requireReacceptance:\n          type: boolean\n          description: |-\n            When **true**, requires signers who have previously agreed to this\n            clickwrap to sign again. The version number is incremented.\n        scheduledDate:\n          type: object\n          properties: {}\n          description: The time and date when this clickwrap is activated.\n        scheduledReacceptance:\n          $ref: '#/components/schemas/clickwrapScheduledReacceptance'\n        status:\n          type: string\n          description: |-\n            Clickwrap status. Possible values:\n\n            - `active`\n            - `inactive`\n            - `deleted`\n        versionId:\n          type: string\n          description: The ID of the version.\n        versionNumber:\n          type: string\n          description: Version of the clickwrap.\n      description: \"\"\n      x-ds-definition-name: clickwrapVersionSummaryResponse\n      x-ms-summary: \"\"\n    displaySettings:\n      type: object\n      properties:\n        actionButtonAlignment:\n          type: string\n          description: \"Position of the Accept button in the agreement. One of \\n\\n\\\n            - `right`\\n- `left`\\n\"\n        allowClientOnly:\n          type: boolean\n          description: When **true**, this agreement can be be used in client-only\n            integrations\n        allowedHosts:\n          type: array\n          description:         Hosts that can host the clickwrap.\n\n            It is an error if the clickwrap didn't come from one of these hosts.\n          items:\n            type: string\n        brandId:\n          type: string\n          description: The signing brand ID.\n        consentButtonText:\n          type: string\n          description: Text on the agree button.\n        consentText:\n          type: string\n          description: The text on agree button.\n        declineButtonText:\n          type: string\n          description: The text on the decline button.\n        displayName:\n          type: string\n          description: The display name of the user agreement.\n        documentDisplay:\n          type: string\n          description: 'Display type: link or document'\n        downloadable:\n          type: boolean\n          description: '**True** if the agreement is downloadable.'\n        format:\n          type: string\n          description: 'Display format: inline or modal.'\n        hasDeclineButton:\n          type: boolean\n          description: '**True** if the agreement has a decline checkbox.'\n        hostOrigin:\n          type: string\n          description:         The host origin.\n        mustRead:\n          type: boolean\n          description: |\n            **True** if the user needs to scroll to the end of the document.\n        mustView:\n          type: boolean\n          description: |\n            **True** if the user must view the document.\n        recordDeclineResponses:\n          type: boolean\n          description: When **true**, this agreement records decline actions.\n        requireAccept:\n          type: boolean\n          description: |\n            **True** if accept is required.\n        sendToEmail:\n          type: boolean\n          description: |\n            **True** if send to email is applicable.\n      description: Information about how an agreement is displayed.\n      x-ds-definition-name: displaySettings\n      x-ms-summary: Information about how an agreement is displayed.\n    document:\n      type: object\n      properties:\n        documentBase64:\n          type: string\n          description: The base64-encoded contents of the document.\n        documentHtml:\n          type: string\n          description: The HTML representation of the document.\n        documentName:\n          type: string\n          description: The name of the document.\n        fileExtension:\n          type: string\n          description: The file extension of the document.\n        order:\n          type: integer\n          description: The order of document layout.\n          format: int32\n      description: Information about a document.\n      x-ds-definition-name: document\n      x-ms-summary: Information about a document.\n    errorDetails:\n      type: object\n      properties:\n        errorCode:\n          type: string\n          description: The error code.\n        message:\n          type: string\n          description: The error message.\n      description: Error details.\n      x-ds-definition-name: errorDetails\n      x-ms-summary: Error details.\n    serviceInformation:\n      type: object\n      properties:\n        buildBranch:\n          type: string\n          description: \"\"\n        buildBranchDeployedDateTime:\n          type: string\n          description: \"\"\n        buildSHA:\n          type: string\n          description: \"\"\n        buildVersion:\n          type: string\n          description: The internal build version information.\n        linkedSites:\n          type: array\n          description: An array of URLs (strings) of related sites.\n          items:\n            type: string\n        serviceVersions:\n          type: array\n          description: An array of `serviceVersion` objects.\n          items:\n            $ref: '#/components/schemas/serviceVersion'\n      description: \"\"\n      x-ds-definition-name: serviceInformation\n      x-ms-summary: \"\"\n    serviceVersion:\n      type: object\n      properties:\n        version:\n          type: string\n          description: The human-readable semver version string.\n        versionUrl:\n          type: string\n          description: The URL where this version of the API can be found.\n      description: \"\"\n      x-ds-definition-name: serviceVersion\n      x-ms-summary: \"\"\n    userAgreementRequest:\n      type: object\n      properties:\n        clientUserId:\n          type: string\n          description: The user ID of the client.\n        hostOrigin:\n          type: string\n          description: The host origin.\n        metadata:\n          type: string\n          description: A customer-defined string you can use in requests. This string\n            will appear in the corresponding response.\n      description: \"User agreement payload\"\n      x-ds-definition-name: userAgreementRequest\n      x-ms-summary: \"\"\n    userAgreementResponse:\n      type: object\n      properties:\n        accountId:\n          type: string\n          description: A GUID that identifies your account.\n            This value is automatically generated by\n            DocuSign for any account you create. Copy the\n            value from the **API Account ID** field in\n            the **API and Keys** page in\n            eSignature Settings.\n        agreedOn:\n          type: object\n          properties: {}\n          description: |-\n            Date that the client last completed the agreement.\n\n            This property is null if `agreementUrl` is not null and `status` is not  `agreed`.\n        agreementId:\n          type: string\n          description: The agreement ID.\n        agreementUrl:\n          type: string\n          description: |\n            When not null, an agreement is required for user specified by  `clientUserId`.\n\n            When missing the user specified by `clientUserId`\n            has already agreed and does not require a new acceptance.\n\n            Use this URL to render the agreement in a web page.\n\n            \u003c!--\n            or redirected to when providing redirect_url as a query paramter.\n            --\u003e\n        clickwrapId:\n          type: string\n          description: The ID of the clickwrap.\n        clientUserId:\n          type: string\n          description: The user ID of the client.\n        consumerDisclosureHtml:\n          type: string\n          description: The customer-branded HTML with the Electronic Record and Signature\n            Disclosure information\n        createdOn:\n          type: object\n          properties: {}\n          description: The date when the clickwrap was created. May be null.\n        declinedOn:\n          type: object\n          properties: {}\n          description: |-\n            The date when the user declined the most recent required agreement.\n\n            This property is valid only when `status` is `declined`. Otherwise it is null.\n        documents:\n          type: array\n          description: An array of documents.\n          items:\n            $ref: '#/components/schemas/document'\n        metadata:\n          type: string\n          description: A customer-defined string you can use in requests. This string\n            will appear in the corresponding response.\n        settings:\n          $ref: '#/components/schemas/displaySettings'\n        status:\n          type: string\n          description: |-\n            User agreement status. One of:\n\n            - `created`\n            - `agreed`\n            - `declined`\n        version:\n          type: string\n          description: The human-readable semver version string.\n        versionId:\n          type: string\n          description: The ID of the version.\n        versionNumber:\n          type: integer\n          description: Version of the clickwrap.\n          format: int32\n      description: \"\"\n      x-ds-definition-name: userAgreementResponse\n      x-ms-summary: \"\"\n    ClickWraps:\n      type: object\n      properties:\n        clickwraps:\n          type: array\n          description: An array of clickwraps.\n          items:\n            $ref: '#/components/schemas/clickwrapVersionSummaryResponse'\n        minimumPagesRemaining:\n          type: integer\n          description: Number of pages remaining in the response.\n          format: int32\n        page:\n          type: integer\n          description: The number of the current page.\n          format: int32\n        pageSize:\n          type: integer\n          description: The number of items per page.\n          format: int32\n      description: A paged collection of clickwraps.\n      x-ds-definition-name: clickwrapVersionsResponse\n      x-ds-category: Accounts\n      x-ds-order: \"10\"\n      x-ms-summary: A paged collection of clickwraps.\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    oAuth2Auth:\n      type: oauth2\n      description: This API uses OAuth 2 with the implicit grant flow. [More info](https://developers.docusign.com/platform/auth/)\n      flows:\n        implicit:\n          authorizationUrl: https://account-d.docusign.com/oauth/auth\n          scopes: \n            click.manage: Enables most clickwrap operations, including creating and updating clickwraps; getting a list of clickwraps; creating user agreements; getting a list of users; and retrieving responses.\n            click.send: Enables checking to see if a user has agreed to a clickwrap, as well as retrieving an agreement or PDF file for an agreement. No other operations. This scope provides access to a subset of the functions available under the manage scope. The only function available under the send scope that is not also available under the manage scope is createHasAgreed.\n              Note- Although the scope is named send, clickwraps are not sent to recipients. Instead, they are embedded in a web page or app.\n        authorizationCode:\n          authorizationUrl: https://account-d.docusign.com/oauth/auth\n          tokenUrl: https://account-d.docusign.com/oauth/token\n          scopes: \n            click.manage: Enables most clickwrap operations, including creating and updating clickwraps; getting a list of clickwraps; creating user agreements; getting a list of users; and retrieving responses.\n            click.send: Enables checking to see if a user has agreed to a clickwrap, as well as retrieving an agreement or PDF file for an agreement. No other operations. This scope provides access to a subset of the functions available under the manage scope. The only function available under the send scope that is not also available under the manage scope is createHasAgreed.\n              Note- Although the scope is named send, clickwraps are not sent to recipients. Instead, they are embedded in a web page or app.\nx-ds-allow-editing: false\nx-ds-categories:\n- name: Accounts\n  summary: DocuSign Click enables companies to capture consent to standard agreement\n    terms with a single click.\n  description: |+\n    DocuSign Click lets you capture consent to standard agreement terms with a single click: terms and conditions, terms of service, terms of use, privacy policies, and more. The Click API lets you include this customizable clickwrap solution in your DocuSign integrations.\n\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/docusign.click/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/docusign.click/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/accounts/{accountId}/clickwraps/{clickwrapId}/agreements\": post: responses: 201: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}