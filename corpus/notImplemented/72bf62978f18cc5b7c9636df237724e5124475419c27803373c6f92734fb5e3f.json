{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/while1618/BootstrapBugZ"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi.yml",
			"byteSize": 27949,
			"content": "openapi: 3.0.3\ninfo:\n  title: BootstrapBugZ\n  description: Description\n  termsOfService: https://swagger.io/terms/\n  contact:\n    email: dejan.zdravkovic96@gmail.com\n  license:\n    name: MIT License\n    url: https://choosealicense.com/licenses/mit/\n  version: 1.0.0\nservers:\n  - url: http://localhost:8080/v1\n  - url: https://localhost:8080/v1\ntags:\n  - name: auth\n    description: Auth Endpoints\n  - name: user\n    description: User Endpoints\n  - name: profile\n    description: Profile Endpoints\n  - name: admin\n    description: Admin Endpoints\npaths:\n  /auth/sign-up:\n    post:\n      tags:\n        - auth\n      summary: Sign Up\n      operationId: signUp\n      x-codegen-request-body-name: body\n      requestBody:\n        description: Sign Up Request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SignUpRequest\"\n            example:\n              firstName: Joe\n              lastName: Bloggs\n              username: joe.bloggs\n              email: joe.bloggs@bootstrapbugz.com\n              password: qwerty123\n              confirmPassword: qwerty123\n      responses:\n        201:\n          description: Sign Up Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserResponse\"\n              example:\n                id: 4\n                firstName: Joe\n                lastName: Bloggs\n                username: joe.bloggs\n                email: joe.bloggs@bootstrapbugz.com\n                activated: false\n                nonLocked: true\n                roles:\n                  - name: USER\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n  /auth/resend-confirmation-email:\n    post:\n      tags:\n        - auth\n      summary: Resend Confirmation Email\n      operationId: resendConfirmationEmail\n      x-codegen-request-body-name: body\n      requestBody:\n        description: Resend Confirmation Email Request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ResendConfirmationEmailRequest\"\n            example:\n              usernameOrEmail: joe.bloggs@bootstrapbugz.com\n      responses:\n        204:\n          description: Resend Confirmation Email Success\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n  /auth/confirm-registration:\n    put:\n      tags:\n        - auth\n      summary: Confirm Registration\n      operationId: confirmRegistration\n      x-codegen-request-body-name: body\n      requestBody:\n        description: Confirm Registration Request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConfirmRegistrationRequest\"\n            example:\n              accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJyb2xlcyI6WyJVU0VSIl0sImlzc3VlZEF0IjoiMjAyMS0xMC0yMFQxNDozMzo0NC43MDcyOTMzMDlaIiwiZXhwIjoxNjM0NzQxMzI0LCJ1c2VySWQiOjJ9.uXOVA1q-o2DtHmwBAzEfqEm8GLpAhXrYo0rlZ_6NFbBGILhkV74x-Iu9W2uSfSlwp1IfKPCHlR6zWVPvAbhWVw\n      responses:\n        204:\n          description: Confirm Registration Success\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n  /auth/sign-in:\n    post:\n      tags:\n        - auth\n      summary: Sign In\n      operationId: signIn\n      x-codegen-request-body-name: body\n      requestBody:\n        description: Sign In Request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SignInRequest\"\n            example:\n              usernameOrEmail: john.doe@bootstrapbugz.com\n              password: qwerty123\n      responses:\n        200:\n          description: Sign In Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SignInResponse\"\n              example:\n                accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJyb2xlcyI6WyJVU0VSIl0sImlzc3VlZEF0IjoiMjAyMS0xMC0yMFQxNDozMzo0NC43MDcyOTMzMDlaIiwiZXhwIjoxNjM0NzQxMzI0LCJ1c2VySWQiOjJ9.uXOVA1q-o2DtHmwBAzEfqEm8GLpAhXrYo0rlZ_6NFbBGILhkV74x-Iu9W2uSfSlwp1IfKPCHlR6zWVPvAbhWVw\n                refreshToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJyb2xlcyI6WyJVU0VSIl0sImlzc3VlZEF0IjoiMjAyMS0xMC0xOVQxMzowMDowMy45MDYzNDQyMDJaIiwiZXhwIjoxNjM1MjUzMjAzLCJ1c2VySWQiOjJ9.RHzh6qyGJEKYdvCuCF7wPoUGBSrDGeoY8dSTBhuv21Fzw_CPEa5KeI3MOYgSN3zA1o_ZlKwjHgpSsPM3xAO_DQ\n                user:\n                  id: 2\n                  firstName: John\n                  lastName: Doe\n                  username: john.doe\n                  email: john.doe@bootstrapbugz.com\n                  activated: true\n                  nonLocked: true\n                  roles:\n                    - name: USER\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n  /auth/refresh-token:\n    post:\n      tags:\n        - auth\n      summary: Refresh Token\n      operationId: refreshToken\n      x-codegen-request-body-name: body\n      requestBody:\n        description: Refresh Token Request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RefreshTokenRequest\"\n            example:\n              refreshToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJyb2xlcyI6WyJVU0VSIl0sImlzc3VlZEF0IjoiMjAyMS0xMC0xOVQxMzowMDowMy45MDYzNDQyMDJaIiwiZXhwIjoxNjM1MjUzMjAzLCJ1c2VySWQiOjJ9.RHzh6qyGJEKYdvCuCF7wPoUGBSrDGeoY8dSTBhuv21Fzw_CPEa5KeI3MOYgSN3zA1o_ZlKwjHgpSsPM3xAO_DQ\n      responses:\n        200:\n          description: Refresh Token Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefreshTokenResponse\"\n              example:\n                accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJyb2xlcyI6WyJVU0VSIl0sImlzc3VlZEF0IjoiMjAyMS0xMC0yMFQxNDozMzo0NC43MDcyOTMzMDlaIiwiZXhwIjoxNjM0NzQxMzI0LCJ1c2VySWQiOjJ9.uXOVA1q-o2DtHmwBAzEfqEm8GLpAhXrYo0rlZ_6NFbBGILhkV74x-Iu9W2uSfSlwp1IfKPCHlR6zWVPvAbhWVw\n                refreshToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJyb2xlcyI6WyJVU0VSIl0sImlzc3VlZEF0IjoiMjAyMS0xMC0xOVQxMzowMDowMy45MDYzNDQyMDJaIiwiZXhwIjoxNjM1MjUzMjAzLCJ1c2VySWQiOjJ9.RHzh6qyGJEKYdvCuCF7wPoUGBSrDGeoY8dSTBhuv21Fzw_CPEa5KeI3MOYgSN3zA1o_ZlKwjHgpSsPM3xAO_DQ\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n  /auth/sign-out:\n    post:\n      tags:\n        - auth\n      summary: Sign Out\n      operationId: signOut\n      x-codegen-request-body-name: body\n      security:\n        - BearerAuth: []\n      responses:\n        204:\n          description: Sign Out Success\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n  /auth/sign-out-from-all-devices:\n    post:\n      tags:\n        - auth\n      summary: Sign Out From All Devices\n      operationId: signOutFromAllDevices\n      x-codegen-request-body-name: body\n      security:\n        - BearerAuth: []\n      responses:\n        204:\n          description: Sign Out From All Devices Success\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n  /auth/forgot-password:\n    post:\n      tags:\n        - auth\n      summary: Forgot Password\n      operationId: forgotPassword\n      x-codegen-request-body-name: body\n      requestBody:\n        description: Forgot Password Request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ForgotPasswordRequest\"\n            example:\n              email: john.doe@bootstrapbugz.com\n      responses:\n        204:\n          description: Forgot Password Success\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n  /auth/reset-password:\n    put:\n      tags:\n        - auth\n      summary: Reset Password\n      operationId: resetPassword\n      x-codegen-request-body-name: body\n      requestBody:\n        description: Reset Password Request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ResetPasswordRequest\"\n            example:\n              accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJyb2xlcyI6WyJVU0VSIl0sImlzc3VlZEF0IjoiMjAyMS0xMC0yMFQxNDozMzo0NC43MDcyOTMzMDlaIiwiZXhwIjoxNjM0NzQxMzI0LCJ1c2VySWQiOjJ9.uXOVA1q-o2DtHmwBAzEfqEm8GLpAhXrYo0rlZ_6NFbBGILhkV74x-Iu9W2uSfSlwp1IfKPCHlR6zWVPvAbhWVw\n              password: qwerty321\n              confirmPassword: qwerty321\n      responses:\n        204:\n          description: Reset Password Success\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n  /auth/signed-in-user:\n    get:\n      tags:\n        - auth\n      summary: Signed In User\n      operationId: signedInUser\n      security:\n        - BearerAuth: []\n      responses:\n        200:\n          description: Signed In User Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserResponse\"\n              example:\n                id: 2\n                firstName: John\n                lastName: Doe\n                username: john.doe\n                email: john.doe@bootstrapbugz.com\n                activated: true\n                nonLocked: true\n                roles:\n                  - name: USER\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n  /auth/username-availability:\n    get:\n      tags:\n        - auth\n      summary: Username Availability\n      operationId: usernameAvailability\n      parameters:\n        - in: query\n          name: username\n          required: true\n          schema:\n            type: string\n          description: Pass username to check if it's available.\n          example: john.doe\n      responses:\n        200:\n          description: Username Availability Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n              examples:\n                username-available:\n                  value: true\n                username-taken:\n                  value: false\n  /auth/email-availability:\n    get:\n      tags:\n        - auth\n      summary: Email Availability\n      operationId: emailAvailability\n      parameters:\n        - in: query\n          name: email\n          required: true\n          schema:\n            type: string\n          description: Pass email to check if it's available.\n          example: john.doe@bootstrapbugz.com\n      responses:\n        200:\n          description: Email Availability Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n              examples:\n                email-available:\n                  value: true\n                email-taken:\n                  value: false\n  /users:\n    get:\n      tags:\n        - user\n      summary: Get Users\n      operationId: getUsers\n      security:\n        - {}\n        - BearerAuth: []\n      responses:\n        200:\n          description: Get Users Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/UserResponse\"\n              examples:\n                non-signed-in-and-regular-user:\n                  value:\n                    - id: 1\n                      firstName: Admin\n                      lastName: Admin\n                      username: admin\n                      email: null\n                      activated: true\n                      nonLocked: true\n                      roles: null\n                    - id: 2\n                      firstName: John\n                      lastName: Doe\n                      username: john.doe\n                      email: null\n                      activated: true\n                      nonLocked: true\n                      roles: null\n                    - id: 3\n                      firstName: Jane\n                      lastName: Doe\n                      username: jane\n                      email: null\n                      activated: true\n                      nonLocked: true\n                      roles: null\n                admin:\n                  value:\n                    - id: 1\n                      firstName: Admin\n                      lastName: Admin\n                      username: admin\n                      email: admin@bootstrapbugz.com\n                      activated: true\n                      nonLocked: true\n                      roles:\n                        - name: USER\n                        - name: ADMIN\n                    - id: 2\n                      firstName: John\n                      lastName: Doe\n                      username: john.doe\n                      email: john.doe@bootstrapbugz.com\n                      activated: true\n                      nonLocked: true\n                      roles:\n                        - name: USER\n                    - id: 3\n                      firstName: Jane\n                      lastName: Doe\n                      username: jane\n                      email: jane.doe@bootstrapbugz.com\n                      activated: true\n                      nonLocked: true\n                      roles:\n                        - name: USER\n  /users/{username}:\n    get:\n      tags:\n        - user\n      summary: Get User\n      operationId: getUser\n      security:\n        - {}\n        - BearerAuth: []\n      parameters:\n        - in: path\n          name: username\n          required: true\n          schema:\n            type: string\n          description: Pass username to get user.\n          example: john.doe\n      responses:\n        200:\n          description: Get User Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserResponse\"\n              examples:\n                non-signed-in-or-requesting-other:\n                  value:\n                    id: 2\n                    firstName: John\n                    lastName: Doe\n                    username: john.doe\n                    email: null\n                    activated: true\n                    nonLocked: true\n                    roles: null\n                signed-in-requesting-himself:\n                  value:\n                    id: 2\n                    firstName: John\n                    lastName: Doe\n                    username: john.doe\n                    email: john.doe@bootstrapbugz.com\n                    activated: true\n                    nonLocked: true\n                    roles: null\n                admin:\n                  value:\n                    id: 2\n                    firstName: John\n                    lastName: Doe\n                    username: john.doe\n                    email: john.doe@bootstrapbugz.com\n                    activated: true\n                    nonLocked: true\n                    roles:\n                      - name: USER\n        404:\n          $ref: \"#/components/responses/NotFound\"\n  /profile/update:\n    put:\n      tags:\n        - profile\n      summary: Update Profile\n      operationId: updateProfile\n      x-codegen-request-body-name: body\n      security:\n        - BearerAuth: []\n      requestBody:\n        description: Update Profile Request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateProfileRequest\"\n            example:\n              firstName: Joe\n              lastName: Blow\n              username: joe.blow\n              email: joe.blow@bootstrapbugz.com\n      responses:\n        200:\n          description: Update Profile Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserResponse\"\n              example:\n                id: 4\n                firstName: Joe\n                lastName: Blow\n                username: joe.blow\n                email: joe.blow@bootstrapbugz.com\n                activated: false\n                nonLocked: true\n                roles:\n                  - name: USER\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n  /profile/change-password:\n    put:\n      tags:\n        - profile\n      summary: Change Password\n      operationId: changePassword\n      x-codegen-request-body-name: body\n      security:\n        - BearerAuth: []\n      requestBody:\n        description: Change Password Request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChangePasswordRequest\"\n            example:\n              oldPassword: qwerty123\n              newPassword: qwerty321\n              confirmNewPassword: qwerty321\n      responses:\n        204:\n          description: Change Password Success\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n  /admin/users/activate:\n    put:\n      tags:\n        - admin\n      summary: Activate Users\n      operationId: activateUsers\n      x-codegen-request-body-name: body\n      security:\n        - BearerAuth: []\n      requestBody:\n        description: Activate Users Request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminRequest\"\n            example:\n              usernames:\n                - john.doe\n                - jane.doe\n      responses:\n        204:\n          description: Activate Users Success\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n  /admin/users/deactivate:\n    put:\n      tags:\n        - admin\n      summary: Deactivate Users\n      operationId: deactivateUsers\n      x-codegen-request-body-name: body\n      security:\n        - BearerAuth: []\n      requestBody:\n        description: Deactivate Users Request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminRequest\"\n            example:\n              usernames:\n                - john.doe\n                - jane.doe\n      responses:\n        204:\n          description: Deactivate Users Success\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n  /admin/users/unlock:\n    put:\n      tags:\n        - admin\n      summary: Unlock Users\n      operationId: unlockUsers\n      x-codegen-request-body-name: body\n      security:\n        - BearerAuth: []\n      requestBody:\n        description: Unlock Users Request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminRequest\"\n            example:\n              usernames:\n                - john.doe\n                - jane.doe\n      responses:\n        204:\n          description: Unlock Users Success\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n  /admin/users/lock:\n    put:\n      tags:\n        - admin\n      summary: Lock Users\n      operationId: lockUsers\n      x-codegen-request-body-name: body\n      security:\n        - BearerAuth: []\n      requestBody:\n        description: Lock Users Request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminRequest\"\n            example:\n              usernames:\n                - john.doe\n                - jane.doe\n      responses:\n        204:\n          description: Lock Users Success\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n  /admin/users/update-role:\n    put:\n      tags:\n        - admin\n      summary: Update Users Roles\n      operationId: updateUserRoles\n      x-codegen-request-body-name: body\n      security:\n        - BearerAuth: []\n      requestBody:\n        description: Update Users Roles Request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateRoleRequest\"\n            example:\n              usernames:\n                - john.doe\n                - jane.doe\n              roleNames:\n                - USER\n                - ADMIN\n      responses:\n        204:\n          description: Update Users Roles Success\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n  /admin/users/delete:\n    delete:\n      tags:\n        - admin\n      summary: Delete Users\n      operationId: deleteUsers\n      x-codegen-request-body-name: body\n      security:\n        - BearerAuth: []\n      requestBody:\n        description: Delete Users Request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminRequest\"\n            example:\n              usernames:\n                - john.doe\n                - jane.doe\n      responses:\n        204:\n          description: Delete Users Success\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\ncomponents:\n  responses:\n    BadRequest:\n      description: Bad Request\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/ErrorResponse\"\n          example:\n            timestamp: 18-10-2021 04:00:44\n            status: 400\n            error: Bad Request\n            details:\n              - field: field1\n                message: Invalid field1.\n              - field: field2\n                message: Invalid field2.\n    NotFound:\n      description: Not Found\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/ErrorResponse\"\n          example:\n            timestamp: 18-10-2021 04:00:44\n            status: 404\n            error: Not Found\n            details:\n              - message: Resource Not Found.\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/ErrorResponse\"\n          example:\n            timestamp: 18-10-2021 04:00:44\n            status: 401\n            error: Unauthorized\n            details:\n              - message: Unauthorized.\n    Forbidden:\n      description: Forbidden\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/ErrorResponse\"\n          example:\n            timestamp: 18-10-2021 04:00:44\n            status: 403\n            error: Forbidden\n            details:\n              - message: Forbidden.\n    Conflict:\n      description: Conflict\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/ErrorResponse\"\n          example:\n            timestamp: 18-10-2021 04:00:44\n            status: 409\n            error: Conflict\n            details:\n              - field: field\n                message: Field already exists.\n  schemas:\n    SignUpRequest:\n      type: object\n      properties:\n        firstName:\n          type: string\n        lastName:\n          type: string\n        username:\n          type: string\n        email:\n          type: string\n          format: email\n        password:\n          type: string\n        confirmPassword:\n          type: string\n    ConfirmRegistrationRequest:\n      type: object\n      properties:\n        accessToken:\n          type: string\n          format: JWT\n    ResendConfirmationEmailRequest:\n      type: object\n      properties:\n        usernameOrEmail:\n          type: string\n    SignInRequest:\n      type: object\n      properties:\n        usernameOrEmail:\n          type: string\n        password:\n          type: string\n    RefreshTokenRequest:\n      type: object\n      properties:\n        refreshToken:\n          type: string\n          format: JWT\n    ForgotPasswordRequest:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n    ResetPasswordRequest:\n      type: object\n      properties:\n        accessToken:\n          type: string\n          format: JWT\n        password:\n          type: string\n        confirmPassword:\n          type: string\n    UpdateProfileRequest:\n      type: object\n      properties:\n        firstName:\n          type: string\n        lastName:\n          type: string\n        username:\n          type: string\n        email:\n          type: string\n          format: email\n    ChangePasswordRequest:\n      type: object\n      properties:\n        oldPassword:\n          type: string\n        newPassword:\n          type: string\n        confirmNewPassword:\n          type: string\n    AdminRequest:\n      type: object\n      properties:\n        usernames:\n          type: array\n          items:\n            type: string\n    UpdateRoleRequest:\n      type: object\n      properties:\n        usernames:\n          type: array\n          items:\n            type: string\n        roleNames:\n          type: array\n          items:\n            type: string\n            enum:\n              - USER\n              - ADMIN\n    RoleResponse:\n      type: object\n      properties:\n        name:\n          type: string\n          enum:\n            - USER\n            - ADMIN\n    UserResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        firstName:\n          type: string\n        lastName:\n          type: string\n        username:\n          type: string\n        email:\n          type: string\n          format: email\n        activated:\n          type: boolean\n        nonLocked:\n          type: boolean\n        roles:\n          type: array\n          items:\n            $ref: \"#/components/schemas/RoleResponse\"\n    SignInResponse:\n      type: object\n      properties:\n        accessToken:\n          type: string\n          format: JWT\n        refreshToken:\n          type: string\n          format: JWT\n        user:\n          $ref: \"#/components/schemas/UserResponse\"\n    RefreshTokenResponse:\n      properties:\n        accessToken:\n          type: string\n          format: JWT\n        refreshToken:\n          type: string\n          format: JWT\n    ErrorResponse:\n      type: object\n      properties:\n        timestamp:\n          type: string\n          format: date-time\n        status:\n          type: integer\n          format: int32\n        error:\n          type: string\n        details:\n          type: array\n          items:\n            type: object\n            properties:\n              field:\n                type: string\n                nullable: true\n              message:\n                type: string\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n",
			"canonicalURL": "/github.com/while1618/BootstrapBugZ@1f287903151fa761d07c5732594cd5569e6b70a5/-/blob/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/while1618/BootstrapBugZ/blob/1f287903151fa761d07c5732594cd5569e6b70a5/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/auth/sign-out\": post: responses: 401: contents: unsupported content types: [application/problem+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}