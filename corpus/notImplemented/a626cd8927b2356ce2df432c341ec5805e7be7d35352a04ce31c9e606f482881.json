{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mosip/documentation"
		},
		"file": {
			"name": "partner-management-service-openapi.json",
			"size": 0,
			"path": "api/partner-management-service-openapi.json",
			"byteSize": 144717,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Partner Management Services API documentation\",\n    \"description\": \"Partner Management Services API documentation\",\n    \"license\": {\n      \"name\": \"Mosip\",\n      \"url\": \"https://docs.mosip.io/platform/license\"\n    },\n    \"version\": \"1.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://localhost/v1/partnermanager\",\n      \"description\": \"Partner Management Service\"\n    }\n  ],\n  \"paths\": {\n    \"/securebiometricinterface\": {\n      \"put\": {\n        \"tags\": [\n          \"secure-biometric-interface-controller\"\n        ],\n        \"summary\": \"Service to update SecureBiometricInterface\",\n        \"description\": \"Updates SecureBiometricInterface and returns success message\",\n        \"operationId\": \"updateSecureBiometricInterface\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperSecureBiometricInterfaceUpdateDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperIdDto\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"secure-biometric-interface-controller\"\n        ],\n        \"summary\": \"Service to save SecureBiometricInterfaceCreateDto\",\n        \"description\": \"Saves SecureBiometricInterfaceCreateDto and return DeviceDetail id\",\n        \"operationId\": \"SecureBiometricInterface\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperSecureBiometricInterfaceCreateDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperIdDto\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"secure-biometric-interface-controller\"\n        ],\n        \"summary\": \"Service to approve/reject SecureBiometricInterface\",\n        \"description\": \"Approve SecureBiometricInterface and returns success message\",\n        \"operationId\": \"approveSecureBiometricInterface\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperSecureBiometricInterfaceStatusUpdateDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperString\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/securebiometricinterface/search\": {\n      \"post\": {\n        \"tags\": [\n          \"secure-biometric-interface-controller\"\n        ],\n        \"summary\": \"Service to search SecureBiometricInterface details\",\n        \"description\": \"Service to search SecureBiometricInterface details\",\n        \"operationId\": \"searchSecureBiometric\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperDeviceSearchDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPageResponseDtoSbiSearchResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/securebiometricinterface/filtervalues\": {\n      \"post\": {\n        \"tags\": [\n          \"secure-biometric-interface-controller\"\n        ],\n        \"summary\": \"Service to filter SBI's\",\n        \"description\": \"Service to filter SBI's\",\n        \"operationId\": \"filterValues\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperFilterValueDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperFilterResponseCodeDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/securebiometricinterface/devicedetails/map\": {\n      \"put\": {\n        \"tags\": [\n          \"secure-biometric-interface-controller\"\n        ],\n        \"summary\": \"Service to map device details with sbi\",\n        \"description\": \"Service to map device details with sbi\",\n        \"operationId\": \"mapDeviceDetails\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperDeviceDetailSBIMappingDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperString\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/securebiometricinterface/devicedetails/map/search\": {\n      \"post\": {\n        \"tags\": [\n          \"secure-biometric-interface-controller\"\n        ],\n        \"summary\": \"Service to search mapped device details and SecureBiometricInterface details\",\n        \"description\": \"Service to search mapped device details and SecureBiometricInterface details\",\n        \"operationId\": \"searchMappedDeviceDetails\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperDeviceSearchDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPageResponseDtoMappedDeviceDetailsReponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/securebiometricinterface/devicedetails/map/remove\": {\n      \"put\": {\n        \"tags\": [\n          \"secure-biometric-interface-controller\"\n        ],\n        \"summary\": \"Service to remove mapped device details with sbi\",\n        \"description\": \"Service to remove mapped device details with sbi\",\n        \"operationId\": \"removeMappedDeviceDetails\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperDeviceDetailSBIMappingDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperString\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/roles\": {\n      \"get\": {\n        \"tags\": [\n          \"role-controller\"\n        ],\n        \"operationId\": \"getRequiredRoles\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperRoleExtnDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners\": {\n      \"get\": {\n        \"tags\": [\n          \"partner-management-controller\"\n        ],\n        \"summary\": \"Service to get partner details\",\n        \"description\": \"Service to get partner details\",\n        \"operationId\": \"getPartners\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerType\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperRetrievePartnerDetailsResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"partner self registration\",\n        \"description\": \"Saves partner details\",\n        \"operationId\": \"partnerSelfRegistration\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperPartnerRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPartnerResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/{partnerId}\": {\n      \"get\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to get deatils of partner\",\n        \"description\": \"Service to get deatils of partner\",\n        \"operationId\": \"retrievePartnerDetails\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperRetrievePartnerDetailsResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to update deatils of partner\",\n        \"description\": \"Service to update deatils of partner\",\n        \"operationId\": \"updatePartnerDetails\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperPartnerUpdateRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPartnerResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"partner-management-controller\"\n        ],\n        \"summary\": \"Service to activate/de-activate partner\",\n        \"description\": \"Service to activate/de-activate partner\",\n        \"operationId\": \"activateDeactivatePartner\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperStatusRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPartnersPolicyMappingResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/{partnerId}/policygroup/{policygroupName}\": {\n      \"put\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"operationId\": \"updatePolicyGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"policygroupName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperString\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/{partnerId}/policy/{policyId}/apiKey/status\": {\n      \"patch\": {\n        \"tags\": [\n          \"partner-management-controller\"\n        ],\n        \"summary\": \"Service to activate/de-activate partner api key\",\n        \"description\": \"Service to activate/de-activate partner api key\",\n        \"operationId\": \"activateDeactivatePartnerAPIKey\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"policyId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperAPIkeyStatusUpdateRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperString\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/{partnerId}/policy/map\": {\n      \"post\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"To request for policy mapping\",\n        \"description\": \"To request for policy mapping\",\n        \"operationId\": \"mapPolicyToPartner\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperPartnerPolicyMappingRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPartnerPolicyMappingResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/{partnerId}/generate/apikey\": {\n      \"patch\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"To generate apiKeys for approved policies\",\n        \"description\": \"To generate apiKeys for approved policies\",\n        \"operationId\": \"generateAPIKey\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperAPIKeyGenerateRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperAPIKeyGenerateResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/{partnerId}/credentialtype/{credentialType}/policies\": {\n      \"get\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to get policy for mapped partner and credential type\",\n        \"description\": \"Service to get policy for mapped partner and credential type\",\n        \"operationId\": \"getCredentialTypePolicy\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"credentialType\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPartnerCredentialTypePolicyDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/{partnerId}/credentialtype/{credentialType}/policies/{policyName}\": {\n      \"post\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to map partner and policy to a credential type\",\n        \"description\": \"Service to map partner and policy to a credential type\",\n        \"operationId\": \"mapPolicyToCredentialType\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"policyName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"credentialType\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperString\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/{partnerId}/contact/add\": {\n      \"post\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to add additional contact deatils of partner\",\n        \"description\": \"Service to add additional contact deatils of partner\",\n        \"operationId\": \"addContact\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperAddContactRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperString\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/{partnerId}/certificate\": {\n      \"get\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to get partner certificate\",\n        \"description\": \"Service to get partner certificate\",\n        \"operationId\": \"getPartnerCertificate\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPartnerCertDownloadResponeDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/{partnerId}/bioextractors/{policyId}\": {\n      \"get\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to get bio extractors\",\n        \"description\": \"Service to get bio extractors\",\n        \"operationId\": \"getBiometricExtractors\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"policyId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperExtractorsDto\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to add bio extractors\",\n        \"description\": \"Service to add bio extractors\",\n        \"operationId\": \"addBiometricExtractors\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"policyId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperExtractorsDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperString\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/{partnerId}/apikey/{apikey}\": {\n      \"get\": {\n        \"tags\": [\n          \"partner-management-controller\"\n        ],\n        \"summary\": \"Service to get policy for given api key\",\n        \"description\": \"Service to get policy for given api key\",\n        \"operationId\": \"getPolicyMappedToAPIKey\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"apikey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPartnerAPIKeyToPolicyMappingsResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/{partnerId}/apikey/{apikey}/policies\": {\n      \"put\": {\n        \"tags\": [\n          \"partner-management-controller\"\n        ],\n        \"summary\": \"Service to update policies against to api key\",\n        \"description\": \"Service to update policies against to api key\",\n        \"operationId\": \"partnerApiKeyToPolicyMappings\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"apikey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperPartnersPolicyMappingRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPartnersPolicyMappingResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/{partnerId}/apikey/request\": {\n      \"get\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to get api key requests of partner\",\n        \"description\": \"Service to get api key requests of partner\",\n        \"operationId\": \"getAPIKeyRequestsOfPartner\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperListAPIkeyRequests\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/search\": {\n      \"post\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to search partner details\",\n        \"description\": \"Service to search partner details\",\n        \"operationId\": \"searchPartner\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperPartnerSearchDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPageResponseDtoPartnerSearchResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/policy/{mappingkey}\": {\n      \"put\": {\n        \"tags\": [\n          \"partner-management-controller\"\n        ],\n        \"summary\": \"Service to approve/reject partner policy mapping\",\n        \"description\": \"Service to approve/reject partner policy mapping\",\n        \"operationId\": \"approveRejectPolicyMappings\",\n        \"parameters\": [\n          {\n            \"name\": \"mappingkey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperStatusRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperString\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/partnertype/search\": {\n      \"post\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to search partner types\",\n        \"description\": \"Service to search partner types\",\n        \"operationId\": \"searchPartnerType\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperSearchDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPageResponseDtoPartnerType\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/filtervalues\": {\n      \"post\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to filter partner details\",\n        \"description\": \"Service to filter partner details\",\n        \"operationId\": \"filterValues_1\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperFilterValueDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperFilterResponseCodeDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/email/verify\": {\n      \"put\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"To verify partner's email\",\n        \"description\": \"Service to verify partner email\",\n        \"operationId\": \"isEmailExists\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperEmailVerificationRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperEmailVerificationResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/certificate/upload\": {\n      \"post\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to upload partner certificate\",\n        \"description\": \"Service to upload partner certificate\",\n        \"operationId\": \"uploadPartnerCertificate\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperPartnerCertificateUploadRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPartnerCertificateResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/certificate/ca/upload\": {\n      \"post\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to upload ca certificate\",\n        \"description\": \"Service to upload ca certificate\",\n        \"operationId\": \"uploadCACertificate\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperCACertificateRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperCACertificateResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/apikey\": {\n      \"get\": {\n        \"tags\": [\n          \"partner-management-controller\"\n        ],\n        \"summary\": \"Service to get api key requests\",\n        \"description\": \"Service to get api key requests\",\n        \"operationId\": \"getAPIKeyRequests\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPartnerAPIKeyRequestsResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/apikey/{apikey}\": {\n      \"get\": {\n        \"tags\": [\n          \"partner-management-controller\"\n        ],\n        \"summary\": \"Service to get api key request\",\n        \"description\": \"Service to get api key request\",\n        \"operationId\": \"getAPIKeyRequest\",\n        \"parameters\": [\n          {\n            \"name\": \"apikey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperApikeyRequests\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/apikey/search\": {\n      \"post\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to search api key\",\n        \"description\": \"Service to search api key\",\n        \"operationId\": \"searchApikey\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperSearchDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPageResponseDtoPartnerPolicySearchResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/apikey/request/search\": {\n      \"post\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to search api key requests\",\n        \"description\": \"Service to search api key requests\",\n        \"operationId\": \"searchApikeyRequest\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperSearchDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPageResponseDtoPolicyRequestSearchResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/partners/apikey/request/filtervalues\": {\n      \"post\": {\n        \"tags\": [\n          \"partner-service-controller\"\n        ],\n        \"summary\": \"Service to filter api key requests\",\n        \"description\": \"Service to filter api key requests\",\n        \"operationId\": \"apikeyRequetsFilterValues\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperFilterValueDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperFilterResponseCodeDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/misps\": {\n      \"get\": {\n        \"tags\": [\n          \"misp-license-controller\"\n        ],\n        \"summary\": \"Service to get license details of misp\",\n        \"description\": \"Service to get license details of misp\",\n        \"operationId\": \"getLicenseDetails\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperListMISPLicenseEntity\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"misp-license-controller\"\n        ],\n        \"summary\": \"Service to update license details of misp\",\n        \"description\": \"Service to update license details of misp\",\n        \"operationId\": \"updateLicenseDetails\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperMISPLicenseUpdateRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperMISPLicenseResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"misp-license-controller\"\n        ],\n        \"summary\": \"Service to generate license for misp\",\n        \"description\": \"Service to generate license for misp\",\n        \"operationId\": \"generateLicense\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperMISPLicenseRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperMISPLicenseResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/misps/{mispId}/licenseKey\": {\n      \"get\": {\n        \"tags\": [\n          \"misp-license-controller\"\n        ],\n        \"summary\": \"Service to get/regenarate license details of misp\",\n        \"description\": \"Service to get/regenarate license details of misp\",\n        \"operationId\": \"regenarteLicenseKey\",\n        \"parameters\": [\n          {\n            \"name\": \"mispId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperMISPLicenseResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/misps/search\": {\n      \"post\": {\n        \"tags\": [\n          \"misp-license-controller\"\n        ],\n        \"summary\": \"Service to search misp details\",\n        \"description\": \"Service to search misp details\",\n        \"operationId\": \"search\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperSearchDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPageResponseDtoMISPLicenseEntity\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/misps/filtervalues\": {\n      \"post\": {\n        \"tags\": [\n          \"misp-license-controller\"\n        ],\n        \"summary\": \"Service to filter misp details\",\n        \"description\": \"Service to filter misp details\",\n        \"operationId\": \"filterValues_2\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperFilterValueDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperFilterResponseCodeDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/logout/user\": {\n      \"delete\": {\n        \"tags\": [\n          \"login-controller\"\n        ],\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"cookie\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperAuthResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/login/{redirectURI}\": {\n      \"get\": {\n        \"tags\": [\n          \"login-controller\"\n        ],\n        \"operationId\": \"login\",\n        \"parameters\": [\n          {\n            \"name\": \"state\",\n            \"in\": \"cookie\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"redirectURI\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/login-redirect/{redirectURI}\": {\n      \"get\": {\n        \"tags\": [\n          \"login-controller\"\n        ],\n        \"operationId\": \"loginRedirect\",\n        \"parameters\": [\n          {\n            \"name\": \"redirectURI\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"state\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"session_state\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"code\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/ftpchipdetail\": {\n      \"put\": {\n        \"tags\": [\n          \"ftp-chip-detail-controller\"\n        ],\n        \"summary\": \"Service to update ftp chip detail\",\n        \"description\": \"Updates ftp chip detail and returns success message\",\n        \"operationId\": \"updateDeviceDetail\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperFtpChipDetailUpdateDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperIdDto\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"ftp-chip-detail-controller\"\n        ],\n        \"summary\": \"Service to save ftpChipDetail\",\n        \"description\": \"Saves ftpChipDetail and return ftpChipDetail id\",\n        \"operationId\": \"createDeviceDetail\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperFtpChipDetailDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperIdDto\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"ftp-chip-detail-controller\"\n        ],\n        \"summary\": \"Service to approve/reject ftp chip detail\",\n        \"description\": \"Approve ftp chip detail and returns success message\",\n        \"operationId\": \"approveDeviceDetails\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperFtpChipDetailStatusDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperString\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/ftpchipdetail/uploadcertificate\": {\n      \"post\": {\n        \"tags\": [\n          \"ftp-chip-detail-controller\"\n        ],\n        \"summary\": \"Service to upload certificate of ftp chip\",\n        \"description\": \"uploads the ftp chip certificate and returns success message\",\n        \"operationId\": \"uploadPartnerCertificate_1\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperFtpChipCertificateRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperFtpCertificateResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/ftpchipdetail/search\": {\n      \"post\": {\n        \"tags\": [\n          \"ftp-chip-detail-controller\"\n        ],\n        \"summary\": \"Service to serach ftp chip details\",\n        \"description\": \"Service to serach ftp chip details\",\n        \"operationId\": \"searchFtpChipDetails\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperDeviceSearchDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPageResponseDtoFTPSearchResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/ftpchipdetail/getPartnerCertificate/{ftpChipDetailId}\": {\n      \"get\": {\n        \"tags\": [\n          \"ftp-chip-detail-controller\"\n        ],\n        \"summary\": \"Service to get certificate of ftp chip\",\n        \"description\": \"Returns the ftp chip certificate\",\n        \"operationId\": \"getPartnerCertificate_1\",\n        \"parameters\": [\n          {\n            \"name\": \"ftpChipDetailId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperFtpCertDownloadResponeDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/devicedetail\": {\n      \"put\": {\n        \"tags\": [\n          \"device-detail-controller\"\n        ],\n        \"summary\": \"Service to update DeviceDetails\",\n        \"description\": \"Updates DeviceDetails\",\n        \"operationId\": \"updateDeviceDetail_1\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperDeviceDetailUpdateDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperIdDto\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"device-detail-controller\"\n        ],\n        \"summary\": \"Service to save DeviceDetail\",\n        \"description\": \"Saves DeviceDetail and return DeviceDetail id\",\n        \"operationId\": \"createDeviceDetail_1\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperDeviceDetailDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperIdDto\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"device-detail-controller\"\n        ],\n        \"summary\": \"Service to approve/reject DeviceDetail\",\n        \"description\": \"Approve DeviceDetail and returns success message\",\n        \"operationId\": \"approveDeviceDetails_1\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperUpdateDeviceDetailStatusDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperString\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/devicedetail/search\": {\n      \"post\": {\n        \"tags\": [\n          \"device-detail-controller\"\n        ],\n        \"summary\": \"Service to search DeviceDetails\",\n        \"description\": \"ervice to search DeviceDetails\",\n        \"operationId\": \"searchDeviceDetails\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperDeviceSearchDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPageResponseDtoDeviceDetailSearchResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/devicedetail/filtervalues\": {\n      \"post\": {\n        \"tags\": [\n          \"device-detail-controller\"\n        ],\n        \"summary\": \"Service to filter DeviceDetails\",\n        \"description\": \"Service to filter DeviceDetails\",\n        \"operationId\": \"filterValues_3\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperDeviceFilterValueDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperFilterResponseCodeDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/devicedetail/deviceType/search\": {\n      \"post\": {\n        \"tags\": [\n          \"device-detail-controller\"\n        ],\n        \"summary\": \"Service to search DeviceTypes\",\n        \"description\": \"service to search DeviceTypes\",\n        \"operationId\": \"searchDeviceType\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperDeviceSearchDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPageResponseDtoRegistrationSubTypeDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/devicedetail/deviceType/filtervalues\": {\n      \"post\": {\n        \"tags\": [\n          \"device-detail-controller\"\n        ],\n        \"summary\": \"Service to filter DeviceTypes\",\n        \"description\": \"Service to filter DeviceTypes\",\n        \"operationId\": \"filterDeviceType\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperDeviceFilterValueDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperFilterResponseCodeDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/devicedetail/deviceSubType/filtervalues\": {\n      \"post\": {\n        \"tags\": [\n          \"device-detail-controller\"\n        ],\n        \"summary\": \"Service to filter DeviceSubTypes\",\n        \"description\": \"Service to filter DeviceSubTypes\",\n        \"operationId\": \"filterDeviceSubType\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperDeviceFilterValueDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperFilterResponseCodeDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/authorize/admin/validateToken\": {\n      \"get\": {\n        \"tags\": [\n          \"login-controller\"\n        ],\n        \"operationId\": \"validateAdminToken\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperMosipUserDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"RequestWrapperSecureBiometricInterfaceUpdateDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/SecureBiometricInterfaceUpdateDto\"\n          }\n        }\n      },\n      \"SecureBiometricInterfaceUpdateDto\": {\n        \"required\": [\n          \"id\",\n          \"isActive\",\n          \"swBinaryHash\",\n          \"swVersion\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"swBinaryHash\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"swVersion\": {\n            \"maxLength\": 64,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"swCreateDateTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"swExpiryDateTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"isActive\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"ErrorResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"errorCode\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"IdDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperIdDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/IdDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"RequestWrapperSecureBiometricInterfaceCreateDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/SecureBiometricInterfaceCreateDto\"\n          }\n        }\n      },\n      \"SecureBiometricInterfaceCreateDto\": {\n        \"required\": [\n          \"providerId\",\n          \"swBinaryHash\",\n          \"swVersion\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"swBinaryHash\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"swVersion\": {\n            \"maxLength\": 64,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"swCreateDateTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"swExpiryDateTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"providerId\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperSecureBiometricInterfaceStatusUpdateDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/SecureBiometricInterfaceStatusUpdateDto\"\n          }\n        }\n      },\n      \"SecureBiometricInterfaceStatusUpdateDto\": {\n        \"required\": [\n          \"approvalStatus\",\n          \"id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"approvalStatus\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperString\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"type\": \"string\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"DeviceSearchDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"filters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SearchFilter\"\n            }\n          },\n          \"sort\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SearchSort\"\n            }\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          },\n          \"purpose\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Pagination\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"pageStart\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageFetch\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"RequestWrapperDeviceSearchDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/DeviceSearchDto\"\n          }\n        }\n      },\n      \"SearchFilter\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"string\"\n          },\n          \"values\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"fromValue\": {\n            \"type\": \"string\"\n          },\n          \"toValue\": {\n            \"type\": \"string\"\n          },\n          \"columnName\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"SearchSort\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"sortField\": {\n            \"type\": \"string\"\n          },\n          \"sortType\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"PageResponseDtoSbiSearchResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fromRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"toRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SbiSearchResponseDto\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperPageResponseDtoSbiSearchResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PageResponseDtoSbiSearchResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"SbiSearchResponseDto\": {\n        \"required\": [\n          \"deviceDetailId\",\n          \"swBinaryHash\",\n          \"swVersion\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"swBinaryHash\": {\n            \"maxItems\": 36,\n            \"minItems\": 1,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"byte\"\n            }\n          },\n          \"swVersion\": {\n            \"maxLength\": 64,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"deviceDetailId\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"swCreateDateTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"swExpiryDateTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"isActive\": {\n            \"type\": \"boolean\"\n          },\n          \"approvalStatus\": {\n            \"type\": \"string\"\n          },\n          \"providerId\": {\n            \"type\": \"string\"\n          },\n          \"partnerOrganizationName\": {\n            \"type\": \"string\"\n          },\n          \"crBy\": {\n            \"type\": \"string\"\n          },\n          \"crDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"delDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"updBy\": {\n            \"type\": \"string\"\n          },\n          \"updDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"deleted\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"FilterDto\": {\n        \"required\": [\n          \"columnName\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"columnName\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"FilterValueDto\": {\n        \"required\": [\n          \"filters\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"filters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FilterDto\"\n            }\n          },\n          \"optionalFilters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SearchFilter\"\n            }\n          }\n        }\n      },\n      \"RequestWrapperFilterValueDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/FilterValueDto\"\n          }\n        }\n      },\n      \"ColumnCodeValue\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fieldID\": {\n            \"type\": \"string\"\n          },\n          \"fieldValue\": {\n            \"type\": \"string\"\n          },\n          \"fieldCode\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"FilterResponseCodeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"filters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ColumnCodeValue\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperFilterResponseCodeDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/FilterResponseCodeDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"DeviceDetailSBIMappingDto\": {\n        \"required\": [\n          \"deviceDetailId\",\n          \"sbiId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"deviceDetailId\": {\n            \"type\": \"string\"\n          },\n          \"sbiId\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperDeviceDetailSBIMappingDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/DeviceDetailSBIMappingDto\"\n          }\n        }\n      },\n      \"MappedDeviceDetailsReponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"deviceDetailId\": {\n            \"type\": \"string\"\n          },\n          \"sbiId\": {\n            \"type\": \"string\"\n          },\n          \"providerId\": {\n            \"type\": \"string\"\n          },\n          \"providerName\": {\n            \"type\": \"string\"\n          },\n          \"make\": {\n            \"type\": \"string\"\n          },\n          \"model\": {\n            \"type\": \"string\"\n          },\n          \"deviceTypeCode\": {\n            \"type\": \"string\"\n          },\n          \"deviceSubTypeCode\": {\n            \"type\": \"string\"\n          },\n          \"swBinaryHash\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"byte\"\n            }\n          },\n          \"swVersion\": {\n            \"type\": \"string\"\n          },\n          \"crBy\": {\n            \"type\": \"string\"\n          },\n          \"crDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"PageResponseDtoMappedDeviceDetailsReponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fromRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"toRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MappedDeviceDetailsReponse\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperPageResponseDtoMappedDeviceDetailsReponse\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PageResponseDtoMappedDeviceDetailsReponse\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperRoleExtnDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/RoleExtnDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"RoleExtnDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"PartnerRequest\": {\n        \"required\": [\n          \"address\",\n          \"contactNumber\",\n          \"emailId\",\n          \"organizationName\",\n          \"partnerId\",\n          \"partnerType\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"partnerId\": {\n            \"type\": \"string\"\n          },\n          \"policyGroup\": {\n            \"type\": \"string\"\n          },\n          \"organizationName\": {\n            \"maxLength\": 128,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"address\": {\n            \"maxLength\": 2000,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"contactNumber\": {\n            \"maxLength\": 16,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"emailId\": {\n            \"maxLength\": 254,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"partnerType\": {\n            \"type\": \"string\"\n          },\n          \"langCode\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperPartnerRequest\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/PartnerRequest\"\n          }\n        }\n      },\n      \"PartnerResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"partnerId\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperPartnerResponse\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PartnerResponse\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperRetrievePartnerDetailsResponse\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/RetrievePartnerDetailsResponse\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"RetrievePartnerDetailsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"partners\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/RetrievePartnersDetails\"\n            }\n          }\n        }\n      },\n      \"RetrievePartnersDetails\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"partnerID\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"organizationName\": {\n            \"type\": \"string\"\n          },\n          \"contactNumber\": {\n            \"type\": \"string\"\n          },\n          \"emailId\": {\n            \"type\": \"string\"\n          },\n          \"address\": {\n            \"type\": \"string\"\n          },\n          \"partnerType\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"PartnerUpdateRequest\": {\n        \"required\": [\n          \"address\",\n          \"contactNumber\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"address\": {\n            \"maxLength\": 2000,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"contactNumber\": {\n            \"maxLength\": 16,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperPartnerUpdateRequest\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/PartnerUpdateRequest\"\n          }\n        }\n      },\n      \"RequestWrapperStatusRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/StatusRequestDto\"\n          }\n        }\n      },\n      \"StatusRequestDto\": {\n        \"required\": [\n          \"status\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"PartnersPolicyMappingResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperPartnersPolicyMappingResponse\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PartnersPolicyMappingResponse\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"APIkeyStatusUpdateRequestDto\": {\n        \"required\": [\n          \"label\",\n          \"status\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperAPIkeyStatusUpdateRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/APIkeyStatusUpdateRequestDto\"\n          }\n        }\n      },\n      \"PartnerPolicyMappingRequest\": {\n        \"required\": [\n          \"policyName\",\n          \"useCaseDescription\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"policyName\": {\n            \"type\": \"string\"\n          },\n          \"useCaseDescription\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperPartnerPolicyMappingRequest\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/PartnerPolicyMappingRequest\"\n          }\n        }\n      },\n      \"PartnerPolicyMappingResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"mappingkey\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperPartnerPolicyMappingResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PartnerPolicyMappingResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"APIKeyGenerateRequestDto\": {\n        \"required\": [\n          \"label\",\n          \"policyName\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"policyName\": {\n            \"type\": \"string\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperAPIKeyGenerateRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/APIKeyGenerateRequestDto\"\n          }\n        }\n      },\n      \"APIKeyGenerateResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"apiKey\": {\n            \"type\": \"string\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"policyId\": {\n            \"type\": \"string\"\n          },\n          \"partnerId\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperAPIKeyGenerateResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/APIKeyGenerateResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"JSONObject\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"empty\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": {\n          \"type\": \"object\"\n        }\n      },\n      \"PartnerCredentialTypePolicyDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"partnerId\": {\n            \"type\": \"string\"\n          },\n          \"credentialType\": {\n            \"type\": \"string\"\n          },\n          \"policyId\": {\n            \"type\": \"string\"\n          },\n          \"policyName\": {\n            \"type\": \"string\"\n          },\n          \"policyDesc\": {\n            \"type\": \"string\"\n          },\n          \"policyType\": {\n            \"type\": \"string\"\n          },\n          \"publishDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"validTill\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"is_Active\": {\n            \"type\": \"boolean\"\n          },\n          \"cr_by\": {\n            \"type\": \"string\"\n          },\n          \"cr_dtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"up_by\": {\n            \"type\": \"string\"\n          },\n          \"upd_dtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"policies\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"empty\": {\n                \"type\": \"boolean\"\n              }\n            },\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperPartnerCredentialTypePolicyDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PartnerCredentialTypePolicyDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"AddContactRequestDto\": {\n        \"required\": [\n          \"address\",\n          \"contactNumber\",\n          \"emailId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"address\": {\n            \"type\": \"string\"\n          },\n          \"contactNumber\": {\n            \"type\": \"string\"\n          },\n          \"emailId\": {\n            \"type\": \"string\"\n          },\n          \"is_Active\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"RequestWrapperAddContactRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/AddContactRequestDto\"\n          }\n        }\n      },\n      \"PartnerCertDownloadResponeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"certificateData\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"ResponseWrapperPartnerCertDownloadResponeDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PartnerCertDownloadResponeDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"ExtractorDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"attributeName\": {\n            \"type\": \"string\"\n          },\n          \"biometric\": {\n            \"type\": \"string\"\n          },\n          \"extractor\": {\n            \"$ref\": \"#/components/schemas/ExtractorProviderDto\"\n          }\n        }\n      },\n      \"ExtractorProviderDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"provider\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ExtractorsDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"extractors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ExtractorDto\"\n            }\n          }\n        }\n      },\n      \"RequestWrapperExtractorsDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/ExtractorsDto\"\n          }\n        }\n      },\n      \"ResponseWrapperExtractorsDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/ExtractorsDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"PartnerAPIKeyToPolicyMappingsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"partnerID\": {\n            \"type\": \"string\"\n          },\n          \"policyId\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperPartnerAPIKeyToPolicyMappingsResponse\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PartnerAPIKeyToPolicyMappingsResponse\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"PartnersPolicyMappingRequest\": {\n        \"required\": [\n          \"newPolicyID\",\n          \"oldPolicyID\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"oldPolicyID\": {\n            \"type\": \"string\"\n          },\n          \"newPolicyID\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperPartnersPolicyMappingRequest\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/PartnersPolicyMappingRequest\"\n          }\n        }\n      },\n      \"APIkeyRequests\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"apiKeyReqID\": {\n            \"type\": \"string\"\n          },\n          \"apiKeyRequestStatus\": {\n            \"type\": \"string\"\n          },\n          \"partnerApiKey\": {\n            \"type\": \"string\"\n          },\n          \"apikeyStatus\": {\n            \"type\": \"boolean\"\n          },\n          \"validityTill\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"ResponseWrapperListAPIkeyRequests\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/APIkeyRequests\"\n            }\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"PartnerSearchDto\": {\n        \"required\": [\n          \"partnerType\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"filters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SearchFilter\"\n            }\n          },\n          \"sort\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SearchSort\"\n            }\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          },\n          \"partnerType\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperPartnerSearchDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/PartnerSearchDto\"\n          }\n        }\n      },\n      \"PageResponseDtoPartnerSearchResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fromRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"toRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PartnerSearchResponseDto\"\n            }\n          }\n        }\n      },\n      \"PartnerSearchResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"address\": {\n            \"type\": \"string\"\n          },\n          \"contactNo\": {\n            \"type\": \"string\"\n          },\n          \"crBy\": {\n            \"type\": \"string\"\n          },\n          \"crDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"delDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"emailId\": {\n            \"type\": \"string\"\n          },\n          \"isActive\": {\n            \"type\": \"boolean\"\n          },\n          \"isDeleted\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"policyGroupId\": {\n            \"type\": \"string\"\n          },\n          \"certificateAlias\": {\n            \"type\": \"string\"\n          },\n          \"partnerTypeCode\": {\n            \"type\": \"string\"\n          },\n          \"approvalStatus\": {\n            \"type\": \"string\"\n          },\n          \"updBy\": {\n            \"type\": \"string\"\n          },\n          \"updDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"langCode\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperPageResponseDtoPartnerSearchResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PageResponseDtoPartnerSearchResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"RequestWrapperSearchDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/SearchDto\"\n          }\n        }\n      },\n      \"SearchDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"filters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SearchFilter\"\n            }\n          },\n          \"sort\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SearchSort\"\n            }\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          }\n        }\n      },\n      \"PageResponseDtoPartnerType\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fromRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"toRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PartnerType\"\n            }\n          }\n        }\n      },\n      \"PartnerType\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\"\n          },\n          \"crBy\": {\n            \"type\": \"string\"\n          },\n          \"crDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"delDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"isActive\": {\n            \"type\": \"boolean\"\n          },\n          \"isDeleted\": {\n            \"type\": \"boolean\"\n          },\n          \"partnerDescription\": {\n            \"type\": \"string\"\n          },\n          \"updBy\": {\n            \"type\": \"string\"\n          },\n          \"updDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"isPolicyRequired\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"ResponseWrapperPageResponseDtoPartnerType\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PageResponseDtoPartnerType\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"EmailVerificationRequestDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"emailId\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperEmailVerificationRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/EmailVerificationRequestDto\"\n          }\n        }\n      },\n      \"EmailVerificationResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"emailExists\": {\n            \"type\": \"boolean\"\n          },\n          \"policyRequiredPartnerTypes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperEmailVerificationResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/EmailVerificationResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"PartnerCertificateUploadRequestDto\": {\n        \"required\": [\n          \"certificateData\",\n          \"partnerDomain\",\n          \"partnerId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"partnerId\": {\n            \"type\": \"string\"\n          },\n          \"certificateData\": {\n            \"type\": \"string\"\n          },\n          \"partnerDomain\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperPartnerCertificateUploadRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/PartnerCertificateUploadRequestDto\"\n          }\n        }\n      },\n      \"PartnerCertificateResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"signedCertificateData\": {\n            \"type\": \"string\"\n          },\n          \"certificateId\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"ResponseWrapperPartnerCertificateResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PartnerCertificateResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"CACertificateRequestDto\": {\n        \"required\": [\n          \"certificateData\",\n          \"partnerDomain\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"certificateData\": {\n            \"type\": \"string\"\n          },\n          \"partnerDomain\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperCACertificateRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/CACertificateRequestDto\"\n          }\n        }\n      },\n      \"CACertificateResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"ResponseWrapperCACertificateResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/CACertificateResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"ApikeyRequests\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"partnerID\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"organizationName\": {\n            \"type\": \"string\"\n          },\n          \"policyId\": {\n            \"type\": \"string\"\n          },\n          \"policyDesc\": {\n            \"type\": \"string\"\n          },\n          \"apiKeyReqNo\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"PartnerAPIKeyRequestsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"apikeyRequests\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ApikeyRequests\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperPartnerAPIKeyRequestsResponse\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PartnerAPIKeyRequestsResponse\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperApikeyRequests\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/ApikeyRequests\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"PageResponseDtoPartnerPolicySearchResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fromRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"toRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PartnerPolicySearchResponseDto\"\n            }\n          }\n        }\n      },\n      \"PartnerPolicySearchResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"crBy\": {\n            \"type\": \"string\"\n          },\n          \"crDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"delDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"isActive\": {\n            \"type\": \"boolean\"\n          },\n          \"isDeleted\": {\n            \"type\": \"boolean\"\n          },\n          \"policyId\": {\n            \"type\": \"string\"\n          },\n          \"policyName\": {\n            \"type\": \"string\"\n          },\n          \"updBy\": {\n            \"type\": \"string\"\n          },\n          \"updDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"validFromDatetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"validToDatetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"partnerId\": {\n            \"type\": \"string\"\n          },\n          \"partnerName\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperPageResponseDtoPartnerPolicySearchResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PageResponseDtoPartnerPolicySearchResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"PageResponseDtoPolicyRequestSearchResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fromRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"toRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PolicyRequestSearchResponseDto\"\n            }\n          }\n        }\n      },\n      \"PolicyRequestSearchResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"apikeyRequestId\": {\n            \"type\": \"string\"\n          },\n          \"crBy\": {\n            \"type\": \"string\"\n          },\n          \"crDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"delDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"isDeleted\": {\n            \"type\": \"boolean\"\n          },\n          \"policyId\": {\n            \"type\": \"string\"\n          },\n          \"requestDatetimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"requestDetail\": {\n            \"type\": \"string\"\n          },\n          \"statusCode\": {\n            \"type\": \"string\"\n          },\n          \"updBy\": {\n            \"type\": \"string\"\n          },\n          \"updDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"partnerId\": {\n            \"type\": \"string\"\n          },\n          \"partnerName\": {\n            \"type\": \"string\"\n          },\n          \"policyName\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperPageResponseDtoPolicyRequestSearchResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PageResponseDtoPolicyRequestSearchResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"MISPLicenseUpdateRequestDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"providerId\": {\n            \"type\": \"string\"\n          },\n          \"licenseKeyStatus\": {\n            \"type\": \"string\"\n          },\n          \"licenseKey\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperMISPLicenseUpdateRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/MISPLicenseUpdateRequestDto\"\n          }\n        }\n      },\n      \"MISPLicenseResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"providerId\": {\n            \"type\": \"string\"\n          },\n          \"licenseKey\": {\n            \"type\": \"string\"\n          },\n          \"licenseKeyStatus\": {\n            \"type\": \"string\"\n          },\n          \"licenseKeyExpiry\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"ResponseWrapperMISPLicenseResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/MISPLicenseResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"MISPLicenseRequestDto\": {\n        \"required\": [\n          \"providerId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"providerId\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperMISPLicenseRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/MISPLicenseRequestDto\"\n          }\n        }\n      },\n      \"MISPLicenseEntity\": {\n        \"required\": [\n          \"licenseKey\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"mispId\": {\n            \"type\": \"string\"\n          },\n          \"licenseKey\": {\n            \"type\": \"string\"\n          },\n          \"validFromDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"validToDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"isActive\": {\n            \"type\": \"boolean\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"createdDateTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"updatedBy\": {\n            \"type\": \"string\"\n          },\n          \"updatedDateTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"isDeleted\": {\n            \"type\": \"boolean\"\n          },\n          \"deletedDateTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"ResponseWrapperListMISPLicenseEntity\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MISPLicenseEntity\"\n            }\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"PageResponseDtoMISPLicenseEntity\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fromRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"toRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MISPLicenseEntity\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperPageResponseDtoMISPLicenseEntity\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PageResponseDtoMISPLicenseEntity\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"AuthResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperAuthResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/AuthResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"ServiceError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"errorCode\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"FtpChipDetailUpdateDto\": {\n        \"required\": [\n          \"ftpChipDetailId\",\n          \"make\",\n          \"model\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"ftpChipDetailId\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"make\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"model\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperFtpChipDetailUpdateDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/FtpChipDetailUpdateDto\"\n          }\n        }\n      },\n      \"FtpChipDetailDto\": {\n        \"required\": [\n          \"ftpProviderId\",\n          \"make\",\n          \"model\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"ftpProviderId\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"make\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"model\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperFtpChipDetailDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/FtpChipDetailDto\"\n          }\n        }\n      },\n      \"FtpChipDetailStatusDto\": {\n        \"required\": [\n          \"approvalStatus\",\n          \"ftpChipDetailId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"ftpChipDetailId\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"approvalStatus\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"RequestWrapperFtpChipDetailStatusDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/FtpChipDetailStatusDto\"\n          }\n        }\n      },\n      \"FtpChipCertificateRequestDto\": {\n        \"required\": [\n          \"certificateData\",\n          \"ftpChipDeatilId\",\n          \"ftpProviderId\",\n          \"isItForRegistrationDevice\",\n          \"organizationName\",\n          \"partnerDomain\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"ftpProviderId\": {\n            \"type\": \"string\"\n          },\n          \"ftpChipDeatilId\": {\n            \"type\": \"string\"\n          },\n          \"isItForRegistrationDevice\": {\n            \"type\": \"boolean\"\n          },\n          \"certificateData\": {\n            \"type\": \"string\"\n          },\n          \"organizationName\": {\n            \"type\": \"string\"\n          },\n          \"partnerDomain\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperFtpChipCertificateRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/FtpChipCertificateRequestDto\"\n          }\n        }\n      },\n      \"FtpCertificateResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"signedCertificateData\": {\n            \"type\": \"string\"\n          },\n          \"certificateId\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"ResponseWrapperFtpCertificateResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/FtpCertificateResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"FTPSearchResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ftpChipDetailId\": {\n            \"type\": \"string\"\n          },\n          \"ftpProviderId\": {\n            \"type\": \"string\"\n          },\n          \"make\": {\n            \"type\": \"string\"\n          },\n          \"model\": {\n            \"type\": \"string\"\n          },\n          \"certificateAlias\": {\n            \"type\": \"string\"\n          },\n          \"partnerOrganizationName\": {\n            \"type\": \"string\"\n          },\n          \"crBy\": {\n            \"type\": \"string\"\n          },\n          \"crDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"delDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"updBy\": {\n            \"type\": \"string\"\n          },\n          \"updDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"deleted\": {\n            \"type\": \"boolean\"\n          },\n          \"active\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"PageResponseDtoFTPSearchResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fromRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"toRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FTPSearchResponseDto\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperPageResponseDtoFTPSearchResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PageResponseDtoFTPSearchResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"FtpCertDownloadResponeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"certificateData\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"ResponseWrapperFtpCertDownloadResponeDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/FtpCertDownloadResponeDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"DeviceDetailUpdateDto\": {\n        \"required\": [\n          \"deviceSubTypeCode\",\n          \"deviceTypeCode\",\n          \"id\",\n          \"make\",\n          \"model\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"deviceTypeCode\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"deviceSubTypeCode\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"make\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"model\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperDeviceDetailUpdateDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/DeviceDetailUpdateDto\"\n          }\n        }\n      },\n      \"DeviceDetailDto\": {\n        \"required\": [\n          \"deviceProviderId\",\n          \"deviceSubTypeCode\",\n          \"deviceTypeCode\",\n          \"make\",\n          \"model\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"deviceProviderId\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"deviceTypeCode\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"deviceSubTypeCode\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"make\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"model\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperDeviceDetailDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/DeviceDetailDto\"\n          }\n        }\n      },\n      \"RequestWrapperUpdateDeviceDetailStatusDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/UpdateDeviceDetailStatusDto\"\n          }\n        }\n      },\n      \"UpdateDeviceDetailStatusDto\": {\n        \"required\": [\n          \"approvalStatus\",\n          \"id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"approvalStatus\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"DeviceDetailSearchResponseDto\": {\n        \"required\": [\n          \"deviceProviderId\",\n          \"deviceSubTypeCode\",\n          \"deviceTypeCode\",\n          \"make\",\n          \"model\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"deviceProviderId\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"deviceTypeCode\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"deviceSubTypeCode\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"make\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"model\": {\n            \"maxLength\": 36,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"partnerOrganizationName\": {\n            \"maxLength\": 128,\n            \"minLength\": 0,\n            \"type\": \"string\"\n          },\n          \"isActive\": {\n            \"type\": \"boolean\"\n          },\n          \"approvalStatus\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"PageResponseDtoDeviceDetailSearchResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fromRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"toRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DeviceDetailSearchResponseDto\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperPageResponseDtoDeviceDetailSearchResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PageResponseDtoDeviceDetailSearchResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"DeviceFilterValueDto\": {\n        \"required\": [\n          \"filters\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"filters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FilterDto\"\n            }\n          },\n          \"optionalFilters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SearchFilter\"\n            }\n          },\n          \"purpose\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"REGISTRATION\",\n              \"AUTH\"\n            ]\n          }\n        }\n      },\n      \"RequestWrapperDeviceFilterValueDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/DeviceFilterValueDto\"\n          }\n        }\n      },\n      \"PageResponseDtoRegistrationSubTypeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fromRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"toRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalRecord\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/RegistrationSubTypeDto\"\n            }\n          }\n        }\n      },\n      \"RegistrationSubTypeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\"\n          },\n          \"deviceType\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"desciption\": {\n            \"type\": \"string\"\n          },\n          \"isDeleted\": {\n            \"type\": \"boolean\"\n          },\n          \"crBy\": {\n            \"type\": \"string\"\n          },\n          \"crDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"delDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"updBy\": {\n            \"type\": \"string\"\n          },\n          \"updDtimes\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"active\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"ResponseWrapperPageResponseDtoRegistrationSubTypeDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PageResponseDtoRegistrationSubTypeDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            }\n          }\n        }\n      },\n      \"MosipUserDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"mobile\": {\n            \"type\": \"string\"\n          },\n          \"mail\": {\n            \"type\": \"string\"\n          },\n          \"langCode\": {\n            \"type\": \"string\"\n          },\n          \"userPassword\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"type\": \"string\"\n          },\n          \"rid\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperMosipUserDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/MosipUserDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/mosip/documentation@80c18e5b360ae9106b6b1bd68f7f81d0dd3952ce/-/blob/api/partner-management-service-openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/mosip/documentation/blob/80c18e5b360ae9106b6b1bd68f7f81d0dd3952ce/api/partner-management-service-openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/securebiometricinterface/search\": post: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"cookie params",
		"unsupported content types"
	]
}