{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/optirtc.public/openapi.yml",
			"byteSize": 32319,
			"content": "openapi: 3.0.1\ninfo:\n  title: Public API\n  description: |\n    This is a generated connector for [Optirtc Public API v1.0](https://docs.optirtc.com/api/opti-publicapi-v1.html) OpenAPI specification.\n    The Opti Public API provides a simple, read-only interface to access metadata and the last 3 days of real-time data points of all metrics in an Opti Platform Account:\n    * **Web developers** can use the Public API to display real-time metrics from Opti facilities on their own websites - no backend database required.\n    * **Systems integrators** can use the Public API to pull data into their own GIS or ETL systems, for example, to connect real-time stormwater conditions to their existing asset management software.\n    * **Analysts** can use the Public API to pull data into their analysis scripts for repeated analysis.\n    To learn about how Opti's data-driven products are enhancing community resilience to heavy rainfall across North America, see the [Opti Home Page](https://www.optirtc.com).\n    OptiRTC provides simple examples of using open-source technologies to interact with the OptiRTC Public API. Find out more on our [Github page.](https://github.com/OptiRTC/OptiRTC-API-examples)\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n  \n    Create a [Optirtc account](https://www.optirtc.com) and obtain tokens by following [this guide](https://docs.optirtc.com/api/opti-publicapi-v1.html#section/Authentication).\n  x-ballerina-display:\n    label: Optirtc Public \n    iconPath: \"icon.png\"\n  version: '1.0'\n  x-logo:\n    url: https://optidocs.blob.core.windows.net/$web/img/opti-logo.svg\n    backgroundColor: '#FFFFFF'\n    altText: OptiRTC, Inc. logo\nservers:\n  - url: https://public.optirtc.com/api\npaths:\n  /Datastream:\n    get:\n      summary: Datastream\n      description: |-\n        Get all DataStreams associated with the passed in key. This endpoint implements server-side data paging to control the size of each response.\n        Clients should check for the presence of a 'NextPageLink' property along with the response Items, indicating that there is more data to be returned for the original request.\n        The 'at=X' query parameter is the UTC date to filter by. (yyyy-mm-dd or yyyy-mm-ddThh:mm:ssZ) \n        The 'top=Y' query parameter will restrict the results to the top Y values.\n        The 'skiptoken=Z' query parameter will tell the server to omit the first Z datastreams from the results.\n      operationId: datastream\n      parameters:\n        - name: at\n          in: query\n          description: ISO-8601 Date String in UTC. (yyyy-mm-dd or yyyy-mm-ddThh:mm:ssZ); if omitted, server will interpret as “now”.\n          schema:\n            type: string\n        - name: top\n          in: query\n          description: Limit results to the first top ordered by Id.\n          schema:\n            type: integer\n        - name: skiptoken\n          in: query\n          description: Paging parameter to return the page after this number of results.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Lists the DataStreams available with the provided API key.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataStreamPageResult'\n              example:\n                Items:\n                  - title: 'ExampleRd - Nimbus: Elevation'\n                    id: 43674\n                    resourceId: 80766\n                    validFrom: '2017-04-12T21:00:00.0000000+00:00'\n                    location:\n                      coordinates:\n                        - -75.156246\n                        - 38.616841\n                      bbox:\n                        - -75.156246\n                        - 38.616841\n                        - -75.156246\n                        - 38.616841\n                      type: Point\n                    unitName: inches\n                    unitAbbreviation: in\n                  - title: 'ExampleRd - Nimbus: Current Valve Percent Open'\n                    id: 43692\n                    resourceId: 80787\n                    validFrom: '2017-04-12T21:00:00.0000000+00:00'\n                    location:\n                      coordinates:\n                        - -75.156246\n                        - 38.616841\n                      bbox:\n                        - -75.156246\n                        - 38.616841\n                        - -75.156246\n                        - 38.616841\n                      type: Point\n                    unitName: percent\n                    unitAbbreviation: '%'\n                  - title: 'ExampleRd - Nimbus: Expected Incoming Volume'\n                    id: 43708\n                    resourceId: 80803\n                    validFrom: '2017-04-12T21:00:00.0000000+00:00'\n                    location:\n                      coordinates:\n                        - -75.156246\n                        - 38.616841\n                      bbox:\n                        - -75.156246\n                        - 38.616841\n                        - -75.156246\n                        - 38.616841\n                      type: Point\n                    unitName: cubic feet\n                    unitAbbreviation: ft^3\n                  - title: 'ExampleRd - Nimbus: Target Release Rate'\n                    id: 43736\n                    resourceId: 80837\n                    validFrom: '2017-04-12T21:00:00.0000000+00:00'\n                    location:\n                      coordinates:\n                        - -75.156246\n                        - 38.616841\n                      bbox:\n                        - -75.156246\n                        - 38.616841\n                        - -75.156246\n                        - 38.616841\n                      type: Point\n                    unitName: cubic feet per second\n                    unitAbbreviation: cfs\n                  - title: 'ExampleRd - PES: Precipitation Intensity'\n                    id: 84249\n                    resourceId: 144179\n                    validFrom: '2018-09-14T14:11:16.0000000+00:00'\n                    location:\n                      coordinates:\n                        - -75.156246\n                        - 38.616841\n                      bbox:\n                        - -75.156246\n                        - 38.616841\n                        - -75.156246\n                        - 38.616841\n                      type: Point\n                    unitName: inches per hour\n                    unitAbbreviation: in/hr\n                  - title: 'ExampleRd - PES: Precipitation In This Event'\n                    id: 84257\n                    resourceId: 144191\n                    validFrom: '2018-09-14T14:11:16.0000000+00:00'\n                    location:\n                      coordinates:\n                        - -75.156246\n                        - 38.616841\n                      bbox:\n                        - -75.156246\n                        - 38.616841\n                        - -75.156246\n                        - 38.616841\n                      type: Point\n                    unitName: inches\n                    unitAbbreviation: in\n                  - title: 'Dilboy 4200 - Nimbus: Elevation'\n                    id: 112484\n                    resourceId: 186451\n                    validFrom: '2020-06-30T18:08:14.0000000+00:00'\n                    location:\n                      coordinates:\n                        - -73.153581\n                        - 39.231453\n                      bbox:\n                        - -73.153581\n                        - 39.231453\n                        - -73.153581\n                        - 39.231453\n                      type: Point\n                    unitName: inches\n                    unitAbbreviation: in\n                  - title: 'Dilboy 4200 - Nimbus: Current Valve Percent Open'\n                    id: 112491\n                    resourceId: 186470\n                    validFrom: '2020-06-30T18:08:14.0000000+00:00'\n                    location:\n                      coordinates:\n                        - -73.153581\n                        - 39.231453\n                      bbox:\n                        - -73.153581\n                        - 39.231453\n                        - -73.153581\n                        - 39.231453\n                      type: Point\n                    unitName: percent\n                    unitAbbreviation: '%'\n                  - title: 'Dilboy 4200 - Nimbus: Expected Incoming Volume'\n                    id: 112517\n                    resourceId: 186526\n                    validFrom: '2020-06-30T18:08:14.0000000+00:00'\n                    location:\n                      coordinates:\n                        - -73.153581\n                        - 39.231453\n                      bbox:\n                        - -73.153581\n                        - 39.231453\n                        - -73.153581\n                        - 39.231453\n                      type: Point\n                    unitName: cubic feet\n                    unitAbbreviation: ft^3\n                  - title: 'Dilboy 4200 - Nimbus: Target Release Rate'\n                    id: 112544\n                    resourceId: 186563\n                    validFrom: '2020-06-30T18:08:14.0000000+00:00'\n                    location:\n                      coordinates:\n                        - -73.153581\n                        - 39.231453\n                      bbox:\n                        - -73.153581\n                        - 39.231453\n                        - -73.153581\n                        - 39.231453\n                      type: Point\n                    unitName: cubic feet per second\n                    unitAbbreviation: cfs\n                Count: 10\n        '400':\n          description: Your request cannot be processed.\n        '401':\n          description: Invalid API key.\n        '403':\n          description: The API key does not authorize access to the requested resources.\n        '429':\n          description: Too many requests have been made for this API key recently.\n          headers:\n            Retry-After:\n              description: Period of time in seconds to wait before retrying the request.\n              required: true\n              schema:\n                type: integer\n          content:\n            text/html:\n              example: Too Many Requests\n  /DataPoint:\n    get:\n      summary: DataPoint-Get-Range\n      description: \"Get a range of DataPoints of a particular DataStream bounded by time coordinates, DataPoint ids, and paging parameters.\\nThis endpoint implements server-side data paging to control the size of each response.\\nClients should check for the presence of a 'NextPageLink' property along with the response Items, indicating that there is more data to be returned for the original request.\\nThe example below shows the first page of a response assuming the page limit is set at 3 DataPoints per page and the request was for 5 DataPoints (top=5 in query string).\\nSee  https://github.com/OptiRTC/OptiRTC-API-examples for examples using this endpoint.\\t\"\n      operationId: datapoint-get-range\n      parameters:\n        - name: dataStreamId\n          in: query\n          description: Id property of the DataStream to get DataPoints of. See the [Datastream endpoint](#operation/datastream) for the DataStreams this API key can access.\n          required: true\n          schema:\n            type: integer\n        - name: historicalId\n          in: query\n          description: Id property of the historical DataPoint, inclusive. This should have a bigger value than the modernId. Specifying 1 less than the id of the most-modern DataPoint you have received as the historicalId will return all DataPoints that have been created since you last requested DataPoints of this DataStream.\n          schema:\n            type: string\n        - name: modernId\n          in: query\n          description: Id property of the modern DataPoint, inclusive. This should have a smaller value than the historicalId.\n          schema:\n            type: string\n        - name: utcHistorical\n          in: query\n          description: Historical time boundary of datapoints to return. ISO-8601.\n          schema:\n            type: string\n        - name: utcModern\n          in: query\n          description: Modern time boundary of datapoints to return. ISO-8601.\n          schema:\n            type: string\n        - name: skiptoken\n          in: query\n          description: Paging parameter. Skip this many of the most-recent values, given other query string parameters.\n          schema:\n            type: string\n        - name: top\n          in: query\n          description: Paging parameter. Return this many of the most-recent values, given other query string parameters.\n          schema:\n            type: integer\n        - name: verbosity\n          in: query\n          description: Scope of data request. Either `identity` (default) or `display`. See [/api/datapointverbosity/](#operation/get-datapoint-verbosities) for additional information.\n          schema:\n            type: string\n        - name: unit\n          in: query\n          description: Abbreviation of the unit in which to return data. May be null, in which case the stored unit of the datastream will be used.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A page of data points matching your query, including a link to follow for the next page if there are more data points in the full response to the client's request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataPointPage'\n              example:\n                Items:\n                  - id: '2518054908899999999'\n                    timeValue: '2020-08-07T14:18:30.0000000+00:00'\n                    value:\n                      - resourceId: 82130\n                        value: ONLINE\n                  - id: '2518054909519999999'\n                    timeValue: '2020-08-07T14:17:28.0000000+00:00'\n                    value:\n                      - resourceId: 82130\n                        value: ONLINE\n                  - id: '2518054910159999999'\n                    timeValue: '2020-08-07T14:16:24.0000000+00:00'\n                    value:\n                      - resourceId: 82130\n                        value: ONLINE\n                  - id: '2518054910789999999'\n                    timeValue: '2020-08-07T14:15:21.0000000+00:00'\n                    value:\n                      - resourceId: 82130\n                        value: ONLINE\n                  - id: '2518054911419999999'\n                    timeValue: '2020-08-07T14:14:18.0000000+00:00'\n                    value:\n                      - resourceId: 82130\n                        value: ONLINE\n                NextPageLink: https://public.optirtc.com/api/datapoint/?key=YOUR-API-KEY-HERE\u0026dataStreamId=123412341234\u0026skiptoken=2518054911419999999\n                Count: 5\n        '400':\n          description: Your request cannot be processed.\n        '401':\n          description: Invalid API key.\n        '403':\n          description: The API key does not authorize access to the requested resources.\n        '429':\n          description: Too many requests have been made for this API key recently.\n          headers:\n            Retry-After:\n              description: Period of time in seconds to wait before retrying the request.\n              required: true\n              schema:\n                type: integer\n          content:\n            text/html:\n              example: Too Many Requests\n  /DataPointVerbosity:\n    get:\n      summary: Get-DataPoint-Verbosities\n      description: Get all DataPointVerbosities currently available in this domain of OptiRTC.\n      operationId: get-datapoint-verbosities\n      responses:\n        '200':\n          description: Lists the options available in for use with the Public API.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataPointVerbosityList'\n              example:\n                - name: display\n                  definition: Returns the minimal payload of the latest-version of the data as a time-indexed set of parameters. Null values are not returned.\n                  isDefault: false\n                  isAvailableInApi: true\n                - name: identity\n                  definition: Default. Returns the minimal payload of Display but also includes the 64-bit integer identity property of each DataPoint, which is useful for making updates to the system. Null values are not returned.\n                  isDefault: true\n                  isAvailableInApi: true\n        '400':\n          description: Your request cannot be processed.\n        '401':\n          description: Invalid API key.\n        '429':\n          description: Too many requests have been made for this API key recently.\n          headers:\n            Retry-After:\n              description: Period of time in seconds to wait before retrying the request.\n              required: true\n              schema:\n                type: integer\n          content:\n            text/html:\n              example: Too Many Requests\ncomponents:\n  schemas:\n    DataPoint:\n      type: object\n      properties:\n        id:\n          type: string\n        timeValue:\n          type: string\n        value:\n          type: array\n          items:\n            required:\n              - resourceId\n              - value\n            type: object\n            properties:\n              resourceId:\n                type: integer\n              value:\n                type: object\n      example:\n        id: '2518054908899999999'\n        timeValue: '2020-01-07T11:22:41Z'\n        value:\n          - resourceId: 4984230\n            value: '42'\n    DataPointPage:\n      type: object\n      properties:\n        Items:\n          type: array\n          items:\n            required:\n              - id\n              - timeValue\n              - value\n            type: object\n            properties:\n              id:\n                type: string\n              timeValue:\n                type: string\n              value:\n                type: array\n                items:\n                  required:\n                    - resourceId\n                    - value\n                  type: object\n                  properties:\n                    resourceId:\n                      type: integer\n                    value:\n                      type: object\n        NextPageLink:\n          type: string\n        Count:\n          type: integer\n      example:\n        Count: 5\n        Items:\n          - id: '2518054908899999999'\n            timeValue: '2020-08-07T14:18:30Z'\n            value:\n              - resourceId: 82130\n                value: ONLINE\n          - id: '2518054909519999999'\n            timeValue: '2020-08-07T14:17:28Z'\n            value:\n              - resourceId: 82130\n                value: ONLINE\n          - id: '2518054910159999999'\n            timeValue: '2020-08-07T14:16:24Z'\n            value:\n              - resourceId: 82130\n                value: ONLINE\n          - id: '2518054910789999999'\n            timeValue: '2020-08-07T14:15:21Z'\n            value:\n              - resourceId: 82130\n                value: ONLINE\n          - id: '2518054911419999999'\n            timeValue: '2020-08-07T14:14:18Z'\n            value:\n              - resourceId: 82130\n                value: ONLINE\n        NextPageLink: https://public.optirtc.com/api/datapoint/?key=YOUR-API-KEY-HERE\u0026dataStreamId=123412341234\u0026skiptoken=2518054911419999999\n    DataPointVerbosityList:\n      type: array\n      items:\n        required:\n          - name\n          - definition\n          - isDefault\n          - isAvailableInApi\n        type: object\n        properties:\n          name:\n            type: string\n          definition:\n            type: string\n          isDefault:\n            type: boolean\n          isAvailableInApi:\n            type: boolean\n      example:\n        - name: display\n          definition: Returns the minimal payload of the latest-version of the data as a time-indexed set of parameters. Null values are not returned.\n          isDefault: false\n          isAvailableInApi: true\n        - name: identity\n          definition: Default. Returns the minimal payload of Display but also includes the 64-bit integer identity property of each DataPoint, which is useful for making updates to the system. Null values are not returned.\n          isDefault: true\n          isAvailableInApi: true\n    DataPointVerbosity:\n      type: object\n      properties:\n        name:\n          type: string\n        definition:\n          type: string\n        isDefault:\n          type: boolean\n        isAvailableInApi:\n          type: boolean\n      example:\n        name: identity\n        definition: Default. Returns the minimal payload of Display but also includes the 64-bit integer identity property of each DataPoint, which is useful for making updates to the system. Null values are not returned.\n        isDefault: true\n        isAvailableInApi: true\n    DataStreamPageResult:\n      type: object\n      properties:\n        Items:\n          type: array\n          items:\n            required:\n              - title\n              - id\n              - resourceId\n              - validFrom\n              - location\n              - unitName\n              - unitAbbreviation\n            type: object\n            properties:\n              title:\n                type: string\n              id:\n                type: integer\n              resourceId:\n                type: integer\n              validFrom:\n                type: string\n              location:\n                type: object\n                properties:\n                  coordinates:\n                    type: array\n                    items:\n                      type: number\n                  bbox:\n                    type: array\n                    items:\n                      type: number\n                  type:\n                    type: string\n              unitName:\n                type: string\n              unitAbbreviation:\n                type: string\n        Count:\n          type: integer\n      example:\n        Items:\n          - title: 'ExampleRd - Nimbus: Elevation'\n            id: 43674\n            resourceId: 80766\n            validFrom: '2017-04-12T21:00:00'\n            location:\n              coordinates:\n                - -75.156246\n                - 38.616841\n              bbox:\n                - -75.156246\n                - 38.616841\n                - -75.156246\n                - 38.616841\n              type: Point\n            unitName: inches\n            unitAbbreviation: in\n          - title: 'ExampleRd - Nimbus: Current Valve Percent Open'\n            id: 43692\n            resourceId: 80787\n            validFrom: '2017-04-12T21:00:00'\n            location:\n              coordinates:\n                - -75.156246\n                - 38.616841\n              bbox:\n                - -75.156246\n                - 38.616841\n                - -75.156246\n                - 38.616841\n              type: Point\n            unitName: percent\n            unitAbbreviation: '%'\n          - title: 'ExampleRd - Nimbus: Expected Incoming Volume'\n            id: 43708\n            resourceId: 80803\n            validFrom: '2017-04-12T21:00:00'\n            location:\n              coordinates:\n                - -75.156246\n                - 38.616841\n              bbox:\n                - -75.156246\n                - 38.616841\n                - -75.156246\n                - 38.616841\n              type: Point\n            unitName: cubic feet\n            unitAbbreviation: ft^3\n          - title: 'ExampleRd - Nimbus: Target Release Rate'\n            id: 43736\n            resourceId: 80837\n            validFrom: '2017-04-12T21:00:00'\n            location:\n              coordinates:\n                - -75.156246\n                - 38.616841\n              bbox:\n                - -75.156246\n                - 38.616841\n                - -75.156246\n                - 38.616841\n              type: Point\n            unitName: cubic feet per second\n            unitAbbreviation: cfs\n          - title: 'ExampleRd - PES: Precipitation Intensity'\n            id: 84249\n            resourceId: 144179\n            validFrom: '2018-09-14T14:11:16'\n            location:\n              coordinates:\n                - -75.156246\n                - 38.616841\n              bbox:\n                - -75.156246\n                - 38.616841\n                - -75.156246\n                - 38.616841\n              type: Point\n            unitName: inches per hour\n            unitAbbreviation: in/hr\n          - title: 'ExampleRd - PES: Precipitation In This Event'\n            id: 84257\n            resourceId: 144191\n            validFrom: '2018-09-14T14:11:16'\n            location:\n              coordinates:\n                - -75.156246\n                - 38.616841\n              bbox:\n                - -75.156246\n                - 38.616841\n                - -75.156246\n                - 38.616841\n              type: Point\n            unitName: inches\n            unitAbbreviation: in\n          - title: 'Dilboy 4200 - Nimbus: Elevation'\n            id: 112484\n            resourceId: 186451\n            validFrom: '2020-06-30T18:08:14'\n            location:\n              coordinates:\n                - -73.153581\n                - 39.231453\n              bbox:\n                - -73.153581\n                - 39.231453\n                - -73.153581\n                - 39.231453\n              type: Point\n            unitName: inches\n            unitAbbreviation: in\n          - title: 'Dilboy 4200 - Nimbus: Current Valve Percent Open'\n            id: 112491\n            resourceId: 186470\n            validFrom: '2020-06-30T18:08:14'\n            location:\n              coordinates:\n                - -73.153581\n                - 39.231453\n              bbox:\n                - -73.153581\n                - 39.231453\n                - -73.153581\n                - 39.231453\n              type: Point\n            unitName: percent\n            unitAbbreviation: '%'\n          - title: 'Dilboy 4200 - Nimbus: Expected Incoming Volume'\n            id: 112517\n            resourceId: 186526\n            validFrom: '2020-06-30T18:08:14'\n            location:\n              coordinates:\n                - -73.153581\n                - 39.231453\n              bbox:\n                - -73.153581\n                - 39.231453\n                - -73.153581\n                - 39.231453\n              type: Point\n            unitName: cubic feet\n            unitAbbreviation: ft^3\n          - title: 'Dilboy 4200 - Nimbus: Target Release Rate'\n            id: 112544\n            resourceId: 186563\n            validFrom: '2020-06-30T18:08:14'\n            location:\n              coordinates:\n                - -73.153581\n                - 39.231453\n              bbox:\n                - -73.153581\n                - 39.231453\n                - -73.153581\n                - 39.231453\n              type: Point\n            unitName: cubic feet per second\n            unitAbbreviation: cfs\n        Count: 10\n  securitySchemes:\n    apiKeyQuery:\n      type: apiKey\n      description: \"You must include a 'key' parameter in the query string of each request to the Opti Public API. Opti uses this key to authenticate and throttle all requests to the Public API to help provide reliable and rapid services to all of its customers.\\r\\n\\r\\nAPI Keys can be acquired and replaced by contacting your [Opti Support](mailto:support@optirtc.com?subject=[Opti%20Developer%20Docs]%20Public%20API%20Throttling) representative. If you are building multiple web sites, ETL workflows, or other applications on top of the Opti Public API, Opti recommends using a different API key for each application to avoid unnecessary throttling from occurring. All throttled requests will return an [HTTP 429 status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429).\"\n      name: key\n      in: query\nsecurity:\n  - apiKeyQuery: []\nx-ms-paths:\n  /DataPoint?id={id}\u0026key={key}\u0026dataStreamId={dataStreamId}:\n    get:\n      summary: DataPoint-Get-Single\n      description: 'Get a DataPoint by its key properties: DataStream.id and DataPoint.id. A DataPoint is a set of resources of interest to a Project''s scope viewed together at a moment in time.'\n      operationId: datapoint-get-single\n      parameters:\n        - name: id\n          in: query\n          description: id identity property of a DataPoint to Get.\n          required: true\n          schema:\n            type: string\n        - name: key\n          in: query\n          description: OptiRTC Public API key authorizing access to this DataPoint resource.\n          required: true\n          schema:\n            type: string\n        - name: dataStreamId\n          in: query\n          description: id property of the DataStream. See the OptiRTC Management API /datastream/ endpoint for discovery options.\n          required: true\n          schema:\n            type: integer\n        - name: verbosity\n          in: query\n          description: (default = 'identity'). Scope of data request. See /api/datapointverbosity/ for all available options on this subdomain of OptiRTC.\n          schema:\n            type: string\n        - name: unit\n          in: query\n          description: Abbreviation of the unit in which to return data. May be null, in which case the stored unit of the datastream will be used.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns the requested DataPoint.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataPoint'\n              example:\n                id: '2518054912049999999'\n                timeValue: '2020-08-07T14:13:15.0000000+00:00'\n                value:\n                  - resourceId: 82106\n                    value: 0\n        '401':\n          description: Invalid API key.\n        '403':\n          description: The API key does not authorize access to the requested resources.\n        '404':\n          description: The requested resource was not found.\n        '429':\n          description: Too many requests have been made for this API key recently.\n          headers:\n            Retry-After:\n              description: Period of time in seconds to wait before retrying the request.\n              required: true\n              schema:\n                type: integer\n          content:\n            text/html:\n              example: Too Many Requests\n  /DataPointVerbosity?name={name}:\n    get:\n      summary: Get-DataPoint-Verbosity-Metadata\n      description: Get the full metadata description of a given DataPointVerbosity by name.\n      operationId: get-datapoint-verbosity-metadata\n      parameters:\n        - name: name\n          in: query\n          description: Identity of the DataPointVerbosity as used in URI requests.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The full description of the requested DataPoint Verbosity.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataPointVerbosity'\n              example:\n                name: identity\n                definition: Default. Returns the minimal payload of Display but also includes the 64-bit integer identity property of each DataPoint, which is useful for making updates to the system. Null values are not returned.\n                isDefault: true\n                isAvailableInApi: true\n        '400':\n          description: Your request cannot be processed.\n        '401':\n          description: Invalid API key.\n        '429':\n          description: Too many requests have been made for this API key recently.\n          headers:\n            Retry-After:\n              description: Period of time in seconds to wait before retrying the request.\n              required: true\n              schema:\n                type: integer\n          content:\n            text/html:\n              example: Too Many Requests\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/optirtc.public/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/optirtc.public/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/DataPoint\": get: responses: 429: contents: unsupported content types: [text/html]",
	"NotImplemented": [
		"unsupported content types"
	]
}