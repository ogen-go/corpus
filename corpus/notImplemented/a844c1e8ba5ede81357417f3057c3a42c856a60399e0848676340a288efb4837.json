{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/factset/enterprise-sdk"
		},
		"file": {
			"name": "ChartGenerationService.v1.json",
			"size": 0,
			"path": "specs/ChartGenerationService.v1.json",
			"byteSize": 16055,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Chart Generation Service\",\n    \"description\": \"This is a service for generating charts in a node environment that were created using web charting and get back images in form of `PNGs` and `JPEGs` as response.\",\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://api-sandbox.factset.com/charting\",\n      \"description\": \"sandbox server (uses dummy data)\"\n    },\n    {\n      \"url\": \"https://api.factset.com/charting\",\n      \"description\": \"production server (uses live data)\"\n    }\n  ],\n  \"paths\": {\n    \"/v1/catalog/categories\": {\n      \"get\": {\n        \"tags\": [\n          \"Chart Templates\"\n        ],\n        \"summary\": \"Get a list of chart categories\",\n        \"operationId\": \"getCategoryList\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CategoryListResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Input\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CategoriesErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/catalog/charts\": {\n      \"get\": {\n        \"tags\": [\n          \"Chart Templates\"\n        ],\n        \"summary\": \"Get a list of chart templates that can be used for getting the image from the service.\",\n        \"description\": \"You can get all the charts present or can just get the information by categories. The response includes the name of the chart, description, tags and any additional input specific to that chart. Use the information from this response to determine what charts you want and get its image from /images endpoint. Additionally you can also get back a auto generated PDF for the categories you requested for.\",\n        \"operationId\": \"getChartList\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"categories\",\n            \"required\": false,\n            \"description\": \"A comma delimited string of catgory names to limit the response to certain categories. If nothing is provided, all charts under every category would be listed out.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"description\": \"return type of the response\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"json\",\n                \"pdf\"\n              ]\n            },\n            \"example\": \"json\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CategorizedChartList\"\n                }\n              },\n              \"application/pdf\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CatalogPDF\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Input\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChartListErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/image\": {\n      \"get\": {\n        \"tags\": [\n          \"Chart Templates\"\n        ],\n        \"summary\": \"Get chart image back in PNG or JPEG formats\",\n        \"operationId\": \"Images\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chart\",\n            \"required\": true,\n            \"description\": \"Path to the saved chart. For any of the default charts, the option should be `categoryName + '/' + chartName`. For charts under the Client or Personal directories, the option should be `directoryName + ':/' + pathTotheChart`.  \",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Equity/RSI\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"ids\",\n            \"required\": false,\n            \"description\": \"List of identifiers to be charted in a comma(,) separated string. Only the first one would be considered as primary and rest would be added as comps. Check the catalog for more information on which charts require a ticker.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"FDS,AAPL\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"sd\",\n            \"required\": false,\n            \"description\": \"Option for overriding the startDate of the chart. For absolute dates provide a string in `YYYYMMDD` format. We can also specify relative date options\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"-1Y\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"ed\",\n            \"required\": false,\n            \"description\": \"Option for overriding the endDate of the chart. For absolute dates provide a string in `YYYYMMDD` format. We can also specify relative date options\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"0\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"width\",\n            \"required\": false,\n            \"description\": \"Option for setting the width of the image\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\",\n              \"default\": 1056,\n              \"example\": 600\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"height\",\n            \"required\": false,\n            \"description\": \"Option for setting the height of the image\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\",\n              \"default\": 816,\n              \"example\": 500\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"freq\",\n            \"required\": false,\n            \"description\": \"A shorthand string for the overall frequency of the chart like `D` (daily), `W` (weekly), `Y` (yearly) and `Q` (Quarterly). This will default to frequency stored in the document.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"D\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"ccy\",\n            \"required\": false,\n            \"description\": \"Currency ISO code for the overall currency of the chart. The API doesn't allow per series currency at this point in time.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"USD\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"split\",\n            \"required\": false,\n            \"description\": \"Option to specify the splits adjustment\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"SPLIT\",\n              \"enum\": [\n                \"SPLIT\",\n                \"UNSPLIT\"\n              ]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"spin\",\n            \"required\": false,\n            \"description\": \"Numeric option to specify the spinOffs adjustment. Possible options include `0` (When we only want spits adjustment), `1` (spinOffs), `4` (spinOffs and cash dividends) and `9` (No adjustments)\",\n            \"schema\": {\n              \"type\": \"number\",\n              \"enum\": [\n                0,\n                1,\n                4,\n                9\n              ],\n              \"example\": 1\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cal\",\n            \"required\": false,\n            \"description\": \"Option for the calendarType of the chart\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"local\",\n              \"enum\": [\n                \"local\",\n                \"fiveDay\",\n                \"sevenDay\"\n              ]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"title\",\n            \"required\": false,\n            \"description\": \"Option to customize the title. If you don't customize the title, then it displays by default the security name.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"fontSize\",\n            \"required\": false,\n            \"description\": \"Option to adjust chart's fontSize\",\n            \"schema\": {\n              \"type\": \"number\",\n              \"example\": 10\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"required\": false,\n            \"description\": \"The type of image to be generated by the service\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"png\",\n              \"enum\": [\n                \"png\",\n                \"jpg\"\n              ]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"gridLines\",\n            \"required\": false,\n            \"description\": \"Option to toggle gridLines on/off on the chart\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": true,\n              \"example\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"img/png\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PNGResponse\"\n                }\n              },\n              \"img/jpeg\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JPEGResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Input\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"PNGResponse\": {\n        \"type\": \"string\",\n        \"example\": \"(no example available)\"\n      },\n      \"JPEGResponse\": {\n        \"type\": \"string\",\n        \"example\": \"(no example available)\"\n      },\n      \"CategoryListResponse\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\",\n          \"description\": \"Chart categories available for user.\"\n        },\n        \"example\": [\n          \"commodities\",\n          \"equity\",\n          \"fx\",\n          \"interest_rates\",\n          \"market_analysis\",\n          \"options\"\n        ]\n      },\n      \"CategoriesErrorResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"type\": \"string\",\n            \"example\": \"No categories found\"\n          }\n        }\n      },\n      \"ChartInput\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"in\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"query\",\n              \"param\"\n            ],\n            \"description\": \"How to apply the additional input. Would be often via query parameter which can be appended to the request with \u0026\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the parameter\",\n            \"example\": \"tz\"\n          },\n          \"required\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether or not the parameter is required to be specified to get the chart image.\",\n            \"example\": false\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"A short description of the input and its use\",\n            \"example\": \"Can be used to specify timezone of the chart\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of value expected for the input\",\n            \"example\": \"string\"\n          },\n          \"example\": {\n            \"type\": \"string\",\n            \"description\": \"An example value for the input\",\n            \"example\": \"America/New_York\"\n          }\n        }\n      },\n      \"ChartList\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the chart\",\n            \"example\": \"RSI\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"A short description about the chart and its contents\",\n            \"example\": \"This chart requires a ticker\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"A list of tags to classify the chart. This is being done so that users can easily group them if required.\",\n            \"example\": [\n              \"price\",\n              \"intraday\"\n            ]\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"description\": \"List of additional inputs for the chart\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChartInput\"\n            }\n          }\n        }\n      },\n      \"CategorizedChartList\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"category\": {\n              \"type\": \"string\",\n              \"example\": \"equity\",\n              \"description\": \"Name of the category. This is required when building the request for the chart image.\"\n            },\n            \"chartList\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/ChartList\"\n              }\n            }\n          }\n        }\n      },\n      \"ChartListErrorResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"Invalid Category Name(s)\",\n              \"Unable to build chart-list\"\n            ]\n          }\n        }\n      },\n      \"CatalogPDF\": {\n        \"type\": \"string\",\n        \"format\": \"binary\"\n      },\n      \"ErrorResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"Missing chart document\",\n              \"Failed to fetch saved chart document\",\n              \"Invalid chart width\",\n              \"Invalid chart height\",\n              \"Invalid showEolLabels option\",\n              \"Invalid show footer option\",\n              \"Invalid display frequency option\",\n              \"Invalid file type\",\n              \"Invalid frequency\",\n              \"Invalid timezone\",\n              \"Invalid ticker\",\n              \"Invalid chart title\"\n            ]\n          }\n        }\n      },\n      \"UnauthorizedResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"User credentials not found\"\n            ]\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"FactSetOAuth2\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"clientCredentials\": {\n            \"tokenUrl\": \"https://auth.factset.com/as/token.oauth2\",\n            \"scopes\": {}\n          }\n        }\n      },\n      \"FactSetApiKey\": {\n        \"type\": \"http\",\n        \"scheme\": \"basic\"\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"FactSetApiKey\": []\n    },\n    {\n      \"FactSetOAuth2\": []\n    }\n  ]\n}",
			"canonicalURL": "/github.com/factset/enterprise-sdk@dcf75a02daedc726c313912a349d2863114bc92c/-/blob/specs/ChartGenerationService.v1.json",
			"externalURLs": [
				{
					"url": "https://github.com/factset/enterprise-sdk/blob/dcf75a02daedc726c313912a349d2863114bc92c/specs/ChartGenerationService.v1.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/catalog/categories\": get: security: security \"FactSetOAuth2\" (index 1): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security",
		"unsupported content types"
	]
}