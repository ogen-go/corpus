{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aces/Loris"
		},
		"file": {
			"name": "schema.yml",
			"size": 0,
			"path": "modules/api/static/schema.yml",
			"byteSize": 62603,
			"content": "openapi: 3.0.1\ninfo:\n  title: LORIS - REST API endpoints\n  description: The LORIS API uses standard HTTP error codes and the body of any response will either be empty or contain only a JSON object for any request.\n  contact:\n    name: LORIS Development Team\n    url: 'https://github.com/aces/loris'\n  license:\n    name: 'GNU Public License, Version 3'\n    url: 'https://opensource.org/licenses/GPL-3.0'\n  version: 0.0.3\nservers:\n  - url: /api/v0.0.3\nsecurity:\n  - ApiKeyAuth: []\npaths:\n  /login:\n    post:\n      tags:\n        - Login\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/body'\n      responses:\n        '200':\n          description: The JWT\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200'\n  /projects:\n    get:\n      tags:\n        - Projects\n      summary: List all projects\n      responses:\n        '200':\n          description: An object with projects as properties\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_1'\n  '/projects/{project}':\n    get:\n      tags:\n        - Projects\n      summary: Get that project descriptor\n      parameters:\n        - name: project\n          in: path\n          description: The project name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: An object containing the project descriptor\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n  '/projects/{project}/candidates':\n    get:\n      tags:\n        - Projects\n      summary: List all candidates of that project\n      parameters:\n        - name: project\n          in: path\n          description: The project name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: An object containing the list of candidates\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectCandidates'\n  '/projects/{project}/images':\n    get:\n      tags:\n        - Projects\n      summary: List all images of that project\n      parameters:\n        - name: project\n          in: path\n          description: The project name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: since\n          in: query\n          description: A date\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: An object containing the list of image descriptors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectImages'\n  '/projects/{project}/instruments':\n    get:\n      tags:\n        - Projects\n      summary: List all instruments of that project\n      parameters:\n        - name: project\n          in: path\n          description: The project name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: An object containing the list of instrument summary descriptors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectInstruments'\n  '/projects/{project}/instruments/{instrument}':\n    get:\n      tags:\n        - Projects\n      summary: Get an instrument descriptor in that project\n      parameters:\n        - name: project\n          in: path\n          description: The project name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: instrument\n          in: path\n          description: The instrument short name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: An JSON representation of the instrument form\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectInstrument'\n  '/projects/{project}/visits':\n    get:\n      tags:\n        - Projects\n      summary: List all existing visit label of that project\n      parameters:\n        - name: project\n          in: path\n          description: The project name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: An object containing the list of instrument summary descriptors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectVisits'\n  '/projects/{project}/recordings':\n    get:\n      tags:\n        - Projects\n      summary: List all existing visit label of that project\n      parameters:\n        - name: project\n          in: path\n          description: The project name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: An object containing the list of instrument summary descriptors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectRecordings'\n  /candidates:\n    get:\n      tags:\n        - Candidates\n      summary: List all candidates in this LORIS instance\n      responses:\n        '200':\n          description: An object containing the list of instrument summary descriptors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Candidates'\n    post:\n      tags:\n        - Candidates\n      summary: Create a candidate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewCandidate'\n      responses:\n        '201':\n          description: The new candidate\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Candidate'\n  '/candidates/{candid}':\n    get:\n      tags:\n        - Candidates\n      summary: Get a JSON object representing that candidate\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The new candidate\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_2'\n  '/candidates/{candid}/{visit}':\n    get:\n      tags:\n        - Visit\n      summary: Get a visit descriptor for that candidate\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The new candidate\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_3'\n    put:\n      tags:\n        - Visit\n      summary: Add a timepoint to that candidate\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VisitMetaFields'\n      responses:\n        '201':\n          description: The visit was created successfully\n          headers:\n            Content-Location:\n              description: The URL of the new visit.\n              style: simple\n              explode: false\n              schema:\n                type: string\n        '204':\n          description: The visit was updated successfully.\n          headers:\n            Content-Location:\n              description: The URL of the new visit.\n              style: simple\n              explode: false\n              schema:\n                type: string\n        '409':\n          description: The visit is already started. It can't be updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_409'\n  '/candidates/{candid}/{visit}/instruments':\n    get:\n      tags:\n        - Instruments\n      summary: List all instruments of that timepoint\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The list of instrument short names\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_4'\n  '/candidates/{candid}/{visit}/instruments/{instrument}':\n    get:\n      tags:\n        - Instruments\n      summary: Get an instrument data values\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: instrument\n          in: path\n          description: The instrument short name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: This instrument data values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Instrument'\n    put:\n      tags:\n        - Instruments\n      summary: Set an instrument data values\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: instrument\n          in: path\n          description: The instrument short name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Instrument'\n      responses:\n        '204':\n          description: This instrument data values have been saved\n    patch:\n      tags:\n        - Instruments\n      summary: Update some data values of an instrument\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: instrument\n          in: path\n          description: The instrument short name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Instrument'\n      responses:\n        '204':\n          description: This instrument data values have been saved\n  '/candidates/{candid}/{visit}/instruments/{instrument}/flags':\n    get:\n      tags:\n        - Instruments\n      summary: Get an instrument flags values\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: instrument\n          in: path\n          description: The instrument short name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: This instrument flags values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstrumentFlags'\n    put:\n      tags:\n        - Instruments\n      summary: Set an instrument flags values\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: instrument\n          in: path\n          description: The instrument short name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InstrumentFlags'\n      responses:\n        '501':\n          description: This instrument flags values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n        - Instruments\n      summary: Update some flags values of an instrument\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: instrument\n          in: path\n          description: The instrument short name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InstrumentFlags'\n      responses:\n        '501':\n          description: This instrument flags values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/candidates/{candid}/{visit}/instruments/{instrument}/dde':\n    get:\n      tags:\n        - Instruments\n      summary: Get an instrument data values\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: instrument\n          in: path\n          description: The instrument short name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: This instrument data values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Instrument'\n    put:\n      tags:\n        - Instruments\n      summary: Set an instrument data values\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: instrument\n          in: path\n          description: The instrument short name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Instrument'\n      responses:\n        '204':\n          description: This instrument data values have been saved\n    patch:\n      tags:\n        - Instruments\n      summary: Update some data values of an instrument\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: instrument\n          in: path\n          description: The instrument short name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Instrument'\n      responses:\n        '204':\n          description: This instrument data values have been saved\n  '/candidates/{candid}/{visit}/instruments/{instrument}/dde/flags':\n    get:\n      tags:\n        - Instruments\n      summary: Get an instrument flags values\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: instrument\n          in: path\n          description: The instrument short name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: This instrument flags values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstrumentFlags'\n    put:\n      tags:\n        - Instruments\n      summary: Set an instrument flags values\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: instrument\n          in: path\n          description: The instrument short name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InstrumentFlags'\n      responses:\n        '501':\n          description: This instrument flags values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n        - Instruments\n      summary: Update some flags values of an instrument\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: instrument\n          in: path\n          description: The instrument short name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InstrumentFlags'\n      responses:\n        '501':\n          description: This instrument flags values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/candidates/{candid}/{visit}/images':\n    get:\n      tags:\n        - Images\n      summary: List all images of a timepoint\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The images list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Images'\n  '/candidates/{candid}/{visit}/images/{filename}':\n    get:\n      tags:\n        - Images\n      summary: Get an images of a timepoint\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The image filename\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The file content\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n  '/candidates/{candid}/{visit}/images/{filename}/qc':\n    get:\n      tags:\n        - Images\n      summary: Get the qc values of an image\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The image filename\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The images qc values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImageQc'\n    put:\n      tags:\n        - Images\n      summary: Set the qc values of an image\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The image filename\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImageQc'\n      responses:\n        '204':\n          description: Qc value updated\n  '/candidates/{candid}/{visit}/images/{filename}/format/brainbrowser':\n    get:\n      tags:\n        - Images\n      summary: Get the brainbrowser format of an image\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The image filename\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The images list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormatBrainbrowser'\n  '/candidates/{candid}/{visit}/images/{filename}/format/raw':\n    get:\n      tags:\n        - Images\n      summary: Get the raw format of an image\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The image filename\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The the output of mnc2raw\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n  '/candidates/{candid}/{visit}/images/{filename}/format/thumbnail':\n    get:\n      tags:\n        - Images\n      summary: Get the thumbnail format of an image\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The image filename\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The thumbnail representation of this image\n          content:\n            image/jpeg:\n              schema:\n                type: string\n                format: binary\n  '/candidates/{candid}/{visit}/images/{filename}/headers':\n    get:\n      tags:\n        - Images\n      summary: Get the summary headers of an image\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The image filename\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The images summary headers\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImageSummaryHeaders'\n  '/candidates/{candid}/{visit}/images/{filename}/headers/full':\n    get:\n      tags:\n        - Images\n      summary: Get all headers of an image\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The image filename\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The images complete headers\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImageHeaders'\n  '/candidates/{candid}/{visit}/images/{filename}/headers/{headername}':\n    get:\n      tags:\n        - Images\n      summary: Get a specific header of an image\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The image filename\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: headername\n          in: path\n          description: The requested header name\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The header value\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_5'\n  '/candidates/{candid}/{visit}/qc/imaging':\n    get:\n      tags:\n        - Visit\n      summary: Get the imaging qc values of a visit\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The images list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImagingQc'\n    put:\n      tags:\n        - Visit\n      parameters:\n        - name: candid\n          in: path\n          description: The candidate identifier\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: The visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImagingQc'\n      responses:\n        '204':\n          description: Qc value updated\n  '/candidates/{candid}/{visit}/dicoms':\n    get:\n      tags:\n        - Dicoms\n      summary: List all dicoms for that timepoint\n      parameters:\n        - name: candid\n          in: path\n          description: ID of the candidate\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: This timepoint visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: An object containing the list of dicoms\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dicoms'\n\n  '/candidates/{candid}/{visit}/dicoms/{tarname}':\n    get:\n      tags:\n        - Dicoms\n      summary: Get the dicom file\n      parameters:\n        - name: candid\n          in: path\n          description: ID of the candidate\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: This timepoint visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: tarname\n          in: path\n          description: The dicom filename\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The dicom file content\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n\n  '/candidates/{candid}/{visit}/recordings':\n    get:  \n      tags:\n        - Electrophysiology\n      summary: Get the recording files for that visit\n      parameters:\n        - name: candid\n          in: path\n          description: ID of the candidate\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: This timepoint visit label\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Recordings which have been acquired for that visit\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Recordings'\n  '/candidates/{candid}/{visit}/recordings/{filename}':\n    get:  \n      tags:\n        - Electrophysiology\n      summary: Get a recording file\n      parameters:\n        - name: candid\n          in: path\n          description: ID of the candidate\n          required: true\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: This timepoint visit label\n          required: true\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The recording filename\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The recording file content\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n  '/candidates/{candid}/{visit}/recordings/{filename}/metadata':\n    get:  \n      tags:\n        - Electrophysiology\n      summary: Get a recording file metadata\n      parameters:\n        - name: candid\n          in: path\n          description: ID of the candidate\n          required: true\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: This timepoint visit label\n          required: true\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The recording filename\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: All metadata about that recording\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RecordingMetadata'\n  '/candidates/{candid}/{visit}/recordings/{filename}/metadata/{headername}':\n    get:  \n      tags:\n        - Electrophysiology\n      summary: Get a specific metadata from a recording file \n      parameters:\n        - name: candid\n          in: path\n          description: ID of the candidate\n          required: true\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: This timepoint visit label\n          required: true\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The recording filename\n          required: true\n          schema:\n            type: string\n        - name: headername\n          in: path\n          description: The metadata header name\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The metadata header value\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RecordingMetadataSpecific'\n  '/candidates/{candid}/{visit}/recordings/{filename}/channels':\n    get:  \n      tags:\n        - Electrophysiology\n      summary: Get a recording file channels\n      parameters:\n        - name: candid\n          in: path\n          description: ID of the candidate\n          required: true\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: This timepoint visit label\n          required: true\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The recording filename\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: All metadata about that recording\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RecordingChannels'\n  '/candidates/{candid}/{visit}/recordings/{filename}/electrodes':\n    get:  \n      tags:\n        - Electrophysiology\n      summary: Get a recording file electrodes\n      parameters:\n        - name: candid\n          in: path\n          description: ID of the candidate\n          required: true\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: This timepoint visit label\n          required: true\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The recording filename\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: All metadata about that recording\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RecordingElectrodes'\n  '/candidates/{candid}/{visit}/recordings/{filename}/events':\n    get:  \n      tags:\n        - Electrophysiology\n      summary: Get a recording file events\n      parameters:\n        - name: candid\n          in: path\n          description: ID of the candidate\n          required: true\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: This timepoint visit label\n          required: true\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The recording filename\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: All metadata about that recording\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RecordingEvents'\n  '/candidates/{candid}/{visit}/recordings/{filename}/bidsfiles/archive':\n    get:  \n      tags:\n        - Electrophysiology\n      summary: Get a recording archive with all associated files \n      parameters:\n        - name: candid\n          in: path\n          description: ID of the candidate\n          required: true\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: This timepoint visit label\n          required: true\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The recording filename\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The recording archive\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n  '/candidates/{candid}/{visit}/recordings/{filename}/bidsfiles/channels':\n    get:  \n      tags:\n        - Electrophysiology\n      summary: Get a recording channels in BIDS format \n      parameters:\n        - name: candid\n          in: path\n          description: ID of the candidate\n          required: true\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: This timepoint visit label\n          required: true\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The recording filename\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The recording channels in BIDS format\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n  '/candidates/{candid}/{visit}/recordings/{filename}/bidsfiles/electrodes':\n    get:  \n      tags:\n        - Electrophysiology\n      summary: Get a recording electrodes in BIDS format \n      parameters:\n        - name: candid\n          in: path\n          description: ID of the candidate\n          required: true\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: This timepoint visit label\n          required: true\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The recording filename\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The recording electrodes in BIDS format\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n  '/candidates/{candid}/{visit}/recordings/{filename}/bidsfiles/events':\n    get:  \n      tags:\n        - Electrophysiology\n      summary: Get a recording events in BIDS format \n      parameters:\n        - name: candid\n          in: path\n          description: ID of the candidate\n          required: true\n          schema:\n            type: string\n        - name: visit\n          in: path\n          description: This timepoint visit label\n          required: true\n          schema:\n            type: string\n        - name: filename\n          in: path\n          description: The recording filename\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The recording events in BIDS format\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\ncomponents:\n  schemas:\n    Project:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/Project_Meta'\n        Visits:\n          type: array\n          items:\n            type: string\n        Instruments:\n          type: array\n          items:\n            type: string\n        Candidates:\n          type: array\n          items:\n            type: string\n    ProjectCandidates:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/Project_Meta'\n        Candidates:\n          type: array\n          items:\n            type: string\n    ProjectImages:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/Project_Meta'\n        Images:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProjectImage'\n    ProjectImage:\n      type: object\n      properties:\n        Candidate:\n          type: string\n        PSCID:\n          type: string\n        Visit:\n          type: string\n        Visit_date:\n          type: string\n        Site:\n          type: string\n        ScanType:\n          type: string\n        QC_status:\n          type: string\n          enum:\n            - Pass\n            - Fail\n            - 'null'\n        Selected:\n          type: string\n          enum:\n            - 'true'\n            - 'false'\n            - 'null'\n        Link:\n          type: string\n        InsertTime:\n          type: string\n    ProjectInstruments:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/Project_Meta'\n        Instruments:\n          type: object\n    ProjectInstrument:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/ProjectInstrument_Meta'\n    LorisFormElement:\n      type: object\n      properties:\n        Type:\n          type: string\n          enum:\n            - advcheckbox\n            - date\n            - file\n            - group\n            - header\n            - hidden\n            - link\n            - page\n            - password\n            - radio\n            - select\n            - static\n            - submit\n            - text\n            - textarea\n            - time\n        Name:\n          type: string\n        Description:\n          type: string\n        Options:\n          $ref: '#/components/schemas/LorisFormElement_Options'\n        RequireResponse:\n          type: boolean\n    ProjectVisits:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/Project_Meta'\n        Visits:\n          type: array\n          items:\n            type: string\n    ProjectRecordings:\n      type: object\n      properties:\n        Recordings:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProjectRecording'\n    ProjectRecording:\n      type: object\n      properties:\n        Candidate:\n          type: string\n        PSCID:\n          type: string\n        Visit:\n          type: string\n        Visit_date:\n          type: string\n        Site:\n          type: string\n        File:\n          type: string\n        Modality:\n          type: string\n        InsertTime:\n          type: string\n        Link:\n          type: string\n    Candidates:\n      type: object\n      properties:\n        Candidates:\n          $ref: '#/components/schemas/Candidate'\n    Candidate:\n      type: object\n      properties:\n        CandID:\n          type: string\n        Project:\n          type: string\n        PSCID:\n          type: string\n        Site:\n          type: string\n        EDC:\n          type: string\n        DoB:\n          type: string\n        Sex:\n          type: string\n          enum:\n            - Female\n            - Male\n    NewCandidate:\n      type: object\n      properties:\n        Candidate:\n          $ref: '#/components/schemas/NewCandidate_Candidate'\n    VisitMeta:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/VisitMetaFields'\n    VisitMetaFields:\n      type: object\n      properties:\n        CandID:\n          type: string\n        Visit:\n          type: string\n        Site:\n          type: string\n        Battery:\n          type: string\n        Project:\n          type: string\n    VisitStages:\n      type: object\n      properties:\n        Stages:\n          type: object\n          anyOf:\n            - $ref: '#/components/schemas/InstrumentScreening'\n            - $ref: '#/components/schemas/InstrumentVisit'\n            - $ref: '#/components/schemas/InstrumentApproval'\n    VisitStage:\n      type: object\n      properties:\n        Date:\n          type: string\n        Status:\n          type: string\n          enum:\n            - Pass\n            - Failure\n            - Withdrawal\n            - In Progress\n    InstrumentScreening:\n      type: object\n      properties:\n        Screening:\n          $ref: '#/components/schemas/VisitStage'\n    InstrumentVisit:\n      type: object\n      properties:\n        Visit:\n          $ref: '#/components/schemas/VisitStage'\n    InstrumentApproval:\n      type: object\n      properties:\n        Approval:\n          $ref: '#/components/schemas/VisitStage'\n    TimepointMeta:\n      type: object\n      properties:\n        CandID:\n          type: string\n        Visit:\n          type: string\n    Instrument:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/InstrumentMeta'\n        $InstrumentShortName:\n          $ref: '#/components/schemas/InstrumentData'\n    InstrumentMeta:\n      type: object\n      properties:\n        Instrument:\n          type: string\n        Visit:\n          type: string\n        Candidate:\n          type: string\n        DDE:\n          type: boolean\n    InstrumentData:\n      type: object\n      additionalProperties:\n        type: string\n    InstrumentFlags:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/InstrumentMeta'\n        Flags:\n          $ref: '#/components/schemas/InstrumentFlags_Flags'\n    Images:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/TimepointMeta'\n        Files:\n          type: array\n          items:\n            $ref: '#/components/schemas/Images_Files'\n    ImagingQc:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/TimepointMeta'\n        SessionQC:\n          type: string\n          enum:\n            - Pass\n            - Fail\n        Pending:\n          type: boolean\n    ImageQc:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/ImageMeta'\n        QC:\n          type: string\n          enum:\n            - Pass\n            - Fail\n        Selected:\n          type: boolean\n        Caveats:\n          type: array\n          items:\n            $ref: '#/components/schemas/ImageCaveat'\n    ImageCaveat:\n      type: object\n      properties:\n        Severity:\n          type: string\n        Header:\n          type: string\n        Value:\n          type: string\n        ValidRange:\n          type: string\n        ValidRegex:\n          type: string\n    ImageMeta:\n      type: object\n      properties:\n        CandID:\n          type: string\n        Visit:\n          type: string\n        File:\n          type: string\n    FormatBrainbrowser:\n      type: object\n      properties:\n        xspace:\n          $ref: '#/components/schemas/BrainbrowserSpace'\n        yspace:\n          $ref: '#/components/schemas/BrainbrowserSpace'\n        zspace:\n          $ref: '#/components/schemas/BrainbrowserSpace'\n        order:\n          type: string\n          enum:\n            - xspace\n            - zspace\n            - yspace\n    BrainbrowserSpace:\n      type: object\n      properties:\n        start:\n          type: string\n        space_length:\n          type: string\n        step:\n          type: string\n    ImageSummaryHeaders:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/ImageMeta'\n        Physical:\n          $ref: '#/components/schemas/ImageSummaryHeaders_Physical'\n        Description:\n          $ref: '#/components/schemas/ImageSummaryHeaders_Description'\n        Dimensions:\n          $ref: '#/components/schemas/ImageSummaryHeaders_Dimensions'\n        ScannerInfo:\n          $ref: '#/components/schemas/ImageSummaryHeaders_ScannerInfo'\n    DimensionHeaders:\n      type: object\n      properties:\n        Lenght:\n          type: string\n        StepSize:\n          type: string\n    ImageHeaders:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/ImageMeta'\n        Headers:\n          type: object\n          additionalProperties:\n            type: string\n    Dicoms:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/Dicoms_Meta'\n        DicomTars:\n          type: array\n          items:\n            $ref: '#/components/schemas/DicomTar'\n    DicomTar:\n      type: object\n      properties:\n        Tarname:\n          type: string\n        SeriesInfo:\n          type: array\n          items:\n            $ref: '#/components/schemas/SeriesInfo'\n    SeriesInfo:\n      type: object\n      properties:\n        SeriesDescription:\n          type: string\n        SeriesNumber:\n          type: string\n        EchoTime:\n          type: string\n        RepetitionTime:\n          type: string\n        InversionTime:\n          type: string\n        SliceThickness:\n          type: string\n        Modality:\n          type: string\n          enum:\n            - MR\n            - PT\n        SeriesUID:\n          type: string\n    Recordings:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/TimepointMeta'\n        Files:\n          type: array\n          items:\n            $ref: '#/components/schemas/Recording'\n    Recording:\n      type: object\n      properties:\n        OutputType:\n          type: string\n        Filename:\n          type: string\n        AcquisitionModality:\n          type: string\n\n    Error:\n      required:\n        - error\n      type: object\n      properties:\n        error:\n          type: string\n          description: The error message\n    body:\n      required:\n        - password\n        - username\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n    inline_response_200:\n      type: object\n      properties:\n        token:\n          type: string\n    inline_response_200_1:\n      type: object\n      properties:\n        Projects:\n          type: object\n    inline_response_200_2:\n      type: object\n      properties:\n        Candidate:\n          $ref: '#/components/schemas/Candidate'\n        Visits:\n          type: array\n          items:\n            type: string\n    inline_response_200_3:\n      allOf:\n        - $ref: '#/components/schemas/VisitMeta'\n        - $ref: '#/components/schemas/VisitStages'\n    inline_response_409:\n      type: object\n      properties:\n        error:\n          type: string\n    inline_response_200_4:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/TimepointMeta'\n        Instruments:\n          type: array\n          items:\n            type: string\n    inline_response_200_5:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/inline_response_200_5_Meta'\n        Value:\n          type: string\n \n    Project_Meta:\n      type: object\n      properties:\n        Project:\n          type: string\n    ProjectInstrument_Meta:\n      type: object\n      properties:\n        InstrumentVersion:\n          type: string\n        InstrumentFormatVersion:\n          type: string\n        ShortName:\n          type: string\n        LongName:\n          type: string\n        IncludeMetaDataFields:\n          type: string\n        Elements:\n          type: array\n          items:\n            $ref: '#/components/schemas/LorisFormElement'\n    LorisFormElement_Options:\n      type: object\n      properties:\n        Values:\n          type: object\n          additionalProperties:\n            type: string\n    NewCandidate_Candidate:\n      type: object\n      properties:\n        Project:\n          type: string\n        PSCID:\n          type: string\n        Site:\n          type: string\n        EDC:\n          type: string\n        DoB:\n          type: string\n        Sex:\n          type: string\n          enum:\n            - Female\n            - Male\n    InstrumentFlags_Flags:\n      type: object\n      properties:\n        Data_entry:\n          type: string\n          enum:\n            - In Progress\n            - Complete\n        Administration:\n          type: string\n          enum:\n            - None\n            - Partial\n            - All\n        Validity:\n          type: string\n          enum:\n            - Questionable\n            - Invalid\n            - Valid\n    Images_Files:\n      type: object\n      properties:\n        OutputType:\n          type: string\n        Filename:\n          type: string\n        AcquisitionType:\n          type: string\n    ImageSummaryHeaders_Physical:\n      type: object\n      properties:\n        TE:\n          type: string\n        TR:\n          type: string\n        TI:\n          type: string\n        SliceThickness:\n          type: string\n    ImageSummaryHeaders_Description:\n      type: object\n      properties:\n        SeriesName:\n          type: string\n        SeriesDescription:\n          type: string\n    ImageSummaryHeaders_Dimensions:\n      type: object\n      properties:\n        XSpace:\n          $ref: '#/components/schemas/DimensionHeaders'\n        YSpace:\n          $ref: '#/components/schemas/DimensionHeaders'\n        ZSpace:\n          $ref: '#/components/schemas/DimensionHeaders'\n        TimeDimension:\n          $ref: '#/components/schemas/DimensionHeaders'\n    ImageSummaryHeaders_ScannerInfo:\n      type: object\n      properties:\n        Manufacturer:\n          type: string\n        Model:\n          type: string\n        SoftwareVersion:\n          type: string\n        SerialNumber:\n          type: string\n        FieldStrength:\n          type: string\n    Dicoms_Meta:\n      type: object\n      properties:\n        CandID:\n          type: string\n        Visit:\n          type: string\n    inline_response_200_5_Meta:\n      type: object\n      properties:\n        CandID:\n          type: string\n        Visit:\n          type: string\n        File:\n          type: string\n        Header:\n          type: string\n    RecordingMeta:\n      type: object\n      properties:\n        CandID:\n          type: string\n        Visit:\n          type: string\n        File:\n          type: string\n    RecordingMetadata:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/RecordingMeta'\n        Data:\n          type: object\n          additionalProperties:\n            type: string\n    RecordingMetadataSpecific:\n      type: object\n      properties:\n        Meta:\n          type: object\n          properties:\n            CandID:\n              type: string\n            Visit:\n              type: string\n            Filename:\n              type: string\n            Header:\n              type: string\n        Value:\n          type: string\n    RecordingChannels:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/RecordingMeta'\n        Channels:\n          $ref: '#/components/schemas/RecordingChannel'\n\n    RecordingChannel:\n      type: object\n      properties:\n        ChannelName:\n          type: string\n        ChannelDescription:\n          type: string\n        ChannelType:\n          type: string\n        ChannelTypeDescription:\n          type: string\n        ChannelStatus:\n          type: string\n        StatusDescription:\n          type: string\n        SamplingFrequency:\n          type: number\n        LowCutoff:\n          type: string\n        HighCutoff:\n          type: string\n        ManualFlag:\n          type: string\n        Notch:\n          type: string\n        Reference:\n          type: string\n        Unit:\n          type: string\n        ChannelFilePath:\n          type: string\n\n    RecordingElectrodes:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/RecordingMeta'\n        Electrodes:\n          type: array\n          items:\n            $ref: '#/components/schemas/RecordingElectrode'\n            \n    RecordingElectrode:\n      type: object\n      properties:\n        ElectrodeName:\n          type: string\n        ElectrodeType:\n          type: string\n        ElectrodeMaterial:\n          type: string\n        X:\n          type: string\n        Y:\n          type: string\n        Z:\n          type: string\n        Impedance:\n          type: string\n        ElectrodeFilePath:\n          type: string\n          \n    RecordingEvents:\n      type: object\n      properties:\n        Meta:\n          $ref: '#/components/schemas/RecordingMeta'\n        TaskEvents:\n          type: array\n          items:\n            $ref: '#/components/schemas/RecordingTaskEvent'\n            \n    RecordingTaskEvent:\n      type: object\n      properties:\n        Onset:\n          type: string\n        Duration:\n          type: number\n        EventCode:\n          type: string\n        EventSample:\n          type: string\n        EventType:\n          type: string\n        TrialType:\n          type: string\n        ResponseTime:\n          type: string\n        EventFilePath:\n          type: string\n        \n  responses:\n    InternalServerError:\n      description: 500 Internal server error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      name: Authorization\n      in: header\n\n",
			"canonicalURL": "/github.com/aces/Loris@a2852be695890ba9932372f03feb56010d5d20b2/-/blob/modules/api/static/schema.yml",
			"externalURLs": [
				{
					"url": "https://github.com/aces/Loris/blob/a2852be695890ba9932372f03feb56010d5d20b2/modules/api/static/schema.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/candidates/{candid}/{visit}\": get: responses: 200: contents: application/json: generate schema: allOf: field Stages: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}