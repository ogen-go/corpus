{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "projects.yaml",
			"size": 0,
			"path": "providers/src/github/v0.2.0/services/projects.yaml",
			"byteSize": 72093,
			"content": "paths:\n  /projects/columns/cards/{card_id}:\n    get:\n      summary: Get a project card\n      description: ''\n      tags:\n        - projects\n      operationId: projects/get-card\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#get-a-project-card\n      parameters:\n        - $ref: '#/components/parameters/card-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/project-card'\n              examples:\n                default:\n                  $ref: '#/components/examples/project-card'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: cards\n    patch:\n      summary: Update an existing project card\n      description: ''\n      tags:\n        - projects\n      operationId: projects/update-card\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#update-a-project-card\n      parameters:\n        - $ref: '#/components/parameters/card-id'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                note:\n                  description: The project card's note\n                  example: Update all gems\n                  type: string\n                  nullable: true\n                archived:\n                  description: Whether or not the card is archived\n                  example: false\n                  type: boolean\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/project-card'\n              examples:\n                default:\n                  $ref: '#/components/examples/project-card'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed_simple'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: cards\n    delete:\n      summary: Delete a project card\n      description: ''\n      tags:\n        - projects\n      operationId: projects/delete-card\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#delete-a-project-card\n      parameters:\n        - $ref: '#/components/parameters/card-id'\n      responses:\n        '204':\n          description: Response\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                  documentation_url:\n                    type: string\n                  errors:\n                    type: array\n                    items:\n                      type: string\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: cards\n  /projects/columns/cards/{card_id}/moves:\n    post:\n      summary: Move a project card\n      description: ''\n      tags:\n        - projects\n      operationId: projects/move-card\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#move-a-project-card\n      parameters:\n        - $ref: '#/components/parameters/card-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                position:\n                  description: 'The position of the card in a column. Can be one of: `top`, `bottom`, or `after:\u003ccard_id\u003e` to place after the specified card.'\n                  example: bottom\n                  type: string\n                  pattern: ^(?:top|bottom|after:\\d+)$\n                column_id:\n                  description: The unique identifier of the column the card should be moved to\n                  example: 42\n                  type: integer\n              required:\n                - position\n              type: object\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n                additionalProperties: false\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                  documentation_url:\n                    type: string\n                  errors:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        code:\n                          type: string\n                        message:\n                          type: string\n                        resource:\n                          type: string\n                        field:\n                          type: string\n        '422':\n          $ref: '#/components/responses/validation_failed'\n        '503':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: string\n                  message:\n                    type: string\n                  documentation_url:\n                    type: string\n                  errors:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        code:\n                          type: string\n                        message:\n                          type: string\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: cards\n  /projects/columns/{column_id}:\n    get:\n      summary: Get a project column\n      description: ''\n      tags:\n        - projects\n      operationId: projects/get-column\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#get-a-project-column\n      parameters:\n        - $ref: '#/components/parameters/column-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/project-column'\n              examples:\n                default:\n                  $ref: '#/components/examples/project-column'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: columns\n    patch:\n      summary: Update an existing project column\n      description: ''\n      tags:\n        - projects\n      operationId: projects/update-column\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#update-a-project-column\n      parameters:\n        - $ref: '#/components/parameters/column-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: Name of the project column\n                  example: Remaining tasks\n                  type: string\n              required:\n                - name\n              type: object\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/project-column'\n              examples:\n                default:\n                  $ref: '#/components/examples/project-column'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: columns\n    delete:\n      summary: Delete a project column\n      description: ''\n      tags:\n        - projects\n      operationId: projects/delete-column\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#delete-a-project-column\n      parameters:\n        - $ref: '#/components/parameters/column-id'\n      responses:\n        '204':\n          description: Response\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: columns\n  /projects/columns/{column_id}/cards:\n    get:\n      summary: List project cards\n      description: ''\n      tags:\n        - projects\n      operationId: projects/list-cards\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#list-project-cards\n      parameters:\n        - $ref: '#/components/parameters/column-id'\n        - name: archived_state\n          description: Filters the project cards that are returned by the card's state. Can be one of `all`,`archived`, or `not_archived`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - all\n              - archived\n              - not_archived\n            default: not_archived\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/project-card'\n              examples:\n                default:\n                  $ref: '#/components/examples/project-card-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: cards\n    post:\n      summary: Create a project card\n      description: ''\n      tags:\n        - projects\n      operationId: projects/create-card\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#create-a-project-card\n      parameters:\n        - $ref: '#/components/parameters/column-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    note:\n                      description: The project card's note\n                      example: Update all gems\n                      type: string\n                      nullable: true\n                  required:\n                    - note\n                - type: object\n                  properties:\n                    content_id:\n                      description: The unique identifier of the content associated with the card\n                      example: 42\n                      type: integer\n                    content_type:\n                      description: The piece of content associated with the card\n                      example: PullRequest\n                      type: string\n                  required:\n                    - content_id\n                    - content_type\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/project-card'\n              examples:\n                default:\n                  $ref: '#/components/examples/project-card'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '422':\n          description: Validation failed\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/validation-error'\n                  - $ref: '#/components/schemas/validation-error-simple'\n        '503':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: string\n                  message:\n                    type: string\n                  documentation_url:\n                    type: string\n                  errors:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        code:\n                          type: string\n                        message:\n                          type: string\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: cards\n  /projects/columns/{column_id}/moves:\n    post:\n      summary: Move a project column\n      description: ''\n      tags:\n        - projects\n      operationId: projects/move-column\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#move-a-project-column\n      parameters:\n        - $ref: '#/components/parameters/column-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                position:\n                  description: 'The position of the column in a project. Can be one of: `first`, `last`, or `after:\u003ccolumn_id\u003e` to place after the specified column.'\n                  example: last\n                  type: string\n                  pattern: ^(?:first|last|after:\\d+)$\n              required:\n                - position\n              type: object\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n                additionalProperties: false\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '422':\n          $ref: '#/components/responses/validation_failed_simple'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: columns\n  /projects/{project_id}:\n    get:\n      summary: Get a project\n      description: Gets a project by its `id`. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n      tags:\n        - projects\n      operationId: projects/get\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#get-a-project\n      parameters:\n        - $ref: '#/components/parameters/project-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/project'\n              examples:\n                default:\n                  $ref: '#/components/examples/project-3'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: null\n    patch:\n      summary: Update a project\n      description: Updates a project board's information. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n      operationId: projects/update\n      tags:\n        - projects\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#update-a-project\n      parameters:\n        - $ref: '#/components/parameters/project-id'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: Name of the project\n                  example: Week One Sprint\n                  type: string\n                body:\n                  description: Body of the project\n                  example: This project represents the sprint of the first week in January\n                  type: string\n                  nullable: true\n                state:\n                  description: State of the project; either 'open' or 'closed'\n                  example: open\n                  type: string\n                organization_permission:\n                  description: The baseline permission that all organization members have on this project\n                  type: string\n                  enum:\n                    - read\n                    - write\n                    - admin\n                    - none\n                private:\n                  description: Whether or not this project can be seen by everyone.\n                  type: boolean\n              type: object\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/project'\n              examples:\n                default:\n                  $ref: '#/components/examples/project-3'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                  documentation_url:\n                    type: string\n                  errors:\n                    type: array\n                    items:\n                      type: string\n        '404':\n          description: Not Found if the authenticated user does not have access to the project\n        '410':\n          $ref: '#/components/responses/gone'\n        '422':\n          $ref: '#/components/responses/validation_failed_simple'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: null\n    delete:\n      summary: Delete a project\n      description: Deletes a project board. Returns a `404 Not Found` status if projects are disabled.\n      operationId: projects/delete\n      tags:\n        - projects\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#delete-a-project\n      parameters:\n        - $ref: '#/components/parameters/project-id'\n      responses:\n        '204':\n          description: Delete Success\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                  documentation_url:\n                    type: string\n                  errors:\n                    type: array\n                    items:\n                      type: string\n        '404':\n          $ref: '#/components/responses/not_found'\n        '410':\n          $ref: '#/components/responses/gone'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: null\n  /projects/{project_id}/collaborators:\n    get:\n      summary: List project collaborators\n      description: Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners. You must be an organization owner or a project `admin` to list collaborators.\n      tags:\n        - projects\n      operationId: projects/list-collaborators\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#list-project-collaborators\n      parameters:\n        - $ref: '#/components/parameters/project-id'\n        - name: affiliation\n          description: |-\n            Filters the collaborators by their affiliation. Can be one of:  \n            \\* `outside`: Outside collaborators of a project that are not a member of the project's organization.  \n            \\* `direct`: Collaborators with permissions to a project, regardless of organization membership status.  \n            \\* `all`: All collaborators the authenticated user can see.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - outside\n              - direct\n              - all\n            default: all\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: collaborators\n  /projects/{project_id}/collaborators/{username}:\n    put:\n      summary: Add project collaborator\n      description: Adds a collaborator to an organization project and sets their permission level. You must be an organization owner or a project `admin` to add a collaborator.\n      tags:\n        - projects\n      operationId: projects/add-collaborator\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#add-project-collaborator\n      parameters:\n        - $ref: '#/components/parameters/project-id'\n        - $ref: '#/components/parameters/username'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                permission:\n                  description: The permission to grant the collaborator.\n                  enum:\n                    - read\n                    - write\n                    - admin\n                  default: write\n                  example: write\n                  type: string\n              nullable: true\n      responses:\n        '204':\n          description: Response\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: collaborators\n    delete:\n      summary: Remove user as a collaborator\n      description: Removes a collaborator from an organization project. You must be an organization owner or a project `admin` to remove a collaborator.\n      tags:\n        - projects\n      operationId: projects/remove-collaborator\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#remove-project-collaborator\n      parameters:\n        - $ref: '#/components/parameters/project-id'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: collaborators\n  /projects/{project_id}/collaborators/{username}/permission:\n    get:\n      summary: Get project permission for a user\n      description: 'Returns the collaborator''s permission level for an organization project. Possible values for the `permission` key: `admin`, `write`, `read`, `none`. You must be an organization owner or a project `admin` to review a user''s permission level.'\n      tags:\n        - projects\n      operationId: projects/get-permission-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#get-project-permission-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/project-id'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/project-collaborator-permission'\n              examples:\n                default:\n                  $ref: '#/components/examples/project-collaborator-permission'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: collaborators\n  /projects/{project_id}/columns:\n    get:\n      summary: List project columns\n      description: ''\n      tags:\n        - projects\n      operationId: projects/list-columns\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#list-project-columns\n      parameters:\n        - $ref: '#/components/parameters/project-id'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/project-column'\n              examples:\n                default:\n                  $ref: '#/components/examples/project-column-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: columns\n    post:\n      summary: Create a project column\n      description: ''\n      tags:\n        - projects\n      operationId: projects/create-column\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#create-a-project-column\n      parameters:\n        - $ref: '#/components/parameters/project-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: Name of the project column\n                  example: Remaining tasks\n                  type: string\n              required:\n                - name\n              type: object\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/project-column'\n              example:\n                url: https://api.github.com/projects/columns/367\n                project_url: https://api.github.com/projects/120\n                cards_url: https://api.github.com/projects/columns/367/cards\n                id: 367\n                node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=\n                name: To Do\n                created_at: '2016-09-05T14:18:44Z'\n                updated_at: '2016-09-05T14:22:28Z'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '422':\n          $ref: '#/components/responses/validation_failed_simple'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: columns\n  /user/projects:\n    post:\n      summary: Create a user project\n      description: ''\n      tags:\n        - projects\n      operationId: projects/create-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#create-a-user-project\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: Name of the project\n                  example: Week One Sprint\n                  type: string\n                body:\n                  description: Body of the project\n                  example: This project represents the sprint of the first week in January\n                  type: string\n                  nullable: true\n              required:\n                - name\n              type: object\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/project'\n              examples:\n                default:\n                  $ref: '#/components/examples/project'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '415':\n          $ref: '#/components/responses/preview_header_missing'\n        '422':\n          $ref: '#/components/responses/validation_failed_simple'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: null\n  /users/{username}/projects:\n    get:\n      summary: List user projects\n      description: ''\n      tags:\n        - projects\n      operationId: projects/list-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#list-user-projects\n      parameters:\n        - $ref: '#/components/parameters/username'\n        - name: state\n          description: Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - open\n              - closed\n              - all\n            default: open\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/project'\n              examples:\n                default:\n                  $ref: '#/components/examples/project-items-3'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: projects\n        subcategory: null\ncomponents:\n  schemas:\n    project-card:\n      title: Project Card\n      description: Project cards represent a scope of work.\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/projects/columns/cards/1478\n        id:\n          description: The project card's ID\n          example: 42\n          type: integer\n        node_id:\n          type: string\n          example: MDExOlByb2plY3RDYXJkMTQ3OA==\n        note:\n          type: string\n          example: Add payload for delete Project column\n          nullable: true\n        creator:\n          $ref: '#/components/schemas/nullable-simple-user'\n        created_at:\n          type: string\n          format: date-time\n          example: '2016-09-05T14:21:06Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2016-09-05T14:20:22Z'\n        archived:\n          description: Whether or not the card is archived\n          example: false\n          type: boolean\n        column_name:\n          type: string\n        project_id:\n          type: string\n        column_url:\n          type: string\n          format: uri\n          example: https://api.github.com/projects/columns/367\n        content_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/api-playground/projects-test/issues/3\n        project_url:\n          type: string\n          format: uri\n          example: https://api.github.com/projects/120\n      required:\n        - id\n        - node_id\n        - note\n        - url\n        - column_url\n        - project_url\n        - creator\n        - created_at\n        - updated_at\n    nullable-simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n      nullable: true\n    basic-error:\n      title: Basic Error\n      description: Basic Error\n      type: object\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        url:\n          type: string\n        status:\n          type: string\n    validation-error-simple:\n      title: Validation Error Simple\n      description: Validation Error Simple\n      type: object\n      required:\n        - message\n        - documentation_url\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        errors:\n          type: array\n          items:\n            type: string\n    validation-error:\n      title: Validation Error\n      description: Validation Error\n      type: object\n      required:\n        - message\n        - documentation_url\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        errors:\n          type: array\n          items:\n            type: object\n            required:\n              - code\n            properties:\n              resource:\n                type: string\n              field:\n                type: string\n              message:\n                type: string\n              code:\n                type: string\n              index:\n                type: integer\n              value:\n                oneOf:\n                  - type: string\n                    nullable: true\n                  - type: integer\n                    nullable: true\n                  - type: array\n                    nullable: true\n                    items:\n                      type: string\n    project-column:\n      title: Project Column\n      description: Project columns contain cards of work.\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/projects/columns/367\n        project_url:\n          type: string\n          format: uri\n          example: https://api.github.com/projects/120\n        cards_url:\n          type: string\n          format: uri\n          example: https://api.github.com/projects/columns/367/cards\n        id:\n          description: The unique identifier of the project column\n          example: 42\n          type: integer\n        node_id:\n          type: string\n          example: MDEzOlByb2plY3RDb2x1bW4zNjc=\n        name:\n          description: Name of the project column\n          example: Remaining tasks\n          type: string\n        created_at:\n          type: string\n          format: date-time\n          example: '2016-09-05T14:18:44Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2016-09-05T14:22:28Z'\n      required:\n        - id\n        - node_id\n        - url\n        - project_url\n        - cards_url\n        - name\n        - created_at\n        - updated_at\n    project:\n      title: Project\n      description: Projects are a way to organize columns and cards of work.\n      type: object\n      properties:\n        owner_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/api-playground/projects-test\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/projects/1002604\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/api-playground/projects-test/projects/12\n        columns_url:\n          type: string\n          format: uri\n          example: https://api.github.com/projects/1002604/columns\n        id:\n          type: integer\n          example: 1002604\n        node_id:\n          type: string\n          example: MDc6UHJvamVjdDEwMDI2MDQ=\n        name:\n          description: Name of the project\n          example: Week One Sprint\n          type: string\n        body:\n          description: Body of the project\n          example: This project represents the sprint of the first week in January\n          type: string\n          nullable: true\n        number:\n          type: integer\n          example: 1\n        state:\n          description: State of the project; either 'open' or 'closed'\n          example: open\n          type: string\n        creator:\n          $ref: '#/components/schemas/nullable-simple-user'\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-04-10T20:09:31Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2014-03-03T18:58:10Z'\n        organization_permission:\n          description: The baseline permission that all organization members have on this project. Only present if owner is an organization.\n          type: string\n          enum:\n            - read\n            - write\n            - admin\n            - none\n        private:\n          description: Whether or not this project can be seen by everyone. Only present if owner is an organization.\n          type: boolean\n      required:\n        - id\n        - node_id\n        - number\n        - name\n        - body\n        - state\n        - url\n        - html_url\n        - owner_url\n        - creator\n        - columns_url\n        - created_at\n        - updated_at\n    simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n    project-collaborator-permission:\n      title: Project Collaborator Permission\n      description: Project Collaborator Permission\n      type: object\n      properties:\n        permission:\n          type: string\n        user:\n          $ref: '#/components/schemas/nullable-simple-user'\n      required:\n        - permission\n        - user\n  parameters:\n    card-id:\n      name: card_id\n      description: card_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    column-id:\n      name: column_id\n      description: column_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    per-page:\n      name: per_page\n      description: Results per page (max 100)\n      in: query\n      schema:\n        type: integer\n        default: 30\n    page:\n      name: page\n      description: Page number of the results to fetch.\n      in: query\n      schema:\n        type: integer\n        default: 1\n    project-id:\n      name: project_id\n      in: path\n      required: true\n      schema:\n        type: integer\n    username:\n      name: username\n      in: path\n      required: true\n      schema:\n        type: string\n  responses:\n    not_modified:\n      description: Not modified\n    requires_authentication:\n      description: Requires authentication\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    not_found:\n      description: Resource not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    validation_failed_simple:\n      description: Validation failed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/validation-error-simple'\n    validation_failed:\n      description: Validation failed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/validation-error'\n    gone:\n      description: Gone\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    preview_header_missing:\n      description: Preview header missing\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - message\n              - documentation_url\n            properties:\n              message:\n                type: string\n              documentation_url:\n                type: string\n  securitySchemes: {}\n  callbacks: {}\n  examples:\n    project-card:\n      value:\n        url: https://api.github.com/projects/columns/cards/1478\n        id: 1478\n        node_id: MDExOlByb2plY3RDYXJkMTQ3OA==\n        note: Add payload for delete Project column\n        creator:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        created_at: '2016-09-05T14:21:06Z'\n        updated_at: '2016-09-05T14:20:22Z'\n        archived: false\n        column_url: https://api.github.com/projects/columns/367\n        content_url: https://api.github.com/repos/api-playground/projects-test/issues/3\n        project_url: https://api.github.com/projects/120\n    project-column:\n      value:\n        url: https://api.github.com/projects/columns/367\n        project_url: https://api.github.com/projects/120\n        cards_url: https://api.github.com/projects/columns/367/cards\n        id: 367\n        node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=\n        name: To Do\n        created_at: '2016-09-05T14:18:44Z'\n        updated_at: '2016-09-05T14:22:28Z'\n    project-card-items:\n      value:\n        - url: https://api.github.com/projects/columns/cards/1478\n          id: 1478\n          node_id: MDExOlByb2plY3RDYXJkMTQ3OA==\n          note: Add payload for delete Project column\n          creator:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          created_at: '2016-09-05T14:21:06Z'\n          updated_at: '2016-09-05T14:20:22Z'\n          archived: false\n          column_url: https://api.github.com/projects/columns/367\n          content_url: https://api.github.com/repos/api-playground/projects-test/issues/3\n          project_url: https://api.github.com/projects/120\n    project-3:\n      value:\n        owner_url: https://api.github.com/repos/api-playground/projects-test\n        url: https://api.github.com/projects/1002604\n        html_url: https://github.com/api-playground/projects-test/projects/1\n        columns_url: https://api.github.com/projects/1002604/columns\n        id: 1002604\n        node_id: MDc6UHJvamVjdDEwMDI2MDQ=\n        name: Projects Documentation\n        body: Developer documentation project for the developer site.\n        number: 1\n        state: open\n        creator:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        created_at: '2011-04-10T20:09:31Z'\n        updated_at: '2014-03-03T18:58:10Z'\n    simple-user-items:\n      value:\n        - login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n    project-collaborator-permission:\n      value:\n        permission: admin\n        user:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n    project-column-items:\n      value:\n        - url: https://api.github.com/projects/columns/367\n          project_url: https://api.github.com/projects/120\n          cards_url: https://api.github.com/projects/columns/367/cards\n          id: 367\n          node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=\n          name: To Do\n          created_at: '2016-09-05T14:18:44Z'\n          updated_at: '2016-09-05T14:22:28Z'\n    project:\n      value:\n        owner_url: https://api.github.com/users/octocat\n        url: https://api.github.com/projects/1002603\n        html_url: https://github.com/users/octocat/projects/1\n        columns_url: https://api.github.com/projects/1002603/columns\n        id: 1002603\n        node_id: MDc6UHJvamVjdDEwMDI2MDM=\n        name: My Projects\n        body: A board to manage my personal projects.\n        number: 1\n        state: open\n        creator:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        created_at: '2011-04-10T20:09:31Z'\n        updated_at: '2014-03-03T18:58:10Z'\n    project-items-3:\n      value:\n        - owner_url: https://api.github.com/users/octocat\n          url: https://api.github.com/projects/1002603\n          html_url: https://github.com/users/octocat/projects/1\n          columns_url: https://api.github.com/projects/1002603/columns\n          id: 1002603\n          node_id: MDc6UHJvamVjdDEwMDI2MDM=\n          name: My Projects\n          body: A board to manage my personal projects.\n          number: 1\n          state: open\n          creator:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          created_at: '2011-04-10T20:09:31Z'\n          updated_at: '2014-03-03T18:58:10Z'\n  requestBodies: {}\n  headers:\n    link:\n      example: \u003chttps://api.github.com/resource?page=2\u003e; rel=\"next\", \u003chttps://api.github.com/resource?page=5\u003e; rel=\"last\"\n      schema:\n        type: string\n  links: {}\n  x-stackQL-resources:\n    columns_cards:\n      id: github.projects.columns_cards\n      name: columns_cards\n      title: Columns_cards\n      methods:\n        get_card:\n          operation:\n            $ref: '#/paths/~1projects~1columns~1cards~1{card_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_card:\n          operation:\n            $ref: '#/paths/~1projects~1columns~1cards~1{card_id}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_card:\n          operation:\n            $ref: '#/paths/~1projects~1columns~1cards~1{card_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_cards:\n          operation:\n            $ref: '#/paths/~1projects~1columns~1{column_id}~1cards/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_card:\n          operation:\n            $ref: '#/paths/~1projects~1columns~1{column_id}~1cards/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/columns_cards/methods/get_card'\n          - $ref: '#/components/x-stackQL-resources/columns_cards/methods/list_cards'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/columns_cards/methods/create_card'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/columns_cards/methods/delete_card'\n    columns_cards_moves:\n      id: github.projects.columns_cards_moves\n      name: columns_cards_moves\n      title: Columns_cards_moves\n      methods:\n        move_card:\n          operation:\n            $ref: '#/paths/~1projects~1columns~1cards~1{card_id}~1moves/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n      sqlVerbs:\n        select: []\n        insert: []\n        update: []\n        delete: []\n    columns:\n      id: github.projects.columns\n      name: columns\n      title: Columns\n      methods:\n        get_column:\n          operation:\n            $ref: '#/paths/~1projects~1columns~1{column_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_column:\n          operation:\n            $ref: '#/paths/~1projects~1columns~1{column_id}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_column:\n          operation:\n            $ref: '#/paths/~1projects~1columns~1{column_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_columns:\n          operation:\n            $ref: '#/paths/~1projects~1{project_id}~1columns/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_column:\n          operation:\n            $ref: '#/paths/~1projects~1{project_id}~1columns/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/columns/methods/get_column'\n          - $ref: '#/components/x-stackQL-resources/columns/methods/list_columns'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/columns/methods/create_column'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/columns/methods/delete_column'\n    columns_moves:\n      id: github.projects.columns_moves\n      name: columns_moves\n      title: Columns_moves\n      methods:\n        move_column:\n          operation:\n            $ref: '#/paths/~1projects~1columns~1{column_id}~1moves/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n      sqlVerbs:\n        select: []\n        insert: []\n        update: []\n        delete: []\n    projects:\n      id: github.projects.projects\n      name: projects\n      title: Projects\n      methods:\n        get:\n          operation:\n            $ref: '#/paths/~1projects~1{project_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update:\n          operation:\n            $ref: '#/paths/~1projects~1{project_id}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete:\n          operation:\n            $ref: '#/paths/~1projects~1{project_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/projects/methods/get'\n        insert: []\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/projects/methods/delete'\n    collaborators:\n      id: github.projects.collaborators\n      name: collaborators\n      title: Collaborators\n      methods:\n        list_collaborators:\n          operation:\n            $ref: '#/paths/~1projects~1{project_id}~1collaborators/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        add_collaborator:\n          operation:\n            $ref: '#/paths/~1projects~1{project_id}~1collaborators~1{username}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        remove_collaborator:\n          operation:\n            $ref: '#/paths/~1projects~1{project_id}~1collaborators~1{username}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/collaborators/methods/list_collaborators'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/collaborators/methods/add_collaborator'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/collaborators/methods/remove_collaborator'\n    collaborators_permission:\n      id: github.projects.collaborators_permission\n      name: collaborators_permission\n      title: Collaborators_permission\n      methods:\n        get_permission_for_user:\n          operation:\n            $ref: '#/paths/~1projects~1{project_id}~1collaborators~1{username}~1permission/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/collaborators_permission/methods/get_permission_for_user'\n        insert: []\n        update: []\n        delete: []\n    user:\n      id: github.projects.user\n      name: user\n      title: User\n      methods:\n        create_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1projects/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n      sqlVerbs:\n        select: []\n        insert:\n          - $ref: '#/components/x-stackQL-resources/user/methods/create_for_authenticated_user'\n        update: []\n        delete: []\n    users:\n      id: github.projects.users\n      name: users\n      title: Users\n      methods:\n        list_for_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1projects/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/users/methods/list_for_user'\n        insert: []\n        update: []\n        delete: []\nopenapi: 3.0.3\nservers:\n  - url: https://api.github.com\ntags:\n  - name: actions\n    description: Endpoints to manage GitHub Actions using the REST API.\n  - name: activity\n    description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  - name: apps\n    description: Information for integrations and installations.\n  - name: billing\n    description: Monitor charges and usage from Actions and Packages.\n  - name: checks\n    description: Rich interactions with checks run by your integrations.\n  - name: code-scanning\n    description: Retrieve code scanning alerts from a repository.\n  - name: codes-of-conduct\n    description: Insight into codes of conduct for your communities.\n  - name: codespaces\n    description: Endpoints to manage Codespaces using the REST API.\n  - name: emojis\n    description: List emojis available to use on GitHub.\n  - name: enterprise-admin\n    description: Administer a GitHub enterprise.\n  - name: dependabot\n    description: Endpoints to manage Dependabot.\n  - name: gists\n    description: View, modify your gists.\n  - name: git\n    description: Raw Git functionality.\n  - name: gitignore\n    description: View gitignore templates\n  - name: interactions\n    description: Owner or admin management of users interactions.\n  - name: issues\n    description: Interact with GitHub Issues.\n  - name: licenses\n    description: View various OSS licenses.\n  - name: markdown\n    description: Render GitHub flavored markdown\n  - name: meta\n    description: Endpoints that give information about the API.\n  - name: migrations\n    description: Move projects to or from GitHub.\n  - name: oauth-authorizations\n    description: Manage access of OAuth applications\n  - name: orgs\n    description: Interact with GitHub Orgs.\n  - name: packages\n    description: Manage packages for authenticated users and organizations.\n  - name: projects\n    description: Interact with GitHub Projects.\n  - name: pulls\n    description: Interact with GitHub Pull Requests.\n  - name: rate-limit\n    description: Check your current rate limit status\n  - name: reactions\n    description: Interact with reactions to various GitHub entities.\n  - name: repos\n    description: Interact with GitHub Repos.\n  - name: scim\n    description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  - name: search\n    description: Look for stuff on GitHub.\n  - name: secret-scanning\n    description: Retrieve secret scanning alerts from a repository.\n  - name: server-statistics\n    description: GHES statistics\n  - name: teams\n    description: Interact with GitHub Teams.\n  - name: users\n    description: Interact with and view information about users and also current user.\nexternalDocs:\n  description: GitHub v3 REST API\n  url: https://docs.github.com/rest/\ninfo:\n  version: 1.1.4\n  title: GitHub v3 REST API - projects\n  description: Interact with GitHub Projects.\n  license:\n    name: MIT\n    url: https://spdx.org/licenses/MIT\n  termsOfService: https://docs.github.com/articles/github-terms-of-service\n  contact:\n    name: Support\n    url: https://support.github.com/contact?tags=dotcom-rest-api\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/github/v0.2.0/services/projects.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/github/v0.2.0/services/projects.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/projects/columns/{column_id}/cards\": post: responses: 422: contents: application/json: generate schema: oneOf: oneOf ProjectsCreateCardUnprocessableEntity: variant ValidationErrorSimple: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}