{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tigraph/tidb"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "br/web/docs/api.yaml",
			"byteSize": 15431,
			"content": "openapi: 3.0.2\ninfo:\n  title: TiDB Lightning web interface\n  version: 4.0.6\nservers:\n  - url: http://127.0.0.1:8289/\ntags:\n  - name: Tasks\n    description: Task queue management\n  - name: Progress\n    description: Task progress\n  - name: Pause\n    description: Pause/resume tasks\n  - name: Log\n    description: Logging\ncomponents:\n  schemas:\n    Error:\n      type: object\n      required:\n        - error\n      additionalProperties: false\n      properties:\n        error:\n          type: string\n          description: error message\n    TaskList:\n      type: object\n      required:\n        - current\n        - queue\n      additionalProperties: false\n      properties:\n        current:\n          type: integer\n          format: int64\n          nullable: true\n          description: ID of the currently running task\n        queue:\n          type: array\n          items:\n            type: integer\n            format: int64\n          description: IDs of the queued tasks\n    TaskConfig:\n      type: object\n      description: The serialized task configuration\n    TaskStatus:\n      type: integer\n      description: Task status\n      enum:\n        - 0 # Not started\n        - 1 # Running\n        - 2 # Completed\n      example: 1\n    ProgressTask:\n      type: object\n      required:\n        - t\n        - s\n      additionalProperties: false\n      properties:\n        t:\n          type: object\n          additionalProperties:\n            type: object\n            required:\n              - w\n              - z\n              - s\n            additionalProperties: false\n            properties:\n              w:\n                type: integer\n                format: int64\n                description: Total bytes parsed and delivered\n              z:\n                type: integer\n                format: int64\n                description: Total bytes of the entire table\n              s:\n                $ref: '#/components/schemas/TaskStatus'\n              m:\n                type: string\n                description: Error message of the table\n          description: Progress summary of each table.\n          example: {'`db`.`tbl`': {w: 390129, z: 557291, s: 1}}\n        s:\n          $ref: '#/components/schemas/TaskStatus'\n        m:\n          type: string\n          description: Error message from previous task\n          example: |-\n            some errors of previous task\n            (stack trace)\n    CheckpointStatus:\n      type: integer\n      description: Table status\n      enum:\n        - 0   # Missing\n        - 30  # Loaded\n        - 60  # AllWritten\n        - 90  # Closed\n        - 120 # Imported\n        - 140 # IndexImported\n        - 150 # AlteredAutoInc\n        - 170 # ChecksumSkipped\n        - 180 # Checksummed\n        - 200 # AnalyzeSkipped\n        - 210 # Analyzed\n        - 3   # LoadErrored\n        - 6   # WriteErrored\n        - 9   # CloseErrored\n        - 12  # ImportErrored\n        - 14  # IndexImportErrored\n        - 15  # AlterAutoIncErrored\n        - 18  # ChecksumErrored\n        - 21  # AnalyzeErrored\n      example: 60\n    TableCheckpoints:\n      type: object\n      required:\n        - Status\n        - AllocBase\n        - Engines\n      properties:\n        Status:\n          $ref: '#/components/schemas/CheckpointStatus'\n        AllocBase:\n          type: integer\n          format: int64\n          description: Current maximum value of AUTO_INCREMENT ID\n          example: 44819\n        Engines:\n          type: object\n          additionalProperties:\n            type: object\n            description: Engine progress\n            required:\n              - Status\n              - Chunks\n            additionalProperties: false\n            properties:\n              Status:\n                $ref: '#/components/schemas/CheckpointStatus'\n              Chunks:\n                type: array\n                items:\n                  type: object\n                  description: File progress\n                  required:\n                    - Key\n                    - ColumnPermutation\n                    - Chunk\n                    - Checksum\n                  additionalProperties: false\n                  properties:\n                    Key:\n                      type: object\n                      required:\n                        - Path\n                        - Offset\n                      additionalProperties: false\n                      properties:\n                        Path:\n                          type: string\n                          description: File path\n                        Offset:\n                          type: integer\n                          format: int64\n                          description: Start offset\n                          default: 0\n                    ColumnPermutation:\n                      type: array\n                      description: Column permutation\n                      items:\n                        type: integer\n                    Chunk:\n                      type: object\n                      description: Current progress\n                      required:\n                        - Offset\n                        - EndOffset\n                        - PrevRowIDMax\n                        - RowIDMax\n                      additionalProperties: false\n                      properties:\n                        Offset:\n                          type: integer\n                          format: int64\n                          description: Current file offset\n                        EndOffset:\n                          type: integer\n                          format: int64\n                          description: End file offset\n                        PrevRowIDMax:\n                          type: integer\n                          format: int64\n                          description: Current row ID\n                        RowIDMax:\n                          type: integer\n                          format: int64\n                          description: End row ID\n                    Checksum:\n                      type: object\n                      description: Partial checksum\n                      required:\n                        - checksum\n                        - size\n                        - kvs\n                      additionalProperties: false\n                      properties:\n                        checksum:\n                          type: integer\n                          format: int64\n                          description: XOR-combined CRC64 checksum\n                        size:\n                          type: integer\n                          format: int64\n                          description: Total encoded bytes\n                        kvs:\n                          type: integer\n                          format: int64\n                          description: Total number of KV pairs\n          example:\n            -1: {Status: 60, Chunks: []}\n            0: {Status: 90, Chunks: [{\n              Key: {Path: '/data/db1/db.tbl.01.sql', Offset: 0},\n              ColumnPermutation: [],\n              Chunk: {Offset: 3391, EndOffset: 450192, PrevRowIDMax: 318, RowIDMax: 40125},\n              Checksum: {checksum: 1785171221414119207, size: 9670, kvs: 1908}\n            }]}\n    Paused:\n      type: object\n      required:\n        - paused\n      additionalProperties: false\n      properties:\n        paused:\n          type: boolean\n    LogLevel:\n      type: object\n      required:\n        - level\n      additionalProperties: false\n      properties:\n        level:\n          type: string\n          description: Log level\n          enum:\n            - debug\n            - info\n            - warn\n            - error\n            - dpanic\n            - panic\n            - fatal\n  parameters:\n    TaskId:\n      name: taskId\n      in: path\n      required: true\n      description: The task ID\n      schema:\n        type: integer\n        format: int64\n      example: 1567890123456789012\n  requestBodies:\n    TaskConfig:\n      description: Task configuration in TOML format (`tidb-lightning.toml`)\n      required: true\n      content:\n        application/toml:\n          example: |\n            [mydumper]\n            data-source-dir = '/data/db1'\n    LogLevel:\n      description: Log level\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/LogLevel'\n  responses:\n    serverModeDisabled:\n      description: Server mode disabled\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example: {error: server-mode not enabled}\n    invalidTaskId:\n      description: Invalid task ID\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example: {error: invalid task ID}\n    taskIdNotFound:\n      description: Task ID does not exist in the task queue\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example: {error: task ID not found}\n\npaths:\n  /tasks:\n    get:\n      summary: Get IDs of the running and queued tasks\n      operationId: GetTask\n      tags: [Tasks]\n      responses:\n        200:\n          description: Received task list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskList'\n              examples:\n                empty:\n                  summary: Nothing to run\n                  value: {current: null, queue: []}\n                single:\n                  summary: Single task running\n                  value: {current: 1567890123456789012, queue: []}\n                multiple:\n                  summary: Multiple tasks queued\n                  value: {current: 1567890123456789012, queue: [1543210987654321098, 1585858585858585858]}\n        501:\n          $ref: '#/components/responses/serverModeDisabled'\n    post:\n      summary: Submit a new task\n      operationId: PostTask\n      tags: [Tasks]\n      requestBody:\n        $ref: '#/components/requestBodies/TaskConfig'\n      responses:\n        200:\n          description: Task is queued\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - id\n                properties:\n                  id:\n                    type: integer\n                    format: int64\n                    description: The new task ID\n              example: {id: 1567890123456789012}\n        400:\n          description: The submitted task configuration has syntax error or invalid settings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example: {error: 'invalid task configuration: invalid `tidb.port` setting'}\n        501:\n          $ref: '#/components/responses/serverModeDisabled'\n  /tasks/{taskId}:\n    parameters:\n      - $ref: '#/components/parameters/TaskId'\n    get:\n      summary: Get configuration of a single task\n      operationId: GetOneTask\n      tags: [Tasks]\n      responses:\n        200:\n          description: Received task configuration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskConfig'\n        400:\n          $ref: '#/components/responses/invalidTaskId'\n        404:\n          $ref: '#/components/responses/taskIdNotFound'\n        501:\n          $ref: '#/components/responses/serverModeDisabled'\n    delete:\n      summary: Stop and delete a single task from the task queue\n      operationId: DeleteOneTask\n      tags: [Tasks]\n      responses:\n        200:\n          description: Task is successfully deleted\n        400:\n          $ref: '#/components/responses/invalidTaskId'\n        404:\n          $ref: '#/components/responses/taskIdNotFound'\n        501:\n          $ref: '#/components/responses/serverModeDisabled'\n  /tasks/{taskId}/front:\n    parameters:\n      - $ref: '#/components/parameters/TaskId'\n    patch:\n      summary: Move the task to the front of the queue\n      operationId: PatchOneTaskFront\n      tags: [Tasks]\n      responses:\n        200:\n          description: Task is successfully moved to the front\n        400:\n          $ref: '#/components/responses/invalidTaskId'\n        404:\n          $ref: '#/components/responses/taskIdNotFound'\n        501:\n          $ref: '#/components/responses/serverModeDisabled'\n  /tasks/{taskId}/back:\n    parameters:\n      - $ref: '#/components/parameters/TaskId'\n    patch:\n      summary: Move the task to the back of the queue\n      operationId: PatchOneTaskBack\n      tags: [Tasks]\n      responses:\n        200:\n          description: Task is successfully moved to the back\n        400:\n          $ref: '#/components/responses/invalidTaskId'\n        404:\n          $ref: '#/components/responses/taskIdNotFound'\n        501:\n          $ref: '#/components/responses/serverModeDisabled'\n  /progress/task:\n    get:\n      summary: Get the progress summary of the current task\n      operationId: GetProgressTask\n      tags: [Progress]\n      responses:\n        200:\n          description: Progress of current task\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProgressTask'\n  /progress/table:\n    parameters:\n      - name: t\n        description: The name of the table\n        in: query\n        required: true\n        schema:\n          type: string\n        example: '`db`.`tbl`'\n    get:\n      summary: Get the progress summary of a table\n      operationId: GetProgressTable\n      tags: [Progress]\n      responses:\n        200:\n          description: Progress of the table\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TableCheckpoints'\n        404:\n          description: Table not found\n          content:\n            application/json:\n              schema:\n                type: string\n                description: Error message\n                example: '\"table `db`.`tbl` not found\"'\n  /pause:\n    get:\n      summary: Get whether the program is paused\n      operationId: GetPause\n      tags: [Pause]\n      responses:\n        200:\n          description: Result of whether the program is paused\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Paused'\n    put:\n      summary: Pause the program\n      operationId: PutPause\n      tags: [Pause]\n      responses:\n        200:\n          description: The program is paused\n  /resume:\n    put:\n      summary: Resume the program\n      operationId: PutResume\n      tags: [Pause]\n      responses:\n        200:\n          description: The program is resumed\n  /loglevel:\n    get:\n      summary: Get the current log level\n      operationId: GetLogLevel\n      tags: [Log]\n      responses:\n        200:\n          description: Current log level\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogLevel'\n    put:\n      summary: Change the current log level\n      operationId: PutLogLevel\n      tags: [Log]\n      requestBody:\n        $ref: '#/components/requestBodies/LogLevel'\n      responses:\n        200:\n          description: Log level is updated\n        400:\n          description: Invalid log level\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n",
			"canonicalURL": "/github.com/tigraph/tidb@3fca98d40b154d225c307bfe1b89d627c3cc76f3/-/blob/br/web/docs/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/tigraph/tidb/blob/3fca98d40b154d225c307bfe1b89d627c3cc76f3/br/web/docs/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/tasks\": post: requestBody: contents: unsupported content types: [application/toml]",
	"NotImplemented": [
		"unsupported content types"
	]
}