{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "twinehealth.com-v7.78.1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/twinehealth.com-v7.78.1-swagger.yaml",
			"byteSize": 232061,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: apiteam@twinehealth.com\n  description: \u003e\n    # Overview\n\n    The Fitbit Plus API is a RESTful API. The requests and responses are formated according to the\n\n    [JSON API](http://jsonapi.org/format/1.0/) specification.\n\n\n    In addition to this documentation, we also provide an\n\n    [OpenAPI](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md) \"yaml\" file describing the API:\n\n    [Fitbit Plus API Specification](swagger.yaml).\n\n\n    # Authentication\n\n    Authentication for the Fitbit Plus API is based on the\n\n    [OAuth 2.0 Authorization Framework](https://tools.ietf.org/html/rfc6749). Fitbit Plus currently supports grant\n\n    types of **client_credentials** and **refresh_token**.\n\n\n    See [POST /oauth/token](#operation/createToken) for details on the request and response formats.\n\n    \u003c!-- ReDoc-Inject: \u003csecurity-definitions\u003e --\u003e\n\n\n    ## Building Integrations\n\n    We will provide customers with unique client credentials for each application/integration they build, allowing us\n\n    to enforce appropriate access controls and monitor API usage.\n\n    The client credentials will be scoped to the organization, and allow full access to all patients and related data\n\n    within that organization.\n\n\n    These credentials are appropriate for creating an integration that does one of the following:\n     - background reporting/analysis\n     - synchronizing data with another system (such as an EMR)\n\n    The API credentials and oauth flows we currently support are **not** well suited for creating a user-facing\n\n    application that allows a user (patient, coach, or admin) to login and have access to data which is appropriate to\n\n    that specific user. It is possible to build such an application, but it is not possible to use Fitbit Plus as a\n\n    federated identity provider. You would need to have a separate means of verifying a user's identity. We do not\n\n    currently support the required password-based oauth flow to make this possible.\n\n\n    # Paging\n\n    The Fitbit Plus API supports two different pagination strategies for GET collection endpoints.\n\n\n    #### Skip-based paging\n\n\n    Skip-based paging uses the query parameters `page[size]` and `page[number]` to specify the max number of resources returned and the page number. We default to skip-based paging if there are no page parameters. The response will include a `links` object containing links to the first, last, prev, and next pages of data.\n\n\n    If the contents of the collection change while you are iterating through the collection, you will see duplicate or missing documents. For example, if you are iterating through the `calender_event` resource via `GET /pub/calendar_event?sort=start_at\u0026page[size]=50\u0026page[number]=1`, and a new `calendar_event` is created that has a `start_at` value before the first `calendar_event`, when you fetch the next page at `GET /pub/calendar_event?sort=start_at\u0026page[size]=50\u0026page[number]=2`, the first entry in the second response will be a duplicate of the last entry in the first response.\n\n\n    #### Cursor-based paging\n\n    Cursor-based paging uses the query parameters `page[limit]` and `page[after]` to specify the max number of entries returned and identify where to begin the next page. Add `page[limit]` to the parameters to use cursor-based paging. The response will include a `links` object containing a link to the next page of data, if the next page exists.\n\n\n    Cursor-based paging is not subject to duplication if new resources are added to the collection. For example, if you are iterating through the `calender_event` resource via `GET /pub/calendar_event?sort=start_at\u0026page[limit]=50`, and a new `calendar_event` is created that has a `start_at` value before the first `calendar_event`, you will not see a duplicate entry when you fetch the next page at `GET /pub/calendar_event?sort=start_at\u0026page[limit]=50\u0026page[after]=\u003ccursor\u003e`.\n\n\n    We encourage the use of cursor-based paging for performance reasons.\n\n\n    In either form of paging, you can determine whether any resources were missed by comparing the number of fetched resources against `meta.count`. Set `page[size]` or `page[limit]` to 0 to get only the count.\n\n\n    It is not valid to mix the two strategies.\n  title: Fitbit Plus\n  version: v7.78.1\n  x-apisguru-categories:\n    - support\n  x-logo:\n    url: http://developer.twinehealth.com/images/Fitbit_Plus_lockup_2C_RGB-32.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/TwineHealth/TwineDeveloperDocs/master/spec/swagger.yaml\n      version: \"2.0\"\n  x-providerName: twinehealth.com\ntags:\n  - description: Authentication operations\n    name: oauth\n  - description: An organization is a Fitbit Plus customer. No data is accessible across\n      organizations.\n    name: organization\n  - description: A group is a cohort of patients within an organization. The creation of\n      groups allows for the segmentation of dashboards and analytics. For\n      example, a group might correspond to the patients in a particular practice\n      or the employees of a particular employer.\n    name: group\n  - description: A coach is a person that supports a patient\n    name: coach\n  - description: A reward program provides the details for a rewards program for a group.\n      Different rewards programs can be created for different periods of time\n      specified by the start_at and end_at dates. A reward program can activated\n      for a patient any time between these dates. An activated reward program\n      for a patient is called a reward program activation.\n    name: reward program\n  - description: An action is an actionable item in a patient's plan.\n    name: action\n  - description: A bundle is a collection of actions (an action plan) in a patient's plan\n      summary.\n    name: bundle\n  - description: A calendar event represents an event involving or relevant to a patient\n      which will or has occurred on a specific date or during a specific period\n      of time.\n    name: calendar event\n  - description: A calendar event response indicates the attendee's response to a calendar\n      event.  Only `POST` for creation is allowed as the responses are updated\n      into the corresponding calendar events.\n    name: calendar event response\n  - description: Email history represents a single email that was sent using Fitbit Plus.\n    name: email history\n  - description: A health profile contains a set of health questions and answers for a\n      patient.\n    name: health profile\n  - description: A health profile answer is the answer to a question for a patient.\n    name: health profile answer\n  - description: A health profile question contains a health question and the corresponding\n      answer for a patient.\n    name: health profile question\n  - description: A health question definition specifies a health question and the\n      corresponding answer choices.\n    name: health question definition\n  - description: A metric is a quantitative result for a patient. For example, vital signs,\n      lab results, etc. are all metrics.\n    name: metric\n  - description: A patient is the core user of Fitbit Plus.\n    name: patient\n  - description: A plan is the set of actions and associated goals for a patient.\n    name: plan\n  - description: A patient health result is a quantitative result for a patient.\n    name: result\n  - description: A reward allocates a portion of the budget from the reward program\n      activation for achieving a particular goal and sets a target date.\n    name: reward\n  - description: A reward earning specifies the portion of a reward that was earned and at\n      what date.\n    name: reward earning\n  - description: A reward earning fulfillment specifies the portion of a reward earning\n      that was fulfilled and at what date.\n    name: reward earning fulfillment\n  - description: A reward program activation is the activation of a reward program for a\n      specific patient.\n    name: reward program activation\npaths:\n  /action:\n    post:\n      description: Create a plan action\n      operationId: createAction\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/CreateActionRequest\"\n        required: true\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateActionResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Create action\n      tags:\n        - action\n  \"/action/{id}\":\n    get:\n      description: Get a health action from a patient's plan.\n      operationId: fetchAction\n      parameters:\n        - description: Action identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchActionResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get an action\n      tags:\n        - action\n    patch:\n      description: Update a health action from a patient's plan.\n      operationId: updateAction\n      parameters:\n        - description: Action identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/UpdateActionRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/UpdateActionResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Update an action\n      tags:\n        - action\n  /bundle:\n    post:\n      description: Create a bundle in a patient's plan\n      operationId: createBundle\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/CreateBundleRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateBundleResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Create bundle\n      tags:\n        - bundle\n  \"/bundle/{id}\":\n    get:\n      description: Get a bundle from a patient's plan.\n      operationId: fetchBundle\n      parameters:\n        - description: Bundle identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchBundleResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get a bundle\n      tags:\n        - bundle\n    patch:\n      description: Updte a bundle from a patient's plan.\n      operationId: updateBundle\n      parameters:\n        - description: Bundle identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/UpdateBundleRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/UpdateBundleResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Update a bundle\n      tags:\n        - bundle\n  /calendar_event:\n    get:\n      description: Get a list of calendar events\n      operationId: fetchCalendarEvents\n      parameters:\n        - description: \u003e\n            Patient id to fetch calendar event. Note that one of the following\n            filters must be specified: `filter[patient]`, `filter[group]`,\n            `filter[organization]`, or `filter[attendees]`.\n          in: query\n          name: filter[patient]\n          schema:\n            type: string\n        - description: \u003e\n            Comma-separated list of group ids. Note that one of the following\n            filters must be specified: `filter[patient]`, `filter[group]`,\n            `filter[organization]`, or `filter[attendees]`.\n          in: query\n          name: filter[groups]\n          schema:\n            type: string\n        - description: \u003e\n            Fitbit Plus organization id. Note that one of the following filters\n            must be specified: `filter[patient]`, `filter[group]`,\n            `filter[organization]`, or `filter[attendees]`.\n          in: query\n          name: filter[organization]\n          schema:\n            type: string\n        - description: \u003e\n            Comma-separated list of coach or patient ids. Note that one of the\n            following filters must be specified: `filter[patient]`,\n            `filter[group]`, `filter[organization]`, or `filter[attendees]`.\n          in: query\n          name: filter[attendees]\n          schema:\n            type: string\n        - description: Calendar event type\n          in: query\n          name: filter[type]\n          schema:\n            type: string\n            enum:\n              - plan-check-in\n              - reminder\n              - telephone-call\n              - office-visit\n              - video-call\n        - description: If not specified, return all calendar events. If set to `true`\n            return only events marked as completed, if set to `false`, return\n            only events not marked as completed yet.\n          in: query\n          name: filter[completed]\n          schema:\n            type: boolean\n        - description: \u003e\n            The start (inclusive) and end (exclusive) dates are ISO date and\n            time strings separated by `..`. Example for events starting in\n            November 2017 (America/New_York):\n            `filter[start_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`\n          in: query\n          name: filter[start_at]\n          schema:\n            type: string\n        - description: \u003e\n            The start (inclusive) and end (exclusive) dates are ISO date and\n            time strings separated by `..`. Example for events ending in\n            November 2017 (America/New_York):\n            `filter[end_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`\n          in: query\n          name: filter[end_at]\n          schema:\n            type: string\n        - description: \u003e\n            The start (inclusive) and end (exclusive) dates are ISO date and\n            time strings separated by `..`. Example for events completed in\n            November 2017 (America/New_York):\n            `filter[completed_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`\n          in: query\n          name: filter[completed_at]\n          schema:\n            type: string\n        - description: \u003e\n            The start (inclusive) and end (exclusive) dates are ISO date and\n            time strings separated by `..`. Example for events created in\n            November 2017 (America/New_York):\n            `filter[created_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`\n          in: query\n          name: filter[created_at]\n          schema:\n            type: string\n        - description: \u003e\n            The start (inclusive) and end (exclusive) dates are ISO date and\n            time strings separated by `..`. Example for events updated in\n            November 2017 (America/New_York):\n            `filter[updated_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`\n          in: query\n          name: filter[updated_at]\n          schema:\n            type: string\n        - description: Page number\n          in: query\n          name: page[number]\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - description: Page size\n          in: query\n          name: page[size]\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 50\n            default: 10\n        - description: Page limit\n          in: query\n          name: page[limit]\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            default: 50\n        - description: Page cursor\n          in: query\n          name: page[cursor]\n          required: false\n          schema:\n            type: string\n        - description: List of related resources to include in the response\n          in: query\n          name: include\n          required: false\n          schema:\n            type: string\n            enum:\n              - owner\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchCalendarEventsResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List calendar events\n      tags:\n        - calendar event\n    post:\n      description: Create a calendar event for a patient. Attribute `all_day` must be set\n        to `true` and `end_at` cannot be set for `plan-check-in` event type.\n      operationId: createCalendarEvent\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/CreateCalendarEventRequest\"\n        required: true\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateCalendarEventResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Create calendar event\n      tags:\n        - calendar event\n  \"/calendar_event/{id}\":\n    delete:\n      description: Delete a calendar event by id\n      operationId: deleteCalendarEvent\n      parameters:\n        - description: Calendar event identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Delete a calendar event\n      tags:\n        - calendar event\n    get:\n      description: Get a calendar event by id\n      operationId: fetchCalendarEvent\n      parameters:\n        - description: Calendar event identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchCalendarEventResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get a calendar event\n      tags:\n        - calendar event\n    patch:\n      description: Update a calendar event for a patient. Attribute `all_day` must be true\n        and `end_at` cannot be specified for `plan-check-in` event type. To mark\n        a calendar event as 'completed', set `completed_at` and `completed_by`\n        to desired values.  To mark a completed calendar event as 'not\n        completed', set `completed_at` and `completed_by` to `null`. Attendees\n        can be added or removed, but response status cannot be updated. Use the\n        calendar event response api for response status updates instead.\n      operationId: updateCalendarEvent\n      parameters:\n        - description: Calendar event identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/UpdateCalendarEventRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/UpdateCalendarEventResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Update a calendar event\n      tags:\n        - calendar event\n  /calendar_event_response:\n    post:\n      description: Create a calendar event response for an attendee of a calendar event,\n        the attendee can be a coach or patient.  Calendar event responses cannot\n        be fetched, updated nor deleted.  Use calendar event api to fetch the\n        response status for attendees.\n      operationId: createCalendarEventResponse\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/CreateCalendarEventResponseRequest\"\n        required: true\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateCalendarEventResponseRequest\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Create calendar event response\n      tags:\n        - calendar event response\n  /coach:\n    get:\n      description: Get a list of coaches matching the specified filters.\n      operationId: fetchCoaches\n      parameters:\n        - description: \u003e\n            Comma-separated list of group ids. Note that one of the following\n            filters must be specified: `filter[groups]`, `filter[organization]`.\n          in: query\n          name: filter[groups]\n          schema:\n            type: string\n        - description: \u003e\n            Fitbit Plus organization id. Note that one of the following filters\n            must be specified: `filter[groups]`, `filter[organization]`.\n          in: query\n          name: filter[organization]\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchCoachesResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List coaches\n      tags:\n        - coach\n  \"/coach/{id}\":\n    get:\n      description: Get a coach record by id.\n      operationId: fetchCoach\n      parameters:\n        - description: Coach identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchCoachResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get a coach\n      tags:\n        - coach\n  /email_history:\n    get:\n      description: Get a list of email histories\n      operationId: fetchEmailHistories\n      parameters:\n        - description: Fitbit Plus user id of email recipient. Required if filter[sender]\n            is not defined.\n          in: query\n          name: filter[receiver]\n          schema:\n            type: string\n        - description: Fitbit Plus user id of email sender. Required if filter[receiver] is\n            not defined.\n          in: query\n          name: filter[sender]\n          schema:\n            type: string\n        - description: Type of email\n          in: query\n          name: filter[emailType]\n          schema:\n            type: string\n        - description: |\n            valid sorts:\n              * send_time - ascending by send_time\n              * -send_time - descending by send_time\n          in: query\n          name: sort\n          schema:\n            type: string\n            enum:\n              - send_time\n              - -send_time\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchEmailHistoriesResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List email histories\n      tags:\n        - email history\n  \"/email_history/{id}\":\n    get:\n      description: Get an email history by id\n      operationId: fetchEmailHistory\n      parameters:\n        - description: Email history identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchEmailHistoryResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get an email history\n      tags:\n        - email history\n  /group:\n    get:\n      description: Get a list of groups matching the specified filters.\n      operationId: fetchGroups\n      parameters:\n        - description: Organization identifier\n          in: query\n          name: filter[organization]\n          required: true\n          schema:\n            type: string\n        - description: Group name\n          in: query\n          name: filter[name]\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchGroupsResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List groups\n      tags:\n        - group\n    post:\n      description: Create a group record.\n      operationId: createGroup\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/CreateGroupRequest\"\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateGroupResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Create a group\n      tags:\n        - group\n  \"/group/{id}\":\n    get:\n      description: Get a group record by id.\n      operationId: fetchGroup\n      parameters:\n        - description: Group identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchGroupResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get a group\n      tags:\n        - group\n  /health_profile:\n    get:\n      description: Get a list of health profiles\n      operationId: fetchHealthProfiles\n      parameters:\n        - description: \u003e\n            Patient id to fetch health profile. Note that one of the following\n            filters must be specified: `filter[patient]`, `filter[group]`, or\n            `filter[organization]`.\n          in: query\n          name: filter[patient]\n          schema:\n            type: string\n        - description: \u003e\n            Comma-separated list of group ids. Note that one of the following\n            filters must be specified: `filter[patient]`, `filter[group]`, or\n            `filter[organization]`.\n          in: query\n          name: filter[groups]\n          schema:\n            type: string\n        - description: \u003e\n            Fitbit Plus organization id. Note that one of the following filters\n            must be specified: `filter[patient]`, `filter[group]`, or\n            `filter[organization]`.\n          in: query\n          name: filter[organization]\n          schema:\n            type: string\n        - description: Page number\n          in: query\n          name: page[number]\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - description: Page size\n          in: query\n          name: page[size]\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 50\n            default: 10\n        - description: Page limit\n          in: query\n          name: page[limit]\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            default: 50\n        - description: Page cursor\n          in: query\n          name: page[cursor]\n          required: false\n          schema:\n            type: string\n        - description: List of related resources to include in the response\n          in: query\n          name: include\n          required: false\n          schema:\n            type: string\n            enum:\n              - patient\n              - questions\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchHealthProfilesResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List health profiles\n      tags:\n        - health profile\n  \"/health_profile/{id}\":\n    get:\n      description: Get a health profile by id\n      operationId: fetchHealthProfile\n      parameters:\n        - description: Health profile identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: List of related resources to include in the response\n          in: query\n          name: include\n          required: false\n          schema:\n            type: string\n            enum:\n              - patient\n              - questions\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchHealthProfileResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get a health profile\n      tags:\n        - health profile\n  /health_profile_answer:\n    get:\n      description: Get a list of health profile answers\n      operationId: fetchHealthProfileAnswers\n      parameters:\n        - description: \u003e\n            Patient id to fetch healt profile answers. Note that one of the\n            following filters must be specified: `filter[patient]`,\n            `filter[group]`, or `filter[organization]`.\n          in: query\n          name: filter[patient]\n          schema:\n            type: string\n        - description: \u003e\n            Comma-separated list of group ids. Note that one of the following\n            filters must be specified: `filter[patient]`, `filter[group]`, or\n            `filter[organization]`.\n          in: query\n          name: filter[groups]\n          schema:\n            type: string\n        - description: \u003e\n            Fitbit Plus organization id. Note that one of the following filters\n            must be specified: `filter[patient]`, `filter[group]`, or\n            `filter[organization]`.\n          in: query\n          name: filter[organization]\n          schema:\n            type: string\n        - description: Page number\n          in: query\n          name: page[number]\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - description: Page size\n          in: query\n          name: page[size]\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 100\n            default: 50\n        - description: Page limit\n          in: query\n          name: page[limit]\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            default: 50\n        - description: Page cursor\n          in: query\n          name: page[cursor]\n          required: false\n          schema:\n            type: string\n        - description: List of related resources to include in the response\n          in: query\n          name: include\n          required: false\n          schema:\n            type: string\n            enum:\n              - patient\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchHealthProfileAnswersResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List health profile answers\n      tags:\n        - health profile answer\n  \"/health_profile_answer/{id}\":\n    get:\n      description: Get a health profile answer by id\n      operationId: fetchHealthProfileAnswer\n      parameters:\n        - description: Health profile answer identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: List of related resources to include in the response\n          in: query\n          name: include\n          required: false\n          schema:\n            type: string\n            enum:\n              - patient\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchHealthProfileAnswerResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get a health profile answer\n      tags:\n        - health profile answer\n  /health_profile_question:\n    get:\n      description: Get a list of health profile questions\n      operationId: fetchHealthProfileQuestions\n      parameters:\n        - description: \u003e\n            Patient id to fetch healt profile questions. Note that one of the\n            following filters must be specified: `filter[patient]`,\n            `filter[group]`, or `filter[organization]`.\n          in: query\n          name: filter[patient]\n          schema:\n            type: string\n        - description: \u003e\n            Comma-separated list of group ids. Note that one of the following\n            filters must be specified: `filter[patient]`, `filter[group]`, or\n            `filter[organization]`.\n          in: query\n          name: filter[groups]\n          schema:\n            type: string\n        - description: \u003e\n            Fitbit Plus organization id. Note that one of the following filters\n            must be specified: `filter[patient]`, `filter[group]`, or\n            `filter[organization]`.\n          in: query\n          name: filter[organization]\n          schema:\n            type: string\n        - description: List of related resources to include in the response\n          in: query\n          name: include\n          required: false\n          schema:\n            type: string\n            enum:\n              - question_definition\n              - answer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchHealthProfileQuestionsResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List health profile questions\n      tags:\n        - health profile question\n  \"/health_profile_question/{id}\":\n    get:\n      description: Get a health profile by id\n      operationId: fetchHealthProfileQuestion\n      parameters:\n        - description: Health profile question identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: List of related resources to include in the response\n          in: query\n          name: include\n          required: false\n          schema:\n            type: string\n            enum:\n              - question_definition\n              - answer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchHealthProfileQuestionResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get a health profile question\n      tags:\n        - health profile question\n  /health_question_definition:\n    get:\n      description: Get a list of all health question definitions\n      operationId: fetchHealthQuestionDefinitions\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchHealthQuestionDefinitionsResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List health question definitions\n      tags:\n        - health question definition\n  \"/health_question_definition/{id}\":\n    get:\n      description: Get a health question definition by id\n      operationId: fetchHealthQuestionDefinition\n      parameters:\n        - description: Health question definition identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchHealthQuestionDefinitionResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get a health question definition\n      tags:\n        - health question definition\n  /oauth/token:\n    post:\n      description: \u003e\n        Create an OAuth 2.0 Bearer token. A valid bearer token is required for\n        all other API requests.\n\n\n        Be sure to set the header `Content-Type: \"application/vnd.api+json\"`. Otherwise, you will get an error\n\n        403 Forbidden. Using `Content-Type: \"application/json\"` is permitted (to support older oauth clients) but when\n\n        using `application/json` the body should have a body in the following format instead of nesting under\n\n        `data.attributes`:\n\n        ```\n\n        {\n          \"grant_type\": \"client_credentials\",\n          \"client_id\": \"95c78ab2-167f-40b8-8bec-8398d4b87454\",\n          \"client_secret\": \"35d18dc9-a3dd-4948-b787-063a490b9354\"\n        }\n\n        ```\n      operationId: createToken\n      parameters:\n        - description: List of related resources to include in the response\n          in: query\n          name: include\n          required: false\n          schema:\n            type: string\n            enum:\n              - groups\n              - organization\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/CreateTokenRequest\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateTokenRequest\"\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateTokenResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      security:\n        - OAuth2:\n            - group\n            - organization\n      summary: Create an oauth token\n      tags:\n        - oauth\n  \"/oauth/token/{id}/groups\":\n    get:\n      description: Get the list of groups a token can be used to access.\n      operationId: fetchTokenGroups\n      parameters:\n        - description: Token identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchGroupsResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      security:\n        - OAuth2:\n            - group\n            - organization\n      summary: Get the groups for a token\n      tags:\n        - oauth\n  \"/oauth/token/{id}/organization\":\n    get:\n      description: Get the organization a token can be used to access.\n      operationId: fetchTokenOrganization\n      parameters:\n        - description: Token identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchOrganizationResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get the organization for a token\n      tags:\n        - oauth\n  \"/organization/{id}\":\n    get:\n      description: Get an organization record by id.\n      operationId: fetchOrganization\n      parameters:\n        - description: Organization identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchOrganizationResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get an organization\n      tags:\n        - organization\n  /patient:\n    get:\n      description: Get a list of patients.\n      operationId: fetchPatients\n      parameters:\n        - description: Comma-separated list of group ids. Note that either `filter[group]`\n            or `filter[organization]` must be specified.\n          in: query\n          name: filter[groups]\n          schema:\n            type: string\n        - description: Fitbit Plus organization id. Note that either `filter[group]` or\n            `filter[organization]` must be specified.\n          in: query\n          name: filter[organization]\n          schema:\n            type: string\n        - description: 'Identifier system (example: \"MyEHR\") - requires a\n            \"filter[identifier][value]\" parameter'\n          in: query\n          name: filter[identifier][system]\n          schema:\n            type: string\n        - description: 'Identifier value (example: \"12345\") - requires a\n            \"filter[identifier][system]\" parameter'\n          in: query\n          name: filter[identifier][value]\n          schema:\n            type: string\n        - description: If not specified, return all patients. If set to 'true' return only\n            archived patients, if set to 'false', return only patients who are\n            not archived.\n          in: query\n          name: filter[archived]\n          schema:\n            type: boolean\n        - description: \u003e\n            The start (inclusive) and end (exclusive) dates are ISO date and\n            time strings separated by `..`. Example for patients created in\n            November 2017 (America/New_York):\n            `filter[created_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`\n          in: query\n          name: filter[created_at]\n          schema:\n            type: string\n        - description: \u003e\n            The start (inclusive) and end (exclusive) dates are ISO date and\n            time strings separated by `..`. Example for patients updated in\n            November 2017 (America/New_York):\n            `filter[updated_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`\n          in: query\n          name: filter[updated_at]\n          schema:\n            type: string\n        - description: Page number\n          in: query\n          name: page[number]\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - description: Page size\n          in: query\n          name: page[size]\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 50\n            default: 10\n        - description: Page limit\n          in: query\n          name: page[limit]\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            default: 50\n        - description: Page cursor\n          in: query\n          name: page[cursor]\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchPatientsResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List patients\n      tags:\n        - patient\n    post:\n      description: \u003e\n        Create a patient record.\n\n\n        Example for creating a patient with a group specified using `meta.query` instead of `id`:\n\n\n        ```JSON\n\n        {\n          \"data\": {\n            \"type\": \"patient\",\n            \"attributes\": {\n              \"first_name\": \"Andrew\",\n              \"last_name\": \"Smith\"\n            },\n            \"relationships\": {\n              \"groups\": {\n                \"data\": [\n                  {\n                    \"type\": \"group\",\n                    \"meta\": {\n                      \"query\": {\n                        \"organization\": \"58c88de7c93eb96357a87033\",\n                        \"name\": \"Patients Lead\"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        }\n\n        ```\n      operationId: createPatient\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/CreatePatientRequest\"\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreatePatientResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Create a patient\n      tags:\n        - patient\n    put:\n      description: Create a new patient or update an existing patient\n      operationId: upsertPatient\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/UpsertPatientRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreatePatientResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Upsert patient\n      tags:\n        - patient\n  \"/patient/{id}\":\n    get:\n      description: Gets a patient record by id.\n      operationId: fetchPatient\n      parameters:\n        - description: Patient identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchPatientResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get a patient\n      tags:\n        - patient\n    patch:\n      description: Update a patient record.\n      operationId: updatePatient\n      parameters:\n        - description: Patient identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/UpdatePatientRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/UpdatePatientResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Update a patient\n      tags:\n        - patient\n  \"/patient/{id}/coaches\":\n    get:\n      description: Get the list of coaches for a patient.\n      operationId: fetchPatientCoaches\n      parameters:\n        - description: Patient identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchCoachesResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List coaches for a patient\n      tags:\n        - patient\n  \"/patient/{id}/groups\":\n    get:\n      description: Get the list of groups for a patient.\n      operationId: fetchPatientGroups\n      parameters:\n        - description: Patient identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchGroupsResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List groups for a patient\n      tags:\n        - patient\n  /patient_health_metric:\n    get:\n      description: Get a list of patient health metrics.\n      operationId: fetchPatientHealthMetrics\n      parameters:\n        - description: \u003e\n            Filter the patient health metrics for a specified patient. Note that\n            one of the following filters must be specified: `filter[patient]`,\n            `filter[groups]`, `filter[organization]`.\n          in: query\n          name: filter[patient]\n          schema:\n            type: string\n        - description: \u003e\n            Comma-separated list of group ids. Note that one of the following\n            filters must be specified: `filter[patient]`, `filter[groups]`,\n            `filter[organization]`.\n          in: query\n          name: filter[groups]\n          schema:\n            type: string\n        - description: \u003e\n            Fitbit Plus organization id. Note that one of the following filters\n            must be specified: `filter[patient]`, `filter[groups]`,\n            `filter[organization]`.\n          in: query\n          name: filter[organization]\n          schema:\n            type: string\n        - description: Page number\n          in: query\n          name: page[number]\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - description: Page size\n          in: query\n          name: page[size]\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 50\n            default: 10\n        - description: Page limit\n          in: query\n          name: page[limit]\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            default: 50\n        - description: Page cursor\n          in: query\n          name: page[cursor]\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchPatientHealthMetricResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List patient health metrics\n      tags:\n        - metric\n    post:\n      description: \u003e\n        Create one or more patient health metrics.\n\n\n        Example for creating a patient health result with a patient specified using `meta.query` instead of `id`:\n\n\n        ```JSON\n          {\n            \"data\": {\n              \"type\": \"patient_health_metric\",\n               \"attributes\": {\n                 \"code\": {\n                   \"system\": \"LOINC\",\n                   \"value\": \"13457-7\"\n                 },\n                 \"type\": \"ldl_cholesterol\",\n                 \"occurred_at\": \"2017-03-14T11:00:57.000Z\",\n                 \"value\": 121,\n                 \"unit\": \"mg/dl\"\n              },\n              \"relationships\": {\n                \"patient\": {\n                  \"data\": {\n                    \"type\": \"patient\",\n                    \"meta\": {\n                      \"query\": {\n                        \"identifier\": {\n                          \"system\": \"medical-record-number\",\n                          \"value\": \"121212\"\n                        },\n                        \"organization\": \"58c4554710123c5c40dbab81\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        ```\n      operationId: createPatientHealthMetric\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/CreatePatientHealthMetricRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreatePatientHealthMetricResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Create patient health metrics\n      tags:\n        - metric\n  \"/patient_health_metric/{id}\":\n    get:\n      description: Get the plan summary for a patient.\n      operationId: fetchPatientHealthMetric\n      parameters:\n        - description: Patient health metric identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchPatientHealthMetricResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get a patient health metric\n      tags:\n        - metric\n  /patient_plan_summary:\n    get:\n      description: Get a list of patient plan summaries\n      operationId: fetchPatientPlanSummaries\n      parameters:\n        - description: \u003e\n            Patient id to fetch plan summary for. Note that one of the following\n            filters must be specified: `filter[patient]`, `filter[groups]`,\n            `filter[organization]`.\n          in: query\n          name: filter[patient]\n          schema:\n            type: string\n        - description: \u003e\n            Comma-separated list of group ids. Note that one of the following\n            filters must be specified: `filter[patient]`, `filter[groups]`,\n            `filter[organization]`.\n          in: query\n          name: filter[groups]\n          schema:\n            type: string\n        - description: \u003e\n            Fitbit Plus organization id. Note that one of the following filters\n            must be specified: `filter[patient]`, `filter[groups]`,\n            `filter[organization]`.\n          in: query\n          name: filter[organization]\n          schema:\n            type: string\n        - description: List of related resources to include in the response\n          in: query\n          name: include\n          required: false\n          schema:\n            type: string\n            enum:\n              - actions\n              - bundles\n              - patient\n              - current_results\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchPatientPlanSummariesResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List patient plan summaries\n      tags:\n        - plan\n  \"/patient_plan_summary/{id}\":\n    get:\n      description: Get the plan summary for a patient.\n      operationId: fetchPatientPlanSummary\n      parameters:\n        - description: Plan summary identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: List of related resources to include in the response\n          in: query\n          name: include\n          required: false\n          schema:\n            type: string\n            enum:\n              - actions\n              - bundles\n              - patient\n              - current_results\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchPatientPlanSummaryResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get the plan summary for a patient\n      tags:\n        - plan\n    patch:\n      description: Update a plan summary record for a patient.\n      operationId: updatePatientPlanSummary\n      parameters:\n        - description: Plan summary identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/UpdatePatientPlanSummaryRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/UpdatePatientPlanSummaryResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Update a plan summary\n      tags:\n        - plan\n  /result:\n    get:\n      description: Get a list of patient health results.\n      operationId: fetchPatientHealthResults\n      parameters:\n        - description: Filter the patient health results for a specified patient\n          in: query\n          name: filter[patient]\n          required: true\n          schema:\n            type: string\n        - description: A comma-separated list of action identifiers\n          in: query\n          name: filter[actions]\n          schema:\n            type: string\n        - description: Filter results that occurred after the passed ISO date and time\n            string\n          in: query\n          name: filter[start_at]\n          schema:\n            type: string\n            format: dateTime\n        - description: Filter results that occurred before the passed ISO date and time\n            string\n          in: query\n          name: filter[end_at]\n          schema:\n            type: string\n            format: dateTime\n        - description: A comma-separated list of thread identifiers\n          in: query\n          name: filter[threads]\n          schema:\n            type: string\n        - description: \u003e\n            The start (inclusive) and end (exclusive) dates are ISO date and\n            time strings separated by `..`. Example for results created in\n            November 2017 (America/New_York):\n            `filter[created_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`\n          in: query\n          name: filter[created_at]\n          schema:\n            type: string\n        - description: \u003e\n            The start (inclusive) and end (exclusive) dates are ISO date and\n            time strings separated by `..`. Example for results updated in\n            November 2017 (America/New_York):\n            `filter[updated_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`\n          in: query\n          name: filter[updated_at]\n          schema:\n            type: string\n        - description: Page number\n          in: query\n          name: page[number]\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - description: Page size\n          in: query\n          name: page[size]\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 50\n            default: 10\n        - description: Page limit\n          in: query\n          name: page[limit]\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            default: 50\n        - description: Page cursor\n          in: query\n          name: page[after]\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchPatientHealthResultResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List patient health results\n      tags:\n        - result\n  \"/result/{id}\":\n    get:\n      description: Get patient health result by id.\n      operationId: fetchPatientHealthResult\n      parameters:\n        - description: Patient health result identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchPatientHealthResultResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get a patient health result\n      tags:\n        - result\n  /reward:\n    get:\n      description: Get a list of rewards matching the specified filters.\n      operationId: fetchRewards\n      parameters:\n        - description: \u003e\n            Patient identifier. Note that one of the following filters must be\n            specified: `filter[patient]`, `filter[groups]`,\n            `filter[organization]`.\n          in: query\n          name: filter[patient]\n          schema:\n            type: string\n        - description: Reward program activation identifier\n          in: query\n          name: filter[reward_program_activation]\n          schema:\n            type: string\n        - description: Thread identifier\n          in: query\n          name: filter[thread]\n          schema:\n            type: string\n        - description: \u003e\n            Comma-separated list of group ids. Note that one of the following\n            filters must be specified: `filter[patient]`, `filter[groups]`,\n            `filter[organization]`.\n          in: query\n          name: filter[groups]\n          schema:\n            type: string\n        - description: \u003e\n            Fitbit Plus organization id. Note that one of the following filters\n            must be specified: `filter[patient]`, `filter[groups]`,\n            `filter[organization]`.\n          in: query\n          name: filter[organization]\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchRewardsResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List rewards\n      tags:\n        - reward\n    post:\n      description: Create a reward for a patient.\n      operationId: createReward\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/CreateRewardRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateRewardResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Create a reward\n      tags:\n        - reward\n  \"/reward/{id}\":\n    get:\n      description: Get a reward record by id.\n      operationId: fetchReward\n      parameters:\n        - description: Reward identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchRewardResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get a reward\n      tags:\n        - reward\n  /reward_earning:\n    get:\n      description: Get a list of reward earnings matching the specified filters.\n      operationId: fetchRewardEarnings\n      parameters:\n        - description: Group identifiers\n          in: query\n          name: filter[groups]\n          required: true\n          schema:\n            type: string\n        - description: Patient identifier\n          in: query\n          name: filter[patient]\n          required: true\n          schema:\n            type: string\n        - description: If true, only returns those reward earnings for which\n            ready_for_fulfillment is true and fulfilled_at is null. If false,\n            only returns those reward earnings for which ready_for_fulfillment\n            is false and fulfilled_at is null.\n          in: query\n          name: filter[ready_for_fulfillment]\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchRewardEarningsResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List reward earnings\n      tags:\n        - reward earning\n    post:\n      description: Create a reward earning for a reward. There can only be one earning for\n        a reward. It is possilble to create multiple reward earnings\n        simultaneously by providing and array of reward earnings in the data\n        property.\n      operationId: createRewardEarning\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/CreateRewardEarningRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateRewardEarningResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Create a reward earning\n      tags:\n        - reward earning\n  \"/reward_earning/{id}\":\n    get:\n      description: Get a reward earning record by id.\n      operationId: fetchRewardEarning\n      parameters:\n        - description: Reward earning identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchRewardEarningResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get a reward earning\n      tags:\n        - reward earning\n  /reward_earning_fulfillment:\n    get:\n      description: Get a list of reward earning fulfillments matching the specified filters.\n      operationId: fetchRewardEarningFulfillments\n      parameters:\n        - description: Patient identifier\n          in: query\n          name: filter[patient]\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchRewardEarningFulfillmentsResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List reward earning fulfillments\n      tags:\n        - reward earning fulfillment\n    post:\n      description: Create a reward earning fulfillment for a reward earning. There can only\n        be one fulfillment for each earning.\n      operationId: createRewardEarningFulfillment\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/CreateRewardEarningFulfillmentRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateRewardEarningFulfillmentResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Create a reward earning fulfillment\n      tags:\n        - reward earning fulfillment\n  \"/reward_earning_fulfillment/{id}\":\n    get:\n      description: Get a reward earning fulfillment record by id.\n      operationId: fetchRewardEarningFulfillment\n      parameters:\n        - description: Reward earning fulfillment identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchRewardEarningFulfillmentResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get a reward earning fulfillment\n      tags:\n        - reward earning fulfillment\n  /reward_program:\n    get:\n      description: Get a list of reward programs matching the specified filters.\n      operationId: fetchRewardPrograms\n      parameters:\n        - description: \u003e\n            Comma-separated list of group identifiers. Note that one of the\n            following filters must be specified: `filter[groups]`,\n            `filter[organization]`.\n          in: query\n          name: filter[groups]\n          schema:\n            type: string\n        - description: \u003e\n            Fitbit Plus organization id. Note that one of the following filters\n            must be specified: `filter[groups]`, `filter[organization]`.\n          in: query\n          name: filter[organization]\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchRewardProgramsResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List reward programs\n      tags:\n        - reward program\n    post:\n      description: Create a reward program for a group.\n      operationId: createRewardProgram\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/CreateRewardProgramRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateRewardProgramResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Create a reward program\n      tags:\n        - reward program\n  \"/reward_program/{id}\":\n    get:\n      description: Get a reward program record by id.\n      operationId: fetchRewardProgram\n      parameters:\n        - description: Reward program identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchRewardProgramResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get a reward program\n      tags:\n        - reward program\n  \"/reward_program/{id}/group\":\n    get:\n      description: Get the group related to a reward program.\n      operationId: fetchRewardProgramGroup\n      parameters:\n        - description: Reward program identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchGroupsResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get group for a reward program\n      tags:\n        - reward program\n  /reward_program_activation:\n    get:\n      description: Get a list of reward program activations matching the specified filters.\n      operationId: fetchRewardProgramActivations\n      parameters:\n        - description: \u003e\n            Patient identifier. Note that one of the following filters must be\n            specified: `filter[patient]`, `filter[groups]`,\n            `filter[organization]`.\n          in: query\n          name: filter[patient]\n          schema:\n            type: string\n        - description: \u003e\n            Comma-separated list of group ids. Note that one of the following\n            filters must be specified: `filter[patient]`, `filter[groups]`,\n            `filter[organization]`.\n          in: query\n          name: filter[groups]\n          schema:\n            type: string\n        - description: \u003e\n            Fitbit Plus organization id. Note that one of the following filters\n            must be specified: `filter[patient]`, `filter[groups]`,\n            `filter[organization]`.\n          in: query\n          name: filter[organization]\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchRewardProgramActivationsResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: List reward program activations\n      tags:\n        - reward program activation\n    post:\n      description: Create a reward program activation for a patient. There can only be one\n        activation for a patient for a given reward program.\n      operationId: createRewardProgramActivation\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: \"#/components/schemas/CreateRewardProgramActivationRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateRewardProgramActivationResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n        \"409\":\n          description: Invalid Request\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/CreateOrUpdateErrorResponse\"\n      summary: Create a reward program activation\n      tags:\n        - reward program activation\n  \"/reward_program_activation/{id}\":\n    get:\n      description: Get a reward program activationrecord by id.\n      operationId: fetchRewardProgramActivation\n      parameters:\n        - description: Reward program activation identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchRewardProgramActivationResponse\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: \"#/components/schemas/FetchErrorResponse\"\n      summary: Get a reward program activation\n      tags:\n        - reward program activation\nx-tagGroups:\n  - name: Authentication (oauth)\n    tags:\n      - oauth\n  - name: Admin\n    tags:\n      - organization\n      - group\n      - coach\n      - reward program\n  - name: Patient Data\n    tags:\n      - action\n      - bundle\n      - calendar event\n      - calendar event response\n      - email history\n      - health profile\n      - health profile answer\n      - health profile question\n      - health question definition\n      - metric\n      - patient\n      - plan\n      - result\n      - reward\n      - reward earning\n      - reward earning fulfillment\n      - reward program activation\nservers:\n  - url: https://api.twinehealth.com/pub\ncomponents:\n  securitySchemes:\n    OAuth2:\n      description: \u003e\n        Fitbit Plus allows customers to access data for their organization using\n        client credentials.\n\n        OAuth2 is a safe and secure way to give you access.\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: /oauth/token\n          scopes:\n            group: access patients and data within a group\n            organization: access patients and data within an organization\n  schemas:\n    ActionMetric:\n      properties:\n        goal:\n          type: object\n        metric_type:\n          type: string\n        unit:\n          type: string\n        validations:\n          properties:\n            maximum:\n              properties:\n                unit:\n                  type: string\n                value:\n                  type: number\n              type: object\n            minimum:\n              properties:\n                unit:\n                  type: string\n                value:\n                  type: number\n              type: object\n          type: object\n      type: object\n    ActionResource:\n      properties:\n        attributes:\n          properties:\n            _thread:\n              type: string\n            adherence:\n              properties:\n                complete:\n                  type: integer\n                due:\n                  type: integer\n                streak:\n                  properties:\n                    count:\n                      type: integer\n                    updated_at:\n                      format: dateTime\n                      type: string\n                  type: object\n              readOnly: true\n              type: object\n            details:\n              additionalProperties: true\n              type: object\n            effective_from:\n              format: dateTime\n              type: string\n            effective_to:\n              format: dateTime\n              type: string\n            frequency_goal:\n              properties:\n                weeks:\n                  properties:\n                    days:\n                      items:\n                        description: Days of week that the action is scheduled for.\n                          Zero-indexed, ex 0 represents Sunday, etc.\n                        enum:\n                          - 0\n                          - 1\n                          - 2\n                          - 3\n                          - 4\n                          - 5\n                          - 6\n                        maxItems: 7\n                        type: integer\n                      type: array\n                  type: object\n              type: object\n            identifiers:\n              items:\n                $ref: \"#/components/schemas/Identifier\"\n              type: array\n            intake:\n              additionalProperties: true\n              type: object\n            metric_required:\n              type: boolean\n            metrics:\n              items:\n                $ref: \"#/components/schemas/ActionMetric\"\n              type: array\n            static_title:\n              readOnly: true\n              type: string\n            title:\n              type: string\n            tracking:\n              type: boolean\n            type:\n              enum:\n                - other_lifestyle\n              type: string\n            windows:\n              items:\n                $ref: \"#/components/schemas/ActionWindow\"\n              type: array\n          required:\n            - type\n            - title\n            - effective_from\n          type: object\n        id:\n          type: string\n        relationships:\n          properties:\n            plan:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n                links:\n                  type: object\n              type: object\n          type: object\n        type:\n          type: string\n      required:\n        - type\n        - id\n      type: object\n    ActionWindow:\n      properties:\n        _id:\n          type: string\n        title:\n          type: string\n        type:\n          type: string\n      required:\n        - type\n      type: object\n    Address:\n      properties:\n        city:\n          example: Cambridge\n          type: string\n        country:\n          type: string\n        district:\n          type: string\n        lines:\n          example:\n            - 1234 Any St.\n          items:\n            type: string\n          type: array\n        postal_code:\n          example: 2138\n          type: string\n        state:\n          example: MA\n          type: string\n        text:\n          type: string\n        type:\n          type: string\n        use:\n          type: string\n      type: object\n    ArchiveHistory:\n      properties:\n        archived:\n          example: true\n          type: boolean\n        modified_at:\n          example: 2016-06-03T13:15:22.000Z\n          format: dateTime\n          type: string\n        notes:\n          example: Patient called requesting opt out of coaching\n          type: string\n        reason:\n          example: Opted out of coaching\n          type: string\n      type: object\n    BundleResource:\n      properties:\n        attributes:\n          properties:\n            _thread:\n              type: string\n            effective_from:\n              format: dateTime\n              type: string\n            effective_to:\n              format: dateTime\n              type: string\n            title:\n              type: string\n            type:\n              type: string\n          required:\n            - type\n            - title\n            - effective_from\n          type: object\n        id:\n          type: string\n        relationships:\n          properties:\n            actions:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n                links:\n                  type: object\n              type: object\n            plan:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n                links:\n                  type: object\n              type: object\n          type: object\n        type:\n          type: string\n      required:\n        - type\n        - id\n      type: object\n    CalendarEventResource:\n      example:\n        attributes:\n          all_day: true\n          attendees:\n            - _id: 5ac7e74679f6868274a42e28\n              response_status: needsAction\n              user: 5a0c8e27a9d454cc150997c9\n            - _id: 5ac7e74679f6868274a42e27\n              response_status: needsAction\n              user: 5a0c8e27a9d454cc150997f7\n          completed_at: 2017-11-03T06:17:34.652Z\n          completed_by: 5a0c8e27a9d454cc150997c9\n          created_at: 2017-10-20T10:59:40.000Z\n          created_by: 5a0c8e27a9d454cc150997c9\n          end_at: 2017-11-03T08:00:00.000Z\n          start_at: 2017-11-03T04:00:00.000Z\n          time_zone: America/New_York\n          title: Plan Check-In\n          type: plan-check-in\n          updated_at: 2017-10-20T10:59:40.000Z\n          updated_by: 5a0c8e27a9d454cc150997c9\n        id: 5a0c8e2aa9d454cc1509a142\n        links:\n          self: /pub/calendar_event/5a0c8e2aa9d454cc1509a142\n        relationships:\n          owner:\n            data:\n              id: 5a0c8e27a9d454cc150997f7\n              type: patient\n            links:\n              related: /pub/calendar_event/5a0c8e2aa9d454cc1509a142/owner\n        type: calendar_event\n      properties:\n        attributes:\n          properties:\n            all_day:\n              description: True if the calendar event is an all day event, false otherwise.\n                Must be set to true for `plan-check-in` event type. If it is\n                true, then `start_at` and `end_at` must also be set to beginning\n                of day, except `plan-check-in` event type does not need an\n                `end_at` date. If it is false, then `start_at` and `end_at` must\n                be on the same day.\n              type: boolean\n            attendees:\n              description: List of attendees for the calendar event\n              items:\n                properties:\n                  response_status:\n                    description: Status of responses from attendees\n                    enum:\n                      - needsAction\n                      - declined\n                      - tentative\n                      - accepted\n                    type: string\n                  user:\n                    type: string\n                type: object\n              type: array\n            completed_at:\n              description: The date and time when the calendar event is marked as\n                completed. Only valid for `plan-check-in` event type.\n              example: 2017-11-03T06:17:34.652Z\n              format: ISODate\n              type: string\n            completed_by:\n              description: The coach who marked the calendar event as completed. Only valid\n                for `plan-check-in` event type.\n              type: object\n            description:\n              type: string\n            end_at:\n              description: The date and time when the calendar event ends. Not valid for\n                `plan-check-in` event type.\n              example: 2017-11-03T08:00:00.000Z\n              format: ISODate\n              type: string\n            location:\n              type: string\n            start_at:\n              description: The date and time when the calendar event starts\n              example: 2017-11-03T04:00:00.000Z\n              format: ISODate\n              type: string\n            time_zone:\n              description: The time zone in which the dates for the calendar event are\n                specified\n              example: America/New_York\n              type: string\n            title:\n              description: The title of the calendar event. Must not be empty or null\n              type: string\n            type:\n              description: The type of calendar event. Immutable after event creation.\n              enum:\n                - plan-check-in\n                - reminder\n                - telephone-call\n                - office-visit\n                - video-call\n              type: string\n          type: object\n        id:\n          type: string\n        links:\n          properties:\n            self:\n              example: /calendar_event/5a0c8e2aa9d454cc1509a142\n              pattern: /calendar_event/[0-9a-z]+\n              type: string\n          type: object\n        relationships:\n          properties:\n            owner:\n              description: The owner is the patient for whom the calendar event is created\n                specificially for\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n                links:\n                  properties:\n                    related:\n                      example: /pub/calendar_event/5a0c8e2aa9d454cc1509a142/owner\n                      pattern: /pub/calendar_event/[0-9a-z]+\n                      type: string\n                  type: object\n              required:\n                - data\n              type: object\n          type: object\n        type:\n          enum:\n            - calendar_event\n          type: string\n      type: object\n    CalendarEventResponseResource:\n      example:\n        attributes:\n          attendee: 5ac7e74679f6868274a42e28\n          response_status: accepted\n        id: 5ad0f966ceb0909e4bfa84dd\n        links:\n          self: /pub/calendar_event_response/5ad0f966ceb0909e4bfa84dd\n        relationships:\n          calendar_event:\n            data:\n              id: 5755db2a3db4179179999acf\n              type: calendar_event\n            links:\n              related: /pub/calendar_event_response/5ad0f966ceb0909e4bfa84dd/calendar_event\n          user:\n            data:\n              id: 5a0c8e27a9d454cc150997f7\n              type: user\n            links:\n              related: /pub/calendar_event_response/5ad0f966ceb0909e4bfa84dd/user\n        type: calendar_event_response\n      properties:\n        attributes:\n          properties:\n            attendee:\n              description: The attendee in the attendees list of the calendar event.\n              type: object\n            response_status:\n              description: The response status for the attendee.\n              enum:\n                - accepted\n                - declined\n                - tentative\n              type: string\n          type: object\n        id:\n          type: string\n        links:\n          properties:\n            self:\n              example: /calendar_event_response/5ad0f966ceb0909e4bfa84dd\n              pattern: /calendar_event_response/[0-9a-z]+\n              type: string\n          type: object\n        relationships:\n          properties:\n            calendar_event:\n              description: The calendar_event is the calendar event for which the calendar\n                event response is created specificially for\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n                links:\n                  properties:\n                    related:\n                      example: /pub/calendar_event_response/5ad0f966ceb0909e4bfa84dd/calendar_event\n                      pattern: /pub/calendar_event_response/[0-9a-z]+\n                      type: string\n                  type: object\n              required:\n                - data\n              type: object\n            user:\n              description: The user is the coach or patient for whom the calendar event\n                response is created specificially for\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n                links:\n                  properties:\n                    related:\n                      example: /pub/calendar_event_response/5ad0f966ceb0909e4bfa84dd/user\n                      pattern: /pub/calendar_event_response/[0-9a-z]+\n                      type: string\n                  type: object\n              required:\n                - data\n              type: object\n          type: object\n        type:\n          enum:\n            - calendar_event_response\n          type: string\n      type: object\n    CoachResource:\n      properties:\n        attributes:\n          properties:\n            first_name:\n              example: Clarisa\n              type: string\n            last_name:\n              example: Rivera\n              type: string\n          type: object\n        id:\n          example: 57b36e3c04ad8c2224f2af38\n          type: string\n        links:\n          properties:\n            self:\n              example: /coach/57b36e3c04ad8c2224f2af38\n              pattern: /coach/[0-9a-z]+\n              type: string\n          readOnly: true\n          required:\n            - self\n          type: object\n        type:\n          enum:\n            - coach\n          example: coach\n          type: string\n      required:\n        - id\n        - type\n        - attributes\n      type: object\n    CollectionResponseLinks:\n      properties:\n        last:\n          type: string\n        next:\n          type: string\n        prev:\n          type: string\n        self:\n          type: string\n      type: object\n    CreateActionRequest:\n      example:\n        data:\n          attributes:\n            effective_from: 2017-02-20T11:12:13.000Z\n            frequency_goal:\n              weeks:\n                days:\n                  - 0\n            metrics:\n              - goal:\n                  data:\n                    diastolic:\n                      unit: mmHg\n                      value: 95\n                    systolic:\n                      unit: mmHg\n                      value: 150\n                metric_type: blood_pressure\n                unit: mmHg\n            title: Record Blood Pressure\n            type: blood_pressure\n          relationships:\n            bundles:\n              data:\n                - id: 58aacf0d076adcef394bac30\n                  type: bundle\n            plan:\n              data:\n                id: 58aacf0d076adcef394bac35\n                type: patient_plan_summary\n          type: action\n      properties:\n        data:\n          $ref: \"#/components/schemas/ActionResource\"\n      required:\n        - data\n      type: object\n    CreateActionResponse:\n      example:\n        data:\n          attributes:\n            _thread: blood_pressure\n            adherence:\n              complete: 0\n              due: 0\n              streak:\n                count: 0\n            created_at: 2017-02-20T11:12:13.000Z\n            created_by: 596541ec076adcef394bac2d\n            effective_from: 2017-02-20T11:12:13.000Z\n            frequency_goal:\n              weeks:\n                days:\n                  - 0\n            frequency_goal_prorated: 0\n            identifiers: []\n            metric_required: false\n            metrics:\n              - _id: 58aacf0d076adcef394bac37\n                accepted_values: []\n                goal:\n                  data:\n                    diastolic:\n                      unit: mmHg\n                      value: 95\n                    systolic:\n                      unit: mmHg\n                      value: 150\n                metric_type: blood_pressure\n                unit: mmHg\n            options: []\n            title: Record Blood Pressure\n            tracking: true\n            type: blood_pressure\n            updated_at: 2017-02-20T11:12:13.000Z\n            updated_by: 596541ec076adcef394bac2d\n            windows: []\n          id: 58aacf0d076adcef394bac36\n          links:\n            self: /action/58aacf0d076adcef394bac36\n          relationships:\n            bundles:\n              data:\n                - id: 58aacf0d076adcef394bac30\n                  type: bundle\n              links:\n                related: /action/58aacf0d076adcef394bac36/bundles\n            plan:\n              data:\n                id: 58aacf0d076adcef394bac35\n                type: patient_plan_summary\n              links:\n                related: /action/58aacf0d076adcef394bac36/plan\n          type: action\n        included: []\n        meta:\n          req_id: 014ea6d2-4717-4915-b4bc-98454180614e\n      properties:\n        data:\n          $ref: \"#/components/schemas/ActionResource\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      required:\n        - data\n      type: object\n    CreateBundleRequest:\n      properties:\n        data:\n          $ref: \"#/components/schemas/BundleResource\"\n      required:\n        - data\n      type: object\n    CreateBundleResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/BundleResource\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      required:\n        - data\n      type: object\n    CreateCalendarEventRequest:\n      example:\n        data:\n          attributes:\n            all_day: true\n            attendees:\n              - user: 5a0c8e27a9d454cc150997c9\n              - user: 5a0c8e27a9d454cc150997f7\n            start_at: 2018-02-20T00:00:00Z\n            time_zone: America/New_York\n            title: Plan Check-In\n            type: plan-check-in\n          relationships:\n            owner:\n              data:\n                id: 5a0c8e27a9d454cc150997f7\n                type: patient\n          type: calendar_event\n      properties:\n        data:\n          properties:\n            attributes:\n              allOf:\n                - $ref: \"#/components/schemas/CalendarEventResource/properties/attr\\\n                    ibutes\"\n              required:\n                - type\n                - start_at\n                - title\n                - attendees\n            relationships:\n              properties:\n                owner:\n                  properties:\n                    data:\n                      $ref: \"#/components/schemas/CalendarEventResource/properties/\\\n                        relationships/properties/owner/properties/data\"\n                  required:\n                    - data\n                  type: object\n              type: object\n            type:\n              $ref: \"#/components/schemas/CalendarEventResource/properties/type\"\n          required:\n            - type\n            - attributes\n            - relationships\n          type: object\n      required:\n        - data\n      type: object\n    CreateCalendarEventResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/CalendarEventResource\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      type: object\n    CreateCalendarEventResponseRequest:\n      example:\n        data:\n          attributes:\n            attendee: 5ac7e74679f6868274a42e28\n            response_status: accepted\n          relationships:\n            calendar_event:\n              data:\n                id: 5755db2a3db4179179999acf\n                type: calendar_event\n            user:\n              data:\n                id: 5a0c8e27a9d454cc150997f7\n                type: user\n          type: calendar_event_response\n      properties:\n        data:\n          properties:\n            attributes:\n              allOf:\n                - $ref: \"#/components/schemas/CalendarEventResponseResource/propert\\\n                    ies/attributes\"\n              required:\n                - attendee\n                - response_status\n            relationships:\n              properties:\n                calendar_event:\n                  properties:\n                    data:\n                      $ref: \"#/components/schemas/CalendarEventResponseResource/pro\\\n                        perties/relationships/properties/calendar_event/propert\\\n                        ies/data\"\n                  required:\n                    - data\n                  type: object\n                user:\n                  properties:\n                    data:\n                      $ref: \"#/components/schemas/CalendarEventResponseResource/pro\\\n                        perties/relationships/properties/user/properties/data\"\n                  required:\n                    - data\n                  type: object\n              type: object\n            type:\n              $ref: \"#/components/schemas/CalendarEventResponseResource/properties/\\\n                type\"\n          required:\n            - type\n            - attributes\n            - relationships\n          type: object\n      required:\n        - data\n      type: object\n    CreateGroupRequest:\n      example:\n        data:\n          attributes:\n            name: New Group\n          type: group\n      properties:\n        data:\n          $ref: \"#/components/schemas/GroupResource\"\n      required:\n        - data\n      type: object\n    CreateGroupResponse:\n      example:\n        data:\n          attributes:\n            name: New Group\n          id: 5817acae6f5316c0d05ba8b8\n          links:\n            self: /pub/group/5817acae6f5316c0d05ba8b8\n          type: group\n        meta:\n          req_id: 6ac6d0f2-00b2-4031-8c35-97b2bfb0aced\n      properties:\n        data:\n          $ref: \"#/components/schemas/GroupResource\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      required:\n        - data\n      type: object\n    CreateOrUpdateErrorResponse:\n      example:\n        errors:\n          - code: Unauthorized\n            detail: A valid bearer token is required\n            status: \"401\"\n        meta:\n          req_id: d07c8b12-c95e-4a06-8424-92aac94bb445\n      properties:\n        errors:\n          $ref: \"#/components/schemas/Error\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      type: object\n    CreateOrUpdateMetaResponse:\n      properties:\n        ignored:\n          items:\n            type: string\n          type: array\n        req_id:\n          type: string\n      type: object\n    CreatePatientHealthMetricRequest:\n      properties:\n        data:\n          $ref: \"#/components/schemas/PatientHealthMetricCreateResource\"\n        meta:\n          properties:\n            ignore_duplicates:\n              description: \u003e\n                If `true`, the patient health metric will be ignored if there is\n                an existing patient health metric for\n\n                the same patient, with the same `type` and same `occurred_at`.\n              type: boolean\n          type: object\n      required:\n        - data\n      type: object\n    CreatePatientHealthMetricResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/PatientHealthMetricResource\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      required:\n        - data\n      type: object\n    CreatePatientRequest:\n      example:\n        data:\n          attributes:\n            first_name: Jack\n            last_name: Frost\n          relationships:\n            groups:\n              data:\n                - id: 5755db2a3db4179179999acf\n                  type: group\n          type: patient\n      properties:\n        data:\n          $ref: \"#/components/schemas/PatientCreateResource\"\n        meta:\n          properties:\n            ignore_duplicates:\n              default: false\n              description: \u003e\n                If `true`, patients with any conflicting identifiers (same\n                `system` and `value`) will be ignored.\n\n                Useful for gracefully skipping duplicates after errors occur during bulk create.\n              type: boolean\n          type: object\n      required:\n        - data\n      type: object\n    CreatePatientResponse:\n      example:\n        data:\n          attributes:\n            addresses: []\n            archive_history: []\n            archived: false\n            first_name: Jack\n            identifiers: []\n            last_name: Frost\n            phone_numbers: []\n            updated_at: 2016-11-01T01:07:33.121Z\n          id: 5817ead56f5316c0d05ba8bf\n          links:\n            self: /pub/patient/5817ead56f5316c0d05ba8bf\n            twine_web_app: http://10.0.1.55:9000/#/coach/patient/5817ead56f5316c0d05ba8bf\n          relationships:\n            coaches:\n              data: []\n              links:\n                related: /pub/patient/5817ead56f5316c0d05ba8bf/coaches\n            groups:\n              data:\n                - id: 5755db2a3db4179179999acf\n                  type: group\n              links:\n                related: /pub/patient/5817ead56f5316c0d05ba8bf/groups\n          type: patient\n        included: []\n        meta:\n          req_id: 5b813ad3-cabc-418f-add4-1e53bc69f7cb\n      properties:\n        data:\n          $ref: \"#/components/schemas/PatientResource\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      required:\n        - data\n      type: object\n    CreateRewardEarningFulfillmentRequest:\n      properties:\n        data:\n          $ref: \"#/components/schemas/RewardEarningFulfillmentResource\"\n      required:\n        - data\n      type: object\n    CreateRewardEarningFulfillmentResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/RewardEarningFulfillmentResource\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      required:\n        - data\n      type: object\n    CreateRewardEarningRequest:\n      properties:\n        data:\n          $ref: \"#/components/schemas/RewardEarningResource\"\n      required:\n        - data\n      type: object\n    CreateRewardEarningResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/RewardEarningResource\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      required:\n        - data\n      type: object\n    CreateRewardProgramActivationRequest:\n      properties:\n        data:\n          $ref: \"#/components/schemas/RewardProgramActivationResource\"\n      required:\n        - data\n      type: object\n    CreateRewardProgramActivationResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/RewardProgramActivationResource\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      required:\n        - data\n      type: object\n    CreateRewardProgramRequest:\n      properties:\n        data:\n          $ref: \"#/components/schemas/RewardProgramResource\"\n      required:\n        - data\n      type: object\n    CreateRewardProgramResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/RewardProgramResource\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      required:\n        - data\n      type: object\n    CreateRewardRequest:\n      properties:\n        data:\n          $ref: \"#/components/schemas/RewardResource\"\n      required:\n        - data\n      type: object\n    CreateRewardResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/RewardResource\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      required:\n        - data\n      type: object\n    CreateTokenRequest:\n      example:\n        data:\n          attributes:\n            client_id: 95c78ab2-167f-40b8-8bec-8398d4b87454\n            client_secret: 35d18dc9-a3dd-4948-b787-063a490b9354\n            grant_type: client_credentials\n          type: oauth/token\n      properties:\n        data:\n          properties:\n            attributes:\n              properties:\n                client_id:\n                  description: Contact Fitbit Plus API Support to get a client id and\n                    secret.\n                  example: 19391dc5-8af8-4152-93e8-74ff9361607e\n                  type: string\n                client_secret:\n                  description: Contact Fitbit Plus API Support to get a client id and\n                    secret. Secret is required if grant_type is\n                    \"client_credentials\"\n                  example: 63eca384-7a65-42e2-872b-afd3e8659d0a\n                  type: string\n                grant_type:\n                  enum:\n                    - refresh_token\n                    - client_credentials\n                  example: client_credentials\n                  type: string\n                refresh_token:\n                  description: Required if grant_type is \"refresh_token\"\n                  example: b7dcc4a4-593b-4410-a0c5-97ae48939396\n                  type: string\n              required:\n                - client_id\n                - grant_type\n              type: object\n            type:\n              enum:\n                - token\n              example: token\n              type: string\n          required:\n            - attributes\n          type: object\n      required:\n        - data\n      type: object\n    CreateTokenResponse:\n      example:\n        data:\n          attributes:\n            access_token: c1b83534-76c1-4a27-b1d4-8140e24dd7c6\n            expires_in: 3601\n            refresh_token: a38d192a-76fd-4b1d-954c-893c9d29c8f4\n            token_type: bearer\n          id: 5817a24d678a7c2cbf5df3ee\n          relationships:\n            groups:\n              data:\n                - id: 5755db2a3db4179179999acf\n                  type: group\n              links:\n                related: /pub/oauth/token/5817a24d678a7c2cbf5df3ee/groups\n          type: oauth/token\n        meta:\n          req_id: 2de51f1a-bafa-4e48-a0d0-cd8d4a9ffb28\n      properties:\n        data:\n          $ref: \"#/components/schemas/TokenResource\"\n        included:\n          items:\n            $ref: \"#/components/schemas/GroupResource\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      required:\n        - data\n      type: object\n    EmailHistoryResource:\n      example:\n        attributes:\n          created_at: 2017-07-07T19:15:56.229Z\n          created_by: 595fd88ef4be5b1a797ff19b\n          email_address: tony@example.com\n          email_type: invite\n          send_time: 2017-02-25T13:35:01.000Z\n          status_times:\n            delivered: 2017-02-25T13:35:03.000Z\n            open: 2017-02-25T14:20:00.000Z\n            processed: 2017-02-25T13:35:02.000Z\n          twine_email_id: 576226e5-7e25-4469-b10d-2bc6a725bfbc\n          updated_at: 2017-07-07T19:15:56.229Z\n          updated_by: 595fd88ef4be5b1a797ff19b\n        id: 595fddec28c5041b84467592\n        links:\n          self: /pub/email_history/595fddec28c5041b84467592\n        relationships:\n          receiver:\n            data:\n              id: 595fddea28c5041b84466bbe\n              type: patient\n            links:\n              related: /pub/email_history/595fddec28c5041b84467592/receiver\n          sender:\n            links:\n              related: /pub/email_history/595fddec28c5041b84467592/sender\n        type: email_history\n      properties:\n        attributes:\n          properties:\n            email_address:\n              description: Address email was sent to.\n              type: string\n            email_type:\n              description: Type of email.\n              type: string\n            send_time:\n              description: Time email was sent.\n              format: dateTime\n              type: string\n            status_times:\n              description: Status of email. Multiple statuses may be defined. The current\n                status is the one with the most recent date.\n              properties:\n                bounce:\n                  description: Time email was bounced.\n                  format: dateTime\n                  type: string\n                click:\n                  description: Time email was clicked.\n                  format: dateTime\n                  type: string\n                deferred:\n                  description: Time email was deferred.\n                  format: dateTime\n                  type: string\n                delivered:\n                  description: Time email was delivered.\n                  format: dateTime\n                  type: string\n                dropped:\n                  description: Time email was dropped.\n                  format: dateTime\n                  type: string\n                open:\n                  description: Time email was opened.\n                  format: dateTime\n                  type: string\n                processed:\n                  description: Time email was processed.\n                  format: dateTime\n                  type: string\n                spamreport:\n                  description: Time email was reported as spam.\n                  format: dateTime\n                  type: string\n                unsubscribe:\n                  description: Time email was unsubscribed from.\n                  format: dateTime\n                  type: string\n              type: object\n            twine_email_id:\n              description: Unique identifier for this email.\n              type: string\n          type: object\n        id:\n          type: string\n        relationships:\n          properties:\n            receiver:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n              type: object\n            sender:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n              type: object\n          type: object\n        type:\n          type: string\n      required:\n        - type\n      type: object\n    Error:\n      properties:\n        code:\n          enum:\n            - Forbidden\n            - InvalidParameter\n            - InvalidBodyParameter\n            - ResourceNotFound\n            - Unauthorized\n            - InvalidCredentials\n            - InvalidGrantType\n          type: string\n        detail:\n          type: string\n        source:\n          properties:\n            parameter:\n              type: string\n            pointer:\n              type: string\n          type: object\n        status:\n          type: string\n        title:\n          type: string\n      type: object\n    FetchActionResponse:\n      example:\n        data:\n          attributes:\n            _thread: weight\n            adherence:\n              complete: 1\n              due: 1\n              streak:\n                count: 1\n                updated_at: 2017-07-11T21:13:13.215Z\n            details:\n              some: mixed value\n            effective_from: 2017-07-10T21:13:13.212Z\n            effective_to: 2017-07-11T21:13:13.215Z\n            frequency_goal:\n              weeks:\n                days:\n                  - 0\n            frequency_goal_prorated: 0\n            identifiers:\n              - _id: 59653f699fc8be3938f04494\n                label: Super Health Actions\n                system: http://super.health.example.com\n                value: action-0123\n            metric_required: true\n            metrics:\n              - _id: 59653f699fc8be3938f04493\n                accepted_values: []\n                goal:\n                  data:\n                    unit: lb\n                    value: 210\n                metric_type: weight\n                unit: lb\n                validations:\n                  maximum:\n                    unit: lb\n                    value: 999\n                  minimum:\n                    unit: lb\n                    value: 0\n            options: []\n            title: Measure Weight\n            tracking: true\n            type: weight\n            windows:\n              - _id: 59653f699fc8be3938f04492\n                title: Morning\n                type: morning\n          id: 59653f699fc8be3938f04491\n          links:\n            self: /action/59653f699fc8be3938f04491\n          relationships:\n            bundles:\n              data: []\n              links:\n                related: /action/59653f699fc8be3938f04491/bundles\n            plan:\n              links:\n                related: /action/59653f699fc8be3938f04491/plan\n          type: action\n        included: []\n        meta:\n          req_id: 63bf4340-f256-400e-b391-d801d2a251f6\n      properties:\n        data:\n          $ref: \"#/components/schemas/ActionResource\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchBundleResponse:\n      example:\n        data:\n          attributes:\n            _actions:\n              - 596535d9608f63d531b7e344\n            _thread: \"123\"\n            effective_from: 2017-07-11T20:31:25.000Z\n            effective_to: 2017-07-11T20:32:25.000Z\n            title: Weight\n            type: weight\n          id: 596535d9608f63d531b7e34a\n          links:\n            self: /bundle/596535d9608f63d531b7e34a\n          relationships:\n            actions:\n              data:\n                - id: 596535d9608f63d531b7e344\n                  type: action\n              links:\n                related: /bundle/596535d9608f63d531b7e34a/actions\n            plan:\n              links:\n                related: /bundle/596535d9608f63d531b7e34a/plan\n          type: bundle\n        included: []\n        meta:\n          req_id: c0f8d53a-d763-4beb-b0b1-9ec6da146a14\n      properties:\n        data:\n          $ref: \"#/components/schemas/BundleResource\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchCalendarEventResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/CalendarEventResource\"\n        included:\n          description: \u003e\n            Related resources which are included in the response based on the\n            `include` param.\n\n            Attributes of each resource will vary depending on the type.\n\n            See [patient](#operation/fetchPatient)\n          items:\n            $ref: \"#/components/schemas/Resource\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      type: object\n    FetchCalendarEventsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/CalendarEventResource\"\n          type: array\n        included:\n          description: \u003e\n            Related resources which are included in the response based on the\n            `include` param.\n\n            Attributes of each resource will vary depending on the type.\n\n            See [patient](#operation/fetchPatient)\n          items:\n            $ref: \"#/components/schemas/Resource\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionResponseLinks\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      type: object\n    FetchCoachResponse:\n      example:\n        data:\n          attributes:\n            first_name: Clarisa\n            last_name: Rivera\n          id: 581630c3237d84a9403533c6\n          links:\n            self: /pub/coach/581630c3237d84a9403533c6\n          type: coach\n        included: []\n        meta:\n          req_id: b928037e-98ed-434f-b0c4-d74b1a38a560\n      properties:\n        data:\n          $ref: \"#/components/schemas/CoachResource\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchCoachesResponse:\n      example:\n        data:\n          - attributes:\n              first_name: Clarisa\n              last_name: Rivera\n            id: 581630c3237d84a9403533c6\n            links:\n              self: /pub/coach/581630c3237d84a9403533c6\n            type: coach\n        included: []\n        links:\n          self: /pub/patient/58163112237d84a94035f78b/coaches\n        meta:\n          count: 1\n          req_id: 48c47326-0c8b-4c5e-85da-7fc0d00f1e4d\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/CoachResource\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchEmailHistoriesResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/EmailHistoryResource\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchEmailHistoryResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/EmailHistoryResource\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchErrorResponse:\n      example:\n        errors:\n          - code: Unauthorized\n            detail: A valid bearer token is required\n            status: \"401\"\n        meta:\n          req_id: d07c8b12-c95e-4a06-8424-92aac94bb445\n      properties:\n        errors:\n          $ref: \"#/components/schemas/Error\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      type: object\n    FetchGroupResponse:\n      example:\n        data:\n          attributes:\n            name: Patients Lead\n          id: 5755db2a3db4179179999acf\n          links:\n            self: /pub/group/5755db2a3db4179179999acf\n          type: group\n        meta:\n          req_id: 2b59851e-0f6c-4a8f-a8a6-15bd7c0346e7\n      properties:\n        data:\n          $ref: \"#/components/schemas/GroupResource\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchGroupsResponse:\n      example:\n        data:\n          - attributes:\n              name: Patients Lead\n            id: 5755db2a3db4179179999acf\n            links:\n              self: /pub/group/5755db2a3db4179179999acf\n            type: group\n        links:\n          self: /pub/oauth/token/5817a24d678a7c2cbf5df3ee/groups\n        meta:\n          count: 1\n          req_id: ab554093-6081-4d37-aa7b-ca6312367ca4\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/GroupResource\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchHealthProfileAnswerResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/HealthProfileAnswerResource\"\n        included:\n          description: \u003e\n            Related resources which are included in the response based on the\n            `include` param.\n\n            Attributes of each resource will vary depending on the type.\n\n            See [patient](#operation/fetchPatient)\n          items:\n            $ref: \"#/components/schemas/Resource\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchHealthProfileAnswersResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/HealthProfileAnswerResource\"\n          type: array\n        included:\n          description: \u003e\n            Related resources which are included in the response based on the\n            `include` param.\n\n            Attributes of each resource will vary depending on the type.\n\n            See [patient](#operation/fetchPatient)\n          items:\n            $ref: \"#/components/schemas/Resource\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionResponseLinks\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchHealthProfileQuestionResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/HealthProfileQuestionResource\"\n        included:\n          description: \u003e\n            Related resources which are included in the response based on the\n            `include` param.\n\n            Attributes of each resource will vary depending on the type.\n\n            See [question_definition](#operation/fetchHealthQuestionDefinition), [answer](#operation/fetchHealthProfileAnswer)\n          items:\n            $ref: \"#/components/schemas/Resource\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchHealthProfileQuestionsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/HealthProfileQuestionResource\"\n          type: array\n        included:\n          description: \u003e\n            Related resources which are included in the response based on the\n            `include` param.\n\n            Attributes of each resource will vary depending on the type.\n\n            See [question_definition](#operation/fetchHealthQuestionDefinition), [answer](#operation/fetchHealthProfileAnswer)\n          items:\n            $ref: \"#/components/schemas/Resource\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionResponseLinks\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchHealthProfileResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/HealthProfileResource\"\n        included:\n          description: \u003e\n            Related resources which are included in the response based on the\n            `include` param.\n\n            Attributes of each resource will vary depending on the type.\n\n            See [patient](#operation/fetchPatient), [question](#operation/fetchHealthProfileQuestion)\n          items:\n            $ref: \"#/components/schemas/Resource\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchHealthProfilesResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/HealthProfileResource\"\n          type: array\n        included:\n          description: \u003e\n            Related resources which are included in the response based on the\n            `include` param.\n\n            Attributes of each resource will vary depending on the type.\n\n            See [patient](#operation/fetchPatient), [question](#operation/fetchHealthProfileQuestion)\n          items:\n            $ref: \"#/components/schemas/Resource\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionResponseLinks\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchHealthQuestionDefinitionResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/HealthQuestionDefinitionResource\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchHealthQuestionDefinitionsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/HealthQuestionDefinitionResource\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionResponseLinks\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchMetaResponse:\n      properties:\n        count:\n          type: integer\n        req_id:\n          type: string\n      type: object\n    FetchOrganizationResponse:\n      example:\n        data:\n          attributes:\n            name: Health Activation Partners\n          id: 5873b63605376e337a89d64a\n          links:\n            self: /pub/organization/5873b63605376e337a89d64a\n          type: organization\n        meta:\n          req_id: aeb94ed8-d7f9-4e72-a78f-e276c4f52c2a\n      properties:\n        data:\n          $ref: \"#/components/schemas/OrganizationResource\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchPatientHealthMetricResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/PatientHealthMetricResource\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionResponseLinks\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchPatientHealthResultResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/PatientHealthResultResource\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionResponseLinks\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchPatientPlanSummariesResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/PatientPlanSummaryResource\"\n          type: array\n        included:\n          description: \u003e\n            Related resources which are included in the response based on the\n            `include` param.\n\n            Attributes of each resource will vary depending on the type.\n\n            See [action](#operation/fetchAction), [bundle](#operation/fetchBundle) and [patient](#operation/fetchPatient)\n          items:\n            $ref: \"#/components/schemas/Resource\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchPatientPlanSummaryResponse:\n      example:\n        data:\n          attributes:\n            adherence:\n              complete: 0\n              due: 0\n              streak:\n                count: 0\n            critical:\n              blood_glucose:\n                data:\n                  maximum:\n                    unit: mg/dL\n                    value: 300\n                  minimum:\n                    unit: mg/dL\n                    value: 70\n              effective_from: 2017-07-01T04:00:00.000Z\n            effective_from: 2017-07-01T04:00:00.000Z\n            window_notification_times:\n              afternoon: 43200\n              evening: 64800\n              morning: 25200\n              night: 75600\n            window_order: []\n          id: 5964f831f65725bf25558b50\n          links:\n            self: /patient_plan_summary/5964f831f65725bf25558b50\n          relationships:\n            actions:\n              data:\n                - id: 5964f831f65725bf25558b4b\n                  type: action\n              links:\n                related: /patient_plan_summary/5964f831f65725bf25558b50/actions\n            bundles:\n              data: []\n              links:\n                related: /patient_plan_summary/5964f831f65725bf25558b50/bundles\n            current_results:\n              data: []\n              links:\n                related: /patient_plan_summary/5964f831f65725bf25558b50/current_results\n            patient:\n              data:\n                id: 5964f831f65725bf25558b4f\n                type: patient\n              links:\n                related: /patient_plan_summary/5964f831f65725bf25558b50/patient\n          type: patient_plan_summary\n        included:\n          - attributes:\n              _thread: blood_pressure\n              adherence:\n                complete: 0\n                due: 0\n                streak:\n                  count: 0\n              effective_from: 2017-07-01T04:00:00.000Z\n              frequency_goal:\n                weeks:\n                  days:\n                    - 0\n                    - 1\n                    - 2\n                    - 3\n                    - 4\n                    - 5\n                    - 6\n              frequency_goal_prorated: 0\n              identifiers: []\n              metric_required: false\n              metrics:\n                - _id: 5964f831f65725bf25558b51\n                  accepted_values: []\n                  goal:\n                    data:\n                      diastolic:\n                        unit: mmHg\n                        value: 95\n                      systolic:\n                        unit: mmHg\n                        value: 150\n                  metric_type: blood_pressure\n                  unit: mmHg\n              options: []\n              title: Record Blood Pressure\n              tracking: true\n              type: blood_pressure\n              windows: []\n            id: 5964f831f65725bf25558b4b\n            links:\n              self: /action/5964f831f65725bf25558b4b\n            relationships:\n              bundles:\n                data: []\n                links:\n                  related: /action/5964f831f65725bf25558b4b/bundles\n              plan:\n                links:\n                  related: /action/5964f831f65725bf25558b4b/plan\n            type: action\n        meta:\n          req_id: e0e78ef5-c0fd-415b-9b9f-a1b5c77c1198\n      properties:\n        data:\n          $ref: \"#/components/schemas/PatientPlanSummaryResource\"\n        included:\n          description: \u003e\n            Related resources which are included in the response based on the\n            `include` param.\n\n            Attributes of each resource will vary depending on the type.\n\n            See [action](#operation/fetchAction), [bundle](#operation/fetchBundle) and [patient](#operation/fetchPatient)\n          items:\n            $ref: \"#/components/schemas/Resource\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchPatientResponse:\n      example:\n        data:\n          attributes:\n            addresses: []\n            archive_history: []\n            archived: false\n            birth_date: 1938-10-04\n            first_name: Lucy\n            identifiers:\n              - label: Fitbit Plus Sample Data Filler Patient\n                system: twine-filler-patient\n                value: filler-92\n            last_name: Bernhard\n            phone_numbers:\n              - primary: true\n                value: 880-136-7979 x6183\n              - primary: false\n                value: 919.814.3552 x40123\n            statement:\n              updated_at: 2016-03-16T13:32:57.000Z\n              updated_by: 5c509cc2f60e34018180b57c\n              value: Enjoying nature.\n            updated_at: 2016-03-16T13:32:57.000Z\n          id: 58163112237d84a94035f78b\n          links:\n            self: /pub/patient/58163112237d84a94035f78b\n            twine_web_app: http://10.0.1.55:9000/#/coach/admin/coaches/58163112237d84a94035f78b/profile\n          relationships:\n            coaches:\n              data:\n                - id: 581630c3237d84a9403533c6\n                  meta:\n                    primary: true\n                  type: coach\n              links:\n                related: /pub/patient/58163112237d84a94035f78b/coaches\n            groups:\n              data:\n                - id: 5755db2a3db4179179999acf\n                  type: group\n              links:\n                related: /pub/patient/58163112237d84a94035f78b/groups\n          type: patient\n        included: []\n        meta:\n          req_id: 23001d51-669b-4948-b9fa-11dbffdf8ced\n      properties:\n        data:\n          $ref: \"#/components/schemas/PatientResource\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchPatientsResponse:\n      example:\n        data:\n          - attributes:\n              addresses: []\n              archive_history: []\n              archived: false\n              birth_date: 1938-10-04\n              first_name: Lucy\n              identifiers:\n                - label: Fitbit Plus Sample Data Filler Patient\n                  system: twine-filler-patient\n                  value: filler-92\n              last_name: Bernhard\n              phone_numbers:\n                - primary: true\n                  value: 880-136-7979 x6183\n                - primary: false\n                  value: 919.814.3552 x40123\n              statement:\n                updated_at: 2016-03-16T13:32:57.000Z\n                updated_by: 5c509cc2f60e34018180b57c\n                value: Enjoying nature.\n              updated_at: 2016-03-16T13:32:57.000Z\n            id: 58163112237d84a94035f78b\n            links:\n              self: /pub/patient/58163112237d84a94035f78b\n              twine_web_app: http://10.0.1.55:9000/#/coach/admin/coaches/58163112237d84a94035f78b/profile\n            relationships:\n              coaches:\n                data:\n                  - id: 581630c3237d84a9403533c6\n                    meta:\n                      primary: true\n                    type: coach\n                links:\n                  related: /pub/patient/58163112237d84a94035f78b/coaches\n              groups:\n                data:\n                  - id: 5755db2a3db4179179999acf\n                    type: group\n                links:\n                  related: /pub/patient/58163112237d84a94035f78b/groups\n            type: patient\n          - attributes:\n              addresses: []\n              birth_date: 1983-03-16\n              email_address: annette.parisian@example.com\n              first_name: Annette\n              identifiers:\n                - label: Fitbit Plus Sample Data Filler Patient\n                  system: twine-filler-patient\n                  value: filler-5\n              last_name: Parisian\n              phone_numbers:\n                - primary: true\n                  value: 044.758.5704 x1965\n              updated_at: 2016-02-04T12:55:03.000Z\n            id: 58163103237d84a94035f0b3\n            links:\n              self: /pub/patient/58163103237d84a94035f0b3\n              twine_web_app: http://10.0.1.55:9000/#/coach/admin/coaches/58163103237d84a94035f0b3/profile\n            relationships:\n              coaches:\n                data:\n                  - id: 581630c3237d84a9403533c6\n                    meta:\n                      primary: true\n                    type: coach\n                links:\n                  related: /pub/patient/58163103237d84a94035f0b3/coaches\n              groups:\n                data:\n                  - id: 5755db2a3db4179179999acf\n                    type: group\n                links:\n                  related: /pub/patient/58163103237d84a94035f0b3/groups\n            type: patient\n          - attributes:\n              addresses: []\n              birth_date: 1932-04-06\n              email_address: lexi.thompson@example.com\n              first_name: Lexi\n              identifiers:\n                - label: Fitbit Plus Sample Data Filler Patient\n                  system: twine-filler-patient\n                  value: filler-3\n              last_name: Thompson\n              phone_numbers:\n                - primary: true\n                  value: 1-977-830-6179 x26334\n              updated_at: 2016-01-23T16:12:07.000Z\n            id: 58163103237d84a94035f043\n            links:\n              self: /pub/patient/58163103237d84a94035f043\n              twine_web_app: http://10.0.1.55:9000/#/coach/admin/coaches/58163103237d84a94035f043/profile\n            relationships:\n              coaches:\n                data:\n                  - id: 581630c3237d84a9403533c6\n                    meta:\n                      primary: true\n                    type: coach\n                links:\n                  related: /pub/patient/58163103237d84a94035f043/coaches\n              groups:\n                data:\n                  - id: 5755db2a3db4179179999acf\n                    type: group\n                links:\n                  related: /pub/patient/58163103237d84a94035f043/groups\n            type: patient\n        links:\n          last: /pub/patient?filter[groups]=5755db2a3db4179179999acf\u0026page[number]=88\u0026page[size]=3\n          next: /pub/patient?filter[groups]=5755db2a3db4179179999acf\u0026page[number]=2\u0026page[size]=3\n          self: /pub/patient?filter[groups]=5755db2a3db4179179999acf\u0026page[number]=1\u0026page[size]=3\n        meta:\n          count: 263\n          req_id: 155c690b-50b2-4ff2-8abe-b809a8a51e53\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/PatientResource\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionResponseLinks\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchRewardEarningFulfillmentResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/RewardEarningFulfillmentResource\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchRewardEarningFulfillmentsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/RewardEarningFulfillmentResource\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchRewardEarningResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/RewardEarningResource\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchRewardEarningsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/RewardEarningResource\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchRewardProgramActivationResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/RewardProgramActivationResource\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchRewardProgramActivationsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/RewardProgramActivationResource\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchRewardProgramResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/RewardProgramResource\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchRewardProgramsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/RewardProgramResource\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchRewardResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/RewardResource\"\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    FetchRewardsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/RewardResource\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/FetchMetaResponse\"\n      required:\n        - data\n      type: object\n    GroupResource:\n      properties:\n        attributes:\n          properties:\n            bio:\n              description: A description of the group\n              example: Team Health is all about the patient experience.\n              type: string\n            name:\n              description: The name of the group\n              example: Team Health\n              type: string\n          required:\n            - name\n          type: object\n        id:\n          example: 57b36e3c04ad8c2224f2af38\n          type: string\n        links:\n          properties:\n            self:\n              example: /group/57b36e3c04ad8c2224f2af38\n              pattern: /group/[0-9a-z]+\n              type: string\n          readOnly: true\n          required:\n            - self\n          type: object\n        type:\n          enum:\n            - group\n          example: group\n          type: string\n      required:\n        - id\n        - type\n        - attributes\n      type: object\n    HealthProfileAnswerResource:\n      example:\n        attributes:\n          created_at: 2017-07-07T19:15:56.229Z\n          history:\n            - _created_by: 59d4d7dcd843ee01be71fcf8\n              _id: 59d4d7dcd843ee01be71fcfb\n              answered_at: 2017-10-03T12:45:16.720Z\n              value: \"2\"\n          latest:\n            _created_by: 59d4d7dcd843ee01be71fcf8\n            answered_at: 2017-10-04T12:45:16.720Z\n            value: \"1\"\n          question_id: \"4\"\n          updated_at: 2017-07-07T19:15:56.229Z\n        id: 59d441ac21741161bbe266b5\n        links:\n          self: /pub/health_profile_answer/59d441ac21741161bbe266b5\n        relationships:\n          patient:\n            data:\n              id: 595fddea28c5041b84466bbe\n              type: patient\n            links:\n              related: /pub/health_profile_answer/59d441ac21741161bbe266b5/patient\n        type: health_profile_answer\n      properties:\n        attributes:\n          properties:\n            history:\n              description: List of details of previous answers for a health profile question\n              items:\n                description: The details of a previous answer for a health profile question\n                properties:\n                  _created_by:\n                    description: The id of the patient or coach who answered the health\n                      profile question\n                    type: string\n                  answered_at:\n                    description: The date when the health profile question is answered\n                    format: dateTime\n                    type: string\n                  value:\n                    description: The value of the answer entered for the health profile\n                      question\n                    type: string\n                type: object\n              type: array\n            latest:\n              description: The details of the latest answer for a health profile question\n              properties:\n                _created_by:\n                  description: The id of the patient or coach who answered the health\n                    profile question\n                  type: string\n                answered_at:\n                  description: The date when the health profile question is answered\n                  format: dateTime\n                  type: string\n                value:\n                  description: The value of the answer entered for the health profile\n                    question\n                  type: string\n              type: object\n            question_id:\n              type: string\n          type: object\n        id:\n          type: string\n        links:\n          properties:\n            self:\n              example: /health_profile_answer/59d441ac21741161bbe266b5\n              pattern: /health_profile_answer/[0-9a-z]+\n              type: string\n          readOnly: true\n          required:\n            - self\n          type: object\n        relationships:\n          properties:\n            patient:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n                links:\n                  properties:\n                    related:\n                      example: /pub/health_profile_answer/59d441ac21741161bbe266b5/patient\n                      pattern: /pub/health_profile_answer/[0-9a-z]+\n                      type: string\n                  readOnly: true\n                  type: object\n              readOnly: true\n              type: object\n          type: object\n        type:\n          type: string\n      required:\n        - type\n        - id\n      type: object\n    HealthProfileQuestionResource:\n      example:\n        attribute: {}\n        id: 52b36e3c04ad8c2224f2aa67\n        links:\n          self: /pub/health_profile_question/59d435931d078505ba744e88\n        relationships:\n          answer:\n            data:\n              id: 595fddea28c5041b84466bbe\n              type: health_profile_answer\n            links:\n              related: /pub/health_profile_question/59d435931d078505ba744e88/answer\n          profile:\n            links:\n              related: /pub/health_profile_question/59d435931d078505ba744e88/profile\n          question_definition:\n            data:\n              id: \"4\"\n              type: health_question_definition\n            links:\n              related: /pub/health_profile_question/59d435931d078505ba744e88/question_definition\n        type: health_profile_question\n      properties:\n        attributes:\n          description: \u003e\n            A health profile question does not have any attribute since it only\n            relates an answer to the corresponding question definition.\n          type: object\n        id:\n          type: string\n        links:\n          properties:\n            self:\n              example: /pub/health_profile_question/59d435931d078505ba744e88\n              pattern: /pub/health_profile_question/[0-9a-z]+\n              type: string\n          readOnly: true\n          required:\n            - self\n          type: object\n        relationships:\n          properties:\n            answer:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n                links:\n                  properties:\n                    related:\n                      example: /pub/health_profile_question/59d435931d078505ba744e88/answer\n                      pattern: /pub/health_profile_question/[0-9a-z]+/answer\n                      type: string\n                  readOnly: true\n                  type: object\n              type: object\n            profile:\n              properties:\n                links:\n                  properties:\n                    related:\n                      example: /pub/health_profile_question/59d435931d078505ba744e88/profile\n                      pattern: /pub/health_profile_question/[0-9a-z]+/profile\n                      type: string\n                  readOnly: true\n                  type: object\n              type: object\n            question_definition:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n                links:\n                  properties:\n                    links:\n                      properties:\n                        related:\n                          example: /pub/health_profile_question/59d435931d078505ba744e88/question_definition\n                          pattern: /pub/health_profile_question/[0-9a-z]+/question_definition\n                          type: string\n                      readOnly: true\n                      type: object\n                  readOnly: true\n              type: object\n          type: object\n        type:\n          type: string\n      required:\n        - type\n        - id\n      type: object\n    HealthProfileResource:\n      example:\n        attributes:\n          created_at: 2017-07-07T19:15:56.229Z\n          stats:\n            - answered: 5\n              category: lifestyle_behaviors\n              total: 11\n            - answered: 3\n              category: mental_wellbeing\n              total: 5\n            - answered: 1\n              category: preventative_care\n              total: 3\n            - answered: 9\n              category: overall\n              total: 19\n          updated_at: 2017-07-07T19:15:56.229Z\n        id: 59d441ac21741161bbe266b5\n        links:\n          self: /pub/health_profile/59d441ac21741161bbe266b5\n        relationships:\n          patient:\n            data:\n              id: 595fddea28c5041b84466bbe\n              type: patient\n            links:\n              related: /pub/health_profile/59d441ac21741161bbe266b5/patient\n          questions:\n            data:\n              - id: 595fddea28c5041b84466bbe\n                type: health_profile_question\n            links:\n              related: /pub/health_profile/59d441ac21741161bbe266b5/questions\n        type: health_profile\n      properties:\n        attributes:\n          properties:\n            stats:\n              description: List of category, answered and total counts for questions in the\n                health profile\n              items:\n                description: The category, answered and total counts for questions in the\n                  health profile\n                properties:\n                  answered:\n                    type: number\n                  category:\n                    enum:\n                      - lifestyle_behaviors\n                      - mental_wellbeing\n                      - preventative_care\n                      - overall\n                    type: string\n                  total:\n                    type: number\n                type: object\n              type: array\n          type: object\n        id:\n          type: string\n        links:\n          properties:\n            self:\n              example: /health_profile/59d441ac21741161bbe266b5\n              pattern: /health_profile/[0-9a-z]+\n              type: string\n          readOnly: true\n          required:\n            - self\n          type: object\n        relationships:\n          properties:\n            patient:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n                links:\n                  properties:\n                    related:\n                      example: /pub/health_profile/59d441ac21741161bbe266b5/patient\n                      pattern: /pub/health_profile/[0-9a-z]+\n                      type: string\n                  readOnly: true\n                  type: object\n              readOnly: true\n              type: object\n            questions:\n              properties:\n                data:\n                  items:\n                    properties:\n                      id:\n                        type: string\n                      type:\n                        type: string\n                    type: object\n                  type: array\n                links:\n                  properties:\n                    related:\n                      example: /pub/health_profile/59d441ac21741161bbe266b5/questions\n                      pattern: /pub/health_profile/[0-9a-z]+\n                      type: string\n                  readOnly: true\n                  type: object\n              readOnly: true\n              type: object\n          type: object\n        type:\n          type: string\n      required:\n        - type\n      type: object\n    HealthQuestionDefinitionResource:\n      example:\n        attributes:\n          category: preventative_care\n          format:\n            data:\n              - label: I Don't know\n                value: \"0\"\n              - label: I've never had a colonoscopy\n                value: \"1\"\n            type: last_occurrence\n          requirements:\n            - property: age\n              shouldBeGreaterThan: 49\n              shouldBeLessThan: 76\n          text: When was your last colonoscopy?\n        id: \"21\"\n        links:\n          self: /pub/health_question_definition/21\n        type: health_question_definition\n      properties:\n        attributes:\n          properties:\n            category:\n              description: The category for the health profile definition\n              enum:\n                - lifestyle_behaviors\n                - mental_wellbeing\n                - preventative_care\n              type: string\n            format:\n              description: The list of formats for the health profile definition\n              properties:\n                data:\n                  items:\n                    description: The label, value and icon for the answer choices for the\n                      question\n                    properties:\n                      icon:\n                        type: string\n                      label:\n                        type: string\n                      value:\n                        type: string\n                    type: object\n                  type: array\n                type:\n                  type: string\n              type: object\n            requirements:\n              description: The lsit of age and gender requirements for the question to be\n                included\n              items:\n                description: The age and gender requirement for the question to be included\n                properties:\n                  property:\n                    type: string\n                  shouldBeEqual:\n                    description: Specifies if the value in property should be equal to the\n                      one in value\n                    type: boolean\n                  shouldBeGreaterThan:\n                    description: Specifies if the value in property should be greater than\n                      the one in value\n                    type: number\n                  shouldBeLessThan:\n                    description: Specifies if the value in property should be less than the\n                      one in value\n                    type: number\n                  value:\n                    description: The value to be compared with the one in property, based\n                      on shouldBeEqual, shouldBeGreaterThan, or shouldBeLessThan\n                    type: string\n                type: object\n              type: array\n            text:\n              description: The question text which corresponds to the answer choices\n              type: string\n          type: object\n        id:\n          type: string\n        links:\n          properties:\n            self:\n              example: /health_question_definition/4\n              pattern: /health_question_definition/[0-9]+\n              type: string\n          readOnly: true\n          required:\n            - self\n          type: object\n        relationships:\n          type: object\n        type:\n          type: string\n      required:\n        - type\n        - id\n      type: object\n    Identifier:\n      properties:\n        label:\n          type: string\n        system:\n          type: string\n        value:\n          type: string\n      required:\n        - system\n        - value\n      type: object\n    OrganizationResource:\n      properties:\n        attributes:\n          properties:\n            name:\n              example: Health Activation Partners\n              type: string\n          required:\n            - name\n        id:\n          example: 57b36e3c04ad8c2224f2af38\n          type: string\n        links:\n          properties:\n            self:\n              example: /organization/57b36e3c04ad8c2224f2af38\n              pattern: /organization/[0-9a-z]+\n              type: string\n          readOnly: true\n          required:\n            - self\n        type:\n          enum:\n            - organization\n          example: organization\n          type: string\n      required:\n        - id\n        - type\n        - attributes\n      type: object\n    PatientCreateResource:\n      allOf:\n        - $ref: \"#/components/schemas/PatientResource\"\n        - description: \u003e\n            Note that `data` can either be a single object or an array of\n            objects matching the schema specified here\n\n            (bulk create).\n        - properties:\n            relationships:\n              properties:\n                coaches:\n                  properties:\n                    data:\n                      items:\n                        properties:\n                          id:\n                            example: 57fee2a66b49113551658505\n                            type: string\n                          meta:\n                            properties:\n                              primary:\n                                type: boolean\n                            type: object\n                          type:\n                            enum:\n                              - coach\n                            example: coach\n                            type: string\n                        required:\n                          - type\n                          - id\n                        type: object\n                      type: array\n                    links:\n                      properties:\n                        related:\n                          example: /patient/57b36ef304ad8c2224f2af3a/coaches\n                          pattern: /patient/[0-9a-z]+/coaches\n                          type: string\n                      readOnly: true\n                  required:\n                    - data\n                  type: object\n                groups:\n                  properties:\n                    data:\n                      items:\n                        properties:\n                          id:\n                            description: Required if the `meta.query` is not defined.\n                            example: 57b3708b04ad8c2224f2af3b\n                            type: string\n                          meta:\n                            description: Allows the specification of a query for a group\n                              rather than providing a group id directly\n                            properties:\n                              query:\n                                description: \u003e\n                                  1. If the query does not return any groups, a\n                                  group with the specified name will be created\n                                  and related to the patient.\n\n                                  2. If the query returns one group, that group will be related to the patient.\n\n                                  3. If the query returns more than one group, the creation of the patient will fail.\n                                properties:\n                                  name:\n                                    type: string\n                                  organization:\n                                    type: string\n                                required:\n                                  - organization\n                                  - name\n                                type: object\n                            required:\n                              - query\n                            type: object\n                          type:\n                            enum:\n                              - group\n                            example: group\n                            type: string\n                        required:\n                          - type\n                        type: object\n                      type: array\n                  required:\n                    - data\n                  type: object\n              required:\n                - groups\n              type: object\n      type: object\n    PatientHealthMetricCreateResource:\n      allOf:\n        - $ref: \"#/components/schemas/PatientHealthMetricResource\"\n        - description: \u003e\n            Note that `data` can either be a single object or an array of\n            objects matching the schema specified here\n\n            (bulk create).\n      type: object\n    PatientHealthMetricResource:\n      example:\n        data:\n          attributes:\n            code:\n              system: LOINC\n              value: 13457-7\n            occurred_at: 2017-03-14T11:00:57.000Z\n            type: ldl_cholesterol\n            unit: mg/dl\n            value: 121\n          relationships:\n            patient:\n              data:\n                id: \"\"\n                type: patient\n          type: patient_health_metric\n      properties:\n        attributes:\n          properties:\n            code:\n              properties:\n                system:\n                  type: string\n                value:\n                  type: string\n              required:\n                - system\n                - value\n              type: object\n            diastolic:\n              type: number\n            occurred_at:\n              format: dateTime\n              type: string\n            systolic:\n              type: number\n            type:\n              enum:\n                - blood_pressure_systolic\n                - blood_pressure_diastolic\n                - hemoglobin_a1c\n                - hdl_cholesterol\n                - ldl_cholesterol\n                - total_cholesterol\n                - triglycerides\n                - blood_urea_nitrogen\n                - creatinine\n                - hemoglobin\n                - hematocrit\n                - total_serum_iron\n                - thyroid_stimulating_hormone\n                - free_thyroxine\n                - free_triiodothyronine\n                - total_triiodothyronine\n                - cd4_cell_count\n                - hiv_viral_load\n                - inr\n                - free_testosterone\n                - total_testosterone\n                - c_reactive_protein\n                - prostate_specific_antigen\n                - cotinine\n                - c_peptide\n                - blood_pressure\n                - blood_glucose\n                - weight\n                - heart_rate\n                - body_fat_percentage\n                - body_mass_index\n                - body_temperature\n                - forced_expiratory_volume1\n                - forced_vital_capacity\n                - lean_body_mass\n                - nausea_level\n                - oxygen_saturation\n                - pain_level\n                - peak_expiratory_flow_rate\n                - peripheral_perfusion_index\n                - respiratory_rate\n                - inhaler_usage\n              type: string\n            unit:\n              type: string\n            value:\n              description: Can be any value (number, boolean, string, object) depending on\n                the metric type. Most values are of type number.\n          type: object\n        id:\n          type: string\n        relationships:\n          properties:\n            patient:\n              properties:\n                data:\n                  properties:\n                    id:\n                      description: Required if the `meta.query` is not defined.\n                      example: 5817ead56f5316c0d05ba8bf\n                      type: string\n                    meta:\n                      description: Allows the specification of a query for a patient rather\n                        than providing a patient id directly\n                      properties:\n                        query:\n                          description: The query must return one and only one patient.\n                          properties:\n                            groups:\n                              items:\n                                type: string\n                              type: array\n                            identifier:\n                              properties:\n                                system:\n                                  type: string\n                                value:\n                                  type: string\n                              required:\n                                - system\n                                - value\n                              type: object\n                            organization:\n                              type: string\n                          required:\n                            - identifier\n                          type: object\n                      required:\n                        - query\n                      type: object\n                    type:\n                      type: string\n                  type: object\n                links:\n                  type: object\n              type: object\n          type: object\n        type:\n          type: string\n      required:\n        - type\n        - id\n      type: object\n    PatientHealthResultResource:\n      example:\n        data:\n          attributes:\n            _thread: 569c631f4b378f51306324f2d69fd29aa0c034ac\n            annotations: []\n            created_at: 2018-09-18T12:24:37.000Z\n            created_by: 5c0fc0d02d02421ed70ca1d1\n            data:\n              value: 1\n            occurred_at: 2018-09-18T12:24:37.000Z\n            occurred_at_time_zone: America/New_York\n            source: {}\n            type: medication\n            updated_at: 2018-09-18T12:24:37.000Z\n            updated_by: 5c0fc0d02d02421ed70ca1d1\n            window: 5c0fc0d42d02421ed70cae01\n          id: 5c0fc0d42d02421ed70cae16\n          relationships:\n            action:\n              data:\n                id: 5ada648779672451a6c1b095\n                type: action\n            metric:\n              data:\n                id: 5c0fc0d42d02421ed70cae16\n                type: patient_health_metric\n            patient:\n              data:\n                id: 5c0fc0d02d02421ed70ca1d1\n                type: patient\n          type: result\n      properties:\n        attributes:\n          properties:\n            _thread:\n              description: Links together results. This should be the same as the thread of\n                _action, if it is defined\n              type: string\n            aggregation:\n              type: string\n            annotations:\n              items:\n                properties:\n                  text:\n                    type: string\n                  title:\n                    type: string\n                type: object\n              type: array\n            channel:\n              type: string\n            data:\n              properties:\n                value:\n                  description: Can be any value (number, boolean, string, object) depending\n                    on the metric type. Most values are of type number\n              type: object\n            external_id:\n              type: string\n            metric_type:\n              enum:\n                - blood_pressure_systolic\n                - blood_pressure_diastolic\n                - hemoglobin_a1c\n                - hdl_cholesterol\n                - ldl_cholesterol\n                - total_cholesterol\n                - triglycerides\n                - blood_urea_nitrogen\n                - creatinine\n                - hemoglobin\n                - hematocrit\n                - total_serum_iron\n                - thyroid_stimulating_hormone\n                - free_thyroxine\n                - free_triiodothyronine\n                - total_triiodothyronine\n                - cd4_cell_count\n                - hiv_viral_load\n                - inr\n                - free_testosterone\n                - total_testosterone\n                - c_reactive_protein\n                - prostate_specific_antigen\n                - cotinine\n                - c_peptide\n                - blood_pressure\n                - blood_glucose\n                - weight\n                - heart_rate\n                - body_fat_percentage\n                - body_mass_index\n                - body_temperature\n                - forced_expiratory_volume1\n                - forced_vital_capacity\n                - lean_body_mass\n                - nausea_level\n                - oxygen_saturation\n                - pain_level\n                - peak_expiratory_flow_rate\n                - peripheral_perfusion_index\n                - respiratory_rate\n                - inhaler_usage\n              type: string\n            occurred_at:\n              example: 2018-09-18T12:24:37.000Z\n              format: dateTime\n              type: string\n            occurred_at_time_zone:\n              example: America/New_York\n              type: string\n            skipped:\n              type: boolean\n            source:\n              properties:\n                metadata:\n                  description: Can be any value\n                name:\n                  type: string\n                source_id:\n                  type: string\n              type: object\n            type:\n              description: Type of result. Usually the same as metric_type except for\n                lifestyle actions\n              type: string\n            window:\n              type: string\n          type: object\n        id:\n          type: string\n        relationships:\n          properties:\n            action:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n                links:\n                  type: object\n              type: object\n            metric:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n                links:\n                  type: object\n              type: object\n            patient:\n              properties:\n                data:\n                  properties:\n                    id:\n                      description: Required if the `meta.query` is not defined.\n                      example: 5c0fc0d02d02421ed70ca1d1\n                      type: string\n                    meta:\n                      description: Allows the specification of a query for a patient rather\n                        than providing a patient id directly\n                      properties:\n                        query:\n                          description: The query must return one and only one patient.\n                          properties:\n                            groups:\n                              items:\n                                type: string\n                              type: array\n                            identifier:\n                              properties:\n                                system:\n                                  type: string\n                                value:\n                                  type: string\n                              required:\n                                - system\n                                - value\n                              type: object\n                            organization:\n                              type: string\n                          required:\n                            - identifier\n                          type: object\n                      required:\n                        - query\n                      type: object\n                    type:\n                      type: string\n                  type: object\n                links:\n                  type: object\n              type: object\n          type: object\n        type:\n          type: string\n      required:\n        - type\n        - id\n      type: object\n    PatientIdentifier:\n      properties:\n        label:\n          type: string\n        system:\n          type: string\n        unique:\n          default: true\n          description: If `true`, the combination of system and value must be global unique\n            among all patients and coaches in Fitbit Plus.\n          type: boolean\n        value:\n          type: string\n      required:\n        - system\n        - value\n      type: object\n    PatientPlanSummaryResource:\n      properties:\n        attributes:\n          properties:\n            adherence:\n              readOnly: true\n              type: object\n            critical:\n              additionalProperties: true\n              type: object\n            effective_from:\n              format: dateTime\n              readOnly: true\n              type: string\n            time_zone:\n              type: string\n            window_notification_times:\n              properties:\n                afternoon:\n                  type: integer\n                evening:\n                  type: integer\n                morning:\n                  type: integer\n                night:\n                  type: integer\n              readOnly: true\n              type: object\n            window_order:\n              items:\n                properties:\n                  _actions:\n                    items:\n                      type: string\n                    type: array\n                  type:\n                    type: string\n                type: object\n              type: array\n          type: object\n        id:\n          example: 57b36e3c04ad8c2224f2af38\n          type: string\n        links:\n          properties:\n            self:\n              example: /patient_plan_summary/57b36e3c04ad8c2224f2af38\n              pattern: /patient_plan_summary/[0-9a-z]+\n              type: string\n          readOnly: true\n          required:\n            - self\n          type: object\n        relationships:\n          properties:\n            actions:\n              properties:\n                data:\n                  items:\n                    properties:\n                      id:\n                        type: string\n                      type:\n                        type: string\n                    required:\n                      - type\n                      - id\n                    type: object\n                  type: array\n                links:\n                  properties:\n                    related:\n                      type: string\n                  type: object\n              type: object\n            bundles:\n              properties:\n                data:\n                  items:\n                    properties:\n                      id:\n                        type: string\n                      type:\n                        type: string\n                    required:\n                      - type\n                      - id\n                    type: object\n                  type: array\n                links:\n                  properties:\n                    related:\n                      type: string\n                  type: object\n              type: object\n            current_results:\n              properties:\n                data:\n                  items:\n                    properties:\n                      id:\n                        type: string\n                      type:\n                        type: string\n                    required:\n                      - type\n                      - id\n                    type: object\n                  type: array\n                links:\n                  properties:\n                    related:\n                      type: string\n                  type: object\n              type: object\n            patient:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n                links:\n                  properties:\n                    related:\n                      type: string\n                  type: object\n              type: object\n          required:\n            - actions\n            - bundles\n            - patient\n          type: object\n        type:\n          enum:\n            - patient_plan_summary\n          example: patient_plan_summary\n          type: string\n      required:\n        - id\n        - type\n      type: object\n    PatientResource:\n      properties:\n        attributes:\n          properties:\n            addresses:\n              items:\n                $ref: \"#/components/schemas/Address\"\n              type: array\n            archive_history:\n              items:\n                $ref: \"#/components/schemas/ArchiveHistory\"\n              type: array\n            archived:\n              example: true\n              readOnly: true\n              type: boolean\n            birth_date:\n              example: 1944-03-06\n              format: date\n              type: string\n            email_address:\n              example: fiona@example.com\n              type: string\n            enrolled_at:\n              example: 2016-05-26T15:25:54.000Z\n              format: dateTime\n              readOnly: true\n              type: string\n            first_access_at:\n              example: 2016-06-03T13:15:22.000Z\n              format: dateTime\n              readOnly: true\n              type: string\n            first_name:\n              example: Fiona\n              type: string\n            gender:\n              enum:\n                - male\n                - female\n                - other\n              example: female\n              type: string\n            identifiers:\n              items:\n                $ref: \"#/components/schemas/PatientIdentifier\"\n              type: array\n            invited_at:\n              example: 2016-06-01T16:20:16.000Z\n              format: dateTime\n              readOnly: true\n              type: string\n            last_access_at:\n              example: 2016-07-11T17:50:49.400Z\n              format: dateTime\n              readOnly: true\n              type: string\n            last_name:\n              example: Reeves\n              type: string\n            note:\n              description: Coach's note about the patient. Not visible to the patient.\n              example: Relies on daughter to get around\n              type: string\n            phone_numbers:\n              items:\n                $ref: \"#/components/schemas/PhoneNumber\"\n              type: array\n            statement:\n              description: A patient's motivation statement.\n              properties:\n                updated_at:\n                  example: 2016-06-03T13:15:22.000Z\n                  format: dateTime\n                  type: string\n                updated_by:\n                  example: 5c509cc2f60e34018180b57c\n                  type: string\n                value:\n                  example: Enjoying nature.\n                  type: string\n              readOnly: true\n              type: object\n            updated_at:\n              example: 2016-07-11T17:13:57.027Z\n              format: dateTime\n              readOnly: true\n              type: string\n          type: object\n        id:\n          example: 57b36ef304ad8c2224f2af3a\n          type: string\n        links:\n          properties:\n            self:\n              example: /patient/57b36ef304ad8c2224f2af3a\n              pattern: /patient/[0-9a-z]+\n              type: string\n            twine_web_app:\n              description: A link to the patient record in the Fitbit Plus web application.\n              example: https://app.plus.fitbit.com/#/coach/patient/5367c6300b7bb6e94188c02c/overview\n              type: string\n          readOnly: true\n          type: object\n        relationships:\n          properties:\n            coaches:\n              properties:\n                data:\n                  items:\n                    properties:\n                      id:\n                        example: 57fee2a66b49113551658505\n                        type: string\n                      meta:\n                        properties:\n                          primary:\n                            type: boolean\n                        type: object\n                      type:\n                        enum:\n                          - coach\n                        example: coach\n                        type: string\n                    required:\n                      - type\n                      - id\n                    type: object\n                  type: array\n                links:\n                  properties:\n                    related:\n                      example: /patient/57b36ef304ad8c2224f2af3a/groups\n                      pattern: /patient/[0-9a-z]+/groups\n                      type: string\n                  readOnly: true\n              required:\n                - data\n            groups:\n              properties:\n                data:\n                  items:\n                    properties:\n                      id:\n                        example: 57b3708b04ad8c2224f2af3b\n                        type: string\n                      type:\n                        enum:\n                          - group\n                        example: group\n                        type: string\n                    required:\n                      - type\n                    type: object\n                  type: array\n              required:\n                - data\n          required:\n            - groups\n          type: object\n        type:\n          enum:\n            - patient\n          example: patient\n          type: string\n      required:\n        - type\n        - attributes\n      type: object\n    PhoneNumber:\n      properties:\n        primary:\n          example: true\n          type: boolean\n        type:\n          enum:\n            - home\n            - work\n            - mobile\n            - home-fax\n            - work-fax\n            - other\n          example: mobile\n          type: string\n        value:\n          example: 555-555-1234\n          type: string\n      required:\n        - type\n        - value\n        - primary\n      type: object\n    Resource:\n      properties:\n        attributes:\n          type: object\n        id:\n          type: string\n        type:\n          type: string\n      type: object\n    RewardEarningFulfillmentResource:\n      properties:\n        attributes:\n          properties:\n            fulfilled_at:\n              description: Date at which the reward earning was fulfilled. (Must be at the\n                same time or after the reward was earned)\n              format: dateTime\n              type: string\n            fulfilled_unit:\n              description: Unit of the earned reward that has been fulfilled. (Read-only\n                property)\n              readOnly: true\n              type: string\n            fulfilled_value:\n              description: Value of the earned reward that has been fulfilled. (Must be\n                greater than or equal to 0)\n              type: number\n          required:\n            - fulfilled_value\n            - fulfilled_at\n          type: object\n        id:\n          type: string\n        relationships:\n          properties:\n            patient:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n              readOnly: true\n              type: object\n            reward_earning:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n              type: object\n          required:\n            - reward_earning\n          type: object\n        type:\n          type: string\n      required:\n        - type\n      type: object\n    RewardEarningResource:\n      properties:\n        attributes:\n          properties:\n            earned_at:\n              description: Date at which the reward was earned. (Must be after the reward\n                was allocated and before the reward program activation was\n                deactivated or expired)\n              format: dateTime\n              type: string\n            earned_unit:\n              description: Unit of the reward that has been earned. (Read-only property)\n              readOnly: true\n              type: string\n            earned_value:\n              description: Value of the reward that has been earned. (Must not exceed the\n                allocated value for the reward)\n              type: number\n            fulfilled_at:\n              description: Date at which the reward earning was fulfilled. (Read-only\n                property)\n              format: dateTime\n              readOnly: true\n              type: string\n            fulfilled_value:\n              description: Value of the earned reward that has been fulfilled. (Read-only\n                property)\n              readOnly: true\n              type: number\n            ready_for_fulfillment:\n              description: If true, the reward earning is ready to be fulfilled, either\n                because the reward program activation was fulfill_as_earned or\n                because the reward program activation has been deactivated.\n                (Read-only property)\n              readOnly: true\n              type: boolean\n          required:\n            - earned_value\n            - earned_at\n          type: object\n        id:\n          type: string\n        relationships:\n          properties:\n            group:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n              readOnly: true\n              type: object\n            patient:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n              readOnly: true\n              type: object\n            reward:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n              type: object\n            reward_program_activation:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n              readOnly: true\n              type: object\n          required:\n            - reward\n          type: object\n        type:\n          type: string\n      required:\n        - type\n      type: object\n    RewardProgramActivationResource:\n      properties:\n        attributes:\n          properties:\n            activated_at:\n              description: Date at which the reward program was activated for the patient.\n                (Must be between the start_at and end_at dates for the reward\n                program)\n              format: dateTime\n              type: string\n            active:\n              default: true\n              description: If true, the reward program is currently active.\n              type: boolean\n            allocated_count:\n              description: Number of rewards allocated. (Read-only property)\n              readOnly: true\n              type: number\n            budget_unit:\n              description: Unit of the reward program budget. (Read-only property)\n              readOnly: true\n              type: string\n            deactivated_at:\n              description: Date at which the reward program was deactivated. (Must be after\n                the activated_at date)\n              format: dateTime\n              type: string\n            earned_count:\n              description: Number of reward earnings. (Read-only property)\n              readOnly: true\n              type: number\n            expires_at:\n              description: Date at which the reward program activation expires. (Read-only\n                property set by adding the days_active from the reward program\n                to the activated_at date)\n              format: dateTime\n              readOnly: true\n              type: string\n            fulfill_as_earned:\n              description: If true, the rewards created for a patient for the program can\n                be fulfulled as they are earned. If false, the rewards should\n                only be fulfilled when the program is deactivated. (Read-only\n                property denormalized from the reward program)\n              readOnly: true\n              type: boolean\n            total_allocated_value:\n              description: Total value of reward allocated. (Read-only property)\n              readOnly: true\n              type: number\n            total_earned_value:\n              description: Total value of reward earnings. (Read-only property)\n              readOnly: true\n              type: number\n          required:\n            - activated_at\n          type: object\n        id:\n          type: string\n        relationships:\n          properties:\n            patient:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n              type: object\n            reward_program:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n              type: object\n          required:\n            - patient\n            - reward_program\n          type: object\n        type:\n          type: string\n      required:\n        - type\n      type: object\n    RewardProgramResource:\n      properties:\n        attributes:\n          properties:\n            budget_unit:\n              default: dollar\n              description: Unit of the budget for the reard program.\n              enum:\n                - dollar\n                - point\n                - credit\n              type: string\n            budget_value:\n              description: Value of the budget for the reward program. (Must be greater\n                than 0)\n              type: number\n            description:\n              description: Description of the reward program - designed to be a\n                comprehensive text description\n              type: string\n            duration_active:\n              default: 540\n              description: Number of days that a program can be active after it has been\n                activated for a patient. (Must be greater than 0)\n              type: number\n            end_at:\n              description: Date at which the reward program ends. (Must be after the\n                start_at)\n              format: dateTime\n              type: string\n            frozen:\n              default: false\n              description: If true, the reward program cannot be activated for a patient\n                and new rewards cannot be created for the program.\n              type: boolean\n            fulfill_as_earned:\n              default: false\n              description: If true, the rewards created for a patient for the program can\n                be fulfulled as they are earned. If false, the rewards should\n                only be fulfilled when the program is deactivated.\n              type: boolean\n            name:\n              description: Name of the reward program\n              type: string\n            start_at:\n              description: Date at which the reward program starts.\n              format: dateTime\n              type: string\n            tagline:\n              description: Tagline of the reward program - designed to be one line\n              type: string\n          required:\n            - name\n            - start_at\n            - end_at\n            - budget_value\n          type: object\n        id:\n          type: string\n        relationships:\n          properties:\n            group:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  required:\n                    - type\n                    - id\n                  type: object\n              required:\n                - data\n              type: object\n          required:\n            - group\n          type: object\n        type:\n          type: string\n      required:\n        - type\n      type: object\n    RewardResource:\n      properties:\n        attributes:\n          properties:\n            _thread:\n              description: Unique string identifying the health action with which the\n                reward is associated.\n              type: string\n            allocated_at:\n              description: Date at which the reward was allocated. (Must be after the\n                reward program is activated and before it is deactivated or\n                expires)\n              format: dateTime\n              type: string\n            allocated_unit:\n              description: Unit of the reward program. (Read-only property)\n              readOnly: true\n              type: string\n            allocated_value:\n              description: Value of the reward program budget allocated for the reward.\n                (Must not exceed the remaining budget for the reward program\n                activation)\n              type: number\n            description:\n              description: Description of the reward.\n              type: string\n            earned_at:\n              description: Date at which the reward was earned. (Read-only property)\n              format: dateTime\n              readOnly: true\n              type: string\n            earned_value:\n              description: Value of the reward that has been earned. (Read-only property)\n              readOnly: true\n              type: number\n            fulfilled_at:\n              description: Date at which the reward earning was fulfilled. (Read-only\n                property)\n              format: dateTime\n              readOnly: true\n              type: string\n            fulfilled_value:\n              description: Value of the earned reward that has been fulfilled. (Read-only\n                property)\n              readOnly: true\n              type: number\n            target_at:\n              description: Date at which the patient aspires to achieve the reward. (Must\n                be the same or after the allocated_at date)\n              format: dateTime\n              type: string\n          required:\n            - description\n            - allocated_value\n            - allocated_at\n          type: object\n        id:\n          type: string\n        relationships:\n          properties:\n            patient:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n              readOnly: true\n              type: object\n            reward_program_activation:\n              properties:\n                data:\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                  type: object\n              type: object\n          required:\n            - reward_program_activation\n          type: object\n        type:\n          type: string\n      required:\n        - type\n      type: object\n    TokenResource:\n      properties:\n        attributes:\n          properties:\n            access_token:\n              example: a01fe2bb-1977-48d9-b722-ac7f9135143f\n              type: string\n            expires_in:\n              example: 3600\n              type: integer\n            refresh_token:\n              example: b452cb17-72e2-4e90-b9c6-d77a0b66cf7c\n              type: string\n            token_type:\n              enum:\n                - bearer\n              example: bearer\n              type: string\n          required:\n            - access_token\n            - refresh_token\n            - token_type\n            - expires_in\n        id:\n          example: 57b36c9a04ad8c2224f2af35\n          type: string\n        relationships:\n          properties:\n            groups:\n              properties:\n                data:\n                  items:\n                    properties:\n                      id:\n                        example: 57b36d6f04ad8c2224f2af36\n                        type: string\n                      type:\n                        enum:\n                          - group\n                        example: group\n                        type: string\n                    required:\n                      - type\n                      - id\n                    type: object\n                  type: array\n                links:\n                  properties:\n                    related:\n                      example: /oauth/token/57b36d8804ad8c2224f2af37/groups\n                      pattern: /oauth/token/[0-9a-z]+/groups\n                      type: string\n                  required:\n                    - related\n              required:\n                - links\n                - data\n            organization:\n              properties:\n                data:\n                  properties:\n                    id:\n                      example: 57b36d6f04ad8c2224f2af36\n                      type: string\n                    type:\n                      enum:\n                        - organization\n                      example: organization\n                      type: string\n                  required:\n                    - type\n                    - id\n                links:\n                  properties:\n                    related:\n                      example: /oauth/token/57b36d8804ad8c2224f2af37/organization\n                      pattern: /oauth/token/[0-9a-z]+/organization\n                      type: string\n                  required:\n                    - related\n              required:\n                - links\n                - data\n          type: object\n        type:\n          enum:\n            - token\n          example: token\n          type: string\n      required:\n        - type\n        - id\n      type: object\n    UpdateActionRequest:\n      properties:\n        data:\n          $ref: \"#/components/schemas/ActionResource\"\n      required:\n        - data\n      type: object\n    UpdateActionResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/ActionResource\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      required:\n        - data\n      type: object\n    UpdateBundleRequest:\n      properties:\n        data:\n          $ref: \"#/components/schemas/BundleResource\"\n      required:\n        - data\n      type: object\n    UpdateBundleResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/BundleResource\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      required:\n        - data\n      type: object\n    UpdateCalendarEventRequest:\n      example:\n        data:\n          attributes:\n            all_day: false\n            attendees:\n              - user: 5a0c8e27a9d454cc150997c9\n              - user: 5a0c8e27a9d454cc150997f7\n            completed_at: 2017-11-03T06:17:34.652Z\n            completed_by: 5a0c8e27a9d454cc150997c9\n            end_at: 2018-02-20T18:00:00Z\n            start_at: 2018-02-20T14:00:00Z\n            time_zone: America/New_York\n            title: Telephone Call\n            type: telephone-call\n          id: 42ba7c2da9d45415234345b3\n          relationships:\n            owner:\n              data:\n                id: 5a0c8e27a9d454cc150997f7\n                type: patient\n          type: calendar_event\n      properties:\n        data:\n          properties:\n            attributes:\n              allOf:\n                - $ref: \"#/components/schemas/CalendarEventResource/properties/attr\\\n                    ibutes\"\n            id:\n              $ref: \"#/components/schemas/CalendarEventResource/properties/id\"\n            relationships:\n              properties:\n                owner:\n                  properties:\n                    data:\n                      $ref: \"#/components/schemas/CalendarEventResource/properties/\\\n                        relationships/properties/owner/properties/data\"\n                  type: object\n              type: object\n            type:\n              $ref: \"#/components/schemas/CalendarEventResource/properties/type\"\n          required:\n            - type\n            - id\n          type: object\n      type: object\n    UpdateCalendarEventResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/CalendarEventResource\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      type: object\n    UpdatePatientPlanSummaryRequest:\n      properties:\n        data:\n          $ref: \"#/components/schemas/PatientPlanSummaryResource\"\n      required:\n        - data\n      type: object\n    UpdatePatientPlanSummaryResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/PatientPlanSummaryResource\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      required:\n        - data\n      type: object\n    UpdatePatientRequest:\n      example:\n        data:\n          attributes:\n            first_name: Jonathon\n          id: 5817ead56f5316c0d05ba8bf\n          type: patient\n      properties:\n        data:\n          $ref: \"#/components/schemas/PatientResource\"\n      required:\n        - data\n      type: object\n    UpdatePatientResponse:\n      example:\n        data:\n          attributes:\n            addresses: []\n            archive_history: []\n            archived: false\n            first_name: Jack\n            identifiers: []\n            last_name: Frost\n            phone_numbers: []\n            updated_at: 2016-11-01T01:07:33.121Z\n          id: 5817ead56f5316c0d05ba8bf\n          links:\n            self: /pub/patient/5817ead56f5316c0d05ba8bf\n            twine_web_app: http://10.0.1.55:9000/#/coach/patient/5817ead56f5316c0d05ba8bf\n          relationships:\n            coaches:\n              data: []\n              links:\n                related: /pub/patient/5817ead56f5316c0d05ba8bf/coaches\n            groups:\n              data:\n                - id: 5755db2a3db4179179999acf\n                  type: group\n              links:\n                related: /pub/patient/5817ead56f5316c0d05ba8bf/groups\n          type: patient\n        included: []\n        meta:\n          req_id: 5b813ad3-cabc-418f-add4-1e53bc69f7cb\n      properties:\n        data:\n          $ref: \"#/components/schemas/PatientResource\"\n        meta:\n          $ref: \"#/components/schemas/CreateOrUpdateMetaResponse\"\n      required:\n        - data\n      type: object\n    UpsertPatientRequest:\n      example:\n        data:\n          attributes:\n            first_name: Jack\n            last_name: Frost\n          relationships:\n            groups:\n              data:\n                - id: 5755db2a3db4179179999acf\n                  type: group\n          type: patient\n        meta:\n          query:\n            groups:\n              - 5755db2a3db4179179999acf\n            identifier:\n              system: OtherPlace\n              value: \"123456\"\n      properties:\n        data:\n          $ref: \"#/components/schemas/PatientResource\"\n        meta:\n          properties:\n            query:\n              properties:\n                groups:\n                  description: Group to create/update patient in.\n                  items:\n                    description: ID of group\n                    type: string\n                  type: array\n                identifier:\n                  description: Identifier to match patient\n                  properties:\n                    system:\n                      description: Name of system\n                      type: string\n                    value:\n                      description: Value in system\n                      type: string\n                  type: object\n              required:\n                - identifier\n                - groups\n              type: object\n          required:\n            - query\n          type: object\n      required:\n        - meta\n        - data\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/twinehealth.com-v7.78.1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/twinehealth.com-v7.78.1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/action/{id}\": get: responses: 200: contents: unsupported content types: [application/vnd.api+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}