{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/slovak-egov/einvoice"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "docs/swagger.yml",
			"byteSize": 25675,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  description: This is REST endpoints API documentation for E-invoice project.\n  title: E-invoice API\nservers:\n  - description: Dev\n    url: https://dev.api.einvoice.mfsr.sk\ntags:\n  - name: Auth\n  - name: Users\n  - name: Invoices\n  - name: Drafts\npaths:\n  /login:\n    get:\n      tags:\n        - Auth\n      summary: Authenticate user with ÚPVS (slovensko.sk) token\n      security:\n        - upvsOboTokenAuth: []\n      responses:\n        '200':\n          $ref: '#/components/responses/Login'\n        '401':\n          $ref: '#/components/responses/Error'\n        '403':\n          $ref: '#/components/responses/Error'\n        '424':\n          $ref: '#/components/responses/Error'\n  /logout:\n    get:\n      tags:\n        - Auth\n      summary: Logout user from e-invoice\n      security:\n        - sessionAuth: []\n      responses:\n        '200':\n          $ref: '#/components/responses/Logout'\n        '401':\n          $ref: '#/components/responses/Error'\n  /upvs/logout:\n    get:\n      tags:\n        - Auth\n      summary: Redirect to ÚPVS (slovensko.sk) logout\n      description: |\n        Redirect to ÚPVS and invalidate OBO token.\n        If OBO token is already invalid redirect to ÚPVS callback directly\n      parameters:\n        - name: token\n          in: query\n          description: OBO token\n          schema:\n            type: string\n          required: true\n        - name: callback\n          in: query\n          description: |\n            Callback URL, to which user will be redirected once logout is successful.\n            Callback URL has to be same as one of the addresses set at the component API level,\n            or it has to be an extension of one of these addresses.\n          schema:\n            type: string\n          required: true\n      responses:\n        '302':\n          description: Redirect user to ÚPVS logout\n        '401':\n          $ref: '#/components/responses/Error'\n\n  /users/{userId}:\n    parameters:\n      - name: userId\n        in: path\n        description: ID of user to be affected\n        required: true\n        schema:\n          type: integer\n    get:\n      tags:\n        - Users\n      summary: Get info about requested user\n      security:\n        - sessionAuth: []\n        - apiKeyAuth: []\n      responses:\n        '200':\n          description: User data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserInfo'\n        '401':\n          $ref: '#/components/responses/Error'\n    patch:\n      tags:\n        - Users\n      summary: Update user info\n      security:\n        - sessionAuth: []\n        - apiKeyAuth: []\n      requestBody:\n        $ref: '#/components/requestBodies/PatchUser'\n      responses:\n        '200':\n          description: Updated user info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserInfo'\n        '400':\n          $ref: '#/components/responses/Error'\n        '401':\n          $ref: '#/components/responses/Error'\n  /users/{userId}/substitutes:\n    parameters:\n      - name: userId\n        in: path\n        description: ID of user to be affected\n        required: true\n        schema:\n          type: integer\n    post:\n      tags:\n        - Users\n      summary: Add substitute users\n      description: Add rights for particular users to create invoices on your behalf\n      security:\n        - sessionAuth: []\n        - apiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubstituteIds'\n      responses:\n        '200':\n          description: List of substitute Ids that were successfully added\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubstituteIds'\n        '400':\n          $ref: '#/components/responses/Error'\n    delete:\n      tags:\n        - Users\n      summary: Remove substitute users\n      description: Revoke rights for particular users to create invoices on your behalf\n      security:\n        - sessionAuth: []\n        - apiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubstituteIds'\n      responses:\n        '200':\n          description: List of substitute Ids that were successfully removed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubstituteIds'\n        '400':\n          $ref: '#/components/responses/Error'\n    get:\n      tags:\n        - Users\n      summary: Get substitute users\n      description: Get list of users that can create invoices on your behalf\n      security:\n        - sessionAuth: []\n        - apiKeyAuth: []\n      responses:\n        '200':\n          description: List of substitute user Ids of requested user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubstituteIds'\n  /users/{userId}/organizations:\n    get:\n      tags:\n        - Users\n      summary: Get substituted organizations\n      description: Get list of IČOs that requested user can create invoices on behalf of\n      parameters:\n        - name: userId\n          in: path\n          description: User ID\n          required: true\n          schema:\n            type: integer\n      security:\n        - sessionAuth: []\n        - apiKeyAuth: []\n      responses:\n        '200':\n          description: List of substituted organizations for requested user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubstitutedOrganizations'\n  /users/{userId}/invoices:\n    get:\n      tags:\n        - Users\n      summary: Get all invoices requested user can view\n      parameters:\n        - name: userId\n          in: path\n          description: Get invoices of user with this user ID\n          required: true\n          schema:\n            type: integer\n        - $ref: '#/components/parameters/InvoiceFormat'\n        - $ref: '#/components/parameters/StartId'\n        - $ref: '#/components/parameters/Order'\n        - $ref: '#/components/parameters/Limit'\n        - $ref: '#/components/parameters/TestInvoice'\n        - $ref: '#/components/parameters/AmountFrom'\n        - $ref: '#/components/parameters/AmountTo'\n        - $ref: '#/components/parameters/AmountCurrency'\n        - $ref: '#/components/parameters/AmountWithoutVatFrom'\n        - $ref: '#/components/parameters/AmountWithoutVatTo'\n        - $ref: '#/components/parameters/AmountWithoutVatCurrency'\n        - $ref: '#/components/parameters/IssueDateFrom'\n        - $ref: '#/components/parameters/IssueDateTo'\n        - $ref: '#/components/parameters/UploadTimeFrom'\n        - $ref: '#/components/parameters/UploadTimeTo'\n        - $ref: '#/components/parameters/CustomerName'\n        - $ref: '#/components/parameters/SupplierName'\n        - $ref: '#/components/parameters/CustomerIco'\n        - $ref: '#/components/parameters/SupplierIco'\n      security:\n        - sessionAuth: []\n        - apiKeyAuth: []\n      responses:\n        '200':\n          description: List of user invoices\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invoices'\n\n  /invoices:\n    get:\n      tags:\n        - Invoices\n      summary: Get list of metadata of public invoices\n      parameters:\n        - $ref: '#/components/parameters/InvoiceFormat'\n        - $ref: '#/components/parameters/StartId'\n        - $ref: '#/components/parameters/Order'\n        - $ref: '#/components/parameters/Limit'\n        - $ref: '#/components/parameters/TestInvoice'\n        - $ref: '#/components/parameters/AmountFrom'\n        - $ref: '#/components/parameters/AmountTo'\n        - $ref: '#/components/parameters/AmountCurrency'\n        - $ref: '#/components/parameters/AmountWithoutVatFrom'\n        - $ref: '#/components/parameters/AmountWithoutVatTo'\n        - $ref: '#/components/parameters/AmountWithoutVatCurrency'\n        - $ref: '#/components/parameters/IssueDateFrom'\n        - $ref: '#/components/parameters/IssueDateTo'\n        - $ref: '#/components/parameters/UploadTimeFrom'\n        - $ref: '#/components/parameters/UploadTimeTo'\n        - $ref: '#/components/parameters/CustomerName'\n        - $ref: '#/components/parameters/SupplierName'\n        - $ref: '#/components/parameters/CustomerIco'\n        - $ref: '#/components/parameters/SupplierIco'\n      responses:\n        '200':\n          description: Successfull response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invoices'\n    post:\n      security:\n        - sessionAuth: []\n        - apiKeyAuth: []\n      tags:\n        - Invoices\n      summary: Create invoice\n      requestBody:\n        description: \"UBL2.1 or D16B invoice\"\n        content:\n          application/xml:\n            schema:\n              type: object\n              xml:\n                name: Invoice\n      responses:\n        '201':\n          description: Invoice created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invoice'\n        '400':\n          $ref: '#/components/responses/Error'\n        '403':\n          $ref: '#/components/responses/Error'\n        '424':\n          $ref: '#/components/responses/Error'\n  /invoices/test:\n    post:\n      security:\n        - sessionAuth: []\n        - apiKeyAuth: []\n      tags:\n        - Invoices\n      summary: Create test invoice\n      requestBody:\n        description: \"UBL2.1 or D16B invoice\"\n        content:\n          application/xml:\n            schema:\n              type: object\n              xml:\n                name: Invoice\n      responses:\n        '201':\n          description: Test invoice created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invoice'\n        '400':\n          $ref: '#/components/responses/Error'\n        '403':\n          $ref: '#/components/responses/Error'\n        '429':\n          $ref: '#/components/responses/Error'\n\n  /invoices/visualization:\n    post:\n      tags:\n        - Invoices\n      summary: Get visualization of sent invoice\n      requestBody:\n        description: \"UBL2.1 or D16B invoice\"\n        content:\n          application/xml:\n            schema:\n              type: object\n              xml:\n                name: Invoice\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/zip:\n              schema:\n                type: string\n                format: binary\n  /invoices/{invoiceId}:\n    get:\n      tags:\n        - Invoices\n      summary: Get invoice meta data\n      parameters:\n        - name: invoiceId\n          in: path\n          description: Invoice ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: Successfull response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invoice'\n        '403':\n          $ref: '#/components/responses/Error'\n        '404':\n          $ref: '#/components/responses/Error'\n  /invoices/{invoiceId}/detail:\n    get:\n      tags:\n        - Invoices\n      summary: Get invoice content\n      parameters:\n        - name: invoiceId\n          in: path\n          description: Invoice ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Invoice'\n        '403':\n          $ref: '#/components/responses/Error'\n        '404':\n          $ref: '#/components/responses/Error'\n  /invoices/{invoiceId}/visualization:\n    get:\n      tags:\n        - Invoices\n      summary: Get invoice visualization\n      parameters:\n        - name: invoiceId\n          in: path\n          description: Invoice ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/zip:\n              schema:\n                type: string\n                format: binary\n        '403':\n          $ref: '#/components/responses/Error'\n        '404':\n          $ref: '#/components/responses/Error'\n  /drafts:\n    get:\n      tags:\n        - Drafts\n      security:\n        - sessionAuth: []\n      summary: Get my invoice drafts\n      responses:\n        '200':\n          description: List of draft metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Drafts'\n        '403':\n          $ref: '#/components/responses/Error'\n    post:\n      tags:\n        - Drafts\n      security:\n        - sessionAuth: []\n      summary: Create my invoice draft\n      requestBody:\n        description: Draft of invoice form\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - invoice\n                        - creditNote\n                    data:\n                      type: object\n                      description: Redux state of invoice form\n      responses:\n        '201':\n          description: Draft created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Draft'\n        '400':\n          $ref: '#/components/responses/Error'\n        '403':\n          $ref: '#/components/responses/Error'\n        '429':\n          $ref: '#/components/responses/Error'\n  /drafts/{draftId}:\n    get:\n      tags:\n        - Drafts\n      security:\n        - sessionAuth: []\n      summary: Get draft content\n      parameters:\n        - $ref: '#/components/parameters/DraftId'\n      responses:\n        '200':\n          description: Draft\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    enum:\n                      - invoice\n                      - creditNote\n                  data:\n                    type: object\n                    description: Redux state of invoice form\n    patch:\n      tags:\n        - Drafts\n      security:\n        - sessionAuth: []\n      summary: Update draft\n      requestBody:\n        description: Draft of invoice form\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  nullable: true\n                data:\n                  type: object\n                  nullable: true\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - invoice\n                        - creditNote\n                    data:\n                      type: object\n                      description: Redux state of invoice form\n      parameters:\n        - $ref: '#/components/parameters/DraftId'\n      responses:\n        '200':\n          description: Updated draft\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PatchedDraft'\n    delete:\n      tags:\n        - Drafts\n      security:\n        - sessionAuth: []\n      summary: Delete draft\n      parameters:\n        - $ref: '#/components/parameters/DraftId'\n      responses:\n        '200':\n          description: ID of deleted draft\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n        '403':\n          $ref: '#/components/responses/Error'\ncomponents:\n  securitySchemes:\n    upvsOboTokenAuth:\n      description: OBO token received from ÚPVS (slovensko.sk)\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    sessionAuth:\n      description: Token received in response of login request\n      type: http\n      scheme: bearer\n    apiKeyAuth:\n      description: |\n        JWT token satisfying:\n        - encoded by RS256 algorithm\n        - signed by your private key (paired with public key you set in your account)\n        - `sub` claim set to your user Id as integer\n        - `exp` claim set to current Unix timestamp + 10 minutes\n        - `jti` claim set to random string unique during 15 minutes\n\n        Example of `header` segment:\n\n            {\n              \"alg\": \"RS256\",\n              \"typ\": \"JWT\"\n            }\n\n        Example of `payload` segment:\n\n            {\n              \"sub\": 1,\n              \"exp\": 1607590024,\n              \"jti\": \"4dee8618-abbe-4dc3-83ba-e984d1396f9f\"\n            }\n\n        Notes:\n\n        - `jti` value should follow regular expression `/\\A[0-9a-z\\-_]{32,256}\\z/i`\n        - same `jti` value cannot be reused in 15 minute timeframe\n        - server considers `exp` valid if it fits in time interval `(current Unix; current Unix + 10 minutes)`\n      type: apiKey\n      in: header\n      name: X-API-Key\n  schemas:\n    UserInfo:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 8498081\n        upvsUri:\n          type: string\n          example: rc://sk/8314451298_tisici_janko\n        name:\n          type: string\n        serviceAccountPublicKey:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n    Invoices:\n      type: object\n      properties:\n        nextId:\n          type: string\n          format: uuid\n          nullable: true\n        invoices:\n          type: array\n          items:\n            $ref: '#/components/schemas/Invoice'\n    InvoiceFormat:\n      type: string\n      enum:\n        - ubl2.1\n        - d16b\n    Invoice:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        sender:\n          type: string\n          example: SubjectA\n        receiver:\n          type: string\n          example: SubjectB\n        format:\n          $ref: '#/components/schemas/InvoiceFormat'\n        price:\n          type: integer\n          example: 100\n        supplierIco:\n          type: string\n          example: '11190993'\n        customerIco:\n          type: string\n          example: '11190993'\n        createdAt:\n          type: string\n          format: date-time\n        issueDate:\n          type: string\n          format: date\n        createdBy:\n          type: integer\n        test:\n          type: boolean\n          description: True if invoice is just for test purposes\n        notificationsSent:\n          type: boolean\n          description: True if involved parties were notified\n    SubstituteIds:\n      type: array\n      items:\n        type: integer\n        description: Substitute ID\n    SubstitutedOrganizations:\n      type: array\n      items:\n        type: integer\n        description: Organization ID (IČO)\n    Drafts:\n      type: array\n      items:\n        $ref: '#/components/schemas/Draft'\n    Draft:\n      type: object\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n          format: uuid\n        createdAt:\n          type: string\n          format: date-time\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - invoice\n                - creditNote\n            data:\n              type: object\n              description: Redux state of invoice form\n    PatchedDraft:\n      type: object\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n          format: uuid\n        createdAt:\n          type: string\n          format: date-time\n        data:\n          type: object\n          nullable: true\n          properties:\n            type:\n              type: string\n              enum:\n                - invoice\n                - creditNote\n            data:\n              type: object\n              description: Redux state of invoice form\n    Error:\n      type: object\n      properties:\n        error:\n          type: string\n        detail:\n          type: string\n      required:\n        - error\n  parameters:\n    Limit:\n      name: limit\n      in: query\n      description: Limit number of entities returned\n      schema:\n        type: integer\n        minimum: 1\n    TestInvoice:\n      name: test\n      in: query\n      description: If flag turned on, test invoices are considered as well\n      schema:\n        type: boolean\n    Order:\n      name: order\n      in: query\n      description: |\n        Order of returned entities. If not provided order is not guaranteed.\n        - `asc` - entitites are returned from the oldest to the newest\n        - `desc` - entities are returned from the newest to the oldest\n      schema:\n        type: string\n        enum:\n          - asc\n          - desc\n    StartId:\n      name: startId\n      in: query\n      description: Entity id where service start search\n      schema:\n        type: string\n        format: uuid\n    InvoiceFormat:\n      name: format\n      in: query\n      description: Filter invoices by format\n      schema:\n        type: array\n        items:\n          $ref: '#/components/schemas/InvoiceFormat'\n    AmountFrom:\n      name: amountFrom\n      in: query\n      description: Select invoices with amount not lesser than this value\n      schema:\n        type: number\n    AmountTo:\n      name: amountTo\n      in: query\n      description: Select invoices with amount not greater than this value\n      schema:\n        type: number\n    AmountCurrency:\n      name: amountCurrency\n      in: query\n      description: Filter invoices by amount currency\n      schema:\n        type: string\n    AmountWithoutVatFrom:\n      name: amountWithoutVatFrom\n      in: query\n      description: Select invoices with amount without VAT not lesser than this value\n      schema:\n        type: number\n    AmountWithoutVatTo:\n      name: amountWithoutVatTo\n      in: query\n      description: Select invoices with amount without VAT not greater than this value\n      schema:\n        type: number\n    AmountWithoutVatCurrency:\n      name: amountWithoutVatCurrency\n      in: query\n      description: Filter invoices by amount without VAT currency\n      schema:\n        type: string\n    IssueDateFrom:\n      name: issueDateFrom\n      in: query\n      description: Select invoices with issue date not lesser than this date\n      schema:\n        type: string\n        format: date\n        example: '2021-01-15'\n    IssueDateTo:\n      name: issueDateTo\n      in: query\n      description: Select invoices with issue date not greater than this date\n      schema:\n        type: string\n        format: date\n        example: '2021-01-15'\n    UploadTimeFrom:\n      name: uploadTimeFrom\n      in: query\n      description: Select invoices with upload time not lesser than this time\n      schema:\n        type: string\n        format: date-time\n        example: '2021-01-02T15:04:05.999+00:00'\n    UploadTimeTo:\n      name: uploadTimeTo\n      in: query\n      description: Select invoices with upload date lesser than this time\n      schema:\n        type: string\n        format: date\n        example: '2021-01-02T15:04:05.999+00:00'\n    CustomerName:\n      name: customerName\n      in: query\n      description: Select invoices with customer name containing this value\n      schema:\n        type: string\n        example: 'Company 1'\n    SupplierName:\n      name: supplierName\n      in: query\n      description: Select invoices with supplier name containing this value\n      schema:\n        type: string\n        example: 'Company 1'\n    CustomerIco:\n      name: customerIco\n      in: query\n      description: Filter invoices by customer IČO\n      schema:\n        type: string\n        example: '11190993'\n    SupplierIco:\n      name: supplierIco\n      in: query\n      description: Filter invoices by supplier IČO\n      schema:\n        type: string\n        example: '11190993'\n    DraftId:\n      name: draftId\n      in: path\n      description: Draft ID\n      required: true\n      schema:\n        type: string\n        format: uuid\n  requestBodies:\n    PatchUser:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              serviceAccountPublicKey:\n                type: string\n  responses:\n    Login:\n      description: User is sucessfully logged in.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/UserInfo'\n              - type: object\n                properties:\n                  token:\n                    type: string\n                    format: uuid\n    Logout:\n      description: User is successfully logged out.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              logout:\n                type: string\n                example: successful\n    Error:\n      description: There was an error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n",
			"canonicalURL": "/github.com/slovak-egov/einvoice@19239a5ffc51180805c7e65938e466166ac10f07/-/blob/docs/swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/slovak-egov/einvoice/blob/19239a5ffc51180805c7e65938e466166ac10f07/docs/swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/invoices/visualization\": post: requestBody: contents: unsupported content types: [application/xml]",
	"NotImplemented": [
		"unsupported content types"
	]
}