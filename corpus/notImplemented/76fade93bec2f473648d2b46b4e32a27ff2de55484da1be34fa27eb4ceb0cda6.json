{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/saps4hana.itcm.promotion/openapi.yaml",
			"byteSize": 19015,
			"content": "openapi: 3.0.1\ninfo:\n  title: Promotion Service\n  description: \u003e\n    This is a generated connector for [SAPS4HANA Intelligent Trade Claims Management API v1.0.0](https://help.sap.com/viewer/902b9d277dfe48fea582d28849d54935/CURRENT/en-US) OpenAPI specification. \n    \n    In SAPS4HANA Intelligent Trade Claims Management, the promotion service allows you to create, add, and delete information about promotions. Execution of Promotions should be done in an particular order.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n\n    Create and configure an OAuth2 client credentials by following [this guide](https://help.sap.com/viewer/b865ed651e414196b39f8922db2122c7/LATEST/en-US/7aefa21a65f94b25b7e639c3931b6f83.html).\n  x-ballerina-display:\n    label: SAPS4HANA ITCM Promotion\n    iconPath: \"icon.png\"\n  license:\n    name: SAP\n  version: 1.0.0\nexternalDocs:\n  description: ' Business Documentation Promotion Service'\n  url: https://help.sap.com/viewer/902b9d277dfe48fea582d28849d54935/CURRENT/en-US/5de0a32f034a4692b023f586b80f9b01.html\n# servers:\n# - url: https://{host}.{environment}.{domain}/v1\n#   variables:\n#     host:\n#       default: api.dev1\n#       description: Your host where SAP Intelligent Trade Claims Management has deployed\n#     environment:\n#       default: e2e\n#       description: Your defined environment for your SAP Intelligent Trade Claims Management account\n#     domain:\n#       default: eurekacloud.io\nsecurity:\n- OAuth2: []\ntags:\n- name: Promotion\npaths:\n  /promotions:\n    post:\n      tags:\n      - Promotion\n      summary: Create a new Promotion\n      description: Using this API, user can create a Promotion. As of now, batch creation is not supported\n      operationId: createPromotion\n      requestBody:\n        description: Request payload to create promotion\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExternalPromotionDTO'\n        required: true\n      responses:\n        '201':\n          description: Success Created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePromotionCreationMessage'\n        '400':\n          description: Bad Request.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                - $ref: '#/components/schemas/ResponseInvalidCustomer'\n                - $ref: '#/components/schemas/ResponseInvalidDate'\n                - $ref: '#/components/schemas/ResponseInvalidProduct'\n        '401':\n          description: Unauthorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseUnauthorizedMessage'\n        '403':\n          description: Forbidden (insufficient authorization).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseForbiddenMessage'\n      deprecated: false\n      security:\n      - OAuth2: []\n  /promotions/{externalId}:\n    get:\n      tags:\n      - Promotion\n      summary: Get Promotion with externalId\n      description: Using this API, user can get a particular Promotion using {externalId}\n      operationId: getPromotionByExternalId\n      parameters:\n      - name: externalId\n        in: path\n        description: The external id of the promotion, for example `348328430`\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseExternalPromotionMessage'\n        '401':\n          description: Unauthorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseUnauthorizedMessage'\n        '403':\n          description: Forbidden (insufficient authorization).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseForbiddenMessage'\n        '404':\n          description: Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseNotFoundMessage'\n      deprecated: false\n      security:\n      - OAuth2: []\n    delete:\n      tags:\n      - Promotion\n      summary: Delete a Promotion with externalId\n      description: Using this API, a user can delete a particular Promotion using {externalId}\n      operationId: deletePromotion\n      parameters:\n      - name: externalId\n        in: path\n        description: The external id of the promotion, for example `348328430`\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePromotionDeletionMessage'\n        '401':\n          description: Unauthorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseUnauthorizedMessage'\n        '403':\n          description: Forbidden (insufficient authorization).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseForbiddenMessage'\n        '404':\n          description: Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseNotFoundMessage'\n      deprecated: false\n      security:\n      - OAuth2: []\ncomponents:\n  schemas:\n    ExternalCustomerHierarchyNodeKeyVDTO:\n      type: object\n      required:\n      - customerHierarchyNodeId\n      - customerHierarchyTypeCode\n      - hierarchyId\n      properties:\n        customerHierarchyNodeId:\n          type: string\n          minLength: 0\n          maxLength: 18\n        customerHierarchyTypeCode:\n          type: string\n          minLength: 0\n          maxLength: 2\n        hierarchyId:\n          type: string\n          minLength: 0\n          maxLength: 20\n          pattern: '[a-zA-Z0-9/ ]*'\n      title: Customer HierarchyNode Key\n    ExternalProductHierarchyNodeKeyVDTO:\n      type: object\n      required:\n      - productHierarchyNodeId\n      - productHierarchyTypeCode\n      - hierarchyId\n      properties:\n        hierarchyId:\n          type: string\n          minLength: 0\n          maxLength: 20\n          pattern: '[a-zA-Z0-9/ ]*'\n        productHierarchyNodeId:\n          type: string\n          minLength: 0\n          maxLength: 18\n        productHierarchyTypeCode:\n          type: string\n          minLength: 0\n          maxLength: 2\n      title: Product Hierarchy NodeKey\n    ExternalPromotionCustomerVDTO:\n      type: object\n      properties:\n        customerExternalId:\n          type: string\n          minLength: 0\n          maxLength: 60\n        customerHierarchyNodeKey:\n          $ref: '#/components/schemas/ExternalCustomerHierarchyNodeKeyVDTO'\n      title: Promotion Customer\n    ExternalPromotionDTO:\n      type: object\n      required:\n      - externalId\n      - businessSystem\n      - promotionCustomer\n      - promotionDates\n      - promotionProducts\n      properties:\n        businessSystem:\n          type: integer\n          format: int64\n        description:\n          type: string\n          minLength: 0\n          maxLength: 240\n        documentReferences:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExternalPromotionReferenceDTO'\n        externalId:\n          type: string\n          minLength: 1\n          maxLength: 36\n        externalSalesArea:\n          $ref: '#/components/schemas/ExternalSalesAreaVDTO'\n        id:\n          type: integer\n          format: int64\n        internalId:\n          type: string\n        isMarkedForDeletion:\n          type: boolean\n        promotionCustomer:\n          $ref: '#/components/schemas/ExternalPromotionCustomerVDTO'\n        promotionDates:\n          type: array\n          items:\n            $ref: '#/components/schemas/PromotionDateDTO'\n        promotionProducts:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExternalPromotionProductDTO'\n        status:\n          type: string\n          enum:\n          - PLANNED\n          - INPROCESS\n          - CLOSED\n          - Approved\n          - NotAssigned\n        types:\n          type: array\n          items:\n            $ref: '#/components/schemas/PromotionTypeCodeV'\n      title: Promotion\n      example:\n        externalId: '348'\n        businessSystem: 123\n        description: Adding Promotion description\n        types: []\n        isMarkedForDeletion: false\n        promotionCustomer:\n          customerExternalId: '1'\n        status: PLANNED\n        promotionDates:\n        - promotionDateTypeCode: SELL_IN\n          validFrom: 3-29-19\n          validTo: 01-02-21\n        promotionProducts:\n        - productExternalId: null\n          productHierarchyNodeKey:\n            hierarchyId: '123456'\n            productHierarchyTypeCode: P1\n            productHierarchyNodeId: '0101010'\n        documentReferences:\n        - documentType: text\n          documentId: referenceDocument 01\n        externalSalesArea:\n          salesOrganization: '002'\n          salesDivision: '0037'\n          distributionChannel: '001'\n    PromotionDateDTO:\n      title: Promotion Date\n      type: object\n      required:\n      - promotionDateTypeCode\n      - validFrom\n      - validTo\n      properties:\n        promotionDateTypeCode:\n          type: string\n          enum:\n          - SELL_IN\n          - SELL_OUT\n        validFrom:\n          type: string\n          example: MM-dd-yy\n        validTo:\n          type: string\n          example: MM-dd-yy\n    ExternalPromotionProductDTO:\n      type: object\n      required:\n      - productExternalId\n      - productHierarchyNodeKey\n      properties:\n        productExternalId:\n          type: string\n          minLength: 0\n          maxLength: 40\n        productHierarchyNodeKey:\n          $ref: '#/components/schemas/ExternalProductHierarchyNodeKeyVDTO'\n      title: Promotion Product\n    ExternalPromotionReferenceDTO:\n      type: object\n      properties:\n        documentId:\n          type: string\n          minLength: 0\n          maxLength: 20\n        documentType:\n          type: string\n          minLength: 0\n          maxLength: 2\n      title: Promotion Reference\n    PromotionTypeCodeV:\n      title: Promotion Type Code\n      type: object\n      properties:\n        promotionTypeCode:\n          type: string\n          enum:\n          - BillBack\n          - CorrectionRebate\n          - ExclusivityPreferre\n          - CorrectionListFees\n          - CorrectionBillBack\n          - CorrectionEXCL\n          - Rebate\n          - AdFees\n          - LSLumpSum\n          - EDLP\n          - NotAssigned\n          - NonConsPriceAdj\n          - CorrectionNCPA\n          - Merchandising\n          - CorrectionMerch\n          - EndUser\n          - MarketingDealOI\n    ExternalSalesAreaVDTO:\n      type: object\n      properties:\n        distributionChannel:\n          type: string\n          minLength: 0\n          maxLength: 2\n        salesDivision:\n          type: string\n          minLength: 0\n          maxLength: 2\n        salesOrganization:\n          type: string\n          minLength: 0\n          maxLength: 4\n      title: Sales Area\n    ResponseExternalPromotionListMessage:\n      type: object\n      properties:\n        message:\n          type: string\n        promotions:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExternalPromotionDTO'\n        timestamp:\n          type: string\n          format: date-time\n      title: All promotions\n    ResponseMessage:\n      title: Response Message\n      type: object\n      properties:\n        message:\n          type: string\n        uri:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n    ResponsePromotionCreationMessage:\n      title: Promotion creation\n      type: object\n      example:\n        message: Success Created!\n        externalid: '3483284'\n        timestamp: '2021-01-18T21:07:56.026+00:00'\n      properties:\n        externalId:\n          type: integer\n          format: int64\n          example: '1234567'\n        message:\n          type: string\n          example: Success Created!\n        timestamp:\n          type: string\n          format: date-time\n    ResponseInvalidDate:\n      title: Invalid Date\n      type: object\n      example:\n        message: Invalid Date Format, expected format - MM-dd-yy.\n        timestamp: '2021-01-18T21:09:12.961+00:00'\n        uri: /v1/promotions\n      properties:\n        externalId:\n          type: integer\n          format: int64\n        message:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n    ResponseInvalidCustomer:\n      title: Invalid Customer\n      type: object\n      properties:\n        message:\n          type: string\n          example: Invalid Customer. Customer related to this Promotion doesn't exists. Please refer to the sequence documentation.\n        uri:\n          type: string\n          example: /v1/promotions\n        timestamp:\n          type: string\n          format: date-time\n          example: '2021-01-18T21:08:43.123+00:00'\n    ResponseNotFoundMessage:\n      type: object\n      example:\n        message: There is no data found based on the given inputs.\n        error: No Result Found\n        timestamp: '2021-01-18T19:37:13.701+00:00'\n      properties:\n        message:\n          type: string\n        error:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n      title: Not Found Message\n    ResponseForbiddenMessage:\n      type: object\n      example:\n        message: Access denied\n        timestamp: '2021-01-18T18:33:18.914Z'\n      properties:\n        message:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n        uri:\n          type: string\n      title: Forbidden Message\n    ResponseUnauthorizedMessage:\n      type: object\n      example:\n        message: Unauthorized/API key not found\n        timestamp: '2021-01-18T18:33:18.914Z'\n      properties:\n        message:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n        uri:\n          type: string\n      title: Unauthorized Message\n    ResponseInvalidProduct:\n      title: Invalid Product\n      type: object\n      example:\n        message: Invalid productHierarchyNodeId object. Hierarchy Node doesn't exists for the given productHierarchyNodeId. Please refer to the sequence documentation.\n        timestamp: '2021-01-18T21:09:50.119+00:00'\n        uri: /v1/promotions\n      properties:\n        message:\n          type: string\n        uri:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n    ResponsePromotionDeleteAllMessage:\n      title: All promotions deletion\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        message:\n          type: string\n          example: Promotions deleted.\n        timestamp:\n          type: string\n          format: date-time\n    ResponsePromotionDeletionMessage:\n      title: Single promotion deletion\n      type: object\n      example:\n        message: Promotion deleted.\n        externalid: '3483284'\n        timestamp: '2021-01-18T21:15:22.833+00:00'\n      properties:\n        externalId:\n          type: string\n        message:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n    ResponseNotFoundPromotionDeletionMessage:\n      title: Promotion not Found\n      type: object\n      example:\n        message: Promotion has already been deleted or does not exist.\n        externalid: '34832847811'\n        timestamp: '2021-01-18T21:14:38.269+00:00'\n      properties:\n        externalId:\n          type: string\n        message:\n          type: string\n        promotion:\n          $ref: '#/components/schemas/ExternalPromotionDTO'\n        timestamp:\n          type: string\n          format: date-time\n    ResponseExternalPromotionMessage:\n      type: object\n      example:\n        message: Found the promotion for the given externalId.\n        externalid: '3483284'\n        promotion:\n          id: 18353\n          externalId: '3483284'\n          businessSystem: 5279\n          description: Adding new one more Promotion description after few changes\n          types: null\n          isMarkedForDeletion: false\n          promotionCustomer:\n            customerExternalId: '1'\n            customerHierarchyNodeKey: null\n          status: PLANNED\n          promotionDates:\n          - promotionDateTypeCode: SELL_IN\n            validFrom: 03-29-19\n            validTo: 01-02-21\n          promotionProducts:\n          - productExternalId: null\n            productHierarchyNodeKey:\n              hierarchyId: 12sdf3456\n              productHierarchyTypeCode: P1\n              productHierarchyNodeId: '0101010'\n          documentReferences:\n          - documentType: text document\n            documentId: referenceDocument 01\n          externalSalesArea:\n            salesOrganization: '002'\n            salesDivision: '0037'\n            distributionChannel: '001'\n        timestamp: '2021-01-18T21:11:39.143+00:00'\n      properties:\n        externalId:\n          type: string\n        message:\n          type: string\n        count:\n          type: integer\n          format: int32\n        promotion:\n          $ref: '#/components/schemas/ExternalPromotionDTO'\n        timestamp:\n          type: string\n          format: date-time\n      title: Promotion found\n    ResponseNotFoundPromotionMessage:\n      title: Promotion not found\n      type: object\n      example:\n        message: Not Found.\n        externalid: '34832841'\n        promotion: null\n        timestamp: '2021-01-18T21:11:56.232+00:00'\n      properties:\n        externalId:\n          type: string\n          example: '123456'\n        message:\n          type: string\n          example: Not Found\n        promotion:\n          $ref: '#/components/schemas/ExternalPromotionDTO'\n        timestamp:\n          type: string\n          format: date-time\n  securitySchemes:\n    OAuth2:\n      type: oauth2\n      description: To use this API, you need to get OAuth client credentials (client ID, secret) from SAP ITCM, and be authorized to use the relevant scope. Refer to the \u003ca href=\"https://developer.sap.com/api-reference/authentication/getting-started.html\"\u003efull authentication information\u003c/a\u003e for more information.\n      flows:\n        clientCredentials:\n          tokenUrl: https://colgate-dev1.authentication.us30.hana.ondemand.com/oauth/token\n          scopes: {}\nx-sap-shortText: The Promotion Service represent the promotion that can be posted to, deleted or queried from SAP Intelligent Trade Claims Management by a user.",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/saps4hana.itcm.promotion/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/saps4hana.itcm.promotion/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/promotions\": post: responses: 400: contents: application/json: generate schema: oneOf: oneOf CreatePromotionBadRequest: variant ResponseInvalidProduct: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference",
		"oauth2 security"
	]
}