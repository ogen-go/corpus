{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/brreg/openAPI"
		},
		"file": {
			"name": "fdk.yaml",
			"size": 0,
			"path": "specs/fdk.yaml",
			"byteSize": 25376,
			"content": "openapi: 3.0.0\ninfo:\n  description: Provides a basic search api against the National Data Directory of Norway\n  version: '1.0'\n  title: National Data Directory Search API\n  termsOfService: 'https://fellesdatakatalog.brreg.no/about'\n  contact:\n    name: Brønnøysundregistrene\n    url: 'https://fellesdatakatalog.brreg.no'\n    email: fellesdatakatalog@brreg.no\n  license:\n    name: License of API\n    url: 'http://data.norge.no/nlod/no/2.0'\nexternalDocs:\n  description: Dokumentasjon på Informasjonsforvaltning GitHub\n  url: https://informasjonsforvaltning.github.io/felles-datakatalog/datasett-katalog/api/\ntags:\n  - name: catalog-service\n    description: Catalog Service\n  - name: datasets-query-service\n    description: Datasets Query Service\n  - name: harvest-query-service\n    description: Harvest Query Service\n  - name: publisher-query-service\n    description: Publisher Query Service\n  - name: terms-query-service\n    description: Terms Query Service\npaths:\n  /aggregateDataset:\n    get:\n      tags:\n        - datasets-query-service\n      summary: Aggregates dataset count per organization path.\n      operationId: aggregateDatasetsUsingGET\n      parameters:\n        - name: q\n          in: query\n          description: q\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /catalogs:\n    get:\n      tags:\n        - catalog-service\n      summary: \u003e-\n        Returns a specific harvested catalog according to the DCAT-AP-NO\n        standard in one out of the three supported RDF formats.\n      description: \u003e-\n        The three formats are: text/turtle, application/ld+json and\n        application/rdf+xml\n      operationId: getCatalogDcatUsingGET\n      parameters:\n        - name: Accept\n          in: header\n          description: \u003e-\n            The result's format. Alternative to format query string:\n            text/turtle, application/ld+json, application/rdf+xml\n          required: false\n          schema:\n            type: string\n        - name: id\n          in: query\n          description: The URI of the catalog as used in harvested file\n          required: true\n          schema:\n            type: string\n        - name: format\n          in: query\n          description: \u003e-\n            The result's format. An alternative to Accept header: json for\n            json-ld, ttl -for turtle, xml or rdf for rdf-xml\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/Catalog'\n            application/rdf+xml:\n              schema:\n                $ref: '#/components/schemas/Catalog'\n            text/turtle:\n              schema:\n                $ref: '#/components/schemas/Catalog'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /dataset:\n    get:\n      tags:\n        - catalog-service\n      summary: \u003e-\n        Returns a specific dataset in accordance with the DCAT-AP-NO standard in\n        one out of the three supported RDF formats.\n      description: \u003e-\n        The three formats are: text/turtle, application/ld+json and\n        application/rdf+xml\n      operationId: getDatasetDcatUsingGET\n      parameters:\n        - name: id\n          in: query\n          description: \u003e-\n            The id of the dataset. The id is a uuid given by the harvester\n            application.\n          required: false\n          schema:\n            type: string\n        - name: format\n          in: query\n          description: \u003e-\n            The result's format. An alternative to Accept header: json for\n            json-ld, ttl -for turtle, xml or rdf for rdf-xml\n          required: false\n          schema:\n            type: string\n        - name: Accept\n          in: header\n          description: \u003e-\n            The result's format. Alternative to format query string:\n            text/turtle, application/ld+json, application/rdf+xml\n          required: false\n          schema:\n            type: string\n            default: '*/*'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n            application/rdf+xml:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n            text/turtle:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /datasets:\n    get:\n      tags:\n        - datasets-query-service\n      summary: Queries the catalog for datasets.\n      description: \u003e-\n        Returns a list of matching datasets wrapped in a elasticsearch response.\n        Max number returned by a single query is 100. Size parameters greater\n        than 100 will not return more than 100 datasets. In order to access all\n        datasets, use multiple queries and increment from parameter.\n      operationId: searchUsingGET\n      parameters:\n        - name: q\n          in: query\n          description: the query string\n          required: false\n          schema:\n            type: string\n        - name: theme\n          in: query\n          description: 'Filters on specified theme(s). ex. GOVE, or GOVE,SOCI'\n          required: false\n          schema:\n            type: string\n        - name: publisher\n          in: query\n          description: Filters on publisher name\n          required: false\n          schema:\n            type: string\n        - name: accessrights\n          in: query\n          description: 'Filters on accessrights, codes are PUBLIC, RESTRICTED or NON_PUBLIC '\n          required: false\n          schema:\n            type: string\n        - name: orgPath\n          in: query\n          description: \u003e-\n            Filters on publisher's organization path (orgPath), e.g.\n            /STAT/972417858/971040238\n          required: false\n          schema:\n            type: string\n        - name: firstHarvested\n          in: query\n          description: \u003e-\n            Filters datasets that were first harvested x-days ago, e.g. a value\n            of 100 will result in datasets that were harvested more than 100\n            days ago\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: lastHarvested\n          in: query\n          description: \u003e-\n            Filters datasets that were last harvested x-days ago, e.g. 10 will\n            result in datasets that have not been harvested for the last 10\n            days.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: lastChanged\n          in: query\n          description: \u003e-\n            Filters datasets that has changed within the last x-days, e.g. a\n            value of 10 will result in datasets that were changed during 10\n            days, i.e. its values have changed within the last 10 days\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: from\n          in: query\n          description: \u003e-\n            Returns datatasets from position x in the result set, 0 is the\n            default value. A value of 150 will return the 150th dataset in the\n            resultset\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          description: \u003e-\n            Specifies the size, i.e. the number of datasets to return in one\n            request. The default is 10, the maximum number of datasets returned\n            is 100\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 10\n        - name: lang\n          in: query\n          description: \u003e-\n            Specifies the language elements of the datasets to search in,\n            default is nb\n          required: false\n          schema:\n            type: string\n            default: nb\n        - name: sortfield\n          in: query\n          description: \u003e-\n            Specifies the sort field, at the present we support title, modified\n            and publisher. Default is no value\n          required: false\n          schema:\n            type: string\n        - name: sortdirection\n          in: query\n          description: \u003e-\n            Specifies the sort direction of the sorted result. The directions\n            are: asc for ascending and desc for descending\n          required: false\n          schema:\n            type: string\n        - name: subject\n          in: query\n          description: Filters datasets according their referred subjects\n          required: false\n          schema:\n            type: string\n        - name: provenance\n          in: query\n          description: \u003e-\n            Filters datasets according to their provenance code, e.g. NASJONAL -\n            nasjonal building block, VEDTAK - governmental decisions, BRUKER -\n            user collected data and TREDJEPART - third party data\n          required: false\n          schema:\n            type: string\n        - name: spatial\n          in: query\n          description: 'Filters datasets according to their spatial label, e.g. Oslo, Norge'\n          required: false\n          schema:\n            type: string\n        - name: opendata\n          in: query\n          description: \u003e-\n            Filters on distribution license and access rights. If true the\n            distribution licence is open and the access rights are public.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /datasets/**:\n    get:\n      tags:\n        - datasets-query-service\n      summary: Get a specific dataset.\n      description: You must specify the dataset's identifier\n      operationId: detailUsingGET\n      responses:\n        '200':\n          description: OK\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n            application/rdf+xml:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n            text/turtle:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /harvest/catalog:\n    get:\n      tags:\n        - harvest-query-service\n      summary: Finds all harvest catalog records for a given orgpath.\n      operationId: listCatalogHarvestRecordsUsingGET\n      parameters:\n        - name: q\n          in: query\n          description: 'The orgpath of the publisher, e.g. /STAT or /FYLKE'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /publisher:\n    get:\n      tags:\n        - publisher-query-service\n      summary: Query for publishers.\n      description: Returns the elasticsearch response with matching publishers\n      operationId: publishersUsingGET\n      parameters:\n        - name: q\n          in: query\n          description: A query string to match a publisher name\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Publisher'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /publisher/hierarchy:\n    get:\n      tags:\n        - publisher-query-service\n      summary: Returns all publishers in a hierarchy.\n      operationId: publisherNamesUsingGET\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublisherHit'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /publishercount:\n    get:\n      tags:\n        - datasets-query-service\n      summary: Aggregate dataset count per publisher.\n      description: \u003e-\n        Returns a list of publishers and the total number of dataset for each of\n        them\n      operationId: publisherCountUsingGET\n      parameters:\n        - name: publisher\n          in: query\n          description: publisher\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /terms:\n    get:\n      tags:\n        - terms-query-service\n      summary: Query for terms (concepts).\n      description: 'Returns the elasticsearch response with matching terms (dct:subject)'\n      operationId: searchUsingGET_1\n      parameters:\n        - name: q\n          in: query\n          description: The query to match a concept\n          required: false\n          schema:\n            type: string\n        - name: creator\n          in: query\n          description: Search for the creator (owner) of the term\n          required: false\n          schema:\n            type: string\n        - name: orgPath\n          in: query\n          description: Search for concepts based on orgpath\n          required: false\n          schema:\n            type: string\n        - name: from\n          in: query\n          description: The index position of the result set to start return concepts for\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          description: The size of the result set\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 10\n        - name: lang\n          in: query\n          description: The language to search in\n          required: false\n          schema:\n            type: string\n            default: nb\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subject'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /themecount:\n    get:\n      tags:\n        - datasets-query-service\n      summary: Aggregate dataset count per theme.\n      description: \u003e-\n        Returns a list of themes and the total number of datasets for each of\n        them\n      operationId: themecountUsingGET\n      parameters:\n        - name: code\n          in: query\n          description: code\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SkosConcept'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\nservers:\n  - url: 'https://fellesdatakatalog.brreg.no'\ncomponents:\n  schemas:\n    Catalog:\n      type: object\n      properties:\n        dataset:\n          type: array\n          items:\n            $ref: '#/components/schemas/Dataset'\n        description:\n          type: string\n        id:\n          type: string\n        issued:\n          type: string\n          format: date-time\n        language:\n          type: string\n        modified:\n          type: string\n          format: date-time\n        publisher:\n          $ref: '#/components/schemas/Publisher'\n        themeTaxonomy:\n          type: array\n          items:\n            type: string\n        title:\n          type: string\n        uri:\n          type: string\n    ConceptSchema:\n      type: object\n      properties:\n        id:\n          type: string\n        title:\n          type: string\n        versioninfo:\n          type: string\n        versionnumber:\n          type: string\n    Contact:\n      type: object\n      properties:\n        email:\n          type: string\n        fullname:\n          type: string\n        hasTelephone:\n          type: string\n        hasURL:\n          type: string\n        id:\n          type: string\n        organizationName:\n          type: string\n        organizationUnit:\n          type: string\n        uri:\n          type: string\n    DataTheme:\n      type: object\n      properties:\n        code:\n          type: string\n        conceptSchema:\n          $ref: '#/components/schemas/ConceptSchema'\n        id:\n          type: string\n        numberOfHits:\n          type: integer\n          format: int32\n        pickedDate:\n          type: string\n        startUse:\n          type: string\n        title:\n          type: string\n        uri:\n          type: string\n    Dataset:\n      type: object\n      properties:\n        accessRights:\n          $ref: '#/components/schemas/SkosCode'\n        accessRightsComment:\n          type: array\n          items:\n            type: string\n        accrualPeriodicity:\n          $ref: '#/components/schemas/SkosCode'\n        admsIdentifier:\n          type: array\n          items:\n            type: string\n        catalog:\n          $ref: '#/components/schemas/Catalog'\n        conformsTo:\n          type: array\n          items:\n            $ref: '#/components/schemas/SkosConcept'\n        contactPoint:\n          type: array\n          items:\n            $ref: '#/components/schemas/Contact'\n        description:\n          type: string\n        descriptionFormatted:\n          type: string\n        distribution:\n          type: array\n          items:\n            $ref: '#/components/schemas/Distribution'\n        harvest:\n          $ref: '#/components/schemas/HarvestMetadata'\n        hasAccuracyAnnotation:\n          $ref: '#/components/schemas/QualityAnnotation'\n        hasAvailabilityAnnotation:\n          $ref: '#/components/schemas/QualityAnnotation'\n        hasCompletenessAnnotation:\n          $ref: '#/components/schemas/QualityAnnotation'\n        hasCurrentnessAnnotation:\n          $ref: '#/components/schemas/QualityAnnotation'\n        hasRelevanceAnnotation:\n          $ref: '#/components/schemas/QualityAnnotation'\n        id:\n          type: string\n        identifier:\n          type: array\n          items:\n            type: string\n        informationModel:\n          type: array\n          items:\n            $ref: '#/components/schemas/SkosConcept'\n        issued:\n          type: string\n          format: date-time\n        keyword:\n          type: array\n          items:\n            $ref: '#/components/schemas/Map_string_string_'\n        landingPage:\n          type: array\n          items:\n            type: string\n        language:\n          type: array\n          items:\n            $ref: '#/components/schemas/SkosCode'\n        legalBasisForAccess:\n          type: array\n          items:\n            $ref: '#/components/schemas/SkosConcept'\n        legalBasisForProcessing:\n          type: array\n          items:\n            $ref: '#/components/schemas/SkosConcept'\n        legalBasisForRestriction:\n          type: array\n          items:\n            $ref: '#/components/schemas/SkosConcept'\n        modified:\n          type: string\n          format: date-time\n        objective:\n          type: string\n        page:\n          type: array\n          items:\n            type: string\n        provenance:\n          $ref: '#/components/schemas/SkosCode'\n        provenanceSort:\n          type: string\n        publisher:\n          $ref: '#/components/schemas/Publisher'\n        references:\n          type: array\n          items:\n            $ref: '#/components/schemas/Reference'\n        sample:\n          type: array\n          items:\n            $ref: '#/components/schemas/Distribution'\n        source:\n          type: string\n        spatial:\n          type: array\n          items:\n            $ref: '#/components/schemas/SkosCode'\n        subject:\n          type: array\n          items:\n            $ref: '#/components/schemas/Subject'\n        temporal:\n          type: array\n          items:\n            $ref: '#/components/schemas/PeriodOfTime'\n        theme:\n          type: array\n          items:\n            $ref: '#/components/schemas/DataTheme'\n        title:\n          type: string\n        type:\n          type: string\n        uri:\n          type: string\n    Distribution:\n      type: object\n      properties:\n        accessURL:\n          type: array\n          items:\n            type: string\n        conformsTo:\n          type: array\n          items:\n            $ref: '#/components/schemas/SkosConcept'\n        description:\n          type: string\n        downloadURL:\n          type: array\n          items:\n            type: string\n        format:\n          type: array\n          items:\n            type: string\n        id:\n          type: string\n        license:\n          $ref: '#/components/schemas/SkosConcept'\n        openLicense:\n          type: boolean\n        page:\n          type: array\n          items:\n            $ref: '#/components/schemas/SkosConcept'\n        title:\n          type: string\n        type:\n          type: string\n        uri:\n          type: string\n    HarvestMetadata:\n      type: object\n      properties:\n        changed:\n          type: array\n          items:\n            type: string\n            format: date-time\n        firstHarvested:\n          type: string\n          format: date-time\n        lastChanged:\n          type: string\n          format: date-time\n        lastHarvested:\n          type: string\n          format: date-time\n    Hits:\n      type: object\n      properties:\n        hits:\n          type: array\n          items:\n            $ref: '#/components/schemas/PublisherHit'\n    PeriodOfTime:\n      type: object\n      properties:\n        endDate:\n          type: string\n          format: date-time\n        id:\n          type: string\n        name:\n          type: string\n        startDate:\n          type: string\n          format: date-time\n    Publisher:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        orgPath:\n          type: string\n        uri:\n          type: string\n    PublisherHit:\n      type: object\n      properties:\n        children:\n          type: array\n          items:\n            $ref: '#/components/schemas/PublisherHit'\n        name:\n          type: string\n        orgPath:\n          type: string\n    QualityAnnotation:\n      type: object\n      properties:\n        hasBody:\n          type: string\n        inDimension:\n          type: string\n        motivatedBy:\n          type: string\n    Reference:\n      type: object\n      properties:\n        referenceType:\n          $ref: '#/components/schemas/SkosCode'\n        source:\n          $ref: '#/components/schemas/SkosConcept'\n    SkosCode:\n      type: object\n      properties:\n        code:\n          type: string\n        prefLabel:\n          type: string\n        uri:\n          type: string\n    SkosConcept:\n      type: object\n      properties:\n        extraType:\n          type: string\n        prefLabel:\n          type: string\n        uri:\n          type: string\n    Subject:\n      type: object\n      properties:\n        altLabel:\n          type: array\n          items:\n            $ref: '#/components/schemas/Map_string_string_'\n        creator:\n          $ref: '#/components/schemas/Publisher'\n        datasets:\n          type: array\n          items:\n            $ref: '#/components/schemas/Dataset'\n        definition:\n          type: string\n        identifier:\n          type: string\n        inScheme:\n          type: array\n          items:\n            type: string\n        note:\n          type: string\n        prefLabel:\n          type: string\n        source:\n          type: string\n        uri:\n          type: string\n    Map_string_string_:\n      type: string\n",
			"canonicalURL": "/github.com/brreg/openAPI@0c563b3c4a1cd83aec3c5c2e691d425f7effa612/-/blob/specs/fdk.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/brreg/openAPI/blob/0c563b3c4a1cd83aec3c5c2e691d425f7effa612/specs/fdk.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/catalogs\": get: responses: 200: contents: unsupported content types: [application/ld+json, application/rdf+xml, text/turtle]",
	"NotImplemented": [
		"unsupported content types"
	]
}