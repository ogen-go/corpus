{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/4shen/webshell"
		},
		"file": {
			"name": "api-description.json",
			"size": 0,
			"path": "dataset/benign/SSilence/selfoss-master/docs/api-description.json",
			"byteSize": 33878,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"servers\": [],\n  \"info\": {\n    \"description\": \"You can access selfoss by using the same backend as selfoss user interface: The RESTful HTTP JSON API. There are a few urls where you can get information from selfoss and some for updating data. Assume you want all tags for rendering this in your own app. You have to make an HTTP GET call on the url /tags:\\n\\n```\\nGET http://yourselfossurl.com/tags\\n```\\nThe result is following JSON formatted response (in this example two tags “blog” and “deviantart” are available:\\n\\n```\\n[{\\\"tag\\\":\\\"blog\\\",\\\"color\\\":\\\"#251f10\\\",\\\"unread\\\":\\\"1\\\"},\\n{\\\"tag\\\":\\\"deviantart\\\",\\\"color\\\":\\\"#e78e5c\\\",\\\"unread\\\":\\\"0\\\"}]\\n```\\n\\nFollowing docs shows you which calls are possible and which response you can expect.\",\n    \"version\": \"2.21.0\",\n    \"title\": \"selfoss\"\n  },\n  \"tags\": [\n    {\n      \"name\": \"Authentication\",\n      \"description\": \"When you are using a login protected page, you have to add the parameter `username` and `password` in every request (as GET or POST parameter). The logical consequence is that you have to use https.\\n\\nFo0r an initial login functionality in your app you can validate a username password combination using `GET /login`.\\n\\nAlternately, you can use session cookie on subsequent requests.\"\n    }\n  ],\n  \"paths\": {\n    \"/api/about\": {\n      \"get\": {\n        \"summary\": \"Provide information about the selfoss instance\",\n        \"description\": \"\",\n        \"operationId\": \"about\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"publicly available info about selfoss instance\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"version\": {\n                      \"description\": \"Selfoss version\",\n                      \"type\": \"string\"\n                    },\n                    \"apiversion\": {\n                      \"description\": \"Version of this API, separate from selfoss version, follows [semantic versioning](https://semver.org/) for documented endpoints and payloads.\",\n                      \"type\": \"string\"\n                    },\n                    \"configuration\": {\n                      \"description\": \"Subset of configuration options set by the administrator in `config.ini`. No keys can be assumed to be present.\",\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"example\": {\n                    \"version\": \"2.19\",\n                    \"apiversion\": \"2.20.0\",\n                    \"configuration\": {}\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"summary\": \"Authenticate the user\",\n        \"description\": \"\",\n        \"operationId\": \"login\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"false if credentials are incorrect\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Response\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"username\": {\n                    \"description\": \"the username which should be validated\",\n                    \"type\": \"string\"\n                  },\n                  \"password\": {\n                    \"description\": \"the password which should be validated\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"username\"\n                ]\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/logout\": {\n      \"post\": {\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"summary\": \"Deauthenticate the user\",\n        \"description\": \"Destroys the session on the server\",\n        \"operationId\": \"logout\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"always true\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Response\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/items\": {\n      \"get\": {\n        \"tags\": [\n          \"Items\"\n        ],\n        \"summary\": \"List items\",\n        \"operationId\": \"getItems\",\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"set nothing for getting the newest entries, “unread” for getting only unread items and “starred” for getting only marked items.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"unread\",\n                \"starred\"\n              ]\n            }\n          },\n          {\n            \"name\": \"search\",\n            \"in\": \"query\",\n            \"description\": \"shows only items with given search in title, content or sources title\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"tag\",\n            \"in\": \"query\",\n            \"description\": \"shows only items of sources with the given tag\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"source\",\n            \"in\": \"query\",\n            \"description\": \"shows only items of a given source (id of the source)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"start listing with given n-th item (for pagination)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"items\",\n            \"in\": \"query\",\n            \"description\": \"amount of items which should be returned (for pagination), maximum 200 items per request\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"updatedsince\",\n            \"in\": \"query\",\n            \"description\": \"only list items which are newer as given date in yyyy-mm-dd hh:mm:ss format\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Item\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid parameters\"\n          }\n        },\n        \"security\": [\n          {\n            \"selfoss_auth\": []\n          }\n        ]\n      }\n    },\n    \"/mark/{itemId}\": {\n      \"post\": {\n        \"tags\": [\n          \"Items\"\n        ],\n        \"summary\": \"Mark item as read\",\n        \"description\": \"\",\n        \"parameters\": [\n          {\n            \"name\": \"itemId\",\n            \"in\": \"path\",\n            \"description\": \"the id of the item/article\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Response\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          }\n        },\n        \"security\": [\n          {\n            \"selfoss_auth\": [\n              \"write:items\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/unmark/{itemId}\": {\n      \"post\": {\n        \"tags\": [\n          \"Items\"\n        ],\n        \"summary\": \"Mark item as unread\",\n        \"description\": \"\",\n        \"parameters\": [\n          {\n            \"name\": \"itemId\",\n            \"in\": \"path\",\n            \"description\": \"the id of the item/article\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Response\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          }\n        },\n        \"security\": [\n          {\n            \"selfoss_auth\": [\n              \"write:items\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/mark/\": {\n      \"post\": {\n        \"tags\": [\n          \"Items\"\n        ],\n        \"summary\": \"Mark a list of items as read\",\n        \"description\": \"\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Response\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"description\": \"a list of all ids for marking as read\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"integer\"\n                }\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"deprecated\": true,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"ids\": {\n                    \"description\": \"a list of all ids for marking as read\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                },\n                \"required\": [\n                  \"ids\"\n                ]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"selfoss_auth\": [\n              \"write:items\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/starr/{itemId}\": {\n      \"post\": {\n        \"tags\": [\n          \"Items\"\n        ],\n        \"summary\": \"Mark item as starred\",\n        \"description\": \"\",\n        \"parameters\": [\n          {\n            \"name\": \"itemId\",\n            \"in\": \"path\",\n            \"description\": \"the id of the item/article\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Response\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          }\n        },\n        \"security\": [\n          {\n            \"selfoss_auth\": [\n              \"write:items\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/unstarr/{itemId}\": {\n      \"post\": {\n        \"tags\": [\n          \"Items\"\n        ],\n        \"summary\": \"Mark item as not starred\",\n        \"description\": \"\",\n        \"parameters\": [\n          {\n            \"name\": \"itemId\",\n            \"in\": \"path\",\n            \"description\": \"the id of the item/article\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Response\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          }\n        },\n        \"security\": [\n          {\n            \"selfoss_auth\": [\n              \"write:items\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/stats\": {\n      \"get\": {\n        \"tags\": [\n          \"Items\"\n        ],\n        \"summary\": \"Statistics\",\n        \"description\": \"Returns basic statistic: number of unread items, number of all items, number of starred items.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"all\": {\n                      \"type\": \"integer\"\n                    },\n                    \"unread\": {\n                      \"type\": \"integer\"\n                    },\n                    \"starred\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"selfoss_auth\": []\n          }\n        ]\n      }\n    },\n    \"/sources/list\": {\n      \"get\": {\n        \"tags\": [\n          \"Sources\"\n        ],\n        \"summary\": \"List sources\",\n        \"description\": \"Returns a list/array of all sources which was found ordered by title.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Source\"\n                  },\n                  \"example\": [\n                    {\n                      \"id\": \"2\",\n                      \"title\": \"devart\",\n                      \"tags\": [\"da\"],\n                      \"spout\": \"spouts\\\\deviantart\\\\dailydeviations\",\n                      \"params\": [],\n                      \"error\": \"\",\n                      \"icon\": \"8f05d7bb1e00caeb7a279037f129e1eb.png\"\n                    },\n                    {\n                      \"id\": \"1\",\n                      \"title\": \"Tobis Blog\",\n                      \"tags\": [\"blog\"],\n                      \"spout\": \"spouts\\\\rss\\\\feed\",\n                      \"params\": {\n                        \"url\": \"http://blog.aditu.de/feed\"\n                      },\n                      \"error\": \"\",\n                      \"icon\": \"7fe3d2c0fc27994dd267b3961d64226e.png\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"selfoss_auth\": []\n          }\n        ]\n      }\n    },\n    \"/source\": {\n      \"post\": {\n        \"tags\": [\n          \"Sources\"\n        ],\n        \"summary\": \"Add source\",\n        \"description\": \"\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"description\": \"the selfoss identifier for the (newly generated or existing) source\",\n                      \"type\": \"integer\",\n                      \"example\": 8\n                    },\n                    \"status\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"description\": \"JSON support added in \u003chttps://github.com/SSilence/selfoss/pull/849\u003e\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SourceRequest\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SourceRequest\"\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"selfoss_auth\": [\n              \"write:items\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/source/{itemId}\": {\n      \"post\": {\n        \"tags\": [\n          \"Sources\"\n        ],\n        \"summary\": \"Update source\",\n        \"description\": \"\",\n        \"parameters\": [\n          {\n            \"name\": \"itemId\",\n            \"in\": \"path\",\n            \"description\": \"the id of a source\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Response\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"description\": \"JSON support added in \u003chttps://github.com/SSilence/selfoss/pull/849\u003e\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SourceRequest\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SourceRequest\"\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"selfoss_auth\": [\n              \"write:items\"\n            ]\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Sources\"\n        ],\n        \"summary\": \"Delete source\",\n        \"description\": \"\",\n        \"parameters\": [\n          {\n            \"name\": \"itemId\",\n            \"in\": \"path\",\n            \"description\": \"the id of a source\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Response\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"selfoss_auth\": [\n              \"write:items\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/sources/spouts\": {\n      \"get\": {\n        \"tags\": [\n          \"Sources\"\n        ],\n        \"summary\": \"Get available spouts\",\n        \"description\": \"Returns all available spouts (types of sources). Every spout has it own parameters.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Spout\"\n                  },\n                  \"example\": {\n                    \"spouts\\\\deviantart\\\\dailydeviations\": {\n                      \"name\": \"deviantArt daily deviations\",\n                      \"description\": \"daily deviations of deviantart\",\n                      \"params\": false\n                    },\n                    \"spouts\\\\deviantart\\\\user\": {\n                      \"name\": \"deviantArt User\",\n                      \"description\": \"deviations of a deviantart user\",\n                      \"params\": {\n                        \"username\": {\n                          \"title\": \"Username\",\n                          \"type\": \"text\",\n                          \"default\": \"\",\n                          \"required\": true,\n                          \"validation\": [\n                            \"notempty\"\n                          ]\n                        }\n                      }\n                    },\n                    \"spouts\\\\rss\\\\feed\": {\n                      \"name\": \"RSS Feed\",\n                      \"description\": \"An default RSS Feed as source\",\n                      \"params\": {\n                        \"url\": {\n                          \"title\": \"URL\",\n                          \"type\": \"text\",\n                          \"default\": \"\",\n                          \"required\": true,\n                          \"validation\": [\n                            \"notempty\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"selfoss_auth\": []\n          }\n        ]\n      }\n    },\n    \"/sources/stats\": {\n      \"get\": {\n        \"tags\": [\n          \"Sources\"\n        ],\n        \"summary\": \"Source statistics\",\n        \"description\": \"Returns number of unread items for each source.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"integer\",\n                        \"description\": \"id of the source\"\n                      },\n                      \"title\": {\n                        \"type\": \"string\",\n                        \"description\": \"title of the source\"\n                      },\n                      \"unread\": {\n                        \"type\": \"integer\",\n                        \"description\": \"number of unread items of the source\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"selfoss_auth\": []\n          }\n        ]\n      }\n    },\n    \"/tags\": {\n      \"get\": {\n        \"tags\": [\n          \"Tags\"\n        ],\n        \"summary\": \"List all tags\",\n        \"description\": \"\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"tag\": {\n                        \"type\": \"string\",\n                        \"description\": \"name of the tag\"\n                      },\n                      \"color\": {\n                        \"type\": \"string\",\n                        \"description\": \"color of the tag\"\n                      },\n                      \"unread\": {\n                        \"type\": \"integer\",\n                        \"description\": \"number of unread items of the tag\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"selfoss_auth\": []\n          }\n        ]\n      }\n    },\n    \"/tags/color\": {\n      \"post\": {\n        \"tags\": [\n          \"Tags\"\n        ],\n        \"summary\": \"Set color of a tag\",\n        \"description\": \"\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"tag\": {\n                    \"description\": \"name of the tag\",\n                    \"type\": \"string\"\n                  },\n                  \"color\": {\n                    \"description\": \"new color of the tag\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"tag\",\n                  \"color\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Response\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"selfoss_auth\": []\n          }\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"foreground\": {\n            \"type\": \"string\",\n            \"format\": \"color\"\n          },\n          \"background\": {\n            \"type\": \"string\",\n            \"format\": \"color\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"Tag\"\n        }\n      },\n      \"Item\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"the selfoss identifier for this article. Use this for marking or star the entry later\",\n            \"type\": \"integer\"\n          },\n          \"datetime\": {\n            \"description\": \"the date and time of the article\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2013-04-07 13:43:00\"\n          },\n          \"title\": {\n            \"description\": \"the title of the article\",\n            \"type\": \"string\",\n            \"example\": \"FTTH: Google Fiber für eine neue Großstadt\"\n          },\n          \"content\": {\n            \"description\": \"the full content of the article\",\n            \"type\": \"string\",\n            \"example\": \"\\n\u003cp\u003eDas 1-GBit/s-Angebot Google Fiber kommt nach Austin, die Hauptstadt des US-Bundesstaates Texas...\"\n          },\n          \"unread\": {\n            \"description\": \"true when the article is marked as unread, false when the article is marked as read\",\n            \"type\": \"boolean\",\n            \"example\": true\n          },\n          \"starred\": {\n            \"description\": \"true when the article is marked as starred, false when the article is not marked as starred\",\n            \"type\": \"boolean\",\n            \"example\": false\n          },\n          \"source\": {\n            \"description\": \"the id of the source\",\n            \"type\": \"integer\",\n            \"example\": 5\n          },\n          \"thumbnail\": {\n            \"description\": \"the filename of the thumbnail if one was fetched by selfoss\",\n            \"type\": \"string\",\n            \"example\": \"\"\n          },\n          \"icon\": {\n            \"description\": \"the filename of the favicon if one was fetched by selfoss\",\n            \"type\": \"string\",\n            \"example\": \"0bb93b95508c0b05cd01247dd4f64cdb.png\"\n          },\n          \"uid\": {\n            \"description\": \"the uid given by the feed\",\n            \"type\": \"string\",\n            \"example\": \"http://www.golem.de/1304/98564-rss.html\"\n          },\n          \"link\": {\n            \"description\": \"the link which was given by the rss feed\",\n            \"type\": \"string\",\n            \"example\": \"http://rss.feedsportal.com/c/33374/f/578068/p/1/s/5eab1e78/l/0L0Sgol...\"\n          },\n          \"sourcetitle\": {\n            \"description\": \"the title of the source (which was entered by the user)\",\n            \"type\": \"string\",\n            \"example\": \"golem\"\n          },\n          \"tags\": {\n            \"description\": \"all tags of the source of this article\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"Source\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"the selfoss identifier for this source. Use this for deleting or updating the source\",\n            \"type\": \"integer\"\n          },\n          \"title\": {\n            \"description\": \"user given title\",\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"description\": \"user given tags\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"spout\": {\n            \"description\": \"the spout type. You can also get all available spout types by using the json api\",\n            \"type\": \"string\"\n          },\n          \"params\": {\n            \"description\": \"the params the user has set. This depends on the selected spout type. The example shows two different spout types. One without and one with an url parameter.\",\n            \"type\": \"object\"\n          },\n          \"error\": {\n            \"description\": \"the error message of the last fetch (empty if no error occured)\",\n            \"type\": \"string\"\n          },\n          \"icon\": {\n            \"description\": \"the filename of the favicon if one was found\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"SourceRequest\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"title\",\n          \"spout\",\n          \"tags\"\n        ],\n        \"properties\": {\n          \"title\": {\n            \"description\": \"a title for the source\",\n            \"type\": \"string\"\n          },\n          \"spout\": {\n            \"description\": \"the spout type for this source. You can get all available spout type by using the json API\",\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"description\": \"tags for this source\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"username\": {\n            \"description\": \"Username in “deviantART - user”, “deviantART - favs of a user”, Tumblr, Reddit anf “Twitter - User timeline” spouts\",\n            \"type\": \"string\"\n          },\n          \"user\": {\n            \"description\": \"Page name in “Facebook page feed” spout\",\n            \"type\": \"string\"\n          },\n          \"owner\": {\n            \"description\": \"Owner in GitHub spout\",\n            \"type\": \"string\"\n          },\n          \"repo\": {\n            \"description\": \"Repository in GitHub spout\",\n            \"type\": \"string\"\n          },\n          \"branch\": {\n            \"description\": \"Branch in GitHub spout\",\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"description\": \"“Subreddit or multireddit url” in Reddit spout, URL in RSS feed spouts\",\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"description\": \"Password in Reddit spouts\",\n            \"type\": \"string\"\n          },\n          \"section\": {\n            \"description\": \"Section in Golem, Heise and Prolinux spouts\",\n            \"type\": \"string\"\n          },\n          \"consumer_key\": {\n            \"description\": \"Consumer Key in Twitter spouts\",\n            \"type\": \"string\"\n          },\n          \"consumer_secret\": {\n            \"description\": \"Consumer Secret in Twitter spouts\",\n            \"type\": \"string\"\n          },\n          \"access_key\": {\n            \"description\": \"Access Key in Twitter spouts\",\n            \"type\": \"string\"\n          },\n          \"access_secret\": {\n            \"description\": \"Access Secret in Twitter spouts\",\n            \"type\": \"string\"\n          },\n          \"slug\": {\n            \"description\": \"List Slug in “Twitter - List timeline” spout\",\n            \"type\": \"string\"\n          },\n          \"owner_screen_name\": {\n            \"description\": \"Username in “Twitter - List timeline” spout\",\n            \"type\": \"string\"\n          },\n          \"channel\": {\n            \"description\": \"Channel in YouTube spout\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Spout\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"description\": \"User facing name of the spout\",\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"description\": \"Additional description (e.g. for tooltip)\",\n            \"type\": \"string\"\n          },\n          \"params\": {\n            \"description\": \"Parameters recognized by the spout\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/SpoutParam\"\n            }\n          }\n        }\n      },\n      \"SpoutParam\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"description\": \"Label of the parameter entry field\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"description\": \"Type of the parameter\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"text\",\n              \"password\",\n              \"checkbox\",\n              \"select\"\n            ]\n          },\n          \"default\": {\n            \"description\": \"Default value of the field\",\n            \"type\": \"string\"\n          },\n          \"required\": {\n            \"description\": \"Whether the parameter is required\",\n            \"type\": \"boolean\"\n          },\n          \"validation\": {\n            \"description\": \"List of parameter value constraints\",\n            \"type\": \"array\",\n            \"items\": {\n              \"enum\": [\n                \"alpha\",\n                \"email\",\n                \"numeric\",\n                \"int\",\n                \"alnum\",\n                \"notempty\"\n              ]\n            }\n          }\n        }\n      },\n      \"Response\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"description\": \"True if the operation succeeded. *Note:* Ideally, we should just use response codes and drop this.\",\n            \"type\": \"boolean\"\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"selfoss_auth\": {\n        \"type\": \"apiKey\",\n        \"name\": \"PHPSESSID\",\n        \"in\": \"cookie\"\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/4shen/webshell@5aa1fc5cfe6d51129a93ce5be194619de99cd96f/-/blob/dataset/benign/SSilence/selfoss-master/docs/api-description.json",
			"externalURLs": [
				{
					"url": "https://github.com/4shen/webshell/blob/5aa1fc5cfe6d51129a93ce5be194619de99cd96f/dataset/benign/SSilence/selfoss-master/docs/api-description.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/unmark/{itemId}\": post: security: security \"selfoss_auth\" (index 0): cookie security not implemented",
	"NotImplemented": [
		"cookie security"
	]
}