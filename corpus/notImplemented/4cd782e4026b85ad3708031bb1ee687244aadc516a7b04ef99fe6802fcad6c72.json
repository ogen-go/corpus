{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MEF-GIT/MEF-LSO-Sonata-SDK"
		},
		"file": {
			"name": "productOrderNotification.api.yaml",
			"size": 0,
			"path": "productApi/order/productOrderNotification.api.yaml",
			"byteSize": 30352,
			"content": "openapi: 3.0.1\ninfo:\n  description: |\n    **This file forms part of MEF W123**\n\n    **This specification represents MEF work in progress and is subject to\n    change.** \n\n    This API implements Business Requirements described in MEF W57.2\n\n    This is the API to manage notification for Product Order. This API must be\n    deployed on notification subscriber side (buyer side / listener).\n\n    Copyright 2021 MEF Forum and its contributors.\n\n    This file includes content based on the TM Forum Product Order API (TMF622\n    v4.0.0) available at https://github.com/tmforum-apis/TMF622_ProductOrder,\n    which is licensed by the TM Forum under the Apache License version 2.0. Such\n    content has been modified by the MEF Forum and its contributors.\n  title: Product Ordering Notification\n  version: 8.0.0-RC\n  x-logo:\n    url: /redoc/logo.png\n    backgroundColor: '#FFFFFF'\nservers:\n  - url: 'https://{serverBase}/mefApi/sonata/productOrderingManagement/v8/'\n    variables:\n      serverBase:\n        default: mef.net\n        description: The base of Buyer's URL.\ntags:\n  - description: |\n      The Seller's endpoint to send particular event types notifications to.\n    name: Notification listeners\npaths:\n  /listener/productOrderStateChangeEvent:\n    post:\n      deprecated: false\n      description: \u003e-\n        This endpoint is used to receive notifications on Product Order state\n        change\n      operationId: productOrderStateChangeEvent\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/ProductOrderEvent'\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Product Order State Change Notification endpoint\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: productOrderStateChangeEvent\n  /listener/productOrderItemStateChangeEvent:\n    post:\n      deprecated: false\n      description: \u003e-\n        This endpoint is used to receive notifications on Product Order Item\n        state change\n      operationId: productOrderItemStateChangeEvent\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/ProductOrderEvent'\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Product Order Item State Change Notification endpoint\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: productOrderItemStateChangeEvent\n  /listener/productOrderItemExpectedCompletionDateSet:\n    post:\n      deprecated: false\n      description: \u003e-\n        This endpoint is used to receive notifications on Product Order Item\n        Expected Completion Date Set\n      operationId: productOrderItemExpectedCompletionDateSet\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/ProductOrderEvent'\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary:\n        Product Order Item Expected Completion Date Set Notification endpoint\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: productOrderItemExpectedCompletionDateSet\n  /listener/productSpecificProductOrderItemMilestoneEvent:\n    post:\n      deprecated: false\n      description: \u003e-\n        This endpoint is used to receive notifications on Product Specific\n        Product Order Item Milestone reached\n      operationId: productSpecificProductOrderItemMilestoneEvent\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/ProductOrderEvent'\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary:\n        Product Specific Product Order Item Milestone Notification endpoint\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: productSpecificProductOrderItemMilestoneEvent\n  /listener/cancelProductOrderStateChangeEvent:\n    post:\n      description: \u003e-\n        This endpoint is used to receive notifications on Cancel Product Order\n        State Change Event\n      operationId: cancelProductOrderStateChangeEvent\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/CancelProductOrderEvent'\n        description: The event data\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Cancel Product Order State Change Notification endpoint\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: cancelProductOrderStateChangeEvent\n  /listener/chargeCreateEvent:\n    post:\n      description:\n        This endpoint is used to receive notifications on Charge Create Event\n      operationId: chargeCreateEvent\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/ChargeEvent'\n        description: The event data\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Charge Create Notification endpoint\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: chargeCreateEvent\n  /listener/chargeStateChangeEvent:\n    post:\n      description: \u003e-\n        This endpoint is used to receive notifications on Charge state change\n        event\n      operationId: chargeStateChangeEvent\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/ChargeEvent'\n        description: The event data\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Charge State Change Notification endpoint\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: chargeStateChangeEvent\n  /listener/chargeTimeoutEvent:\n    post:\n      description:\n        This endpoint is used to receive notifications on Charge timeout event\n      operationId: chargeTimeoutEvent\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/ChargeEvent'\n        description: The event data\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Charge State Change Notification endpoint\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: chargeTimeoutEvent\n  /listener/modifyProductOrderItemRequestedDeliveryDateStateChangeEvent:\n    post:\n      description: \u003e-\n        This endpoint is used to receive notifications on Modify Product Order\n        Item Requested Delivery Date State Change Event\n      operationId: modifyProductOrderItemRequestedDeliveryDateStateChangeEvent\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/ModifyProductOrderItemRequestedDeliveryDateEvent'\n        description: The event data\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: \u003e-\n        Modify Product Order Item Requested Delivery Date State Change Notification\n        endpoint\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: ModifyProductOrderItemRequestedDeliveryDateStateChangeEvent\ncomponents:\n  schemas:\n    CancelProductOrderEvent:\n      allOf:\n        - $ref: '#/components/schemas/Event'\n        - properties:\n            eventType:\n              description: |\n                Indicates the type of the event.\n              $ref: '#/components/schemas/CancelProductOrderEventType'\n            event:\n              description: |\n                A reference to the object that is source of the notification.\n              $ref: '#/components/schemas/CancelProductOrderEventPayload'\n          required:\n            - event\n            - eventType\n          type: object\n    CancelProductOrderEventPayload:\n      description:\n        The identifier of the Cancel Product Order being subject of this event.\n      properties:\n        sellerId:\n          description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when requester entity\n            represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          type: string\n        id:\n          description: ID of the Cancel Product Order\n          type: string\n        href:\n          description: Hyperlink to access the Cancel Product Order\n          type: string\n        buyerId:\n          description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the responding\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          type: string\n      required:\n        - id\n      type: object\n    CancelProductOrderEventType:\n      description: Indicates the type of Cancel Product Order event.\n      enum:\n        - cancelProductOrderStateChangeEvent\n      type: string\n    ChargeEvent:\n      allOf:\n        - $ref: '#/components/schemas/Event'\n        - properties:\n            eventType:\n              description: |\n                Indicates the type of the event.\n              $ref: '#/components/schemas/ChargeEventType'\n            event:\n              description: |\n                A reference to the object that is source of the notification.\n              $ref: '#/components/schemas/ChargeEventPayload'\n          required:\n            - event\n            - eventType\n          type: object\n    ChargeEventPayload:\n      description: The identifier of the Charge being subject of this event.\n      properties:\n        sellerId:\n          description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when requester entity\n            represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          type: string\n        id:\n          description: ID of the Charge\n          type: string\n        href:\n          description: Hyperlink to access the Charge\n          type: string\n        buyerId:\n          description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the responding\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          type: string\n      required:\n        - id\n      type: object\n    ChargeEventType:\n      description: Indicates the type of Charge event.\n      enum:\n        - chargeCreateEvent\n        - chargeStateChangeEvent\n        - chargeTimeoutEvent\n      type: string\n    Error400Code:\n      description: \u003e-\n        One of the following error codes:\n\n        - missingQueryParameter: The URI is missing a required query-string\n        parameter\n\n        - missingQueryValue: The URI is missing a required query-string\n        parameter value\n\n        - invalidQuery: The query section of the URI is invalid.\n\n        - invalidBody: The request has an invalid body\n      enum:\n        - missingQueryParameter\n        - missingQueryValue\n        - invalidQuery\n        - invalidBody\n      type: string\n    Error:\n      description: \u003e\n        Standard Class used to describe API response error\n\n        Not intended to be use directly. The `code` in the HTTP header is used\n        as a discriminator for the type of error returned in runtime.\n      properties:\n        reason:\n          description: \u003e-\n            Text that explains the reason for error. This can be shown to a\n            client user.\n          maxLength: 255\n          type: string\n        message:\n          description: \u003e-\n            Text that provide mode details and corrective actions related to\n            the error. This can be shown to a client user.\n          type: string\n        referenceError:\n          description: url pointing to documentation describing the error\n          format: uri\n          type: string\n      required:\n        - reason\n      type: object\n    Error400:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                One of the following error codes:\n\n                - missingQueryParameter: The URI is missing a required\n                query-string parameter\n\n                - missingQueryValue: The URI is missing a required query-string\n                parameter value\n\n                - invalidQuery: The query section of the URI is invalid.\n\n                - invalidBody: The request has an invalid body\n              $ref: '#/components/schemas/Error400Code'\n          required:\n            - code\n          type: object\n      description:\n        'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'\n    Error401:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                One of the following error codes:\n\n                - missingCredentials: No credentials provided.\n\n                - invalidCredentials: Provided credentials are invalid or\n                expired\n              $ref: '#/components/schemas/Error401Code'\n          required:\n            - code\n          type: object\n      description:\n        'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'\n    Error401Code:\n      description: |-\n        One of the following error codes:\n        - missingCredentials: No credentials provided.\n        - invalidCredentials: Provided credentials are invalid or expired\n      enum:\n        - missingCredentials\n        - invalidCredentials\n      type: string\n    Error403:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: |-\n                This code indicates that the server understood\n                the request but refuses to authorize it because\n                of one of the following error codes:\n                - accessDenied: Access denied\n                - forbiddenRequester: Forbidden requester\n                - tooManyUsers: Too many users\n              $ref: '#/components/schemas/Error403Code'\n          required:\n            - code\n          type: object\n      description:\n        'Forbidden. (https://tools.ietf.org/html/rfc7231#section-6.5.3)'\n    Error403Code:\n      description: |-\n        This code indicates that the server understood\n        the request but refuses to authorize it because\n        of one of the following error codes:\n        - accessDenied: Access denied\n        - forbiddenRequester: Forbidden requester\n        - tooManyUsers: Too many users\n      enum:\n        - accessDenied\n        - forbiddenRequester\n        - tooManyUsers\n      type: string\n    Error408:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                List of supported error codes:\n\n                - timeOut: Request Time-out - indicates that the server did not\n                receive a complete request message within the time that it was\n                prepared to wait.\n              enum:\n                - timeOut\n              type: string\n          required:\n            - code\n          type: object\n      description:\n        'Request Time-out (https://tools.ietf.org/html/rfc7231#section-6.5.7)'\n    Error500:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                One of the following error codes:\n\n                - internalError: Internal server error - the server encountered\n                an unexpected condition that prevented it from fulfilling the\n                request.\n              enum:\n                - internalError\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Internal Server Error.\n        (https://tools.ietf.org/html/rfc7231#section-6.6.1)\n    Event:\n      description: \u003e-\n        Event class is used to describe information structure used for\n        notification.\n      properties:\n        eventId:\n          description: Id of the event\n          type: string\n        eventTime:\n          description: Date-time when the event occurred\n          format: date-time\n          type: string\n      required:\n        - eventId\n        - eventTime\n      type: object\n    ModifyProductOrderItemRequestedDeliveryDateEvent:\n      allOf:\n        - $ref: '#/components/schemas/Event'\n        - properties:\n            eventType:\n              description: |\n                Indicates the type of the event.\n              $ref: \u003e-\n                #/components/schemas/ModifyProductOrderItemRequestedDeliveryDateEventType\n            event:\n              description: |\n                A reference to the object that is source of the notification.\n              $ref: \u003e-\n                #/components/schemas/ModifyProductOrderItemRequestedDeliveryDateEventPayload\n          required:\n            - event\n            - eventType\n          type: object\n    ModifyProductOrderItemRequestedDeliveryDateEventPayload:\n      description: \u003e-\n        The identifier of the Modify Product Order Item Requested Delivery Date being\n        subject of this event.\n      properties:\n        sellerId:\n          description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when requester entity\n            represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          type: string\n        id:\n          description: ID of the Modify Product Order Item Requested Delivery Date\n          type: string\n        href:\n          description:\n            Hyperlink to access the Modify Product Order Item Requested Delivery Date\n          type: string\n        buyerId:\n          description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the responding\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          type: string\n      required:\n        - id\n      type: object\n    ModifyProductOrderItemRequestedDeliveryDateEventType:\n      description:\n        Indicates the type of Modify Product Order Item Requested Delivery Date event.\n      enum:\n        - modifyProductOrderItemRequestedDeliveryDateStateChangeEvent\n      type: string\n    ProductOrderEvent:\n      allOf:\n        - $ref: '#/components/schemas/Event'\n        - properties:\n            eventType:\n              description: |\n                Indicates the type of the event.\n              $ref: '#/components/schemas/ProductOrderEventType'\n            event:\n              description: \u003e\n                A reference to the Product Order that is source of the\n                notification.\n              $ref: '#/components/schemas/ProductOrderEventPayload'\n          required:\n            - event\n            - eventType\n          type: object\n    ProductOrderEventPayload:\n      description: \u003e-\n        The identifier of the Product Order and/or Order Item being subject of\n        this event.\n      properties:\n        sellerId:\n          description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when requester entity\n            represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          type: string\n        milestoneName:\n          description: \u003e-\n            The name of the Milestone that was reached by give Product Order or\n            Product Order Item. Mandatory for Product Specific Milestone\n            reached events.\n          type: string\n        orderItemId:\n          description: \u003e-\n            ID of the Product Order Item (within the Product Order) which state\n            change triggered the event. Mandatory for Product Order Item\n            related events.\n          type: string\n        id:\n          description: ID of the Product Order\n          type: string\n        href:\n          description: Hyperlink to access the Product Order\n          type: string\n        buyerId:\n          description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the responding\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          type: string\n      required:\n        - id\n      type: object\n    ProductOrderEventType:\n      description: Indicates the type of Product Order event.\n      enum:\n        - productOrderStateChangeEvent\n        - productOrderItemStateChangeEvent\n        - productOrderItemExpectedCompletionDateSet\n        - productSpecificProductOrderItemMilestoneEvent\n      type: string\n",
			"canonicalURL": "/github.com/MEF-GIT/MEF-LSO-Sonata-SDK@c99d5bce21fc77e2ecfba6f8d6b2111361380b86/-/blob/productApi/order/productOrderNotification.api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MEF-GIT/MEF-LSO-Sonata-SDK/blob/c99d5bce21fc77e2ecfba6f8d6b2111361380b86/productApi/order/productOrderNotification.api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/listener/chargeCreateEvent\": post: requestBody: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}