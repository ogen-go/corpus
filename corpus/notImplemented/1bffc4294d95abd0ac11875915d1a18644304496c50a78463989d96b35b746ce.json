{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/product-apim"
		},
		"file": {
			"name": "admin-api.yaml",
			"size": 0,
			"path": "modules/integration/tests-common/clients/admin/src/main/resources/admin-api.yaml",
			"byteSize": 207931,
			"content": "#   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n################################################################################\nopenapi: 3.0.1\ninfo:\n  title: WSO2 API Manager - Admin\n  description: |\n    This document specifies a **RESTful API** for WSO2 **API Manager** - **Admin Portal**.\n    Please see [full OpenAPI Specification](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.7.206/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/resources/admin-api.yaml) of the API which is written using [OAS 3.0](http://swagger.io/) specification.\n\n    # Authentication\n    Our REST APIs are protected using OAuth2 and access control is achieved through scopes. Before you start invoking\n    the the API you need to obtain an access token with the required scopes. This guide will walk you through the steps\n    that you will need to follow to obtain an access token.\n    First you need to obtain the consumer key/secret key pair by calling the dynamic client registration (DCR) endpoint. You can add your preferred grant types\n    in the payload. A sample payload is shown below.\n    ```\n      {\n      \"callbackUrl\":\"www.google.lk\",\n      \"clientName\":\"rest_api_admin\",\n      \"owner\":\"admin\",\n      \"grantType\":\"client_credentials password refresh_token\",\n      \"saasApp\":true\n      }\n    ```\n    Create a file (payload.json) with the above sample payload, and use the cURL shown bellow to invoke the DCR endpoint. Authorization header of this should contain the\n    base64 encoded admin username and password.\n    **Format of the request**\n    ```\n      curl -X POST -H \"Authorization: Basic Base64(admin_username:admin_password)\" -H \"Content-Type: application/json\"\n      \\ -d @payload.json https://\u003chost\u003e:\u003cservlet_port\u003e/client-registration/v0.17/register\n    ```\n    **Sample request**\n    ```\n      curl -X POST -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H \"Content-Type: application/json\"\n      \\ -d @payload.json https://localhost:9443/client-registration/v0.17/register\n    ```\n    Following is a sample response after invoking the above curl.\n    ```\n    {\n    \"clientId\": \"fOCi4vNJ59PpHucC2CAYfYuADdMa\",\n    \"clientName\": \"rest_api_admin\",\n    \"callBackURL\": \"www.google.lk\",\n    \"clientSecret\": \"a4FwHlq0iCIKVs2MPIIDnepZnYMa\",\n    \"isSaasApplication\": true,\n    \"appOwner\": \"admin\",\n    \"jsonString\": \"{\\\"grant_types\\\":\\\"client_credentials password refresh_token\\\",\\\"redirect_uris\\\":\\\"www.google.lk\\\",\\\"client_name\\\":\\\"rest_api_admin\\\"}\",\n    \"jsonAppAttribute\": \"{}\",\n    \"tokenType\": null\n    }\n    ```\n    Next you must use the above client id and secret to obtain the access token.\n    We will be using the password grant type for this, you can use any grant type you desire.\n    You also need to add the proper **scope** when getting the access token. All possible scopes for Admin REST API can be viewed in **OAuth2 Security** section\n    of this document and scope for each resource is given in **authorizations** section of resource documentation.\n    Following is the format of the request if you are using the password grant type.\n    ```\n    curl -k -d \"grant_type=password\u0026username=\u003cadmin_username\u003e\u0026password=\u003cadmin_passowrd\u003e\u0026scope=\u003cscopes seperated by space\u003e\"\n    \\ -H \"Authorization: Basic base64(cliet_id:client_secret)\"\n    \\ https://\u003chost\u003e:\u003cgateway_port\u003e/token\n    ```\n    **Sample request**\n    ```\n    curl https://localhost:8243/token -k \\\n    -H \"Authorization: Basic Zk9DaTR2Tko1OVBwSHVjQzJDQVlmWXVBRGRNYTphNEZ3SGxxMGlDSUtWczJNUElJRG5lcFpuWU1h\" \\\n    -d \"grant_type=password\u0026username=admin\u0026password=admin\u0026scope=apim:admin apim:tier_view\"\n    ```\n    Shown below is a sample response to the above request.\n    ```\n    {\n    \"access_token\": \"e79bda48-3406-3178-acce-f6e4dbdcbb12\",\n    \"refresh_token\": \"a757795d-e69f-38b8-bd85-9aded677a97c\",\n    \"scope\": \"apim:admin apim:tier_view\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 3600\n    }\n    ```\n    Now you have a valid access token, which you can use to invoke an API.\n    Navigate through the API descriptions to find the required API, obtain an access token as described above and invoke the API with the authentication header.\n    If you use a different authentication mechanism, this process may change.\n\n    # Try out in Postman\n    If you want to try-out the embedded postman collection with \"Run in Postman\" option, please follow the guidelines listed below.\n    * All of the OAuth2 secured endpoints have been configured with an Authorization Bearer header with a parameterized access token. Before invoking any REST API resource make sure you run the `Register DCR Application` and `Generate Access Token` requests to fetch an access token with all required scopes.\n    * Make sure you have an API Manager instance up and running.\n    * Update the `basepath` parameter to match the hostname and port of the APIM instance.\n\n    [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/f5ac2ca9fb22afef6ed6)\n  contact:\n    name: WSO2\n    url: http://wso2.com/products/api-manager/\n    email: architecture@wso2.com\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: v2\nservers:\n  - url: https://apis.wso2.com/api/am/admin/v3\npaths:\n  ######################################################\n  # The \"Content Search Results\" Throttling Policies\n  ######################################################\n  /throttling/policies/search:\n    get:\n      tags:\n        - Throttling Policy Search\n      summary: |\n        Retrieve/Search Throttling Policies\n      description: |\n        This operation provides you a list of available Throttling Policies qualifying the given keyword match.\n      parameters:\n        - name: query\n          in: query\n          description: |\n            **Search**.\n            You can search by providing a keyword. Allowed to search by type only.\n          schema:\n            type: string\n      responses:\n        200:\n          description: |\n            OK.\n            List of qualifying Throttling Policies is returned.\n          headers:\n            Content-Type:\n              description: The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlePolicyDetailsList'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_view\n      x-code-samples:\n        - lang: Curl\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/search?query=type:sub\"'\n      operationId: throttlingPolicySearch\n\n  ######################################################\n  # The \"Application Throttling Policy Collection\" resource API\n  ######################################################\n  /throttling/policies/application:\n    get:\n      tags:\n        - Application Policy (Collection)\n      summary: Get all Application Throttling Policies\n      description: |\n        Retrieves all existing application throttling policies.\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/If-None-Match'\n        - $ref: '#/components/parameters/If-Modified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Policies returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationThrottlePolicyList'\n        304:\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n          content: {}\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_view\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/application\"'\n\n    post:\n      tags:\n        - Application Policy (Collection)\n      summary: Add an Application Throttling Policy\n      description: |\n        This operation can be used to add a new application level throttling policy.\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n      requestBody:\n        description: |\n          Application level policy object that should to be added\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApplicationThrottlePolicy'\n        required: true\n      responses:\n        201:\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains URL of newly created entity.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Location:\n              description: |\n                Location of the newly created Policy object.\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationThrottlePolicy'\n              example:\n                policyId: e0fd4a15-969e-4056-94c8-8a7b56f8103f\n                policyName: 20PerMin\n                displayName: 20PerMin\n                description: Allows 20 request per minute\n                isDeployed: true\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 20\n        400:\n          $ref: '#/components/responses/BadRequest'\n        415:\n          $ref: '#/components/responses/UnsupportedMediaType'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/application\"'\n\n  ######################################################\n  # The \"Individual Application Throttling Policy\" resource API\n  ######################################################\n  /throttling/policies/application/{policyId}:\n    get:\n      tags:\n        - Application Policy (Individual)\n      summary: Get an Application Throttling Policy\n      description: |\n        Retrieves an application throttling policy.\n      parameters:\n        - $ref: '#/components/parameters/policyId'\n        - $ref: '#/components/parameters/If-None-Match'\n        - $ref: '#/components/parameters/If-Modified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Policy returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationThrottlePolicy'\n              example:\n                policyId: e0fd4a15-969e-4056-94c8-8a7b56f8103f\n                policyName: 20PerMin\n                displayName: 20PerMin\n                description: Allows 20 request per minute\n                isDeployed: true\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 20\n        304:\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_view\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/application/4e098fff-7f94-459a-981f-d257332f69d0\"'\n\n    put:\n      tags:\n        - Application Policy (Individual)\n      summary: Update an Application Throttling policy\n      description: |\n        Updates an existing application level throttling policy. Upon a succesfull update, you will receive the updated application policy as the response.\n      parameters:\n        - $ref: '#/components/parameters/policyId'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/If-Match'\n        - $ref: '#/components/parameters/If-Unmodified-Since'\n      requestBody:\n        description: |\n          Policy object that needs to be modified\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApplicationThrottlePolicy'\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Policy updated.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional request.\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional reuquests.\n              schema:\n                type: string\n            Location:\n              description: |\n                The URL of the newly created resource.\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationThrottlePolicy'\n              example:\n                policyId: e0fd4a15-969e-4056-94c8-8a7b56f8103f\n                policyName: 20PerMin\n                displayName: 20PerMin\n                description: Allows 20 request per minute\n                isDeployed: true\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 20\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n        412:\n          $ref: '#/components/responses/PreconditionFailed'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/application/4e098fff-7f94-459a-981f-d257332f69d0\"'\n\n    delete:\n      tags:\n        - Application Policy (Individual)\n      summary: Delete an Application Throttling policy\n      description: |\n        Deletes an application level throttling policy.\n      parameters:\n        - $ref: '#/components/parameters/policyId'\n        - $ref: '#/components/parameters/If-Match'\n        - $ref: '#/components/parameters/If-Unmodified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Resource successfully deleted.\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n        412:\n          $ref: '#/components/responses/PreconditionFailed'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/application/4e098fff-7f94-459a-981f-d257332f69d0\"'\n\n  ######################################################\n  # The \"Global Mediation Policy Collections\" resource API\n  ######################################################\n  /policies/mediation:\n    get:\n      tags:\n        - Mediation Policy (Collection)\n      summary: |\n        Get all Global Mediation Policies\n      description: |\n        This operation provides you a list of all available global mediation policies.\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/offset'\n        - name: query\n          in: query\n          description: -Not supported yet-\n          schema:\n            type: string\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/If-None-Match'\n      responses:\n        200:\n          description: |\n            OK.\n            List of mediation policies is returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Content-Type:\n              description: The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/mediationList'\n        304:\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n          content: {}\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:mediation_policy_view\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/policies/mediation\"'\n\n    post:\n      tags:\n        - Mediation Policy (Collection)\n      summary: Add a Global Mediation Policy\n      description: |\n        This operation can be used to add a new global mediation policy.\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/If-Match'\n        - $ref: '#/components/parameters/If-Unmodified-Since'\n      requestBody:\n        description: mediation policy to upload\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Mediation'\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Mediation policy added successfully.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Location:\n              description: |\n                The URL of the uploaded thumbnail image of the API.\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Mediation'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n        412:\n          $ref: '#/components/responses/PreconditionFailed'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:mediation_policy_create\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/policies/mediation\"'\n\n  ######################################################\n  # The \"Individual Global Mediation Policy\" resource\n  ######################################################\n  /policies/mediation/{mediationPolicyId}:\n    get:\n      tags:\n        - Mediation Policy (Individual)\n      summary: Get a Global Mediation Policy\n      description: |\n        This operation can be used to retrieve a particular global mediation policy.\n      parameters:\n        - $ref: '#/components/parameters/mediationPolicyId'\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/If-None-Match'\n        - $ref: '#/components/parameters/If-Modified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Mediation Policy returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Mediation'\n        304:\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:mediation_policy_view\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/policies/mediation/2253cf01-0356-4cc1-9941-3034a8c29007\"'\n\n    put:\n      tags:\n        - Mediation Policy (Individual)\n      summary: Update a Global Mediation Policy\n      description: |\n        This operation can be used to update an existing global mediation policy.\n      parameters:\n        - $ref: '#/components/parameters/mediationPolicyId'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/If-Match'\n        - $ref: '#/components/parameters/If-Unmodified-Since'\n      requestBody:\n        description: |\n          Mediation policy object that needs to be updated\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Mediation'\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Successful response with updated mediation policy object\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Location:\n              description: |\n                The URL of the newly created resource.\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Mediation'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        412:\n          $ref: '#/components/responses/PreconditionFailed'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:mediation_policy_create\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/policies/mediation/2253cf01-0356-4cc1-9941-3034a8c29007\"'\n\n    delete:\n      tags:\n        - Mediation Policy (Individual)\n      summary: Delete a Global Mediation Policy\n      description: |\n        This operation can be used to delete an existing global mediation policy providing the Id of the mediation policy.\n      parameters:\n        - $ref: '#/components/parameters/mediationPolicyId'\n        - $ref: '#/components/parameters/If-Match'\n        - $ref: '#/components/parameters/If-Unmodified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Mediation policy successfully deleted.\n          content: {}\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        412:\n          $ref: '#/components/responses/PreconditionFailed'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:mediation_policy_create\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/policies/mediation/2253cf01-0356-4cc1-9941-3034a8c29007\"'\n\n  ######################################################\n  # The \"Subscription Throttling Policy Collection\" resource API\n  ######################################################\n  /throttling/policies/subscription:\n    get:\n      tags:\n        - Subscription Policy (Collection)\n      summary: Get all Subscription Throttling Policies\n      description: |\n        This operation can be used to retrieve all Subscription level throttling policies.\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/If-None-Match'\n        - $ref: '#/components/parameters/If-Modified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Policies returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionThrottlePolicyList'\n        304:\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n          content: {}\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_view\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/subscription\"'\n\n    post:\n      tags:\n        - Subscription Policy (Collection)\n      summary: Add a Subscription Throttling Policy\n      description: |\n        This operation can be used to add a Subscription level throttling policy specifying the details of the policy in the payload.\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n      requestBody:\n        description: |\n          Subscripion level policy object that should to be added\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionThrottlePolicy'\n        required: true\n      responses:\n        201:\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains URL of newly created entity.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Location:\n              description: |\n                Location of the newly created Policy object.\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionThrottlePolicy'\n              example:\n                policyId: 78c3ebff-176d-40d8-9377-fb3276528291\n                policyName: Gold\n                displayName: Gold\n                description: Allows 5000 requests per minute\n                isDeployed: true\n                graphQLMaxComplexity: 0\n                graphQLMaxDepth: 0\n                subscriberCount: 0\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 5000\n                rateLimitCount: 0\n                customAttributes: []\n                stopOnQuotaReach: true\n                billingPlan: FREE\n        400:\n          $ref: '#/components/responses/BadRequest'\n        415:\n          $ref: '#/components/responses/UnsupportedMediaType'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/subscription\"'\n\n  ######################################################\n  # The \"Individual Subscription Throttling Policy\" resource API\n  ######################################################\n  /throttling/policies/subscription/{policyId}:\n    get:\n      tags:\n        - Subscription Policy (Individual)\n      summary: Get a Subscription Policy\n      description: |\n        This operation can be used to retrieves subscription level throttling policy by specifying the Id of the policy as a path paramter\n      parameters:\n        - $ref: '#/components/parameters/policyId'\n        - $ref: '#/components/parameters/If-None-Match'\n        - $ref: '#/components/parameters/If-Modified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Policy returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionThrottlePolicy'\n              example:\n                policyId: 78c3ebff-176d-40d8-9377-fb3276528291\n                policyName: Gold\n                displayName: Gold\n                description: Allows 5000 requests per minute\n                isDeployed: true\n                graphQLMaxComplexity: 0\n                graphQLMaxDepth: 0\n                subscriberCount: 0\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 5000\n                rateLimitCount: 0\n                customAttributes: []\n                stopOnQuotaReach: true\n                billingPlan: FREE\n        304:\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_view\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/subscription/c948c723-71dd-4d50-8c77-0a0e99c8cbb1\"'\n\n    put:\n      tags:\n        - Subscription Policy (Individual)\n      summary: Update a Subscription Policy\n      description: |\n        Updates an existing subscription level throttling policy.\n      parameters:\n        - $ref: '#/components/parameters/policyId'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/If-Match'\n        - $ref: '#/components/parameters/If-Unmodified-Since'\n      requestBody:\n        description: |\n          Policy object that needs to be modified\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionThrottlePolicy'\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Policy updated.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Location:\n              description: |\n                The URL of the newly created resource.\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionThrottlePolicy'\n              example:\n                policyId: 78c3ebff-176d-40d8-9377-fb3276528291\n                policyName: Gold\n                displayName: Gold\n                description: Allows 5000 requests per minute\n                isDeployed: true\n                graphQLMaxComplexity: 0\n                graphQLMaxDepth: 0\n                subscriberCount: 0\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 5000\n                rateLimitCount: 0\n                customAttributes: []\n                stopOnQuotaReach: true\n                billingPlan: FREE\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n        412:\n          $ref: '#/components/responses/PreconditionFailed'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/subscription/c948c723-71dd-4d50-8c77-0a0e99c8cbb1\"'\n\n    delete:\n      tags:\n        - Subscription Policy (Individual)\n      summary: Delete a Subscription Policy\n      description: |\n        This operation can be used to delete a subscription level throttling policy by specifying the Id of the policy as a path paramter.\n      parameters:\n        - $ref: '#/components/parameters/policyId'\n        - $ref: '#/components/parameters/If-Match'\n        - $ref: '#/components/parameters/If-Unmodified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Resource successfully deleted.\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n        412:\n          $ref: '#/components/responses/PreconditionFailed'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/subscription/c948c723-71dd-4d50-8c77-0a0e99c8cbb1\"'\n\n  ######################################################\n  # The \"Custom Rules Collection\" resource API\n  ######################################################\n  /throttling/policies/custom:\n    get:\n      tags:\n        - Custom Rules (Collection)\n      summary: Get all Custom Rules\n      description: |\n        Retrieves all custom rules.\n\n        **NOTE:**\n        * Only super tenant users are allowed for this operation.\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/If-None-Match'\n        - $ref: '#/components/parameters/If-Modified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Policies returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomRuleList'\n        304:\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n          content: {}\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_view\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/custom\"'\n\n    post:\n      tags:\n        - Custom Rules (Collection)\n      summary: Add a Custom Rule\n      description: |\n        Adds a new custom rule.\n\n        **NOTE:**\n        * Only super tenant users are allowed for this operation.\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n      requestBody:\n        description: |\n          Custom Rule object that should to be added\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomRule'\n        required: true\n      responses:\n        201:\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains URL of newly created entity.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Location:\n              description: |\n                Location of the newly created resource.\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomRule'\n              example:\n                policyId: 7c7ed7c4-5a7c-4e08-850a-a95bbfcc2fb6\n                policyName: custom\n                description: Allow 10 requests per minute for admin user\n                isDeployed: true\n                siddhiQuery: \"FROM RequestStream\\nSELECT userId, ( userId == 'admin@carbon.super'\\\n                  \\ ) AS isEligible , str:concat('admin@carbon.super','') as throttleKey\\n\\\n                  INSERT INTO EligibilityStream; \\n\\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1\\\n                  \\ min) \\nSELECT throttleKey, (count(userId) \u003e= 10) as isThrottled,\\\n                  \\ expiryTimeStamp group by throttleKey \\nINSERT ALL EVENTS into\\\n                  \\ ResultStream;\"\n                keyTemplate: $userId\n        400:\n          $ref: '#/components/responses/BadRequest'\n        415:\n          $ref: '#/components/responses/UnsupportedMediaType'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/custom\"'\n\n  ######################################################\n  # The \"Individual Custom Rule\" resource API\n  ######################################################\n  /throttling/policies/custom/{ruleId}:\n    get:\n      tags:\n        - Custom Rules (Individual)\n      summary: Get a Custom Rule\n      description: |\n        Retrieves a custom rule. We need to provide the policy Id as a path parameter.\n\n        **NOTE:**\n        * Only super tenant users are allowed for this operation.\n      parameters:\n        - $ref: '#/components/parameters/ruleId'\n        - $ref: '#/components/parameters/If-None-Match'\n        - $ref: '#/components/parameters/If-Modified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Policy returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomRule'\n              example:\n                policyId: 7c7ed7c4-5a7c-4e08-850a-a95bbfcc2fb6\n                policyName: custom\n                description: Allow 10 requests per minute for admin user\n                isDeployed: true\n                siddhiQuery: \"FROM RequestStream\\nSELECT userId, ( userId == 'admin@carbon.super'\\\n                  \\ ) AS isEligible , str:concat('admin@carbon.super','') as throttleKey\\n\\\n                  INSERT INTO EligibilityStream; \\n\\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1\\\n                  \\ min) \\nSELECT throttleKey, (count(userId) \u003e= 10) as isThrottled,\\\n                  \\ expiryTimeStamp group by throttleKey \\nINSERT ALL EVENTS into\\\n                  \\ ResultStream;\"\n                keyTemplate: $userId\n        304:\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_view\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/custom/33662a62-8db1-4d75-af08-afd63c6bd0b4\"'\n\n    put:\n      tags:\n        - Custom Rules (Individual)\n      summary: Update a Custom Rule\n      description: |\n        Updates an existing custom rule.\n\n        **NOTE:**\n        * Only super tenant users are allowed for this operation.\n      parameters:\n        - $ref: '#/components/parameters/ruleId'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/If-Match'\n        - $ref: '#/components/parameters/If-Unmodified-Since'\n      requestBody:\n        description: |\n          Policy object that needs to be modified\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomRule'\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Policy updated.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Location:\n              description: |\n                The URL of the newly created resource.\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomRule'\n              example:\n                policyId: 7c7ed7c4-5a7c-4e08-850a-a95bbfcc2fb6\n                policyName: custom\n                description: Allow 10 requests per minute for admin user\n                isDeployed: true\n                siddhiQuery: \"FROM RequestStream\\nSELECT userId, ( userId == 'admin@carbon.super'\\\n                  \\ ) AS isEligible , str:concat('admin@carbon.super','') as throttleKey\\n\\\n                  INSERT INTO EligibilityStream; \\n\\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1\\\n                  \\ min) \\nSELECT throttleKey, (count(userId) \u003e= 10) as isThrottled,\\\n                  \\ expiryTimeStamp group by throttleKey \\nINSERT ALL EVENTS into\\\n                  \\ ResultStream;\"\n                keyTemplate: $userId\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n        412:\n          $ref: '#/components/responses/PreconditionFailed'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/custom/33662a62-8db1-4d75-af08-afd63c6bd0b4\"'\n\n    delete:\n      tags:\n        - Custom Rules (Individual)\n      summary: Delete a Custom Rule\n      description: |\n        Delete a custom rule. We need to provide the Id of the policy as a path parameter.\n\n        **NOTE:**\n        * Only super tenant users are allowed for this operation.\n      parameters:\n        - $ref: '#/components/parameters/ruleId'\n        - $ref: '#/components/parameters/If-Match'\n        - $ref: '#/components/parameters/If-Unmodified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Resource successfully deleted.\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n        412:\n          $ref: '#/components/responses/PreconditionFailed'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/custom/33662a62-8db1-4d75-af08-afd63c6bd0b4\"'\n\n  ######################################################\n  # The \"Advanced Throttling Policy Collection\" resource API\n  ######################################################\n  /throttling/policies/advanced:\n    get:\n      tags:\n        - Advanced Policy (Collection)\n      summary: Get all Advanced Throttling Policies\n      description: |\n        Retrieves all existing advanced throttling policies.\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/If-None-Match'\n        - $ref: '#/components/parameters/If-Modified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Policies returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AdvancedThrottlePolicyList'\n        304:\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n          content: {}\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_view\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/advanced\"'\n\n    post:\n      tags:\n        - Advanced Policy (Collection)\n      summary: Add an Advanced Throttling Policy\n      description: |\n        Add a new advanced throttling policy.\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n      requestBody:\n        description: |\n          Advanced level policy object that should to be added\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AdvancedThrottlePolicy'\n        required: true\n      responses:\n        201:\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains URL of newly created entity.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Location:\n              description: |\n                Location of the newly created Advanced Throttling Policy.\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AdvancedThrottlePolicy'\n              example:\n                policyId: 4cf46441-a538-4f79-a499-ab81200c9bca\n                policyName: 10KPerMin\n                displayName: 10KPerMin\n                description: Allows 10000 requests per minute\n                isDeployed: true\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 10000\n                conditionalGroups: []\n        400:\n          $ref: '#/components/responses/BadRequest'\n        415:\n          $ref: '#/components/responses/UnsupportedMediaType'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/advanced\"'\n\n  ######################################################\n  # The \"Individual Advanced Throttling Policy\" resource API\n  ######################################################\n  /throttling/policies/advanced/{policyId}:\n    get:\n      tags:\n        - Advanced Policy (Individual)\n      summary: Get an Advanced Throttling Policy\n      description: |\n        Retrieves an advanced throttling policy.\n      parameters:\n        - $ref: '#/components/parameters/policyId'\n        - $ref: '#/components/parameters/If-None-Match'\n        - $ref: '#/components/parameters/If-Modified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Policy returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AdvancedThrottlePolicy'\n              example:\n                policyId: 4cf46441-a538-4f79-a499-ab81200c9bca\n                policyName: 10KPerMin\n                displayName: 10KPerMin\n                description: Allows 10000 requests per minute\n                isDeployed: true\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 10000\n                conditionalGroups: []\n        304:\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_view\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/advanced/229a3c46-c836-43c8-b988-8eebd9c7774b\"'\n\n    put:\n      tags:\n        - Advanced Policy (Individual)\n      summary: Update an Advanced Throttling Policy\n      description: |\n        Updates an existing Advanced throttling policy.\n      parameters:\n        - $ref: '#/components/parameters/policyId'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/If-Match'\n        - $ref: '#/components/parameters/If-Unmodified-Since'\n      requestBody:\n        description: |\n          Policy object that needs to be modified\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AdvancedThrottlePolicy'\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Policy updated.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Location:\n              description: |\n                The URL of the newly created resource.\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AdvancedThrottlePolicy'\n              example:\n                policyId: 4cf46441-a538-4f79-a499-ab81200c9bca\n                policyName: 10KPerMin\n                displayName: 10KPerMin\n                description: Allows 10000 requests per minute\n                isDeployed: true\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 10000\n                conditionalGroups: []\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n        412:\n          $ref: '#/components/responses/PreconditionFailed'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/advanced/229a3c46-c836-43c8-b988-8eebd9c7774b\"'\n\n    delete:\n      tags:\n        - Advanced Policy (Individual)\n      summary: Delete an Advanced Throttling Policy\n      description: |\n        Deletes an advanced throttling policy.\n      parameters:\n        - $ref: '#/components/parameters/policyId'\n        - $ref: '#/components/parameters/If-Match'\n        - $ref: '#/components/parameters/If-Unmodified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Resource successfully deleted.\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n        412:\n          $ref: '#/components/responses/PreconditionFailed'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/advanced/229a3c46-c836-43c8-b988-8eebd9c7774b\"'\n\n  ######################################################\n  # \"Export Throttling Policy\" resource API\n  ######################################################\n  /throttling/policies/export:\n    get:\n      tags:\n        - Import Export Throttling Policy\n      summary: Export a Throttling Policy\n      description: |\n        This operation can be used to export the details of a particular Throttling Policy.\n      parameters:\n        - name: policyId\n          in: query\n          description: UUID of the ThrottlingPolicy\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: |\n            Throttling Policy Name\n          schema:\n            type: string\n        - name: type\n          in: query\n          description: |\n            Type of the Throttling Policy\n          schema:\n            type: string\n            enum:\n              - sub\n              - app\n              - api\n              - global\n        - name: format\n          in: query\n          description: |\n            Format of output documents. Can be YAML or JSON.\n          schema:\n            type: string\n            enum:\n              - JSON\n              - YAML\n      responses:\n        200:\n          description: |\n            OK.\n            Export Successful.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExportThrottlePolicy'\n              example:\n                type: rate-limiting policy\n                subtype: application\n                version: v4.1.0\n                data:\n                  policyId: cd828243-a0db-430c-97e9-9e41fd865d48\n                  policyName: 50PerMin\n                  displayName: 50PerMin\n                  description: Allows 50 request per minute\n                  isDeployed: true\n                  type: ApplicationThrottlePolicy\n                  defaultLimit:\n                    type: BANDWIDTHLIMIT\n                    requestCount:\n                      timeUnit: min\n                      unitTime: 1\n                      requestCount: 50\n                    bandwidth:\n                      timeUnit: min\n                      unitTime: 5\n                      dataAmount: 100\n                      dataUnit: MB\n                    eventCount:\n                      timeUnit: min\n                      unitTime: 5\n                      eventCount: 16\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_manage\n            - apim:policies_import_export\n      x-code-samples:\n        - lang: Curl\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/export?policyId=96077508-fd01-4fae-bc64-5de0e2baf43c\u0026name=Bronze\u0026type=subscription\u0026format=YAML\"'\n      operationId: exportThrottlingPolicy\n  ####################################################################\n  # Import Throttling Policy\n  ####################################################################\n  /throttling/policies/import:\n    post:\n      tags:\n        - Import Export Throttling Policy\n      summary: Import a Throttling Policy\n      description: |\n        This operation can be used to import a Throttling Policy\n      parameters:\n        - name: overwrite\n          in: query\n          description: |\n            Update an existing throttlingpolicy with the same name\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              required:\n                - file\n              properties:\n                file:\n                  type: string\n                  description: Json File\n                  format: binary\n        required: true\n      responses:\n        200:\n          description: |\n            Created.\n            Throttling Policy Imported Successfully.\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        409:\n          $ref: '#/components/responses/Conflict'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tier_manage\n            - apim:policies_import_export\n      x-code-samples:\n        - lang: Curl\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/import?overwrite=True\"'\n      operationId: importThrottlingPolicy\n  ######################################################\n  # The \"Deny Policy Collection\" resource API\n  ######################################################\n  /throttling/deny-policies:\n    get:\n      tags:\n        - Deny Policies (Collection)\n      summary: Get all Deny Policies\n      description: |\n        Retrieves all existing deny policies.\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/If-None-Match'\n        - $ref: '#/components/parameters/If-Modified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Deny Policies returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockingConditionList'\n        304:\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n          content: {}\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:bl_view\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/deny-policies\"'\n\n    post:\n      tags:\n        - Deny Policies (Collection)\n      summary: Add a deny policy\n      description: |\n        Adds a new deny policy\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n      requestBody:\n        description: |\n          Blocking condition object that should to be added\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BlockingCondition'\n        required: true\n      responses:\n        201:\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains URL of newly created entity.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Location:\n              description: |\n                Location of the newly created resource.\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockingCondition'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        415:\n          $ref: '#/components/responses/UnsupportedMediaType'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:bl_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/deny-policies\"'\n\n  ######################################################\n  # The \"Individual Deny Policy\" resource API\n  ######################################################\n  /throttling/deny-policy/{conditionId}:\n    get:\n      tags:\n        - Deny Policy (Individual)\n      summary: Get a Deny Policy\n      description: |\n        Retrieves a Deny policy providing the condition Id\n      parameters:\n        - $ref: '#/components/parameters/conditionId'\n        - $ref: '#/components/parameters/If-None-Match'\n        - $ref: '#/components/parameters/If-Modified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Condition returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              schema:\n                type: string\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockingCondition'\n        304:\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:bl_view\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/deny-policy/b513eb68-69e8-4c32-92cf-852c101363c\"'\n\n    delete:\n      tags:\n        - Deny Policy (Individual)\n      summary: Delete a Deny Policy\n      description: |\n        Deletes an existing deny policy\n      parameters:\n        - $ref: '#/components/parameters/conditionId'\n        - $ref: '#/components/parameters/If-Match'\n        - $ref: '#/components/parameters/If-Unmodified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Resource successfully deleted.\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n        412:\n          $ref: '#/components/responses/PreconditionFailed'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:bl_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/deny-policy/b513eb68-69e8-4c32-92cf-852c101363c\"'\n\n    patch:\n      tags:\n        - Deny Policy (Individual)\n      summary: Update a Deny Policy\n      description: |\n        Update a deny policy by Id\n      parameters:\n        - $ref: '#/components/parameters/conditionId'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/If-Match'\n        - $ref: '#/components/parameters/If-Unmodified-Since'\n      requestBody:\n        description: |\n          Blocking condition with updated status\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BlockingConditionStatus'\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Resource successfully updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockingCondition'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:bl_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X PATCH -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/deny-policy/b513eb68-69e8-4c32-92cf-852c101363c\"'\n\n  ######################################################\n  # The \"Application Collection\" resource APIs\n  ######################################################\n  /applications:\n    get:\n      tags:\n        - Application (Collection)\n      summary: |\n        Retrieve/Search Applications\n      description: |\n        This operation can be used to retrieve list of applications owned by the given user, If no user\n        is provided, the applications owned by the user associated with the provided access token will be returned.\n      parameters:\n        - $ref: '#/components/parameters/user'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/If-None-Match'\n        - name: name\n          in: query\n          description: |\n            Application Name\n          schema:\n            type: string\n        - name: tenantDomain\n          in: query\n          description: |\n            Tenant domain of the applications to get. This has to be specified only if it is required to get applications of\n            a tenant other than the requester's tenant. So, if not specified, the default will be set as the\n            requester's tenant domain. This cross tenant Application access is allowed only for super tenant admin\n            users **only at a migration process**.\n          schema:\n            type: string\n      responses:\n        200:\n          description: |\n            OK.\n            Application list returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationList'\n        304:\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n          content: {}\n        400:\n          $ref: '#/components/responses/BadRequest'\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:app_owner_change\n            - apim:app_import_export\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/applications\"'\n\n  ######################################################\n  # The \"Individual Application\" resource APIs\n  ######################################################\n  /applications/{applicationId}:\n    delete:\n      tags:\n        - Applications\n      summary: |\n        Delete an Application\n      description: |\n        This operation can be used to delete an application by specifying its id.\n      parameters:\n        - $ref: '#/components/parameters/applicationId'\n        - $ref: '#/components/parameters/If-Match'\n      responses:\n        200:\n          description: |\n            OK.\n            Resource successfully deleted.\n          content: {}\n        202:\n          description: |\n            Accepted.\n            The request has been accepted.\n          headers:\n            Location:\n              description: |\n                Location of the existing Application.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowResponse'\n        404:\n          $ref: '#/components/responses/NotFound'\n        412:\n          $ref: '#/components/responses/PreconditionFailed'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:app_import_export\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/applications/0a043c2b-ee75-4ef3-9e1c-fc2610ccfa8b\"'\n\n  /applications/{applicationId}/change-owner:\n    post:\n      tags:\n        - Application\n      summary: Change Application Owner\n      description: |\n        This operation is used to change the owner of an Application.\n        In order to change the owner of an application, we need to pass the new application owner as a query parameter\n      parameters:\n        - name: owner\n          in: query\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/applicationId'\n      responses:\n        200:\n          description: |\n            OK.\n            Application owner changed successfully.\n          content: {}\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n        412:\n          $ref: '#/components/responses/PreconditionFailed'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:app_owner_change\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/applications/0a043c2b-ee75-4ef3-9e1c-fc2610ccfa8b/change-owner?owner=admin\"'\n\n  ######################################################\n  # Export Resource API\n  ######################################################\n  /export/applications:\n    get:\n      tags:\n        - Application (Individual)\n      summary: Export an Application\n      description: |\n        This operation can be used to export the details of a particular application as a zip file.\n      parameters:\n        - name: appName\n          in: query\n          description: |\n            Application Name\n          required: true\n          schema:\n            type: string\n        - name: appOwner\n          in: query\n          description: |\n            Owner of the Application\n          required: true\n          schema:\n            type: string\n        - name: withKeys\n          in: query\n          description: |\n            Export application keys\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: |\n            OK.\n            Export Successful.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n            application/zip:\n              schema:\n                type: string\n                format: binary\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:app_import_export\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/export/applications?appName=sampleApp\u0026appOwner=admin\u0026withKeys=true\"\n          \u003e exported-application.zip'\n\n  /export/api:\n    get:\n      tags:\n        - API (Individual)\n      summary: Export an API\n      description: |\n        This operation can be used to export the details of a particular API as a zip file.\n      parameters:\n        - name: name\n          in: query\n          description: |\n            API Name\n          required: true\n          schema:\n            type: string\n        - name: version\n          in: query\n          description: |\n            Version of the API\n          required: true\n          schema:\n            type: string\n        - name: providerName\n          in: query\n          description: |\n            Provider name of the API\n          schema:\n            type: string\n        - name: format\n          in: query\n          description: |\n            Format of output documents. Can be YAML or JSON.\n          schema:\n            type: string\n            enum:\n              - JSON\n              - YAML\n        - name: preserveStatus\n          in: query\n          description: |\n            Preserve API Status on export\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: |\n            OK.\n            Export Successful.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/zip:\n              schema:\n                type: string\n                format: binary\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:api_import_export\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/export/api?name=PizzaShackAPI\u0026version=1.0.0\u0026providerName=admin\u0026format=YAML\u0026preserveStatus=true\"\n          \u003e exportAPI.zip'\n\n  /export/api-product:\n    get:\n      tags:\n        - API Product (Individual)\n      summary: Export an API Product\n      description: |\n        This operation can be used to export the details of a particular API Product as a zip file.\n      parameters:\n        - name: name\n          in: query\n          description: |\n            API Product Name\n          required: true\n          schema:\n            type: string\n        - name: version\n          in: query\n          description: |\n            Version of the API Product\n          required: true\n          schema:\n            type: string\n        - name: providerName\n          in: query\n          description: |\n            Provider name of the API Product\n          schema:\n            type: string\n        - name: format\n          in: query\n          description: |\n            Format of output documents. Can be YAML or JSON.\n          schema:\n            type: string\n            enum:\n              - JSON\n              - YAML\n        - name: preserveStatus\n          in: query\n          description: |\n            Preserve API Product Status on export\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: |\n            OK.\n            Export Successful.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/zip:\n              schema:\n                type: string\n                format: binary\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:api_product_import_export\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/export/api-product?name=PizzaShackAPIProduct\u0026version=1.0.0\u0026providerName=admin\u0026format=YAML\u0026preserveStatus=true\"\n          \u003e exportAPIProduct.zip'\n\n  ######################################################\n  # Import Resource API\n  ######################################################\n  /import/applications:\n    post:\n      tags:\n        - Application (Individual)\n      summary: Import an Application\n      description: |\n        This operation can be used to import an application.\n      parameters:\n        - name: preserveOwner\n          in: query\n          description: |\n            Preserve Original Creator of the Application\n          schema:\n            type: boolean\n        - name: skipSubscriptions\n          in: query\n          description: |\n            Skip importing Subscriptions of the Application\n          schema:\n            type: boolean\n        - name: appOwner\n          in: query\n          description: |\n            Expected Owner of the Application in the Import Environment\n          schema:\n            type: string\n        - name: skipApplicationKeys\n          in: query\n          description: |\n            Skip importing Keys of the Application\n          schema:\n            type: boolean\n        - name: update\n          in: query\n          description: |\n            Update if application exists\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              required:\n                - file\n              properties:\n                file:\n                  type: string\n                  description: |\n                    Zip archive consisting of exported Application Configuration.\n                  format: binary\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Successful response with the updated object information as entity in the body.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationInfo'\n        207:\n          description: |\n            Multi Status.\n            Partially successful response with skipped APIs information object as entity in the body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIInfoList'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:app_import_export\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@exported-application.zip \"https://127.0.0.1:9443/api/am/admin/v3/import/applications?preserveOwner=true\u0026skipSubscriptions=false\u0026appOwner=admin\u0026skipApplicationKeys=false\u0026update=true\"'\n\n  /import/api:\n    post:\n      tags:\n        - API (Individual)\n      summary: Import an API\n      description: |\n        This operation can be used to import an API.\n      parameters:\n        - name: preserveProvider\n          in: query\n          description: |\n            Preserve Original Provider of the API. This is the user choice to keep or replace the API provider.\n          schema:\n            type: boolean\n        - name: overwrite\n          in: query\n          description: |\n            Whether to update the API or not. This is used when updating already existing APIs.\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              required:\n                - file\n              properties:\n                file:\n                  type: string\n                  description: |\n                    Zip archive consisting on exported api configuration\n                  format: binary\n        required: true\n      responses:\n        200:\n          description: |\n            Created.\n            API Imported Successfully.\n          content: {}\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        409:\n          $ref: '#/components/responses/Conflict'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:api_import_export\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@admin-PizzaShackAPI-1.0.0.zip \"https://127.0.0.1:9443/api/am/admin/v3/import/api?preserveProvider=false\u0026overwrite=false\"'\n\n  /import/api-product:\n    post:\n      tags:\n        - API Product (Individual)\n      summary: Import an API Product\n      description: |\n        This operation can be used to import an API Product.\n      parameters:\n        - name: preserveProvider\n          in: query\n          description: |\n            Preserve Original Provider of the API Product. This is the user choice to keep or replace the API Product provider.\n          schema:\n            type: boolean\n        - name: importAPIs\n          in: query\n          description: |\n            Whether to import the dependent APIs or not.\n          schema:\n            type: boolean\n        - name: overwriteAPIProduct\n          in: query\n          description: |\n            Whether to update the API Product or not. This is used when updating already existing API Products.\n          schema:\n            type: boolean\n        - name: overwriteAPIs\n          in: query\n          description: |\n            Whether to update the dependent APIs or not. This is used when updating already existing dependent APIs of an API Product.\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              required:\n                - file\n              properties:\n                file:\n                  type: string\n                  description: |\n                    Zip archive consisting on exported API Product configuration\n                  format: binary\n        required: true\n      responses:\n        200:\n          description: |\n            Created.\n            API Product Imported Successfully.\n          content: {}\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        409:\n          $ref: '#/components/responses/Conflict'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:api_product_import_export\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@exportAPIProduct.zip \"https://127.0.0.1:9443/api/am/admin/v3/import/api-product?preserveProvider=false\u0026overwriteAPIProduct=false\u0026overwriteAPIs=false\u0026importAPIs=false\"'\n\n  ######################################################\n  # The \"Label\" resource API\n  ######################################################\n  /labels:\n    get:\n      tags:\n        - Label Collection\n      summary: Get all registered Labels\n      description: |\n        Get all Registered Labels\n      responses:\n        200:\n          description: |\n            OK.\n            Labels returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelList'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:label_read\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/labels\"'\n\n    post:\n      tags:\n        - Label\n      summary: Add a Label\n      description: |\n        Add a new gateway label\n      requestBody:\n        description: |\n          Label object that should to be added\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Label'\n        required: true\n      responses:\n        201:\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n        400:\n          $ref: '#/components/responses/BadRequest'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:label_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/labels\"'\n\n  ######################################################\n  # The \"Individual label\" resource APIs\n  ######################################################\n  /labels/{labelId}:\n    put:\n      tags:\n        - Label\n      summary: Update a Label\n      description: |\n        Update a Label by label Id\n      parameters:\n        - $ref: '#/components/parameters/labelId'\n      requestBody:\n        description: |\n          Label object with updated information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Label'\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Label updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:label_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/labels/d7cf8523-9180-4255-84fa-6cb171c1f779\"'\n\n    delete:\n      tags:\n        - Label\n      summary: Delete a Label\n      description: |\n        Delete a Label by label Id\n      parameters:\n        - $ref: '#/components/parameters/labelId'\n        - $ref: '#/components/parameters/If-Match'\n        - $ref: '#/components/parameters/If-Unmodified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            Label successfully deleted.\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:label_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/labels/d7cf8523-9180-4255-84fa-6cb171c1f779\"'\n\n  ######################################################\n  # The \"Environment\" resource API\n  ######################################################\n  /environments:\n    get:\n      tags:\n        - Environment Collection\n      summary: Get all registered Environments\n      description: |\n        Get all Registered Environments\n      responses:\n        200:\n          description: |\n            OK.\n            Environments returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnvironmentList'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:environment_read\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/environments\"'\n\n    post:\n      tags:\n        - Environment\n      summary: Add an Environment\n      description: |\n        Add a new geteway environment\n      requestBody:\n        description: |\n          Environment object that should to be added\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Environment'\n        required: true\n      responses:\n        201:\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Environment'\n        400:\n          $ref: '#/components/responses/BadRequest'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:environment_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/environments\"'\n\n  ######################################################\n  # The \"Individual Environment\" resource APIs\n  ######################################################\n  /environments/{environmentId}:\n    put:\n      tags:\n        - Environment\n      summary: Update an Environment\n      description: |\n        Update a gateway Environment by environment Id\n      parameters:\n        - $ref: '#/components/parameters/environmentId'\n      requestBody:\n        description: |\n          Environment object with updated information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Environment'\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Environment updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Environment'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:environment_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/environments/d7cf8523-9180-4255-84fa-6cb171c1f779\"'\n\n    delete:\n      tags:\n        - Environment\n      summary: Delete an Environment\n      description: |\n        Delete a Environment by Environment Id\n      parameters:\n        - $ref: '#/components/parameters/environmentId'\n      responses:\n        200:\n          description: |\n            OK.\n            Environment successfully deleted.\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:environment_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/environments/d7cf8523-9180-4255-84fa-6cb171c1f779\"'\n\n  ######################################################\n  # The Bot Detection Data API resources\n  ######################################################\n  /bot-detection-data:\n    get:\n      tags:\n        - Bot Detection Data\n      summary: |\n        Get all Bot Detected Data\n      description: |\n        Get all bot detected data\n      operationId: getBotDetectionData\n      responses:\n        200:\n          description: |\n            OK.\n            Bot detected data returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BotDetectionDataList'\n        404:\n          $ref: '#/components/responses/NotFound'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:bot_data\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/bot-detection-data\"'\n\n  ######################################################\n  # The \"Monetization\" resource APIs\n  ######################################################\n  /monetization/publish-usage:\n    post:\n      tags:\n        - Monetization (Collection)\n      summary: Publish Usage Records\n      description: |\n        Publish usage records of monetized APIs\n      responses:\n        200:\n          description: Usage records successfully published.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublishStatus'\n        202:\n          description: Request is sucessfully accepted for processing.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublishStatus'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:monetization_usage_publish\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/monetization/publish-usage\"'\n\n  /monetization/publish-usage/status:\n    get:\n      tags:\n        - Monetization (Collection)\n      summary: Get the Status of Monetization Usage Publisher\n      description: |\n        Get the status of monetization usage publisher\n      responses:\n        200:\n          description: |\n            OK.\n            Status returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MonetizationUsagePublishInfo'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:monetization_usage_publish\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/monetization/publish-usage/status\"'\n\n  ######################################################\n  # The \"Workflow Collection\" resource APIs\n  ######################################################\n  /workflows:\n    get:\n      tags:\n        - Workflow (Collection)\n      summary: |\n        Retrieve All Pending Workflow Processes\n      description: |\n        This operation can be used to retrieve list of workflow pending processes.\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/If-None-Match'\n        - name: workflowType\n          in: query\n          description: |\n            We need to show the values of each workflow process separately .for that we use workflow type.\n            Workflow type can be AM_APPLICATION_CREATION, AM_SUBSCRIPTION_CREATION,   AM_USER_SIGNUP, AM_APPLICATION_REGISTRATION_PRODUCTION, AM_APPLICATION_REGISTRATION_SANDBOX.\n          schema:\n            type: string\n            enum:\n              - AM_APPLICATION_CREATION\n              - AM_SUBSCRIPTION_CREATION\n              - AM_USER_SIGNUP\n              - AM_APPLICATION_REGISTRATION_PRODUCTION\n              - AM_APPLICATION_REGISTRATION_SANDBOX\n              - AM_SUBSCRIPTION_DELETION\n              - AM_APPLICATION_DELETION\n              - AM_API_STATE\n              - AM_API_PRODUCT_STATE\n      responses:\n        200:\n          description: |\n            OK.\n            Workflow pendding process list returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowList'\n        304:\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n          content: {}\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:api_workflow_view\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/workflows\"'\n\n  /workflows/{externalWorkflowRef}:\n    get:\n      tags:\n        - Workflows (Individual)\n      summary: |\n        Get Pending Workflow Details by External Workflow Reference\n      description: |\n        Using this operation, you can retrieve complete details of a pending workflow request that either belongs to application creation, application subscription, application registration, api state change, user self sign up.. You need to provide the External_Workflow_Reference of the workflow Request to retrive it.\n      parameters:\n        - name: externalWorkflowRef\n          in: path\n          description: |\n            from the externel workflow reference we decide what is the the pending request that the are requesting.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/If-None-Match'\n      responses:\n        200:\n          description: |\n            OK.\n            Requested Workflow Pending is returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowInfo'\n        304:\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource.\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:api_workflow_view\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/workflows/c43a325c-260b-4302-81cb-768eafaa3aed\"'\n\n  /workflows/update-workflow-status:\n    post:\n      tags:\n        - Workflows (Individual)\n      summary: Update Workflow Status\n      description: |\n        This operation can be used to approve or reject a workflow task.\n      parameters:\n        - $ref: '#/components/parameters/workflowReferenceId-Q'\n      requestBody:\n        description: |\n          Workflow event that need to be updated\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Workflow'\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Workflow request information is returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Workflow'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:api_workflow_approve\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/workflows/update-workflow-status?workflowReferenceId=56e3a170-a7a7-45f8-b051-7e43a58a67e1\"'\n\n  ######################################################\n  # The Tenant Info resource API\n  ######################################################\n  /tenant-info/{username}:\n    get:\n      tags:\n        - Tenants\n      summary: |\n        Get Tenant Id of User\n      description: |\n        This operation is to get tenant id of the provided user\n      operationId: getTenantInfoByUsername\n      parameters:\n        - name: username\n          in: path\n          description: |\n            The state represents the current state of the tenant. Supported states are [ active, inactive]\n          required: true\n          schema:\n            type: string\n            default: john\n      responses:\n        200:\n          description: |\n            OK.\n            Tenant id of the user retrieved.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TenantInfo'\n        404:\n          $ref: '#/components/responses/NotFound'\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tenantInfo\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/tenant-info/john\"'\n\n  ######################################################\n  # The Custom URL Info resource API\n  ######################################################\n  /custom-urls/{tenantDomain}:\n    get:\n      tags:\n        - Tenants\n      summary: |\n        Get Custom URL Info of a Tenant Domain\n      description: |\n        This operation is to get custom-url information of the provided tenant-domain\n      operationId: getCustomUrlInfoByTenantDomain\n      parameters:\n        - name: tenantDomain\n          in: path\n          description: |\n            The tenant domain name.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: |\n            OK.\n            Custom url info of the tenant is retrieved.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomUrlInfo'\n        404:\n          $ref: '#/components/responses/NotFound'\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tenantInfo\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/custom-urls/wso2.com\"'\n\n  ######################################################\n  # The \"Category Collection\" resource API\n  ######################################################\n  /api-categories:\n    get:\n      tags:\n        - API Category (Collection)\n      summary: Get all API Categories\n      description: |\n        Get all API categories\n      responses:\n        200:\n          description: |\n            OK.\n            Categories returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APICategoryList'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_operations\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/api-categories\"'\n\n    post:\n      tags:\n        - API Category (Individual)\n      summary: Add API Category\n      description: |\n        Add a new API category\n      requestBody:\n        description: |\n          API Category object that should to be added\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/APICategory'\n        required: true\n      responses:\n        201:\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APICategory'\n        400:\n          $ref: '#/components/responses/BadRequest'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_operations\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/api-categories\"'\n\n  ######################################################\n  # The \"Individual Category\" resource APIs\n  ######################################################\n  /api-categories/{apiCategoryId}:\n    put:\n      tags:\n        - API Category (Individual)\n      summary: Update an API Category\n      description: |\n        Update an API Category by category Id\n      parameters:\n        - $ref: '#/components/parameters/apiCategoryId'\n      requestBody:\n        description: |\n          API Category object with updated information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/APICategory'\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Label updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APICategory'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_operations\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/api-categories/d7cf8523-9180-4255-84fa-6cb171c1f779\"'\n\n    delete:\n      tags:\n        - API Category (Individual)\n      summary: Delete an API Category\n      description: |\n        Delete an API Category by API Category Id\n      parameters:\n        - $ref: '#/components/parameters/apiCategoryId'\n        - $ref: '#/components/parameters/If-Match'\n        - $ref: '#/components/parameters/If-Unmodified-Since'\n      responses:\n        200:\n          description: |\n            OK.\n            API Category successfully deleted.\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_operations\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/api-categories/d7cf8523-9180-4255-84fa-6cb171c1f779\"'\n\n  ######################################################\n  # The Admin settings List\n  ######################################################\n  /settings:\n    get:\n      tags:\n        - Settings\n      summary: Retreive Admin Settings\n      description: |\n        Retreive admin settings\n      responses:\n        200:\n          description: |\n            OK.\n            Settings returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Settings'\n        404:\n          $ref: '#/components/responses/NotFound'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_settings\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/settings\"'\n\n  ####################################################\n  # The Admin alert  management resources\n  ####################################################\n  /alert-types:\n    get:\n      tags:\n        - Alerts\n      summary: |\n        Get all Admin Alert Types\n      description: |\n        This operation is used to get the list of supportd alert types for the apim admin dashboard\n      operationId: getAdminAlertTypes\n      responses:\n        200:\n          description: |\n            OK.\n            The list of admin alert types are returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlertTypesList'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_alert_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/alert-types\"'\n\n  /alert-subscriptions:\n    get:\n      tags:\n        - Alert Subscriptions\n      summary: |\n        Get Subscribed Alert Types\n      description: |\n        This operation is used to get the list of subscribed alert types by the user.\n      operationId: getSubscribedAlertTypes\n      responses:\n        200:\n          description: |\n            OK.\n            The list of subscribed alert types are returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlertsSubscription'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_alert_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/alert-subscriptions\"'\n\n    put:\n      tags:\n        - Alert Subscriptions\n      summary: |\n        Subscribe to an Admin Alert\n      description: |\n        This operation is used to subscribe to admin alerts\n      operationId: subscribeToAlerts\n      requestBody:\n        description: The alerts list and the email list to subscribe.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AlertsSubscription'\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Successful response with the newly subscribed alerts.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlertsSubscription'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_alert_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/alert-subscriptions\"'\n\n    delete:\n      tags:\n        - Alert Subscriptions\n      summary: |\n        Unsubscribe User from all Admin Alerts\n      description: |\n        This operation is used to unsubscribe the respective user from all the admin alert types.\n      operationId: unsubscribeAllAlerts\n      responses:\n        200:\n          description: |\n            OK.\n            The user is unsubscribed from the alerts successfully.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content: {}\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_alert_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/alert-subscriptions\"'\n\n  /alert-subscriptions/bot-detection:\n    get:\n      tags:\n        - Bot Detection Alert Subscriptions\n      summary: |\n        Get Subscriptions for Bot Detection\n      description: |\n        Get the list of subscriptions which are subscribed to receive email alerts for bot detection\n      operationId: getBotDetectionAlertSubscriptions\n      responses:\n        200:\n          description: |\n            OK.\n            The list of bot detection alert subscriptions are returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BotDetectionAlertSubscriptionList'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_alert_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/alert-subscriptions/bot-detection\"'\n\n    post:\n      tags:\n        - Bot Detection Alert Subscriptions\n      summary: Subscribe for Bot Detection Alerts\n      description: |\n        Register a subscription for bot detection alerts\n      operationId: subscribeForBotDetectionAlerts\n      requestBody:\n        description: |\n          The email to register to receive bot detection alerts\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BotDetectionAlertSubscription'\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Bot detection alert subscription is registered successfully.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BotDetectionAlertSubscription'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_alert_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/alert-subscriptions/bot-detection\"'\n\n  /alert-subscriptions/bot-detection/{uuid}:\n    delete:\n      tags:\n        - Bot Detection Alert Subscriptions\n      summary: Unsubscribe from bot detection alerts.\n      description: |\n        Delete a Bot Detection Alert Subscription\n      operationId: unsubscribeFromBotDetectionAlerts\n      parameters:\n        - name: uuid\n          in: path\n          description: uuid of the subscription\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: |\n            OK.\n            Bot detection alert subscription is deleted successfully.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_alert_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/alert-subscriptions/bot-detection\"'\n\n  ######################################################\n  # System scopes resource API\n  ######################################################\n  /system-scopes/{scopeName}:\n    get:\n      tags:\n        - System Scopes\n      summary: Retrieve Scopes for a Particular User\n      description: |\n        This operation will return the scope list of particular user\n        In order to get it, we need to pass the userId as a query parameter\n      operationId: systemScopesScopeNameGet\n      parameters:\n        - name: username\n          in: query\n          schema:\n            type: string\n        - $ref: '#/components/parameters/scopeName'\n      responses:\n        200:\n          description: |\n            OK.\n            Particular scope exists for the given user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScopeSettings'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:scope_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/system-scopes/YXBpbTpzdWJzY3JpYmU?username=john\"'\n\n  /system-scopes:\n    get:\n      tags:\n        - System Scopes\n      summary: |\n        Get Role Scope Mappings\n      description: |\n        This operation is used to get the list of role scope mapping from tenant-conf for the apim admin dashboard\n      operationId: systemScopesGet\n      responses:\n        200:\n          description: |\n            OK.\n            The list of role scope mappings are returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScopeList'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:scope_manage\n            - apim:admin\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/system-scopes\"'\n\n    put:\n      tags:\n        - System Scopes\n      summary: |\n        Update Roles For Scope\n      description: |\n        This operation is used to update the roles for all scopes\n      operationId: updateRolesForScope\n      requestBody:\n        description: |\n          Scope list object with updated scope to role mappings\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScopeList'\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Successful response with the newly added roles.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScopeList'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:scope_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/system-scopes\"'\n\n  /system-scopes/role-aliases:\n    get:\n      tags:\n        - System Scopes\n      summary: Retrieve Role Alias Mappings\n      description: |\n        This operation can be used to retreive role alias mapping\n      responses:\n        200:\n          description: |\n            OK.\n            The list of role mappings are returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleAliasList'\n        404:\n          $ref: '#/components/responses/NotFound'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:scope_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/system-scopes/role-aliases\"'\n\n    put:\n      tags:\n        - System Scopes\n      summary: Add a New Role Alias\n      description: |\n        This operation can be used to add a new role alias mapping for system scope roles\n      requestBody:\n        description: role-alias mapping\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoleAliasList'\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Role mapping alias returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleAliasList'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:scope_manage\n            - apim:admin\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/system-scopes/role-aliases\"'\n\n  ######################################################\n  # The Tenant Theme resource APIs\n  ######################################################\n  /tenant-theme:\n    get:\n      tags:\n        - Tenant Theme\n      summary: Export a DevPortal Tenant Theme\n      description: |\n        This operation can be used to export a DevPortal tenant theme as a zip file.\n      operationId: exportTenantTheme\n      responses:\n        200:\n          description: |\n            OK.\n            Tenant Theme Exported Successfully.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/zip:\n              schema:\n                type: string\n                format: binary\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tenant_theme_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/tenant-theme\" \u003e theme.zip'\n\n    put:\n      tags:\n        - Tenant Theme\n      summary: Import a DevPortal Tenant Theme\n      description: |\n        This operation can be used to import a DevPortal tenant theme.\n      operationId: importTenantTheme\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              required:\n                - file\n              properties:\n                file:\n                  type: string\n                  description: |\n                    Zip archive consisting of tenant theme configuration\n                  format: binary\n        required: true\n      responses:\n        200:\n          description: |\n            Ok.\n            Tenant Theme Imported Successfully.\n          content: {}\n        403:\n          $ref: '#/components/responses/Forbidden'\n        413:\n          $ref: '#/components/responses/PayloadTooLarge'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:tenant_theme_manage\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@theme.zip \"https://127.0.0.1:9443/api/am/admin/v3/tenant-theme\"'\n\n  ######################################################\n  # The Tenant config resource APIs\n  ######################################################\n  /tenant-config:\n    get:\n      tags:\n        - Tenant Config\n      summary: Export a tenant-Config.\n      description: |\n        This operation can be used to export a tenant-config.json used in deployment.\n      operationId: exportTenantConfig\n      responses:\n        200:\n          description: |\n            OK.\n            Tenant config Exported Successfully.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: object\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/tenant-config\" \u003e tenant-config.json'\n    put:\n      tags:\n        - Tenant Config\n      summary: Update a tenant-config.\n      description: |\n        This operation can be used to update tenant-config.\n      operationId: updateTenantConfig\n      requestBody:\n        description: tenant-config\n        content:\n          application/json:\n            schema:\n              type: object\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Role mapping alias returned\n          content:\n            application/json:\n              schema:\n                type: object\n        403:\n          $ref: '#/components/responses/Forbidden'\n        413:\n          $ref: '#/components/responses/PayloadTooLarge'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n           \"https://127.0.0.1:9443/api/am/admin/v3/tenant-config\"'\n\n  ######################################################\n  # The Tenant config schema resource APIs\n  ######################################################\n  /tenant-config-schema:\n    get:\n      tags:\n        - Tenant Config Schema\n      summary: Export a tenant-Config-Schema.\n      description: |\n        This operation can be used to export a tenant-config-schema.json used in deployment.\n      operationId: exportTenantConfigSchema\n      responses:\n        200:\n          description: |\n            OK.\n            Tenant config schema exported successfully.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: object\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OAuth2Security:\n            - apim:admin\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/tenant-config-schema\" \u003e tenant-config-schema.json'\n\n  ######################################################\n  # The \"Key Manager Collection\" resource API\n  ######################################################\n  /key-managers:\n    get:\n      tags:\n        - Key Manager (Collection)\n      summary: Get all Key managers\n      description: |\n        Get all Key managers\n      responses:\n        200:\n          description: |\n            OK.\n            KeyManagers returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyManagerList'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_operations\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/key-managers\"'\n\n    post:\n      tags:\n        - Key Manager (Collection)\n      summary: Add a new API Key Manager\n      description: |\n        Add a new API Key Manager\n      requestBody:\n        description: |\n          Key Manager object that should to be added\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KeyManager'\n        required: true\n      responses:\n        201:\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyManager'\n        400:\n          $ref: '#/components/responses/BadRequest'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_operations\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/key-managers\"'\n\n  ######################################################\n  # The \"Individual KeyManager\" resource APIs\n  ######################################################\n  /key-managers/{keyManagerId}:\n    get:\n      tags:\n        - Key Manager (Individual)\n      summary: Get a Key Manager Configuration\n      description: |\n        Retrieve a single Key Manager Configuration. We should provide the Id of the KeyManager as a path parameter.\n      parameters:\n        - $ref: '#/components/parameters/keyManagerId'\n      responses:\n        200:\n          description: |\n            OK.\n            KeyManager Configuration returned\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyManager'\n        404:\n          $ref: '#/components/responses/NotFound'\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_operations\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/key-managers/8d263942-a6df-4cc2-a804-7a2525501450\"'\n\n    put:\n      tags:\n        - Key Manager (Individual)\n      summary: Update a Key Manager\n      description: |\n        Update a Key Manager by keyManager id\n      parameters:\n        - $ref: '#/components/parameters/keyManagerId'\n      requestBody:\n        description: |\n          Key Manager object with updated information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KeyManager'\n        required: true\n      responses:\n        200:\n          description: |\n            OK.\n            Label updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyManager'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_operations\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/key-managers/8d263942-a6df-4cc2-a804-7a2525501450\"'\n\n    delete:\n      tags:\n        - Key Manager (Individual)\n      summary: Delete a Key Manager\n      description: |\n        Delete a Key Manager by keyManager id\n      parameters:\n        - $ref: '#/components/parameters/keyManagerId'\n      responses:\n        200:\n          description: |\n            OK.\n            Key Manager successfully deleted.\n          content: {}\n        404:\n          $ref: '#/components/responses/NotFound'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_operations\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/key-managers/8d263942-a6df-4cc2-a804-7a2525501450\"'\n\n  /key-managers/discover:\n    post:\n      tags:\n        - Key Manager (Collection)\n      summary: Retrieve Well-known information from Key Manager Well-known Endpoint\n      description: |\n        Retrieve well-known information from key manager's well-known endpoint\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                url:\n                  type: string\n                  description: Well-Known Endpoint\n                type:\n                  type: string\n                  description: |\n                    Key Manager Type\n                  default: \"false\"\n      responses:\n        200:\n          description: |\n            OK.\n            KeyManagers returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyManagerWellKnownResponse'\n      security:\n        - OAuth2Security:\n            - apim:admin\n            - apim:admin_operations\n      x-code-samples:\n        - lang: Shell\n          source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F \"type=WSO2-IS\" \"https://127.0.0.1:9443/api/am/admin/v3/key-managers/discover\"'\n\ncomponents:\n  schemas:\n    Error:\n      title: Error object returned with 4XX HTTP status\n      required:\n        - code\n        - message\n      type: object\n      properties:\n        code:\n          type: integer\n          description: Error code\n          format: int64\n        message:\n          type: string\n          description: Error message.\n        description:\n          type: string\n          description: |\n            A detail description about the error message.\n        moreInfo:\n          type: string\n          description: |\n            Preferably an url with more details about the error.\n        error:\n          type: array\n          description: |\n            If there are more than one error list them out.\n            For example, list out validation errors by each field.\n          items:\n            $ref: '#/components/schemas/ErrorListItem'\n    ErrorListItem:\n      title: Description of individual errors that may have occurred during a request.\n      required:\n        - code\n        - message\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n        message:\n          type: string\n          description: |\n            Description about individual errors occurred\n    ThrottlePolicyDetailsList:\n      title: Policy List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of Throttling Policies returned.\n          example: 1\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/ThrottlePolicyDetails'\n    ThrottlePolicyDetails:\n      title: Generic Policy\n      required:\n        - policyName\n      type: object\n      properties:\n        policyId:\n          type: integer\n          description: Id of policy\n          readOnly: true\n          example: 3\n        uuid:\n          type: string\n          description: UUId of policy\n          readOnly: true\n          example: 0c6439fd-9b16-3c2e-be6e-1086e0b9aa93\n        policyName:\n          maxLength: 60\n          minLength: 1\n          type: string\n          description: Name of policy\n          example: 30PerMin\n        displayName:\n          type: string\n          description: Display name of the policy\n          example: 30PerMin\n          maxLength: 512\n        description:\n          maxLength: 1024\n          type: string\n          description: Description of the policy\n          example: Allows 30 request per minute\n        isDeployed:\n          type: boolean\n          description: Indicates whether the policy is deployed successfully or not.\n          default: false\n        type:\n          type: string\n          description: Indicates the type of throttle policy\n    ThrottlePolicy:\n      title: Generic Throttling Policy\n      required:\n        - policyName\n      type: object\n      properties:\n        policyId:\n          type: string\n          description: Id of policy\n          readOnly: true\n          example: 0c6439fd-9b16-3c2e-be6e-1086e0b9aa93\n        policyName:\n          maxLength: 60\n          minLength: 1\n          type: string\n          description: Name of policy\n          example: 30PerMin\n        displayName:\n          type: string\n          description: Display name of the policy\n          example: 30PerMin\n          maxLength: 512\n        description:\n          maxLength: 1024\n          type: string\n          description: Description of the policy\n          example: Allows 30 request per minute\n        isDeployed:\n          type: boolean\n          description: Indicates whether the policy is deployed successfully or not.\n          default: false\n        type:\n          type: string\n          description: Indicates the type of throttle policy\n      discriminator:\n        propertyName: type\n    ExportThrottlePolicy:\n      title: Export Throttling Policy\n      type : object\n      properties:\n        type:\n          type: string\n        subtype:\n          type: string\n        version:\n          type: string\n        data:\n          type: object\n    AdvancedThrottlePolicyInfo:\n      title: Advanced Throttling Policy\n      allOf:\n        - $ref: '#/components/schemas/ThrottlePolicy'\n        - type: object\n          properties:\n            defaultLimit:\n              $ref: '#/components/schemas/ThrottleLimit'\n    AdvancedThrottlePolicy:\n      title: Advanced Throttling Policy\n      allOf:\n        - $ref: '#/components/schemas/ThrottlePolicy'\n        - required:\n            - defaultLimit\n          type: object\n          properties:\n            defaultLimit:\n              $ref: '#/components/schemas/ThrottleLimit'\n            conditionalGroups:\n              type: array\n              description: |\n                Group of conditions which allow adding different parameter conditions to the throttling limit.\n              items:\n                $ref: '#/components/schemas/ConditionalGroup'\n    AdvancedThrottlePolicyList:\n      title: Advanced Throttling Policy List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of Advanced Throttling Policies returned.\n          example: 1\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/AdvancedThrottlePolicyInfo'\n    ApplicationThrottlePolicy:\n      title: Application Throttling Policy\n      allOf:\n        - $ref: '#/components/schemas/ThrottlePolicy'\n        - required:\n            - defaultLimit\n          type: object\n          properties:\n            defaultLimit:\n              $ref: '#/components/schemas/ThrottleLimit'\n    ApplicationThrottlePolicyList:\n      title: Application Level Throttling Policy List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of Application Throttling Policies returned.\n          example: 1\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/ApplicationThrottlePolicy'\n    SubscriptionThrottlePolicy:\n      title: Subscription Throttling Policy\n      allOf:\n        - $ref: '#/components/schemas/ThrottlePolicy'\n        - $ref: '#/components/schemas/GraphQLQuery'\n        - required:\n            - defaultLimit\n          type: object\n          properties:\n            defaultLimit:\n              $ref: '#/components/schemas/ThrottleLimit'\n            monetization:\n              $ref: '#/components/schemas/MonetizationInfo'\n            rateLimitCount:\n              type: integer\n              description: Burst control request count\n              example: 10\n            rateLimitTimeUnit:\n              type: string\n              description: Burst control time unit\n              example: min\n            customAttributes:\n              type: array\n              description: |\n                Custom attributes added to the Subscription Throttling Policy\n              example: []\n              items:\n                $ref: '#/components/schemas/CustomAttribute'\n            stopOnQuotaReach:\n              type: boolean\n              description: |\n                This indicates the action to be taken when a user goes beyond the allocated quota. If checked, the user's requests will be dropped. If unchecked, the requests will be allowed to pass through.\n              default: false\n            billingPlan:\n              type: string\n              description: |\n                define whether this is Paid or a Free plan. Allowed values are FREE or COMMERCIAL.\n              example: FREE\n            permissions:\n              $ref: '#/components/schemas/SubscriptionThrottlePolicyPermission'\n            subscriberCount:\n              type: integer\n              description: |\n                Number of subscriptions allowed\n              example: 10\n    SubscriptionThrottlePolicyPermission:\n      title: SubscriptionThrottlePolicyPermission\n      required:\n        - permissionType\n        - roles\n      type: object\n      properties:\n        permissionType:\n          type: string\n          example: deny\n          enum:\n            - ALLOW\n            - DENY\n        roles:\n          type: array\n          example:\n            - Internal/everyone\n          items:\n            type: string\n    GraphQLQuery:\n      title: GraphQL Query\n      type: object\n      properties:\n        graphQLMaxComplexity:\n          type: integer\n          description: Maximum Complexity of the GraphQL query\n          example: 400\n        graphQLMaxDepth:\n          type: integer\n          description: Maximum Depth of the GraphQL query\n          example: 10\n    SubscriptionThrottlePolicyList:\n      title: Subscription Level Throttling Policy List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of Subscription Throttling Policies returned.\n          example: 1\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionThrottlePolicy'\n    CustomRule:\n      title: Custom Rule\n      allOf:\n        - $ref: '#/components/schemas/ThrottlePolicy'\n        - required:\n            - keyTemplate\n            - siddhiQuery\n          type: object\n          properties:\n            siddhiQuery:\n              type: string\n              description: Siddhi query which represents the custom throttling policy\n              example: |\n                FROM RequestStream\\nSELECT userId, ( userId == 'admin@carbon.super' ) AS isEligible , str:concat('admin@carbon.super','') as throttleKey\\nINSERT INTO EligibilityStream; \\n\\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1 min) \\nSELECT throttleKey, (count(userId) \u003e= 10) as isThrottled, expiryTimeStamp group by throttleKey \\nINSERT ALL EVENTS into ResultStream;\n            keyTemplate:\n              type: string\n              description: The specific combination of attributes that are checked in\n                the policy.\n              example: $userId\n    CustomRuleList:\n      title: Custom Rule List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of Custom Rules returned.\n          example: 1\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomRule'\n    ConditionalGroup:\n      title: Conditional Groups for Throttling\n      required:\n        - conditions\n        - limit\n      type: object\n      properties:\n        description:\n          type: string\n          description: Description of the Conditional Group\n        conditions:\n          type: array\n          description: |\n            Individual throttling conditions. They can be defined as either HeaderCondition, IPCondition, JWTClaimsCondition, QueryParameterCondition\n            Please see schemas of each of those throttling condition in Definitions section.\n          example: |\n            [\n              {\n                \"type\": \"HEADERCONDITION\",\n                \"invertCondition\": false,\n                \"headerCondition\":\n                {\n                  \"headerName\": \"Host\",\n                  \"headerValue\": \"10.100.7.77\"\n                }\n              },\n              {\n                \"type\": \"IPCONDITION\",\n                \"invertCondition\": false,\n                \"ipCondition\":\n                {\n                  \"ipConditionType\": \"IPSPECIFIC\",\n                  \"specificIP\": \"10.100.1.22\",\n                  \"startingIP\": null,\n                  \"endingIP\": null\n                }\n              },\n              {\n                \"type\": \"QUERYPARAMETERCONDITION\",\n                \"invertCondition\": false,\n                \"queryParameterCondition\":\n                {\n                  \"parameterName\": \"name\",\n                  \"parameterValue\": \"admin\"\n                }\n              },\n              {\n                \"type\": \"JWTCLAIMSCONDITION\",\n                \"invertCondition\": true,\n                \"jwtClaimsCondition\":\n                {\n                  \"claimUrl\": \"claimUrl0\",\n                  \"attribute\": \"claimAttr0\"\n                }\n              }\n            ]\n          items:\n            $ref: '#/components/schemas/ThrottleCondition'\n        limit:\n          $ref: '#/components/schemas/ThrottleLimit'\n    ThrottleCondition:\n      title: Throttling Conditions\n      required:\n        - type\n      type: object\n      properties:\n        type:\n          type: string\n          description: |\n            Type of the throttling condition. Allowed values are \"HEADERCONDITION\", \"IPCONDITION\", \"JWTCLAIMSCONDITION\"\n            and \"QUERYPARAMETERCONDITION\".\n          enum:\n            - HEADERCONDITION\n            - IPCONDITION\n            - JWTCLAIMSCONDITION\n            - QUERYPARAMETERCONDITION\n        invertCondition:\n          type: boolean\n          description: |\n            Specifies whether inversion of the condition to be matched against the request.\n\n            **Note:** When you add conditional groups for advanced throttling policies, this paramater should have the\n            same value ('true' or 'false') for the same type of conditional group.\n          default: false\n        headerCondition:\n          $ref: '#/components/schemas/HeaderCondition'\n        ipCondition:\n          $ref: '#/components/schemas/IPCondition'\n        jwtClaimsCondition:\n          $ref: '#/components/schemas/JWTClaimsCondition'\n        queryParameterCondition:\n          $ref: '#/components/schemas/QueryParameterCondition'\n      description: Conditions used for Throttling\n    HeaderCondition:\n      title: HTTP Header based throttling condition\n      required:\n        - headerName\n        - headerValue\n      type: object\n      properties:\n        headerName:\n          type: string\n          description: Name of the header\n        headerValue:\n          type: string\n          description: Value of the header\n    IPCondition:\n      title: IP based throttling condition\n      required:\n        - specificIP\n      type: object\n      properties:\n        ipConditionType:\n          type: string\n          description: Type of the IP condition. Allowed values are \"IPRANGE\" and\n            \"IPSPECIFIC\"\n          enum:\n            - IPRANGE\n            - IPSPECIFIC\n        specificIP:\n          type: string\n          description: Specific IP when \"IPSPECIFIC\" is used as the ipConditionType\n        startingIP:\n          type: string\n          description: Staring IP when \"IPRANGE\" is used as the ipConditionType\n        endingIP:\n          type: string\n          description: Ending IP when \"IPRANGE\" is used as the ipConditionType\n    JWTClaimsCondition:\n      title: JWT claim attibute based throttling condition\n      required:\n        - attribute\n        - claimUrl\n      type: object\n      properties:\n        claimUrl:\n          type: string\n          description: JWT claim URL\n        attribute:\n          type: string\n          description: Attribute to be matched\n    QueryParameterCondition:\n      title: Query parameter based throttling condition\n      required:\n        - parameterName\n        - parameterValue\n      type: object\n      properties:\n        parameterName:\n          type: string\n          description: Name of the query parameter\n        parameterValue:\n          type: string\n          description: Value of the query parameter to be matched\n    ThrottleLimitBase:\n      title: Throttle Limit Base\n      required:\n        - timeUnit\n        - unitTime\n      type: object\n      properties:\n        timeUnit:\n          type: string\n          description: Unit of the time. Allowed values are \"sec\", \"min\", \"hour\",\n            \"day\"\n          example: min\n        unitTime:\n          type: integer\n          description: Time limit that the throttling limit applies.\n          example: 10\n    ThrottleLimit:\n      title: Throttle Limit\n      required:\n        - type\n      type: object\n      properties:\n        type:\n          type: string\n          description: |\n            Type of the throttling limit. Allowed values are \"REQUESTCOUNTLIMIT\" and \"BANDWIDTHLIMIT\".\n            Please see schemas of \"RequestCountLimit\" and \"BandwidthLimit\" throttling limit types in\n            Definitions section.\n          example: REQUESTCOUNTLIMIT\n          enum:\n            - REQUESTCOUNTLIMIT\n            - BANDWIDTHLIMIT\n            - EVENTCOUNTLIMIT\n        requestCount:\n          $ref: '#/components/schemas/RequestCountLimit'\n        bandwidth:\n          $ref: '#/components/schemas/BandwidthLimit'\n        eventCount:\n          $ref: '#/components/schemas/EventCountLimit'\n    MonetizationInfo:\n      title: API monetization details object\n      required:\n        - monetizationPlan\n        - properties\n      type: object\n      properties:\n        monetizationPlan:\n          type: string\n          description: Flag to indicate the monetization plan\n          example: FixedRate\n          enum:\n            - FIXEDRATE\n            - DYNAMICRATE\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map of custom properties related to each monetization plan\n    BandwidthLimit:\n      title: Bandwidth Limit object\n      allOf:\n        - $ref: '#/components/schemas/ThrottleLimitBase'\n        - required:\n            - dataAmount\n            - dataUnit\n          type: object\n          properties:\n            dataAmount:\n              type: integer\n              description: Amount of data allowed to be transfered\n              format: int64\n              example: 1000\n            dataUnit:\n              type: string\n              description: Unit of data allowed to be transfered. Allowed values are\n                \"KB\", \"MB\" and \"GB\"\n              example: KB\n    RequestCountLimit:\n      title: Request Count Limit object\n      allOf:\n        - $ref: '#/components/schemas/ThrottleLimitBase'\n        - required:\n            - requestCount\n          type: object\n          properties:\n            requestCount:\n              type: integer\n              description: Maximum number of requests allowed\n              format: int64\n              example: 30\n    EventCountLimit:\n      title: Event Count Limit object\n      allOf:\n        - $ref: '#/components/schemas/ThrottleLimitBase'\n        - required:\n            - eventCount\n          type: object\n          properties:\n            eventCount:\n              type: integer\n              description: Maximum number of events allowed\n              format: int64\n              example: 3000\n    BlockingCondition:\n      title: Blocking Conditions\n      required:\n        - conditionType\n        - conditionValue\n      type: object\n      properties:\n        conditionId:\n          type: string\n          description: Id of the blocking condition\n          example: b513eb68-69e8-4c32-92cf-852c101363cf\n        conditionType:\n          type: string\n          description: Type of the blocking condition\n          example: IP\n          enum:\n            - API\n            - APPLICATION\n            - IP\n            - IPRANGE\n            - USER\n        conditionValue:\n          type: object\n          properties: {}\n          description: Value of the blocking condition\n          example:\n            fixedIp: 192.168.1.1\n            invert: false\n        conditionStatus:\n          type: boolean\n          description: Status of the blocking condition\n          example: true\n      description: Blocking Conditions\n    BlockingConditionList:\n      title: Blocking Conditions List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of Blocking Conditions returned.\n          example: 1\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/BlockingCondition'\n    BlockingConditionStatus:\n      title: Blocking Conditions Status\n      required:\n        - conditionStatus\n      type: object\n      properties:\n        conditionId:\n          type: string\n          description: Id of the blocking condition\n          example: b513eb68-69e8-4c32-92cf-852c101363cf\n        conditionStatus:\n          type: boolean\n          description: Status of the blocking condition\n          example: true\n      description: Blocking Conditions Status\n    CustomAttribute:\n      title: Name-Value pair\n      required:\n        - name\n        - value\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the custom attribute\n          example: customAttr1\n        value:\n          type: string\n          description: Value of the custom attribute\n          example: value1\n    mediationList:\n      title: Mediation List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of mediation sequences returned.\n          example: 1\n        next:\n          type: string\n          description: |\n            Link to the next subset of sequences qualified.\n            Empty if no more sequences are to be returned.\n          example: \"\"\n        previous:\n          type: string\n          description: |\n            Link to the previous subset of sequences qualified.\n            Empty if current subset is the first subset returned.\n          example: \"\"\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/MediationInfo'\n    MediationInfo:\n      title: MediationInfo\n      required:\n        - id\n        - name\n        - type\n      type: object\n      properties:\n        name:\n          type: string\n          example: json_fault.xml\n        id:\n          type: string\n          example: 01234567-0123-0123-0123-012345678901\n        type:\n          type: string\n          example: in\n          enum:\n            - in\n            - out\n            - fault\n    Mediation:\n      title: Mediation\n      required:\n        - config\n        - name\n        - type\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: 01234567-0123-0123-0123-012345678901\n        name:\n          type: string\n          example: custom_log_in_message.xml\n        type:\n          type: string\n          example: IN\n          enum:\n            - IN\n            - OUT\n            - FAULT\n        config:\n          type: string\n          example: \u003csequence xmlns=\"http://ws.apache.org/ns/synapse\" name=\"custom_log_in_message\"\u003e\n            \u003clog level=\"full\"\u003e \u003cproperty name=\"IN_MESSAGE\" value=\"IN_MESSAGE_21133232\"/\u003e\n            \u003c/log\u003e \u003c/sequence\u003e\n    ApplicationList:\n      title: Application List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of applications returned.\n          example: 1\n        next:\n          type: string\n          description: |\n            Link to the next subset of resources qualified.\n            Empty if no more resources are to be returned.\n          example: /applications?limit=1\u0026offset=2\u0026user=\n        previous:\n          type: string\n          description: |\n            Link to the previous subset of resources qualified.\n            Empty if current subset is the first subset returned.\n          example: /applications?limit=1\u0026offset=0\u0026user=\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/ApplicationInfo'\n    ApplicationInfo:\n      title: Application info object with basic application details\n      type: object\n      properties:\n        applicationId:\n          type: string\n          example: 01234567-0123-0123-0123-012345678901\n        name:\n          type: string\n          example: CalculatorApp\n        owner:\n          type: string\n          example: admin\n        status:\n          type: string\n          example: APPROVED\n        groupId:\n          type: string\n          example: \"\"\n    APIInfoList:\n      title: API Info List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of API Info objects returned.\n          example: 1\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/APIInfo'\n    APIInfo:\n      title: API info object with basic API details\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the API.\n          example: PizzaShackAPI\n        version:\n          type: string\n          description: The version of the API\n          example: 1.0.0\n        provider:\n          type: string\n          description: The provider of the API\n          example: admin\n    Label:\n      title: Label\n      required:\n        - name\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: ece92bdc-e1e6-325c-b6f4-656208a041e9\n        name:\n          maxLength: 255\n          minLength: 1\n          type: string\n          example: Public\n        description:\n          maxLength: 1024\n          type: string\n          example: Label to use for public Gateway\n        accessUrls:\n          type: array\n          items:\n            type: string\n            example: http://localhost:9443/\n    LabelList:\n      title: Label List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of Labels returned.\n          example: 1\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/Label'\n    Environment:\n      title: Environment\n      required:\n        - name\n        - vhosts\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: ece92bdc-e1e6-325c-b6f4-656208a041e9\n        name:\n          maxLength: 255\n          minLength: 1\n          pattern: '(^[^~!@#;:%^*()+={}|\\\\\u003c\u003e\"'',\u0026$\\s+]*$)'\n          type: string\n          example: us-region\n        displayName:\n          maxLength: 255\n          minLength: 1\n          type: string\n          example: US Region\n        description:\n          maxLength: 1023\n          type: string\n          example: Gateway environment in US Region\n        provider:\n          type: string\n          example: wso2\n        isReadOnly:\n          type: boolean\n          readOnly: true\n          example: false\n        vhosts:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/VHost'\n        endpointURIs:\n          type: array\n          items:\n            $ref: '#/components/schemas/GatewayEnvironmentProtocolURI'\n        additionalProperties:\n          type: array\n          items:\n            $ref: '#/components/schemas/AdditionalProperty'\n    EnvironmentList:\n      title: Environment List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of Environments returned.\n          example: 1\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/Environment'\n    VHost:\n      title: Virtual Host\n      required:\n        - host\n      type: object\n      properties:\n        host:\n          maxLength: 255\n          minLength: 1\n          # hostname regex as per RFC 1123 (http://tools.ietf.org/html/rfc1123) and appended *\n          pattern: '^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$'\n          type: string\n          example: mg.wso2.com\n        httpContext:\n          maxLength: 255\n          minLength: 0\n          pattern: '^\\/?([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])*$'\n          type: string\n          example: pets\n        httpPort:\n          type: integer\n          example: 80\n        httpsPort:\n          type: integer\n          example: 443\n        wsPort:\n          type: integer\n          example: 9099\n        wssPort:\n          type: integer\n          example: 8099\n    AdditionalProperty:\n      title: Additional Gateway Properties\n      type: object\n      properties:\n        key:\n          type: string\n          example: Organization\n        value:\n          type: string\n          example: wso2\n    GatewayEnvironmentProtocolURI:\n      title: Gateway Environment protocols and URIs\n      required:\n        - protocol\n        - endpointURI\n      type: object\n      properties:\n        protocol:\n          type: string\n          example: default\n        endpointURI:\n          type: string\n          example: default\n    PublishStatus:\n      title: Usage publish status\n      type: object\n      properties:\n        status:\n          type: string\n          description: Status of the usage publish request\n          example: successfull\n        message:\n          type: string\n          description: detailed message of the status\n          example: Records published successfully\n    MonetizationUsagePublishInfo:\n      title: Usage publish status\n      type: object\n      properties:\n        state:\n          type: string\n          description: State of usage publish job\n          example: RUNNING\n        status:\n          type: string\n          description: Status of usage publish job\n          example: SUCCESSFULL\n        startedTime:\n          type: string\n          description: Timestamp of the started time of the Job\n          example: \"1599196134000\"\n        lastPublsihedTime:\n          type: string\n          description: Timestamp of the last published time\n          example: \"1599196134000\"\n    Workflow:\n      title: workflow\n      required:\n        - status\n      type: object\n      properties:\n        status:\n          type: string\n          description: |\n            This attribute declares whether this workflow task is approved or rejected.\n          example: APPROVED\n          enum:\n            - APPROVED\n            - REJECTED\n        attributes:\n          type: object\n          additionalProperties:\n            type: string\n          description: |\n            Custom attributes to complete the workflow task\n          example: {}\n        description:\n          type: string\n          example: Approve workflow request.\n    TenantInfo:\n      title: Tenant information\n      type: object\n      properties:\n        username:\n          type: string\n          example: john\n        tenantDomain:\n          type: string\n          example: carbon.super\n        tenantId:\n          type: integer\n          example: -1234\n      description: The tenant information of the user\n    CustomUrlInfo:\n      title: Custom url information\n      type: object\n      properties:\n        tenantDomain:\n          type: string\n          example: carbon.super\n        tenantAdminUsername:\n          type: string\n          example: john@foo.com\n        enabled:\n          type: boolean\n          example: true\n        devPortal:\n          type: object\n          properties:\n            url:\n              type: string\n              example: http://example.com\n      description: The custom url information of the tenant domain\n    APICategory:\n      title: API Category\n      required:\n        - name\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: 01234567-0123-0123-0123-012345678901\n        name:\n          maxLength: 255\n          minLength: 1\n          type: string\n          example: Finance\n        description:\n          maxLength: 1024\n          type: string\n          example: Finance related APIs\n        numberOfAPIs:\n          type: integer\n          readOnly: true\n          example: 1\n    APICategoryList:\n      title: API Category List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of API categories returned.\n          example: 1\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/APICategory'\n    FileInfo:\n      title: File Information including meta data\n      type: object\n      properties:\n        relativePath:\n          type: string\n          description: relative location of the file (excluding the base context and\n            host of the Admin API)\n          example: api-categories/01234567-0123-0123-0123-012345678901/thumbnail\n        mediaType:\n          type: string\n          description: media-type of the file\n          example: image/jpeg\n    Settings:\n      title: Settings\n      type: object\n      properties:\n        scopes:\n          type: array\n          items:\n            type: string\n        keyManagerConfiguration:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                example: default\n              displayName:\n                type: string\n                example: default\n              defaultConsumerKeyClaim:\n                type: string\n                example: azp\n              defaultScopesClaim:\n                type: string\n                example: scope\n              configurations:\n                type: array\n                items:\n                  $ref: '#/components/schemas/KeyManagerConfiguration'\n        analyticsEnabled:\n          type: boolean\n          description: To determine whether analytics is enabled or not\n          example: false\n    ScopeList:\n      title: Scope Role Mapping List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of scopes available for tenant.\n          readOnly: true\n          example: 60\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/Scope'\n    Scope:\n      title: Scope Role\n      type: object\n      properties:\n        tag:\n          type: string\n          description: |\n            Portal name.\n          example: publisher\n        name:\n          type: string\n          description: |\n            Scope name.\n          example: apim:api_publish\n        description:\n          type: string\n          description: |\n            About scope.\n          example: Publish API\n        roles:\n          type: array\n          description: |\n            Roles for the particular scope.\n          example:\n            - admin\n            - Internal/publisher\n          items:\n            type: string\n    KeyManagerWellKnownResponse:\n      title: Key Manager Well-Known Response.\n      type: object\n      properties:\n        valid:\n          type: boolean\n          example: true\n          default: false\n        value:\n          $ref: '#/components/schemas/KeyManager'\n    KeyManager:\n      title: Key Manager\n      required:\n        - name\n        - type\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: 01234567-0123-0123-0123-012345678901\n        name:\n          maxLength: 100\n          minLength: 1\n          type: string\n          example: WSO2 Identity Server\n        displayName:\n          maxLength: 100\n          type: string\n          description: |\n            display name of Key Manager to  show in UI\n          example: WSO2 Identity Server\n        type:\n          maxLength: 45\n          minLength: 1\n          type: string\n          example: WSO2-IS\n        description:\n          maxLength: 256\n          type: string\n          example: This is a key manager for Developers\n        wellKnownEndpoint:\n          type: string\n          description: |\n            Well-Known Endpoint of Identity Provider.\n          example: \"\"\n        introspectionEndpoint:\n          type: string\n          example: https://localhost:9444/oauth2/introspect\n        clientRegistrationEndpoint:\n          type: string\n          example: https://localhost:9444/keymanager-operations/dcr/register\n        tokenEndpoint:\n          type: string\n          example: https://localhost:9444/oauth2/token\n        displayTokenEndpoint:\n          type: string\n          example: https://localhost:9444/oauth2/token\n        revokeEndpoint:\n          type: string\n          example: https://localhost:9444/oauth2/revoke\n        displayRevokeEndpoint:\n          type: string\n          example: https://localhost:9444/oauth2/revoke\n        userInfoEndpoint:\n          type: string\n          example: https://localhost:9444/oauth2/userinfo?schema=openid\n        authorizeEndpoint:\n          type: string\n          example: https://localhost:9444/oauth2/authorize\n        certificates:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - JWKS\n                - PEM\n            value:\n              type: string\n        issuer:\n          type: string\n          example: https://localhost:9444/services\n        alias:\n          type: string\n          description: |\n            The alias of Identity Provider.\n            If the tokenType is EXCHANGED, the alias value should be inclusive in the audience values of the JWT token\n          example: https://localhost:9443/oauth2/token\n        scopeManagementEndpoint:\n          type: string\n          example: https://wso2is.com:9444/api/identity/oauth2/v1.0/scopes\n        availableGrantTypes:\n          type: array\n          items:\n            type: string\n            example: client_credentials\n        enableTokenGeneration:\n          type: boolean\n          example: true\n        enableTokenEncryption:\n          type: boolean\n          example: false\n          default: false\n        enableTokenHashing:\n          type: boolean\n          example: false\n          default: false\n        enableMapOAuthConsumerApps:\n          type: boolean\n          example: false\n          default: false\n        enableOAuthAppCreation:\n          type: boolean\n          example: false\n          default: false\n        enableSelfValidationJWT:\n          type: boolean\n          example: true\n          default: true\n        claimMapping:\n          type: array\n          items:\n            $ref: '#/components/schemas/ClaimMappingEntry'\n        consumerKeyClaim:\n          type: string\n          example: azp\n        scopesClaim:\n          type: string\n          example: scp\n        tokenValidation:\n          type: array\n          items:\n            $ref: '#/components/schemas/TokenValidation'\n        enabled:\n          type: boolean\n          example: true\n        additionalProperties:\n          type: object\n          properties: { }\n          example:\n            self_validate_jwt: true\n            Username: admin\n            Password: admin\n        tokenType:\n          type: string\n          description: The type of the tokens to be used (exchanged or without exchanged).\n            Accepted values are EXCHANGED and DIRECT.\n          example: EXCHANGED\n          default: DIRECT\n          enum:\n            - EXCHANGED\n            - DIRECT\n            - BOTH\n    KeyManagerInfo:\n      title: Key Manager Info\n      required:\n        - name\n        - type\n      type: object\n      properties:\n        id:\n          type: string\n          example: 01234567-0123-0123-0123-012345678901\n        name:\n          type: string\n          example: WSO2 IS\n        type:\n          type: string\n          example: IS\n        description:\n          type: string\n          example: This is a key manager for Developers\n        enabled:\n          type: boolean\n          example: true\n        tokenType:\n          type: string\n          description: The type of the tokens to be used (exchanged or without exchanged).\n            Accepted values are EXCHANGED and DIRECT.\n          example: EXCHANGED\n          default: DIRECT\n          enum:\n            - EXCHANGED\n            - DIRECT\n            - BOTH\n    KeyManagerConfiguration:\n      title: Key Manager Configuration\n      type: object\n      properties:\n        name:\n          type: string\n          example: consumer_key\n        label:\n          type: string\n          example: Consumer Key\n        type:\n          type: string\n          example: select\n        required:\n          type: boolean\n          example: true\n        mask:\n          type: boolean\n          example: true\n        multiple:\n          type: boolean\n          example: true\n        tooltip:\n          type: string\n          example: Entet username to connect to key manager\n        default:\n          type: object\n          properties: {}\n          example: admin\n        values:\n          type: array\n          items:\n            type: object\n            properties: {}\n    KeyManagerList:\n      title: Key Manager List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of Key managers returned.\n          example: 1\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/KeyManagerInfo'\n    ClaimMappingEntry:\n      title: Claim Mapping Configuration\n      type: object\n      properties:\n        remoteClaim:\n          type: string\n          example: http://idp.org/username\n        localClaim:\n          type: string\n          example: http://wso2.org/username\n    TokenValidation:\n      title: Token handling Configuration\n      type: object\n      properties:\n        id:\n          type: integer\n        enable:\n          type: boolean\n          example: false\n          default: true\n        type:\n          type: string\n          enum:\n            - REFERENCE\n            - JWT\n            - CUSTOM\n        value:\n          type: object\n          properties: {}\n    ScopeSettings:\n      title: Settings\n      type: object\n      properties:\n        name:\n          type: string\n          example: apim:subscribe\n    AlertTypesList:\n      title: Alert Types List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The number of alerts\n          example: 3\n        alerts:\n          type: array\n          items:\n            $ref: '#/components/schemas/AlertType'\n    AlertType:\n      title: Alert Type\n      type: object\n      properties:\n        id:\n          type: string\n          description: The alert Id\n          example: \"1\"\n        name:\n          type: string\n          description: The name of the alert.\n          example: AbnormalResponseTime\n    AlertsSubscription:\n      title: Alerts Subscription\n      type: object\n      properties:\n        alerts:\n          type: array\n          items:\n            $ref: '#/components/schemas/AlertType'\n        emailList:\n          type: array\n          items:\n            type: string\n            format: email\n            example: admin@wso2.com\n    BotDetectionAlertSubscriptionList:\n      title: Bot Detection Alert Subscription List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of Bot Detection Alert Subscriptions returned.\n          example: 3\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/BotDetectionAlertSubscription'\n    BotDetectionAlertSubscription:\n      title: Bot Detection Alert Subscription\n      required:\n        - email\n      type: object\n      properties:\n        uuid:\n          type: string\n          description: UUID of the subscription\n          example: urn:uuid:1ed6d2de-29df-4fed-a96a-46d2329dce65\n        email:\n          type: string\n          description: email\n          example: abc@gmail.com\n    WorkflowList:\n      title: WorkflowList\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of workflow processes returned.\n          example: 1\n        next:\n          type: string\n          description: |\n            Link to the next subset of resources qualified.\n            Empty if no more resources are to be returned.\n          example: /workflows?limit=1\u0026offset=2\u0026user=\n        previous:\n          type: string\n          description: |\n            Link to the previous subset of resources qualified.\n            Empty if current subset is the first subset returned.\n          example: /workflows?limit=1\u0026offset=0\u0026user=\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/WorkflowInfo'\n    WorkflowInfo:\n      title: Workflow info object with basic workflow details\n      type: object\n      properties:\n        workflowType:\n          type: string\n          description: |\n            Type of the Workflow Request. It shows which type of request is it.\n          example: APPLICATION_CREATION\n          enum:\n            - APPLICATION_CREATION\n            - SUBSCRIPTION_CREATION\n            - USER_SIGNUP\n            - APPLICATION_REGISTRATION_PRODUCTION\n            - APPLICATION_REGISTRATION_SANDBOX\n            - APPLICATION_DELETION\n            - API_STATE\n            - SUBSCRIPTION_DELETION\n            - SUBSCRIPTION_UPDATE\n            - API_PRODUCT_STATE\n        workflowStatus:\n          type: string\n          description: |\n            Show the Status of the the workflow request whether it is approved or created.\n          example: APPROVED\n          enum:\n            - APPROVED\n            - CREATED\n        createdTime:\n          type: string\n          description: |\n            Time of the the workflow request created.\n          example: 2020-02-10 10:10:19.704\n        updatedTime:\n          type: string\n          description: |\n            Time of the the workflow request updated.\n          example: 2020-02-10 10:10:19.704\n        referenceId:\n          type: string\n          description: |\n            Workflow external reference is used to identify the workflow requests uniquely.\n          example: 5871244b-d6f3-466e-8995-8accd1e64303\n        properties:\n          type: object\n          properties: {}\n        description:\n          type: string\n          description: |\n            description is a message with basic details about the workflow request.\n          example: Approve application [APP1] creation request from application creator\n            - admin with throttling tier - 10MinPer\n    WorkflowResponse:\n      title: workflow Response\n      required:\n        - workflowStatus\n      type: object\n      properties:\n        workflowStatus:\n          type: string\n          description: |\n            This attribute declares whether this workflow task is approved or rejected.\n          example: APPROVED\n          enum:\n            - CREATED\n            - APPROVED\n            - REJECTED\n            - REGISTERED\n        jsonPayload:\n          type: string\n          description: |\n            Attributes that returned after the workflow execution\n    BotDetectionDataList:\n      title: Bot Detection Data List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of Bot Detection Data returned.\n          example: 1\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/BotDetectionData'\n    BotDetectionData:\n      title: Bot Detection Data\n      type: object\n      properties:\n        recordedTime:\n          type: integer\n          description: The time of detection\n          format: int64\n          example: 1591734138413\n        messageID:\n          type: string\n          description: The message ID\n          example: urn:uuid:1ed6d2de-29df-4fed-a96a-46d2329dce65\n        apiMethod:\n          type: string\n          description: The api method\n          example: GET\n        headerSet:\n          type: string\n          description: The header set\n          example: '[Accept=*/*, Host=localhost:8243, User-Agent=curl/7.58.0]'\n        messageBody:\n          type: string\n          description: The content of the message body\n          example: \u003csoapenv:Body xmlns:soapenv=\\\"http://www.w3.org/2003/05/soap-envelope\\\"/\u003e\n        clientIp:\n          type: string\n          description: The IP of the client\n          example: 127.0.0.1\n    RoleAliasList:\n      title: Role alias list\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The number of role aliases\n          example: 1\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/RoleAlias'\n    RoleAlias:\n      title: Role alias\n      type: object\n      properties:\n        role:\n          type: string\n          description: The original role\n          example: Internal/subscriber\n        aliases:\n          type: array\n          description: The role mapping for role alias\n          example:\n            - Subscriber\n            - Internal/subscriber\n          items:\n            type: string\n  responses:\n    BadRequest:\n      description: Bad Request. Invalid request or validation error.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            code: 400\n            message: Bad Request\n            description: Invalid request or validation error\n            moreInfo: \"\"\n            error: []\n    Conflict:\n      description: Conflict. Specified resource already exists.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            code: 409\n            message: Conflict\n            description: Specified resource already exists\n            moreInfo: \"\"\n            error: []\n    Forbidden:\n      description: Forbidden. The request must be conditional but no condition has\n        been specified.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            code: 403\n            message: Forbidden\n            description: The request must be conditional but no condition has been\n              specified\n            moreInfo: \"\"\n            error: []\n    InternalServerError:\n      description: Internal Server Error.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            code: 500\n            message: Internal Server Error\n            description: The server encountered an internal error. Please contact\n              administrator.\n            moreInfo: \"\"\n            error: []\n    NotAcceptable:\n      description: Not Acceptable. The requested media type is not supported.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            code: 406\n            message: Not Acceptable\n            description: The requested media type is not supported\n            moreInfo: \"\"\n            error: []\n    NotFound:\n      description: Not Found. The specified resource does not exist.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            code: 404\n            message: Not Found\n            description: The specified resource does not exist\n            moreInfo: \"\"\n            error: []\n    PayloadTooLarge:\n      description: Payload Too Large. Request entity is larger than limits defined\n        by server.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            code: 413\n            message: Payload Too Large\n            description: Request entity is larger than limits defined by server\n            moreInfo: \"\"\n            error: []\n    PreconditionFailed:\n      description: Precondition Failed. The request has not been performed because\n        one of the preconditions is not met.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            code: 412\n            message: Precondition Failed\n            description: The request has not been performed because one of the preconditions\n              is not met\n            moreInfo: \"\"\n            error: []\n    Unauthorized:\n      description: Unauthorized. The user is not authorized.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            code: 401\n            message: Unauthorized\n            description: The user is not authorized\n            moreInfo: \"\"\n            error: []\n    UnsupportedMediaType:\n      description: Unsupported Media Type. The entity of the request was not in a\n        supported format.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            code: 415\n            message: Unsupported media type\n            description: The entity of the request was not in a supported format\n            moreInfo: \"\"\n            error: []\n  parameters:\n    username:\n      name: username\n      in: query\n      description: |\n        username of the new application owner\n      required: true\n      schema:\n        type: string\n    scopeName:\n      name: scopeName\n      in: path\n      description: |\n        scope name to be validated\n      required: true\n      schema:\n        type: string\n    labelId:\n      name: labelId\n      in: path\n      description: |\n        Label UUID\n      required: true\n      schema:\n        type: string\n    environmentId:\n      name: environmentId\n      in: path\n      description: |\n        Environment UUID (or Environment name defined in config)\n      required: true\n      schema:\n        type: string\n    policyId:\n      name: policyId\n      in: path\n      description: |\n        Thorttle policy UUID\n      required: true\n      schema:\n        type: string\n    ruleId:\n      name: ruleId\n      in: path\n      description: |\n        Custom rule UUID\n      required: true\n      schema:\n        type: string\n    applicationId:\n      name: applicationId\n      in: path\n      description: |\n        Application UUID\n      required: true\n      schema:\n        type: string\n    conditionId:\n      name: conditionId\n      in: path\n      description: |\n        Blocking condition identifier\n      required: true\n      schema:\n        type: string\n    Accept:\n      name: Accept\n      in: header\n      description: |\n        Media types acceptable for the response. Default is application/json.\n      schema:\n        type: string\n        default: application/json\n    Content-Type:\n      name: Content-Type\n      in: header\n      description: |\n        Media type of the entity in the body. Default is application/json.\n      required: true\n      schema:\n        type: string\n        default: application/json\n    If-None-Match:\n      name: If-None-Match\n      in: header\n      description: |\n        Validator for conditional requests; based on the ETag of the formerly retrieved\n        variant of the resource (Will be supported in future).\n      schema:\n        type: string\n    If-Modified-Since:\n      name: If-Modified-Since\n      in: header\n      description: |\n        Validator for conditional requests; based on Last Modified header of the\n        formerly retrieved variant of the resource (Will be supported in future).\n      schema:\n        type: string\n    If-Match:\n      name: If-Match\n      in: header\n      description: |\n        Validator for conditional requests; based on ETag (Will be supported in future).\n      schema:\n        type: string\n    If-Unmodified-Since:\n      name: If-Unmodified-Since\n      in: header\n      description: |\n        Validator for conditional requests; based on Last Modified header (Will be supported in future).\n      schema:\n        type: string\n    limit:\n      name: limit\n      in: query\n      description: |\n        Maximum size of resource array to return.\n      schema:\n        type: integer\n        default: 25\n    offset:\n      name: offset\n      in: query\n      description: |\n        Starting point within the complete list of items qualified.\n      schema:\n        type: integer\n        default: 0\n    mediationPolicyId:\n      name: mediationPolicyId\n      in: path\n      description: |\n        Mediation policy Id\n      required: true\n      schema:\n        type: string\n    user:\n      name: user\n      in: query\n      description: |\n        username of the application creator\n      schema:\n        type: string\n    workflowReferenceId-Q:\n      name: workflowReferenceId\n      in: query\n      description: |\n        Workflow reference id\n      required: true\n      schema:\n        type: string\n    apiCategoryId:\n      name: apiCategoryId\n      in: path\n      description: |\n        API Category UUID\n      required: true\n      schema:\n        type: string\n    keyManagerId:\n      name: keyManagerId\n      in: path\n      description: |\n        Key Manager UUID\n      required: true\n      schema:\n        type: string\n  securitySchemes:\n    OAuth2Security:\n      type: oauth2\n      flows:\n        password:\n          tokenUrl: https://localhost:9443/oauth2/token\n          scopes:\n            openid: Authorize access to user details\n            apim:policies_import_export: Export and import policies related operations\n            apim:admin: Manage all admin operations\n            apim:tier_view: View throttling policies\n            apim:tier_manage: Update and delete throttling policies\n            apim:bl_view: View deny policies\n            apim:bl_manage: Update and delete deny policies\n            apim:mediation_policy_view: View mediation policies\n            apim:mediation_policy_create: Create and update mediation policies\n            apim:app_owner_change: Retrieve and manage applications\n            apim:app_import_export: Import and export applications related operations\n            apim:api_import_export: Import and export APIs related operations\n            apim:api_product_import_export: Import and export API Products related\n              operations\n            apim:label_manage: Manage microgateway labels\n            apim:label_read: Retrieve microgateway labels\n            apim:environment_manage: Manage gateway environments\n            apim:environment_read: Retrieve gateway environments\n            apim:monetization_usage_publish: Retrieve and publish Monetization related\n              usage records\n            apim:api_workflow_approve: Manage workflows\n            apim:bot_data: Retrieve bot detection data\n            apim:tenantInfo: Retrieve tenant related information\n            apim:tenant_theme_manage: Manage tenant themes\n            apim:admin_operations: Manage API categories and Key Managers related\n              operations\n            apim:admin_settings: Retrieve admin settings\n            apim:admin_alert_manage: Manage admin alerts\n            apim:api_workflow_view: Retrive workflow requests\n            apim:scope_manage: Manage system scopes\n",
			"canonicalURL": "/github.com/wso2/product-apim@32cff26f977a942bb83fa75d313ee04f1534b198/-/blob/modules/integration/tests-common/clients/admin/src/main/resources/admin-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/product-apim/blob/32cff26f977a942bb83fa75d313ee04f1534b198/modules/integration/tests-common/clients/admin/src/main/resources/admin-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api-categories/{apiCategoryId}\": put: security: security \"OAuth2Security\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}