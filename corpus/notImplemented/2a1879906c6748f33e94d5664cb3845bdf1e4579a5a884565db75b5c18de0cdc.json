{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dev-sys-do/rik"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/rep/controller/openapi.yaml",
			"byteSize": 7597,
			"content": "openapi: 3.0.2\ninfo:\n  title: Rik\n  version: 0.1.0\npaths:\n  /api/v0/workloads.list:\n    get:\n      tags:\n        - Workloads\n      description: List all workloads\n      parameters:\n        - required: false\n          schema:\n            title: limit\n            minimum: 1\n            type: integer\n          name: limit\n          in: query\n      responses:\n        \"200\":\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Workload\"\n\n  /api/v0/workloads.create:\n    post:\n      tags:\n        - Workloads\n      description: Create a new workload\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkloadDefinition\"\n      responses:\n        \"200\":\n          description: Successful Response\n          content:\n            text/plain:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 3\n\n  /api/v0/workloads.delete:\n    post:\n      tags:\n        - Workloads\n      description: Delete a workload\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: integer\n                  example: 3\n\n      responses:\n        \"200\":\n          description: Successful Response\n  /api/v0/tenants.list:\n    get:\n      tags:\n        - Tenants\n      description: List all tenants\n      parameters:\n        - required: false\n          schema:\n            title: limit\n            minimum: 1\n            type: integer\n          name: limit\n          in: query\n      responses:\n        \"200\":\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Tenant\"\n\n  /api/v0/tenants.create:\n    post:\n      tags:\n        - Tenants\n      description: Create a new tenant\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TenantDefinition\"\n      responses:\n        \"200\":\n          description: Successful Response\n          content:\n            text/plain:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 3\n\n  /api/v0/tenants.delete:\n    post:\n      tags:\n        - Tenants\n      description: Delete a tenant\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: string\n                  example: \"28dcac69-33ef-4b13-a42f-0d07c7acc1a6\"\n      responses:\n        \"200\":\n          description: Successful Response\n  /api/v1/instances.list:\n    get:\n      tags:\n        - Instances\n      description: List all instances\n      parameters:\n        - required: false\n          schema:\n            title: limit\n            minimum: 1\n            type: integer\n          name: limit\n          in: query\n      responses:\n        \"200\":\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Instance\"\n\n  /api/v1/instances.create:\n    post:\n      tags:\n        - Instances\n      description: Create a new instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/InstanceDefinition\"\n      responses:\n        \"200\":\n          description: Successful Response\n\n  /api/v0/instance.delete:\n    post:\n      tags:\n        - Instances\n      description: Delete an instance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: integer\n                  example: 3\n      responses:\n        \"200\":\n          description: Successful Response\n\ncomponents:\n  schemas:\n    Tenant:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 3\n        name:\n          type: string\n          example: \u003cname\u003e\n        verb:\n          type: string\n          example: create\n        resource:\n          type: string\n          example: workload\n      required: [id, name, verb, resource]\n\n    TenantDefinition:\n      type: object\n      properties:\n        name:\n          type: string\n          example: \u003cname\u003e\n        verb:\n          type: string\n          example: create\n        resource:\n          type: string\n          example: workload\n      required: [name, verb, resource]\n\n    WorkloadDefinition:\n      type: object\n      properties:\n        api_version:\n          type: string\n          example: \"v0\"\n        kind:\n          type: string\n          example: pods\n        name:\n          type: string\n          example: workload-name\n        spec:\n          type: object\n          properties:\n            containers:\n              type: array\n              items:\n                type: object\n                properties:\n                  name:\n                    type: string\n                    example: \u003cname\u003e\n                  image:\n                    type: string\n                    example: \u003cimage\u003e\n                  env:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        name:\n                          type: string\n                          example: key1\n                        value:\n                          type: string\n                          example: value1\n                      required:\n                        - name\n                        - value\n                  ports:\n                    type: object\n                    properties:\n                      port:\n                        type: number\n                        example: 80\n                      target_port:\n                        type: number\n                        example: 80\n                      protocol:\n                        type: string\n                        example: TCP\n                      type:\n                        type: string\n                        example: clusterIP|nodePort|loadBalancer\n                    required: [port, targetPort, type]\n                required: [name, image]\n      required: [apiVersion, kind, name, spec]\n\n    Workload:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 3\n        name:\n          type: string\n          example: \"/workload/pods/default/workload-name\"\n        value:\n          $ref: \"#/components/schemas/WorkloadDefinition\"\n      required: [id, name, value]\n\n    InstanceDefinition:\n      type: object\n      properties:\n        name:\n          type: string\n          example: \"instance-name\"\n        workload_id:\n          type: integer\n          example: 3\n        replicas:\n          type: integer\n          example: 3\n      required: [workloadId]\n\n    Instance:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 3\n        name:\n          type: string\n          example: \"/instance/pods/default/instance-name\"\n        value:\n          type: integer\n          example: \"\u003cstatus\u003e\"\n      required: [id, name, workloadId, status]\n",
			"canonicalURL": "/github.com/dev-sys-do/rik@d14f7cbcb370331732201ceb2a05d99d3ff3a94f/-/blob/docs/rep/controller/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dev-sys-do/rik/blob/d14f7cbcb370331732201ceb2a05d99d3ff3a94f/docs/rep/controller/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/v0/workloads.list\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}