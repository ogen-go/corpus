{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/model-config"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "rest/openapi/token-reader/openapi.yaml",
			"byteSize": 9409,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Chain reader service for light blockchain\n  license:\n    name: MIT\nservers:\n  - url: 'https://token.taiji.io'\npaths:\n  '/symbol/{symbol}':\n    get:\n      summary: Get token info based on symbol\n      operationId: getTokenBySymbol\n      tags:\n        - symbal\n      parameters:\n        - name: symbol\n          in: path\n          description: The token symbol\n          required: true\n          schema:\n            type: string\n      security:\n        - tk_auth:\n            - 'tk.r'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Token'\n              example:\n                entityAddress: 000013f530cAE4301776A9c137c005A6303c386F\n                name: Light Token\n                symbol: LIGHT\n                totalSupply: 1000000000\n                decimals: 9\n  '/token':\n    get:\n      summary: Get all token info\n      operationId: getToken\n      tags:\n        - token\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100 and default 10) \n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: offset\n          in: query\n          description: Offset of tokens (default 0 which is from the first token)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      security:\n        - tk_auth:\n            - 'tk.r'\n      responses:\n        '200':\n          description: All token info\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Token'\n              example:\n                - entityAddress: 000013f530cAE4301776A9c137c005A6303c386F\n                  name: Light Token\n                  symbol: LIGHT\n                  totalSupply: 1000000000\n                  decimals: 9\n\n  '/token/{address}':\n    get:\n      summary: Get token info by token address\n      operationId: getTokenByAddress\n      tags:\n        - tokenByAddress\n      parameters:\n        - name: address\n          in: path\n          description: The token entity address\n          required: true\n          schema:\n            type: string\n      security:\n        - tk_auth:\n            - 'tk.r'\n      responses:\n        '200':\n          description: Token info by the token address\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Token'\n              example:\n                entityAddress: 000013f530cAE4301776A9c137c005A6303c386F\n                name: Light Token\n                symbol: LIGHT\n                totalSupply: 1000000000\n                decimals: 9\n  '/token/account/{address}':\n    get:\n      summary: Token balance and allowance for the address\n      operationId: getAccountByAddress\n      tags:\n        - account\n      parameters:\n        - name: address\n          in: path\n          description: The blockchain address\n          required: true\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100 and default 10) \n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: offset\n          in: query\n          description: Offset of transactions (default 0 which is from the first token)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      security:\n        - tk_auth:\n            - 'tk.r'\n      responses:\n        '200':\n          description: A paged array of tokens with balance and allowance.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Account'\n              example:\n                - entityAddress: 000013f530cAE4301776A9c137c005A6303c386F\n                  symbol: LIGHT\n                  balance: 1000\n                  allowance: 100\n  '/token/account/{address}/{symbol}':\n    get:\n      summary: Token balance and allowance for the address\n      operationId: getAccountBySymbol\n      tags:\n        - accountBySymbol\n      parameters:\n        - name: address\n          in: path\n          description: The blockchain address\n          required: true\n          schema:\n            type: string\n        - name: symbol\n          in: path\n          description: The token symbo\n          required: true\n          schema:\n            type: string\n      security:\n        - tk_auth:\n            - 'tk.r'\n      responses:\n        '200':\n          description: A token with balance and allowance for the symbol.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n              example:\n                entityAddress: 000013f530cAE4301776A9c137c005A6303c386F\n                symbol: LIGHT\n                balance: 1000\n                allowance: 100\n  '/token/transaction/{address}':\n    get:\n      summary: Get token transactions for an address\n      operationId: getTransactionByAddress\n      tags:\n        - getTransactionByAddress\n      parameters:\n        - name: address\n          in: path\n          description: The blockchain address\n          required: true\n          schema: \n            type: string\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 1000 and default 10) \n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 1000\n        - name: offset\n          in: query\n          description: Offset of transactions (default 0 which is from the last transaction)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      security:\n        - tk_auth:\n            - 'tk.r'\n      responses:\n        '200':\n          description: A paged array of txs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transaction'\n              example:\n                - time: 30990239903903\n                  fromAddress: 00007208c97fffee67c1186686f272ecf17f29e9 \n                  toAddress: 00007208c97fffee67c1186686f272ecf17f29e9\n                  amount: 1000000000000\n  '/token/transaction/{address}/{symbol}':\n    get:\n      summary: Get token transactions for an address and symbol\n      operationId: getTransactionBySymbol\n      tags:\n        - getTransactionBySymbol\n      parameters:\n        - name: address\n          in: path\n          description: The blockchain address\n          required: true\n          schema: \n            type: string\n        - name: symbol\n          in: path\n          description: The token symbol\n          required: true\n          schema: \n            type: string\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 1000 and default 10) \n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 1000\n        - name: offset\n          in: query\n          description: Offset of transactions (default 0 which is from the last transaction)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      security:\n        - tk_auth:\n            - 'tk.r'\n      responses:\n        '200':\n          description: A paged array of txs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transaction'\n              example:\n                - time: 30990239903903\n                  fromAddress: 00007208c97fffee67c1186686f272ecf17f29e9 \n                  toAddress: 00007208c97fffee67c1186686f272ecf17f29e9\n                  amount: 1000000000000\ncomponents:\n  securitySchemes:\n    tk_auth:\n      type: oauth2\n      description: This API uses OAuth 2 with the client credential grant flow.\n      flows:\n        clientCredentials:\n          tokenUrl: 'https://localhost:6882/token'\n          scopes:\n            'tk.r': query txs\n            'tk.w': create tx\n  schemas:\n    Account:\n      type: object\n      properties:\n        entityAddress: \n          type: string\n        symbol: \n          type: string\n        balance: \n          type: integer\n          format: int64\n        allowance:\n          type: integer\n          format: int64\n    Transaction:\n      type: object\n      properties:\n        time: \n          type: integer\n          format: int64\n        fromAddress: \n          type: string\n        toAddress:\n          type: string\n        amount:\n          type: integer\n          format: int64\n    Token:\n      type: object\n      properties:\n        entityAddress: \n          type: string\n        name:\n          type: string\n        symbol: \n          type: string\n        totalSupply:\n          type: integer\n          format: int64\n        decimals:\n          type: integer\n          format: int32\n          \n",
			"canonicalURL": "/github.com/networknt/model-config@3fea561d7982c217c1d5d35c1193eac78a7fdcef/-/blob/rest/openapi/token-reader/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/networknt/model-config/blob/3fea561d7982c217c1d5d35c1193eac78a7fdcef/rest/openapi/token-reader/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/token\": get: security: security \"tk_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}