{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/axa-group/Parsr"
		},
		"file": {
			"name": "swagger-generated.yaml",
			"size": 0,
			"path": "api/swagger/swagger-generated.yaml",
			"byteSize": 12789,
			"content": "openapi: 3.0.1\ninfo:\n  title: Parsr API\n  contact:\n    name: Parsr\n    url: https://github.com/axa-group/Parsr\n    email: opensource@axa.com\n  version: 1.0.0\nservers:\n  - url: https://localhost:3000/api/v1\n    description: Localhost server\npaths:\n  /document:\n    post:\n      tags:\n        - Input\n      summary: Pipeline Input\n      description: Entry point to add a file to the processing queue.\n      operationId: postDocument\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/body'\n      responses:\n        202:\n          description: Accepted\n          headers:\n            Location:\n              description: Path to the queue for the given job.\n              style: simple\n              explode: false\n              schema:\n                type: string\n                example: https://doctech.ael.li/api/v1/queue/{id}\n        415:\n          description: Unsupported Media Type\n      x-swagger-router-controller: Input\n  /queue/{id}:\n    get:\n      tags:\n        - Processing\n      summary: Get the status of the queue\n      description: Get the status of the queue\n      operationId: getQueueStatus\n      parameters:\n        - name: id\n          in: path\n          description: ID of the document\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok. Returns the status of the queue\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/queueStatus'\n        201:\n          description: Created. Returns the id of the document and links to generated resources.\n          headers:\n            Location:\n              description: Path to the primary output data\n              style: simple\n              explode: false\n              schema:\n                type: string\n                example: https://doctech.ael.li/api/v1/json/{id}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_201'\n        404:\n          description: Not Found\n        500:\n          description: Internal Server Error\n      x-swagger-router-controller: Processing\n  /json/{id}:\n    get:\n      tags:\n        - Output\n      summary: Get the JSON representation of the document\n      operationId: getJson\n      parameters:\n        - name: id\n          in: path\n          description: ID of the document\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/json'\n        404:\n          description: Not Found\n      x-swagger-router-controller: Output\n  /xml/{id}:\n    get:\n      tags:\n        - Output\n      summary: Get the XML representation of the document\n      operationId: getXml\n      parameters:\n        - name: id\n          in: path\n          description: ID of the document\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok\n          content:\n            application/xml:\n              schema:\n                type: array\n                xml:\n                  name: document\n                items:\n                  $ref: '#/components/schemas/json'\n        404:\n          description: Not Found\n      x-swagger-router-controller: Output\n  /text/{id}:\n    get:\n      tags:\n        - Output\n      summary: Get the raw text representation of the document\n      operationId: getText\n      parameters:\n        - name: id\n          in: path\n          description: ID of the document\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n        404:\n          description: Not Found\n      x-swagger-router-controller: Output\n  /confidances/{id}:\n    get:\n      tags:\n        - Output\n      summary: Get the confidances of every raw text words\n      operationId: getConfidances\n      parameters:\n        - name: id\n          in: path\n          description: ID of the document\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: 100 98.5 98 95 98.2 90 93 99.8\n        404:\n          description: Not Found\n      x-swagger-router-controller: Output\n  /json-compact/{id}:\n    get:\n      tags:\n        - Output\n      summary: Get the JSON representation of the document in a more compact format (to be implemented)\n      operationId: getJsonCompact\n      parameters:\n        - name: id\n          in: path\n          description: ID of the document\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        501:\n          description: Not Implemented\n      x-swagger-router-controller: Output\n  /markdown/{id}:\n    get:\n      tags:\n        - Output\n      summary: Get the Markdown representation of the document\n      operationId: getMarkdown\n      parameters:\n        - name: id\n          in: path\n          description: ID of the document\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok\n          content:\n            text/markdown:\n              schema:\n                type: string\n                example: '## Lorem ipsum dolor sit amet, _consectetur adipiscing_\n                  elit.'\n        404:\n          description: Not Found\n      x-swagger-router-controller: Output\n  /csv/{id}:\n    get:\n      tags:\n        - Output\n      summary: Get the list of every CSV file path\n      operationId: getCsvList\n      parameters:\n        - name: id\n          in: path\n          description: ID of the document\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                example:\n                  - https://dochtech.ael.li/api/v1/csv/{id}/1/1\n                  - https://dochtech.ael.li/api/v1/csv/{id}{page}/{table}\n                items:\n                  type: string\n                  description: Paths to CSV files\n        404:\n          description: Not Found\n      x-swagger-router-controller: Output\n  /csv/{id}/{page}/{table}:\n    get:\n      tags:\n        - Output\n      summary: Get the CSV representation of a table\n      operationId: getCsv\n      parameters:\n        - name: id\n          in: path\n          description: ID of the document\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: page\n          in: path\n          description: Page number\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: number\n        - name: table\n          in: path\n          description: Table number\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: number\n      responses:\n        200:\n          description: Ok\n          content:\n            text/csv:\n              schema:\n                type: string\n                example: |\n                  3x4 table;Empty column;Numbers\n                  ;;\n                  Item A;;3.14\n                  \"Item B\n                  on two lines\";;1,234.56\n        404:\n          description: Not Found\n      x-swagger-router-controller: Output\ncomponents:\n  schemas:\n    queueStatus:\n      type: object\n      properties:\n        progress-percentage:\n          type: number\n          example: 25\n        status:\n          type: string\n          example: detecting reading order\n        start-date:\n          type: string\n          format: date-time\n        estimated-remaining-time:\n          type: number\n          example: 60\n    config:\n      type: object\n      properties:\n        version:\n          type: number\n        extractor:\n          $ref: '#/components/schemas/config_extractor'\n        cleaner:\n          oneOf:\n            - type: string\n            - type: object\n        output:\n          $ref: '#/components/schemas/config_output'\n      example:\n        verison: '1.0'\n    element:\n      type: object\n      properties:\n        id:\n          type: number\n          xml:\n            attribute: true\n        type:\n          type: string\n          xml:\n            attribute: true\n          enum:\n            - character\n            - drawing\n            - heading\n            - image\n            - list\n            - paragraph\n            - table\n            - table-cell\n            - table-row\n            - word\n            - line\n            - barcode\n        box:\n          $ref: '#/components/schemas/box'\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/element'\n    box:\n      type: object\n      properties:\n        l:\n          type: number\n        t:\n          type: number\n        w:\n          type: number\n        h:\n          type: number\n    json:\n      type: object\n      properties:\n        metadata:\n          type: array\n          items:\n            $ref: '#/components/schemas/json_metadata'\n        pages:\n          type: array\n          items:\n            $ref: '#/components/schemas/json_pages'\n        fonts:\n          type: array\n          items:\n            $ref: '#/components/schemas/json_fonts'\n    body:\n      type: object\n      properties:\n        file:\n          type: string\n          format: binary\n        config:\n          $ref: '#/components/schemas/config'\n    inline_response_201:\n      type: object\n      properties:\n        id:\n          type: string\n        json:\n          type: string\n        xml:\n          type: string\n        markdown:\n          type: string\n        text:\n          type: string\n        confidances:\n          type: string\n        json-compact:\n          type: string\n        csv:\n          type: string\n      example: '{\"id\":\"{id}\",\"json\":\"https://doctech.ael.li/api/v1/json/{id}\",\"markdown\":\"https://doctech.ael.li/api/v1/markdown/{id}\",\"csv\":\"https://doctech.ael.li/api/v1/csv/{id}\"}'\n    config_extractor:\n      type: object\n      properties:\n        pdf:\n          type: string\n          enum:\n            - pdfminer\n            - tesseract\n            - abbyy\n        img:\n          type: string\n          enum:\n            - tesseract\n            - abbyy\n        language:\n          type: string\n    config_output_formats:\n      type: object\n      properties:\n        json:\n          type: boolean\n        json-compact:\n          type: boolean\n        text:\n          type: boolean\n        markdown:\n          type: boolean\n        xml:\n          type: boolean\n        confidances:\n          type: boolean\n        csv:\n          type: boolean\n        pandas:\n          type: boolean\n        pdf:\n          type: boolean\n    config_output:\n      type: object\n      properties:\n        granularity:\n          type: string\n          enum:\n            - word\n            - character\n            - line\n            - paragraph\n        formats:\n          $ref: '#/components/schemas/config_output_formats'\n    json_metadata:\n      type: object\n      properties:\n        id:\n          type: number\n          xml:\n            attribute: true\n        order:\n          type: number\n    json_pages:\n      type: object\n      properties:\n        pageNumber:\n          type: number\n          xml:\n            attribute: true\n        box:\n          $ref: '#/components/schemas/box'\n        elements:\n          type: array\n          items:\n            $ref: '#/components/schemas/element'\n    json_fonts:\n      type: object\n      properties:\n        id:\n          type: number\n          xml:\n            attribute: true\n        name:\n          type: string\n        size:\n          type: number\n  parameters:\n    id:\n      name: id\n      in: path\n      description: ID of the document\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n",
			"canonicalURL": "/github.com/axa-group/Parsr@e86d88ae3db0f33e4863a40e729b1d6c5cb9ba60/-/blob/api/swagger/swagger-generated.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/axa-group/Parsr/blob/e86d88ae3db0f33e4863a40e729b1d6c5cb9ba60/api/swagger/swagger-generated.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/text/{id}\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"sum type parameter",
		"unsupported content types"
	]
}