{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-cloudbuild-v1alpha1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-cloudbuild-v1alpha1-swagger.yaml",
			"byteSize": 41616,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  description: Creates and manages builds on Google Cloud Platform.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Cloud Build\n  version: v1alpha1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: google\n      url: https://cloudbuild.googleapis.com/$discovery/rest?version=v1alpha1\n      version: v1\n  x-preferred: false\n  x-providerName: googleapis.com\n  x-serviceName: cloudbuild\nexternalDocs:\n  url: https://cloud.google.com/cloud-build/docs/\ntags:\n  - name: projects\npaths:\n  \"/v1alpha1/{name}\":\n    delete:\n      description: |-\n        Deletes a `WorkerPool` by its project ID and WorkerPool name.\n\n        This API is experimental.\n      operationId: cloudbuild.projects.workerPools.delete\n      parameters:\n        - description: |-\n            The field will contain name of the resource requested, for example:\n            \"projects/project-1/workerPools/workerpool-name\"\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n    get:\n      description: |-\n        Returns information about a `WorkerPool`.\n\n        This API is experimental.\n      operationId: cloudbuild.projects.workerPools.get\n      parameters:\n        - description: |-\n            The field will contain name of the resource requested, for example:\n            \"projects/project-1/workerPools/workerpool-name\"\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/WorkerPool\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    patch:\n      description: |-\n        Update a `WorkerPool`.\n\n        This API is experimental.\n      operationId: cloudbuild.projects.workerPools.patch\n      parameters:\n        - description: |-\n            The field will contain name of the resource requested, for example:\n            \"projects/project-1/workerPools/workerpool-name\"\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/WorkerPool\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/WorkerPool\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n  \"/v1alpha1/{parent}/workerPools\":\n    get:\n      description: |-\n        List project's `WorkerPool`s.\n\n        This API is experimental.\n      operationId: cloudbuild.projects.workerPools.list\n      parameters:\n        - description: ID of the parent project.\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListWorkerPoolsResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Creates a `WorkerPool` to run the builds, and returns the new worker\n        pool.\n\n\n        This API is experimental.\n      operationId: cloudbuild.projects.workerPools.create\n      parameters:\n        - description: ID of the parent project.\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/WorkerPool\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/WorkerPool\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\nservers:\n  - url: https://cloudbuild.googleapis.com/\ncomponents:\n  parameters:\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n          - media\n          - proto\n        default: json\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be\n        any arbitrary string assigned to a user, but should not exceed 40\n        characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        type: string\n        enum:\n          - \"1\"\n          - \"2\"\n  requestBodies:\n    WorkerPool:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/WorkerPool\"\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n    Oauth2c:\n      description: Oauth 2.0 accessCode authentication\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n  schemas:\n    ArtifactObjects:\n      description: |-\n        Files in the workspace to upload to Cloud Storage upon successful\n        completion of all build steps.\n      properties:\n        location:\n          description: \u003e-\n            Cloud Storage bucket and optional object path, in the form\n\n            \"gs://bucket/path/to/somewhere/\". (see [Bucket Name\n\n            Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).\n\n\n            Files in the workspace matching any path pattern will be uploaded to\n\n            Cloud Storage with this location as a prefix.\n          type: string\n        paths:\n          description: Path globs used to match files in the build's workspace.\n          items:\n            type: string\n          type: array\n        timing:\n          $ref: \"#/components/schemas/TimeSpan\"\n      type: object\n    ArtifactResult:\n      description: |-\n        An artifact that was uploaded during a build. This\n        is a single record in the artifact manifest JSON file.\n      properties:\n        fileHash:\n          description: The file hash of the artifact.\n          items:\n            $ref: \"#/components/schemas/FileHashes\"\n          type: array\n        location:\n          description: |-\n            The path of an artifact in a Google Cloud Storage bucket, with the\n            generation number. For example,\n            `gs://mybucket/path/to/output.jar#generation`.\n          type: string\n      type: object\n    Artifacts:\n      description: |-\n        Artifacts produced by a build that should be uploaded upon\n        successful completion of all build steps.\n      properties:\n        images:\n          description: \u003e-\n            A list of images to be pushed upon the successful completion of all\n            build\n\n            steps.\n\n\n            The images will be pushed using the builder service account's credentials.\n\n\n            The digests of the pushed images will be stored in the Build resource's\n\n            results field.\n\n\n            If any of the images fail to be pushed, the build is marked FAILURE.\n          items:\n            type: string\n          type: array\n        objects:\n          $ref: \"#/components/schemas/ArtifactObjects\"\n      type: object\n    Build:\n      description: \u003e-\n        A build resource in the Cloud Build API.\n\n\n        At a high level, a `Build` describes where to find source code, how to build\n\n        it (for example, the builder image to run on the source), and where to store\n\n        the built artifacts.\n\n\n        Fields can include the following variables, which will be expanded when the\n\n        build is created:\n\n\n        - $PROJECT_ID: the project ID of the build.\n\n        - $BUILD_ID: the autogenerated ID of the build.\n\n        - $REPO_NAME: the source repository name specified by RepoSource.\n\n        - $BRANCH_NAME: the branch name specified by RepoSource.\n\n        - $TAG_NAME: the tag name specified by RepoSource.\n\n        - $REVISION_ID or $COMMIT_SHA: the commit SHA specified by RepoSource or\n          resolved from the specified branch or tag.\n        - $SHORT_SHA: first 7 characters of $REVISION_ID or $COMMIT_SHA.\n      properties:\n        artifacts:\n          $ref: \"#/components/schemas/Artifacts\"\n        buildTriggerId:\n          description: \u003e-\n            Output only. The ID of the `BuildTrigger` that triggered this build,\n            if it\n\n            was triggered automatically.\n          type: string\n        createTime:\n          description: Output only. Time at which the request to create the build was\n            received.\n          format: google-datetime\n          type: string\n        finishTime:\n          description: \u003e-\n            Output only. Time at which execution of the build was finished.\n\n\n            The difference between finish_time and start_time is the duration of the\n\n            build's execution.\n          format: google-datetime\n          type: string\n        id:\n          description: Output only. Unique identifier of the build.\n          type: string\n        images:\n          description: \u003e-\n            A list of images to be pushed upon the successful completion of all\n            build\n\n            steps.\n\n\n            The images are pushed using the builder service account's credentials.\n\n\n            The digests of the pushed images will be stored in the `Build` resource's\n\n            results field.\n\n\n            If any of the images fail to be pushed, the build status is marked\n\n            `FAILURE`.\n          items:\n            type: string\n          type: array\n        logUrl:\n          description: Output only. URL to logs for this build in Google Cloud Console.\n          type: string\n        logsBucket:\n          description: \u003e-\n            Google Cloud Storage bucket where logs should be written (see\n\n            [Bucket Name\n\n            Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).\n\n            Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.\n          type: string\n        options:\n          $ref: \"#/components/schemas/BuildOptions\"\n        projectId:\n          description: Output only. ID of the project.\n          type: string\n        results:\n          $ref: \"#/components/schemas/Results\"\n        secrets:\n          description: Secrets to decrypt using Cloud Key Management Service.\n          items:\n            $ref: \"#/components/schemas/Secret\"\n          type: array\n        source:\n          $ref: \"#/components/schemas/Source\"\n        sourceProvenance:\n          $ref: \"#/components/schemas/SourceProvenance\"\n        startTime:\n          description: Output only. Time at which execution of the build was started.\n          format: google-datetime\n          type: string\n        status:\n          description: Output only. Status of the build.\n          enum:\n            - STATUS_UNKNOWN\n            - QUEUED\n            - WORKING\n            - SUCCESS\n            - FAILURE\n            - INTERNAL_ERROR\n            - TIMEOUT\n            - CANCELLED\n          type: string\n        statusDetail:\n          description: Output only. Customer-readable message about the current status.\n          type: string\n        steps:\n          description: Required. The operations to be performed on the workspace.\n          items:\n            $ref: \"#/components/schemas/BuildStep\"\n          type: array\n        substitutions:\n          additionalProperties:\n            type: string\n          description: Substitutions data for `Build` resource.\n          type: object\n        tags:\n          description: Tags for annotation of a `Build`. These are not docker tags.\n          items:\n            type: string\n          type: array\n        timeout:\n          description: \u003e-\n            Amount of time that this build should be allowed to run, to second\n\n            granularity. If this amount of time elapses, work on the build will cease\n\n            and the build status will be `TIMEOUT`.\n\n\n            Default time is ten minutes.\n          format: google-duration\n          type: string\n        timing:\n          additionalProperties:\n            $ref: \"#/components/schemas/TimeSpan\"\n          description: \u003e-\n            Output only. Stores timing information for phases of the build.\n            Valid keys\n\n            are:\n\n\n            * BUILD: time to execute all build steps\n\n            * PUSH: time to push all specified images.\n\n            * FETCHSOURCE: time to fetch source.\n\n\n            If the build does not specify source or images,\n\n            these keys will not be included.\n          type: object\n      type: object\n    BuildOperationMetadata:\n      description: Metadata for build operations.\n      properties:\n        build:\n          $ref: \"#/components/schemas/Build\"\n      type: object\n    BuildOptions:\n      description: Optional arguments to enable specific features of builds.\n      properties:\n        diskSizeGb:\n          description: \u003e-\n            Requested disk size for the VM that runs the build. Note that this\n            is *NOT*\n\n            \"disk free\"; some of the space will be used by the operating system and\n\n            build utilities. Also note that this is the minimum disk size that will be\n\n            allocated for the build -- the build may run with a larger disk than\n\n            requested. At present, the maximum disk size is 1000GB; builds that request\n\n            more than the maximum are rejected with an error.\n          format: int64\n          type: string\n        env:\n          description: \u003e-\n            A list of global environment variable definitions that will exist\n            for all\n\n            build steps in this build. If a variable is defined in both globally and in\n\n            a build step, the variable will use the build step value.\n\n\n            The elements are of the form \"KEY=VALUE\" for the environment variable \"KEY\"\n\n            being given the value \"VALUE\".\n          items:\n            type: string\n          type: array\n        logStreamingOption:\n          description: |-\n            Option to define build log streaming behavior to Google Cloud\n            Storage.\n          enum:\n            - STREAM_DEFAULT\n            - STREAM_ON\n            - STREAM_OFF\n          type: string\n        logging:\n          description: \u003e-\n            Option to specify the logging mode, which determines where the logs\n            are\n\n            stored.\n          enum:\n            - LOGGING_UNSPECIFIED\n            - LEGACY\n            - GCS_ONLY\n          type: string\n        machineType:\n          description: Compute Engine machine type on which to run the build.\n          enum:\n            - UNSPECIFIED\n            - N1_HIGHCPU_8\n            - N1_HIGHCPU_32\n          type: string\n        requestedVerifyOption:\n          description: Requested verifiability options.\n          enum:\n            - NOT_VERIFIED\n            - VERIFIED\n          type: string\n        secretEnv:\n          description: \u003e-\n            A list of global environment variables, which are encrypted using a\n            Cloud\n\n            Key Management Service crypto key. These values must be specified in the\n\n            build's `Secret`. These variables will be available to all build steps\n\n            in this build.\n          items:\n            type: string\n          type: array\n        sourceProvenanceHash:\n          description: Requested hash for SourceProvenance.\n          items:\n            enum:\n              - NONE\n              - SHA256\n              - MD5\n            type: string\n          type: array\n        substitutionOption:\n          description: \u003e-\n            Option to specify behavior when there is an error in the\n            substitution\n\n            checks.\n          enum:\n            - MUST_MATCH\n            - ALLOW_LOOSE\n          type: string\n        volumes:\n          description: \u003e-\n            Global list of volumes to mount for ALL build steps\n\n\n            Each volume is created as an empty volume prior to starting the build\n\n            process. Upon completion of the build, volumes and their contents are\n\n            discarded. Global volume names and paths cannot conflict with the volumes\n\n            defined a build step.\n\n\n            Using a global volume in a build with only one step is not valid as\n\n            it is indicative of a build request with an incorrect configuration.\n          items:\n            $ref: \"#/components/schemas/Volume\"\n          type: array\n        workerPool:\n          description: \u003e-\n            Option to specify a `WorkerPool` for the build. User specifies the\n            pool\n\n            with the format \"[WORKERPOOL_PROJECT_ID]/[WORKERPOOL_NAME]\".\n\n            This is an experimental field.\n          type: string\n      type: object\n    BuildStep:\n      description: A step in the build pipeline.\n      properties:\n        args:\n          description: \u003e-\n            A list of arguments that will be presented to the step when it is\n            started.\n\n\n            If the image used to run the step's container has an entrypoint, the `args`\n\n            are used as arguments to that entrypoint. If the image does not define\n\n            an entrypoint, the first element in args is used as the entrypoint,\n\n            and the remainder will be used as arguments.\n          items:\n            type: string\n          type: array\n        dir:\n          description: \u003e-\n            Working directory to use when running this step's container.\n\n\n            If this value is a relative path, it is relative to the build's working\n\n            directory. If this value is absolute, it may be outside the build's working\n\n            directory, in which case the contents of the path may not be persisted\n\n            across build step executions, unless a `volume` for that path is specified.\n\n\n            If the build specifies a `RepoSource` with `dir` and a step with a `dir`,\n\n            which specifies an absolute path, the `RepoSource` `dir` is ignored for\n\n            the step's execution.\n          type: string\n        entrypoint:\n          description: \u003e-\n            Entrypoint to be used instead of the build step image's default\n            entrypoint.\n\n            If unset, the image's default entrypoint is used.\n          type: string\n        env:\n          description: \u003e-\n            A list of environment variable definitions to be used when running a\n            step.\n\n\n            The elements are of the form \"KEY=VALUE\" for the environment variable \"KEY\"\n\n            being given the value \"VALUE\".\n          items:\n            type: string\n          type: array\n        id:\n          description: |-\n            Unique identifier for this build step, used in `wait_for` to\n            reference this build step as a dependency.\n          type: string\n        name:\n          description: \u003e-\n            Required. The name of the container image that will run this\n            particular\n\n            build step.\n\n\n            If the image is available in the host's Docker daemon's cache, it\n\n            will be run directly. If not, the host will attempt to pull the image\n\n            first, using the builder service account's credentials if necessary.\n\n\n            The Docker daemon's cache will already have the latest versions of all of\n\n            the officially supported build steps\n\n            ([https://github.com/GoogleCloudPlatform/cloud-builders](https://github.com/GoogleCloudPlatform/cloud-builders)).\n\n            The Docker daemon will also have cached many of the layers for some popular\n\n            images, like \"ubuntu\", \"debian\", but they will be refreshed at the time you\n\n            attempt to use them.\n\n\n            If you built an image in a previous build step, it will be stored in the\n\n            host's Docker daemon's cache and is available to use as the name for a\n\n            later build step.\n          type: string\n        pullTiming:\n          $ref: \"#/components/schemas/TimeSpan\"\n        secretEnv:\n          description: \u003e-\n            A list of environment variables which are encrypted using a Cloud\n            Key\n\n            Management Service crypto key. These values must be specified in the\n\n            build's `Secret`.\n          items:\n            type: string\n          type: array\n        status:\n          description: \u003e-\n            Output only. Status of the build step. At this time, build step\n            status is\n\n            only updated on build completion; step status is not updated in real-time\n\n            as the build progresses.\n          enum:\n            - STATUS_UNKNOWN\n            - QUEUED\n            - WORKING\n            - SUCCESS\n            - FAILURE\n            - INTERNAL_ERROR\n            - TIMEOUT\n            - CANCELLED\n          type: string\n        timeout:\n          description: \u003e-\n            Time limit for executing this build step. If not defined, the step\n            has no\n\n            time limit and will be allowed to continue to run until either it completes\n\n            or the build itself times out.\n          format: google-duration\n          type: string\n        timing:\n          $ref: \"#/components/schemas/TimeSpan\"\n        volumes:\n          description: \u003e-\n            List of volumes to mount into the build step.\n\n\n            Each volume is created as an empty volume prior to execution of the\n\n            build step. Upon completion of the build, volumes and their contents are\n\n            discarded.\n\n\n            Using a named volume in only one step is not valid as it is indicative\n\n            of a build request with an incorrect configuration.\n          items:\n            $ref: \"#/components/schemas/Volume\"\n          type: array\n        waitFor:\n          description: \u003e-\n            The ID(s) of the step(s) that this build step depends on.\n\n            This build step will not start until all the build steps in `wait_for`\n\n            have completed successfully. If `wait_for` is empty, this build step will\n\n            start when all previous build steps in the `Build.Steps` list have\n\n            completed successfully.\n          items:\n            type: string\n          type: array\n      type: object\n    BuiltImage:\n      description: An image built by the pipeline.\n      properties:\n        digest:\n          description: Docker Registry 2.0 digest.\n          type: string\n        name:\n          description: \u003e-\n            Name used to push the container image to Google Container Registry,\n            as\n\n            presented to `docker push`.\n          type: string\n        pushTiming:\n          $ref: \"#/components/schemas/TimeSpan\"\n      type: object\n    Empty:\n      description: \u003e-\n        A generic empty message that you can re-use to avoid defining duplicated\n\n        empty messages in your APIs. A typical example is to use it as the request\n\n        or the response type of an API method. For instance:\n\n            service Foo {\n              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n            }\n\n        The JSON representation for `Empty` is empty JSON object `{}`.\n      properties: {}\n      type: object\n    FileHashes:\n      description: \u003e-\n        Container message for hashes of byte content of files, used in\n\n        SourceProvenance messages to verify integrity of source input to the build.\n      properties:\n        fileHash:\n          description: Collection of file hashes.\n          items:\n            $ref: \"#/components/schemas/Hash\"\n          type: array\n      type: object\n    Hash:\n      description: Container message for hash values.\n      properties:\n        type:\n          description: The type of hash that was performed.\n          enum:\n            - NONE\n            - SHA256\n            - MD5\n          type: string\n        value:\n          description: The hash value.\n          format: byte\n          type: string\n      type: object\n    ListWorkerPoolsResponse:\n      description: Response containing existing `WorkerPools`.\n      properties:\n        workerPools:\n          description: \"`WorkerPools` for the project.\"\n          items:\n            $ref: \"#/components/schemas/WorkerPool\"\n          type: array\n      type: object\n    Network:\n      description: Network describes the GCP network used to create workers in.\n      properties:\n        network:\n          description: |-\n            Network on which the workers are created.\n            \"default\" network is used if empty.\n          type: string\n        projectId:\n          description: \u003e-\n            Project id containing the defined network and subnetwork. For a\n            peered VPC,\n\n            this will be the same as the project_id in which the workers are created.\n\n            For a shared VPC, this will be the project sharing the network with the\n\n            project_id project in which workers will be created. For custom workers\n\n            with no VPC, this will be the same as project_id.\n          type: string\n        subnetwork:\n          description: |-\n            Subnetwork on which the workers are created.\n            \"default\" subnetwork is used if empty.\n          type: string\n      type: object\n    RepoSource:\n      description: Location of the source in a Google Cloud Source Repository.\n      properties:\n        branchName:\n          description: \u003e-\n            Regex matching branches to build.\n\n\n            The syntax of the regular expressions accepted is the syntax accepted by\n\n            RE2 and described at https://github.com/google/re2/wiki/Syntax\n          type: string\n        commitSha:\n          description: Explicit commit SHA to build.\n          type: string\n        dir:\n          description: \u003e-\n            Directory, relative to the source root, in which to run the build.\n\n\n            This must be a relative path. If a step's `dir` is specified and is an\n\n            absolute path, this value is ignored for that step's execution.\n          type: string\n        projectId:\n          description: \u003e-\n            ID of the project that owns the Cloud Source Repository. If omitted,\n            the\n\n            project ID requesting the build is assumed.\n          type: string\n        repoName:\n          description: \u003e-\n            Name of the Cloud Source Repository. If omitted, the name \"default\"\n            is\n\n            assumed.\n          type: string\n        tagName:\n          description: \u003e-\n            Regex matching tags to build.\n\n\n            The syntax of the regular expressions accepted is the syntax accepted by\n\n            RE2 and described at https://github.com/google/re2/wiki/Syntax\n          type: string\n      type: object\n    Results:\n      description: Artifacts created by the build pipeline.\n      properties:\n        artifactManifest:\n          description: Path to the artifact manifest. Only populated when artifacts are\n            uploaded.\n          type: string\n        artifactTiming:\n          $ref: \"#/components/schemas/TimeSpan\"\n        buildStepImages:\n          description: |-\n            List of build step digests, in the order corresponding to build step\n            indices.\n          items:\n            type: string\n          type: array\n        buildStepOutputs:\n          description: \u003e-\n            List of build step outputs, produced by builder images, in the order\n\n            corresponding to build step indices.\n\n\n            [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders)\n\n            can produce this output by writing to `$BUILDER_OUTPUT/output`.\n\n            Only the first 4KB of data is stored.\n          items:\n            format: byte\n            type: string\n          type: array\n        images:\n          description: Container images that were built as a part of the build.\n          items:\n            $ref: \"#/components/schemas/BuiltImage\"\n          type: array\n        numArtifacts:\n          description: Number of artifacts uploaded. Only populated when artifacts are\n            uploaded.\n          format: int64\n          type: string\n      type: object\n    Secret:\n      description: |-\n        Pairs a set of secret environment variables containing encrypted\n        values with the Cloud KMS key to use to decrypt the value.\n      properties:\n        kmsKeyName:\n          description: Cloud KMS key name to use to decrypt these envs.\n          type: string\n        secretEnv:\n          additionalProperties:\n            format: byte\n            type: string\n          description: \u003e-\n            Map of environment variable name to its encrypted value.\n\n\n            Secret environment variables must be unique across all of a build's\n\n            secrets, and must be used by at least one build step. Values can be at most\n\n            64 KB in size. There can be at most 100 secret values across all of a\n\n            build's secrets.\n          type: object\n      type: object\n    Source:\n      description: Location of the source in a supported storage service.\n      properties:\n        repoSource:\n          $ref: \"#/components/schemas/RepoSource\"\n        storageSource:\n          $ref: \"#/components/schemas/StorageSource\"\n      type: object\n    SourceProvenance:\n      description: \u003e-\n        Provenance of the source. Ways to find the original source, or verify\n        that\n\n        some source was used for this build.\n      properties:\n        fileHashes:\n          additionalProperties:\n            $ref: \"#/components/schemas/FileHashes\"\n          description: \u003e-\n            Output only. Hash(es) of the build source, which can be used to\n            verify that\n\n            the original source integrity was maintained in the build. Note that\n\n            `FileHashes` will only be populated if `BuildOptions` has requested a\n\n            `SourceProvenanceHash`.\n\n\n            The keys to this map are file paths used as build source and the values\n\n            contain the hash values for those files.\n\n\n            If the build source came in a single package such as a gzipped tarfile\n\n            (`.tar.gz`), the `FileHash` will be for the single path to that file.\n          type: object\n        resolvedRepoSource:\n          $ref: \"#/components/schemas/RepoSource\"\n        resolvedStorageSource:\n          $ref: \"#/components/schemas/StorageSource\"\n      type: object\n    StorageSource:\n      description: Location of the source in an archive file in Google Cloud Storage.\n      properties:\n        bucket:\n          description: \u003e-\n            Google Cloud Storage bucket containing the source (see\n\n            [Bucket Name\n\n            Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).\n          type: string\n        generation:\n          description: |-\n            Google Cloud Storage generation for the object. If the generation is\n            omitted, the latest generation will be used.\n          format: int64\n          type: string\n        object:\n          description: \u003e-\n            Google Cloud Storage object containing the source.\n\n\n            This object must be a gzipped archive file (`.tar.gz`) containing source to\n\n            build.\n          type: string\n      type: object\n    TimeSpan:\n      description: Start and end times for a build execution phase.\n      properties:\n        endTime:\n          description: End of time span.\n          format: google-datetime\n          type: string\n        startTime:\n          description: Start of time span.\n          format: google-datetime\n          type: string\n      type: object\n    Volume:\n      description: \u003e-\n        Volume describes a Docker container volume which is mounted into build\n        steps\n\n        in order to persist files across build step execution.\n      properties:\n        name:\n          description: \u003e-\n            Name of the volume to mount.\n\n\n            Volume names must be unique per build step and must be valid names for\n\n            Docker volumes. Each named volume must be used by at least two build steps.\n          type: string\n        path:\n          description: \u003e-\n            Path at which to mount the volume.\n\n\n            Paths must be absolute and cannot conflict with other volume paths on the\n\n            same build step or with certain reserved volume paths.\n          type: string\n      type: object\n    WorkerConfig:\n      description: \u003e-\n        WorkerConfig defines the configuration to be used for a creating workers\n        in\n\n        the pool.\n      properties:\n        diskSizeGb:\n          description: \u003e-\n            Size of the disk attached to the worker, in GB.\n\n            See https://cloud.google.com/compute/docs/disks/\n\n            If `0` is specified, Cloud Build will use a standard disk size.\n\n            `disk_size` is overridden if you specify a different disk size in\n\n            `build_options`. In this case, a VM with a disk size specified in the\n\n            `build_options` will be created on demand at build time. For more\n\n            information see\n\n            https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#buildoptions\n          format: int64\n          type: string\n        machineType:\n          description: \u003e-\n            Machine Type of the worker, such as n1-standard-1.\n\n            See https://cloud.google.com/compute/docs/machine-types.\n\n            If left blank, Cloud Build will use a standard unspecified machine to\n\n            create the worker pool.\n\n            `machine_type` is overridden if you specify a different machine type in\n\n            `build_options`. In this case, the VM specified in the `build_options`\n\n            will be created on demand at build time. For more information see\n\n            https://cloud.google.com/cloud-build/docs/speeding-up-builds#using_custom_virtual_machine_sizes\n          type: string\n        network:\n          $ref: \"#/components/schemas/Network\"\n        tag:\n          description: \u003e-\n            The tag applied to the worker, and the same tag used by the firewall\n            rule.\n\n            It is used to identify the Cloud Build workers among other VMs.\n\n            The default value for tag is `worker`.\n          type: string\n      type: object\n    WorkerPool:\n      description: \u003e-\n        Configuration for a WorkerPool to run the builds.\n\n\n        Workers are machines that Cloud Build uses to run your builds. By default,\n\n        all workers run in a project owned by Cloud Build. To have full control over\n\n        the workers that execute your builds -- such as enabling them to access\n\n        private resources on your private network -- you can request Cloud Build to\n\n        run the workers in your own project by creating a custom workers pool.\n      properties:\n        createTime:\n          description: \u003e-\n            Output only. Time at which the request to create the `WorkerPool`\n            was\n\n            received.\n          format: google-datetime\n          type: string\n        deleteTime:\n          description: \u003e-\n            Output only. Time at which the request to delete the `WorkerPool`\n            was\n\n            received.\n          format: google-datetime\n          type: string\n        name:\n          description: User-defined name of the `WorkerPool`.\n          type: string\n        projectId:\n          description: The project ID of the GCP project for which the `WorkerPool` is\n            created.\n          type: string\n        regions:\n          description: |-\n            List of regions to create the `WorkerPool`. Regions can't be empty.\n            If Cloud Build adds a new GCP region in the future, the existing\n            `WorkerPool` will not be enabled in the new region automatically;\n            you must add the new region to the `regions` field to enable the\n            `WorkerPool` in that region.\n          items:\n            enum:\n              - REGION_UNSPECIFIED\n              - us-central1\n              - us-west1\n              - us-east1\n              - us-east4\n            type: string\n          type: array\n        serviceAccountEmail:\n          description: \u003e-\n            Output only. The service account used to manage the `WorkerPool`.\n            The\n\n            service account must have the Compute Instance Admin (Beta) permission at\n\n            the project level.\n          type: string\n        status:\n          description: Output only. WorkerPool Status.\n          enum:\n            - STATUS_UNSPECIFIED\n            - CREATING\n            - RUNNING\n            - DELETING\n            - DELETED\n          type: string\n        updateTime:\n          description: \u003e-\n            Output only. Time at which the request to update the `WorkerPool`\n            was\n\n            received.\n          format: google-datetime\n          type: string\n        workerConfig:\n          $ref: \"#/components/schemas/WorkerConfig\"\n        workerCount:\n          description: Total number of workers to be created across all requested regions.\n          format: int64\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-cloudbuild-v1alpha1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-cloudbuild-v1alpha1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1alpha1/{name}\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}