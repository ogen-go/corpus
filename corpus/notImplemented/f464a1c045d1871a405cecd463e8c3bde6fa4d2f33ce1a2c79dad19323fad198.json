{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MikeRalphson/bbcapis"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "simorghApi/openapi.yaml",
			"byteSize": 22294,
			"content": "# The app team are using this schema to generate a set of reference model objects\n# See https://github.com/bbc/ArticleUIKit/tree/master/ArticleUIKitExampleTests/autogen-reference\n# Whilst not solely for their benefit, the following have been added to the schema to improve their generated code:\n# * fragmentAttrs\nopenapi: 3.0.0\nservers:\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/no-name2/article/1.0.0\ninfo:\n  description: This is an early draft of an Article API definition for web and apps.\n  version: '1.1.1'\n  title: News web and apps article API\n  contact:\n    email: benjamin.hobbs@bbc.co.uk\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: news-developers\n    description: Operations available to and wanted by news developers\npaths:\n  /article:\n    get:\n      tags:\n        - news-developers\n      summary: returns article/s\n      operationId: getArticles\n      description: |\n        By passing in the appropriate parameters, you can return the appropriate article/s body from the system\n      parameters:\n        - in: query\n          name: searchString\n          description: pass the optional search string for looking up articles\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: skip\n          description: number of records to skip for pagination\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - in: query\n          name: limit\n          description: maximum number of records to return\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n            maximum: 50\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/article'\n        '400':\n          description: bad input parameter/s\ncomponents:\n  schemas:\n    article:\n      type: object\n      required:\n        - content\n        - metadata\n        - promo\n      properties:\n        content:\n          type: object\n          required:\n            - model\n          properties:\n            model:\n              type: object\n              required:\n                - blocks\n              properties:\n                blocks:\n                  $ref: '#/components/schemas/blocks'\n        metadata:\n          type: object\n          required:\n            # - created   currently not in the optimo test feed\n            - firstPublished\n            - id\n            - lastPublished\n            - lastUpdated\n            - locators\n            - passport\n            - tags\n            - type\n          properties:\n            analyticsLabels:\n              type: object\n            category:\n              enum:\n                - analysis\n                - askTheAudience\n                - explainer\n                - factCheck\n                - feature\n                - news\n                - opinion\n                - review\n                - summary\n              example: analysis\n            blockTypes:\n              type: array\n              items:\n                type: string\n              minItems: 2\n            created:\n              type: number\n            createdBy:\n              type: string\n            firstPublished:\n              type: number\n            id:\n              type: string\n            language:\n              type: string\n\n            lastPublished:\n              type: number\n            lastUpdated:\n              type: number\n            locators:\n              type: object\n              required:\n                - optimoUrn\n              properties:\n                optimoUrn:\n                  type: string\n            options:\n              type: object\n            passport:\n              type: object\n              required:\n                # - category  currently not in the optimo test datafeed\n                - home\n                - language\n              properties:\n                category:\n                  enum:\n                    - analysis\n                    - askTheAudience\n                    - explainer\n                    - factCheck\n                    - feature\n                    - news\n                    - opinion\n                    - review\n                    - summary\n                  example: analysis\n                  type: string\n                genre:\n                  type: string\n                home:\n                  example: 'http://www.bbc.co.uk/ontologies/passport/home/News'\n                  type: string\n                language:\n                  example: 'en-gb'\n                  type: string\n            relatedContent:\n              type: object\n              properties:\n                groups:\n                  type: object\n                site:\n                  type: object\n                  properties:\n                    name:\n                      type: string\n                    subType:\n                      type: string\n                    uri:\n                      type: string\n            tags:\n              type: object\n              properties:\n                about:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      thingUri:\n                        type: string\n                        example: 'http://www.bbc.co.uk/things/2351f2b2-ce36-4f44-996d-c3c4f7f90eaa#id'\n                      topicId:\n                        type: string\n                        example: 'cpwpy79d6dxt'\n                      topicName:\n                        type: string\n                        example: 'Royal Wedding 2018'\n                      curationType:\n                        type: array\n                        example:\n                        items:\n                          type: string\n                      thingId:\n                        type: string\n                      thingLabel:\n                        type: string\n                      thingType:\n                        type: array\n                        example: ['Thing', 'Event']\n                mentions:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      thingUri:\n                        type: string\n                        example: 'http://www.bbc.co.uk/things/2351f2b2-ce36-4f44-996d-c3c4f7f90eaa#id'\n                      topicId:\n                        type: string\n                        example: 'cpwpy79d6dxt'\n                      topicName:\n                        type: string\n                        example: 'Royal Wedding 2018'\n                      curationType:\n                        type: array\n                        example:\n                        items:\n                          type: string\n                      thingId:\n                        type: string\n                      thingLabel:\n                        type: string\n                      thingType:\n                        type: array\n                        example: ['Thing', 'Event']\n            type:\n              enum:\n                - article\n              type: string\n            version:\n              type: string\n        promo:\n          type: object\n          required:\n            - headlines\n            - id\n            - locators\n            - summary\n            - timestamp\n          properties:\n            headlines:\n              type: object\n              required:\n                - seoHeadline\n              #   - promoHeadline   currently not in the test optimo datafeed\n              properties:\n                seoHeadline:\n                  example: 'UK pledges extra Â£44m for Channel border security'\n                  type: string\n                promoHeadline:\n                  type: string\n            id:\n              type: string\n            locators:\n              type: object\n              required:\n                - optimoUrn\n              properties:\n                optimoUrn:\n                  type: string\n            summary:\n              type: string\n            timestamp:\n              type: number\n\n    # schema definitions for referred blocks below\n\n    fragmentAttrs:\n      type: array\n      items:\n        enum:\n          - italic\n          - bold\n          - superscript\n          - subscript\n        type: string\n\n    blocks:\n      type: array\n      items:\n        oneOf:\n          - $ref: '#/components/schemas/altText'\n          - $ref: '#/components/schemas/aresMedia'\n          - $ref: '#/components/schemas/aresMediaMetadata'\n          - $ref: '#/components/schemas/audio'\n          - $ref: '#/components/schemas/caption'\n          - $ref: '#/components/schemas/fragment'\n          - $ref: '#/components/schemas/headline'\n          - $ref: '#/components/schemas/idt2'\n          - $ref: '#/components/schemas/image'\n          - $ref: '#/components/schemas/inline'\n          - $ref: '#/components/schemas/keyPoints'\n          - $ref: '#/components/schemas/listItem'\n          - $ref: '#/components/schemas/onwardJourney'\n          - $ref: '#/components/schemas/onwardJourneys'\n          - $ref: '#/components/schemas/orderedList'\n          - $ref: '#/components/schemas/paragraph'\n          - $ref: '#/components/schemas/rawImage'\n          - $ref: '#/components/schemas/subheadline'\n          - $ref: '#/components/schemas/synopsis'\n          - $ref: '#/components/schemas/text'\n          - $ref: '#/components/schemas/tweet'\n          - $ref: '#/components/schemas/unorderedList'\n          - $ref: '#/components/schemas/urlLink'\n          - $ref: '#/components/schemas/video'\n      minItems: 2\n\n    altText:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n          type: object\n        type:\n          enum:\n            - altText\n          type: string\n\n    aresMedia:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n          type: object\n          required:\n            - blocks\n\n    aresMediaMetadata:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          type: object\n          required:\n            - advertising\n            - embedding\n            - id\n            - imageUrl\n            - title\n            - subType\n            - synopses\n            - versions\n          properties:\n            advertising:\n              type: boolean\n              example: true\n            availableUntil:\n              type: number\n              example: 1558511776575\n            duration:\n              type: number\n              example: 43\n            embedding:\n              type: boolean\n              example: true\n            format:\n              type: string # probably should be an enum in the future\n              example: audio_video\n            id:\n              type: string\n              example: 'p01jvmg5'\n            imageCopyright:\n              type: string\n              example: 'BBC'\n            imageUrl:\n              type: string\n              example: 'ichef.test.bbci.co.uk/images/ic/$recipe/p01jvmms.jpg'\n            subType:\n              type: string # probably should be an enum in the future\n              example: 'clip'\n            syndication:\n              type: object\n              properties:\n                destinations:\n                  type: array\n            synopses:\n              type: object\n              properties:\n                long:\n                  type: string\n                  example: \"New Zealand suffered a spectacular capsize in their America's Cup semi-final against Great Britain but lead the best-of-nine series 3-1.\\nThe catamaran fell forwards on the run-in to the start, leaving some crew suspended in the hull above the water.\\nThree were thrown overboard but all of New Zealand's crew were accounted for.\"\n                medium:\n                  type: string\n                  example: 'The catamaran fell forwards on the run-in to the start, leaving some crew suspended in the hull above the water.'\n                short:\n                  type: string\n                  example: \"New Zealand suffered a spectacular capsize in their America's Cup semi-final against Great\"\n            title:\n              type: string\n              example: \"Dramatic capsize in America's Cup yacht\"\n            type:\n              enum:\n                - aresMediaMetadata\n              type: string\n            versions:\n              type: array\n              items:\n                type: object\n                required:\n                  - versionId\n                  - types\n                  - duration\n                  - availableTerritories\n                properties:\n                  availableTerritories:\n                    type: object\n                    properties:\n                      nonUk:\n                        type: boolean\n                        example: true\n                      uk:\n                        type: boolean\n                        example: true\n                  duration:\n                    type: number\n                    example: 191\n                  types:\n                    type: array\n                    example: ['Original']\n                  versionId:\n                    type: string\n                    example: 'p01jvmg7'\n                  warnings:\n                    type: object\n                    properties:\n                      long:\n                        type: string\n                        example: 'Contains some strong language.'\n                      medium:\n                        type: string\n                        example: 'Contains some strong language.'\n                      short:\n                        type: string\n                        example: 'Contains some strong language.'\n\n    audio:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n          type: object\n          required:\n            - blocks\n        type:\n          enum:\n            - audio\n          type: string\n\n    caption:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n          type: object\n        type:\n          enum:\n            - caption\n          type: string\n\n    fragment:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          type: object\n          required:\n            - text\n            - attributes\n          properties:\n            text:\n              type: string\n            attributes:\n              $ref: '#/components/schemas/fragmentAttrs'\n        type:\n          enum:\n            - fragment\n          type: string\n\n    headline:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n          type: object\n        type:\n          enum:\n            - headline\n          type: string\n\n    idt2:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n            uuid:\n              type: string\n            href:\n              type: string\n            width:\n              type: number\n            height:\n              type: number\n            altText:\n              type: string\n            caption:\n              type: string\n            copyrightHolder:\n              type: string\n            published:\n              type: number\n          type: object\n        type:\n          enum:\n            - idt2\n          type: string\n\n    image:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n          type: object\n        type:\n          enum:\n            - image\n          type: string\n\n    inline:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          type: object\n          required:\n            - text\n            - blocks\n            - language\n          properties:\n            text:\n              type: string\n            blocks:\n              $ref: '#/components/schemas/blocks'\n            language:\n              type: string\n              example: 'en-gb'\n        type:\n          enum:\n            - inline\n          type: string\n\n    keyPoints:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n          type: object\n        type:\n          enum:\n            - keyPoints\n          type: string\n\n    listItem:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n          type: object\n        type:\n          enum:\n            - listItem\n          type: string\n\n    onwardJourney:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n          type: object\n        type:\n          enum:\n            - onwardJourney\n          type: string\n\n    onwardJourneys:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n          type: object\n        type:\n          enum:\n            - onwardJourneys\n          type: string\n\n    orderedList:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n          type: object\n        type:\n          enum:\n            - orderedList\n          type: string\n\n    paragraph:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          type: object\n          required:\n            - blocks\n            - text\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n            text:\n              type: string\n        type:\n          enum:\n            - paragraph\n          type: string\n\n    rawImage:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            copyrightHolder:\n              example: BBC\n              type: string\n            height:\n              example: 420\n              type: number\n            locator:\n              example: 'https://fishchips.co.uk/images/ic/640x360/p052ww1r.jpg'\n              type: string\n            originCode:\n              example: 'cpsprodpb'\n              type: string\n            width:\n              example: 640\n              type: number\n          required:\n            - copyrightHolder\n            - height\n            - locator\n            - originCode\n            - width\n          type: object\n        type:\n          enum:\n            - rawImage\n          type: string\n\n    subheadline:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n          type: object\n        type:\n          enum:\n            - subheadline\n          type: string\n\n    synopsis:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n          type: object\n        type:\n          enum:\n            - synopsis\n          type: string\n\n    text:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n          type: object\n        type:\n          enum:\n            - text\n          type: string\n\n    tweet:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            id:\n              type: string\n          required:\n            - id\n          type: object\n        type:\n          enum:\n            - tweet\n          type: string\n\n    unorderedList:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n          type: object\n        type:\n          enum:\n            - unorderedList\n          type: string\n\n    urlLink:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          type: object\n          required:\n            - text\n            - locator\n            - blocks\n          properties:\n            text:\n              type: string\n            locator:\n              type: string\n              example: 'https://www.bbc.com/news/articles/c0000000027o'\n            blocks:\n              $ref: '#/components/schemas/blocks'\n        type:\n          enum:\n            - urlLink\n          type: string\n\n    video:\n      type: object\n      required:\n        - model\n        - type\n      properties:\n        model:\n          properties:\n            blocks:\n              $ref: '#/components/schemas/blocks'\n          type: object\n          required:\n            - blocks\n        type:\n          enum:\n            - video\n          type: string\n",
			"canonicalURL": "/github.com/MikeRalphson/bbcapis@c0ff3d55d7bfbb34819a3534dec7c9c24b700a43/-/blob/simorghApi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MikeRalphson/bbcapis/blob/c0ff3d55d7bfbb34819a3534dec7c9c24b700a43/simorghApi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/article\": get: responses: 200: contents: application/json: generate schema: item: field content: field model: field blocks: item: oneOf: oneOf BlocksItem: variant AresMedia: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}