{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/edocs/openapi.yml",
			"byteSize": 91021,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: eDOCS REST API\n  description: \u003e \n    This is a generated connector from [eDocs](https://www.opentext.com/products-and-solutions/industries/legal/legal-content-management-edocs) OpenAPI Specification.\n\n    An API that allows interaction with the resources stored on an eDOCS DM Server.\n  termsOfService: http://swagger.io/terms/\n  contact:\n    name: eDOCS Support Team\n    url: https://knowledge.opentext.com\n  license:\n    name: OpenText License\n    url: https://www.opentext.com/file_source/OpenText/en_US/PDF/opentext-legal-license-model-schedule-en.pdf\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n    \n    Create an [OpenText account](https://login.opentext.com/register) and obtain an API key.\n  x-ballerina-display:\n    label: eDocs\n    iconPath: \"icon.png\"\ntags:\n  - name: libraries\n    description: Information about the available libraries\n  - name: connection\n    description: Connect to an eDOCS Server\n  - name: folders\n    description: Access to folders and their content\n  - name: documents\n    description: Access to documents\n  - name: searches\n    description: Access to saved searches and search results\n  - name: flexfolders\n    description: Access to FlexFolders and their content\n  - name: workspaces\n    description: Access to workspaces and their content\n  - name: forms\n    description: Access to form defenitions\n  - name: lookups\n    description: Access to lookup definitions and content\n  - name: urls\n    description: Access to URLs and content\n  - name: fileplans\n    description: Records management\n  - name: requests\n    description: Records management\n  - name: boxes\n    description: Records management\n  - name: settings\n    description: Access to user settings\npaths:\n  /libraries:\n    get:\n      tags:\n        - libraries\n      operationId: getLibraries\n      summary: Get a collection of available libraries\n      description: '**Optional:** Additional DM Server configuration information can be retrieved by including any value for the ***configuration*** parameter'\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - name: configuration\n          description: Retrieve DM Server configuration information (if available)\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json: {}\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /connect:\n    post:\n      tags:\n        - connection\n      summary: Connect to the DM Server and get key information in the response\n      operationId: connect\n      description: Connect to one of the libriaries found in the response to the **libraries** request.\n      security:\n        - eDOCS_Authorization: []\n      requestBody:\n        description: Credentials to connect to library\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: object\n                  properties:\n                    userid:\n                      type: string\n                    password:\n                      type: string\n                    library:\n                      type: string\n                  example:\n                    userid: DemoUserId\n                    password: DemoPassword\n                    library: DemoLibrary\n      responses:\n        '200':\n          description: Expected response to a valid request\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n          content:\n            application/json: {}\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /folders:\n    get:\n      operationId: getFolders\n      summary: Retrieve a collection of available folders\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of available folders\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: Add a new folder\n      operationId: addNewFolder\n      description: |-\n        Request body MUST contain at least all the required profile fields.\n\n        Additional create information can be found under **_restapi**\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n      requestBody:\n        description: Profile data needed to create a folder\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProfileData'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n          content:\n            application/json: {}\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /folders/public:\n    get:\n      summary: Retrieve a collection of public folders\n      operationId: getPublicFolders\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/SearchLibraries'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of public folders\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /folders/recentedits:\n    get:\n      summary: Retrieve a collection of recently edited items\n      operationId: getRecentEdits\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/SearchLibraries'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of recently edited items\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /folders/checkedout:\n    get:\n      summary: Retrieve a collection of checked out items\n      operationId: getCheckedOutItems\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/SearchLibraries'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of checked out items\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /folders/deleted:\n    get:\n      summary: Retrieve a collection of deleted items\n      operationId: getDeletedItems\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/SearchLibraries'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of deleted items\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /folders/templates:\n    get:\n      operationId: getTemplates\n      summary: Retrieve a collection of system defined templates\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/SearchLibraries'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of system defined templates\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /folders/{id}:\n    get:\n      summary: Retrieve a collection of content from this folder\n      operationId: getFolder\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of folder content\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: Request this folder be deleted\n      operationId: deleteFolder\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /folders/{id}/profile:\n    get:\n      summary: Retrieve the profile data for this folder\n      operationId: getProfileForTheFolder\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      summary: Replace the profile data for this folder\n      operationId: updateProfileData\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      requestBody:\n        description: Profile data that needs to be replaced.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProfileData'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /folders/{id}/security:\n    get:\n      operationId: getSecurityInfo\n      summary: Retrieve the security data for this folder\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      summary: Replace the security data for this folder\n      operationId: updateSecurityInfo\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      requestBody:\n        description: Security data that needs to replaced for this folder\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecurityData'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /folders/{id}/security/rights:\n    get:\n      operationId: getSecurityRights\n      summary: Retrieve the user's security rights for this folder\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /folders/{id}/references:\n    get:\n      summary: Retrieve a collection of references to this folder\n      operationId: getFolderReferences\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of references\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: Add a reference to this folder into folders and workspaces\n      operationId: addReferenceToFolder\n      description: Request body contains a list of individual target folders and workspaces\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      requestBody:\n        description: Reference information\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: object\n                  properties: {}\n                  example:\n                    - id: '123'\n                      type: folders\n                      lib: DemoLibrary\n                      docname: Target One\n                    - id: '456'\n                      type: workspaces\n                      lib: DemoLibrary\n                      docname: Target Two\n      responses:\n        '200':\n          description: Expected response to a valid request\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n          content:\n            application/json: {}\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: Request the reference to this folder be deleted from a folder or workspace\n      operationId: deleteReferenceFromFolder\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /folders/{id}/facets:\n    get:\n      summary: Retrieve the facet data for this folder\n      operationId: getFacetData\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /folders/{id}/history:\n    get:\n      summary: Retrieve the history data for this folder\n      operationId: getHistoryData\n      tags:\n        - folders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /documents:\n    get:\n      summary: Retrieve a collection of available documents\n      operationId: getAvailableDocuments\n      tags:\n        - documents\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of documents\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    # post:\n    #   summary: Add a new document\n    #   operationId: addNewDocument\n    #   description: |-\n    #     Request body MUST contain at least all the required profile fields.\n\n    #     Additional create information can be found under **_restapi**\n    #   tags:\n    #     - documents\n    #   security:\n    #     - eDOCS_Authorization: []\n    #   parameters:\n    #     - $ref: '#/components/parameters/Library'\n    #   requestBody:\n    #     required: true\n    #     content:\n    #       multipart/form-data:\n    #         schema:\n    #           $ref: '#/components/schemas/UploadData'\n    #   responses:\n    #     '200':\n    #       description: Expected response to a valid request\n    #       headers:\n    #         Set-Cookie:\n    #           schema:\n    #             type: string\n    #       content:\n    #         application/json: {}\n    #     default:\n    #       description: unexpected error\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: '#/components/schemas/Error'\n  /documents/{id}:\n    delete:\n      summary: Request this document be deleted\n      operationId: deleteDocumentById\n      tags:\n        - documents\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    # post:\n    #   summary: Add a new version to this document\n    #   operationId: addNewVersion\n    #   description: |-\n    #     Request body MUST contain at least all the required profile fields.\n\n    #     Additional create information can be found under **_restapi**\n    #   tags:\n    #     - documents\n    #   security:\n    #     - eDOCS_Authorization: []\n    #   parameters:\n    #     - $ref: '#/components/parameters/ResourceId'\n    #     - $ref: '#/components/parameters/Library'\n    #   requestBody:\n    #     required: true\n    #     content:\n    #       multipart/form-data:\n    #         schema:\n    #           $ref: '#/components/schemas/UploadData'\n    #   responses:\n    #     '200':\n    #       description: Expected response to a valid request\n    #       headers:\n    #         Set-Cookie:\n    #           schema:\n    #             type: string\n    #       content:\n    #         application/json: {}\n    #     default:\n    #       description: unexpected error\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: '#/components/schemas/Error'\n  /documents/{id}/profile:\n    get:\n      summary: Retrieve the profile data for this document\n      operationId: getProfileDataOfDocument\n      tags:\n        - documents\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      summary: Replace the profile data for this document\n      operationId: updateProfileDataOfDocument\n      tags:\n        - documents\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProfileData'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /documents/{id}/security:\n    get:\n      summary: Retrieve the security data for this document\n      operationId: getSecurityDataOfDocument\n      tags:\n        - documents\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      summary: Replace the security data for this document\n      operationId: updateSecurityData\n      description: Request body MUST contain valid security schema\n      tags:\n        - documents\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      requestBody:\n        description: Security data that needs to be replaced for this document.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecurityData'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n          content:\n            application/json: {}\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /documents/{id}/versions:\n    get:\n      summary: Retrieve a collection of versions for this document\n      operationId: getVersionsOfDocument\n      tags:\n        - documents\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of versions for this document\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    # post:\n    #   summary: Add a new sub-version to this version of the document\n    #   operationId: addSubVersionToDocument\n    #   description: |-\n    #     Request body MUST contain at least all the required profile fields.\n\n    #     Additional create information can be found under **_restapi**\n    #   tags:\n    #     - documents\n    #   security:\n    #     - eDOCS_Authorization: []\n    #   parameters:\n    #     - $ref: '#/components/parameters/ResourceId'\n    #     - $ref: '#/components/parameters/Library'\n    #   requestBody:\n    #     required: true\n    #     content:\n    #       multipart/form-data:\n    #         schema:\n    #           $ref: '#/components/schemas/UploadData'\n    #   responses:\n    #     '200':\n    #       description: Expected response to a valid request\n    #       headers:\n    #         Set-Cookie:\n    #           schema:\n    #             type: string\n    #       content:\n    #         application/json: {}\n    #     default:\n    #       description: unexpected error\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: '#/components/schemas/Error'\n  /documents/{id}/versions/{version}:\n    # get:\n    #   summary: Retrieve the contents of this version of the document\n    #   operationId: getContentOfSpecificVersion\n    #   tags:\n    #     - documents\n    #   security:\n    #     - eDOCS_Authorization: []\n    #   parameters:\n    #     - $ref: '#/components/parameters/ResourceId'\n    #     - $ref: '#/components/parameters/VersionId'\n    #     - $ref: '#/components/parameters/Library'\n    #   responses:\n    #     '200':\n    #       description: File content\n    #       content:\n    #         multipart/form-data:\n    #           schema:\n    #             $ref: '#/components/schemas/DownloadResponse'\n    #     '201':\n    #       description: Null response\n    #     default:\n    #       description: unexpected error\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: '#/components/schemas/Error'\n    delete:\n      summary: Request this version of the document be deleted\n      operationId: deleteSpecificVersionofSpecificDocument\n      tags:\n        - documents\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/VersionId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    # post:\n    #   summary: Add a new sub-version to this document\n    #   operationId: addNewSubVersion\n    #   description: |-\n    #     Request body MUST contain at least all the required profile fields.\n\n    #     Additional create information can be found under **_restapi**\n    #   tags:\n    #     - documents\n    #   security:\n    #     - eDOCS_Authorization: []\n    #   parameters:\n    #     - $ref: '#/components/parameters/ResourceId'\n    #     - $ref: '#/components/parameters/VersionId'\n    #     - $ref: '#/components/parameters/Library'\n    #   requestBody:\n    #     required: true\n    #     content:\n    #       multipart/form-data:\n    #         schema:\n    #           $ref: '#/components/schemas/UploadData'\n    #   responses:\n    #     '200':\n    #       description: Expected response to a valid request\n    #       headers:\n    #         Set-Cookie:\n    #           schema:\n    #             type: string\n    #       content:\n    #         application/json: {}\n    #     default:\n    #       description: unexpected error\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: '#/components/schemas/Error'\n  /documents/{id}/references:\n    get:\n      summary: Retrieve a collection of references to this document\n      operationId: getCollectionOfReferences\n      tags:\n        - documents\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of references to this document\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: Add a reference to this document into folders and workspaces\n      operationId: addReferencesToFoldersAndWorkspaces\n      description: Request body contains a list of individual target folders and workspaces\n      tags:\n        - documents\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      requestBody:\n        description: Reference information\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: object\n                  properties: {}\n                  example:\n                    - id: '123'\n                      type: folders\n                      lib: DemoLibrary\n                      docname: Target One\n                    - id: '456'\n                      type: workspaces\n                      lib: DemoLibrary\n                      docname: Target Two\n      responses:\n        '200':\n          description: Expected response to a valid request\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n          content:\n            application/json: {}\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: Request the reference to this document be deleted from a folder or workspace\n      operationId: deleteReference\n      tags:\n        - documents\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /documents/{id}/attachments/:\n    get:\n      summary: Retrieve a collection of attachments for this document\n      operationId: getAttachments\n      tags:\n        - documents\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of attachments for this document\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    # post:\n    #   summary: Add a new attachment to this document\n    #   operationId: addNewAttachments\n    #   description: |-\n    #     Request body MUST contain at least all the required profile fields.\n\n    #     Additional create information can be found under **_restapi**\n    #   tags:\n    #     - documents\n    #   security:\n    #     - eDOCS_Authorization: []\n    #   parameters:\n    #     - $ref: '#/components/parameters/ResourceId'\n    #     - $ref: '#/components/parameters/VersionId'\n    #     - $ref: '#/components/parameters/Library'\n    #   requestBody:\n    #     required: true\n    #     content:\n    #       multipart/form-data:\n    #         schema:\n    #           $ref: '#/components/schemas/AttachmentData'\n    #   responses:\n    #     '200':\n    #       description: Expected response to a valid request\n    #       headers:\n    #         Set-Cookie:\n    #           schema:\n    #             type: string\n    #       content:\n    #         application/json: {}\n    #     default:\n    #       description: unexpected error\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: '#/components/schemas/Error'\n  /documents/{id}/attachments/{attachment}:\n    get:\n      summary: Retrieve the contents of this attachment\n      operationId: getContentOfAttachment\n      tags:\n        - documents\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/AttachmentId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: Request this attachment be deleted\n      operationId: deleteAttachment\n      tags:\n        - documents\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/AttachmentId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /documents/{id}/history:\n    get:\n      summary: Retrieve the history data for this document\n      operationId: getHistoryDataForDocument\n      tags:\n        - documents\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /searches:\n    get:\n      summary: Get a collection of available saved searches\n      operationId: getSavedSearches\n      tags:\n        - searches\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of saved searches\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    # post:\n    #   summary: Add a new saved search\n    #   operationId: addNewSearch\n    #   tags:\n    #     - searches\n    #   security:\n    #     - eDOCS_Authorization: []\n    #   parameters:\n    #     - $ref: '#/components/parameters/Library'\n    #   requestBody:\n    #     required: true\n    #     content:\n    #       multipart/form-data:\n    #         schema:\n    #           $ref: '#/components/schemas/SearchData'\n    #   responses:\n    #     '200':\n    #       description: Expected response to a valid request\n    #       headers:\n    #         Set-Cookie:\n    #           schema:\n    #             type: string\n    #       content:\n    #         application/json: {}\n    #     default:\n    #       description: unexpected error\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: '#/components/schemas/Error'\n  # /searches/evaluation:\n  #   post:\n  #     summary: Get a collection of results based on the specified search criteria\n  #     operationId: getSearchEvaluations\n  #     tags:\n  #       - searches\n  #     security:\n  #       - eDOCS_Authorization: []\n  #     parameters:\n  #       - $ref: '#/components/parameters/Library'\n  #     requestBody:\n  #       required: true\n  #       content:\n  #         multipart/form-data:\n  #           schema:\n  #             $ref: '#/components/schemas/SearchData'\n  #     responses:\n  #       '200':\n  #         description: Expected response to a valid request\n  #         headers:\n  #           Set-Cookie:\n  #             schema:\n  #               type: string\n  #         content:\n  #           application/json: {}\n  #       default:\n  #         description: unexpected error\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/Error'\n  /searches/{id}:\n    get:\n      summary: Retrieve a collection of results that satisfy the saved search criteria\n      operationId: getSearches\n      tags:\n        - searches\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of search results\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: Request this saved search be deleted\n      operationId: deleteSearch\n      tags:\n        - searches\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /searches/{id}/profile:\n    get:\n      summary: Retrieve the profile data for this saved search\n      operationId: getProfileForSavedSearch\n      tags:\n        - searches\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    # put:\n    #   summary: Replace the profie data for this saved search\n    #   operationId: updateProfileDataForSavedSearch\n    #   tags:\n    #     - searches\n    #   security:\n    #     - eDOCS_Authorization: []\n    #   parameters:\n    #     - $ref: '#/components/parameters/ResourceId'\n    #     - $ref: '#/components/parameters/Library'\n    #   requestBody:\n    #     required: true\n    #     content:\n    #       multipart/form-data:\n    #         schema:\n    #           $ref: '#/components/schemas/SearchData'\n    #   responses:\n    #     '201':\n    #       description: Null response\n    #     default:\n    #       description: unexpected error\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: '#/components/schemas/Error'\n  /searches/{id}/references:\n    get:\n      summary: Retrieve a collection of references to this saved search\n      operationId: getReferencesForSavedSearch\n      tags:\n        - searches\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of references to this saved search\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: Add a reference to this saved search into workspaces\n      operationId: addReferenceToSavedSearch\n      description: Request body contains a list of individual target workspaces\n      tags:\n        - searches\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      requestBody:\n        description: Reference information\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: object\n                  properties: {}\n                  example:\n                    - id: '123'\n                      type: workspaces\n                      lib: DemoLibrary\n                      docname: Target One\n                    - id: '456'\n                      type: workspaces\n                      lib: DemoLibrary\n                      docname: Target Two\n      responses:\n        '200':\n          description: Expected response to a valid request\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n          content:\n            application/json: {}\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: Request the reference to this saved search be deleted from a workspace\n      operationId: deleteReferenceFromSavedSearch\n      tags:\n        - searches\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /workspaces:\n    get:\n      summary: Get a collection of available workspaces\n      operationId: getWorkspaces\n      tags:\n        - workspaces\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of workspaces\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: Add a new workspace\n      operationId: addNewWorkspace\n      description: |-\n        Request body MUST contain at least all the required profile fields.\n\n        Additional create information can be found under **_restapi**\n      tags:\n        - workspaces\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n      requestBody:\n        description: Profile data for new workspace.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProfileData'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n          content:\n            application/json: {}\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /workspaces/{id}:\n    get:\n      summary: Retrieve a collection of content from this workspace\n      operationId: getWorkspaceById\n      tags:\n        - workspaces\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of content from this workspace\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: Request this workspace be deleted\n      operationId: deleteWorkspaces\n      tags:\n        - workspaces\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /workspaces/{id}/profile:\n    get:\n      summary: Retrieve the profile data for this workspace\n      operationId: getProfileDataForWorkspace\n      tags:\n        - workspaces\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      summary: Replace the profile data for this workspace\n      operationId: repalceProfileDataForWorkspace\n      tags:\n        - workspaces\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      requestBody:\n        description: Profile data that needs to be replaced in workspace\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProfileData'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /workspaces/{id}/security:\n    get:\n      summary: Retrieve the security data for this workspace\n      operationId: getSecurityDataForWorkspace\n      tags:\n        - workspaces\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      summary: Replace the security data for this workspace\n      operationId: updateSecurityDataForWorkspace\n      tags:\n        - workspaces\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      requestBody:\n        description: Security data that needs to replaced in workspace.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecurityData'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /workspaces/{id}/security/rights:\n    get:\n      summary: Retrieve the user's security rights for this workspace\n      operationId: getUserSecurityRightsForWorkspace\n      tags:\n        - workspaces\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /flexfolders:\n    get:\n      summary: Get a collection of available FlexFolders\n      operationId: getCollectionOfFlexFolders\n      tags:\n        - flexfolders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of FlexFolders\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /flexfolders/{id}:\n    get:\n      summary: Retrieve a collection of content from this FlexFolder\n      operationId: getFlexFolder\n      tags:\n        - flexfolders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of content from this FlexFolder\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: Request this FlexFolder (subscription) be deleted\n      operationId: deleteFlexFolder\n      tags:\n        - flexfolders\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /fileplans:\n    get:\n      summary: Retrieve a collection of available first level terms\n      operationId: getFilePlans\n      tags:\n        - fileplans\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of fileplans\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /fileplans/recentused:\n    get:\n      summary: Retrieve a collection of recently used fileplans\n      operationId: getCollectionOfFilePlans\n      tags:\n        - fileplans\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of recently used fileplans\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /fileplans/groupfavorites:\n    get:\n      summary: Retrieve a collection of group favourite fileplans\n      operationId: getFavoriteGroupFilePlans\n      tags:\n        - fileplans\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of group favourite fileplans\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /fileplans/{id}:\n    get:\n      summary: Retrieve a collection of available items of this fileplan level\n      operationId: getFilePlansById\n      tags:\n        - fileplans\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of fileplan items\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /fileplans/{id}/history:\n    get:\n      summary: Retrieve the history data for this fileplan level\n      operationId: getHistoryDataForFilePlan\n      tags:\n        - fileplans\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /fileplans/{id}/profile:\n    get:\n      summary: Retrieve the profile data for this fileplan level\n      operationId: getFilePlansData\n      tags:\n        - fileplans\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /fileplans/{id}/references:\n    get:\n      summary: Retrieve a collection of reference for this fileplan\n      operationId: getCollectionOfReferecenForFilePlan\n      tags:\n        - fileplans\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of references to this fileplan\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: Add a reference to this fileplan into folders and workspaces\n      operationId: addReferenceToFilePlan\n      description: Request body contains a list of individual target folders and workspaces\n      tags:\n        - fileplans\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      requestBody:\n        description: Reference information for fileplan\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: object\n                  properties: {}\n                  example:\n                    - id: '123'\n                      type: folders\n                      lib: DemoLibrary\n                      docname: Target One\n                    - id: '456'\n                      type: workspaces\n                      lib: DemoLibrary\n                      docname: Target Two\n      responses:\n        '200':\n          description: Expected response to a valid request\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n          content:\n            application/json: {}\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: Request the reference to this fileplan be deleted from a folder or workspace\n      operationId: deleteReferencesToFilePlan\n      tags:\n        - fileplans\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /fileplans/{id}/requests:\n    post:\n      summary: Add a request to this fileplan item\n      operationId: addRequestToFilePlan\n      tags:\n        - fileplans\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      requestBody:\n        description: Request information\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: object\n                  properties: {}\n                  example:\n                    - id: '123'\n                      type: folders\n                      lib: DemoLibrary\n                      docname: Target One\n                    - id: '456'\n                      type: workspaces\n                      lib: DemoLibrary\n                      docname: Target Two\n      responses:\n        '200':\n          description: Expected response to a valid request\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n          content:\n            application/json: {}\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /boxes/{id}:\n    get:\n      summary: Retrieve a collection of content from this box\n      operationId: getBoxes\n      tags:\n        - boxes\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of boxes\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /boxes/{id}/history:\n    get:\n      summary: Retrieve the history data for this box\n      operationId: getHistoryDataForBox\n      tags:\n        - boxes\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /boxes/{id}/profile:\n    get:\n      summary: Retrieve the profile data for this box\n      operationId: getProfileDataForBox\n      tags:\n        - boxes\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /requests:\n    get:\n      summary: Retrieve a collection of requests\n      operationId: getRequests\n      tags:\n        - requests\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of requests\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /requests/{id}:\n    put:\n      summary: Add a request to this fileplan item\n      operationId: addRequestToFilePlanItem\n      tags:\n        - requests\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n          content:\n            application/json: {}\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: Request the request to this fileplan item be deleted\n      operationId: deleteRequestToFilePlanItem\n      tags:\n        - requests\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /settings:\n    get:\n      summary: Access to user settings\n      operationId: getUserSettings\n      tags:\n        - settings\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of user settings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /settings/{id}:\n    get:\n      summary: Retrieve a collection of this setting\n      operationId: getSettingsById\n      tags:\n        - settings\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of this setting\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /settings/{id}/{setting}:\n    get:\n      summary: Retrieve the configurable attributes of this setting\n      operationId: getConfigurableAttributes\n      tags:\n        - settings\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/SettingId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of attributes of this setting\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      summary: Replace the configurable attributes of this setting\n      operationId: replaceConfigurables\n      description: Request body contains a list of individual target folders and workspaces\n      tags:\n        - settings\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/SettingId'\n        - $ref: '#/components/parameters/Library'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: object\n                  properties: {}\n                  example:\n                    - id: '123'\n                      type: folders\n                      lib: DemoLibrary\n                      docname: Target One\n                    - id: '456'\n                      type: workspaces\n                      lib: DemoLibrary\n                      docname: Target Two\n      responses:\n        '200':\n          description: Expected response to a valid request\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n          content:\n            application/json: {}\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: Request this setting be deleted\n      operationId: deleteSettting\n      tags:\n        - settings\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/SettingId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /forms:\n    get:\n      summary: Access to form defenitions\n      operationId: getForms\n      tags:\n        - forms\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of forms\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /forms/app_ids:\n    get:\n      summary: Retrieve a collection of applications and their associated form data\n      operationId: getApplications\n      tags:\n        - forms\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /forms/{id}/profile:\n    get:\n      summary: Retrieve the definition data for this form\n      operationId: getDefinitionDataForForm\n      tags:\n        - forms\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /forms/{id}/columns:\n    get:\n      summary: Retrieve the column definition data for this form\n      operationId: getColumnDefinitionDataForForm\n      tags:\n        - forms\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /lookups:\n    get:\n      summary: Get a collection of available tables\n      operationId: getLookups\n      tags:\n        - lookups\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of tables\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /lookups/{table}:\n    get:\n      summary: Retrieve a collection of entries from this table\n      operationId: getEntriesFromTable\n      tags:\n        - lookups\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/TableId'\n        - $ref: '#/components/parameters/KeyId'\n        - $ref: '#/components/parameters/ProfileId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of entries from this table\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /lookups/{table}/profile:\n    get:\n      summary: Retrieve the definition for this table\n      operationId: getDefenitionForThisTable\n      tags:\n        - lookups\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/TableId'\n        - $ref: '#/components/parameters/KeyId'\n        - $ref: '#/components/parameters/ProfileId'\n        - $ref: '#/components/parameters/Library'\n        - $ref: '#/components/parameters/Start'\n        - $ref: '#/components/parameters/Max'\n        - $ref: '#/components/parameters/Ascending'\n        - $ref: '#/components/parameters/Descending'\n        - $ref: '#/components/parameters/Filter'\n      responses:\n        '200':\n          description: Collection of definition for this table\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponse'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /urls:\n    post:\n      summary: Create a URL\n      operationId: createURL\n      description: Create a URL in the specified location\n      tags:\n        - urls\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/Library'\n      requestBody:\n        description: URL information to create a URL\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: object\n                  properties:\n                    DISPLAYNAME:\n                      type: string\n                    URL_ADDRESS:\n                      type: string\n                    _restapi:\n                      type: object\n                      properties:\n                        ref:\n                          type: object\n                          properties:\n                            type:\n                              type: string\n                            id:\n                              type: string\n                            lib:\n                              type: string\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /urls/{id}:\n    delete:\n      summary: Request this url be deleted\n      operationId: deleteURL\n      tags:\n        - urls\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /urls/{id}/profile:\n    get:\n      summary: Retrieve the column definition data for this form\n      operationId: getProfileDataForURL\n      tags:\n        - urls\n      security:\n        - eDOCS_Authorization: []\n      parameters:\n        - $ref: '#/components/parameters/ResourceId'\n        - $ref: '#/components/parameters/Library'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  securitySchemes:\n    eDOCS_Authorization:\n      type: apiKey\n      in: header\n      name: X-DM-DST\n      description: |+\n        You can obtain a **X-DM-DST** by connecting to a DM Server.\n\n        It can be found under \"HEADERS\" in the response body.\n\n  schemas:\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n    CollectionResponse:\n      description: Collection of items based on the provided criteria\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            set:\n              description: Information defining the items in the collection\n              type: object\n              properties:\n                start:\n                  type: integer\n                max:\n                  type: integer\n                ascending:\n                  type: string\n                descending:\n                  type: string\n                filter:\n                  type: string\n                total:\n                  type: integer\n            list:\n              description: Individual items items in the collection\n              type: array\n              items: {}\n    DownloadResponse:\n      type: object\n      properties:\n        file:\n          type: string\n          format: base64\n    UploadData:\n      type: object\n      properties:\n        file:\n          type: string\n          format: base64\n        data:\n          type: object\n          properties: {}\n          example:\n            DOCNAME: Name Of document\n            AUTHOR_ID: DemoUserId\n            TYPIST_ID: DemoUserId\n            APP_ID: DEFAULT\n            FORM: '1839'\n            _restapi:\n              form_name: LEGALPROF\n    AttachmentData:\n      type: object\n      properties:\n        file:\n          type: string\n          format: base64\n        data:\n          type: object\n          properties: {}\n          example:\n            DOCNAME: Name Of document\n            AUTHOR_ID: DemoUserId\n            TYPIST_ID: DemoUserId\n            APP_ID: DEFAULT\n            FORM: '1839'\n            _restapi:\n              form_name: LEGALPROF\n    ProfileData:\n      type: object\n      properties:\n        data:\n          type: object\n          properties: {}\n          example:\n            DOCNAME: Name\n            AUTHOR_ID: DemoUserId\n            TYPIST_ID: DemoUserId\n            APP_ID: Application\n    SecurityData:\n      type: object\n      properties:\n        data:\n          type: object\n          properties: {}\n          example:\n            - flag: 2\n              USER_ID: DemoUserIdOne\n              rights: 32255\n            - flag: 2\n              USER_ID: DemoUserIdTwo\n              rights: 32255\n            - flag: 2\n              USER_ID: DemoUserIdThree\n              rights: 255\n    SearchData:\n      type: object\n      properties:\n        data:\n          type: object\n          properties: {}\n          example:\n            DESCRIPTION: Name of saved search\n            FORM_NAME: LAWQBE\n            criteria:\n              AUTHOR_ID: DemoUserIdOne,DemoUserIdTwo\n              TYPE_ID: DEFAULT\n  parameters:\n    ResourceId:\n      name: id\n      description: Resource identification\n      in: path\n      required: true\n      schema:\n        type: string\n    VersionId:\n      name: version\n      description: Version identification\n      in: path\n      required: true\n      schema:\n        type: string\n    AttachmentId:\n      name: attachment\n      description: Attachment identification\n      in: path\n      required: true\n      schema:\n        type: string\n    SettingId:\n      name: setting\n      description: Setting identification\n      in: path\n      required: true\n      schema:\n        type: string\n    TableId:\n      name: table\n      description: Table identification\n      in: path\n      required: true\n      schema:\n        type: string\n    KeyId:\n      name: key\n      description: Key identification\n      in: query\n      required: true\n      schema:\n        type: string\n    ProfileId:\n      name: profile\n      description: Profile identification\n      in: query\n      required: true\n      schema:\n        type: string\n    Library:\n      name: library\n      description: Name of library (lib)\n      in: query\n      required: true\n      schema:\n        type: string\n    SearchLibraries:\n      name: libs\n      description: Comma delimited list of multiple libraries\n      in: query\n      schema:\n        type: string\n    Start:\n      name: start\n      description: (zero-based) Index of first item to retrieve\n      in: query\n      schema:\n        type: integer\n        minimum: 0\n        default: 0\n    Max:\n      name: max\n      description: Maximum number of items to retrieve\n      in: query\n      schema:\n        type: integer\n        minimum: 1\n        default: 10\n    Ascending:\n      name: ascending\n      description: Retrieve items in ascending order by this field\n      in: query\n      schema:\n        type: string\n    Descending:\n      name: descending\n      description: Retrieve items in descending order by this field\n      in: query\n      schema:\n        type: string\n    Filter:\n      name: filter\n      description: Restrict items to retrieve based on this criteria\n      in: query\n      schema:\n        type: string\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/edocs/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/edocs/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/folders\": post: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}