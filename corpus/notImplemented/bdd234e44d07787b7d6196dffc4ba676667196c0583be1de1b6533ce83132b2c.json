{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/josille/apis-schemas"
		},
		"file": {
			"name": "Contentful-ImageAPI.openapi_collection.yml",
			"size": 0,
			"path": "openAPI/Contentful-ImageAPI.openapi_collection.yml",
			"byteSize": 4930,
			"content": "openapi: 3.0.0\ninfo:\n  title: Images API\n  description:  \u003e-\n      The Contentful Images API allows the retrieval and manipulation of image files referenced from assets.\n  version: 1.0.0\nexternalDocs:\n  url: https://www.contentful.com/developers/docs/references/images-api/\nservers:\n  - url: https://images.ctfassets.net\ntags:\n  - name: Parameters\npaths:\n  /{space_id}/{asset_id}/{unique_id}/{name}:\n    get:\n      tags:\n        - Parameters\n      summary: You can retrieve the original image.\n      description: \u003e-\n        f Possible values:\n\n\n        center, top, right, left, bottom.\n\n        top_right, top_left, bottom_right, bottom_left.\n\n        face for the largest face detected.\n\n        faces for all the faces detected.\n\n\n        https://www.contentful.com/developers/docs/references/images-api/#/reference/image-manipulation/quality\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: asset_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: unique_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: name\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: fm\n          description: Convert the image to a different format. jpg,png,webp,gif\n          in: query\n          schema:\n            type: string\n          examples:\n            jpg:\n              value: fm=jpg\n              summary: jpg format\n            png:\n              value: fm=png\n              summary: png format\n            webp:\n              value: fm=webp\n              summary: webp format\n            gif:\n              value: fm=gif\n              summary: gif format\n        - name: fl\n          description: Chamge format of image.\n          in: query\n          schema:\n            type: string\n          examples:\n            progressive:\n              value: fm=jpg\u0026fl=progressive\n              summary: You can request a JPEG image as a progressive JPEG.\n            png8:\n              value: fm=png\u0026fl=png8\n              summary: You can request a PNG image as a 8-bit PNG\n        - name: w\n          description: Width\n          in: query\n          schema:\n            type: integer\n          example: w=1000\n        - name: h\n          description: Height\n          in: query\n          schema:\n            type: integer\n          example: h=1000\n        - name: fit\n          description: Change the resizing behavior\n          in: query\n          schema:\n            type: string\n          examples:\n            pad:\n              value: fit=pad\n              summary: pad - Resize the image to the specified dimensions, padding the image if needed.\n            fill:\n              value: fit=fill\n              summary: fill - Resize the image to the specified dimensions, cropping the image if needed.\n            scale:\n              value: fit=scale\n              summary: scale - Resize the image to the specified dimensions, changing the original aspect ratio if needed.\n            crop:\n              value: fit=crop\n              summary: crop - Crop a part of the original image to fit into the specified dimensions.\n            thumb:\n              value: fit=thumb\n              summary: thumb - Create a thumbnail from the image.\n        - name: f\n          description: \u003e- \n            You can choose the focus area for resizing when using fit type pad, fill, crop or thumb. Focus area has no effect on the default or scale fit type.\n            Possible values:\n\n              center, top, right, left, bottom.\n\n              top_right, top_left, bottom_right, bottom_left.\n\n              face for the largest face detected.\n\n              faces for all the faces detected.\n          in: query\n          schema:\n            type: string\n          examples:\n            center:\n              value: f=center\u0026fit=thumb\n              summary: center\n            top:\n              value: f=top\u0026fit=thumb\n              summary: top\n            right:\n              value: f=right\u0026fit=thumb\n              summary: right\n        - name: r\n          description: Crop rounded corners \u0026 circle/elipsis\n          in: query\n          schema:\n            type: integer\n          example: r=20\n        - name: q\n          description: You can alter the quality of the image, expressed as a percentage value between 1 and 100.\n          in: query\n          schema:\n            type: integer\n          example: fm=jpg\u0026q=50\n        - name: bg\n          description: ou can choose the background color when using corner radius or the pad fit type.\n          in: query\n          schema:\n            type: string\n          example: fit=pad\u0026bg=rgb:ffffff\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n",
			"canonicalURL": "/github.com/josille/apis-schemas@3b2232ed50366c0a1a0618eaafc82c08f3891719/-/blob/openAPI/Contentful-ImageAPI.openapi_collection.yml",
			"externalURLs": [
				{
					"url": "https://github.com/josille/apis-schemas/blob/3b2232ed50366c0a1a0618eaafc82c08f3891719/openAPI/Contentful-ImageAPI.openapi_collection.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/{space_id}/{asset_id}/{unique_id}/{name}\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}