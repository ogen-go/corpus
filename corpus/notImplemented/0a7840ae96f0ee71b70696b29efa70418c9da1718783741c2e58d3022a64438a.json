{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-resources-policyAssignments-2019-01-01-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-resources-policyAssignments-2019-01-01-swagger.yaml",
			"byteSize": 49276,
			"content": "openapi: 3.0.0\ninfo:\n  description: To manage and control access to your resources, you can define customized\n    policies and assign them at a scope.\n  title: PolicyClient\n  version: 2019-01-01\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/resources/resource-manager/Microsoft.Authorization/stable/2019-01-01/policyAssignments.json\n      version: \"2.0\"\n  x-preferred: true\n  x-providerName: azure.com\n  x-serviceName: resources-policyAssignments\n  x-tags:\n    - Azure\n    - Microsoft\nsecurity:\n  - azure_auth:\n      - user_impersonation\npaths:\n  \"/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyAssignments\":\n    get:\n      description: \"This operation retrieves the list of all policy assignments associated\n        with the given subscription that match the optional given $filter. Valid\n        values for $filter are: 'atScope()' or 'policyDefinitionId eq\n        '{value}''. If $filter is not provided, the unfiltered list includes all\n        policy assignments associated with the subscription, including those\n        that apply directly or from management groups that contain the given\n        subscription, as well as any applied to objects contained within the\n        subscription. If $filter=atScope() is provided, the returned list\n        includes all policy assignments that apply to the subscription, which is\n        everything in the unfiltered list except those applied to objects\n        contained within the subscription. If $filter=policyDefinitionId eq\n        '{value}' is provided, the returned list includes all policy assignments\n        of the policy definition whose id is {value}.\"\n      operationId: PolicyAssignments_List\n      parameters:\n        - description: \"The filter to apply on the operation. Valid values for $filter are:\n            'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not\n            provided, no filtering is performed.\"\n          in: query\n          name: $filter\n          required: false\n          schema:\n            type: string\n          examples:\n            List policy assignments that apply to a subscription:\n              value: atScope()\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns an array of policy assignments.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyAssignmentListResult\"\n              examples:\n                List policy assignments that apply to a subscription:\n                  $ref: \"#/components/examples/List_policy_assignments_that_apply_t\\\n                    o_a_subscription\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Retrieves all policy assignments that apply to a subscription.\n      tags:\n        - PolicyAssignments\n      x-ms-odata: \"#/components/schemas/PolicyAssignment\"\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/policyAssignments\":\n    get:\n      description: \"This operation retrieves the list of all policy assignments associated\n        with the given resource group in the given subscription that match the\n        optional given $filter. Valid values for $filter are: 'atScope()' or\n        'policyDefinitionId eq '{value}''. If $filter is not provided, the\n        unfiltered list includes all policy assignments associated with the\n        resource group, including those that apply directly or apply from\n        containing scopes, as well as any applied to resources contained within\n        the resource group. If $filter=atScope() is provided, the returned list\n        includes all policy assignments that apply to the resource group, which\n        is everything in the unfiltered list except those applied to resources\n        contained within the resource group. If $filter=policyDefinitionId eq\n        '{value}' is provided, the returned list includes all policy assignments\n        of the policy definition whose id is {value} that apply to the resource\n        group.\"\n      operationId: PolicyAssignments_ListForResourceGroup\n      parameters:\n        - description: The name of the resource group that contains policy assignments.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 90\n            pattern: ^[-\\w\\._\\(\\)]+$\n          examples:\n            List policy assignments that apply to a resource group:\n              value: TestResourceGroup\n        - description: \"The filter to apply on the operation. Valid values for $filter are:\n            'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not\n            provided, no filtering is performed.\"\n          in: query\n          name: $filter\n          required: false\n          schema:\n            type: string\n          allowReserved: true\n          examples:\n            List policy assignments that apply to a resource group:\n              value: atScope()\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns an array of policy assignments.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyAssignmentListResult\"\n              examples:\n                List policy assignments that apply to a resource group:\n                  $ref: \"#/components/examples/List_policy_assignments_that_apply_t\\\n                    o_a_resource_group\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Retrieves all policy assignments that apply to a resource group.\n      tags:\n        - PolicyAssignments\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/policyAssignments\":\n    get:\n      deprecated: false\n      description: \"This operation retrieves the list of all policy assignments associated\n        with the specified resource in the given resource group and subscription\n        that match the optional given $filter. Valid values for $filter are:\n        'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not\n        provided, the unfiltered list includes all policy assignments associated\n        with the resource, including those that apply directly or from all\n        containing scopes, as well as any applied to resources contained within\n        the resource. If $filter=atScope() is provided, the returned list\n        includes all policy assignments that apply to the resource, which is\n        everything in the unfiltered list except those applied to resources\n        contained within the resource. If $filter=policyDefinitionId eq\n        '{value}' is provided, the returned list includes all policy assignments\n        of the policy definition whose id is {value} that apply to the resource.\n        Three parameters plus the resource name are used to identify a specific\n        resource. If the resource is not part of a parent resource (the more\n        common case), the parent resource path should not be provided (or\n        provided as ''). For example a web app could be specified as\n        ({resourceProviderNamespace} == 'Microsoft.Web', {parentResourcePath} ==\n        '', {resourceType} == 'sites', {resourceName} == 'MyWebApp'). If the\n        resource is part of a parent resource, then all parameters should be\n        provided. For example a virtual machine DNS name could be specified as\n        ({resourceProviderNamespace} == 'Microsoft.Compute',\n        {parentResourcePath} == 'virtualMachines/MyVirtualMachine',\n        {resourceType} == 'domainNames', {resourceName} == 'MyComputerName'). A\n        convenient alternative to providing the namespace and type name\n        separately is to provide both in the {resourceType} parameter, format:\n        ({resourceProviderNamespace} == '', {parentResourcePath} == '',\n        {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').\"\n      operationId: PolicyAssignments_ListForResource\n      parameters:\n        - description: The name of the resource group containing the resource.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 90\n            pattern: ^[-\\w\\._\\(\\)]+$\n          examples:\n            List all policy assignments that apply to a resource:\n              value: TestResourceGroup\n        - description: The namespace of the resource provider. For example, the namespace\n            of a virtual machine is Microsoft.Compute (from\n            Microsoft.Compute/virtualMachines)\n          in: path\n          name: resourceProviderNamespace\n          required: true\n          schema:\n            type: string\n          examples:\n            List all policy assignments that apply to a resource:\n              value: Microsoft.Compute\n        - description: The parent resource path. Use empty string if there is none.\n          in: path\n          name: parentResourcePath\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            List all policy assignments that apply to a resource:\n              value: virtualMachines/MyTestVm\n        - description: The resource type name. For example the type name of a web app is\n            'sites' (from Microsoft.Web/sites).\n          in: path\n          name: resourceType\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            List all policy assignments that apply to a resource:\n              value: domainNames\n        - description: The name of the resource.\n          in: path\n          name: resourceName\n          required: true\n          schema:\n            type: string\n          examples:\n            List all policy assignments that apply to a resource:\n              value: MyTestComputer.cloudapp.net\n        - description: \"The filter to apply on the operation. Valid values for $filter are:\n            'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not\n            provided, no filtering is performed.\"\n          in: query\n          name: $filter\n          required: false\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns an array of policy assignments.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyAssignmentListResult\"\n              examples:\n                List all policy assignments that apply to a resource:\n                  $ref: \"#/components/examples/List_all_policy_assignments_that_app\\\n                    ly_to_a_resource\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Retrieves all policy assignments that apply to a resource.\n      tags:\n        - PolicyAssignments\n      x-ms-odata: \"#/components/schemas/PolicyAssignment\"\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/{policyAssignmentId}\":\n    delete:\n      description: \"This operation deletes the policy with the given ID. Policy assignment\n        IDs have this format:\n        '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAss\\\n        ignmentName}'. Valid formats for {scope} are:\n        '/providers/Microsoft.Management/managementGroups/{managementGroup}'\n        (management group), '/subscriptions/{subscriptionId}' (subscription),\n        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'\n        (resource group), or\n        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/pro\\\n        viders/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType\\\n        }/{resourceName}' (resource).\"\n      operationId: PolicyAssignments_DeleteById\n      parameters:\n        - description: The ID of the policy assignment to delete. Use the format\n            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.\n          in: path\n          name: policyAssignmentId\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            Delete a policy assignment by ID:\n              value: providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns information about the policy assignment.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyAssignment\"\n              examples:\n                Delete a policy assignment by ID:\n                  $ref: \"#/components/examples/Delete_a_policy_assignment_by_ID\"\n        \"204\":\n          description: No Content - the policy assignment doesn't exist.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Deletes a policy assignment.\n      tags:\n        - PolicyAssignments\n    get:\n      description: \"The operation retrieves the policy assignment with the given ID. Policy\n        assignment IDs have this format:\n        '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAss\\\n        ignmentName}'. Valid scopes are: management group (format:\n        '/providers/Microsoft.Management/managementGroups/{managementGroup}'),\n        subscription (format: '/subscriptions/{subscriptionId}'), resource group\n        (format:\n        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or\n        resource (format:\n        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/pro\\\n        viders/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType\\\n        }/{resourceName}'.\"\n      operationId: PolicyAssignments_GetById\n      parameters:\n        - description: The ID of the policy assignment to get. Use the format\n            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.\n          in: path\n          name: policyAssignmentId\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            Retrieve a policy assignment by ID:\n              value: providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage\n            Retrieve a policy assignment with a managed identity by ID:\n              value: providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns information about the policy assignment.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyAssignment\"\n              examples:\n                Retrieve a policy assignment by ID:\n                  $ref: \"#/components/examples/Retrieve_a_policy_assignment_by_ID\"\n                Retrieve a policy assignment with a managed identity by ID:\n                  $ref: \"#/components/examples/Retrieve_a_policy_assignment_with_a_\\\n                    managed_identity_by_ID\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Retrieves the policy assignment with the given ID.\n      tags:\n        - PolicyAssignments\n    put:\n      description: \"This operation creates or updates the policy assignment with the given\n        ID. Policy assignments made on a scope apply to all resources contained\n        in that scope. For example, when you assign a policy to a resource group\n        that policy applies to all resources in the group. Policy assignment IDs\n        have this format:\n        '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAss\\\n        ignmentName}'. Valid scopes are: management group (format:\n        '/providers/Microsoft.Management/managementGroups/{managementGroup}'),\n        subscription (format: '/subscriptions/{subscriptionId}'), resource group\n        (format:\n        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or\n        resource (format:\n        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/pro\\\n        viders/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType\\\n        }/{resourceName}'.\"\n      operationId: PolicyAssignments_CreateById\n      parameters:\n        - description: The ID of the policy assignment to create. Use the format\n            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.\n          in: path\n          name: policyAssignmentId\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            Create or update policy assignment by ID:\n              value: providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage\n            Create or update policy assignment with a managed identity by ID:\n              value: providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PolicyAssignment\"\n        description: Parameters for policy assignment.\n        required: true\n      responses:\n        \"201\":\n          description: Created - Returns information about the policy assignment.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyAssignment\"\n              examples:\n                Create or update policy assignment by ID:\n                  $ref: \"#/components/examples/Create_or_update_policy_assignment_b\\\n                    y_ID\"\n                Create or update policy assignment with a managed identity by ID:\n                  $ref: \"#/components/examples/Create_or_update_policy_assignment_w\\\n                    ith_a_managed_identity_by_ID\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Creates or updates a policy assignment.\n      tags:\n        - PolicyAssignments\n  \"/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}\":\n    delete:\n      description: This operation deletes a policy assignment, given its name and the scope\n        it was created in. The scope of a policy assignment is the part of its\n        ID preceding\n        '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.\n      operationId: PolicyAssignments_Delete\n      parameters:\n        - description: \"The scope of the policy assignment. Valid scopes are: management\n            group (format:\n            '/providers/Microsoft.Management/managementGroups/{managementGroup}\\\n            '), subscription (format: '/subscriptions/{subscriptionId}'),\n            resource group (format:\n            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}\\\n            ', or resource (format:\n            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}\\\n            /providers/{resourceProviderNamespace}/[{parentResourcePath}/]{reso\\\n            urceType}/{resourceName}'\"\n          in: path\n          name: scope\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            Delete a policy assignment:\n              value: subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2\n        - description: The name of the policy assignment to delete.\n          in: path\n          name: policyAssignmentName\n          required: true\n          schema:\n            type: string\n          examples:\n            Delete a policy assignment:\n              value: EnforceNaming\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns information about the deleted assignment.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyAssignment\"\n              examples:\n                Delete a policy assignment:\n                  $ref: \"#/components/examples/Delete_a_policy_assignment\"\n        \"204\":\n          description: No Content - the policy assignment doesn't exist.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Deletes a policy assignment.\n      tags:\n        - PolicyAssignments\n    get:\n      description: This operation retrieves a single policy assignment, given its name and\n        the scope it was created at.\n      operationId: PolicyAssignments_Get\n      parameters:\n        - description: \"The scope of the policy assignment. Valid scopes are: management\n            group (format:\n            '/providers/Microsoft.Management/managementGroups/{managementGroup}\\\n            '), subscription (format: '/subscriptions/{subscriptionId}'),\n            resource group (format:\n            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}\\\n            ', or resource (format:\n            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}\\\n            /providers/{resourceProviderNamespace}/[{parentResourcePath}/]{reso\\\n            urceType}/{resourceName}'\"\n          in: path\n          name: scope\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            Retrieve a policy assignment:\n              value: subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2\n            Retrieve a policy assignment with a managed identity:\n              value: subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2\n        - description: The name of the policy assignment to get.\n          in: path\n          name: policyAssignmentName\n          required: true\n          schema:\n            type: string\n          examples:\n            Retrieve a policy assignment:\n              value: EnforceNaming\n            Retrieve a policy assignment with a managed identity:\n              value: EnforceNaming\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns information about the policy assignment.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyAssignment\"\n              examples:\n                Retrieve a policy assignment:\n                  $ref: \"#/components/examples/Retrieve_a_policy_assignment\"\n                Retrieve a policy assignment with a managed identity:\n                  $ref: \"#/components/examples/Retrieve_a_policy_assignment_with_a_\\\n                    managed_identity\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Retrieves a policy assignment.\n      tags:\n        - PolicyAssignments\n    put:\n      description: \" This operation creates or updates a policy assignment with the given\n        scope and name. Policy assignments apply to all resources contained\n        within their scope. For example, when you assign a policy at resource\n        group scope, that policy applies to all resources in the group.\"\n      operationId: PolicyAssignments_Create\n      parameters:\n        - description: \"The scope of the policy assignment. Valid scopes are: management\n            group (format:\n            '/providers/Microsoft.Management/managementGroups/{managementGroup}\\\n            '), subscription (format: '/subscriptions/{subscriptionId}'),\n            resource group (format:\n            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}\\\n            ', or resource (format:\n            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}\\\n            /providers/{resourceProviderNamespace}/[{parentResourcePath}/]{reso\\\n            urceType}/{resourceName}'\"\n          in: path\n          name: scope\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            Create or update a policy assignment:\n              value: subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2\n            Create or update a policy assignment with a managed identity:\n              value: subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2\n        - description: The name of the policy assignment.\n          in: path\n          name: policyAssignmentName\n          required: true\n          schema:\n            type: string\n          examples:\n            Create or update a policy assignment:\n              value: EnforceNaming\n            Create or update a policy assignment with a managed identity:\n              value: EnforceNaming\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PolicyAssignment\"\n        description: Parameters for the policy assignment.\n        required: true\n      responses:\n        \"201\":\n          description: Created - Returns information about the new policy assignment.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyAssignment\"\n              examples:\n                Create or update a policy assignment:\n                  $ref: \"#/components/examples/Create_or_update_a_policy_assignment\"\n                Create or update a policy assignment with a managed identity:\n                  $ref: \"#/components/examples/Create_or_update_a_policy_assignment\\\n                    _with_a_managed_identity\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Creates or updates a policy assignment.\n      tags:\n        - PolicyAssignments\nservers:\n  - url: https://management.azure.com\ncomponents:\n  examples:\n    List_policy_assignments_that_apply_to_a_subscription:\n      value:\n        value:\n          - id: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/CostManagement\n            identity:\n              principalId: e6d23f8d-af97-4fbc-bda6-00604e4e3d0a\n              tenantId: 4bee2b8a-1bee-47c2-90e9-404241551135\n              type: SystemAssigned\n            location: eastus\n            name: CostManagement\n            properties:\n              description: Minimize the risk of accidental cost overruns\n              displayName: Storage Cost Management\n              metadata:\n                category: Cost Management\n              notScopes: []\n              parameters:\n                allowedSkus:\n                  type: Array\n              policyDefinitionId: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/storageSkus\n              scope: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2\n            sku:\n              name: A0\n              tier: Free\n            type: Microsoft.Authorization/policyAssignments\n          - id: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/TagEnforcement\n            name: TagEnforcement\n            properties:\n              description: Ensure a given tag key and value are present on all resources\n              displayName: Enforces a tag key and value\n              notScopes: []\n              policyDefinitionId: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/TagKeyValue\n              scope: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2\n            sku:\n              name: A0\n              tier: Free\n            type: Microsoft.Authorization/policyAssignments\n    List_policy_assignments_that_apply_to_a_resource_group:\n      value:\n        value:\n          - id: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup/providers/Microsoft.Authorization/policyAssignments/TestCostManagement\n            identity:\n              principalId: e6d23f8d-af97-4fbc-bda6-00604e4e3d0a\n              tenantId: 4bee2b8a-1bee-47c2-90e9-404241551135\n              type: SystemAssigned\n            location: eastus\n            name: TestCostManagement\n            properties:\n              description: Minimize the risk of accidental cost overruns\n              displayName: Storage Cost Management\n              metadata:\n                category: Cost Management\n              notScopes: []\n              parameters:\n                allowedSkus:\n                  type: Array\n              policyDefinitionId: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/storageSkus\n              scope: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup\n            sku:\n              name: A0\n              tier: Free\n            type: Microsoft.Authorization/policyAssignments\n          - id: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup/providers/Microsoft.Authorization/policyAssignments/TestTagEnforcement\n            name: TestTagEnforcement\n            properties:\n              description: Ensure a given tag key and value are present on all resources\n              displayName: Enforces a tag key and value\n              notScopes: []\n              policyDefinitionId: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/TagKeyValue\n              scope: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup\n            sku:\n              name: A0\n              tier: Free\n            type: Microsoft.Authorization/policyAssignments\n    List_all_policy_assignments_that_apply_to_a_resource:\n      value:\n        value:\n          - id: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup/providers/Microsoft.Authorization/policyAssignments/TestCostManagement\n            identity:\n              principalId: e6d23f8d-af97-4fbc-bda6-00604e4e3d0a\n              tenantId: 4bee2b8a-1bee-47c2-90e9-404241551135\n              type: SystemAssigned\n            location: eastus\n            name: TestCostManagement\n            properties:\n              description: Minimize the risk of accidental cost overruns\n              displayName: VM Cost Management\n              metadata:\n                category: Cost Management\n              notScopes: []\n              parameters:\n                allowedSkus:\n                  type: Array\n              policyDefinitionId: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/vmSkus\n              scope: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup\n            sku:\n              name: A0\n              tier: Free\n            type: Microsoft.Authorization/policyAssignments\n          - id: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup/providers/Microsoft.Authorization/policyAssignments/TestTagEnforcement\n            name: TestTagEnforcement\n            properties:\n              description: Ensure a given tag key and value are present on all resources\n              displayName: Enforces a tag key and value\n              notScopes: []\n              policyDefinitionId: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/TagKeyValue\n              scope: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup\n            sku:\n              name: A0\n              tier: Free\n            type: Microsoft.Authorization/policyAssignments\n    Delete_a_policy_assignment_by_ID:\n      value:\n        id: /providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage\n        name: LowCostStorage\n        properties:\n          description: Allow only storage accounts of SKU Standard_GRS or Standard_LRS to\n            be created\n          displayName: Enforce storage account SKU\n          metadata:\n            assignedBy: Cheapskate Boss\n          notScopes: []\n          parameters:\n            listOfAllowedSKUs:\n              value:\n                - Standard_GRS\n                - Standard_LRS\n          policyDefinitionId: /providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1\n        type: Microsoft.Authorization/policyAssignments\n    Retrieve_a_policy_assignment_by_ID:\n      value:\n        id: /providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage\n        name: LowCostStorage\n        properties:\n          description: Allow only storage accounts of SKU Standard_GRS or Standard_LRS to\n            be created\n          displayName: Enforce storage account SKU\n          metadata:\n            assignedBy: Cheapskate Boss\n          notScopes: []\n          parameters:\n            listOfAllowedSKUs:\n              value:\n                - Standard_GRS\n                - Standard_LRS\n          policyDefinitionId: /providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1\n        type: Microsoft.Authorization/policyAssignments\n    Retrieve_a_policy_assignment_with_a_managed_identity_by_ID:\n      value:\n        id: /providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage\n        identity:\n          principalId: e6d23f8d-af97-4fbc-bda6-00604e4e3d0a\n          tenantId: 4bee2b8a-1bee-47c2-90e9-404241551135\n          type: SystemAssigned\n        location: westus\n        name: LowCostStorage\n        properties:\n          description: Allow only storage accounts of SKU Standard_GRS or Standard_LRS to\n            be created\n          displayName: Enforce storage account SKU\n          metadata:\n            assignedBy: Cheapskate Boss\n          notScopes: []\n          parameters:\n            listOfAllowedSKUs:\n              value:\n                - Standard_GRS\n                - Standard_LRS\n          policyDefinitionId: /providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1\n        type: Microsoft.Authorization/policyAssignments\n    Create_or_update_policy_assignment_by_ID:\n      value:\n        id: /providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage\n        name: LowCostStorage\n        properties:\n          description: Allow only storage accounts of SKU Standard_GRS or Standard_LRS to\n            be created\n          displayName: Enforce storage account SKU\n          metadata:\n            assignedBy: Cheapskate Boss\n          notScopes: []\n          parameters:\n            listOfAllowedSKUs:\n              value:\n                - Standard_GRS\n                - Standard_LRS\n          policyDefinitionId: /providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1\n        type: Microsoft.Authorization/policyAssignments\n    Create_or_update_policy_assignment_with_a_managed_identity_by_ID:\n      value:\n        id: /providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage\n        identity:\n          principalId: e6d23f8d-af97-4fbc-bda6-00604e4e3d0a\n          tenantId: 4bee2b8a-1bee-47c2-90e9-404241551135\n          type: SystemAssigned\n        location: eastus\n        name: LowCostStorage\n        properties:\n          description: Allow only storage accounts of SKU Standard_GRS or Standard_LRS to\n            be created\n          displayName: Enforce storage account SKU\n          metadata:\n            assignedBy: Cheapskate Boss\n          notScopes: []\n          parameters:\n            listOfAllowedSKUs:\n              value:\n                - Standard_GRS\n                - Standard_LRS\n          policyDefinitionId: /providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1\n        type: Microsoft.Authorization/policyAssignments\n    Delete_a_policy_assignment:\n      value:\n        id: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming\n        name: EnforceNaming\n        properties:\n          description: Force resource names to begin with given DeptA and end with -LC\n          displayName: Enforce resource naming rules\n          metadata:\n            assignedBy: Special Someone\n          notScopes: []\n          parameters:\n            prefix:\n              value: DeptA\n            suffix:\n              value: -LC\n          policyDefinitionId: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming\n          scope: subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2\n        type: Microsoft.Authorization/policyAssignments\n    Retrieve_a_policy_assignment:\n      value:\n        id: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming\n        name: EnforceNaming\n        properties:\n          description: Force resource names to begin with given DeptA and end with -LC\n          displayName: Enforce resource naming rules\n          metadata:\n            assignedBy: Special Someone\n          notScopes: []\n          parameters:\n            prefix:\n              value: DeptA\n            suffix:\n              value: -LC\n          policyDefinitionId: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming\n          scope: subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2\n        type: Microsoft.Authorization/policyAssignments\n    Retrieve_a_policy_assignment_with_a_managed_identity:\n      value:\n        id: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming\n        identity:\n          principalId: e6d23f8d-af97-4fbc-bda6-00604e4e3d0a\n          tenantId: 4bee2b8a-1bee-47c2-90e9-404241551135\n          type: SystemAssigned\n        location: westus\n        name: EnforceNaming\n        properties:\n          description: Force resource names to begin with given DeptA and end with -LC\n          displayName: Enforce resource naming rules\n          metadata:\n            assignedBy: Special Someone\n          notScopes: []\n          parameters:\n            prefix:\n              value: DeptA\n            suffix:\n              value: -LC\n          policyDefinitionId: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming\n          scope: subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2\n        type: Microsoft.Authorization/policyAssignments\n    Create_or_update_a_policy_assignment:\n      value:\n        id: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming\n        name: EnforceNaming\n        properties:\n          description: Force resource names to begin with given DeptA and end with -LC\n          displayName: Enforce resource naming rules\n          metadata:\n            assignedBy: Special Someone\n          notScopes: []\n          parameters:\n            prefix:\n              value: DeptA\n            suffix:\n              value: -LC\n          policyDefinitionId: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming\n          scope: subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2\n        type: Microsoft.Authorization/policyAssignments\n    Create_or_update_a_policy_assignment_with_a_managed_identity:\n      value:\n        id: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming\n        identity:\n          principalId: e6d23f8d-af97-4fbc-bda6-00604e4e3d0a\n          tenantId: 4bee2b8a-1bee-47c2-90e9-404241551135\n          type: SystemAssigned\n        location: eastus\n        name: EnforceNaming\n        properties:\n          description: Force resource names to begin with given DeptA and end with -LC\n          displayName: Enforce resource naming rules\n          metadata:\n            assignedBy: Special Someone\n          notScopes: []\n          parameters:\n            prefix:\n              value: DeptA\n            suffix:\n              value: -LC\n          policyDefinitionId: /subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming\n          scope: subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2\n        type: Microsoft.Authorization/policyAssignments\n  parameters:\n    ApiVersionParameter:\n      description: The API version to use for the operation.\n      in: query\n      name: api-version\n      required: true\n      schema:\n        type: string\n      examples:\n        List policy assignments that apply to a subscription:\n          value: 2019-01-01\n        List policy assignments that apply to a resource group:\n          value: 2019-01-01\n        List all policy assignments that apply to a resource:\n          value: 2019-01-01\n        Delete a policy assignment by ID:\n          value: 2019-01-01\n        Retrieve a policy assignment by ID:\n          value: 2019-01-01\n        Retrieve a policy assignment with a managed identity by ID:\n          value: 2019-01-01\n        Create or update policy assignment by ID:\n          value: 2019-01-01\n        Create or update policy assignment with a managed identity by ID:\n          value: 2019-01-01\n        Delete a policy assignment:\n          value: 2019-01-01\n        Retrieve a policy assignment:\n          value: 2019-01-01\n        Retrieve a policy assignment with a managed identity:\n          value: 2019-01-01\n        Create or update a policy assignment:\n          value: 2019-01-01\n        Create or update a policy assignment with a managed identity:\n          value: 2019-01-01\n    SubscriptionIdParameter:\n      description: The ID of the target subscription.\n      in: path\n      name: subscriptionId\n      required: true\n      schema:\n        type: string\n      examples:\n        List policy assignments that apply to a subscription:\n          value: ae640e6b-ba3e-4256-9d62-2993eecfa6f2\n        List policy assignments that apply to a resource group:\n          value: ae640e6b-ba3e-4256-9d62-2993eecfa6f2\n        List all policy assignments that apply to a resource:\n          value: ae640e6b-ba3e-4256-9d62-2993eecfa6f2\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  schemas:\n    ErrorResponse:\n      description: Error response indicates Azure Resource Manager is not able to process\n        the incoming request. The reason is provided in the error message.\n      properties:\n        errorCode:\n          description: Error code.\n          type: string\n        errorMessage:\n          description: Error message indicating why the operation failed.\n          type: string\n        httpStatus:\n          description: Http status code.\n          type: string\n      type: object\n    Identity:\n      description: Identity for the resource.\n      properties:\n        principalId:\n          description: The principal ID of the resource identity.\n          readOnly: true\n          type: string\n        tenantId:\n          description: The tenant ID of the resource identity.\n          readOnly: true\n          type: string\n        type:\n          description: The identity type.\n          enum:\n            - SystemAssigned\n            - None\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: ResourceIdentityType\n    PolicyAssignment:\n      description: The policy assignment.\n      properties:\n        id:\n          description: The ID of the policy assignment.\n          readOnly: true\n          type: string\n        identity:\n          $ref: \"#/components/schemas/Identity\"\n        location:\n          description: The location of the policy assignment. Only required when utilizing\n            managed identity.\n          type: string\n        name:\n          description: The name of the policy assignment.\n          readOnly: true\n          type: string\n        properties:\n          $ref: \"#/components/schemas/PolicyAssignmentProperties\"\n        sku:\n          $ref: \"#/components/schemas/PolicySku\"\n        type:\n          description: The type of the policy assignment.\n          readOnly: true\n          type: string\n      x-ms-azure-resource: true\n    PolicyAssignmentListResult:\n      description: List of policy assignments.\n      properties:\n        nextLink:\n          description: The URL to use for getting the next set of results.\n          type: string\n        value:\n          description: An array of policy assignments.\n          items:\n            $ref: \"#/components/schemas/PolicyAssignment\"\n          type: array\n    PolicyAssignmentProperties:\n      description: The policy assignment properties.\n      properties:\n        description:\n          description: This message will be part of response in case of policy violation.\n          type: string\n        displayName:\n          description: The display name of the policy assignment.\n          type: string\n        metadata:\n          description: The policy assignment metadata.\n          type: object\n        notScopes:\n          description: The policy's excluded scopes.\n          items:\n            type: string\n          type: array\n        parameters:\n          description: Required if a parameter is used in policy rule.\n          type: object\n        policyDefinitionId:\n          description: The ID of the policy definition or policy set definition being\n            assigned.\n          type: string\n        scope:\n          description: The scope for the policy assignment.\n          type: string\n    PolicySku:\n      description: The policy sku. This property is optional, obsolete, and will be ignored.\n      properties:\n        name:\n          description: The name of the policy sku. Possible values are A0 and A1.\n          type: string\n        tier:\n          description: The policy sku tier. Possible values are Free and Standard.\n          type: string\n      required:\n        - name\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-resources-policyAssignments-2019-01-01-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-resources-policyAssignments-2019-01-01-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyAssignments\": get: security: security \"azure_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}