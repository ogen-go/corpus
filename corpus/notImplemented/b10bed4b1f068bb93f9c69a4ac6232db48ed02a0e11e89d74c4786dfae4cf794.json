{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swissfintechinnovations/common-API"
		},
		"file": {
			"name": "mortgageAPI.yaml",
			"size": 0,
			"path": "mortgageAPI.yaml",
			"byteSize": 107861,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 2.4.0\n  title: Common Mortgage API (Public)\n  description:\n    This specification defines a common mortgage API for mortgages as used in Switzerland. The API is supposed to be used by requesting parties who want to get, extend, or transfer mortgages from and to financial institutions.\n    This specification uses schema definitions from the Common Data Model v1.2.2.\n  termsOfService: 'Tbd'\n  contact:\n    email: info@common-api.ch\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nservers:\n  - url: https://mortgage.common-api.ch\nexternalDocs:\n  description: Find out more about SFTI API specifications\n  url: 'https://www.common-api.ch'\ntags:\n  - name: Existing Mortgages\n    description: Operations related with existing mortgages\n  - name: Mortgage Products and Conditions\n    description: Operations for synchronizing general mortgage product information from an FI\n  - name: Mortgage Application\n    description: Operations needed to place an application (dossier) for a new mortgage\n  - name: Mortgage Financing Request\n    description: Operations for handling financing requests for a specific accepted application (dossier)\n  - name: Mortgage Offers\n    description: Operations for handling the binding offers an FI provides\n  - name: Mortgage Order\n    description: Operations for placing a binding order for a chosen offer\n  - name: Mortgage Prolongation\n    description: Operations for handling the common special case of prolonging an existing mortgage\nsecurity:\n  - ApiKeyAuth: []\n  - OAuth2:\n      - read\n      - write\npaths:\n  /mortgages:\n    get:\n      tags:\n        - Existing Mortgages\n      description: List of mortgages for the authenticated context including the corresponding properties and related mortgages, sorted by mortgageId.\n      summary: Return the list of all mortgages for the authenticated context\n      parameters:\n        - in: query\n          name: expiring\n          schema:\n            type: boolean\n          example: true\n          description: Whether or not the mortgage is qualified for being prolonged, i.e., expiring soon or already expired (for filtering)\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: Paginated list of all mortgages with all related information sorted by mortgageId\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  MortgageList:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Mortgage'\n                  _links:\n                    $ref: '#/components/schemas/linksPagination'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n\n  /mortgages/{mortgageId}:\n    get:\n      tags:\n        - Existing Mortgages\n      description: A specific existing mortgage including the corresponding properties and related mortgages.\n      summary: Return a specific existing mortgage\n      parameters:\n        - name: mortgageId\n          in: path\n          description: Uuid v4 of a specific existing mortgage\n          required: true\n          example: bcb5d762-8d28-43a2-9398-393b2e8d56ba\n          schema:\n            type: string\n            format: uuid\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: Mortgage details with the corresponding properties and related mortgages.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  Mortgage:\n                    $ref: '#/components/schemas/Mortgage'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n  /mortgages/products:\n    get:\n      summary: Get a list of all mortgage products\n      description: Get a complete overview of all available mortgage products sorted by productId\n      tags:\n        - Mortgage Products and Conditions\n      parameters:\n        - in: query\n          name: interestRateType\n          schema:\n            type: string\n            example: saron\n            enum:\n              - variable\n              - libor\n              - saron\n              - fixed\n          description: The type of the interest rates (for filtering)\n        - in: query\n          name: duration\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 20\n          example: 10\n          description: The type of duration (for filtering)\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: Paginated list of all mortgage products with all related information sorted by productId\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  productList:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Product'\n                  _links:\n                    $ref: '#/components/schemas/linksPagination'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n\n  /mortgages/products/{productId}/conditions:\n    get:\n      summary: Get the general conditions for the specified mortgage product\n      description: The standard financial conditions for the product\n      tags:\n        - Mortgage Products and Conditions\n      parameters:\n        - in: path\n          name: productId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          example: a86dd383-055e-471a-a098-682ae5ef8348\n          description: A product's uuid v4\n        - in: query\n          name: duration\n          schema:\n            type: string\n          description: The duration (for filtering)\n        - in: query\n          name: interest\n          schema:\n            type: string\n          description: The interest (for filtering)\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: List of conditions related to a specific mortgage product.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  conditionList:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Condition'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n\n  /mortgages/applications:\n    post:\n      summary: Place a new mortgage application (serves as dossier)\n      description: Place a new application including all necessary information about the property and applicant’s financial situation. **Note that in the case where the FI needs additional information on the property, the error response 400 must contain the minimum required JSON object (PropertyObject) as detail**.\n      tags:\n        - Mortgage Application\n      requestBody:\n        description: Static details (requesting party, property object) of the application to be added as a dossier\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Application'\n      parameters:\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '201':\n          description: created\n          headers:\n            location:\n              schema:\n                type: string\n                format: uri\n                description: In the location header of the response you will find the URI of the newly created resource. With a GET call to this address you can retrieve a representation of the new product.\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n  /mortgages/applications/required-information:\n    get:\n      summary: Get the required property information for the specific FI needed for valuation\n      description: Show the subset of property details required by the FI for valuation\n      tags:\n        - Mortgage Application\n      parameters:\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PropertyObject'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n\n  /mortgages/applications/{applicationId}:\n    get:\n      summary: Get the details of a specific placed application\n      description: Get the details of a specific placed application\n      tags:\n        - Mortgage Application\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          example: 4bf92636-14a0-4511-98e2-acfde576e644\n          description: Uuid v4 of the application request\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  application:\n                    $ref: '#/components/schemas/Application'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n    put:\n      summary: Update the application’s details\n      description: Update the application’s details. Note that changing the application's details should not be possible after the application has been accepted by the FI.\n      tags:\n        - Mortgage Application\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          example: 7f810bcd-e430-4f52-8cdf-ddf7bfbd2903\n          description: Uuid v4 of the application request\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      requestBody:\n        description: Details of the order to be added\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Application'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n    delete:\n      summary: Cancel the application and removing it\n      description: Cancel the application and removing it\n      tags:\n        - Mortgage Application\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          example: 25cce7b2-ffb8-4800-88b0-e255ab75a829\n          description: Uuid v4 of the application request\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n\n  /mortgages/applications/{applicationId}/swissrets:\n    post:\n      summary: Add property details in the SwissRETS standard\n      description: This endpoint allows to upload the real estate property's details as an XML file in the SwissRETS format according to https://swissrets.ch/\n      tags:\n        - Mortgage Application\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          example: a5f2cc2a-e2bf-45f0-a892-bc61dfb5fe02\n          description: Uuid v4 of the application request\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      requestBody:\n        description: Details of the real estate property to be added\n        required: true\n        content:\n          application/xml:\n            schema:\n              type: string\n      responses:\n        '201':\n          description: created\n          headers:\n            location:\n              schema:\n                type: string\n                format: uri\n                description: In the location header of the response you will find the URI of the newly created resource. With a GET call to this address you can retrieve a representation of the new product.\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n    get:\n      summary: Get property details in SwissRETS format\n      description: Get the real estate property's details in SwissRETS format XML according to https://swissrets.ch/\n      tags:\n        - Mortgage Application\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n            format: uuid\n          example: 4a9aabc4-b893-4f16-a4f4-421a414ea628\n          required: true\n          description: Uuid v4 of the application request\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/xml:\n              schema:\n                type: string\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n    put:\n      summary: Update the real estate property's details\n      description: This endpoint allows to upload a modified XML file in the SwissRETS format changing the already existing information\n      tags:\n        - Mortgage Application\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n          required: true\n          example: 83ad0ba5-d6d1-42d3-ba8d-5ea514799632\n          description: Uuid v4 of the application request\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      requestBody:\n        description: Details of the real estate property to be added\n        required: true\n        content:\n          application/xml:\n            schema:\n              type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n  /mortgages/applications/{applicationId}/documents:\n    post:\n      summary: Add documents for the specific application\n      description: Add to a specific application’s documents\n      tags:\n        - Mortgage Application\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          example: 7f648f12-c15f-4930-8380-238da5671c37\n          description: Unique ID (uuid v4) of the application request\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      requestBody:\n        description: Details of the document to be added\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - documentType\n                - fileContent\n                - name\n                - type\n                - size\n              properties:\n                documentType:\n                  $ref: '#/components/schemas/DocumentType'\n                fileContent:\n                  type: string\n                  format: binary\n                  description: 'The file content.'\n                name:\n                  type: string\n                  description: 'The name of the file without file type extension.'\n                  maxLength: 128\n                  example: 'my-property-flyer'\n                type:\n                  type: string\n                  description: 'The file type.'\n                  maxLength: 64\n                  example: 'application/pdf'\n                size:\n                  type: integer\n                  format: int64\n                  description: 'The file size in bytes.'\n                  example: '21543'\n                applicantId:\n                  type: string\n                  format: uuid\n                  description: UUID v4 of the applicant (existing applicant within the current application)\n                  example: 576f8de3-6b30-4882-a7af-da2132a456cf\n      responses:\n        '201':\n          description: created\n          headers:\n            documentId:\n              schema:\n                type: string\n                format: uuid\n                description: Uuid v4 of the created document defined by FI\n                example: 232af5ca-fca3-4bd4-b91d-23d755d9af0f\n            location:\n              schema:\n                type: string\n                format: uri\n                description: In the location header of the response you will find the URI of the newly created resource. With a GET call to this address you can retrieve a representation of the new product.\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n    get:\n      summary: Get a list of submitted documents for a specifically placed application\n      description: Get a list of documents submitted for a specifically placed application\n      tags:\n        - Mortgage Application\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n            format: uuid\n          example: 7f648f12-fd45-4930-6543-456hf5671c37\n          required: true\n          description: Uuid v4 of the application request\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    filename:\n                      type: string\n                    filetype:\n                      type: string\n                    documentId:\n                      type: string\n                      format: uuid\n                      description: Document ID in uuid v4 format\n                    filesize:\n                      type: integer\n                    uploaddate:\n                      $ref: '#/components/schemas/Date'\n                    statusInfo:\n                      description: 'Document status info'\n                      type: object\n                      required:\n                        - status\n                      properties:\n                        status:\n                          type: string\n                          enum:\n                            - accepted\n                            - rejected\n                            - pending\n                        statusReason:\n                          type: string\n                          description: 'The reason, of current status.'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n\n  /mortgages/applications/{applicationId}/documents/{documentId}:\n    delete:\n      summary: Delete a formerly uploaded document\n      description: Deletes a specific document attached to a specific application. Note that deleting documents should not be possible after the application has been accepted by the FI.\n      tags:\n        - Mortgage Application\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n            format: uuid\n          example: 7f648f12-fd45-4930-6543-456hf5671c37\n          required: true\n          description: Uuid v4 of the application (dossier)\n        - in: path\n          name: documentId\n          schema:\n            type: string\n            format: uuid\n          example: 7f648f12-c15f-4930-8380-238da5671c37\n          required: true\n          description: Unique ID (uuid v4) of the document\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n  /mortgages/applications/{applicationId}/status:\n    get:\n      summary: Get the current status of the application\n      description: Get the current status of the application (rejected with reason, accepted, pending with reason)\n      tags:\n        - Mortgage Application\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n            format: uuid\n          example: 225f92e7-095f-4e06-a036-d3b5947c7e71\n          required: true\n          description: Uuid v4 of the application request\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum:\n                      - accepted\n                      - rejected\n                      - pending\n                    example: pending\n                  detail:\n                    type: string\n                    example: Waiting for details\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n  /mortgages/applications/{applicationId}/financing-requests:\n    post:\n      summary: Place a new financing-request for a specific accepted application (dossier)\n      description: Place a new financing request including all necessary information\n      tags:\n        - Mortgage Financing Request\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n            format: uuid\n          example: 7598b91b-c500-46c3-a196-0ab1610e692c\n          required: true\n          description: Uuid v4 of the application request\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      requestBody:\n        description: Specific financing request fo the given application (dossier)\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FinancingRequest'\n      responses:\n        '201':\n          description: created\n          headers:\n            location:\n              schema:\n                type: string\n                format: uri\n                description: In the location header of the response you will find the URI of the newly created resource. With a GET call to this address you can retrieve a representation of the new product.\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n  /mortgages/applications/{applicationId}/financing-requests/{financingRequestId}/required-information:\n    get:\n      summary: List all required documents / information for processing specific Financial request at FI\n      description: List all required documents / information for processing specific Financial request at FI\n        This can be used when NO offer is available from FI\n      tags:\n        - Mortgage Financing Request\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n            format: uuid\n          example: 1a75e7fc-f3c3-99a9-9268-ec21c405bbc8\n          required: true\n          description: Uuid v4 of the application request\n        - in: path\n          name: financingRequestId\n          schema:\n            type: string\n            format: uuid\n          example: 1a75e7fc-f3c3-45a9-9268-ec21c405bbc8\n          required: true\n          description: Uuid v4 of the financing request\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  financingRequestId:\n                    type: string\n                    format: uuid\n                  documents:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/DocumentType'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n  /mortgages/applications/{applicationId}/financing-requests/{financingRequestId}:\n    get:\n      summary: Get the details of a financing request\n      description: Get a specific financing request based on the financingRequestId\n      tags:\n        - Mortgage Financing Request\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n            format: uuid\n          example: 78d01ce4-a01b-46dd-8d17-5f022d4f98h3\n          required: true\n          description: Uuid ID of the application\n        - in: path\n          name: financingRequestId\n          schema:\n            type: string\n            format: uuid\n          example: 78d01ce4-a01b-46dd-8d17-5f022d4f46f2\n          required: true\n          description: Uuid ID of the financing request\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  offerList:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/FinancingRequest'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n\n  /mortgages/applications/{applicationId}/financing-requests/{financingRequestId}/offers:\n    get:\n      summary: List all binding offers for a given financing request\n      description: List all binding offers for a given application\n      tags:\n        - Mortgage Offers\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n            format: uuid\n          example: f005bcab-051f-437c-a010-242aa0390add\n          required: true\n          description: Uuid v4 of the application request\n        - in: path\n          name: financingRequestId\n          schema:\n            type: string\n            format: uuid\n          example: c0c6bcf8-4be7-4c3f-8e5e-cbec6ee95d95\n          required: true\n          description: Uuid v4 of the financing request\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  offerList:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Offer'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n\n  /mortgages/applications/{applicationId}/financing-requests/{financingRequestId}/offers/{offerId}:\n    get:\n      summary: Get the details of a specific offer\n      description: Get the details of a specific offer for a specific placed application\n      tags:\n        - Mortgage Offers\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n          example: bankx-applicationreq-465234\n          required: true\n          description: Uuid v4 of the application request\n        - in: path\n          name: financingRequestId\n          schema:\n            type: string\n            format: uuid\n          example: 1a75e7fc-f3c3-45a9-9268-ec21c405bbc8\n          required: true\n          description: Uuid v4 of the financing request\n        - in: path\n          name: offerId\n          schema:\n            type: string\n            format: uuid\n          example: c2fee261-053c-4088-8986-11216f0c9be6\n          required: true\n          description: Uuid v4 of the offer\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  offer:\n                    $ref: '#/components/schemas/Offer'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n  /mortgages/offers/{offerId}/document:\n    get:\n      summary: Get document for the given offer\n      description: Get document for the offer, this can be used by TPP to display offer content\n      tags:\n        - Mortgage Offers\n      parameters:\n        - in: path\n          name: offerId\n          schema:\n            type: string\n            format: uuid\n          example: 8109fc33-8af0-4072-98aa-a7d0c5c896a7\n          required: true\n          description: Uuid v4 of an offer\n        - in: query\n          name: language\n          schema:\n            type: string\n            enum:\n              - de\n              - fr\n              - it\n              - en\n          description: 'Language of Document content'\n          example: fr\n          required: true\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  document:\n                    $ref: '#/components/schemas/Document'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n  /mortgages/applications/{applicationId}/financing-requests/{financingRequestId}/offers/{offerId}/required-information:\n    get:\n      summary: List all required documents / information for processing specific offer at FI\n      description: List all required documents / information for processing specific offer at FI\n      tags:\n        - Mortgage Offers\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n            format: uuid\n          example: 1a75e7fc-f3c3-99a9-9268-ec21c405bbc8\n          required: true\n          description: Uuid v4 of the application request\n        - in: path\n          name: financingRequestId\n          schema:\n            type: string\n            format: uuid\n          example: 1a75e7fc-f3c3-45a9-9268-ec21c405bbc8\n          required: true\n          description: Uuid v4 of the financing request\n        - in: path\n          name: offerId\n          schema:\n            type: string\n            format: uuid\n          example: c2fee261-053c-4088-8986-11216f0c9be6\n          required: true\n          description: Uuid v4 of the offer\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  offerId:\n                    type: string\n                    format: uuid\n                  documents:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/DocumentType'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n  /mortgages/orders:\n    post:\n      summary: Place a new order\n      description: Place a new order referencing a specific offerId and either an existing mortgage id (prolongation) or an application id (new mortgage) including all relevant information\n      tags:\n        - Mortgage Order\n      requestBody:\n        description: Details of the order to be added\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Order'\n      parameters:\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '201':\n          description: created\n          headers:\n            location:\n              schema:\n                type: string\n                format: uri\n                description: In the location header of the response you will find the URI of the newly created resource. With a GET call to this address you can retrieve a representation of the new product.\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n  /mortgages/orders/{orderId}:\n    get:\n      summary: Get the details of a specific placed order\n      description: Get the details of a specific placed order\n      tags:\n        - Mortgage Order\n      parameters:\n        - in: path\n          name: orderId\n          schema:\n            type: string\n            format: uuid\n          example: 91d029b3-ee7a-44c3-ac18-cf621cb128a8\n          required: true\n          description: Uuid v4 of an order\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  offer:\n                    $ref: '#/components/schemas/Order'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n\n  /mortgages/orders/{orderId}/status:\n    get:\n      summary: Get the current status of the order\n      description: Get the current status of the order (rejected with reason, accepted, pending with reason)\n      tags:\n        - Mortgage Order\n      parameters:\n        - in: path\n          name: orderId\n          schema:\n            type: string\n            format: uuid\n          example: 8109fc33-8af0-4072-98aa-a7d0c5c896a7\n          required: true\n          description: Uuid v4 of an order\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum:\n                      - accepted\n                      - rejected\n                      - pending\n                    example: pending\n                  detail:\n                    type: string\n                    example: Waiting for details\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n  /mortgages/orders/{orderId}/document:\n    get:\n      summary: Get document for the given order\n      description: Get document for given order, this can be used by TPP to display offer content\n      tags:\n        - Mortgage Order\n      parameters:\n        - in: path\n          name: orderId\n          schema:\n            type: string\n            format: uuid\n          example: 8109fc33-8af0-4072-98aa-a7d0c5c896a7\n          required: true\n          description: Uuid v4 of an order\n        - in: query\n          name: language\n          schema:\n            type: string\n            enum:\n              - de\n              - fr\n              - it\n              - en\n          description: 'Language of Document content'\n          example: fr\n          required: true\n\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  document:\n                    $ref: '#/components/schemas/Document'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n  /mortgages/{mortgageId}/offers:\n    get:\n      tags:\n        - Mortgage Prolongation\n      description: Get offer framework for the to be extended mortgage.\n      summary: Get all active offers for a specific tranche\n      parameters:\n        - name: mortgageId\n          in: path\n          description: Uuid v4 of a specific expiring mortgage\n          required: true\n          example: 82d2f030-e840-40ea-9bc8-8b6cbc15f7bb\n          schema:\n            type: string\n            format: uuid\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: Paginated list of all offers for a specific expiring mortgage\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  offerList:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Offer'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n\n  /mortgages/{mortgageId}/offers/{offerId}:\n    get:\n      tags:\n        - Mortgage Prolongation\n      description: Get a specific offer for the to be extended mortgage.\n      summary: Get a specific offer for a specific tranche\n      parameters:\n        - name: mortgageId\n          in: path\n          description: Uuid v4 of a specific expiring mortgage\n          example: 718934bb-aa8a-4917-a431-b64b844cacc3\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: offerId\n          in: path\n          description: Uuid v4 of a specific mortgage prolongation offer\n          example: 46eb482d-1e18-4b93-ae88-da14ad4ac051\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - $ref: '#/components/parameters/clientid_in_header'\n        - $ref: '#/components/parameters/correlation_in_header'\n        - $ref: '#/components/parameters/agent_in_header'\n      responses:\n        '200':\n          description: Specific offer for a specific expiring mortgage\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  offer:\n                    $ref: '#/components/schemas/Offer'\n          headers:\n            X-Correlation-ID:\n              schema:\n                type: string\n              description: Reflects the ID (set by the caller) from the request.\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n\n# -------------------------\n# -------- Models ---------\n# -------------------------\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-API-Key\n\n    OAuth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://example.com/oauth/authorize\n          tokenUrl: https://example.com/oauth/token\n          scopes:\n            read: Grants read access\n            write: Grants write access\n\n  schemas:\n    # ---- Common Data Model v1.2.0\n    # ---- Date Formats\n    Date:\n      type: string\n      format: date\n      example: 2018-04-13\n    DateTime:\n      type: string\n      format: date-time\n      example: 2018-04-13T11:11:11Z\n    # --------\n    # ---- Links for Pagination----\n    linksPagination:\n      description: Links (or cursors) returned in the answer of an API call.\n      type: object\n      properties:\n        self:\n          type: string\n          description: Link / cursor to the current result set (based on the submitted pagination approach)\n          example: /mortgage-app/api/v1/products?offset=75\u0026limit=25\n        first:\n          type: string\n          description: Link / cursor to the first result set (based on the submitted pagination approach)\n          example: /mortgage-app/api/v1/products?offset=0\u0026limit=25\n        previous:\n          type: string\n          description: Link / cursor to the previous result set (based on the submitted pagination approach)\n          example: /mortgage-app/api/v1/products?offset=50\u0026limit=25\n        next:\n          type: string\n          description: Link / cursor to the next result set (based on the submitted pagination approach)\n          example: /mortgage-app/api/v1/products?offset=100\u0026limit=25\n        last:\n          type: string\n          description: Link / cursor to the last result set (based on the submitted pagination approach)\n          example: /mortgage-app/api/v1/products?offset=150\u0026limit=25\n    # ---------\n    # ---- Currency ----\n    Currency:\n      description: ISO 4217 code\n      type: string\n      pattern: '[A-Z]{3}'\n      example: CHF\n    # ---------\n    # ---- Amount ----\n    Amount:\n      description: amount with currency\n      type: object\n      required:\n        - currency\n        - content\n      properties:\n        currency:\n          $ref: '#/components/schemas/Currency'\n        content:\n          description: amount given with fractional digits, the separator is a dot\n          type: string\n          pattern: '-?\\d{1,14}(?:\\.\\d{1,3})?'\n          example: 235.45\n    # --------\n    # ---- Address compliant to payment address (b.Link \u0026 ISO20022)----\n    structuredAddress:\n      title: Structured Address\n      type: object\n      required:\n        - streetName\n        - postCode\n        - townName\n        - country\n      properties:\n        streetName:\n          type: string\n          maxLength: 70\n          example: \"Rue de la gare\"\n        buildingNumber:\n          type: string\n          maxLength: 16\n          example: \"24\"\n        postCode:\n          type: string\n          maxLength: 16\n          example: \"2501\"\n        townName:\n          type: string\n          maxLength: 35\n          example: \"Biel\"\n        country:\n          type: string\n          maxLength: 2\n          example: \"CH\"\n    # -----------\n    # ---- Country Code ----\n    Country:\n      type: string\n      pattern: '[A-Z]{2}'\n      example: CH\n      description: 2-Letter ISO 3166-2 Country Code\n    # ------------\n    # ---- Error Response\n    commonErrorResponse:\n      title: Common Error Response\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/commonErrorType'\n        title:\n          type: string\n          example:\n            This is the general problem description\n        detail:\n          type: string\n          example:\n            Detailed problem description with respect to the current request\n        instance:\n          type: string\n          example:\n            path/to/corresponding/resource\n\n    commonErrorType:\n      title: Common Error Type\n      description: Error Types for commonErrorResponse.\n      type: string\n      enum:\n        - /problems/INVALID_PAYLOAD\n        - /problems/MALFORMED_PAYLOAD\n        - /problems/INVALID_TOKEN\n        - /problems/EXPIRED_TOKEN\n        - /problems/INSUFFICIENT_PRIVILEGES\n        - /problems/NO_ACCESS_TO_RESOURCE\n        - /problems/RESOURCE_DOES_NOT_EXIST\n        - /problems/RESOURCE_NOT_READY\n        - /problems/RESOURCE_TOO_LARGE\n        - /problems/WRONG_METHOD\n        - /problems/OPERATION_NOT_ALLOWED\n        - /problems/TECHNICAL_ERROR\n        - /problems/NOT_IMPLEMENTED\n        - /problems/SERVICE_UNAVAILABLE\n      example: '/problems/TECHNICAL_ERROR'\n    # ---- End Error Response\n    # ---- End Common Data Model\n\n    # ---- Property Object ----\n    PropertyObject:\n      description: The representation of a real estate object, real estate register id (propertyIdentifier) is optional until otherwise required by law\n      type: object\n      required:\n        - propertyObjectId\n        - address\n      properties:\n        propertyObjectId:\n          type: string\n          format: uuid\n          description: 'The property object identifier (UUID v4) defined by TPP.'\n          example: '9343dd26-4b54-4808-8978-538f8e869d0e'\n        name:\n          type: string\n          description: User-defined property name\n          example: My Nice Property\n        address:\n          $ref: '#/components/schemas/structuredAddress'\n        propertyIdentifier:\n          $ref: '#/components/schemas/PropertyIdentifier'\n        propertyConstructionInformation:\n          type: object\n          description: 'The property construction information.'\n          properties:\n            constructionYear:\n              type: integer\n              description: 'construction year'\n              example: 1990\n            renovation:\n              type: boolean\n              description: 'If the property is renovated true, else false.'\n              example: false\n            renovationYear:\n              type: integer\n              description: 'renovation year'\n              example: 1990\n              default: 0\n            minergieStandardType:\n              type: string\n              enum: [none, minergie, minergie-p, minergie-eco, minergie-p-eco]\n              description: 'The minergie standard'\n              example: 'minergie-p'\n            constructionQualityType:\n              $ref: '#/components/schemas/PropertyObjectRatingType'\n            stateBuildingType:\n              $ref: '#/components/schemas/PropertyObjectRatingType'\n        classOfProperty:\n          type: string\n          enum: [main_residence, main_residence_with_use_restriction, second_residence, second_residence_with_use_restriction, rented_property, rented_property_with_use_restriction, other]\n          description: 'The class of property (Main residence, second residence, rented).'\n          example: 'main_residence'\n        ceilingHight:\n          type: string\n          enum: [especially_high, middle, especially_low]\n          description: 'The ceiling hight in the rooms.'\n          example: 'middle'\n        buildingStandardFloorCoverings:\n          type: string\n          enum: [premium, highlevel, basic, lowlevel]\n          description: 'Building standard of the floor coverings.'\n          example: 'basic'\n        buildingStandardKitchen:\n          type: string\n          enum: [premium, highlevel, basic, lowlevel]\n          description: 'Building standard of the kitchen.'\n          example: 'basic'\n        buildingStandardBathroom:\n          type: string\n          enum: [premium, highlevel, basic, lowlevel]\n          description: 'Building standard of the sanitary installations.'\n          example: 'basic'\n        outsideConstructionZone:\n          type: boolean\n          description: 'If the property is outside of the construction zone.'\n          example: false\n        propertyElements:\n          type: object\n          description: 'The property detail information such as rooms count, parking places.'\n          properties:\n            numberOfRooms:\n              type: number\n              format: double\n              description: 'The number of the rooms.'\n              example: 4.5\n            roomCountType:\n              type: string\n              enum: [kitchen_not_counted, kitchen_half_room, kitchen_full_room]\n              description: 'Reflects the type of the room count type. E.g. if the kitchen counts as full room.'\n              example: kitchen_full_room\n            numberOfFamilyBathrooms:\n              type: integer\n              description: 'Separate shower and bathtub in the bathroom (optional: toilet)'\n              example: 2\n            numberOfBathWC:\n              type: integer\n              description: 'Bath or shower, sink, toilet'\n              example: 2\n            numberOfGuestWC:\n              type: integer\n              description: 'Separate, single toilet with wash basin'\n              example: 2\n            numberOfExternalParking:\n              type: integer\n              description: 'The number of external parking spaces.'\n              example: 2\n            numberOfSeparateGarages:\n              type: integer\n              description: 'The number of separated garages (covered parking spaces).'\n              example: 2\n            numberOfUndergroundCarParks:\n              type: integer\n              description: 'The number of underground parking places.'\n              example: 2\n        propertyFlatInformation:\n          type: object\n          description: 'The property flat information.'\n          properties:\n            numberOfFlats:\n              type: integer\n              description: 'The number of flats in the building.'\n              example: 10\n            numberOfFloors:\n              type: integer\n              description: 'The number of floors in the building.'\n              example: 4\n            stateApartmentType:\n              $ref: '#/components/schemas/PropertyObjectRatingType'\n            floor:\n              type: integer\n              description: 'The floor of the flat.'\n              example: 2\n            balconyOrTerraceArea:\n              type: integer\n              description: 'The area of the balcony or terrace in quatermeter.'\n              example: 20\n            livingSpace:\n              type: object\n              properties:\n                livingSpaceInSqm:\n                  type: integer\n                  description: 'The area of the living space in quatermeter.'\n                  example: 120\n                measurementStandard:\n                  type: string\n                  enum: [nla, gfa]\n                  description: 'The measurement standard used to determine the living space (nla or gfa).'\n                  example: 'nla'\n            multistorey:\n              type: boolean\n              description: 'If the flat is multistorey true, else false.'\n              example: false\n            otherFeatures:\n              type: array\n              items:\n                type: string\n                enum: [coowned_garden_terrace_room, coowned_indoor_pool, coowned_outdoor_pool, whirlpool_sauna, heated_conservatory, unheated_conservatory, security_system, chimney, elevator_in_stairwell, elevator_into_apartment, ventilation_system_without_mingergie, barrier-free_living, automated_building_control]\n                description: 'Additional features and services.'\n                example: 'coowned_outdoor_pool'\n            quote:\n              type: integer\n              description: 'The quote of the flat property against the whole building property.'\n              example: 120\n            apartmentType:\n              type: string\n              enum: [garden_flat, floor_flat, roof_flat, attic]\n              description: 'The type of the appartment (floor, garden level, storey).'\n              example: 'floor_flat'\n            buildingType:\n              type: string\n              enum: [multiple_family_house, terrace_house]\n              description: 'The type of the building (multiple_family_house, terrace_house).'\n              example: 'multiple_family_house'\n            locationInTheBuildingRating:\n              $ref: '#/components/schemas/PropertyObjectRatingType'\n        propertyBuildingInformation:\n          type: object\n          description: 'The property building information.'\n          properties:\n            livingSpace:\n              type: object\n              properties:\n                livingSpaceInSqm:\n                  type: integer\n                  description: 'The area of the living space in quatermeter.'\n                  example: 120\n                measurementStandard:\n                  type: string\n                  enum: [nla, gfa]\n                  description: 'The measurement standard used to determine the living space (nla or gfa).'\n                  example: 'nla'\n            roofFloorExpandable:\n              type: boolean\n              description: 'If the roof floor is expandable true, else false.'\n              example: false\n            volumeIncludingGarage:\n              type: integer\n              description: 'The volume of the house including the garage.'\n              example: 1500\n            landArea:\n              type: integer\n              description: 'The surface area of the land.'\n              example: 2000\n            otherFeatures:\n              type: array\n              items:\n                type: string\n                enum: [ventilation_system_without_mingergie, barrier-free_living, automated_building_control]\n                description: 'Additional features and services.'\n                example: 'outdoor_pool'\n            houseType:\n              type: string\n              enum: [detached_house, semidetached_house, row_house, row_corner_house, terrace_house]\n              description: 'The type of the house.'\n              example: 'detached_house'\n            normType:\n              type: string\n              enum: [building_insurance, sia116, sia416, other]\n              description: 'The norm type.'\n              example: 'building_insurance'\n        valueRelevantServitudes:\n          type: boolean\n          description: 'If the property has servitudes true, else false.'\n          example: false\n        buildingRight:\n          type: object\n          properties:\n            hasBuildingRight:\n              type: boolean\n              description: 'If the property is built in a building right true, else false.'\n              example: false\n            buildingRightExpiry:\n              $ref: '#/components/schemas/Date'\n              description: 'Date when the building right expires.'\n            buildingRightRent:\n              $ref: '#/components/schemas/Amount'\n              description: 'Yearly payment for the building right.'\n            buildingRightCompensation:\n              $ref: '#/components/schemas/Amount'\n              description: 'Payment received at the building right expiry.'\n        objectPrice:\n          $ref: '#/components/schemas/Amount'\n        estimation:\n          type: object\n          properties:\n            estimationSourceType:\n              type: string\n              example: iazi\n              enum:\n                - iazi\n                - wup\n            amount:\n              $ref: '#/components/schemas/Amount'\n            estimationDate:\n              $ref: '#/components/schemas/Date'\n        purchaseDate:\n          $ref: '#/components/schemas/Date'\n        remarks:\n          type: string\n    # ---------\n\n    # ---- Property Identifier ----\n    PropertyIdentifier:\n      description: Property identification (register of real estate)\n      type: object\n      properties:\n        EGRID:\n          type: string\n        EGID:\n          type: string\n    # ---------\n\n    # ---- Mortgage ----\n    Mortgage:\n      description: All relevant information regarding a specific mortgage\n      type: object\n      required:\n        - mortgageId\n        - product\n        - amountAtExpiry\n        - validFrom\n        - validTo\n        - interestRate\n        - interestRateType\n        - interestBasis\n        - durationType\n        - prolongable\n        - propertyObjects\n      properties:\n        mortgageId:\n          type: string\n          format: uuid\n          example: 206065b9-977b-4d2c-9092-00acf2392346\n          description: Uuid v4 of the specific mortgage\n        product:\n          $ref: '#/components/schemas/Product'\n        amountAtExpiry:\n          $ref: '#/components/schemas/Amount'\n        amountToday:\n          $ref: '#/components/schemas/Amount'\n        validFrom:\n          $ref: '#/components/schemas/Date'\n        validTo:\n          $ref: '#/components/schemas/Date'\n        interestRate:\n          type: string\n        interestRateType:\n          type: string\n          example: libor\n          enum:\n            - variable\n            - libor\n            - saron\n            - fixed\n        interestBasis:\n          type: string\n        durationType:\n          type: integer\n          example: 10\n          minimum: 1\n          maximum: 20\n        prolongable:\n          type: boolean\n        propertyObjects:\n          type: array\n          items:\n            $ref: '#/components/schemas/PropertyObject'\n        relatedMortgages:\n          type: array\n          items:\n            $ref: '#/components/schemas/Mortgage'\n    # ---------\n\n    # ---- Mortgage Offer ----\n    Offer:\n      description: All relevant details describing the FI's offer for a mortgage product\n      type: object\n      required:\n        - offerId\n        - financingRequestId\n        - totalAmount\n        - validTo\n        - offerItems\n      properties:\n        offerId:\n          type: string\n          format: uuid\n          example: 46eb482d-1e18-4b93-ae88-da14ad4ac051\n          description: Uuid v4 of the specific order\n        financingRequestId:\n          type: string\n          format: uuid\n          example: fd3f2940-c9c9-46e7-8ed6-ab9e90363b2e\n          description: Uuid v4 of a specific financing request\n        totalAmount:\n          $ref: '#/components/schemas/Amount'\n        validTo:\n          $ref: '#/components/schemas/Date'\n        offerItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/OfferItem'\n        offerType:\n          type: string\n          enum:\n            - binding\n            - indicative\n\n    # ---------\n\n    # ---- Mortgage Offer Item ----\n    OfferItem:\n      description: All relevant details of a specific item being part of an FI's offer for a mortgage product\n      type: object\n      required:\n        - offerItemId\n        - product\n        - trancheId\n      properties:\n        trancheId:\n          type: string\n          format: uuid\n          description: Uuid of the tranche\n          example: 51b017e1-5e59-4b58-a0a0-c638c87db463\n        offerItemId:\n          type: string\n          format: uuid\n          example: d452083f-8316-410d-a609-d49463687329\n          description: Uuid v4 of the specific offer item\n        product:\n          $ref: '#/components/schemas/Product'\n        conditions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Condition'\n    # ---------\n\n    # ---- Mortgage Product Variation\n    ProductVariation:\n      description: Product variation details\n      type: object\n      properties:\n        duration:\n          type: integer\n          format: int32\n          description: 'The duration in years.'\n          minimum: 1\n          maximum: 20\n          example: 5\n        rate:\n          type: number\n          format: double\n          description: 'The interest rate.'\n          minimum: 0\n          maximum: 1\n          example: 0.5\n        saronperiod:\n          type: string\n          description: 'The saron period.'\n          example: 3m\n          enum:\n            - 1m\n            - 3m\n            - 6m\n            - 12m\n    # ---------\n\n    # ---- Mortgage Product ----\n    Product:\n      description: All details regarding an FI's mortgage product\n      type: object\n      required:\n        - productId\n        - names\n        - interestRateType\n      properties:\n        productId:\n          type: string\n          format: uuid\n          description: 'The product identifier (UUID v4).'\n          example: '20460121-6aff-485b-a61d-6056ecd72bd8'\n        names:\n          type: array\n          items:\n            type: object\n            properties:\n              description:\n                type: string\n                description: 'Product name description'\n                example: \"Fixed rate mortgage\"\n              language:\n                type: string\n                description: 'Language of product name'\n                example: fr\n                enum:\n                  - de\n                  - fr\n                  - it\n                  - en\n        productVariations:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductVariation'\n        interestRateType:\n          type: string\n          example: libor\n          enum:\n            - variable\n            - libor\n            - saron\n            - fixed\n        # ---------\n\n    # ---- Mortgage Product Condition ----\n    Condition:\n      description: All details regarding the conditions for a specific mortgage product the FI offers\n      type: object\n      required:\n        - conditionId\n        - productIdRef\n        - duration\n        - maturityDate\n        - interest\n        - amountRange\n        - increment\n      properties:\n        conditionId:\n          type: string\n          format: uuid\n          example: ef737eb0-c0a7-4f44-bdeb-32ba9bd99327\n        productIdRef:\n          type: string\n          format: uuid\n          example: 0b34cd1b-32a5-4bb7-bcc5-bf81f8f8aaf1\n        duration:\n          type: string\n        maturityDate:\n          $ref: '#/components/schemas/Date'\n        interest:\n          $ref: '#/components/schemas/Interest'\n        amountRange:\n          $ref: '#/components/schemas/AmountRange'\n        increment:\n          type: integer\n    # ---------\n\n    # ---- Party ----\n    Party:\n      description: Links together the persons building the applicant party\n      type: object\n      required:\n        - personList\n      properties:\n        primaryApplicantId:\n          type: string\n          format: uuid\n          description: ApplicantId for primary applicant of the applicant party. In case of multiple applicants this field is mandatory.\n          example: 576f8de3-6b30-4882-a7af-da2132a456cf\n        personList:\n          type: array\n          items:\n            $ref: '#/components/schemas/Applicant'\n    # ---------\n\n    # ---- Application ----\n    Application:\n      description: All static application information needed by the FI to create binding offers\n      type: object\n      required:\n        - mortgageType\n        - requestingParty\n        - propertyInformation\n      properties:\n        applicationId:\n          type: string\n          format: uuid\n          description: 'The application identifier (UUID v4) defined by FI.'\n          example: 'f157c4be-106d-4304-972e-091e77b87e1c'\n        tppApplicationId:\n          type: string\n          description: 'The application alphanumeric identifier defined by TPP'\n          pattern: '^[a-zA-Z0-9]{6,10}$'\n          example: 'asd23f'\n        requestingParty:\n          $ref: '#/components/schemas/Party'\n        propertyInformation:\n          $ref: '#/components/schemas/PropertyObject'\n        mortgageType:\n          type: string\n          description: 'Type of business, Values: buy, replacement.'\n          example: buy\n          enum:\n            - buy\n            - replacement\n        replacementType:\n          type: string\n          description: 'NOT required when mortgage type is BUY, Values: entire, partial.'\n          example: 'entire'\n          enum:\n            - entire\n            - partial\n        tppAdvisorDetail:\n          type: object\n          properties:\n            name:\n              type: string\n              maxLength: 70\n              description: Name of the TPP advisor\n              example: Muster\n            surName:\n              type: string\n              maxLength: 70\n              description: Surname of the TPP advisor\n              example: Max\n            email:\n              type: string\n              description: Email of the TPP advisor\n              example: max.muster@domain.ch\n            language:\n              type: string\n              example: fr\n              description: Preferred contact language of the applicant\n              enum:\n                - de\n                - fr\n                - it\n                - en\n            phone:\n              type: string\n              description: phone of the TPP advisor\n              example: '+41443343456'\n            address:\n              $ref: '#/components/schemas/structuredAddress'\n\n    # ---------\n\n    # ---- Financing Request ----\n    FinancingRequest:\n      description: Based on the application, several financing requests can be sent to the FI\n      type: object\n      required:\n        - applicationId\n        - amount\n      properties:\n        financingRequestId:\n          type: string\n          format: uuid\n          example: 2e1d21c3-0cd5-4354-a9e9-d2eb2c28b780\n          description: Uuid v4 of the financing request defined by FI\n        applicationId:\n          type: string\n          format: uuid\n          example: 3c921870-f29c-46ad-9ba5-c8b05e0d88d2\n          description: Uuid v4 of the corresponding application\n        amount:\n          $ref: '#/components/schemas/Amount'\n        tranches:\n          type: array\n          items:\n            type: object\n            properties:\n              trancheId:\n                type: string\n                format: uuid\n                description: Uuid of the tranche\n                example: 51b017e1-5e59-4b58-a0a0-c638c87db463\n              productId:\n                type: string\n                format: uuid\n                description: Uuid of the product\n                example: 6e61ff5d-3ffd-4254-a77d-73cc25d35e92\n              productVariation:\n                $ref: '#/components/schemas/ProductVariation'\n              payOutDate:\n                $ref: '#/components/schemas/Date'\n              amount:\n                $ref: '#/components/schemas/Amount'\n        usedAssets:\n          type: array\n          items:\n            $ref: '#/components/schemas/UsedAsset'\n        publicCertDate:\n          $ref: '#/components/schemas/Date'\n    # ---------\n\n    # ---- Applicant ----\n    Applicant:\n      description: Applicant information needed by the FI for creating a binding offer.\n      type: object\n      required:\n        - applicantId\n        - applicantType\n        - applicantDetail\n      properties:\n        applicantId:\n          type: string\n          format: uuid\n          description: UUID v4 of the applicant (to be defined by TPP)\n          example: 576f8de3-6b30-4882-a7af-da2132a456cf\n        applicantType:\n          type: string\n          example: individual\n          enum:\n            - individual\n            - legal_entity\n        applicantDetail:\n          type: object\n          properties:\n            name:\n              type: string\n              maxLength: 70\n              description: Name of the applicant\n              example: Muster\n            surName:\n              type: string\n              maxLength: 70\n              description: Surname of the applicant\n              example: Max\n            address:\n              $ref: '#/components/schemas/structuredAddress'\n            birthDate:\n              $ref: '#/components/schemas/Date'\n            maritalStatus:\n              type: string\n              example: married\n              description: Martial status of the applicant\n              enum:\n                - unmarried\n                - married\n                - divorced\n                - widowed\n                - registered-partnership\n            matrimonialPropertyScheme:\n              type: string\n              example: separateEstate\n              enum:\n                - jointEstate\n                - separateEstate\n                - contributionToJointlyAcquiredProperty\n            jobSituation:\n              type: string\n              example: employed\n              description: Job situation of the applicant\n              enum:\n                - employed\n                - selfEmployed\n                - unemployed\n                - retired\n            nationality:\n              $ref: '#/components/schemas/Country'\n            USPerson:\n              type: boolean\n              description: Is the applicant a US person?\n              example: false\n            email:\n              type: string\n              description: Email of the applicant\n              example: max.muster@domain.ch\n            applicantLanguage:\n              type: string\n              example: fr\n              description: Preferred contact language of the applicant\n              enum:\n                - de\n                - fr\n                - it\n                - en\n            gender:\n              type: string\n              enum:\n                - male\n                - female\n                - other\n              example: female\n              description: Gender of the applicant.\n        financialSituation:\n          type: object\n          properties:\n            income:\n              type: array\n              items:\n                type: object\n                properties:\n                  incomeType:\n                    $ref: '#/components/schemas/IncomeType'\n                  amount:\n                    $ref: '#/components/schemas/Amount'\n                  remark:\n                    type: string\n            liabilities:\n              type: array\n              items:\n                type: object\n                properties:\n                  liabilityType:\n                    type: string\n                    example: mortgage\n                    description: Liability type\n                    enum:\n                      - leasing\n                      - alimony\n                      - mortgage\n                      - other\n                  amount:\n                    $ref: '#/components/schemas/Amount'\n                  remark:\n                    type: string\n            assets:\n              type: array\n              items:\n                $ref: '#/components/schemas/Asset'\n    # ---------\n\n    # ---- Mortgage data types ----\n    PropertyObjectRatingType:\n      type: string\n      enum: [bad, bad-medium, medium, medium-good, good, good-verygood, verygood]\n      description: 'The rating type.'\n      example: 'good'\n    CommonID:\n      description: \"The unique identifier UUID v4 specified by RFC4122.\"\n      type: string\n      format: uuid\n      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6\n    AssetType:\n      description: Common set of asset types.\n      type: string\n      example: cash\n      enum:\n        - cash\n        - gift\n        - reservation_deposit\n        - advancement_of_inheritance\n        - third_pillar\n        - pension_fund\n        - third_party_loan\n        - third_pillar_fund\n        - fungible_investments\n        - other\n        - vested_benefit\n        - life_insurance_3a\n        - life_insurance_3b\n    AssetUsageType:\n      description: Common set of asset usage types.\n      type: string\n      example: pledged\n      enum:\n        - pledged\n        - withdraw\n    Asset:\n      description: Asset information.\n      type: object\n      required:\n        - assetType\n        - amount\n      properties:\n        assetType:\n          $ref: '#/components/schemas/AssetType'\n        amount:\n          $ref: '#/components/schemas/Amount'\n        remark:\n          type: string\n        assetProvider:\n          $ref: '#/components/schemas/AssetProvider'\n    UsedAsset:\n      description: Asset used by an applicant.\n      type: object\n      required:\n        - assetType\n        - amount\n        - applicantId\n      properties:\n        assetType:\n          $ref: '#/components/schemas/AssetType'\n        amount:\n          $ref: '#/components/schemas/Amount'\n        usageType:\n          $ref: '#/components/schemas/AssetUsageType'\n        applicantId:\n          type: string\n          format: uuid\n          description: UUID v4 of the applicant (existing applicant within the current application)\n          example: 576f8de3-6b30-4882-a7af-da2132a456cf\n        assetProvider:\n          $ref: '#/components/schemas/AssetProvider'\n    IncomeType:\n      description: Common set of income types.\n        For the enum value self_employment and dividend the 3 years avg is relevant.\n      type: string\n      example: employment_gross\n      enum:\n        - employment_gross\n        - employment_net\n        - self_employment\n        - self_employment_year-1\n        - self_employment_year-2\n        - self_employment_year-3\n        - bonus_year-1\n        - bonus_year-2\n        - bonus_year-3\n        - additional_income\n        - child_allowance\n        - asset_consumption_before_retirement\n        - pension_fund_income\n        - ahv_income\n        - further_income_after_retirement\n        - asset_consumption_after_retirement\n        - fixed_expenses\n        - dividend\n    DocumentType:\n      description: All supported document types.\n        For the enum value tax_statement. Tax statement is required.\n      type: string\n      example: tax_statement\n      enum:\n        - cash\n        - gift\n        - reservation_deposit\n        - advancement_of_inheritance\n        - third_pillar\n        - pension_fund\n        - third_party_loan\n        - third_pillar_fund\n        - fungible_investments\n        - vested_benefit\n        - life_insurance_3a\n        - life_insurance_3b\n        - tax_statement\n        - lending_of_third_party_property\n        - employment\n        - self_employment\n        - additional_income\n        - pension_fund_income\n        - ahv_income\n        - fixed_expenses\n        - dividend\n        - publicly_notarized_purchase_contract\n        - draft_purchase_contract\n        - land_register_extract\n        - official_estimation\n        - building_insurance_certificate\n        - professional_estimation\n        - real_estate_documentation\n        - situation_cadastral_plan\n        - floor_plan\n        - property_pictures_outside\n        - property_pictures_inside\n        - proof_of_interest\n        - easements_contracts\n        - owner_association\n        - contract_for_the_establishment\n        - mortgage_note\n        - mortgage_note_erection\n        - salary_certificate_month\n        - salary_certificate_year\n        - consent_form\n        - debt_information\n        - divorce_copy\n        - building_plan\n        - survey_copy\n        - cubical_calculation\n        - other\n    # ---------\n\n    # ---- Order ----\n    Order:\n      description: All information needed to choose a specific offer and place a binding order.\n      type: object\n      required:\n        - offerId\n      properties:\n        orderId:\n          type: string\n          format: uuid\n          example: 6faea0b8-26a2-4b17-b10f-8f56fe355f50\n          description: Uuid v4 of the order defined by FI\n        offerId:\n          type: string\n          format: uuid\n          example: 2752ce81-5bf0-4991-89ac-87d6e7fd0c47\n        mortgageId:\n          type: string\n          format: uuid\n          example: ef25ce8b-2fb1-45d9-bae0-6f263241a280\n        applicationId:\n          type: string\n          format: uuid\n          example: 59e8c8a6-4d32-4e7b-bcf0-05813029498e\n        validateOnly:\n          type: boolean\n          description: The order will not be persistent in the FI backend.\n          example: true\n        remark:\n          type: string\n          example: All documents verified at TPP\n          description: Remark/comment which can be added by TPP\n\n    # ---------\n\n    # ---- Document ----\n    Document:\n      description: Document containing information for givent document type for given order.\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          example: MortgageOffer_WaimerANON_587b23d1-12a8-475a-968b-abee245e3393\n          description: Name of the document\n        parentId:\n          type: string\n          format: uuid\n          example: 2752ce81-5bf0-4991-89ac-87d6e7fd0c47\n          description: Id for parent object of given document\n        content:\n          type: string\n          description: base64 Encoded Content\n          example: JVBERi0xLjQKJeLjz9MKMzEgMCBvYmoKPDwvQnl0ZVJhbmdl\n        contentType:\n          type: string\n          description: Content type\n          example: application/octet-stream\n        createDate:\n          $ref: '#/components/schemas/Date'\n        modifyDate:\n          $ref: '#/components/schemas/Date'\n    # ---------\n    # ---- AssetProvider ----\n    AssetProvider:\n      description: Asset provider for each asset, additional information must be transfered. E.g. in case the applicant owns an addtional security of type insurance, insurance company name is provided\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          example: Credit Suisse\n          description: Name of the asset provider\n    # ---------\n\n    # ---- AmountRange ----\n    AmountRange:\n      description: Min and max amount with currency\n      type: object\n      required:\n        - currency\n        - minContent\n        - maxContent\n      properties:\n        currency:\n          $ref: '#/components/schemas/Currency'\n        minContent:\n          description: min amount given with fractional digits, the separator is a dot\n          type: string\n          pattern: '-?\\d{1,14}(?:\\.\\d{1,3})?'\n          example: 1000000\n        maxContent:\n          description: max amount given with fractional digits, the separator is a dot\n          type: string\n          pattern: '-?\\d{1,14}(?:\\.\\d{1,3})?'\n          example: 5000000\n    # ---------\n\n    # ---- Interest ----\n    Interest:\n      description: The current rate and optionally the referred base\n      type: object\n      required:\n        - currentRate\n      properties:\n        currentRate:\n          type: number\n          format: double\n          description: 'Interest reate in decimals. 2.45% would be sent as 0.0245. For flexible interest mortgage this would show the margin above interest.Base'\n          minimum: 0\n          maximum: 1\n          example: 0.5\n        base:\n          type: number\n          format: double\n          description: 'Base rate uupon margin is applied (e.g. for SARON).'\n          minimum: 0\n          maximum: 1\n          example: 0.5\n    # ---------\n\n  # ---- Global Common Header Parameters ----\n  parameters:\n    clientid_in_header:\n      in: header\n      name: X-CorAPI-Client-ID\n      schema:\n        type: string\n      description: 'ID of the client forwarded to the provider. (SCOPE: FI)'\n      required: true\n    correlation_in_header:\n      in: header\n      name: X-Correlation-ID\n      schema:\n        type: string\n      description: Unique ID (defined by the caller) which will be reflected back in the response.\n      required: true\n    agent_in_header:\n      in: header\n      name: User-Agent\n      schema:\n        type: string\n      description: Name and version of the of the Client software\n      required: true\n    offset:\n      name: offset\n      in: query\n      description: Optional parameter for pagination. The number of items to skip before starting to collect the result set.\n      required: false\n      schema:\n        type: integer\n        format: int32\n        example: 25\n        minimum: 0\n    limit:\n      name: limit\n      in: query\n      description: Optional parameter for pagination. Maximum number of entries to be returned.\n      required: false\n      schema:\n        type: integer\n        format: int32\n        example: 25\n        minimum: 1\n    cursor:\n      name: cursor\n      in: query\n      description: Optional parameter for pagination. An opaque string value used for pagination.\n      required: false\n      schema:\n        type: string\n        example: cursorIDxyz\n  # ---- Responses - Standard Errors Common Data Model v1.2.2----\n  responses:\n    standard400:\n      headers:\n        Content-Type:\n          schema:\n            type: string\n            description: 'application/problem+json; charset=utf-8 according to RFC7807'\n            example: application/problem+json\n        Content-Language:\n          schema:\n            type: string\n            description: 'Response language - always en'\n            example: en\n        X-Correlation-ID:\n          schema:\n            type: string\n            description: Client defined ID from request to correlates HTTP requests between a client and server.\n            example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      description: Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed request syntax.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/commonErrorResponse'\n    standard401:\n      headers:\n        Content-Type:\n          schema:\n            type: string\n            description: 'application/problem+json; charset=utf-8 according to RFC7807'\n            example: application/problem+json\n        Content-Language:\n          schema:\n            type: string\n            description: 'Response language - always en'\n            example: en\n        X-Correlation-ID:\n          schema:\n            type: string\n            description: Client defined ID from request to correlates HTTP requests between a client and server.\n            example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      description: Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/commonErrorResponse'\n    standard403:\n      headers:\n        Content-Type:\n          schema:\n            type: string\n            description: 'application/problem+json; charset=utf-8 according to RFC7807'\n            example: application/problem+json\n        Content-Language:\n          schema:\n            type: string\n            description: 'Response language - always en'\n            example: en\n        X-Correlation-ID:\n          schema:\n            type: string\n            description: Client defined ID from request to correlates HTTP requests between a client and server.\n            example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      description: Forbidden - The server understood the request but refuses to authorize it.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/commonErrorResponse'\n    standard404:\n      headers:\n        Content-Type:\n          schema:\n            type: string\n            description: 'application/problem+json; charset=utf-8 according to RFC7807'\n            example: application/problem+json\n        Content-Language:\n          schema:\n            type: string\n            description: 'Response language - always en'\n            example: en\n        X-Correlation-ID:\n          schema:\n            type: string\n            description: Client defined ID from request to correlates HTTP requests between a client and server.\n            example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      description: Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/commonErrorResponse'\n    standard405:\n      headers:\n        Content-Type:\n          schema:\n            type: string\n            description: 'application/problem+json; charset=utf-8 according to RFC7807'\n            example: application/problem+json\n        Content-Language:\n          schema:\n            type: string\n            description: 'Response language - always en'\n            example: en\n        X-Correlation-ID:\n          schema:\n            type: string\n            description: Client defined ID from request to correlates HTTP requests between a client and server.\n            example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      description: Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/commonErrorResponse'\n    standard500:\n      headers:\n        Content-Type:\n          schema:\n            type: string\n            description: 'application/problem+json; charset=utf-8 according to RFC7807'\n            example: application/problem+json\n        Content-Language:\n          schema:\n            type: string\n            description: 'Response language - always en'\n            example: en\n        X-Correlation-ID:\n          schema:\n            type: string\n            description: Client defined ID from request to correlates HTTP requests between a client and server.\n            example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      description: Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/commonErrorResponse'\n    standard501:\n      headers:\n        Content-Type:\n          schema:\n            type: string\n            description: 'application/problem+json; charset=utf-8 according to RFC7807'\n            example: application/problem+json\n        Content-Language:\n          schema:\n            type: string\n            description: 'Response language - always en'\n            example: en\n        X-Correlation-ID:\n          schema:\n            type: string\n            description: Client defined ID from request to correlates HTTP requests between a client and server.\n            example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      description: Not Implemented - The server does not support the functionality required to fulfill the request.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/commonErrorResponse'\n    standard503:\n      headers:\n        Content-Type:\n          schema:\n            type: string\n            description: 'application/problem+json; charset=utf-8 according to RFC7807'\n            example: application/problem+json\n        Content-Language:\n          schema:\n            type: string\n            description: 'Response language - always en'\n            example: en\n        X-Correlation-ID:\n          schema:\n            type: string\n            description: Client defined ID from request to correlates HTTP requests between a client and server.\n            example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      description: Service Unavailable. The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/commonErrorResponse'\n  # ---- End Responses - Standard Errors",
			"canonicalURL": "/github.com/swissfintechinnovations/common-API@411f559625d224664dcc971e6637429d227e79b4/-/blob/mortgageAPI.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/swissfintechinnovations/common-API/blob/411f559625d224664dcc971e6637429d227e79b4/mortgageAPI.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/mortgages/{mortgageId}/offers\": get: responses: 400: contents: unsupported content types: [application/problem+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}