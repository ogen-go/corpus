{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stargate/docs"
		},
		"file": {
			"name": "StargateRESTv2.yaml",
			"size": 0,
			"path": "api/StargateRESTv2.yaml",
			"byteSize": 40571,
			"content": "openapi: 3.0.1\ninfo:\n  title: Stargate REST API reference\n  description: \"The Stargate REST API provides CRUD operations on table data managed by Stargate. Keep in mind that you will need information for the server ({databaseId} and {region}) for all of these operations.\"\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 2.0.0\nservers:\n  - url: https://localhost:8082\n    description: \"Change the port if required.\"\nexternalDocs:\n  description: Reference Document\n  url: http://shorturl.at/hnqIQ\ntags:\n  - name: Auth\n    description: \"The Auth API allows you to create an authorization token to connect to your database.\"\n  - name: Schemas\n    description: \"The Schema API allows you to interact with keyspaces and tables in your database\"\n  - name: Data\n    description: \"The Data API allows you to add, update, and delete rows in your database\"\npaths:\n  /v1/auth:\n    servers:\n      - url: https://localhost:8081\n    post:\n      tags:\n        - Auth\n      summary: Create an authorization token\n      description: Create an authorization token.\n      operationId: createToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Credentials\"\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthTokenResponse'\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v2/schemas/keyspaces:\n    get:\n      tags:\n        - Schemas\n      summary: Get all keyspaces\n      description: \"Retrieve all available keyspaces in the specific database.\"\n      operationId: getAllKeyspaces\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Keyspace\"\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n    post:\n      tags:\n        - Schemas\n      summary: Create a keyspace\n      operationId: createKeyspace\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n      requestBody:\n        description: \"\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Keyspace\"\n      responses:\n        201:\n          description: resource created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        409:\n          $ref: \"#/components/responses/409\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v2/schemas/keyspaces/{keyspace-id}:\n    get:\n      tags:\n        - Schemas\n      summary: Get a keyspace using the {keyspace-id}\n      operationId: getKeyspace\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Keyspace\"\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        404:\n          $ref: \"#/components/responses/404\"\n        500:\n          $ref: \"#/components/responses/500\"\n    delete:\n      tags:\n        - Schemas\n      summary: Delete a keyspace\n      operationId: deleteKeyspace\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n      responses:\n        204:\n          description: No Content\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v2/schemas/keyspaces/{keyspace-id}/tables:\n    post:\n      tags:\n        - Schemas\n      summary: Create a table\n      operationId: createTable\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n      requestBody:\n        description: \"\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TableAdd\"\n      responses:\n        201:\n          description: resource created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        409:\n          $ref: \"#/components/responses/409\"\n        500:\n          $ref: \"#/components/responses/500\"\n    get:\n      tags:\n        - Schemas\n      summary: Get all tables\n      operationId: getTables\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Table\"\n        401:\n          $ref: \"#/components/responses/401\"\n        404:\n          $ref: \"#/components/responses/404\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v2/schemas/keyspaces/{keyspace-id}/tables/{table-id}:\n    get:\n      tags:\n        - Schemas\n      summary: Get a table\n      operationId: getTable\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Table\"\n        401:\n          $ref: \"#/components/responses/401\"\n        404:\n          $ref: \"#/components/responses/404\"\n        500:\n          $ref: \"#/components/responses/500\"\n    put:\n      tags:\n        - Schemas\n      summary: Replace a table definition (table options only)\n      operationId: replaceTable\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n      requestBody:\n        description: \"\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TableAdd\"\n      responses:\n        200:\n          description: resource updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        404:\n          $ref: \"#/components/responses/404\"\n        409:\n          $ref: \"#/components/responses/409\"\n        500:\n          $ref: \"#/components/responses/500\"\n    delete:\n      tags:\n        - Schemas\n      summary: Delete a table\n      operationId: deleteTable\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n      responses:\n        204:\n          description: No Content\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v2/schemas/keyspaces/{keyspace-id}/tables/{table-id}/columns:\n    get:\n      tags:\n        - Schemas\n      summary: List columns\n      operationId: getColumns\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/ColumnDefinition\"\n        401:\n          $ref: \"#/components/responses/401\"\n        404:\n          $ref: \"#/components/responses/404\"\n        500:\n          $ref: \"#/components/responses/500\"\n    post:\n      tags:\n        - Schemas\n      summary: Create a column\n      operationId: createColumn\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n      requestBody:\n        description: \"\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ColumnDefinition\"\n      responses:\n        201:\n          description: resource created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        409:\n          $ref: \"#/components/responses/409\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v2/schemas/keyspaces/{keyspace-id}/tables/{table-id}/columns/{column-id}:\n    get:\n      tags:\n        - Schemas\n      summary: Get a column\n      operationId: getColumn\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n        - $ref: \"#/components/parameters/column-id\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ColumnDefinition\"\n        401:\n          $ref: \"#/components/responses/401\"\n        404:\n          $ref: \"#/components/responses/404\"\n        500:\n          $ref: \"#/components/responses/500\"\n    put:\n      tags:\n        - Schemas\n      summary: Replace a column definition\n      operationId: replaceColumn\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n        - $ref: \"#/components/parameters/column-id\"\n      requestBody:\n        description: \"\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ColumnDefinition\"\n      responses:\n        200:\n          description: resource updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        404:\n          $ref: \"#/components/responses/404\"\n        409:\n          $ref: \"#/components/responses/409\"\n        500:\n          $ref: \"#/components/responses/500\"\n    delete:\n      tags:\n        - Schemas\n      summary: Delete a column\n      operationId: deleteColumn\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n        - $ref: \"#/components/parameters/column-id\"\n      responses:\n        204:\n          description: No Content\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v2/schemas/keyspaces/{keyspace-id}/tables/{table-id}/indexes:\n    get:\n      tags:\n        - Schemas\n      summary: List indexes for a given table\n      operationId: getIndexes\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/IndexResponse\"\n        401:\n          $ref: \"#/components/responses/401\"\n        404:\n          $ref: \"#/components/responses/404\"\n        500:\n          $ref: \"#/components/responses/500\"\n    post:\n      tags:\n        - Schemas\n      summary: Create an index\n      operationId: createIndex\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n      requestBody:\n        description: \"\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IndexDefinition\"\n      responses:\n        201:\n          description: resource created\n          content:\n            application/json:\n              schema:\n                type: string\n                example: {\"success\": true}\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        409:\n          $ref: \"#/components/responses/409\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v2/schemas/keyspaces/{keyspace-id}/tables/{table-id}/indexes/{index-id}:\n    delete:\n      tags:\n        - Schemas\n      summary: Delete an index\n      operationId: deleteIndex\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n        - $ref: \"#/components/parameters/index-id\"\n      responses:\n        204:\n          description: No Content\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v2/schemas/keyspaces/{keyspace-id}/types:\n    get:\n      tags:\n      - Schemas\n      summary: List types\n      operationId: getTypes\n      parameters:\n      - $ref: \"#/components/parameters/X-Cassandra-Token\"\n      - $ref: \"#/components/parameters/keyspace-id\"\n      - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/TypeResponse\"\n        401:\n          $ref: \"#/components/responses/401\"\n        404:\n          $ref: \"#/components/responses/404\"\n        500:\n          $ref: \"#/components/responses/500\"\n    post:\n      tags:\n      - Schemas\n      summary: Create Type\n      operationId: createType\n      parameters:\n      - $ref: \"#/components/parameters/X-Cassandra-Token\"\n      - $ref: \"#/components/parameters/keyspace-id\"\n      requestBody:\n        description: \"\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TypeAdd\"\n      responses:\n        201:\n          description: resource created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        409:\n          $ref: \"#/components/responses/409\"\n        500:\n          $ref: \"#/components/responses/500\"\n    put:\n      tags:\n      - Schemas\n      summary: Update a type\n      operationId: updateType\n      parameters:\n      - $ref: \"#/components/parameters/X-Cassandra-Token\"\n      - $ref: \"#/components/parameters/keyspace-id\"\n      requestBody:\n        description: \"\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TypeUpdate\"\n      responses:\n        204:\n          description: No Content\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v2/schemas/keyspaces/{keyspace-id}/types/{type-id}:\n    get:\n      tags:\n      - Schemas\n      summary: Get a type\n      operationId: getType\n      parameters:\n      - $ref: \"#/components/parameters/X-Cassandra-Token\"\n      - $ref: \"#/components/parameters/keyspace-id\"\n      - $ref: \"#/components/parameters/type-id\"\n      - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TypeResponse\"\n        401:\n          $ref: \"#/components/responses/401\"\n        404:\n          $ref: \"#/components/responses/404\"\n        500:\n          $ref: \"#/components/responses/500\"\n    delete:\n      tags:\n      - Schemas\n      summary: Delete a type\n      operationId: deleteType\n      parameters:\n      - $ref: \"#/components/parameters/X-Cassandra-Token\"\n      - $ref: \"#/components/parameters/keyspace-id\"\n      - $ref: \"#/components/parameters/type-id\"\n      responses:\n        204:\n          description: No Content\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v2/keyspaces/{keyspace-id}/{table-id}:\n    get:\n      tags:\n        - Data\n      summary: Search a table\n      operationId: searchTable\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n        - $ref: \"#/components/parameters/where\"\n        - $ref: \"#/components/parameters/fields\"\n        - $ref: \"#/components/parameters/page-size\"\n        - $ref: \"#/components/parameters/page-state\"\n        - $ref: \"#/components/parameters/sort\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      additionalProperties:\n                        type: string\n                  count:\n                    type: integer\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n# ERROR Add Rows isn't working\n    post:\n      tags:\n        - Data\n      summary: Add rows\n      operationId: addRows\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties:\n                type: string\n              example:\n                pk: e73c77ec-002d-457a-8b65-8ce7cfb15fc7\n                age: \"30\"\n                name: John\n      responses:\n        201:\n          description: resource created\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: string\n                example:\n                  pk: e73c77ec-002d-457a-8b65-8ce7cfb15fc7\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        409:\n          $ref: \"#/components/responses/409\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v2/keyspaces/{keyspace-id}/{table-id}/{primary-key}:\n    get:\n      tags:\n        - Data\n      summary: Get a row by primary key\n      operationId: getRows\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n        - $ref: \"#/components/parameters/primary-key\"\n        - $ref: \"#/components/parameters/fields\"\n        - $ref: \"#/components/parameters/page-size\"\n        - $ref: \"#/components/parameters/page-state\"\n        - $ref: \"#/components/parameters/sort\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      additionalProperties:\n                        type: string\n                  count:\n                    type: integer\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n    put:\n      tags:\n        - Data\n      summary: Replace a row by primary key\n      operationId: replaceRows\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n        - $ref: \"#/components/parameters/primary-key\"\n        - $ref: \"#/components/parameters/raw\"\n      requestBody:\n        description: document\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties:\n                type: string\n              example:\n                pk: e73c77ec-002d-457a-8b65-8ce7cfb15fc7\n                age: \"30\"\n                name: John\n      responses:\n        200:\n          description: resource updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: object\n                    additionalProperties:\n                      type: string\n                    example:\n                      pk: e73c77ec-002d-457a-8b65-8ce7cfb15fc7\n                      age: \"30\"\n                      name: John\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n    patch:\n      tags:\n        - Data\n      summary: Update a row by primary key\n      operationId: updateRows\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n        - $ref: \"#/components/parameters/primary-key\"\n        - $ref: \"#/components/parameters/raw\"\n      requestBody:\n        description: document\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties:\n                type: string\n              example:\n                pk: e73c77ec-002d-457a-8b65-8ce7cfb15fc7\n                age: \"30\"\n                name: John\n      responses:\n        200:\n          description: resource updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: object\n                    additionalProperties:\n                      type: string\n                    example:\n                      pk: e73c77ec-002d-457a-8b65-8ce7cfb15fc7\n                      age: \"30\"\n                      name: John\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n    delete:\n      tags:\n        - Data\n      summary: Delete a row by primary key\n      operationId: deleteRows\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n        - $ref: \"#/components/parameters/primary-key\"\n      responses:\n        204:\n          description: No Content\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\ncomponents:\n  parameters:\n    X-Cassandra-Token:\n      name: X-Cassandra-Token\n      in: header\n      required: true\n      description: \"The token returned from the authorization endpoint. Use this token in each request.\"\n      schema:\n        type: string\n    raw:\n      name: raw\n      in: query\n      description: Unwrap results.\n      required: false\n      schema:\n        type: boolean\n        default: false\n    keyspace-id:\n      name: keyspace-id\n      in: path\n      description: keyspace name\n      required: true\n      schema:\n        type: string\n    table-id:\n      name: table-id\n      in: path\n      description: table name\n      required: true\n      schema:\n        type: string\n    column-id:\n      name: column-id\n      in: path\n      description: column name\n      required: true\n      schema:\n        type: string\n    index-id:\n      name: index-id\n      in: path\n      description: index name\n      required: true\n      schema:\n        type: string\n    type-id:\n      name: type-id\n      in: path\n      description: type name\n      required: true\n      schema:\n        type: string\n    primary-key:\n      name: primary-key\n      in: path\n      required: true\n      description: |\n        Value from the primary key column for the table. Define composite keys by separating values with\n        slashes (`val1/val2...`) in the order they were defined. \u003c/br\u003e For example, if the composite key\n        was defined as `PRIMARY KEY(race_year, race_name)` then the primary key in the path would be\n        `race_year/race_name`\n      schema:\n        type: string\n    fields:\n      name: fields\n      in: query\n      description: |\n        URL escaped, comma delimited list of keys to include. Values listed restrict the fields returned\n        in the response object.\n      schema:\n        type: string\n    sort:\n      name: sort\n      in: query\n      description: keys to sort by\n      schema:\n        $ref: '#/components/schemas/Sort'\n    page-state:\n      name: page-state\n      in: query\n      description: move the cursor to a particular result\n      schema:\n        type: string\n    page-size:\n      name: page-size\n      description: restrict the number of returned items\n      in: query\n      schema:\n        type: integer\n        format: int32\n    where:\n      name: where\n      in: query\n      description: |\n        URL escaped JSON query using the following keys:\n\n        | Key | Operation |\n        |---|---|\n        | $lt | Less Than |\n        | $lte | Less Than Or Equal To |\n        | $gt | Greater Than |\n        | $gte | Greater Than Or Equal To |\n        | $ne | Not Equal To |\n        | $in | Contained In |\n        | $exists | A value is set for the key |\n\n      schema:\n        type: object\n  responses:\n    404:\n      description: Not Found\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n    400:\n      description: Bad Request\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n    401:\n      description: Unauthorized\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n    409:\n      description: Conflict\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n    500:\n      description: Internal server error\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n  schemas:\n    Error:\n      type: object\n      description: A description of an error state\n      properties:\n        description:\n          type: string\n          description: A human readable description of the error state\n          example: Invalid STRING constant (8be6d514-3436-4e04-a5fc-0ffbefa4c1fe) for\n            \"id\" of type uuid.\n        code:\n          type: integer\n          description: The code referencing the error state\n          format: int32\n          example: 400\n        internalTxId:\n          type: string\n    ResponseWrapper:\n      type: object\n      properties:\n        data:\n          type: object\n          properties: {}\n          description: Response data returned by the request.\n    GetResponseWrapper:\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The count of records returned\n          format: int32\n        pageState:\n          type: string\n          description: A string representing the paging state to be used on future\n            paging requests.\n        data:\n          type: object\n          properties: {}\n          description: The data returned by the request.\n    Credentials:\n      type: object\n      required:\n        - username\n        - password\n      description: User credentials for authenticating\n      properties:\n        username:\n          type: string\n          description: Username\n          example: cassandra\n        password:\n          type: string\n          description: Password\n          example: cassandra\n    AuthTokenResponse:\n      type: object\n      properties:\n        authToken:\n          type: string\n          example: \"5c90f769-8784-499c-83f7-b764822255f1\"\n    Datacenter:\n      type: object\n      required:\n        - name\n        - replicas\n      properties:\n        name:\n          type: string\n          description: The name of the datacenter.\n          example: DC1\n        replicas:\n          type: integer\n          description: \"The number of replicas in the datacenter. In other words, the\n            number of copies of each row in the datacenter.\"\n          format: int32\n          example: 2\n    Keyspace:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          description: The name of the keyspace.\n          example: users_keyspace\n        datacenters:\n          type: array\n          description: \"The datacenters within a keyspace. Only applies for those keyspaces\n            created with NetworkTopologyStrategy.\"\n          items:\n            $ref: '#/components/schemas/Datacenter'\n\n    Table:\n      type: object\n      required:\n        - name\n        - columnDefinitions\n        - primaryKey\n      properties:\n        name:\n          type: string\n          description: The name of the table.\n          example: users\n        keyspace:\n          type: string\n          description: The name of the keyspace.\n          example: users_keyspace\n        columnDefinitions:\n          type: array\n          description: An array of column names with data type.\n          items:\n            $ref: '#/components/schemas/ColumnDefinition'\n        primaryKey:\n          $ref: '#/components/schemas/PrimaryKey'\n        tableOptions:\n          $ref: '#/components/schemas/TableOptions'\n    TableAdd:\n      type: object\n      required:\n        - name\n        - columnDefinitions\n        - primaryKey\n      properties:\n        name:\n          type: string\n          description: Name of the table.\n          example: users\n        ifNotExists:\n          type: boolean\n          description: \"Determines whether to create a new table if a table with\n            the same name exists. Attempting to create an existing table returns\n            an error unless this option is true.\"\n          default: false\n          example: true\n        columnDefinitions:\n          type: array\n          description: Definition of columns that belong to the table to be added.\n          items:\n            $ref: '#/components/schemas/ColumnDefinition'\n        primaryKey:\n          $ref: '#/components/schemas/PrimaryKey'\n        tableOptions:\n          $ref: '#/components/schemas/TableOptions'\n    ColumnDefinition:\n      type: object\n      required:\n        - name\n        - typeDefinition\n      properties:\n        name:\n          type: string\n          description: \"Name for the column, which must be unique.\"\n          example: emailaddress\n        typeDefinition:\n          type: string\n          description: \"The type of data allowed in the column.\"\n          example: text\n          enum:\n            - ascii\n            - text\n            - varchar\n            - tinyint\n            - smallint\n            - int\n            - bigint\n            - varint\n            - decimal\n            - float\n            - double\n            - date\n            - DateRangeType\n            - duration\n            - time\n            - timestamp\n            - uuid\n            - timeuuid\n            - blob\n            - boolean\n            - counter\n            - inet\n            - PointType\n            - LineStringType\n            - PolygonType\n            - frozen\n            - list\n            - map\n            - set\n            - tuple\n        static:\n          type: boolean\n          default: false\n          description: \"Denotes whether the column is shared by all rows of a partition.\"\n    PrimaryKey:\n      type: object\n      required:\n        - partitionKey\n      description: \"Defines a column list for the primary key. Can be either a single\n        column, compound primary key, or composite partition key. Provide\n        multiple columns for the partition key to define a composite partition\n        key.\"\n      properties:\n        partitionKey:\n          type: array\n          description: \"Name of the column or columns that constitute the partition key.\"\n          minItems: 1\n          items:\n            type: string\n            example: emailaddress\n        clusteringKey:\n          type: array\n          description: \"Name of the column or columns that constitute the clustering key.\"\n          items:\n            type: string\n            example: age\n    IndexDefinition:\n      type: object\n      required:\n        - column\n      properties:\n        name:\n          type: string\n          description: \"Optional name for the index, which must be unique.\n            If no name is specified, the index is named as follows:\n            tablename_columnname_idx.\"\n          example: age_idx\n        column:\n          type: string\n          description: \"Column for which index will be created.\"\n          example: age\n        type:\n          type: string\n          description: \"Type of index, defined with a custom index class name or classpath.\n            Secondary index is default, no type entered\"\n          default: \"\"\n          enum:\n            - \"org.apache.cassandra.index.sasi.SASIIndex\"\n            - \"StorageAttachedIndex\"\n        options:\n          type: object\n          additionalProperties:\n            type: string\n            description: \"Options passed to a custom index.\"\n        kind:\n          type: string\n          description: \"Index kind for collections.\"\n          default: VALUES\n          example: \"KEYS\"\n          enum:\n            - FULL\n            - KEYS\n            - VALUES\n            - ENTRIES\n        ifNotExists:\n          type: boolean\n          description: \"Determines creation of a new index, if an index with the\n            same name exists. If an index exists, and this option is set to true,\n            an error is returned.\"\n          default: false\n          example: true\n    IndexResponse:\n      type: array\n      description: The data returned by the index fetch.\n      items:\n        properties:\n          keyspace_name:\n            type: string\n            example: users_keyspace\n          options:\n            type: array\n            items:\n              $ref: '#/components/schemas/IndexOptions'\n          table_name:\n            type: string\n            example: users\n          index_name:\n            type: string\n            example: fav_books_idx\n          kind:\n            type: string\n            example: COMPOSITES\n    IndexOptions:\n      type: object\n      properties:\n        key:\n          type: string\n          example: target\n        value:\n          type: string\n          example: values(favorite_books)\n    TableOptions:\n      type: object\n      properties:\n        defaultTimeToLive:\n          type: integer\n          description: \"Defines the Time To Live (TTL), which determines the\n            time period (in seconds) to expire data. If the value is \u003e0, TTL is\n            enabled for the entire table and an expiration timestamp is added to\n            each column. The maximum value is 630720000 (20 years). A new TTL\n            timestamp is calculated each time the data is updated and the row is\n            removed after the data expires.\"\n          default: 0\n        clusteringExpression:\n          type: array\n          items:\n            $ref: '#/components/schemas/ClusteringExpression'\n    ClusteringExpression:\n      type: object\n      required:\n        - column\n        - order\n      description: \"Order rows storage to make use of the on-disk sorting of columns.\n        Specifying order can make query results more efficient.\"\n      properties:\n        column:\n          type: string\n          description: The name of the column to order by.\n          example: age\n        order:\n          type: string\n          description: The clustering order.\n          example: ASC\n          enum:\n            - ASC\n            - DESC\n    Sort:\n      type: object\n      additionalProperties:\n        type: string\n        enum:\n            - asc\n            - desc\n      example:\n        firstName: asc\n        age: desc\n    TypeResponse:\n      type: object\n      properties:\n        name:\n          type: string\n        keyspace:\n          type: string\n          description: \"Name of the keyspace the user defined type belongs.\"\n        fields:\n          type: array\n          description: \"Definition of columns within the user defined type.\"\n          items:\n            $ref: \"#/components/schemas/TypeField\"\n    TypeAdd:\n      type: object\n      required:\n        - fields\n        - name\n      properties:\n        name:\n          type: string\n        ifNotExists:\n          type: boolean\n          description: \"Determines whether to create a new UDT if an UDT with the same\\\n          \\ name exists. Attempting to create an existing UDT returns an error unless\\\n          \\ this option is true.\"\n        fields:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TypeField\"\n    TypeField:\n      type: object\n      required:\n      - name\n      - typeDefinition\n      properties:\n        name:\n          type: string\n          description: \"Name for the type, which must be unique.\"\n        typeDefinition:\n          type: string\n          example: \"text\"\n          description: \"A valid type of data (e.g, text, int, etc) allowed in the type.\"\n    RenameTypeField:\n      type: object\n      properties:\n        from:\n          type: string\n          description: \"Type's old field name\"\n        to:\n          type: string\n          description: \"Type's new field name\"\n    TypeUpdate:\n      type: object\n      required:\n      - name\n      properties:\n        name:\n          type: string\n        addFields:\n          type: array\n          description: \"Type fields to add\"\n          items:\n            $ref: \"#/components/schemas/TypeField\"\n        renameFields:\n          type: array\n          description: \"User Defined Type fields to rename\"\n          items:\n            $ref: \"#/components/schemas/RenameTypeField\"",
			"canonicalURL": "/github.com/stargate/docs@2358400acf91b26f1b6cfe044c2faa537a334b9c/-/blob/api/StargateRESTv2.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stargate/docs/blob/2358400acf91b26f1b6cfe044c2faa537a334b9c/api/StargateRESTv2.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v2/schemas/keyspaces/{keyspace-id}/tables/{table-id}/indexes\": get: responses: 401: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"object with additionalProperties",
		"unsupported content types"
	]
}