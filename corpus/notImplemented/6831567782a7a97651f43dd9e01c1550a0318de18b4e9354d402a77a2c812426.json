{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/onsched.com/consumer/v1/openapi.yaml",
			"byteSize": 118164,
			"content": "openapi: 3.0.1\ninfo:\n  description: \"Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.\\r\n\n    \u003cbr\u003e\u003cbr\u003e\\r\n\n    Take the API for a test drive. Just click on the Authorize button below and authenticate. \\r\n\n    You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.\\r\n\n    \u003cbr\u003e\u003cbr\u003e\\r\n\n    The API has two interfaces, consumer and setup. \\r\n\n    \u003cul\u003e\\r\n\n    \u003cli\u003e\\r\n\n    The consumer interface provides all the endpoints required for implementing consumer booking flows.\\r\n\n    \u003c/li\u003e\\r\n\n    \u003cli\u003e\\r\n\n    The setup interface provides endpoints for profile configuration and setup.\\r\n\n    \u003c/li\u003e\\r\n\n    \u003c/ul\u003e\\r\n\n    Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.\\r\\n\"\n  title: OnSched API\n  version: v1\n  x-apisguru-categories:\n    - collaboration\n  x-logo:\n    url: https://onsched.com/img/apple-touch-icon-57x57-precomposed.ico\n  x-origin:\n    - format: openapi\n      url: https://sandbox-api.onsched.com/swagger/consumer/swagger.json\n      version: \"3.0\"\n  x-providerName: onsched.com\n  x-serviceName: consumer\nsecurity:\n  - oauth2:\n      - OnSchedApi\npaths:\n  /consumer/v1/appointments:\n    get:\n      description: \"The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        Use the other query parameters to optionally filter the list by using the query parameters. \u003cbr /\u003e\u003cbr /\u003e\\r\n\n        This endpoint returns appoinments using paging. \u003cbr /\u003e\u003cbr /\u003e\\r\n\n        See more information at \u003ca href=\\\"https://onsched.readme.io/docs/appointments-overview\\\"\u003eAppointments Overview\u003c/a\u003e\"\n      parameters:\n        - description: The id of the business location. Leave blank for company wide search.\n          in: query\n          name: locationId\n          schema:\n            type: string\n        - description: Filter appointments by email address.\n          in: query\n          name: email\n          schema:\n            type: string\n        - description: Filter appointments by lastname or part of.\n          in: query\n          name: lastname\n          schema:\n            type: string\n        - description: Filter appointments by phone number or par of it.\n          in: query\n          name: phone\n          schema:\n            type: string\n        - description: Filter appointments by service.\n          in: query\n          name: serviceId\n          schema:\n            type: string\n        - description: Filter appointments by calendar.\n          in: query\n          name: calendarId\n          schema:\n            type: string\n        - description: Filter appointments by resource.\n          in: query\n          name: resourceId\n          schema:\n            type: string\n        - description: Filter appointments by customer.\n          in: query\n          name: customerId\n          schema:\n            type: string\n        - description: Filter appointments by service allocation.\n          in: query\n          name: serviceAllocationId\n          schema:\n            type: string\n        - description: Format YYYY-MM-DD. Filter appointments by on/after startDate.\n          in: query\n          name: startDate\n          schema:\n            format: date-time\n            type: string\n        - description: Format YYYY-MM-DD. Filter appointments on/before endDate.\n          in: query\n          name: endDate\n          schema:\n            format: date-time\n            type: string\n        - description: \"Filter appointments by status: IN, BK, CN, RE, RS.\"\n          in: query\n          name: status\n          schema:\n            type: string\n        - description: Filter appointments by user email who booked.\n          in: query\n          name: bookedBy\n          schema:\n            type: string\n        - description: Starting row of page, default 0\n          in: query\n          name: offset\n          schema:\n            format: int32\n            type: integer\n        - description: Page limit, default 20. Maximum 100.\n          in: query\n          name: limit\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppointmentListViewModel\"\n          description: Success\n      summary: Returns a list of appointments.\n      tags:\n        - Appointments\n    post:\n      description: \"\u003cp\u003eThis end point creates a new appointment in an Initial \\\"IN\\\" status. The exception is if completeBooking parameter set.\u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003eIf you supply a valid customerId in the body, then the POST will create either a booking or reservation using the customer data.\u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003e A valid serviceId is required. Use GET consumer/v1/services to retrieve a list of your services.\u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003e A valid resourceId is required if your calendar is a resource based calendar and you are booking single resource appointments. \u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003e Use consumer/v1/resources to retrieve a list of your resources or use a resourceId returned from the /availability endpoints. \u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003e The resourceIds parameter is required for multi-resource appointments. Pass in comma separated valid resourceIds. This is beta until we update the notifications.\u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003e The customerIds parameter is required for multi-customer appointments. Pass in comma separated valid customerIds. This is beta until we update the notifications.\u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003e The locationId is optional. If the locationId is not passed, the system will default to the primary company location. \u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003e ServiceId provided must be valid for the location being searched. A valid serviceId is one that is scoped to \\r\n\n        \\             Primary Company Location or is associated with that business LocationId\u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003e The customerId is optional. If supplied you can use the completeBooking option and skip the PUT /book step. \u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003e The completeBooking option provides a mechanism for immediate booking with a POST. Applies if you have enough customer information\\r\n\n        \\             to complete the booking. Either supply email and name or customerId with required information.\\r\n\n        \\             Normally, completeBooking is for the BK or RS status, however IN is included to support payment flows.\u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003e The email, name and phone fields are only used with the completeBooking option. As with customerId you can\\r\n\n        \\             skip the PUT /book step. This endpoint completes the booking, and sends notifications.\u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003e A bookingWindowId is required if you are booking appointments into a defined booking window on the service.\u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003e BookedBy is an optional parameter. If it is not supplied the email address of the booked appointment is used or the ip address if no email address is\\r\n\n        \\             used in the /appointment/book endpoint. Booked by is used in the Appointment Audit trail which can be viewed in the Admin Portal.\u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003e Location is optional. This is a string representing the location of the actual appointment, not to be confused with a Business Location.\u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003eTimezone name is optional. The Timezone name is in Iana format e.g. America/New_York. This is the timezone where the appointment was booked. Populating\\r\n\n        \\             this information can help later in situations where appointments are booked before a Daylight Savings change.\u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003eStartDateTime and EndDateTime are required. Use the ISO 8601 format for DateTime Timezone. e.g. 2016-10-30T09:00:00-5:00\u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003eTravelTimeMins and TravelAppointmentId are optional. These are important if you factor in Travel Time for resources to move between appointments.\u003c/p\u003e\\r\n\n        \u003cbr /\u003e\\r\n\n        \u003cp\u003eThis information is returned from the availability/times endpoint. \u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\             See more information at \u003ca href=\\\"https://onsched.readme.io/docs/appointments-overview\\\"\u003eAppointments Overview\u003c/a\u003e\u003c/p\u003e\\r\n\n        \u003cbr /\u003e\"\n      parameters:\n        - description: Status of BK, RS or IN. Only applies if customerId or name and email are supplied.\n          in: query\n          name: completeBooking\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentInitialModel\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentInitialModel\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentInitialModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentInitialModel\"\n        description: \"\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppointmentInitialViewModel\"\n          description: Success\n      summary: Returns an appointment object\n      tags:\n        - Appointments\n  /consumer/v1/appointments/bookingfields:\n    get:\n      description: \"This end point returns Booking Field definitions.\u003cbr\u003e\u003c/br\u003e\\r\n\n        \\r\n\n        Appointment booking fields are different than Customer booking fields. Appointment booking fields are\\r\n\n        stored with each appointment. They are used when the information collected during the booking is specific\\r\n\n        to a particular visit.\u003cbr\u003e\u003c/br\u003e\\r\n\n        \\r\n\n        Use the field, and type to determine how to update field values\\r\n\n        in PUT /consumer/v1/appointments/bookingfields.\u003cbr\u003e\u003c/br\u003e\\r\n\n        \\r\n\n        Booking Fields include any custom appointment fields you wish to capture with the Booking and also\\r\n\n        miscellaneous appointment attributes including address information.\u003cbr\u003e\u003c/br\u003e\\r\n\n        For more information see \u003ca href=\\\"https://onsched.readme.io/docs/custom-booking-fields\\\"\u003eAppointment booking fields\u003c/a\u003e\"\n      parameters:\n        - description: The id of the business location. Defaults to first business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BookingFieldListViewModel\"\n          description: Success\n      summary: Returns a list of appointment booking fields\n      tags:\n        - Appointments\n  /consumer/v1/appointments/customfields:\n    get:\n      description: \"This end point returns your Appointment custom field definitions.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        Appointment custom fields are different than Customer custom fields. Appointment custom fields are\\r\n\n        stored with each appointment. They are used when the information collected during the booking is specific\\r\n\n        to a particular visit.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        Use the field, and type to determine how to update field values\\r\n\n        in PUT /consumer/v1/appointments/customfields \u003cbr /\u003e\u003cbr /\u003e\\r\n\n        For more information see \u003ca href=\\\"https://onsched.readme.io/docs/custom-booking-fields\\\"\u003eAppointment booking fields\u003c/a\u003e\"\n      parameters:\n        - description: The id of the business location. Defaults to first business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomFieldDefinitionListViewModel\"\n          description: Success\n      summary: Returns a list of appointment custom field definitions\n      tags:\n        - Appointments\n  \"/consumer/v1/appointments/{id}\":\n    delete:\n      description: \"This end point deletes a booking. Only appointments in a \\\"IN\\\" initial status can be deleted.\\r\n\n        Past dated appointments cannot be cancelled.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        A valid appointment id is required. You can use the appointmentId returned from GET /consumer/v1/appointments. \u003cbr /\u003e\u003cbr /\u003e\\r\n\n        For more information see \u003ca href=\\\"https://onsched.readme.io/docs/appointments-overview\\\"\u003eAppointment Overview\u003c/a\u003e\"\n      parameters:\n        - description: Valid Appointment id for the location specified.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppointmentViewModel\"\n          description: Success\n      summary: Returns an appointment object\n      tags:\n        - Appointments\n    get:\n      description: \"The result returned is a single appointment object. A valid id is required to find the appointment. \u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        See more information at \u003ca href=\\\"https://onsched.readme.io/docs/appointments-overview\\\"\u003eAppointments Overview\u003c/a\u003e\"\n      parameters:\n        - description: The id of the appointment object.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppointmentViewModel\"\n          description: Success\n      summary: Returns an appointment object.\n      tags:\n        - Appointments\n  \"/consumer/v1/appointments/{id}/book\":\n    put:\n      description: \"This end point completes a new booking. Only appointments in the \\\"IN\\\" initial status can be booked.\\r\n\n        by saving all the relevant details of the booking. \u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        A valid appointment id is required. Use the appointmentId returned from POST /consumer/v1/appointments.  \u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        To update appointment custom field values, use the GET /consumer/v1/appointments/customfields information.  \u003cbr /\u003e\u003cbr /\u003e\\r\n\n        to understand your definitions of custom fields and what key and values to update. \u003cbr /\u003e\u003cbr /\u003e\\r\n\n        See more information at \u003ca href=\\\"https://onsched.readme.io/docs/appointments-overview\\\"\u003eAppointments Overview\u003c/a\u003e and \\r\n\n        \u003ca href=\\\"https://onsched.readme.io/docs/custom-booking-fields\\\"\u003eCustom Booking Fields\u003c/a\u003e\"\n      parameters:\n        - description: \"\"\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentBookModel\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentBookModel\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentBookModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentBookModel\"\n        description: \"\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppointmentViewModel\"\n          description: Success\n      summary: Returns an appointment object\n      tags:\n        - Appointments\n  \"/consumer/v1/appointments/{id}/cancel\":\n    put:\n      description: \"This end point cancels a booking or reservation. Only appointments in a \\\"BK\\\" booked, or \\\"RS\\\" reserved status can be cancelled.\\r\n\n        Past dated appointments cannot be cancelled. \u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        A valid appointment id is required. Use the appointmentId returned from POST /consumer/v1/appointments. \u003cbr /\u003e\u003cbr /\u003e\\r\n\n        For more information see \u003ca href=\\\"https://onsched.readme.io/docs/appointments-overview\\\"\u003eAppointment Overview\u003c/a\u003e\"\n      parameters:\n        - description: \"\"\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppointmentViewModel\"\n          description: Success\n      summary: Returns an appointment object\n      tags:\n        - Appointments\n  \"/consumer/v1/appointments/{id}/confirm\":\n    put:\n      parameters:\n        - description: Id of the Appointment Object\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Use this parameter to undo the confirmed status.\n          in: query\n          name: undo\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Success\n      summary: Set the Appointment Confirm property to true or false\n      tags:\n        - Appointments\n  \"/consumer/v1/appointments/{id}/noshow\":\n    put:\n      description: For more information see \u003ca href=\"https://onsched.readme.io/docs/appointments-overview\"\u003eAppointment Overview\u003c/a\u003e\n      parameters:\n        - description: \"\"\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentNoShowModel\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentNoShowModel\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentNoShowModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentNoShowModel\"\n        description: \"\"\n      responses:\n        \"200\":\n          description: Success\n      summary: \"\"\n      tags:\n        - Appointments\n  \"/consumer/v1/appointments/{id}/reschedule\":\n    put:\n      description: \"This end point reschedules a booking. Only appointments in a \\\"BK\\\" booked status can be rescheduled.\\r\n\n        Past dated appointments cannot be cancelled.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        A valid appointment id is required. Use the appointmentId returned from GET /consumer/v1/appointments.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        StartDateTime and EndDateTime are required. Use the ISO 8601 format for DateTime Timezone. e.g. 2016-10-30T09:00:00-5:00\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        The serviceId is optional. If you want your users to change the service on a reschedule, include the new serviceId. \\r\n\n        The new serviceId's StartDateTime and EndDateTime must match your service's duration.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        Use the GET /consumer/v1/availability/{id}/reschedule endpoint to display a list of available times\\r\n\n        for the end user to choose from to reschedule the original appointment.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        You cannot reschedule an appointment to a different location. You can cancel and reschedule to a different location.\\r\n\n        \\r\n\n        For more information see \u003ca href=\\\"https://onsched.readme.io/docs/appointments-overview\\\"\u003eAppointment Overview\u003c/a\u003e\"\n      parameters:\n        - description: appointment id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentRescheduleModel\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentRescheduleModel\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentRescheduleModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentRescheduleModel\"\n        description: \"\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppointmentViewModel\"\n          description: Success\n      summary: Returns an appointment object\n      tags:\n        - Appointments\n  \"/consumer/v1/appointments/{id}/reserve\":\n    put:\n      description: \"This end point completes a new reservation. Only appointments in the \\\"IN\\\" initial status can be booked.\\r\n\n        by saving all the relevant details of the booking.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        NOTE - appointment reservations are different than appointment bookings. Reservations are a two step booking process.\\r\n\n        An appointment is reserved but may not be completed as a booking until other business conditions have been met. For example\\r\n\n        an appointment may be reserved that is not yet assigned to a resource.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        NOTE 2 - this endpoint is new as of April 21, 2019. OnSched will be adding a new Email template for appointment reservations expected by the end of April.\\r\n\n        This will allow you to notify your customer of a reservation versus a booking and customize if required to indicate what conditions will the reservation\\r\n\n        become a booking.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        A valid appointment id is required. Use the appointmentId returned from POST /consumer/v1/appointments.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        To update appointment custom field values, use the GET /consumer/v1/appointments/customfields information.\\r\n\n        to understand your definitions of custom fields and what key and values to update. \u003cbr /\u003e\u003cbr /\u003e\\r\n\n        See more information at \u003ca href=\\\"https://onsched.readme.io/docs/appointments-overview\\\"\u003eAppointments Overview\u003c/a\u003e\u003cbr /\u003e\u003cbr /\u003e\"\n      parameters:\n        - description: \"\"\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: \"\"\n          in: query\n          name: sendNotifications\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentReserveModel\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentReserveModel\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentReserveModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AppointmentReserveModel\"\n        description: \"\"\n      responses:\n        \"200\":\n          description: Success\n      summary: Returns an appointment object\n      tags:\n        - Appointments\n  \"/consumer/v1/availability/{serviceId}/{startDate}/{endDate}\":\n    get:\n      description: \"Choose your search criteria carefully. Availability is an expensive call. If you search availability for all resources\\r\n\n        then you should only do so for a single date. If you decide to search availability for multiple dates you should only do so\\r\n\n        for a specific resource by specifying the optional resourceId parameter.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        Start and End times are specified as military times e.g. 800 = 8:00am, 2230 = 10:30pm. \\r\n\n        You will only see availability within the boundary of your business start and end times.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        \\r\n\n        dayAvailability will return day availablility for the number of days requested from the start date.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        \\r\n\n        firstDayAvailable only works with day availability. If set to true it will look for the first day available within the range specified\\r\n\n        by the dayAvailability parameter. The two parameters together can be a clever way to display availability for a week or month.\\r\n\n        Tip - pass in the beginning of the week or month, and available times are displayed for the first available date if exists.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        You should only specify the duration parameter if you let your customers choose the duration of the appointment. e.g. from a list.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        \\r\n\n        The tz parameter allows you to select a suitable timezone for the customer to book in. Your app should be timezone aware if you \\r\n\n        use this option. The requested timezone is specified as an offset(plus or minus) from GMT time.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        Availabity can be complex. We provided an endpoint help you troubleshoot:\\r\n\n        /consumer/v1/availability/{serviceId}/{startDate}/{endDate}/unavailable. \\r\n\n        This endpoint will show you all the blocks for a given date range. Available times are created from any unblocked time periods.\u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\r\n\n        \\r\n\n        See more information at \u003ca href=\\\"https://onsched.readme.io/docs/availability-overview\\\"\u003eAvailability Overview\u003c/a\u003e\"\n      parameters:\n        - description: Service Id for availability search.\n          in: path\n          name: serviceId\n          required: true\n          schema:\n            type: string\n        - description: Format YYYY-MM-DD. Start Date for availability search. Use format YYYY-MM-DD\n          in: path\n          name: startDate\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: Format YYYY-MM-DD. End Date for availability search. Use format YYYY-MM-DD\n          in: path\n          name: endDate\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: Format Military Time.Start Time for availability search. Defaults to Business Hours Start.\n          in: query\n          name: startTime\n          schema:\n            format: int32\n            type: integer\n        - description: Format Military Time.End Time for availability search. Defaults to Business Hours End.\n          in: query\n          name: endTime\n          schema:\n            format: int32\n            type: integer\n        - description: The id of the business location. Defaults to first business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n        - description: Resource Id for availability search.\n          in: query\n          name: resourceId\n          schema:\n            type: string\n        - description: Resource Group Id for availability search.\n          in: query\n          name: resourceGroupId\n          schema:\n            type: string\n        - description: Comma separated Resource Id's for availability search.\n          in: query\n          name: resourceIds\n          schema:\n            type: string\n        - description: Round robin choice 0=none, 1=random, 2=balanced.\n          in: query\n          name: roundRobin\n          schema:\n            type: string\n        - description: Duration of the service if different than the default.\n          in: query\n          name: duration\n          schema:\n            format: int32\n            type: integer\n        - description: Booking Interval if different than the default.\n          in: query\n          name: interval\n          schema:\n            format: int32\n            type: integer\n        - description: Request timezone offset to view availability.\n          in: query\n          name: tzOffset\n          schema:\n            format: int32\n            type: integer\n        - description: For calculating travel based availability. Requires distance scope.\n          in: query\n          name: destination\n          schema:\n            type: string\n        - description: Format YYYY-DD-YY. Start date for day availability. Defaults to startDate.\n          in: query\n          name: dayAvailabilityStartDate\n          schema:\n            format: date-time\n            type: string\n        - description: Number of days of day availability to return.\n          in: query\n          name: dayAvailability\n          schema:\n            format: int32\n            type: integer\n        - description: Return available times for the first available day.\n          in: query\n          name: firstDayAvailable\n          schema:\n            type: boolean\n        - description: Try the full server based availability beta. Will be faster when caching implmented.\n          in: query\n          name: fullServerBasedAvailability\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AvailabilityViewModel\"\n          description: Success\n      summary: Returns a list of available times.\n      tags:\n        - Availability\n  \"/consumer/v1/availability/{serviceId}/{startDate}/{endDate}/days\":\n    get:\n      description: \"This end point is used to show day level availability. For example if the business is closed, or there is a public holiday.\\r\n\n        \\r\n\n        Day level availability is a good way to restrict your choices of dates in your app and improve usability.\"\n      parameters:\n        - description: Service Id for availability search.\n          in: path\n          name: serviceId\n          required: true\n          schema:\n            type: string\n        - description: Format Format YYYY-MM-DD. Start Date for availability search.\n          in: path\n          name: startDate\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: Format Format YYYY-MM-DD. End Date for availability search.\n          in: path\n          name: endDate\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: The id of the business location. Defaults to first business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n        - description: Resource Id to filter on.\n          in: query\n          name: resourceId\n          schema:\n            type: string\n        - description: Request timezone offset to view availability.\n          in: query\n          name: tzOffset\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AvailabilityDayViewModel\"\n          description: Success\n      summary: Returns a list of available days.\n      tags:\n        - Availability\n  \"/consumer/v1/availability/{serviceId}/{startDate}/{endDate}/times\":\n    get:\n      description: \"\u003cb\u003eDeprecation Notice\u003c/b\u003e : This endpoint is no longer being maintained and will be deprecated in a future release.        \\r\n\n        \\            Use the /consumer/v1/availability{serviceId}/{startDate}/{endDate} endpoint instead.\"\n      parameters:\n        - description: Service Id for availability search.\n          in: path\n          name: serviceId\n          required: true\n          schema:\n            type: string\n        - description: Format YYYY-MM-DD. Start Date for availability search.\n          in: path\n          name: startDate\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: Format YYYY-MM-DD. End Date for availability search.\n          in: path\n          name: endDate\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: Format Military Time. Start Time for availability search. Defaults to Business Hours Start.\n          in: query\n          name: startTime\n          schema:\n            format: int32\n            type: integer\n        - description: Format Military Time. End Time for availability search. Defaults to Business Hours End.\n          in: query\n          name: endTime\n          schema:\n            format: int32\n            type: integer\n        - description: The id of the business location. Defaults to first business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n        - description: Destination address to calculate travel times.\n          in: query\n          name: destination\n          schema:\n            type: string\n        - description: Resource Id to filter on.\n          in: query\n          name: resourceId\n          schema:\n            type: string\n        - description: Comma separated list of Resource Id's to filter on.\n          in: query\n          name: resourceIds\n          schema:\n            type: string\n        - description: Resource Group Id to filter on.\n          in: query\n          name: resourceGroupId\n          schema:\n            type: string\n        - description: Round robin choice 0=none, 1=random, 2=balanced, 3=score, 4=distance.\n          in: query\n          name: roundRobin\n          schema:\n            type: string\n        - description: Duration of the service if different than the default.\n          in: query\n          name: duration\n          schema:\n            format: int32\n            type: integer\n        - description: Booking Interval if different than the default.\n          in: query\n          name: interval\n          schema:\n            format: int32\n            type: integer\n        - description: Request timezone offset to view unavailable times.\n          in: query\n          name: tzOffset\n          schema:\n            format: int32\n            type: integer\n        - description: Format YYYY-DD-YY. Start date for day availability. Defaults to startDate.\n          in: query\n          name: dayAvailabilityStartDate\n          schema:\n            format: date-time\n            type: string\n        - description: Number of days of day availability to return.\n          in: query\n          name: dayAvailability\n          schema:\n            format: int32\n            type: integer\n        - description: Return available times for the first available day.\n          in: query\n          name: firstDayAvailable\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Availability3ViewModel\"\n          description: Success\n      summary: Returns a list of available times.\n      tags:\n        - Availability\n  \"/consumer/v1/availability/{serviceId}/{startDate}/{endDate}/unavailable\":\n    get:\n      description: This endpoint is used to show unavailable times and provides information why the time is unavailable.\n      parameters:\n        - description: Service Id for availability search.\n          in: path\n          name: serviceId\n          required: true\n          schema:\n            type: string\n        - description: Format YYYY-MM-DD. Start Date for unavailable time search.\n          in: path\n          name: startDate\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: Format YYYY-MM-DD. End Date for unavailable time search.\n          in: path\n          name: endDate\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: The id of the business location. Defaults to first business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n        - description: Resource Id to filter on.\n          in: query\n          name: resourceId\n          schema:\n            type: string\n        - description: Duration of the service if different than the default.\n          in: query\n          name: duration\n          schema:\n            format: int32\n            type: integer\n        - description: Request timezone offset to view unavailable times.\n          in: query\n          name: tzOffset\n          schema:\n            format: int32\n            type: integer\n        - description: Try the full server based availability beta. Will be faster when caching implmented.\n          in: query\n          name: fullServerBasedAvailability\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnavailableTimeListViewModel\"\n          description: Success\n      summary: Returns a list of unavailable times.\n      tags:\n        - Availability\n  \"/consumer/v1/availability/{serviceId}/{startDate}/{endDate}/windows\":\n    get:\n      description: \"This end point may be removed in the next release. It is used for server based availability from UnavailableTimes.\\r\n\n        Use the v1/consumer/availability{serviceId}/{startDate}/{endDate} endpoint instead.\"\n      parameters:\n        - description: Service Id for availability search.\n          in: path\n          name: serviceId\n          required: true\n          schema:\n            type: string\n        - description: Format YYYY-MM-DD. Start Date for availability search.\n          in: path\n          name: startDate\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: Format YYYY-MM-DD. End Date for availability search.\n          in: path\n          name: endDate\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: The id of the business location. Defaults to first business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n        - description: Destination address to calculate travel times.\n          in: query\n          name: destination\n          schema:\n            type: string\n        - description: Resource Id to filter on.\n          in: query\n          name: resourceId\n          schema:\n            type: string\n        - description: Comma separated list of Resource Id's to filter on.\n          in: query\n          name: resourceIds\n          schema:\n            type: string\n        - description: Resource Group Id to filter on.\n          in: query\n          name: resourceGroupId\n          schema:\n            type: string\n        - description: Round robin choice 0=none, 1=random, 2=balanced.\n          in: query\n          name: roundRobin\n          schema:\n            type: string\n        - description: Duration of the service if different than the default.\n          in: query\n          name: duration\n          schema:\n            format: int32\n            type: integer\n        - description: Booking Interval if different than the default.\n          in: query\n          name: interval\n          schema:\n            format: int32\n            type: integer\n        - description: Request timezone offset to view unavailable times.\n          in: query\n          name: tzOffset\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WindowAvailabilityViewModel\"\n          description: Success\n      summary: Returns a list of available booking window times.\n      tags:\n        - Availability\n  /consumer/v1/customers:\n    get:\n      description: \"The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\\r\n\n        Use the other query parameters to optionally filter the results list.\"\n      parameters:\n        - description: The id of the business location. Defaults to first business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n        - description: Filter customers by group.\n          in: query\n          name: groupId\n          schema:\n            type: string\n        - description: Filter customers by email address.\n          in: query\n          name: email\n          schema:\n            type: string\n        - description: Search customers by lastname.\n          in: query\n          name: lastname\n          schema:\n            type: string\n        - description: Filter customers by deleted status.\n          in: query\n          name: deleted\n          schema:\n            type: boolean\n        - description: Starting row of page, default 0\n          in: query\n          name: offset\n          schema:\n            format: int32\n            type: integer\n        - description: Page limit, default 20. Maximum 100.\n          in: query\n          name: limit\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerListViewModel\"\n          description: Success\n      summary: Returns a list of customers.\n      tags:\n        - Customers\n    post:\n      description: \"Use this endpoint to create a new customer. If not specified the business location id defaults to the first location in the company.\\r\n\n        Email Address and a lastname are required for creating a new customer.\\r\n\n        Type 0 = Person, Type 1 = Business\\r\n\n        For type 0, the firstname and lastname fields are used. For type 1, the Name field is used and the name field is also used to populate the lastname.\"\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/CustomerInputModel\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerInputModel\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/CustomerInputModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerInputModel\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerViewModel\"\n          description: Success\n      summary: Creates a new customer object.\n      tags:\n        - Customers\n  /consumer/v1/customers/bookingfields:\n    get:\n      description: \"This end point returns Booking Field definitions.\\r\n\n        \\r\n\n        Customer booking fields are different than Appointment booking fields. Customer booking fields are\\r\n\n        stored with each customer. They are used when the information collected during the booking is specific\\r\n\n        to a particular visit.\\r\n\n        \\r\n\n        Use the field, and type to determine how to update field values\\r\n\n        in PUT /consumer/v1/appointments/{id}/book\\r\n\n        \\r\n\n        Customer Booking Fields include any custom customer fields you wish to capture with the Booking and also\\r\n\n        miscellaneous customer attributes including Company Name, Customer Demographic information and Address information.\"\n      parameters:\n        - description: The id of the business location. Defaults to first business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BookingFieldListViewModel\"\n          description: Success\n      summary: Returns a list of customer booking fields\n      tags:\n        - Customers\n  /consumer/v1/customers/countries:\n    get:\n      description: Returns a list of countries with the associated country code. Country codes are based on the 2 character ANSI standard.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CountryViewModel\"\n                type: array\n          description: Success\n      summary: Returns a list of country objects\n      tags:\n        - Customers\n  /consumer/v1/customers/customfields:\n    get:\n      description: \"This end point returns your Customer custom field definitions.\\r\n\n        \\r\n\n        Customer custom fields are different than Appointment custom fields. Appointment custom fields are\\r\n\n        stored with each appointment. They are used when the information collected during the booking is specific\\r\n\n        to a particular visit, where as Customer custom fields are stored with the customer profile. \\r\n\n        \\r\n\n        Use the key field, and type to determine how to update field values\\r\n\n        in POST /consumer/v1/customers and PUT /consumer/v1/customers/{id}\"\n      parameters:\n        - description: The id of the business location. Defaults to first business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n        - description: A true/false indicator to filter on custom fields used for lead questions.\n          in: query\n          name: leadQuestions\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomFieldDefinitionListViewModel\"\n          description: Success\n      summary: Returns a list of customField objects\n      tags:\n        - Customers\n  /consumer/v1/customers/plans:\n    get:\n      description: \"The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\\r\n\n        Use the other query parameters to optionally filter the results list.\"\n      parameters:\n        - description: The id of the business location. Defaults to first business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n        - description: Filter customers by group.\n          in: query\n          name: groupId\n          schema:\n            type: string\n        - description: Starting row of page, default 0\n          in: query\n          name: offset\n          schema:\n            format: int32\n            type: integer\n        - description: Page limit, default 20. Maximum 100.\n          in: query\n          name: limit\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerPlanListViewModel\"\n          description: Success\n      summary: Returns a list of customers.\n      tags:\n        - Customers\n  \"/consumer/v1/customers/plans/{id}\":\n    get:\n      description: \"The result returned is a single customer object. An id is required to find the customer. Find customer id's using either the GET consumer/v1/customers end point,\\r\n\n        or the GET consumer/v1/appointments end point. A customer object is automatically created with the first booking if it doesn't already exist.\"\n      parameters:\n        - description: The id of the customer plan object.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerPlanViewModel\"\n          description: Success\n      summary: Returns a customer object.\n      tags:\n        - Customers\n  /consumer/v1/customers/states:\n    get:\n      description: \"Returns a list of states with the associated state code and country. \\r\n\n        \\r\n\n        Contact us if states for your countries of operation are not currently loaded.\"\n      parameters:\n        - in: query\n          name: country\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/StateViewModel\"\n                type: array\n          description: Success\n      summary: Returns a list of state objects\n      tags:\n        - Customers\n  /consumer/v1/customers/subscriptions:\n    get:\n      description: \"The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\\r\n\n        Use the other query parameters to optionally filter the results list.\"\n      parameters:\n        - description: The id of the business location. Defaults to first business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n        - description: Starting row of page, default 0\n          in: query\n          name: offset\n          schema:\n            format: int32\n            type: integer\n        - description: Page limit, default 20. Maximum 100.\n          in: query\n          name: limit\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerSubscriptionListViewModel\"\n          description: Success\n      summary: Returns a list of customer subscriptions.\n      tags:\n        - Customers\n  \"/consumer/v1/customers/subscriptions/{id}\":\n    delete:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n      tags:\n        - Customers\n    get:\n      description: The result returned is a single customer subscription object.\n      parameters:\n        - description: The id of the customer subscription object.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerSubscriptionViewModel\"\n          description: Success\n      summary: Returns a customer subscription object.\n      tags:\n        - Customers\n    put:\n      description: Use this endpoint to update customer subscription information.\n      parameters:\n        - description: The id of the customer subscription object.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/CustomerSubscriptionUpdateModel\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerSubscriptionUpdateModel\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/CustomerSubscriptionUpdateModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerSubscriptionUpdateModel\"\n        description: Customer subscription update model.\n      responses:\n        \"200\":\n          description: Success\n      summary: Updates a customer subscription object.\n      tags:\n        - Customers\n  \"/consumer/v1/customers/{id}\":\n    delete:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n      tags:\n        - Customers\n    get:\n      description: \"The result returned is a single customer object. An id is required to find the customer. Find customer id's using either the GET consumer/v1/customers end point,\\r\n\n        or the GET consumer/v1/appointments end point. A customer object is automatically created with the first booking if it doesn't already exist.\"\n      parameters:\n        - description: The id of the customer object.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerViewModel\"\n          description: Success\n      summary: Returns a customer object.\n      tags:\n        - Customers\n    put:\n      description: \"Use this endpoint to update customer information. If not specified the business location id defaults to the first location in the company.\\r\n\n        Blank fields are not changed\"\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/CustomerUpdateModel\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerUpdateModel\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/CustomerUpdateModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerUpdateModel\"\n      responses:\n        \"200\":\n          description: Success\n      summary: Updates a customer object.\n      tags:\n        - Customers\n  \"/consumer/v1/customers/{id}/planlimits/{serviceId}/{resourceId}/{dateTimeTz}\":\n    get:\n      description: \"The result returned is list of limit rules as defined by the subscribed customer plan along with Booking Counts/Minutes\\r\n\n        The results indicate the remaining bookings count / minutes. Use the results in your app to determine if the customer should continue booking.\\r\n\n        You can enforce Limits in periods: Daily,Weekly,Monthly and for maximum total limits. Maximum total limits is based on six months prior to\\r\n\n        the DateTimeTz and six months after the DateTimeTz. Daily, Weekly and Monthly limits are based on the calculated period relative to the\\r\n\n        subscription plan start. Daily,Weekly and Monthly limits can be setup on a per interval basis e.g. to biweekly, or daily every 10 days.\\r\n\n        See customer plans setup in the Portal for more information.\\r\n\n        All parameters are required. If resourceId is not applicable for a non-resource calendar, pass zero.\\r\n\n        Format of the dateTimeTz field is 2018-10-30T10:00-5:00\"\n      parameters:\n        - description: The id of the customer object.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The id of the service object.\n          in: path\n          name: serviceId\n          required: true\n          schema:\n            type: string\n        - description: The id of the resource object.\n          in: path\n          name: resourceId\n          required: true\n          schema:\n            type: string\n        - description: The DateTimeTz to check\n          in: path\n          name: dateTimeTz\n          required: true\n          schema:\n            format: date-time\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlanLimitListViewModel\"\n          description: Success\n      summary: Returns a list of customer booking limits.\n      tags:\n        - Customers\n  \"/consumer/v1/customers/{id}/subscriptions\":\n    get:\n      description: The result returned is a single customer subscription object. A customer can only be subsribed to a single Customer Plan\n      parameters:\n        - description: The id of the customer object.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerSubscriptionViewModel\"\n          description: Success\n      summary: Returns a customer subscription object.\n      tags:\n        - Customers\n    post:\n      description: Use this endpoint to create a new customer subscription.\n      parameters:\n        - description: The id of the customer object.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/CustomerSubscriptionInputModel\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerSubscriptionInputModel\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/CustomerSubscriptionInputModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerSubscriptionInputModel\"\n        description: The subscription input model.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerSubscriptionViewModel\"\n          description: Success\n      summary: Creates a new customer subscription object.\n      tags:\n        - Customers\n  /consumer/v1/locations:\n    get:\n      description: \"Use this api end point if you have multiple business locations in your company.\\r\n\n        The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\\r\n\n        Use the other query parameters to optionally filter the results list.\\r\n\n        \\r\n\n        To leverage the search by serviceId, setup locationService's see endpoints in this controller.\\r\n\n        Location services allow you to exclude company scoped services for locations that do not offer them.\\r\n\n        You can explicitly define which services are offered or if none are defined then all services are offererd\"\n      parameters:\n        - description: Location name(full or partial) to filter on\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: Search by distance nearest Geocoords, City, Postal/Zip Code\n          in: query\n          name: nearestTo\n          schema:\n            type: string\n        - description: Maximum distance to display\n          in: query\n          name: proximity\n          schema:\n            format: int32\n            type: integer\n        - description: Distance either imperial(miles), metric(kilometers)\n          in: query\n          name: units\n          schema:\n            type: string\n        - description: Locations that offer this service\n          in: query\n          name: serviceId\n          schema:\n            type: string\n        - description: Locations within a specific region\n          in: query\n          name: regionId\n          schema:\n            type: string\n        - description: Don't include the Primary Location\n          in: query\n          name: ignorePrimary\n          schema:\n            type: boolean\n        - description: Starting row of page, default 0\n          in: query\n          name: offset\n          schema:\n            format: int32\n            type: integer\n        - description: Page limit, default 20. Maximum 100.\n          in: query\n          name: limit\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LocationListViewModel\"\n          description: Success\n      summary: Returns a list of business locations.\n      tags:\n        - Locations\n  \"/consumer/v1/locations/{id}\":\n    get:\n      description: The result returned is a single location object. An id is required to find the location. Find location id's using the GET consumer/v1/locations end point,\n      parameters:\n        - description: The id of the business location object.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LocationViewModel\"\n          description: Success\n      summary: Returns a business location object.\n      tags:\n        - Locations\n  /consumer/v1/resources:\n    get:\n      description: \"The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\\r\n\n        Use the other query parameters to optionally filter the results list.\"\n      parameters:\n        - description: The id of the business location. Defaults to first business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n        - description: Filter resources by group.\n          in: query\n          name: resourceGroupId\n          schema:\n            format: int32\n            type: integer\n        - description: Filter resources by email address.\n          in: query\n          name: email\n          schema:\n            type: string\n        - description: Search resources by name.\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: Specify sort order of response.\n          in: query\n          name: sortOrder\n          schema:\n            type: string\n        - description: Starting row of page, default 0\n          in: query\n          name: offset\n          schema:\n            format: int32\n            type: integer\n        - description: Page limit, default 20. Maximum 100.\n          in: query\n          name: limit\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceListViewModel\"\n          description: resource object\n        \"400\":\n          description: Missing or invalid values in the request\n        \"404\":\n          description: Resource was not found\n      summary: Returns a list of resources.\n      tags:\n        - Resources\n  \"/consumer/v1/resources/{id}\":\n    get:\n      description: \"The result returned is a single resource object. An id is required to find the resource. Find customer id's using either the GET consumer/v1/resources end point,\\r\n\n        or the GET consumer/v1/appointments end point.\"\n      parameters:\n        - description: The id of the resource object.\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceViewModel\"\n          description: Success\n      summary: Returns a resource object.\n      tags:\n        - Resources\n  \"/consumer/v1/resources/{id}/services\":\n    get:\n      description: \"The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\\r\n\n        Use the other query parameters to optionally filter the results list.\\r\n\n        Resource services are used to explicitly define the services that can be booked for a resource. If no resource services are defined then by\\r\n\n        default all services can be booked for the resource.\"\n      parameters:\n        - description: The id of the resource object.\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Starting row of page, default 0\n          in: query\n          name: offset\n          schema:\n            format: int32\n            type: integer\n        - description: Page limit, default 20. Maximum 100.\n          in: query\n          name: limit\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceServiceListViewModel\"\n          description: list of resource services\n        \"400\":\n          description: Missing or invalid values in the request\n        \"401\":\n          description: Unauthorized request\n        \"404\":\n          description: Resource was not found\n      summary: Returns a list of resource services.\n      tags:\n        - Resources\n  /consumer/v1/servicegroups:\n    get:\n      description: \"The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\\r\n\n        Use the other query parameters to optionally filter the results list.\"\n      parameters:\n        - description: The id of the business location. Defaults to first business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n        - description: Starting row of page, default 0\n          in: query\n          name: offset\n          schema:\n            format: int32\n            type: integer\n        - description: Page limit, default 20. Maximum 100.\n          in: query\n          name: limit\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceGroupListViewModel\"\n          description: Success\n      summary: Returns a list of service groups.\n      tags:\n        - ServiceGroups\n  \"/consumer/v1/servicegroups/{id}\":\n    get:\n      description: \"The result returned is a single serviceGroup object. An id is required to find the serviceGroup. Find serviceGroup id's using \\r\n\n        the GET consumer/v1/servicegroups end point,\"\n      parameters:\n        - description: The id of the serviceGroup object.\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceGroupViewModel\"\n          description: Success\n      summary: Returns a serviceGroup object.\n      tags:\n        - ServiceGroups\n  /consumer/v1/services:\n    get:\n      description: \"Use this endpoint to get services available at your business location and/or company. If no locationId is provided the primary company will be queried. \\r\n\n        The results are returned in pages. Use the offset and limit parameters to control the page start and size.\\r\n\n        Default offset is \u003cb\u003e0\u003c/b\u003e, and limit is \u003cb\u003e20\u003c/b\u003e. Use the other query parameters to optionally filter the results list.\"\n      parameters:\n        - description: The id of the business location. defaults to first business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n        - description: Filter services by group.\n          in: query\n          name: serviceGroupId\n          schema:\n            format: int32\n            type: integer\n        - description: Filter services by default service.\n          in: query\n          name: defaultService\n          schema:\n            type: boolean\n        - description: Search on all Locations, default is \u003cb\u003efalse\u003c/b\u003e\n          in: query\n          name: allLocations\n          schema:\n            type: boolean\n        - description: Filter Services by Scope, company, location or all, default is \u003cb\u003eall\u003c/b\u003e.\n          in: query\n          name: scope\n          schema:\n            $ref: \"#/components/schemas/ServicesScope\"\n        - description: Filter Services using Service Names. Supports Partial name search\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: Filter based on ServiceId. Using this parameter would ignore all other parameters\n          in: query\n          name: serviceId\n          schema:\n            type: string\n        - description: Starting row of page, default \u003cb\u003e0\u003c/b\u003e\n          in: query\n          name: offset\n          schema:\n            format: int32\n            type: integer\n        - description: Page limit, default \u003cb\u003e20\u003c/b\u003e. Maximum \u003cb\u003e500\u003c/b\u003e.\n          in: query\n          name: limit\n          schema:\n            format: int32\n            type: integer\n        - description: Sort Results using Natural Sort or Sorted alphabetically along Service Names, default is \u003cb\u003enatural\u003c/b\u003e\n          in: query\n          name: sortOrder\n          schema:\n            $ref: \"#/components/schemas/ServiceSortOrder\"\n        - description: Sort Result in Descending Order. default \u003cb\u003etrue\u003c/b\u003e\n          in: query\n          name: sortDescending\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceListViewModel\"\n          description: Success\n      summary: Returns a list of services.\n      tags:\n        - Services\n  \"/consumer/v1/services/allocations/{id}\":\n    get:\n      description: \"\"\n      parameters:\n        - description: Valid id of a service allocation object\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceAllocationViewModel\"\n          description: Success\n      summary: Get a service allocation\n      tags:\n        - Services\n  \"/consumer/v1/services/{id}\":\n    get:\n      description: \"The result returned is a single service object. An id is required to find the service. Find service id's using either the GET consumer/v1/service end point,\\r\n\n        or the GET consumer/v1/appointments end point.\"\n      parameters:\n        - description: The id of the service object.\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceViewModel\"\n          description: Success\n      summary: Returns a service object.\n      tags:\n        - Services\n  \"/consumer/v1/services/{id}/allocations\":\n    get:\n      description: \"This endpoint is used primarily for event booking. When you create service type events, you allocation specific occurrences of the event \\r\n\n        against the service. \\r\n\n        \\r\n\n        You can retrieve all allocations for a location by passing in zero as the service id. Otherwise, to get allocations for a specific service\\r\n\n        pass in the service id.\\r\n\n        \\r\n\n        The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\\r\n\n        Use the other query parameters to optionally filter the results list.\"\n      parameters:\n        - description: The id of the service to list allocations. Zero for all allocations.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The id of the location. Defaults to the primary location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n        - description: The id of the resource to filter on.\n          in: query\n          name: resourceId\n          schema:\n            type: string\n        - description: Format YYYY-MM-DD. Filter appointments by on/after startDate\n          in: query\n          name: startDate\n          schema:\n            format: date-time\n            type: string\n        - description: Format YYYY-MM-DD. Filter appointments on/before endDate.\n          in: query\n          name: endDate\n          schema:\n            format: date-time\n            type: string\n        - description: Starting row of page, default 0\n          in: query\n          name: offset\n          schema:\n            format: int32\n            type: integer\n        - description: Page limit, default 20. Maximum 100.\n          in: query\n          name: limit\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceAllocationListViewModel\"\n          description: service alloaction object\n        \"400\":\n          description: Missing or invalid values in the request\n        \"401\":\n          description: Authorization error.\n        \"404\":\n          description: Service was not found\n      summary: Returns a list of service allocations.\n      tags:\n        - Services\n  \"/consumer/v1/services/{id}/resources\":\n    get:\n      description: \"The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\\r\n\n        Use the other query parameters to optionally filter the results list.\"\n      parameters:\n        - description: The id of the service object.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The id of the business location. Defaults to primary business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n        - description: Starting row of page, default 0\n          in: query\n          name: offset\n          schema:\n            format: int32\n            type: integer\n        - description: Page limit, default 20. Maximum 100.\n          in: query\n          name: limit\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceListViewModel\"\n          description: Success\n      summary: Returns a list of resources.\n      tags:\n        - Services\n  /consumer/v1/settings:\n    get:\n      description: \"The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\\r\n\n        Use the other query parameters to optionally filter the results list.\"\n      parameters:\n        - description: The id of the business location. Defaults to first business location.\n          in: query\n          name: locationId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OnlineSettingsViewModel\"\n          description: Success\n      summary: Returns a list of customers.\n      tags:\n        - Settings\n  \"/{planId}\":\n    get:\n      parameters:\n        - in: path\n          name: planId\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: locationId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n      tags:\n        - StripePlans\ncomponents:\n  schemas:\n    AddressInputModel:\n      additionalProperties: false\n      properties:\n        addressLine1:\n          nullable: true\n          type: string\n        addressLine2:\n          nullable: true\n          type: string\n        city:\n          nullable: true\n          type: string\n        country:\n          nullable: true\n          type: string\n        postalCode:\n          nullable: true\n          type: string\n        state:\n          nullable: true\n          type: string\n      type: object\n    AddressUpdateModel:\n      additionalProperties: false\n      properties:\n        addressLine1:\n          nullable: true\n          type: string\n        addressLine2:\n          nullable: true\n          type: string\n        city:\n          nullable: true\n          type: string\n        country:\n          nullable: true\n          type: string\n        postalCode:\n          nullable: true\n          type: string\n        state:\n          nullable: true\n          type: string\n      type: object\n    AppointmentAuditViewModel:\n      additionalProperties: false\n      properties:\n        appointmentId:\n          nullable: true\n          type: string\n        id:\n          nullable: true\n          type: string\n        modificationType:\n          nullable: true\n          type: string\n        modifiedBy:\n          nullable: true\n          type: string\n        modifiedOn:\n          format: date-time\n          nullable: true\n          type: string\n        notesAfter:\n          nullable: true\n          type: string\n        notesBefore:\n          nullable: true\n          type: string\n        statusAfter:\n          nullable: true\n          type: string\n        statusBefore:\n          nullable: true\n          type: string\n      type: object\n    AppointmentBookModel:\n      additionalProperties: false\n      properties:\n        customerMessage:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        groupSize:\n          format: int32\n          nullable: true\n          type: integer\n        name:\n          nullable: true\n          type: string\n        notes:\n          nullable: true\n          type: string\n        phone:\n          nullable: true\n          type: string\n        phoneExt:\n          nullable: true\n          type: string\n        phoneType:\n          nullable: true\n          type: string\n      type: object\n    AppointmentCustomerViewModel:\n      additionalProperties: false\n      properties:\n        appointmentId:\n          nullable: true\n          type: string\n        customerId:\n          nullable: true\n          type: string\n      type: object\n    AppointmentInitialModel:\n      additionalProperties: false\n      properties:\n        bookedBy:\n          nullable: true\n          type: string\n        bookingWindowId:\n          nullable: true\n          type: string\n        calendarId:\n          nullable: true\n          type: string\n        customerId:\n          nullable: true\n          type: string\n        customerMessage:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        endDateTime:\n          format: date-time\n          type: string\n        groupSize:\n          format: int32\n          nullable: true\n          type: integer\n        location:\n          nullable: true\n          type: string\n        locationId:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        notes:\n          nullable: true\n          type: string\n        phone:\n          nullable: true\n          type: string\n        phoneType:\n          nullable: true\n          type: string\n        resourceGroupId:\n          nullable: true\n          type: string\n        resourceId:\n          nullable: true\n          type: string\n        resourceIds:\n          nullable: true\n          type: string\n        serviceAllocationId:\n          nullable: true\n          type: string\n        serviceId:\n          nullable: true\n          type: string\n        startDateTime:\n          format: date-time\n          type: string\n        timezoneName:\n          nullable: true\n          type: string\n        travelAppointmentId:\n          nullable: true\n          type: string\n        travelTimeMins:\n          format: int32\n          type: integer\n      type: object\n    AppointmentInitialViewModel:\n      additionalProperties: false\n      properties:\n        auditTrail:\n          items:\n            $ref: \"#/components/schemas/AppointmentAuditViewModel\"\n          nullable: true\n          type: array\n        bookedBy:\n          nullable: true\n          type: string\n        businessName:\n          nullable: true\n          type: string\n        calendarId:\n          nullable: true\n          type: string\n        confirmationNumber:\n          nullable: true\n          type: string\n        confirmed:\n          type: boolean\n        createDate:\n          nullable: true\n          type: string\n        customFields:\n          additionalProperties:\n            $ref: \"#/components/schemas/CustomFieldViewModel\"\n          nullable: true\n          type: object\n        customerId:\n          nullable: true\n          type: string\n        customerMessage:\n          nullable: true\n          type: string\n        customers:\n          items:\n            $ref: \"#/components/schemas/AppointmentCustomerViewModel\"\n          nullable: true\n          type: array\n        date:\n          nullable: true\n          type: string\n        dateInternational:\n          nullable: true\n          type: string\n        downloadIcsUrl:\n          nullable: true\n          type: string\n        duration:\n          format: int32\n          type: integer\n        email:\n          nullable: true\n          type: string\n        emailConfirmationSent:\n          nullable: true\n          type: string\n        emailReminderSent:\n          nullable: true\n          type: string\n        endDateTime:\n          nullable: true\n          type: string\n        firstname:\n          nullable: true\n          type: string\n        groupSize:\n          format: int32\n          nullable: true\n          type: integer\n        id:\n          nullable: true\n          type: string\n        ipAddress:\n          nullable: true\n          type: string\n        lastModifiedBy:\n          nullable: true\n          type: string\n        lastModifiedOn:\n          nullable: true\n          type: string\n        lastname:\n          nullable: true\n          type: string\n        latitude:\n          nullable: true\n          type: string\n        location:\n          nullable: true\n          type: string\n        locationId:\n          nullable: true\n          type: string\n        longitude:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        notes:\n          nullable: true\n          type: string\n        objectName:\n          nullable: true\n          type: string\n        onlineBooking:\n          nullable: true\n          type: boolean\n        paymentStatus:\n          format: int32\n          type: integer\n        phone:\n          nullable: true\n          type: string\n        phoneExt:\n          nullable: true\n          type: string\n        phoneType:\n          nullable: true\n          type: string\n        rescheduledId:\n          nullable: true\n          type: string\n        resourceGroupId:\n          nullable: true\n          type: string\n        resourceGroupName:\n          nullable: true\n          type: string\n        resourceId:\n          nullable: true\n          type: string\n        resourceImageUrl:\n          nullable: true\n          type: string\n        resourceName:\n          nullable: true\n          type: string\n        resources:\n          items:\n            $ref: \"#/components/schemas/AppointmentResourceViewModel\"\n          nullable: true\n          type: array\n        serviceAllocationId:\n          nullable: true\n          type: string\n        serviceId:\n          nullable: true\n          type: string\n        serviceImageUrl:\n          nullable: true\n          type: string\n        serviceName:\n          nullable: true\n          type: string\n        smsConfirmationSent:\n          nullable: true\n          type: string\n        smsReminderSent:\n          nullable: true\n          type: string\n        startDateTime:\n          nullable: true\n          type: string\n        status:\n          nullable: true\n          type: string\n        stripeChargeId:\n          nullable: true\n          type: string\n        stripeRefundId:\n          nullable: true\n          type: string\n        time:\n          format: int32\n          type: integer\n        timezone:\n          format: int32\n          nullable: true\n          type: integer\n        timezoneIana:\n          nullable: true\n          type: string\n        timezoneId:\n          nullable: true\n          type: string\n      type: object\n    AppointmentListViewModel:\n      additionalProperties: false\n      type: object\n    AppointmentNoShowModel:\n      additionalProperties: false\n      type: object\n    AppointmentRescheduleModel:\n      additionalProperties: false\n      properties:\n        endDateTime:\n          format: date-time\n          type: string\n        resourceId:\n          nullable: true\n          type: string\n        serviceId:\n          nullable: true\n          type: string\n        startDateTime:\n          format: date-time\n          type: string\n        travelAppointmentId:\n          nullable: true\n          type: string\n        travelTimeMins:\n          format: int32\n          type: integer\n      type: object\n    AppointmentReserveModel:\n      additionalProperties: false\n      properties:\n        customerMessage:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        notes:\n          nullable: true\n          type: string\n        phone:\n          nullable: true\n          type: string\n        phoneExt:\n          nullable: true\n          type: string\n        phoneType:\n          nullable: true\n          type: string\n      type: object\n    AppointmentResourceViewModel:\n      additionalProperties: false\n      properties:\n        appointmentId:\n          nullable: true\n          type: string\n        resourceId:\n          nullable: true\n          type: string\n      type: object\n    AppointmentViewModel:\n      additionalProperties: false\n      properties:\n        auditTrail:\n          items:\n            $ref: \"#/components/schemas/AppointmentAuditViewModel\"\n          nullable: true\n          type: array\n        bookedBy:\n          nullable: true\n          type: string\n        businessName:\n          nullable: true\n          type: string\n        calendarId:\n          nullable: true\n          type: string\n        confirmationNumber:\n          nullable: true\n          type: string\n        confirmed:\n          type: boolean\n        createDate:\n          nullable: true\n          type: string\n        customFields:\n          additionalProperties:\n            $ref: \"#/components/schemas/CustomFieldViewModel\"\n          nullable: true\n          type: object\n        customerId:\n          nullable: true\n          type: string\n        customerMessage:\n          nullable: true\n          type: string\n        customers:\n          items:\n            $ref: \"#/components/schemas/AppointmentCustomerViewModel\"\n          nullable: true\n          type: array\n        date:\n          nullable: true\n          type: string\n        dateInternational:\n          nullable: true\n          type: string\n        downloadIcsUrl:\n          nullable: true\n          type: string\n        duration:\n          format: int32\n          type: integer\n        email:\n          nullable: true\n          type: string\n        emailConfirmationSent:\n          nullable: true\n          type: string\n        emailReminderSent:\n          nullable: true\n          type: string\n        endDateTime:\n          nullable: true\n          type: string\n        firstname:\n          nullable: true\n          type: string\n        groupSize:\n          format: int32\n          nullable: true\n          type: integer\n        id:\n          nullable: true\n          type: string\n        ipAddress:\n          nullable: true\n          type: string\n        lastModifiedBy:\n          nullable: true\n          type: string\n        lastModifiedOn:\n          nullable: true\n          type: string\n        lastname:\n          nullable: true\n          type: string\n        latitude:\n          nullable: true\n          type: string\n        location:\n          nullable: true\n          type: string\n        locationId:\n          nullable: true\n          type: string\n        longitude:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        notes:\n          nullable: true\n          type: string\n        objectName:\n          nullable: true\n          type: string\n        onlineBooking:\n          nullable: true\n          type: boolean\n        paymentStatus:\n          format: int32\n          type: integer\n        phone:\n          nullable: true\n          type: string\n        phoneExt:\n          nullable: true\n          type: string\n        phoneType:\n          nullable: true\n          type: string\n        rescheduledId:\n          nullable: true\n          type: string\n        resourceGroupId:\n          nullable: true\n          type: string\n        resourceGroupName:\n          nullable: true\n          type: string\n        resourceId:\n          nullable: true\n          type: string\n        resourceImageUrl:\n          nullable: true\n          type: string\n        resourceName:\n          nullable: true\n          type: string\n        resources:\n          items:\n            $ref: \"#/components/schemas/AppointmentResourceViewModel\"\n          nullable: true\n          type: array\n        serviceAllocationId:\n          nullable: true\n          type: string\n        serviceId:\n          nullable: true\n          type: string\n        serviceImageUrl:\n          nullable: true\n          type: string\n        serviceName:\n          nullable: true\n          type: string\n        smsConfirmationSent:\n          nullable: true\n          type: string\n        smsReminderSent:\n          nullable: true\n          type: string\n        startDateTime:\n          nullable: true\n          type: string\n        status:\n          nullable: true\n          type: string\n        stripeChargeId:\n          nullable: true\n          type: string\n        stripeRefundId:\n          nullable: true\n          type: string\n        time:\n          format: int32\n          type: integer\n        timezone:\n          format: int32\n          nullable: true\n          type: integer\n        timezoneIana:\n          nullable: true\n          type: string\n        timezoneId:\n          nullable: true\n          type: string\n      type: object\n    Availability3ViewModel:\n      additionalProperties: false\n      properties:\n        businessName:\n          nullable: true\n          type: string\n        firstAvailableDate:\n          nullable: true\n          type: string\n        objectName:\n          nullable: true\n          type: string\n        resourceDescription:\n          nullable: true\n          type: string\n        resourceId:\n          nullable: true\n          type: string\n        resourceIds:\n          nullable: true\n          type: string\n        resourceName:\n          nullable: true\n          type: string\n        serviceDescription:\n          nullable: true\n          type: string\n        serviceDuration:\n          format: int32\n          type: integer\n        serviceId:\n          nullable: true\n          type: string\n        serviceName:\n          nullable: true\n          type: string\n        tzRequested:\n          format: int32\n          nullable: true\n          type: integer\n      type: object\n    AvailabilityDayViewModel:\n      additionalProperties: false\n      properties:\n        objectName:\n          nullable: true\n          type: string\n        resourceDescription:\n          nullable: true\n          type: string\n        resourceId:\n          nullable: true\n          type: string\n        resourceName:\n          nullable: true\n          type: string\n        serviceDescription:\n          nullable: true\n          type: string\n        serviceId:\n          nullable: true\n          type: string\n        serviceName:\n          nullable: true\n          type: string\n        tzRequested:\n          format: int32\n          nullable: true\n          type: integer\n      type: object\n    AvailabilityViewModel:\n      additionalProperties: false\n      properties:\n        businessName:\n          nullable: true\n          type: string\n        calendarId:\n          nullable: true\n          type: string\n        calendarResourceGroupId:\n          nullable: true\n          type: string\n        endDate:\n          nullable: true\n          type: string\n        firstAvailableDate:\n          nullable: true\n          type: string\n        locationId:\n          nullable: true\n          type: string\n        objectName:\n          nullable: true\n          type: string\n        resourceDescription:\n          nullable: true\n          type: string\n        resourceId:\n          nullable: true\n          type: string\n        resourceIds:\n          nullable: true\n          type: string\n        resourceName:\n          nullable: true\n          type: string\n        serviceDescription:\n          nullable: true\n          type: string\n        serviceDuration:\n          format: int32\n          type: integer\n        serviceId:\n          nullable: true\n          type: string\n        serviceName:\n          nullable: true\n          type: string\n        startDate:\n          nullable: true\n          type: string\n        tzRequested:\n          format: int32\n          nullable: true\n          type: integer\n      type: object\n    BookingFieldListViewModel:\n      additionalProperties: false\n      properties:\n        objectName:\n          nullable: true\n          type: string\n        total:\n          format: int32\n          type: integer\n      type: object\n    ContactInputModel:\n      additionalProperties: false\n      properties:\n        businessPhone:\n          nullable: true\n          type: string\n        businessPhoneExt:\n          nullable: true\n          type: string\n        conferenceInfo:\n          nullable: true\n          type: string\n        homePhone:\n          nullable: true\n          type: string\n        mobilePhone:\n          nullable: true\n          type: string\n        preferredPhoneType:\n          nullable: true\n          type: string\n        skypeUsername:\n          nullable: true\n          type: string\n      type: object\n    ContactUpdateModel:\n      additionalProperties: false\n      properties:\n        businessPhone:\n          nullable: true\n          type: string\n        businessPhoneExt:\n          nullable: true\n          type: string\n        conferenceInfo:\n          nullable: true\n          type: string\n        homePhone:\n          nullable: true\n          type: string\n        mobilePhone:\n          nullable: true\n          type: string\n        preferredPhoneType:\n          nullable: true\n          type: string\n        skypeUsername:\n          nullable: true\n          type: string\n      type: object\n    CountryViewModel:\n      additionalProperties: false\n      description: View model for country objects\n      properties:\n        code:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        objectName:\n          nullable: true\n          type: string\n      type: object\n    CustomFieldDefinitionListViewModel:\n      additionalProperties: false\n      properties:\n        objectName:\n          nullable: true\n          type: string\n        total:\n          format: int32\n          type: integer\n      type: object\n    CustomFieldInputModel:\n      additionalProperties: false\n      properties:\n        field1:\n          nullable: true\n          type: string\n        field10:\n          nullable: true\n          type: string\n        field2:\n          nullable: true\n          type: string\n        field3:\n          nullable: true\n          type: string\n        field4:\n          nullable: true\n          type: string\n        field5:\n          nullable: true\n          type: string\n        field6:\n          nullable: true\n          type: string\n        field7:\n          nullable: true\n          type: string\n        field8:\n          nullable: true\n          type: string\n        field9:\n          nullable: true\n          type: string\n      type: object\n    CustomFieldUpdateModel:\n      additionalProperties: false\n      properties:\n        field1:\n          nullable: true\n          type: string\n        field10:\n          nullable: true\n          type: string\n        field2:\n          nullable: true\n          type: string\n        field3:\n          nullable: true\n          type: string\n        field4:\n          nullable: true\n          type: string\n        field5:\n          nullable: true\n          type: string\n        field6:\n          nullable: true\n          type: string\n        field7:\n          nullable: true\n          type: string\n        field8:\n          nullable: true\n          type: string\n        field9:\n          nullable: true\n          type: string\n      type: object\n    CustomFieldViewModel:\n      additionalProperties: false\n      properties:\n        name:\n          nullable: true\n          type: string\n        value:\n          nullable: true\n          type: string\n      type: object\n    CustomerInputModel:\n      additionalProperties: false\n      properties:\n        address:\n          $ref: \"#/components/schemas/AddressInputModel\"\n        contact:\n          $ref: \"#/components/schemas/ContactInputModel\"\n        customFields:\n          $ref: \"#/components/schemas/CustomFieldInputModel\"\n        email:\n          nullable: true\n          type: string\n        firstname:\n          nullable: true\n          type: string\n        lastname:\n          nullable: true\n          type: string\n        locationId:\n          description: \"\"\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        notificationType:\n          description: 0 = default(Email), 1 = Email, 2 = SMS, 3 = Email and SMS\n          nullable: true\n          type: string\n        sendLeadNotification:\n          type: boolean\n        stripeCustomerId:\n          nullable: true\n          type: string\n        type:\n          format: int32\n          nullable: true\n          type: integer\n      type: object\n    CustomerListViewModel:\n      additionalProperties: false\n      type: object\n    CustomerPlanListViewModel:\n      additionalProperties: false\n      type: object\n    CustomerPlanViewModel:\n      additionalProperties: false\n      properties:\n        created:\n          format: date-time\n          type: string\n        description:\n          nullable: true\n          type: string\n        id:\n          nullable: true\n          type: string\n        locationId:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        objectName:\n          nullable: true\n          type: string\n        serviceGroupId:\n          nullable: true\n          type: string\n        stripePlanId:\n          nullable: true\n          type: string\n        uid:\n          nullable: true\n          type: string\n      type: object\n    CustomerSubscriptionInputModel:\n      additionalProperties: false\n      properties:\n        customerPlanId:\n          nullable: true\n          type: string\n        planStart:\n          format: date-time\n          type: string\n        trialPeriodEnd:\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    CustomerSubscriptionListViewModel:\n      additionalProperties: false\n      type: object\n    CustomerSubscriptionUpdateModel:\n      additionalProperties: false\n      properties:\n        customerPlanId:\n          nullable: true\n          type: string\n        planStart:\n          format: date-time\n          nullable: true\n          type: string\n        trialPeriodEnd:\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    CustomerSubscriptionViewModel:\n      additionalProperties: false\n      properties:\n        customerId:\n          nullable: true\n          type: string\n        customerPlanId:\n          nullable: true\n          type: string\n        customerPlanName:\n          nullable: true\n          type: string\n        id:\n          nullable: true\n          type: string\n        objectName:\n          nullable: true\n          type: string\n        planStart:\n          format: date-time\n          type: string\n        trialPeriodEnd:\n          format: date-time\n          nullable: true\n          type: string\n        trialPeriodStart:\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    CustomerUpdateModel:\n      additionalProperties: false\n      properties:\n        address:\n          $ref: \"#/components/schemas/AddressUpdateModel\"\n        contact:\n          $ref: \"#/components/schemas/ContactUpdateModel\"\n        customFields:\n          $ref: \"#/components/schemas/CustomFieldUpdateModel\"\n        email:\n          nullable: true\n          type: string\n        firstname:\n          nullable: true\n          type: string\n        lastname:\n          nullable: true\n          type: string\n        locationId:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        notificationType:\n          description: 0 = default(Email), 1 = Email, 2 = SMS, 3 = Email and SMS\n          nullable: true\n          type: string\n        stripeCustomerId:\n          nullable: true\n          type: string\n        type:\n          format: int32\n          nullable: true\n          type: integer\n      type: object\n    CustomerViewModel:\n      additionalProperties: false\n      properties:\n        birthdate:\n          nullable: true\n          type: string\n        businessName:\n          nullable: true\n          type: string\n        companyName:\n          nullable: true\n          type: string\n        createdBy:\n          nullable: true\n          type: string\n        createdOn:\n          nullable: true\n          type: string\n        deletedStatus:\n          type: boolean\n        deletedTime:\n          nullable: true\n          type: string\n        disabled:\n          nullable: true\n          type: boolean\n        email:\n          nullable: true\n          type: string\n        emailInfo:\n          nullable: true\n          type: boolean\n        emailPromotion:\n          nullable: true\n          type: boolean\n        firstname:\n          nullable: true\n          type: string\n        gender:\n          nullable: true\n          type: string\n        groupId:\n          nullable: true\n          type: string\n        id:\n          nullable: true\n          type: string\n        inviteEmailSent:\n          nullable: true\n          type: string\n        lastVisitDate:\n          nullable: true\n          type: string\n        lastname:\n          nullable: true\n          type: string\n        latitude:\n          nullable: true\n          type: string\n        locationId:\n          nullable: true\n          type: string\n        longitude:\n          nullable: true\n          type: string\n        modifiedBy:\n          nullable: true\n          type: string\n        modifiedOn:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        notificationType:\n          nullable: true\n          type: string\n        objectName:\n          nullable: true\n          type: string\n        registeredBy:\n          nullable: true\n          type: string\n        registrationDate:\n          nullable: true\n          type: string\n        resourceId:\n          nullable: true\n          type: string\n        stripeCustomerId:\n          nullable: true\n          type: string\n        subscriptionId:\n          nullable: true\n          type: string\n        verificationDate:\n          nullable: true\n          type: string\n        verifiedBy:\n          nullable: true\n          type: string\n        welcomeEmailSent:\n          nullable: true\n          type: string\n      type: object\n    LocationListViewModel:\n      additionalProperties: false\n      type: object\n    LocationViewModel:\n      additionalProperties: false\n      properties:\n        adminEmail:\n          nullable: true\n          type: string\n        adminName:\n          nullable: true\n          type: string\n        companyId:\n          nullable: true\n          type: string\n        companyName:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        fax:\n          nullable: true\n          type: string\n        friendlyId:\n          nullable: true\n          type: string\n        id:\n          nullable: true\n          type: string\n        imageUrl:\n          nullable: true\n          type: string\n        latitude:\n          format: double\n          type: number\n        logo:\n          nullable: true\n          type: string\n        longitude:\n          format: double\n          type: number\n        maxCapacity:\n          format: int32\n          type: integer\n        maxGroupSize:\n          format: int32\n          type: integer\n        name:\n          nullable: true\n          type: string\n        objectName:\n          nullable: true\n          type: string\n        phone:\n          nullable: true\n          type: string\n        primaryBusiness:\n          type: boolean\n        primaryCalendarId:\n          nullable: true\n          type: string\n        regionId:\n          nullable: true\n          type: string\n        timezoneIana:\n          nullable: true\n          type: string\n        timezoneId:\n          nullable: true\n          type: string\n        timezoneOffset:\n          format: int32\n          nullable: true\n          type: integer\n        website:\n          nullable: true\n          type: string\n      type: object\n    OnlineSettingsViewModel:\n      additionalProperties: false\n      properties:\n        availabilityForm:\n          format: int32\n          type: integer\n        bookAheadUnit:\n          format: int32\n          type: integer\n        bookAheadValue:\n          format: int32\n          type: integer\n        bookInAdvance:\n          format: int32\n          type: integer\n        bookWithAccount:\n          type: boolean\n        bookingConfirmationMessage:\n          nullable: true\n          type: string\n        bookingMessage:\n          nullable: true\n          type: string\n        bookingPolicy:\n          nullable: true\n          type: string\n        bookingTimerMins:\n          format: int32\n          type: integer\n        businessId:\n          nullable: true\n          type: string\n        companyId:\n          nullable: true\n          type: string\n        customerBookingsPerDay:\n          format: int32\n          type: integer\n        customerVerification:\n          type: boolean\n        defaultService:\n          nullable: true\n          type: boolean\n        defaultToCustomerTimezone:\n          type: boolean\n        disableAuthorization:\n          nullable: true\n          type: boolean\n        enableWorldTimezones:\n          nullable: true\n          type: boolean\n        enabled:\n          type: boolean\n        familyMembersEnabled:\n          type: boolean\n        firstAvailable:\n          nullable: true\n          type: boolean\n        formFlow:\n          format: int32\n          type: integer\n        hideBreadCrumbNav:\n          type: boolean\n        hideContinueBooking:\n          nullable: true\n          type: boolean\n        hideLocationNav:\n          nullable: true\n          type: boolean\n        hideNavBar:\n          nullable: true\n          type: boolean\n        hideServiceGroupsNav:\n          nullable: true\n          type: boolean\n        hideServicesNav:\n          nullable: true\n          type: boolean\n        id:\n          format: int32\n          type: integer\n        lateCancelAction:\n          format: int32\n          type: integer\n        lateCancelHours:\n          format: int32\n          type: integer\n        lateRescheduleAction:\n          format: int32\n          type: integer\n        lateRescheduleHours:\n          format: int32\n          type: integer\n        liveMode:\n          nullable: true\n          type: boolean\n        objectName:\n          nullable: true\n          type: string\n        resourceAnyLabel:\n          nullable: true\n          type: string\n        resourceLabel:\n          nullable: true\n          type: string\n        resourceSelection:\n          type: boolean\n        returnToAvailability:\n          type: boolean\n        returnToService:\n          type: boolean\n        serviceLabel:\n          nullable: true\n          type: string\n        showBusinessLogo:\n          type: boolean\n        showOnSchedLogo:\n          type: boolean\n        showServiceGroups:\n          type: boolean\n      type: object\n    PlanLimitListViewModel:\n      additionalProperties: false\n      type: object\n    RepeatViewModel:\n      additionalProperties: false\n      properties:\n        frequency:\n          nullable: true\n          type: string\n        interval:\n          format: int32\n          type: integer\n        monthDay:\n          nullable: true\n          type: string\n        monthType:\n          nullable: true\n          type: string\n        weekdays:\n          nullable: true\n          type: string\n      type: object\n    ResourceListViewModel:\n      additionalProperties: false\n      type: object\n    ResourceServiceListViewModel:\n      additionalProperties: false\n      type: object\n    ResourceViewModel:\n      additionalProperties: false\n      properties:\n        bioLink:\n          nullable: true\n          type: string\n        bookingNotification:\n          format: int32\n          type: integer\n        calendarAvailability:\n          format: int32\n          type: integer\n        deletedStatus:\n          type: boolean\n        deletedTime:\n          format: date-time\n          nullable: true\n          type: string\n        description:\n          nullable: true\n          type: string\n        effectiveDate:\n          format: date-time\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        gender:\n          nullable: true\n          type: string\n        googleCalendarId:\n          nullable: true\n          type: string\n        groupId:\n          nullable: true\n          type: string\n        hourly:\n          format: double\n          nullable: true\n          type: number\n        id:\n          nullable: true\n          type: string\n        ignoreBusinessHours:\n          type: boolean\n        imageUrl:\n          nullable: true\n          type: string\n        locationId:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        notificationType:\n          format: int32\n          type: integer\n        objectName:\n          nullable: true\n          type: string\n        outlookCalendarId:\n          nullable: true\n          type: string\n        skypeName:\n          nullable: true\n          type: string\n        sortKey:\n          format: int32\n          type: integer\n        timezoneIana:\n          nullable: true\n          type: string\n        timezoneId:\n          nullable: true\n          type: string\n        timezoneOffset:\n          format: int32\n          nullable: true\n          type: integer\n      type: object\n    ServiceAllocationListViewModel:\n      additionalProperties: false\n      type: object\n    ServiceAllocationViewModel:\n      additionalProperties: false\n      properties:\n        bookingCount:\n          format: int32\n          type: integer\n        bookingLimit:\n          format: int32\n          type: integer\n        endDate:\n          nullable: true\n          type: string\n        endTime:\n          format: int32\n          type: integer\n        id:\n          nullable: true\n          type: string\n        locationId:\n          nullable: true\n          type: string\n        objectName:\n          nullable: true\n          type: string\n        reason:\n          nullable: true\n          type: string\n        repeat:\n          $ref: \"#/components/schemas/RepeatViewModel\"\n        repeats:\n          type: boolean\n        resourceDescription:\n          nullable: true\n          type: string\n        resourceId:\n          nullable: true\n          type: string\n        resourceImageUrl:\n          nullable: true\n          type: string\n        resourceName:\n          nullable: true\n          type: string\n        serviceDescription:\n          nullable: true\n          type: string\n        serviceDuration:\n          format: int32\n          type: integer\n        serviceId:\n          nullable: true\n          type: string\n        serviceImageUrl:\n          nullable: true\n          type: string\n        serviceName:\n          nullable: true\n          type: string\n        startDate:\n          nullable: true\n          type: string\n        startTime:\n          format: int32\n          type: integer\n        timezoneName:\n          nullable: true\n          type: string\n        timezoneOffset:\n          format: int32\n          nullable: true\n          type: integer\n      type: object\n    ServiceGroupListViewModel:\n      additionalProperties: false\n      type: object\n    ServiceGroupViewModel:\n      additionalProperties: false\n      properties:\n        companyId:\n          nullable: true\n          type: string\n        description:\n          nullable: true\n          type: string\n        id:\n          nullable: true\n          type: string\n        imageUrl:\n          nullable: true\n          type: string\n        label:\n          nullable: true\n          type: string\n        locationId:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        objectName:\n          nullable: true\n          type: string\n      type: object\n    ServiceListViewModel:\n      additionalProperties: false\n      type: object\n    ServiceSortOrder:\n      enum:\n        - 0\n        - 1\n      format: int32\n      type: integer\n    ServiceViewModel:\n      additionalProperties: false\n      properties:\n        bookAheadUnit:\n          format: int32\n          type: integer\n        bookAheadValue:\n          format: int32\n          type: integer\n        bookInAdvance:\n          format: int32\n          type: integer\n        bookingInterval:\n          format: int32\n          type: integer\n        bookingLimit:\n          format: int32\n          type: integer\n        calendarId:\n          nullable: true\n          type: string\n        calendarResourceGroupId:\n          nullable: true\n          type: string\n        cancellationFeeAmount:\n          format: double\n          type: number\n        cancellationFeeTaxable:\n          type: boolean\n        companyId:\n          nullable: true\n          type: string\n        consumerPadding:\n          type: boolean\n        dailyBookingLimitCount:\n          format: int32\n          type: integer\n        dailyBookingLimitMinutes:\n          format: int32\n          type: integer\n        defaultService:\n          type: boolean\n        description:\n          nullable: true\n          type: string\n        duration:\n          format: int32\n          type: integer\n        durationInterval:\n          format: int32\n          type: integer\n        durationMax:\n          format: int32\n          type: integer\n        durationMin:\n          format: int32\n          type: integer\n        durationSelect:\n          type: boolean\n        feeAmount:\n          format: double\n          type: number\n        feeTaxable:\n          type: boolean\n        id:\n          nullable: true\n          type: string\n        imageUrl:\n          nullable: true\n          type: string\n        locationId:\n          nullable: true\n          type: string\n        maxBookingLimit:\n          format: int32\n          type: integer\n        maxCapacity:\n          format: int32\n          type: integer\n        maxGroupSize:\n          format: int32\n          type: integer\n        maxResourceBookingLimit:\n          format: int32\n          type: integer\n        mediaPageUrl:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        nonRefundable:\n          type: boolean\n        objectName:\n          nullable: true\n          type: string\n        padding:\n          format: int32\n          type: integer\n        roundRobin:\n          format: int32\n          type: integer\n        serviceGroupId:\n          format: int32\n          nullable: true\n          type: integer\n        serviceGroupName:\n          nullable: true\n          type: string\n        showOnline:\n          type: boolean\n        type:\n          nullable: true\n          type: string\n      type: object\n    ServicesScope:\n      enum:\n        - 0\n        - 1\n        - 2\n      format: int32\n      type: integer\n    StateViewModel:\n      additionalProperties: false\n      description: View model for state object\n      properties:\n        code:\n          nullable: true\n          type: string\n        country:\n          nullable: true\n          type: string\n        countryName:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        objectName:\n          nullable: true\n          type: string\n      type: object\n    UnavailableTimeListViewModel:\n      additionalProperties: false\n      type: object\n    WindowAvailabilityViewModel:\n      additionalProperties: false\n      properties:\n        businessName:\n          nullable: true\n          type: string\n        objectName:\n          nullable: true\n          type: string\n        resourceDescription:\n          nullable: true\n          type: string\n        resourceId:\n          nullable: true\n          type: string\n        resourceName:\n          nullable: true\n          type: string\n        serviceDescription:\n          nullable: true\n          type: string\n        serviceDuration:\n          format: int32\n          type: integer\n        serviceId:\n          nullable: true\n          type: string\n        serviceName:\n          nullable: true\n          type: string\n        tzRequested:\n          format: int32\n          nullable: true\n          type: integer\n      type: object\n  securitySchemes:\n    oauth2:\n      flows:\n        clientCredentials:\n          scopes:\n            OnSchedApi: Consumer and Setup Interface\n          tokenUrl: https://sandbox-identity.onsched.com/connect/token\n      type: oauth2\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/onsched.com/consumer/v1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/onsched.com/consumer/v1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/consumer/v1/appointments/{id}/book\": put: security: security \"oauth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}