{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/scionproto/scion"
		},
		"file": {
			"name": "dispatcher.gen.yml",
			"size": 0,
			"path": "spec/dispatcher.gen.yml",
			"byteSize": 2708,
			"content": "# GENERATED FILE DO NOT EDIT\nopenapi: 3.0.2\ninfo:\n  description: Service Management API for the SCION Dispatcher\n  title: Dispatcher Management API\n  version: 0.1.0\nservers:\n  - url: http://{host}:{port}/api/v1\n    variables:\n      host:\n        default: localhost\n      port:\n        default: '30441'\ntags:\n  - name: common\n    description: Common API exposed by SCION services.\npaths:\n  /info:\n    get:\n      tags:\n        - common\n      summary: Basic information page about the control service process.\n      operationId: get-info\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            text/plain:\n              schema:\n                type: string\n        '400':\n          $ref: '#/components/responses/BadRequest'\n  /log/level:\n    get:\n      tags:\n        - common\n      summary: Get logging level\n      operationId: get-log-level\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogLevel'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n    put:\n      tags:\n        - common\n      summary: Set logging level\n      operationId: set-log-level\n      requestBody:\n        description: Logging Level\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogLevel'\n        required: true\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogLevel'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n  /config:\n    get:\n      tags:\n        - common\n      summary: Prints the TOML configuration file.\n      operationId: get-config\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            text/plain:\n              schema:\n                type: string\n        '400':\n          $ref: '#/components/responses/BadRequest'\ncomponents:\n  schemas:\n    StandardError:\n      type: object\n      properties:\n        error:\n          type: string\n          description: Error message\n      required:\n        - error\n    LogLevel:\n      type: object\n      properties:\n        level:\n          type: string\n          example: info\n          description: Logging level\n          enum:\n            - debug\n            - info\n            - error\n      required:\n        - level\n  responses:\n    BadRequest:\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/StandardError'\n",
			"canonicalURL": "/github.com/scionproto/scion@93f69bdb1527af31965c1bc312abba21091bfc80/-/blob/spec/dispatcher.gen.yml",
			"externalURLs": [
				{
					"url": "https://github.com/scionproto/scion/blob/93f69bdb1527af31965c1bc312abba21091bfc80/spec/dispatcher.gen.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/info\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}