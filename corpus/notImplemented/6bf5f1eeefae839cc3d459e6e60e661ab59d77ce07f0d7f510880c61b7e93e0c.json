{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-chat-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-chat-v1-swagger.yaml",
			"byteSize": 30019,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  description: Enables bots to fetch information and perform actions in Hangouts Chat.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Hangouts Chat\n  version: v1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: google\n      url: https://chat.googleapis.com/$discovery/rest?version=v1\n      version: v1\n  x-preferred: true\n  x-providerName: googleapis.com\n  x-serviceName: chat\nexternalDocs:\n  url: https://developers.google.com/hangouts/chat\ntags:\n  - name: spaces\npaths:\n  /v1/spaces:\n    get:\n      description: Lists spaces the caller is a member of.\n      operationId: chat.spaces.list\n      parameters:\n        - description: |-\n            Requested page size. The value is capped at 1000.\n            Server may return fewer results than requested.\n            If unspecified, server will default to 100.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: A token identifying a page of results the server should return.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListSpacesResponse\"\n      tags:\n        - spaces\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  \"/v1/{name}\":\n    delete:\n      description: Deletes a message.\n      operationId: chat.spaces.messages.delete\n      parameters:\n        - description: |-\n            Required. Resource name of the message to be deleted, in the form\n            \"spaces/*/messages/*\"\n\n            Example: spaces/AAAAMpdlehY/messages/UMxbHmzDlr4.UMxbHmzDlr4\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      tags:\n        - spaces\n    get:\n      description: Returns a message.\n      operationId: chat.spaces.messages.get\n      parameters:\n        - description: |-\n            Required. Resource name of the message to be retrieved, in the form\n            \"spaces/*/messages/*\".\n\n            Example: spaces/AAAAMpdlehY/messages/UMxbHmzDlr4.UMxbHmzDlr4\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Message\"\n      tags:\n        - spaces\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    put:\n      description: Updates a message.\n      operationId: chat.spaces.messages.update\n      parameters:\n        - description: |-\n            Resource name, in the form \"spaces/*/messages/*\".\n\n            Example: spaces/AAAAMpdlehY/messages/UMxbHmzDlr4.UMxbHmzDlr4\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n        - description: |-\n            Required. The field paths to be updated.\n\n            Currently supported field paths: \"text\", \"cards\".\n          in: query\n          name: updateMask\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Message\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Message\"\n      tags:\n        - spaces\n  \"/v1/{parent}/members\":\n    get:\n      description: Lists human memberships in a space.\n      operationId: chat.spaces.members.list\n      parameters:\n        - description: |-\n            Requested page size. The value is capped at 1000.\n            Server may return fewer results than requested.\n            If unspecified, server will default to 100.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: A token identifying a page of results the server should return.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: \u003e-\n            Required. The resource name of the space for which membership list\n            is to be\n\n            fetched, in the form \"spaces/*\".\n\n\n            Example: spaces/AAAAMpdlehY\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListMembershipsResponse\"\n      tags:\n        - spaces\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  \"/v1/{parent}/messages\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: Creates a message.\n      operationId: chat.spaces.messages.create\n      parameters:\n        - description: |-\n            Required. Space resource name, in the form \"spaces/*\".\n            Example: spaces/AAAAMpdlehY\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n        - description: \u003e-\n            Opaque thread identifier string that can be specified to group\n            messages\n\n            into a single thread. If this is the first message with a given thread\n\n            identifier, a new thread is created. Subsequent messages with the same\n\n            thread identifier will be posted into the same thread. This relieves bots\n\n            and webhooks from having to store the Hangouts Chat thread ID of a thread (created earlier by them) to post\n\n            further updates to it.\n\n\n            Has no effect if thread field,\n\n            corresponding to an existing thread, is set in message.\n          in: query\n          name: threadKey\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Message\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Message\"\n      tags:\n        - spaces\nservers:\n  - url: https://chat.googleapis.com/\ncomponents:\n  parameters:\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n          - media\n          - proto\n        default: json\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be\n        any arbitrary string assigned to a user, but should not exceed 40\n        characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        type: string\n        enum:\n          - \"1\"\n          - \"2\"\n  requestBodies:\n    Message:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Message\"\n  schemas:\n    ActionParameter:\n      description: |-\n        List of string parameters to supply when the action method is invoked.\n        For example, consider three snooze buttons: snooze now, snooze 1 day,\n        snooze next week. You might use action method = snooze(), passing the\n        snooze type and snooze time in the list of string parameters.\n      properties:\n        key:\n          description: The name of the parameter for the action script.\n          type: string\n        value:\n          description: The value of the parameter.\n          type: string\n      type: object\n    ActionResponse:\n      description: Parameters that a bot can use to configure how it's response is posted.\n      properties:\n        type:\n          description: The type of bot response.\n          enum:\n            - TYPE_UNSPECIFIED\n            - NEW_MESSAGE\n            - UPDATE_MESSAGE\n            - REQUEST_CONFIG\n          type: string\n        url:\n          description: URL for users to auth or config. (Only for REQUEST_CONFIG response\n            types.)\n          type: string\n      type: object\n    Annotation:\n      description: |-\n        Annotations associated with the plain-text body of the message.\n\n        Example plain-text message body:\n        ```\n        Hello @FooBot how are you!\"\n        ```\n\n        The corresponding annotations metadata:\n        ```\n        \"annotations\":[{\n          \"type\":\"USER_MENTION\",\n          \"startIndex\":6,\n          \"length\":7,\n          \"userMention\": {\n            \"user\": {\n              \"name\":\"users/107946847022116401880\",\n              \"displayName\":\"FooBot\",\n              \"avatarUrl\":\"https://goo.gl/aeDtrS\",\n              \"type\":\"BOT\"\n            },\n            \"type\":\"MENTION\"\n           }\n        }]\n        ```\n      properties:\n        length:\n          description: \u003e-\n            Length of the substring in the plain-text message body this\n            annotation\n\n            corresponds to.\n          format: int32\n          type: integer\n        startIndex:\n          description: |-\n            Start index (0-based, inclusive) in the plain-text message body this\n            annotation corresponds to.\n          format: int32\n          type: integer\n        type:\n          description: The type of this annotation.\n          enum:\n            - ANNOTATION_TYPE_UNSPECIFIED\n            - USER_MENTION\n          type: string\n        userMention:\n          $ref: \"#/components/schemas/UserMentionMetadata\"\n      type: object\n    Button:\n      description: A button. Can be a text button or an image button.\n      properties:\n        imageButton:\n          $ref: \"#/components/schemas/ImageButton\"\n        textButton:\n          $ref: \"#/components/schemas/TextButton\"\n      type: object\n    Card:\n      description: A card is a UI element that can contain UI widgets such as texts, images.\n      properties:\n        cardActions:\n          description: The actions of this card.\n          items:\n            $ref: \"#/components/schemas/CardAction\"\n          type: array\n        header:\n          $ref: \"#/components/schemas/CardHeader\"\n        name:\n          description: Name of the card.\n          type: string\n        sections:\n          description: Sections are separated by a line divider.\n          items:\n            $ref: \"#/components/schemas/Section\"\n          type: array\n      type: object\n    CardAction:\n      description: |-\n        A card action is\n        the action associated with the card. For an invoice card, a\n        typical action would be: delete invoice, email invoice or open the\n        invoice in browser.\n      properties:\n        actionLabel:\n          description: The label used to be displayed in the action menu item.\n          type: string\n        onClick:\n          $ref: \"#/components/schemas/OnClick\"\n      type: object\n    CardHeader:\n      properties:\n        imageStyle:\n          description: The image's type (e.g. square border or circular border).\n          enum:\n            - IMAGE_STYLE_UNSPECIFIED\n            - IMAGE\n            - AVATAR\n          type: string\n        imageUrl:\n          description: The URL of the image in the card header.\n          type: string\n        subtitle:\n          description: The subtitle of the card header.\n          type: string\n        title:\n          description: \u003e-\n            The title must be specified. The header has a fixed height: if both\n            a\n\n            title and subtitle is specified, each will take up 1 line. If only the\n\n            title is specified, it will take up both lines.\n          type: string\n      type: object\n    DeprecatedEvent:\n      description: Hangouts Chat events.\n      properties:\n        action:\n          $ref: \"#/components/schemas/FormAction\"\n        configCompleteRedirectUrl:\n          description: \u003e-\n            The URL the bot should redirect the user to after they have\n            completed an\n\n            authorization or configuration flow outside of Hangouts Chat. See the\n\n            [Authorizing access to 3p services guide](/hangouts/chat/how-tos/auth-3p)\n\n            for more information.\n          type: string\n        eventTime:\n          description: The timestamp indicating when the event was dispatched.\n          format: google-datetime\n          type: string\n        message:\n          $ref: \"#/components/schemas/Message\"\n        space:\n          $ref: \"#/components/schemas/Space\"\n        threadKey:\n          description: |-\n            The bot-defined key for the thread related to the event. See the\n            thread_key field of the\n            `spaces.message.create` request for more information.\n          type: string\n        token:\n          description: \u003e-\n            A secret value that bots can use to verify if a request is from\n            Google. The\n\n            token is randomly generated by Google, remains static, and can be obtained\n\n            from the Hangouts Chat API configuration page in the Cloud Console.\n\n            Developers can revoke/regenerate it if needed from the same page.\n          type: string\n        type:\n          description: The type of the event.\n          enum:\n            - UNSPECIFIED\n            - MESSAGE\n            - ADDED_TO_SPACE\n            - REMOVED_FROM_SPACE\n            - CARD_CLICKED\n          type: string\n        user:\n          $ref: \"#/components/schemas/User\"\n      type: object\n    Empty:\n      description: \u003e-\n        A generic empty message that you can re-use to avoid defining duplicated\n\n        empty messages in your APIs. A typical example is to use it as the request\n\n        or the response type of an API method. For instance:\n\n            service Foo {\n              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n            }\n\n        The JSON representation for `Empty` is empty JSON object `{}`.\n      properties: {}\n      type: object\n    FormAction:\n      description: |-\n        A form action describes the behavior when the form is submitted.\n        For example, an Apps Script can be invoked to handle the form.\n      properties:\n        actionMethodName:\n          description: |-\n            Apps Script function to invoke when the containing element is\n            clicked/activated.\n          type: string\n        parameters:\n          description: List of action parameters.\n          items:\n            $ref: \"#/components/schemas/ActionParameter\"\n          type: array\n      type: object\n    Image:\n      description: An image that is specified by a URL and can have an onclick action.\n      properties:\n        aspectRatio:\n          description: The aspect ratio of this image (width/height).\n          format: double\n          type: number\n        imageUrl:\n          description: The URL of the image.\n          type: string\n        onClick:\n          $ref: \"#/components/schemas/OnClick\"\n      type: object\n    ImageButton:\n      description: An image button with an onclick action.\n      properties:\n        icon:\n          description: \u003e-\n            The icon specified by an enum that indices to an icon provided by\n            Chat\n\n            API.\n          enum:\n            - ICON_UNSPECIFIED\n            - AIRPLANE\n            - BOOKMARK\n            - BUS\n            - CAR\n            - CLOCK\n            - CONFIRMATION_NUMBER_ICON\n            - DOLLAR\n            - DESCRIPTION\n            - EMAIL\n            - EVENT_PERFORMER\n            - EVENT_SEAT\n            - FLIGHT_ARRIVAL\n            - FLIGHT_DEPARTURE\n            - HOTEL\n            - HOTEL_ROOM_TYPE\n            - INVITE\n            - MAP_PIN\n            - MEMBERSHIP\n            - MULTIPLE_PEOPLE\n            - OFFER\n            - PERSON\n            - PHONE\n            - RESTAURANT_ICON\n            - SHOPPING_CART\n            - STAR\n            - STORE\n            - TICKET\n            - TRAIN\n            - VIDEO_CAMERA\n            - VIDEO_PLAY\n          type: string\n        iconUrl:\n          description: The icon specified by a URL.\n          type: string\n        name:\n          description: |-\n            The name of this image_button which will be used for accessibility.\n            Default value will be provided if developers don't specify.\n          type: string\n        onClick:\n          $ref: \"#/components/schemas/OnClick\"\n      type: object\n    KeyValue:\n      description: |-\n        A UI element contains a key (label) and a value (content). And this\n        element may also contain some actions such as onclick button.\n      properties:\n        bottomLabel:\n          description: The text of the bottom label. Formatted text supported.\n          type: string\n        button:\n          $ref: \"#/components/schemas/Button\"\n        content:\n          description: The text of the content. Formatted text supported and always\n            required.\n          type: string\n        contentMultiline:\n          description: If the content should be multiline.\n          type: boolean\n        icon:\n          description: |-\n            An enum value that will be replaced by the Chat API with the\n            corresponding icon image.\n          enum:\n            - ICON_UNSPECIFIED\n            - AIRPLANE\n            - BOOKMARK\n            - BUS\n            - CAR\n            - CLOCK\n            - CONFIRMATION_NUMBER_ICON\n            - DOLLAR\n            - DESCRIPTION\n            - EMAIL\n            - EVENT_PERFORMER\n            - EVENT_SEAT\n            - FLIGHT_ARRIVAL\n            - FLIGHT_DEPARTURE\n            - HOTEL\n            - HOTEL_ROOM_TYPE\n            - INVITE\n            - MAP_PIN\n            - MEMBERSHIP\n            - MULTIPLE_PEOPLE\n            - OFFER\n            - PERSON\n            - PHONE\n            - RESTAURANT_ICON\n            - SHOPPING_CART\n            - STAR\n            - STORE\n            - TICKET\n            - TRAIN\n            - VIDEO_CAMERA\n            - VIDEO_PLAY\n          type: string\n        iconUrl:\n          description: The icon specified by a URL.\n          type: string\n        onClick:\n          $ref: \"#/components/schemas/OnClick\"\n        topLabel:\n          description: The text of the top label. Formatted text supported.\n          type: string\n      type: object\n    ListMembershipsResponse:\n      properties:\n        memberships:\n          description: List of memberships in the requested (or first) page.\n          items:\n            $ref: \"#/components/schemas/Membership\"\n          type: array\n        nextPageToken:\n          description: \u003e-\n            Continuation token to retrieve the next page of results. It will be\n            empty\n\n            for the last page of results.\n          type: string\n      type: object\n    ListSpacesResponse:\n      properties:\n        nextPageToken:\n          description: \u003e-\n            Continuation token to retrieve the next page of results. It will be\n            empty\n\n            for the last page of results. Tokens expire in an hour. An error is thrown\n\n            if an expired token is passed.\n          type: string\n        spaces:\n          description: List of spaces in the requested (or first) page.\n          items:\n            $ref: \"#/components/schemas/Space\"\n          type: array\n      type: object\n    Membership:\n      description: Represents a membership relation in Hangouts Chat.\n      properties:\n        createTime:\n          description: \u003e-\n            The creation time of the membership a.k.a the time at which the\n            member\n\n            joined the space, if applicable.\n          format: google-datetime\n          type: string\n        member:\n          $ref: \"#/components/schemas/User\"\n        name:\n          description: |-\n            Resource name of the membership, in the form \"spaces/*/members/*\".\n\n            Example: spaces/AAAAMpdlehY/members/105115627578887013105\n          type: string\n        state:\n          description: State of the membership.\n          enum:\n            - MEMBERSHIP_STATE_UNSPECIFIED\n            - JOINED\n            - INVITED\n            - NOT_A_MEMBER\n          type: string\n      type: object\n    Message:\n      description: A message in Hangouts Chat.\n      properties:\n        actionResponse:\n          $ref: \"#/components/schemas/ActionResponse\"\n        annotations:\n          description: Output only. Annotations associated with the text in this message.\n          items:\n            $ref: \"#/components/schemas/Annotation\"\n          type: array\n        argumentText:\n          description: Plain-text body of the message with all bot mentions stripped out.\n          type: string\n        cards:\n          description: \u003e-\n            Rich, formatted and interactive cards that can be used to display UI\n\n            elements such as: formatted texts, buttons, clickable images. Cards are\n\n            normally displayed below the plain-text body of the message.\n          items:\n            $ref: \"#/components/schemas/Card\"\n          type: array\n        createTime:\n          description: \u003e-\n            Output only. The time at which the message was created in Hangouts\n            Chat\n\n            server.\n          format: google-datetime\n          type: string\n        fallbackText:\n          description: \u003e-\n            A plain-text description of the message's cards, used when the\n            actual cards\n\n            cannot be displayed (e.g. mobile notifications).\n          type: string\n        name:\n          description: |-\n            Resource name, in the form \"spaces/*/messages/*\".\n\n            Example: spaces/AAAAMpdlehY/messages/UMxbHmzDlr4.UMxbHmzDlr4\n          type: string\n        previewText:\n          description: \u003e-\n            Text for generating preview chips. This text will not be displayed\n            to the\n\n            user, but any links to images, web pages, videos, etc. included here will\n\n            generate preview chips.\n          type: string\n        sender:\n          $ref: \"#/components/schemas/User\"\n        space:\n          $ref: \"#/components/schemas/Space\"\n        text:\n          description: Plain-text body of the message.\n          type: string\n        thread:\n          $ref: \"#/components/schemas/Thread\"\n      type: object\n    OnClick:\n      description: An onclick action (e.g. open a link).\n      properties:\n        action:\n          $ref: \"#/components/schemas/FormAction\"\n        openLink:\n          $ref: \"#/components/schemas/OpenLink\"\n      type: object\n    OpenLink:\n      description: A link that opens a new window.\n      properties:\n        url:\n          description: The URL to open.\n          type: string\n      type: object\n    Section:\n      description: |-\n        A section contains a collection of widgets that are rendered\n        (vertically) in the order that they are specified. Across all platforms,\n        cards have a narrow fixed width, so\n        there is currently no need for layout properties (e.g. float).\n      properties:\n        header:\n          description: The header of the section, text formatted supported.\n          type: string\n        widgets:\n          description: A section must contain at least 1 widget.\n          items:\n            $ref: \"#/components/schemas/WidgetMarkup\"\n          type: array\n      type: object\n    Space:\n      description: A room or DM in Hangouts Chat.\n      properties:\n        displayName:\n          description: Output only. The display name (only if the space is a room).\n          type: string\n        name:\n          description: |-\n            Resource name of the space, in the form \"spaces/*\".\n\n            Example: spaces/AAAAMpdlehYs\n          type: string\n        type:\n          description: Output only. The type of a space.\n          enum:\n            - TYPE_UNSPECIFIED\n            - ROOM\n            - DM\n          type: string\n      type: object\n    TextButton:\n      description: A button with text and onclick action.\n      properties:\n        onClick:\n          $ref: \"#/components/schemas/OnClick\"\n        text:\n          description: The text of the button.\n          type: string\n      type: object\n    TextParagraph:\n      description: A paragraph of text. Formatted text supported.\n      properties:\n        text:\n          type: string\n      type: object\n    Thread:\n      description: A thread in Hangouts Chat.\n      properties:\n        name:\n          description: |-\n            Resource name, in the form \"spaces/*/threads/*\".\n\n            Example: spaces/AAAAMpdlehY/threads/UMxbHmzDlr4\n          type: string\n      type: object\n    User:\n      description: A user in Hangouts Chat.\n      properties:\n        displayName:\n          description: The user's display name.\n          type: string\n        name:\n          description: Resource name, in the format \"users/*\".\n          type: string\n        type:\n          description: User type.\n          enum:\n            - TYPE_UNSPECIFIED\n            - HUMAN\n            - BOT\n          type: string\n      type: object\n    UserMentionMetadata:\n      description: Annotation metadata for user mentions (@).\n      properties:\n        type:\n          description: The type of user mention.\n          enum:\n            - TYPE_UNSPECIFIED\n            - ADD\n            - MENTION\n          type: string\n        user:\n          $ref: \"#/components/schemas/User\"\n      type: object\n    WidgetMarkup:\n      description: A widget is a UI element that presents texts, images, etc.\n      properties:\n        buttons:\n          description: |-\n            A list of buttons. Buttons is also oneof data and only one of these\n            fields should be set.\n          items:\n            $ref: \"#/components/schemas/Button\"\n          type: array\n        image:\n          $ref: \"#/components/schemas/Image\"\n        keyValue:\n          $ref: \"#/components/schemas/KeyValue\"\n        textParagraph:\n          $ref: \"#/components/schemas/TextParagraph\"\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-chat-v1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-chat-v1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/spaces\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}