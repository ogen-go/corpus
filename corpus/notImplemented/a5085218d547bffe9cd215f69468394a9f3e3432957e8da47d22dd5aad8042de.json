{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/fungenerators.com/barcode/1.5/openapi.yaml",
			"byteSize": 9226,
			"content": "openapi: 3.0.0\nservers:\n  - url: http://api.fungenerators.com\n  - url: https://api.fungenerators.com\ninfo:\n  contact:\n    name: Fun Generators\n    url: http://fungenerators.com/api/barcode/\n  description: |\n    Generate Barcode images for a given barcode number. You can decode Barcode images and get the barcodes in a numberic form as well. Many industry standard barcode types are supported. The best and complete Barcode API on the cloud. [Click here to subscribe](http://fungenerators.com/api/barcode/) \n  termsOfService: https://fungenerators.com/terms\n  title: Barcode API\n  version: \"1.5\"\n  x-apisguru-categories:\n    - text\n  x-origin:\n    - format: openapi\n      url: https://fungenerators.com/yaml/barcode.yaml\n      version: \"3.0\"\n  x-providerName: fungenerators.com\n  x-serviceName: barcode\ntags:\n  - description: Barcode API\n    externalDocs:\n      description: Find out more\n      url: http://fungenerators.com/api/barcode/\n    name: Barcode\npaths:\n  /barcode/decode:\n    post:\n      description: Decode a Barcode image and return the cotents if successful\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                barimage:\n                  description: Barcode image to decode and get the content value\n                  format: binary\n                  type: string\n              required:\n                - barimage\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": [\n                          {\n                                   \"value\": 234567,\n                                   \"format\": 'C39',\n                                   \"content_type\": \"number\"\n                          }\n                      ]\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }              \n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - Barcode\n  /barcode/decode/types:\n    get:\n      description: Get the supported barcode types for the decoding process.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\"total\":28},\n                      \"contents\": \n                      {\n                         \"types\":\n                         {\n                           \"C39\":\"Code 39\",\n                           \"C39CKSUM\":\"Code 39 with Checksum\",\n                           \"C39E\":\"Extended Code 39\",\n                           \"C39ECKSUM\":\"Extended Code 39 With Checksum\",\n                           \"C93\":\"Code 93\",\n                           \"I25\":\"Interleaved 2 of 5\",\n                           \"I25CKSUM\":\"Interleaved 2 of 5 with Checksum\",\n                           \"C128\":\"Code 128 (Standard)\",\n                           \"C128A\":\"Code 128-A\",\n                           \"C128B\":\"Code 128-B\",\n                           \"C128C\":\"Code 128-C\",\n                           \"CODABAR\":\"CODABAR\"\n                           \n                         }\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }                    \n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - Barcode\n  /barcode/encode:\n    get:\n      description: Get a Bar Code image for the given barcode number\n      parameters:\n        - description: Barcode number\n          in: query\n          name: number\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Barcode format default C39. Valid values are the keys to those returned from /barcode/encode/types.\n          in: query\n          name: barcodeformat\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Output image format. Must be one of png/html/jpg/svg\n          in: query\n          name: outputformat\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Width factor of the image\n          in: query\n          name: widthfactor\n          required: false\n          schema:\n            format: integer\n            type: integer\n        - description: Total height of the image\n          in: query\n          name: totalheight\n          required: false\n          schema:\n            format: integer\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"success\": {\n                            \"total\": 1\n                        },\n                        \"contents\": [\n                            {\n                                \"encoding\": \"base64\",\n                                \"format\": \"png\",\n                                \"content\": \"\",\n                            }\n                        ]\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }                    \n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - Barcode\n  /barcode/encode/types:\n    get:\n      description: Get the supported barcode types for encoding / image generation.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\"total\":28},\n                      \"contents\": {\"types\":\n                           {\n                              \"C39\":\"Code 39\",\n                              \"C39CKSUM\":\"Code 39 with Checksum\",\n                              \"C39E\":\"Extended Code 39\",\n                              \"C39ECKSUM\":\"Extended Code 39 With Checksum\",\n                              \"C93\":\"Code 93\",\n                              \"S25\":\"Standard 2 of 5\",\n                              \"S25CKSUM\":\"Standard 2 of 5 with Checksum\",\n                              \"I25\":\"Interleaved 2 of 5\",\n                              \"I25CKSUM\":\"Interleaved 2 of 5 with Checksum\",\n                              \"UPCA\":\"UPC-A\",\n                              \"UPCE\":\"UPC-E\",\n                              \"C128\":\"Code 128 (Standard)\",\n                              \"C128A\":\"Code 128-A\",\n                              \"C128B\":\"Code 128-B\",\n                              \"C128C\":\"Code 128-C\",\n                              \"EAN8\":\"EAN-8\",\n                              \"EAN13\":\"EAN-13\",\n                              \"MSI\":\"MSI Plessey\",\n                              \"MSICKSUM\":\"MSI with Checksum\",\n                              \"POSTNET\":\"POSTNET\",\n                              \"PLANET\":\"PLANET\",\n                              \"RMS4CC\":\"RMS4CC \\/ CBC\",\n                              \"KIX\":\"KIX\",\n                              \"IMB\":\"IMB\",\n                              \"CODABAR\":\"CODABAR\",\n                              \"CODE11\":\"Code 11\",\n                              \"PHARMA\":\"Pharma One-Track\",\n                              \"PHARMA2T\":\"Pharma Two-Track\"\n                           }\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - Barcode\ncomponents:\n  securitySchemes:\n    X-Fungenerators-Api-Secret:\n      in: header\n      name: X-Fungenerators-Api-Secret\n      type: apiKey\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/fungenerators.com/barcode/1.5/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/fungenerators.com/barcode/1.5/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/barcode/decode/types\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}