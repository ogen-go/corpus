{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Cosmo-Tech/cosmotech-api"
		},
		"file": {
			"name": "organization.yaml",
			"size": 0,
			"path": "organization/src/main/openapi/organization.yaml",
			"byteSize": 20289,
			"content": "openapi: 3.0.3\n\ninfo:\n  title: Cosmo Tech Organization Manager API\n  description: Cosmo Tech Organization Manager API\n  version: 0.0.8-SNAPSHOT\n\nservers:\n- url: 'https://api.azure.cosmo-platform.com'\n- url: 'http://localhost:4010'\n\nsecurity:\n- oAuth2AuthCode: [ ]\n\ntags:\n- name: organization\n  description: Organization Management\n\npaths:\n  /organizations:\n    post:\n      operationId: registerOrganization\n      tags:\n        - organization\n      summary: Register a new organization\n      requestBody:\n        description: the Organization to register\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Organization'\n            examples:\n              NewOrganizationIn:\n                $ref: '#/components/examples/NewOrganizationIn'\n          application/yaml:\n            schema:\n              type: string\n              format: binary\n            examples:\n              NewOrganizationIn:\n                $ref: '#/components/examples/NewOrganizationIn'\n      responses:\n        \"201\":\n          description: the Organization details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n              examples:\n                CosmoOrganization:\n                  $ref: '#/components/examples/CosmoOrganization'\n        \"400\":\n          description: Bad request\n    get:\n      operationId: findAllOrganizations\n      tags:\n        - organization\n      summary: List all Organizations\n      responses:\n        \"200\":\n          description: the list of Organizations\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Organization'\n              examples:\n                TwoOrganizations:\n                  $ref: '#/components/examples/TwoOrganizations'\n\n  /organizations/{organization_id}:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n    get:\n      operationId: findOrganizationById\n      tags:\n        - organization\n      summary: Get the details of an Organization\n      responses:\n        \"200\":\n          description: the Organization details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n              examples:\n                CosmoOrganization:\n                  $ref: '#/components/examples/CosmoOrganization'\n        \"404\":\n          description: the Organization specified is unknown or you don't have access to it\n    patch:\n      operationId: updateOrganization\n      tags:\n        - organization\n      summary: Update an Organization\n      requestBody:\n        description: the new Organization details\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Organization'\n            examples:\n              ChangeName:\n                summary: Change Name of Organization\n                description: Change the name of Organization 1 to CosmoTech Digital Twins Engine\n                value:\n                  name: \"CosmoTech Digital Twins Engine\"\n          application/yaml:\n            schema:\n              type: string\n              format: binary\n            examples:\n              ChangeName:\n                summary: Change Name of Organization\n                description: Change the name of Organization 1 to CosmoTech Digital Twins Engine\n                value:\n                  name: \"CosmoTech Digital Twins Engine\"\n      responses:\n        \"200\":\n          description: the organization details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n              examples:\n                CosmoThreeUsers:\n                  $ref: '#/components/examples/CosmoThreeUsers'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: the Organization specified is unknown or you don't have access to it\n    delete:\n      operationId: unregisterOrganization\n      tags:\n        - organization\n      summary: Unregister an organization\n      responses:\n        \"204\":\n          description: Request succeeded\n        \"404\":\n          description: the Organization specified is unknown or you don't have access to it\n\n  /organizations/{organization_id}/users:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: addOrReplaceUsersInOrganization\n      tags:\n        - organization\n      summary: Add (or replace) users in the Organization specified\n      requestBody:\n        description: the Users to add. Any User with the same ID is overwritten\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/OrganizationUser'\n            examples:\n              AddUser:\n                summary: Add a user\n                description: Add the user Bob to organization Cosmo Tech\n                value:\n                  - id: \"2\"\n                    roles:\n                      - User\n                  - id: \"3\"\n                    roles:\n                      - Developer\n      responses:\n        \"201\":\n          description: the Organization Users\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OrganizationUser'\n              examples:\n                TwoOrganizationUsers:\n                  $ref: '#/components/examples/TwoOrganizationUsers'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: the Organization specified is unknown or you don't have access to it\n    delete:\n      operationId: removeAllUsersInOrganization\n      tags:\n        - organization\n      summary: Remove all users from the Organization specified\n      responses:\n        \"204\":\n          description: the operation succeeded\n        \"404\":\n          description: the Organization specified is unknown or you don't have access to it\n\n  /organizations/{organization_id}/users/{user_id}:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: user_id\n        in: path\n        description: the User identifier\n        required: true\n        schema:\n          type: string\n    delete:\n      operationId: removeUserFromOrganization\n      tags:\n        - organization\n      summary: Remove the specified user from the given Organization\n      responses:\n        \"204\":\n          description: Request succeeded\n        \"404\":\n          description: the Organization or the User specified is unknown or you don't have access to them\n\n  /organizations/{organization_id}/services/tenantCredentials:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n    patch:\n      operationId: updateTenantCredentialsByOrganizationId\n      tags:\n        - organization\n      summary: Update tenant credentials for the Organization specified\n      requestBody:\n        description: the new Tenant Credentials to use\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              description: a freeform credentials object for the Organization tenant. Structure depends on cloud provider\n              additionalProperties: true\n            examples:\n              OrganizationTenantCredentials:\n                value:\n                  azureTenantId: \"\u003cmy_azure_tenant_id\u003e\"\n                  azureClientId: \"\u003cmy_azure_client_id\u003e\"\n                  azureClientSecret: \"\u003cmy_azure_client_secret\u003e\"\n      responses:\n        \"200\":\n          description: the Organization Tenant Credentials\n          content:\n            application/json:\n              schema:\n                type: object\n                description: a freeform credentials object for the Organization tenant. Structure depends on cloud provider\n                additionalProperties: true\n              examples:\n                OrganizationTenantCredentials:\n                  value:\n                    azureTenantId: \"\u003cmy_azure_tenant_id\u003e\"\n                    azureClientId: \"\u003cmy_azure_client_id\u003e\"\n                    azureClientSecret: \"\u003cmy_azure_client_secret\u003e\"\n        \"404\":\n          description: the Organization specified is unknown or you don't have access to it\n\n\n  /organizations/{organization_id}/services/storage:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n    patch:\n      operationId: updateStorageByOrganizationId\n      tags:\n        - organization\n      summary: Update storage configuration for the Organization specified\n      requestBody:\n        description: the new Storage configuration to use\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OrganizationService'\n            examples:\n              OrganizationTenantCredentials:\n                value:\n                  baseUri: https://csmphoenixcontainer.blob.core.windows.net\n          application/yaml:\n            schema:\n              type: string\n              format: binary\n            examples:\n              OrganizationTenantCredentials:\n                value:\n                  baseUri: https://csmphoenixcontainer.blob.core.windows.net\n      responses:\n        \"200\":\n          description: the Organization Storage configuration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationService'\n              examples:\n                OrganizationTenantCredentials:\n                  value:\n                    platformService: storage\n                    cloudService: AzureStorage\n                    baseUri: https://csmphoenixcontainer.blob.core.windows.net\n                    resourceUri: organization-2/files\n        \"404\":\n          description: the Organization specified is unknown or you don't have access to it\n\n  /organizations/{organization_id}/services/solutionsContainerRegistry:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n    patch:\n      operationId: updateSolutionsContainerRegistryByOrganizationId\n      tags:\n        - organization\n      summary: Update the solutions container registry configuration for the Organization specified\n      requestBody:\n        description: the new solutions container registry configuration to use\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OrganizationService'\n            examples:\n              OrganizationSolutionContainerRegistry:\n                value:\n                  baseUri: mysolutiontwinengines.azurecr.io\n          application/yaml:\n            schema:\n              type: string\n              format: binary\n            examples:\n              OrganizationSolutionContainerRegistry:\n                value:\n                  baseUri: mysolutiontwinengines.azurecr.io\n      responses:\n        \"200\":\n          description: the Organization solutions container registry configuration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationService'\n              examples:\n                OrganizationSolutionContainerRegistry:\n                  value:\n                    cloudService: AzureStorage\n                    baseUri: mysolutiontwinengines.azurecr.io\n        \"404\":\n          description: the Organization specified is unknown or you don't have access to it\n\ncomponents:\n  securitySchemes:\n    oAuth2AuthCode:\n      type: oauth2\n      description: OAuth2 authentication\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/v2.0/authorize\n          scopes:\n            http://dev.api.cosmotech.com/platform: Platform scope\n  schemas:\n    Organization:\n      type: object\n      description: an Organization\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: the Organization unique identifier\n        name:\n          type: string\n          description: the Organization name\n        ownerId:\n          type: string\n          readOnly: true\n          description: the Owner User Id\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrganizationUser'\n        services:\n          descriptions: the list of Cloud services specific to the Organization\n          $ref: '#/components/schemas/OrganizationServices'\n#      required:\n#        - name\n    OrganizationServices:\n      type: object\n      description: the cloud service resources of the Organization\n      properties:\n        tenantCredentials:\n          type: object\n          description: a freeform credentials object for the Organization tenant. Structure depends on cloud provider\n          additionalProperties: true\n        storage:\n          description: the Organization file storage specific informations\n          $ref: '#/components/schemas/OrganizationService'\n        solutionsContainerRegistry:\n          description: the Container Registry for Organization Solutions images\n          $ref: '#/components/schemas/OrganizationService'\n    OrganizationService:\n      type: object\n      description: a cloud service resource\n      properties:\n        cloudService:\n          type: string\n          description: the cloud service name\n        baseUri:\n          type: string\n          description: the platform base uri for this service\n        platformService:\n          type: string\n          description: the Platform service associated to the resource\n        resourceUri:\n          type: string\n          description: the Organization specific uri for this service resource\n        credentials:\n          type: object\n          description: a freeform credentials object. Structure depends on service\n          additionalProperties: true\n    OrganizationUser:\n      type: object\n      description: a User\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: the User unique identifier, in response\n        name:\n          type: string\n          description: the User name\n#        organizationId:\n#          type: string\n#          readOnly: true\n#          description: the Organization Id context\n        roles:\n          type: array\n          description: the User's roles for the Organization\n          items:\n            type: string\n            enum: [\"Admin\",\"User\",\"Viewer\",\"Developer\"]\n      required:\n#        - name\n        - roles\n  examples:\n    NewOrganizationIn:\n      summary: Create a new organization\n      description: Create a new organization with 2 users\n      value:\n        name: Cosmo Tech\n        users:\n          - id: \"1\"\n            name: \"admin\"\n            roles:\n              - Admin\n          - id: \"2\"\n            name: \"user\"\n            roles:\n              - User\n        services:\n          tenantCredentials:\n            azureTenantId: e9641c78-d0d6-4d09-af63-168922724e7g\n            azureClientId: 857bbfb2-ba5b-4482-92e4-bfdda9e278ef\n            azureClientSecret: F6c6..s6CC9-Cu49u~R7_n8y.tCCy~4d3U\n          storage:\n            platformService: storage\n            resourceUri: organization-1/files\n          solutionsContainerRegistry:\n            cloudService: AzureContainerRegistries\n            baseUri: twinengines-1.azurecr.io\n    CosmoOrganization:\n      summary: Cosmo Tech Organization example\n      description: Cosmo Tech Organization example\n      value:\n        id: \"1\"\n        name: Cosmo Tech\n        ownerId: \"1\"\n        users:\n          - id: \"1\"\n            name: Bob\n            roles:\n              - Admin\n          - id: \"2\"\n            name: Alice\n            roles:\n              - User\n        services:\n          tenantCredentials:\n            azureTenantId: e9641c78-d0d6-4d09-af63-168922724e7g\n            azureClientId: 857bbfb2-ba5b-4482-92e4-bfdda9e278ef\n            azureClientSecret: F6c6..s6CC9-Cu49u~R7_n8y.tCCy~4d3U\n          storage:\n            platformService: storage\n            cloudService: AzureStorage\n            baseUri: https://csmphoenix.blob.core.windows.net\n            resourceUri: organization-1/files\n          solutionsContainerRegistry:\n            cloudService: AzureContainerRegistries\n            baseUri: twinengines-1.azurecr.io\n    CosmoThreeUsers:\n      summary: Cosmo Tech Organization with 3 users\n      description: Cosmo Tech Organization 3 users example\n      value:\n        id: \"1\"\n        name: Cosmo Tech\n        ownerId: \"1\"\n        users:\n          - id: \"1\"\n            name: Bob\n            roles:\n              - Admin\n          - id: \"2\"\n            name: Alice\n            roles:\n              - User\n          - id: \"3\"\n            name: Xavier\n            roles:\n              - Developer\n        services:\n          tenantCredentials:\n            azureTenantId: e9641c78-d0d6-4d09-af63-168922724e7g\n            azureClientId: 857bbfb2-ba5b-4482-92e4-bfdda9e278ef\n            azureClientSecret: F6c6..s6CC9-Cu49u~R7_n8y.tCCy~4d3U\n          storage:\n            platformService: storage\n            cloudService: AzureStorage\n            baseUri: https://csmphoenix.blob.core.windows.net\n            resourceUri: organization-1/files\n          solutionsContainerRegistry:\n            cloudService: AzureContainerRegistries\n            baseUri: twinengines-1.azurecr.io\n    TwoOrganizations:\n      summary: Two Orgnizations\n      description: Two Organizations example\n      value:\n        - id: \"1\"\n          name: Cosmo Tech\n          ownerId: \"1\"\n          users:\n            - id: \"1\"\n              name: Bob\n              roles:\n                - Admin\n            - id: \"2\"\n              name: Alice\n              roles:\n                - User\n          services:\n            tenantCredentials:\n              azureTenantId: e9641c78-d0d6-4d09-af63-168922724e7g\n              azureClientId: 857bbfb2-ba5b-4482-92e4-bfdda9e278ef\n              azureClientSecret: F6c6..s6CC9-Cu49u~R7_n8y.tCCy~4d3U\n            storage:\n              platformService: storage\n              cloudService: AzureStorage\n              baseUri: https://csmphoenix.blob.core.windows.net\n              resourceUri: organization-1/files\n            solutionsContainerRegistry:\n              cloudService: AzureContainerRegistries\n              baseUri: twinengines-1.azurecr.io\n        - id: \"2\"\n          name: Phoenix\n          users:\n            - id: \"1\"\n              name: Bob\n              roles:\n                - Admin\n          services:\n            tenantCredentials:\n              azureTenantId: e9641c78-d0d6-4d09-af63-168922724e8r\n              azureClientId: 857bbfb2-ba5b-4482-92e4-bfdda9e278fu\n              azureClientSecret: F6c6..s6CC9-Cu49u~R7_n8y.tCCy~4d4A\n            storage:\n              platformService: storage\n              cloudService: AzureStorage\n              baseUri: https://csmphoenix.blob.core.windows.net\n              resourceUri: organization-2/files\n            solutionsContainerRegistry:\n              cloudService: AzureContainerRegistries\n              baseUri: twinengines-2.azurecr.io\n    TwoOrganizationUsers:\n      summary: Two users of an Organization\n      description: Two Users of an Organization example\n      value:\n        - id: \"1\"\n          name: Bob\n          roles:\n            - Admin\n        - id: \"2\"\n          name: Alice\n          roles:\n            - User\n",
			"canonicalURL": "/github.com/Cosmo-Tech/cosmotech-api@56c19a68914e91e0ac5ec3e3ec50952c8464a03b/-/blob/organization/src/main/openapi/organization.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Cosmo-Tech/cosmotech-api/blob/56c19a68914e91e0ac5ec3e3ec50952c8464a03b/organization/src/main/openapi/organization.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/organizations\": get: security: security \"oAuth2AuthCode\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}