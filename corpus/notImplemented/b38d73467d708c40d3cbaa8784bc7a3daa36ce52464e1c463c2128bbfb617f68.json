{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/veracity/veracity-documentation"
		},
		"file": {
			"name": "datafabric-provisionapi-openapi.yaml",
			"size": 0,
			"path": "sections/datafabric/datafabric-provisionapi-openapi.yaml",
			"byteSize": 7786,
			"content": "openapi: 3.0.1\ninfo:\n  title: Provision API\n  version: '1.0'\nservers:\n  - url: https://api.veracity.com/veracity/datafabric/provisioning\npaths:\n  /api/1/container:\n    post:\n      tags:\n        - v1.0 Container\n      summary: 'Provision a blob storage container, requires a short name and storage container'\n      description: To retrieve correct values for \"StorageLocation\" use GET api/regions and use the \"azureName\"\n      operationId: v1-0Container_ProvisionAzureBlobContainer\n      requestBody:\n        content:\n          application/json: { }\n          text/json: { }\n          application/xml: { }\n          text/xml: { }\n          application/x-www-form-urlencoded: { }\n      responses:\n        '202':\n          description: Request accepted for processing. Note that provisioning can take up to 15 minutes. Please check DataApi to verify container was created.\n          content:\n            application/json: { }\n            text/json: { }\n            application/xml: { }\n            text/xml: { }\n        '400':\n          description: BadRequest\n          content:\n            application/json: { }\n            text/json: { }\n            application/xml: { }\n            text/xml: { }\n        '409':\n          description: ''\n          content:\n            application/json: { }\n            text/json: { }\n            application/xml: { }\n            text/xml: { }\n        '502':\n          description: Request to Identity API was unsuccessful.\n          content:\n            application/json: { }\n            text/json: { }\n            application/xml: { }\n            text/xml: { }\n  '/api/1/container/{id}/metadata':\n    patch:\n      tags:\n        - v1.0 Container\n      summary: Update metadata\n      description: \" JSON Patch (https://tools.ietf.org/html/rfc6902) defines a JSON document structure for expressing a sequence of operations to apply to a JavaScript Object Notation (JSON) document; it is suitable for use with the HTTP PATCH method. The \\\"application/json-patch+json\\\" media type is used to identify such patch documents.\\r\\n\\r\\n Example in this case:\\r\\n{\\r\\n \\\"value\\\": \\\"My new container name\\\",\\r\\n \\\"path\\\": \\\"Title\\\",\\r\\n \\\"op\\\": \\\"replace\\\"\\r\\n },\\r\\n This operation would replace the title\\r\\n\\r\\n \\r\\n A other example for update of tags (NOTE: remember to update the list of tags with all the tags)\\r\\n\\t{\\r\\n \\\"value\\\": [\\r\\n {\\r\\n \\\"Title\\\" :\\\"First tag\\\"\\r\\n },\\r\\n {\\r\\n \\\"Title\\\" : \\\"Second tag\\\"\\r\\n }\\r\\n \\r\\n ],\\r\\n \\\"path\\\": \\\"Tags\\\",\\r\\n \\\"op\\\": \\\"replace\\\"\\r\\n }\\r\\n This operation would replace the tags\"\n      operationId: v1-0Container_UpdateMetadata\n      parameters:\n        - name: id\n          in: path\n          description: Format - uuid.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: ''\n        content:\n          application/json: { }\n          text/json: { }\n          application/xml: { }\n          text/xml: { }\n          application/x-www-form-urlencoded: { }\n      responses:\n        '200':\n          description: Metadata was updated\n          content:\n            application/json: { }\n            text/json: { }\n            application/xml: { }\n            text/xml: { }\n        '403':\n          description: Not resource owner\n          content:\n            application/json: { }\n            text/json: { }\n            application/xml: { }\n            text/xml: { }\n        '404':\n          description: Resource was not found\n          content:\n            application/json: { }\n            text/json: { }\n            application/xml: { }\n            text/xml: { }\n        '500':\n          description: Container metadata was not updated\n          content:\n            application/json: { }\n            text/json: { }\n            application/xml: { }\n            text/xml: { }\n  '/api/1/container/{id}':\n    delete:\n      tags:\n        - v1.0 Container\n      summary: Delete a azure storage container.\n      description: \"Delete the azure container.\u003cbr /\u003e \\r\\nYou need to be the owner of the resource to be able to delete the container.\u003cbr /\u003e \\r\\nWhat happens when the container is deleted: All active keys will stop working.\u003cbr /\u003e \\r\\nAll content on the container will be deleted and this action is not reversible \u003cbr /\u003e\"\n      operationId: v1-0Container_DeleteAzureBlobContainer\n      parameters:\n        - name: id\n          in: path\n          description: Format - uuid. Resource id (GUID)\n          required: true\n          schema:\n            type: string\n      responses:\n        '202':\n          description: 'Request accepted for processing: Azure Storage container will be deleted'\n          content:\n            application/json: { }\n            text/json: { }\n            application/xml: { }\n            text/xml: { }\n        '403':\n          description: Not resource owner\n          content:\n            application/json: { }\n            text/json: { }\n            application/xml: { }\n            text/xml: { }\n        '404':\n          description: Resource was not found\n          content:\n            application/json: { }\n            text/json: { }\n            application/xml: { }\n            text/xml: { }\n        '500':\n          description: Container not deleted\n          content:\n            application/json: { }\n            text/json: { }\n            application/xml: { }\n            text/xml: { }\n  /api/1/regions:\n    get:\n      tags:\n        - v1.0 Regions\n      summary: Returns the list of active regions supported by veracity\n      description: Returns the list of active regions supported by veracity\n      operationId: v1-0Regions_Get\n      responses:\n        '200':\n          description: A list of active regions supported by veracity\n          content:\n            application/json: { }\n            text/json: { }\n            application/xml: { }\n            text/xml: { }\n  /api/1/container/copycontainer:\n    post:\n      tags:\n        - v1.0 Container\n      summary: \"Copies a given Container with its content with access sharing ID. \\r\\nFor successful requests, Returns 202 Accepted without waiting for container create or content copy is finished.\"\n      description: \"Copies a given Container with its content with access sharing ID. \\r\\nFor successful requests, Returns 202 Accepted without waiting for container create or content copy is finished.\"\n      operationId: v1-0Container_CopyContainer\n      parameters:\n        - name: accessId\n          in: query\n          description: Format - uuid. Access Id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Values required to copy a container.\n        content:\n          application/json: { }\n          text/json: { }\n          application/xml: { }\n          text/xml: { }\n          application/x-www-form-urlencoded: { }\n      responses:\n        '202':\n          description: Request accepted for processing. Note that provisioning can take up to 15 minutes. Content copy may take longer depends on the size of the container.\n          content:\n            application/json: { }\n            text/json: { }\n            application/xml: { }\n            text/xml: { }\n        '400':\n          description: BadRequest\n          content:\n            application/json: { }\n            text/json: { }\n            application/xml: { }\n            text/xml: { }\ncomponents:\n  securitySchemes:\n    apiKeyHeader:\n      type: apiKey\n      name: Ocp-Apim-Subscription-Key\n      in: header\n    apiKeyQuery:\n      type: apiKey\n      name: subscription-key\n      in: query\nsecurity:\n  - apiKeyHeader: [ ]\n  - apiKeyQuery: [ ]\nx-ms-export-notes:\n  - 'The exported API contains schemas that aren''t of content type ''application/vnd.oai.openapi.components+json'', and are hence not exported as OpenAPI components.'\n",
			"canonicalURL": "/github.com/veracity/veracity-documentation@f98ffe55a88fd8a92da5eff08ff1cadac2ec6387/-/blob/sections/datafabric/datafabric-provisionapi-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/veracity/veracity-documentation/blob/f98ffe55a88fd8a92da5eff08ff1cadac2ec6387/sections/datafabric/datafabric-provisionapi-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/1/container/{id}\": delete: responses: 202: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}