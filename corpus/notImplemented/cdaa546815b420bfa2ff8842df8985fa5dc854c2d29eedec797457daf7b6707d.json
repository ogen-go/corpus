{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/google/framework-for-osdu"
		},
		"file": {
			"name": "delivery-service_openapi.yaml",
			"size": 0,
			"path": "osdu-r2/os-delivery/docs/delivery-service_openapi.yaml",
			"byteSize": 6031,
			"content": "# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nopenapi: 3.0.0\n\ninfo:\n  version: \"0.0.1\"\n  title: OpenDES Delivery Service\n  description: |\n    The OpenDES Delivery service provides internal and external APIs to request file location data, such as an individual signed URL per file.\n\nservers:\n  - url: amer-demo28-test.apigee.net/os-file\n    description: Test server\n\npaths:\n  /getLocation:\n    post:\n      description: |\n        Create a new location in the landing zone, such as a GCS bucket.\n      security:\n        - bearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/Partition'\n      requestBody:\n        $ref: '#/components/requestBodies/LocationRequest'\n      responses:\n        '200':\n          description: |\n            Created location\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LocationResponse'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/Bad-Request'\n        '5XX':\n          description: Unexpected error.\n  /getFileLocation:\n    post:\n      description: |\n        Returns file `Location` and `Driver`.\n      security:\n        - bearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/Partition'\n      requestBody:\n        $ref: '#/components/requestBodies/FileLocationRequest'\n      responses:\n        '200':\n          description: |\n            File location\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileLocationResponse'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/Bad-Request'\n        '5XX':\n          description: Unexpected error.\n  /getFileList:\n    post:\n      description: |\n        Allows the application to audit the attempted file uploads. The method is internal and isn't available for third-party applications.\n      security:\n        - bearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/Partition'\n      requestBody:\n        $ref: '#/components/requestBodies/FileListRequest'\n      responses:\n        '200':\n          description: |\n            File list page\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileListResponse'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/Bad-Request'\n        '5XX':\n          description: Unexpected error.\n\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  parameters:\n    Partition:\n      in: header\n      name: Partition-Id\n      description: |\n        A unique identifier of a tenant\n      required: true\n      schema:\n        type: string\n  schemas:\n    DateTime:\n      type: string\n      format: date-time\n    FileID:\n      type: string\n      pattern: ^[\\w,\\s-]+(\\.\\w+)?$\n    Driver:\n      type: string\n      enum:\n        - GCP\n        - AWS\n    FileLocation:\n      type: object\n      properties:\n        FileID:\n          $ref: '#/components/schemas/FileID'\n        Driver:\n          $ref: '#/components/schemas/Driver'\n        Location:\n          type: string\n        CreatedAt:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n    ApiError:\n      type: object\n      properties:\n        status:\n          type: string\n        message:\n          type: string\n        errors:\n          type: array\n          items:\n            type: string\n    LocationResponse:\n      type: object\n      properties:\n        FileID:\n          $ref: '#/components/schemas/FileID'\n        Location:\n          type: object\n          additionalProperties:\n            type: string\n          example:\n            SignedURL: 'GCS signed URL'\n    FileLocationResponse:\n      type: object\n      properties:\n        Driver:\n          $ref: '#/components/schemas/Driver'\n        Location:\n          type: string\n    FileListResponse:\n      type: object\n      properties:\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/FileLocation'\n        number:\n          type: integer\n        numberOfElements:\n          type: integer\n        size:\n          type: integer\n\n  requestBodies:\n    LocationRequest:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              FileID:\n                $ref: '#/components/schemas/FileID'\n    FileLocationRequest:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              FileID:\n                $ref: '#/components/schemas/FileID'\n            required:\n              - FileID\n    FileListRequest:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              TimeFrom:\n                $ref: '#/components/schemas/DateTime'\n              TimeTo:\n                $ref: '#/components/schemas/DateTime'\n              PageNum:\n                type: integer\n              Items:\n                type: integer\n              UserID:\n                type: string\n  responses:\n    Unauthorized:\n      description: Unauthorized\n    Bad-Request:\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiError'\n",
			"canonicalURL": "/github.com/google/framework-for-osdu@73870a7dee903d4ec50d16b3f84fce6ca592d71d/-/blob/osdu-r2/os-delivery/docs/delivery-service_openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/google/framework-for-osdu/blob/73870a7dee903d4ec50d16b3f84fce6ca592d71d/osdu-r2/os-delivery/docs/delivery-service_openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/getFileLocation\": post: responses: HTTP code pattern not implemented",
	"NotImplemented": [
		"HTTP code pattern"
	]
}