{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SirBraneDamuj/mustadio"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "resources/openapi.yaml",
			"byteSize": 9243,
			"content": "openapi: 3.0.1\ninfo:\n  title: Mustadio API\n  description: Mustadio is an unofficial companion app for FFTBG.\n  version: 1.0.0\nexternalDocs:\n  description: Github\n  url: http://github.com/sirbranedamuj/mustadio\nservers:\n- url: /api/\ntags:\n- name: tournaments\n  description: Get the full tournament data model\n- name: dumps\n  description: Get the raw data for items, classes, and abilities\npaths:\n  /tournaments/{tournamentId}:\n    get:\n      tags:\n      - tournaments\n      summary: Get a single tournament and all its teams\n      operationId: getTournament\n      parameters:\n      - name: tournamentId\n        in: path\n        description: The ID of the tournament to fetch. Use the word \"latest\" to specify\n          the current tournament\n        required: true\n        schema:\n          type: string\n      - name: include\n        in: query\n        description: Include stats and/or info in the response. Do not include these\n          unless you want the info dumps and the stats parsed out for everything.\n          It's all or nothing.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - stats\n            - info\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tournament'\n  /tournaments/{tournamentId}/teams/{teamName}:\n    get:\n      tags:\n      - tournaments\n      summary: Get a single team.\n      parameters:\n      - name: tournamentId\n        in: path\n        description: The ID of the tournament to fetch. Use the word \"latest\" to specify\n          the current tournament\n        required: true\n        schema:\n          type: string\n      - name: teamName\n        in: path\n        description: The ID of the tournament to fetch. Use the word \"latest\" to specify\n          the current tournament\n        required: true\n        schema:\n          type: string\n      - name: include\n        in: query\n        description: Include stats and/or info in the response. Do not include these\n          unless you want the info dumps and the stats parsed out for everything.\n          It's all or nothing.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - stats\n            - info\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Team'\n  /items:\n    get:\n      tags:\n      - dumps\n      summary: Get a list of all items.\n      parameters:\n      - name: include\n        in: query\n        description: Include stats and/or info in the response. Do not include these\n          unless you want the info dumps and the stats parsed out for everything.\n          It's all or nothing.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - stats\n            - info\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/UnitEquipment'\n  /abilities:\n    get:\n      tags:\n      - dumps\n      summary: Get a list of all abilities.\n      parameters:\n      - name: include\n        in: query\n        description: Include stats and/or info in the response. Do not include these\n          unless you want the info dumps and the stats parsed out for everything.\n          It's all or nothing.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - stats\n            - info\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/UnitNonActiveAbility'\n  /classes:\n    get:\n      tags:\n      - dumps\n      summary: Get a list of all classes.\n      parameters:\n      - name: include\n        in: query\n        description: Include stats and/or info in the response. Do not include these\n          unless you want the info dumps and the stats parsed out for everything.\n          It's all or nothing.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - stats\n            - info\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/UnitClass'\ncomponents:\n  schemas:\n    Tournament:\n      type: object\n      properties:\n        id:\n          type: string\n        teams:\n          type: array\n          items:\n            $ref: '#/components/schemas/Team'\n    Team:\n      type: object\n      properties:\n        tournamentId:\n          type: string\n        teamName:\n          type: string\n        units:\n          type: array\n          items:\n            $ref: '#/components/schemas/Unit'\n    Unit:\n      type: object\n      properties:\n        name:\n          type: string\n        tournamentId:\n          type: string\n        teamName:\n          type: string\n        gender:\n          type: string\n          enum:\n          - Male\n          - Female\n          - Monster\n        class:\n          $ref: '#/components/schemas/UnitClass'\n        brave:\n          type: integer\n        zodiac:\n          type: string\n        faith:\n          type: integer\n        abilities:\n          $ref: '#/components/schemas/UnitAbilities'\n        equipment:\n          type: array\n          items:\n            $ref: '#/components/schemas/UnitEquipment'\n    UnitClass:\n      type: object\n      properties:\n        name:\n          type: string\n        gender:\n          type: string\n        raw:\n          type: string\n        baseStats:\n          $ref: '#/components/schemas/UnitClassStats'\n        innates:\n          type: array\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/UnitNonActiveAbility\"\n              - $ref: \"#/components/schemas/UnitStatus\"\n    UnitClassStats:\n      type: object\n      properties:\n        hp:\n          type: integer\n        mp:\n          type: integer\n        move:\n          type: integer\n        jump:\n          type: integer\n        speed:\n          type: integer\n        pa:\n          type: integer\n        ma:\n          type: integer\n        classEvadePercent:\n          type: integer\n    UnitAbilities:\n      type: object\n      properties:\n        mainActive:\n          $ref: '#/components/schemas/UnitActiveAbility'\n        subActive:\n          $ref: '#/components/schemas/UnitActiveAbility'\n        react:\n          $ref: '#/components/schemas/UnitNonActiveAbility'\n        support:\n          $ref: '#/components/schemas/UnitNonActiveAbility'\n        move:\n          $ref: '#/components/schemas/UnitNonActiveAbility'\n    UnitActiveAbility:\n      type: object\n      properties:\n        name:\n          type: string\n        learned:\n          type: array\n          items:\n            $ref: '#/components/schemas/UnitLearnedActiveAbility'\n    UnitLearnedActiveAbility:\n      type: object\n      properties:\n        name:\n          type: string\n        info:\n          type: string\n    UnitNonActiveAbility:\n      type: object\n      properties:\n        name:\n          type: string\n        info:\n          type: string\n    UnitEquipment:\n      type: object\n      properties:\n        name:\n          type: string\n        info:\n          type: string\n        type:\n          type: string\n        slot:\n          type: string\n        stats:\n          $ref: '#/components/schemas/EquipmentStats'\n    EquipmentStats:\n      type: object\n      properties:\n        wp:\n          type: integer\n        healWp:\n          type: integer\n        absorbWp:\n          type: integer\n        range:\n          type: integer\n        weaponEvadePercent:\n          type: integer\n        physEvadePercent:\n          type: integer\n        magEvadePercent:\n          type: integer\n        element:\n          type: integer\n        hp:\n          type: integer\n        mp:\n          type: integer\n        speed:\n          type: integer\n        move:\n          type: integer\n        jump:\n          type: integer\n        pa:\n          type: integer\n        ma:\n          type: integer\n        initialStatuses:\n          type: array\n          items:\n            $ref: '#/components/schemas/UnitStatus'\n        permStatuses:\n          type: array\n          items:\n            $ref: '#/components/schemas/UnitStatus'\n    UnitStatus:\n      type: object\n      properties:\n        name:\n          type: string\n        info:\n          type: string\n",
			"canonicalURL": "/github.com/SirBraneDamuj/mustadio@c028eac9ba2790090374b8d24dc6dfaa6ce30511/-/blob/resources/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/SirBraneDamuj/mustadio/blob/c028eac9ba2790090374b8d24dc6dfaa6ce30511/resources/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/tournaments/{tournamentId}/teams/{teamName}\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"discriminator inference",
		"unsupported content types"
	]
}