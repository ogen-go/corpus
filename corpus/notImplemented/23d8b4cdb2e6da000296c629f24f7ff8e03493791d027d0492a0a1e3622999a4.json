{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/microsoft/TeamCloud"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/openapi.yaml",
			"byteSize": 124514,
			"content": "openapi: 3.0.1\ninfo:\n  title: TeamCloud\n  description: API for working with a TeamCloud instance.\n  contact:\n    name: TeamCloud Dev Team\n    url: https://github.com/microsoft/TeamCloud/issues/new\n    email: colbyw@microsoft.com\n  license:\n    name: TeamCloud is licensed under the MIT License\n    url: https://github.com/microsoft/TeamCloud/blob/main/LICENSE\n  version: v1\npaths:\n  /adapters:\n    get:\n      tags:\n        - Adapter\n      summary: Gets all Adapters.\n      operationId: GetAdapters\n      responses:\n        '200':\n          description: Returns all Adapters.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AdapterInformationListDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/components':\n    get:\n      tags:\n        - Components\n      summary: Gets all Components for a Project.\n      operationId: GetComponents\n      parameters:\n        - name: deleted\n          in: query\n          schema:\n            type: boolean\n            default: false\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns all Project Components\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentListDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Project with the provided projectId was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    post:\n      tags:\n        - Components\n      summary: Creates a new Project Component.\n      operationId: CreateComponent\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ComponentDefinition'\n      responses:\n        '201':\n          description: The created Project Component.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentDataResult'\n        '202':\n          description: Starts creating the new Project Component. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Project with the provided projectId was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '409':\n          description: A Project Component already exists with the id provided in the request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/components/{componentId}':\n    get:\n      tags:\n        - Components\n      summary: Gets a Project Component.\n      operationId: GetComponent\n      parameters:\n        - name: componentId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns Project Component\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: 'A Project with the provided projectId was not found, or a Component with the provided id was not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    delete:\n      tags:\n        - Components\n      summary: Deletes an existing Project Component.\n      operationId: DeleteComponent\n      parameters:\n        - name: componentId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '202':\n          description: Starts deleting the Project Component. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '204':\n          description: The Project Component was deleted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: 'A Project with the provided id was not found, or a Component with the provided id was not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/components/{componentId}/tasks':\n    get:\n      tags:\n        - ComponentTasks\n      summary: Gets all Component Tasks.\n      operationId: GetComponentTasks\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: componentId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns all Component Tasks\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentTaskListDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Component with the provided componentId was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    post:\n      tags:\n        - ComponentTasks\n      summary: Creates a new Project Component Task.\n      operationId: CreateComponentTask\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: componentId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ComponentTaskDefinition'\n      responses:\n        '201':\n          description: The created Project Component Task.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentTaskDataResult'\n        '202':\n          description: Starts creating the new Project Component. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Project with the provided projectId was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '409':\n          description: A Project Component already exists with the id provided in the request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/components/{componentId}/tasks/{taskId}':\n    get:\n      tags:\n        - ComponentTasks\n      summary: Gets the Component Task.\n      operationId: GetComponentTask\n      parameters:\n        - name: taskId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: componentId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns a Component Task\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentTaskDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Component Task with the provided id was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/components/{componentId}/tasks/{taskId}/cancel':\n    put:\n      tags:\n        - ComponentTasks\n      summary: Rerun a Project Component Task.\n      operationId: CancelComponentTask\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: componentId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: taskId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The canceled Project Component Task.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentTaskDataResult'\n        '202':\n          description: Starts cancelling the Project Component Task. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Project or Project Component with the provided identifier was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/components/{componentId}/tasks/{taskId}/rerun':\n    put:\n      tags:\n        - ComponentTasks\n      summary: Cancel an active Project Component Task.\n      operationId: ReRunComponentTask\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: componentId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: taskId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          description: The created Project Component Task created by the rerun action.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentTaskDataResult'\n        '202':\n          description: Rerun the Project Component Task. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Project or Project Component with the provided identifier was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/templates':\n    get:\n      tags:\n        - ComponentTemplates\n      summary: Gets all Component Templates for a Project.\n      operationId: GetComponentTemplates\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns all Project Component Templates\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentTemplateListDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: Component Templates with the provided projectId was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/templates/{id}':\n    get:\n      tags:\n        - ComponentTemplates\n      summary: Gets the Component Template.\n      operationId: GetComponentTemplate\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns a Component Template\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentTemplateDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Project Component Template with the provided id was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/scopes':\n    get:\n      tags:\n        - DeploymentScopes\n      summary: Gets all Deployment Scopes.\n      operationId: GetDeploymentScopes\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns all Deployment Scopes.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentScopeListDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    post:\n      tags:\n        - DeploymentScopes\n      summary: Creates a new Deployment Scope.\n      operationId: CreateDeploymentScope\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeploymentScopeDefinition'\n      responses:\n        '201':\n          description: The new Deployment Scope was created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentScopeDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '409':\n          description: A Deployment Scope already exists with the ID provided in the request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/scopes/{deploymentScopeId}':\n    get:\n      tags:\n        - DeploymentScopes\n      summary: Gets a Deployment Scope.\n      operationId: GetDeploymentScope\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: deploymentScopeId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns a DeploymentScope.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentScopeDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A DeploymentScope with the id provided was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    put:\n      tags:\n        - DeploymentScopes\n      summary: Updates an existing Deployment Scope.\n      operationId: UpdateDeploymentScope\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: deploymentScopeId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeploymentScope'\n      responses:\n        '200':\n          description: The DeploymentScope was updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentScopeDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Deployment Scope with the ID provided in the request body could not be found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    delete:\n      tags:\n        - DeploymentScopes\n      summary: Deletes a Deployment Scope.\n      operationId: DeleteDeploymentScope\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: deploymentScopeId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: The DeploymentScope was deleted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentScopeDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A DeploymentScope with the id provided was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/scopes/{deploymentScopeId}/authorize/initialize':\n    get:\n      tags:\n        - DeploymentScopesAuthorization\n      summary: Initialize a new authorization session for a deployment scope.\n      operationId: InitializeAuthorization\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: deploymentScopeId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns the DeploymentScope that was initialized for an authorization session\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentScopeDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/negotiate':\n    post:\n      tags:\n        - Negotiate\n      summary: Negotiates the SignalR connection.\n      operationId: NegotiateSignalR\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/audit':\n    get:\n      tags:\n        - OrganizationAudit\n      summary: Gets all audit entries.\n      operationId: GetAuditEntries\n      parameters:\n        - name: timeRange\n          in: query\n          schema:\n            type: string\n        - name: commands\n          in: query\n          schema:\n            type: array\n            items:\n              type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns audit entries.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandAuditEntityListDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: The Organization was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/audit/{commandId}':\n    get:\n      tags:\n        - OrganizationAudit\n      summary: Gets an audit entry.\n      operationId: GetAuditEntry\n      parameters:\n        - name: commandId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: expand\n          in: query\n          schema:\n            type: boolean\n            default: false\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns an audit entry.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandAuditEntityDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: The Organization was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/audit/commands':\n    get:\n      tags:\n        - OrganizationAudit\n      summary: Gets all auditable commands.\n      operationId: GetAuditCommands\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns all auditable commands.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringListDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: The Organization was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  /orgs:\n    get:\n      tags:\n        - Organizations\n      summary: Gets all Organizations.\n      operationId: GetOrganizations\n      responses:\n        '200':\n          description: Returns all Organizations.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationListDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: The TeamCloud instance was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    post:\n      tags:\n        - Organizations\n      summary: Creates a new Organization.\n      operationId: CreateOrganization\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OrganizationDefinition'\n      responses:\n        '201':\n          description: The new Organization was created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: 'The TeamCloud instance was not found, or a User with the email address provided in the request body was not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '409':\n          description: A User already exists with the email address provided in the request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}':\n    get:\n      tags:\n        - Organizations\n      summary: Gets an Organization.\n      operationId: GetOrganization\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns an Organization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: An Organization with the provided identifier was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    delete:\n      tags:\n        - Organizations\n      summary: Deletes an existing Organization.\n      operationId: DeleteOrganization\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '202':\n          description: Starts deleting the Organization. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '404':\n          description: An Organization with the identifier provided was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/users':\n    get:\n      tags:\n        - OrganizationUsers\n      summary: Gets all Users.\n      operationId: GetOrganizationUsers\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns all Users.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserListDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: The Organization was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    post:\n      tags:\n        - OrganizationUsers\n      summary: Creates a new User.\n      operationId: CreateOrganizationUser\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserDefinition'\n      responses:\n        '201':\n          description: The new Organization User was created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: 'The Organization was not found, or a User with the email address provided in the request body was not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '409':\n          description: A User already exists with the email address provided in the request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/users/{userId}':\n    get:\n      tags:\n        - OrganizationUsers\n      summary: Gets a User.\n      operationId: GetOrganizationUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns User.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A User with the provided identifier was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    put:\n      tags:\n        - OrganizationUsers\n      summary: Updates an existing User.\n      operationId: UpdateOrganizationUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '200':\n          description: The user was successfully updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDataResult'\n        '202':\n          description: Starts updating the User. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A User with the ID provided in the request body was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    delete:\n      tags:\n        - OrganizationUsers\n      summary: Deletes an existing User.\n      operationId: DeleteOrganizationUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '202':\n          description: Starts deleting the User. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '204':\n          description: The user was successfully deleted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDataResult'\n        '404':\n          description: A User with the identifier provided was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/me':\n    get:\n      tags:\n        - OrganizationUsers\n      summary: Gets a User A User matching the current authenticated user.\n      operationId: GetOrganizationUserMe\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns User.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A User matching the current user was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    put:\n      tags:\n        - OrganizationUsers\n      summary: Updates an existing User.\n      operationId: UpdateOrganizationUserMe\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '200':\n          description: The user was successfully updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDataResult'\n        '202':\n          description: Starts updating the User. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A User with the ID provided in the request body was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects':\n    get:\n      tags:\n        - Project\n      summary: Gets all Projects.\n      operationId: GetProjects\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns all Projects.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectListDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    post:\n      tags:\n        - Project\n      summary: Creates a new Project.\n      operationId: CreateProject\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProjectDefinition'\n      responses:\n        '201':\n          description: The new Project was created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectDataResult'\n        '202':\n          description: Started creating the new Project. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '409':\n          description: A Project already exists with the name specified in the request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}':\n    get:\n      tags:\n        - Project\n      summary: Gets a Project.\n      operationId: GetProject\n      parameters:\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns a Project.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Project with the specified Name or ID was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    delete:\n      tags:\n        - Project\n      summary: Deletes a Project.\n      operationId: DeleteProject\n      parameters:\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '202':\n          description: Starts deleting the specified Project. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Project with the specified name or ID was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/identities':\n    get:\n      tags:\n        - ProjectIdentities\n      summary: Gets all Project Identities.\n      operationId: GetProjectIdentities\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns all Project Identities.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectIdentityListDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    post:\n      tags:\n        - ProjectIdentities\n      summary: Creates a new Project Identity.\n      operationId: CreateProjectIdentity\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProjectIdentityDefinition'\n      responses:\n        '201':\n          description: The new Project Identity was created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectIdentityDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '409':\n          description: A Project Identity already exists with the ID provided in the request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/identities/{projectIdentityId}':\n    get:\n      tags:\n        - ProjectIdentities\n      summary: Gets a Project Identity.\n      operationId: GetProjectIdentity\n      parameters:\n        - name: projectIdentityId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns a ProjectIdentity.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectIdentityDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A ProjectIdentity with the projectIdentityId provided was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    put:\n      tags:\n        - ProjectIdentities\n      summary: Updates an existing Project Identity.\n      operationId: UpdateProjectIdentity\n      parameters:\n        - name: projectIdentityId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProjectIdentity'\n      responses:\n        '202':\n          description: Starts updating the Project Identity. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: 'A Project with the provided projectId was not found, or a Identity with the key provided in the request body was not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    delete:\n      tags:\n        - ProjectIdentities\n      summary: Deletes a Project Identity.\n      operationId: DeleteProjectIdentity\n      parameters:\n        - name: projectIdentityId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: The ProjectIdentity was deleted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectIdentityDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A ProjectIdentity with the projectIdentityId provided was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/tags':\n    get:\n      tags:\n        - ProjectTags\n      summary: Gets all Tags for a Project.\n      operationId: GetProjectTags\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns all Project Tags\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringStringDictionaryDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Project with the provided projectId was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    post:\n      tags:\n        - ProjectTags\n      summary: Creates a new Project Tag.\n      operationId: CreateProjectTag\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties:\n                type: string\n      responses:\n        '202':\n          description: Starts creating the new Project Tag. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Project with the provided projectId was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '409':\n          description: A Project Tag already exists with the key provided in the request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    put:\n      tags:\n        - ProjectTags\n      summary: Updates an existing Project Tag.\n      operationId: UpdateProjectTag\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties:\n                type: string\n      responses:\n        '202':\n          description: Starts updating the Project Tag. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: 'A Project with the provided projectId was not found, or a Tag with the key provided in the request body was not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/tags/{tagKey}':\n    get:\n      tags:\n        - ProjectTags\n      summary: Gets a Project Tag by Key.\n      operationId: GetProjectTagByKey\n      parameters:\n        - name: tagKey\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns Project Tag\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringStringDictionaryDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: 'A Project with the provided projectId was not found, or a Tag with the provided key was not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    delete:\n      tags:\n        - ProjectTags\n      summary: Deletes an existing Project Tag.\n      operationId: DeleteProjectTag\n      parameters:\n        - name: tagKey\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '202':\n          description: Starts deleting the Project Tag. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: 'A Project with the provided projectId was not found, or a Tag with the provided key was not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/templates':\n    get:\n      tags:\n        - ProjectTemplates\n      summary: Gets all Project Templates.\n      operationId: GetProjectTemplates\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns all Project Templates.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectTemplateListDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    post:\n      tags:\n        - ProjectTemplates\n      summary: Creates a new Project Template.\n      operationId: CreateProjectTemplate\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProjectTemplateDefinition'\n      responses:\n        '201':\n          description: The new Project Template was created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectTemplateDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '409':\n          description: A Project Template already exists with the ID provided in the request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/templates/{projectTemplateId}':\n    get:\n      tags:\n        - ProjectTemplates\n      summary: Gets a Project Template.\n      operationId: GetProjectTemplate\n      parameters:\n        - name: projectTemplateId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns a ProjectTemplate.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectTemplateDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A ProjectTemplate with the projectTemplateId provided was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    put:\n      tags:\n        - ProjectTemplates\n      summary: Updates an existing Project Template.\n      operationId: UpdateProjectTemplate\n      parameters:\n        - name: projectTemplateId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProjectTemplate'\n      responses:\n        '200':\n          description: The ProjectTemplate was updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectTemplateDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Project Template with the ID provided in the request body could not be found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    delete:\n      tags:\n        - ProjectTemplates\n      summary: Deletes a Project Template.\n      operationId: DeleteProjectTemplate\n      parameters:\n        - name: projectTemplateId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: The ProjectTemplate was deleted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectTemplateDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A ProjectTemplate with the projectTemplateId provided was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/users':\n    get:\n      tags:\n        - ProjectUsers\n      summary: Gets all Users for a Project.\n      operationId: GetProjectUsers\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns all Project Users\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserListDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Project with the provided projectId was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    post:\n      tags:\n        - ProjectUsers\n      summary: Creates a new Project User\n      operationId: CreateProjectUser\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserDefinition'\n      responses:\n        '201':\n          description: The new Project User was created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDataResult'\n        '202':\n          description: Starts creating the new Project User. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: 'A Project with the provided projectId was not found, or a User with the email address provided in the request body was not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '409':\n          description: A Project User already exists with the email address provided in the request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/users/{userId}':\n    get:\n      tags:\n        - ProjectUsers\n      summary: Gets a Project User by ID or email address.\n      operationId: GetProjectUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns Project User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: 'A Project with the provided projectId was not found, or a User with the provided identifier was not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    put:\n      tags:\n        - ProjectUsers\n      summary: Updates an existing Project User.\n      operationId: UpdateProjectUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '200':\n          description: The Project User was updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDataResult'\n        '202':\n          description: Starts updating the Project UserProject. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: 'A Project with the provided projectId was not found, or a User with the ID provided in the request body was not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    delete:\n      tags:\n        - ProjectUsers\n      summary: Deletes an existing Project User.\n      operationId: DeleteProjectUser\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '202':\n          description: Starts deleting the Project User. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: 'A Project with the provided projectId was not found, or a User with the provided identifier was not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/users/me':\n    get:\n      tags:\n        - ProjectUsers\n      summary: Gets a Project User for the calling user.\n      operationId: GetProjectUserMe\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns Project User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: 'A Project with the provided projectId was not found, or a User matching the current user was not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    put:\n      tags:\n        - ProjectUsers\n      summary: Updates an existing Project User.\n      operationId: UpdateProjectUserMe\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '200':\n          description: The Project User was updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDataResult'\n        '202':\n          description: Starts updating the Project User. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: 'A Project with the provided projectId was not found, or a User matching the current user was not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  /:\n    get:\n      tags:\n        - Root\n      summary: Gets information about this TeamCloud deployment.\n      operationId: GetInfo\n      responses:\n        '200':\n          description: Returns information about this TeamCloud deployment.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TeamCloudInformationDataResult'\n  '/orgs/{organizationId}/projects/{projectId}/schedules':\n    get:\n      tags:\n        - Schedule\n      summary: Gets all Schedule.\n      operationId: GetSchedules\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns all Schedule\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleListDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    post:\n      tags:\n        - Schedule\n      summary: Creates a new Project Schedule.\n      operationId: CreateSchedule\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScheduleDefinition'\n      responses:\n        '201':\n          description: The created Project Schedule.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Project with the provided projectId was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '409':\n          description: A Project Schedule already exists with the id provided in the request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/schedules/{scheduleId}':\n    get:\n      tags:\n        - Schedule\n      summary: Gets the Schedule.\n      operationId: GetSchedule\n      parameters:\n        - name: scheduleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns a Schedule\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Schedule with the provided id was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n    put:\n      tags:\n        - Schedule\n      summary: Updates a Project Schedule.\n      operationId: UpdateSchedule\n      parameters:\n        - name: scheduleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Schedule'\n      responses:\n        '200':\n          description: The updated Project Schedule.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Project with the provided projectId was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '409':\n          description: A Project Schedule id provided in the could not be found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/schedules/{scheduleId}/run':\n    post:\n      tags:\n        - Schedule\n      summary: Runs a Project Schedule.\n      operationId: RunSchedule\n      parameters:\n        - name: scheduleId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The Project Schedule run.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A Project with the provided projectId was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/status/{trackingId}':\n    get:\n      tags:\n        - Status\n      summary: Gets the status of a long-running operation.\n      operationId: GetStatus\n      parameters:\n        - name: trackingId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The long-running operation completed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '202':\n          description: The long-running operation is running. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '302':\n          description: The long-running operation completed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: The long-running operation with the trackingId provided was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/projects/{projectId}/status/{trackingId}':\n    get:\n      tags:\n        - Status\n      summary: Gets the status of a long-running operation.\n      operationId: GetProjectStatus\n      parameters:\n        - name: projectId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: trackingId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The long-running operation completed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '202':\n          description: The long-running operation is running. Returns a StatusResult object that can be used to track progress of the long-running operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '302':\n          description: The long-running operation completed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: The long-running operation with the trackingId provided was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/users/{userId}/projects':\n    get:\n      tags:\n        - UserProjects\n      summary: Gets all Projects for a User.\n      operationId: GetUserProjects\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns all User Projects\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectListDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A User with the provided userId was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n  '/orgs/{organizationId}/me/projects':\n    get:\n      tags:\n        - UserProjects\n      summary: Gets all Projects for a User.\n      operationId: GetUserProjectsMe\n      parameters:\n        - name: organizationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns all User Projects\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectListDataResult'\n        '400':\n          description: A validation error occured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '404':\n          description: A User with the provided userId was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\ncomponents:\n  schemas:\n    AdapterInformation:\n      type: object\n      properties:\n        type:\n          enum:\n            - AzureResourceManager\n            - AzureDevOps\n            - GitHub\n            - Kubernetes\n          type: string\n        displayName:\n          type: string\n          nullable: true\n        inputDataSchema:\n          type: string\n          nullable: true\n        inputDataForm:\n          type: string\n          nullable: true\n      additionalProperties: false\n    AdapterInformationListDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/AdapterInformation'\n          nullable: true\n          readOnly: true\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    AlternateIdentity:\n      type: object\n      properties:\n        login:\n          type: string\n          nullable: true\n      additionalProperties: false\n    CommandAuditEntity:\n      type: object\n      properties:\n        partitionKey:\n          type: string\n          nullable: true\n        rowKey:\n          type: string\n          nullable: true\n        timestamp:\n          type: string\n          format: date-time\n          nullable: true\n        eTag:\n          $ref: '#/components/schemas/ETag'\n        commandId:\n          type: string\n          nullable: true\n          readOnly: true\n        organizationId:\n          type: string\n          nullable: true\n          readOnly: true\n        commandJson:\n          type: string\n          nullable: true\n        resultJson:\n          type: string\n          nullable: true\n        projectId:\n          type: string\n          nullable: true\n        userId:\n          type: string\n          nullable: true\n        parentId:\n          type: string\n          nullable: true\n        command:\n          type: string\n          nullable: true\n        componentTask:\n          type: string\n          nullable: true\n        runtimeStatus:\n          enum:\n            - Running\n            - Completed\n            - ContinuedAsNew\n            - Failed\n            - Canceled\n            - Terminated\n            - Pending\n            - Unknown\n          type: string\n        customStatus:\n          type: string\n          nullable: true\n        errors:\n          type: string\n          nullable: true\n        created:\n          type: string\n          format: date-time\n          nullable: true\n        updated:\n          type: string\n          format: date-time\n          nullable: true\n      additionalProperties: false\n    CommandAuditEntityDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          $ref: '#/components/schemas/CommandAuditEntity'\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    CommandAuditEntityListDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommandAuditEntity'\n          nullable: true\n          readOnly: true\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    Component:\n      required:\n        - creator\n        - id\n        - organization\n        - organizationName\n        - projectId\n        - projectName\n        - slug\n        - templateId\n        - type\n      type: object\n      properties:\n        href:\n          type: string\n          nullable: true\n        organization:\n          type: string\n        organizationName:\n          type: string\n        templateId:\n          type: string\n        projectId:\n          type: string\n        projectName:\n          type: string\n        creator:\n          type: string\n        displayName:\n          type: string\n          nullable: true\n        description:\n          type: string\n          nullable: true\n        inputJson:\n          type: string\n          nullable: true\n        valueJson:\n          type: string\n          nullable: true\n        type:\n          enum:\n            - Environment\n            - Repository\n            - Namespace\n          type: string\n        resourceId:\n          type: string\n          nullable: true\n        resourceUrl:\n          type: string\n          nullable: true\n        resourceState:\n          enum:\n            - Pending\n            - Initializing\n            - Provisioning\n            - Provisioned\n            - Deprovisioning\n            - Deprovisioned\n            - Failed\n          type: string\n        deploymentScopeId:\n          type: string\n          nullable: true\n        deploymentScopeName:\n          type: string\n          nullable: true\n        identityId:\n          type: string\n          nullable: true\n        deleted:\n          type: string\n          format: date-time\n          nullable: true\n        ttl:\n          type: integer\n          format: int32\n          nullable: true\n        slug:\n          type: string\n        id:\n          type: string\n      additionalProperties: false\n    ComponentDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          $ref: '#/components/schemas/Component'\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ComponentDefinition:\n      required:\n        - displayName\n        - templateId\n      type: object\n      properties:\n        templateId:\n          type: string\n        displayName:\n          type: string\n        inputJson:\n          type: string\n          nullable: true\n        deploymentScopeId:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ComponentListDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Component'\n          nullable: true\n          readOnly: true\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ComponentTask:\n      required:\n        - componentId\n        - componentName\n        - id\n        - organization\n        - organizationName\n        - projectId\n        - projectName\n      type: object\n      properties:\n        organization:\n          type: string\n        organizationName:\n          type: string\n        componentId:\n          type: string\n        componentName:\n          type: string\n        projectId:\n          type: string\n        projectName:\n          type: string\n        requestedBy:\n          type: string\n          nullable: true\n        scheduleId:\n          type: string\n          nullable: true\n        type:\n          enum:\n            - Custom\n            - Create\n            - Delete\n          type: string\n        typeName:\n          type: string\n          nullable: true\n        created:\n          type: string\n          format: date-time\n        started:\n          type: string\n          format: date-time\n          nullable: true\n        finished:\n          type: string\n          format: date-time\n          nullable: true\n        inputJson:\n          type: string\n          nullable: true\n        output:\n          type: string\n          nullable: true\n        resourceId:\n          type: string\n          nullable: true\n        taskState:\n          enum:\n            - Pending\n            - Initializing\n            - Processing\n            - Succeeded\n            - Canceled\n            - Failed\n          type: string\n        exitCode:\n          type: integer\n          format: int32\n          nullable: true\n        id:\n          type: string\n      additionalProperties: false\n    ComponentTaskDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          $ref: '#/components/schemas/ComponentTask'\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ComponentTaskDefinition:\n      required:\n        - taskId\n      type: object\n      properties:\n        taskId:\n          type: string\n        inputJson:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ComponentTaskListDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComponentTask'\n          nullable: true\n          readOnly: true\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ComponentTaskReference:\n      type: object\n      properties:\n        componentId:\n          type: string\n          nullable: true\n        componentName:\n          type: string\n          nullable: true\n        componentTaskTemplateId:\n          type: string\n          nullable: true\n        inputJson:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ComponentTaskRunner:\n      type: object\n      properties:\n        id:\n          type: string\n          nullable: true\n        webServer:\n          type: boolean\n        with:\n          type: object\n          additionalProperties:\n            type: string\n          nullable: true\n      additionalProperties: false\n    ComponentTaskTemplate:\n      type: object\n      properties:\n        id:\n          type: string\n          nullable: true\n        displayName:\n          type: string\n          nullable: true\n        description:\n          type: string\n          nullable: true\n        inputJsonSchema:\n          type: string\n          nullable: true\n        type:\n          enum:\n            - Custom\n            - Create\n            - Delete\n          type: string\n        typeName:\n          type: string\n          nullable: true\n          readOnly: true\n      additionalProperties: false\n    ComponentTemplate:\n      required:\n        - id\n        - organization\n        - organizationName\n        - parentId\n        - repository\n        - type\n      type: object\n      properties:\n        organization:\n          type: string\n        organizationName:\n          type: string\n        parentId:\n          type: string\n        displayName:\n          type: string\n          nullable: true\n        description:\n          type: string\n          nullable: true\n        repository:\n          $ref: '#/components/schemas/RepositoryReference'\n        permissions:\n          type: object\n          properties:\n            None:\n              type: array\n              items:\n                type: string\n            Member:\n              type: array\n              items:\n                type: string\n            Admin:\n              type: array\n              items:\n                type: string\n            Owner:\n              type: array\n              items:\n                type: string\n            Adapter:\n              type: array\n              items:\n                type: string\n          additionalProperties: false\n          nullable: true\n        inputJsonSchema:\n          type: string\n          nullable: true\n        tasks:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComponentTaskTemplate'\n          nullable: true\n        taskRunner:\n          $ref: '#/components/schemas/ComponentTaskRunner'\n        type:\n          enum:\n            - Environment\n            - Repository\n            - Namespace\n          type: string\n        folder:\n          type: string\n          nullable: true\n        configuration:\n          nullable: true\n        id:\n          type: string\n      additionalProperties: false\n    ComponentTemplateDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          $ref: '#/components/schemas/ComponentTemplate'\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ComponentTemplateListDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComponentTemplate'\n          nullable: true\n          readOnly: true\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    DeploymentScope:\n      required:\n        - displayName\n        - id\n        - isDefault\n        - organization\n        - organizationName\n        - slug\n        - type\n      type: object\n      properties:\n        organization:\n          type: string\n        organizationName:\n          type: string\n        displayName:\n          type: string\n        slug:\n          type: string\n        isDefault:\n          type: boolean\n        type:\n          enum:\n            - AzureResourceManager\n            - AzureDevOps\n            - GitHub\n            - Kubernetes\n          type: string\n        inputDataSchema:\n          type: string\n          nullable: true\n        inputData:\n          type: string\n          nullable: true\n        managementGroupId:\n          type: string\n          nullable: true\n        subscriptionIds:\n          type: array\n          items:\n            type: string\n            format: uuid\n          nullable: true\n        authorizable:\n          type: boolean\n        authorized:\n          type: boolean\n        authorizeUrl:\n          type: string\n          nullable: true\n        componentTypes:\n          type: array\n          items:\n            enum:\n              - Environment\n              - Repository\n              - Namespace\n            type: string\n          nullable: true\n        id:\n          type: string\n      additionalProperties: false\n    DeploymentScopeDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          $ref: '#/components/schemas/DeploymentScope'\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    DeploymentScopeDefinition:\n      required:\n        - displayName\n        - type\n      type: object\n      properties:\n        displayName:\n          type: string\n        type:\n          enum:\n            - AzureResourceManager\n            - AzureDevOps\n            - GitHub\n            - Kubernetes\n          type: string\n        slug:\n          type: string\n          nullable: true\n          readOnly: true\n        inputData:\n          type: string\n          nullable: true\n        isDefault:\n          type: boolean\n      additionalProperties: false\n    DeploymentScopeListDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/DeploymentScope'\n          nullable: true\n          readOnly: true\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ErrorResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResultError'\n          nullable: true\n      additionalProperties: false\n    ETag:\n      type: object\n      additionalProperties: false\n    Organization:\n      required:\n        - displayName\n        - id\n        - location\n        - slug\n        - subscriptionId\n        - tenant\n      type: object\n      properties:\n        tenant:\n          type: string\n        slug:\n          type: string\n        displayName:\n          type: string\n        subscriptionId:\n          type: string\n        location:\n          type: string\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          nullable: true\n        resourceId:\n          type: string\n          nullable: true\n        resourceState:\n          enum:\n            - Pending\n            - Initializing\n            - Provisioning\n            - Provisioned\n            - Deprovisioning\n            - Deprovisioned\n            - Failed\n          type: string\n        secretsVaultId:\n          type: string\n          nullable: true\n        galleryId:\n          type: string\n          nullable: true\n        registryId:\n          type: string\n          nullable: true\n        storageId:\n          type: string\n          nullable: true\n        id:\n          type: string\n      additionalProperties: false\n    OrganizationDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          $ref: '#/components/schemas/Organization'\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    OrganizationDefinition:\n      required:\n        - displayName\n        - location\n        - subscriptionId\n      type: object\n      properties:\n        slug:\n          type: string\n          nullable: true\n          readOnly: true\n        displayName:\n          type: string\n        subscriptionId:\n          type: string\n        location:\n          type: string\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          nullable: true\n      additionalProperties: false\n    OrganizationListDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Organization'\n          nullable: true\n          readOnly: true\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    Project:\n      required:\n        - displayName\n        - id\n        - organization\n        - organizationName\n        - slug\n        - template\n      type: object\n      properties:\n        organization:\n          type: string\n        organizationName:\n          type: string\n        slug:\n          type: string\n        displayName:\n          type: string\n        template:\n          type: string\n        templateInput:\n          type: string\n          nullable: true\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/User'\n          nullable: true\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          nullable: true\n        resourceId:\n          type: string\n          nullable: true\n        resourceState:\n          enum:\n            - Pending\n            - Initializing\n            - Provisioning\n            - Provisioned\n            - Deprovisioning\n            - Deprovisioned\n            - Failed\n          type: string\n        vaultId:\n          type: string\n          nullable: true\n          readOnly: true\n          deprecated: true\n        sharedVaultId:\n          type: string\n          nullable: true\n        secretsVaultId:\n          type: string\n          nullable: true\n        storageId:\n          type: string\n          nullable: true\n        deleted:\n          type: string\n          format: date-time\n          nullable: true\n        ttl:\n          type: integer\n          format: int32\n          nullable: true\n        id:\n          type: string\n      additionalProperties: false\n    ProjectDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          $ref: '#/components/schemas/Project'\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ProjectDefinition:\n      required:\n        - displayName\n        - template\n        - templateInput\n      type: object\n      properties:\n        slug:\n          type: string\n          nullable: true\n          readOnly: true\n        displayName:\n          type: string\n        template:\n          type: string\n        templateInput:\n          type: string\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserDefinition'\n          nullable: true\n      additionalProperties: false\n    ProjectIdentity:\n      required:\n        - deploymentScopeId\n        - displayName\n        - id\n        - organization\n        - organizationName\n        - projectId\n        - projectName\n      type: object\n      properties:\n        projectId:\n          type: string\n        projectName:\n          type: string\n        organization:\n          type: string\n        organizationName:\n          type: string\n        displayName:\n          type: string\n        deploymentScopeId:\n          type: string\n        tenantId:\n          type: string\n          format: uuid\n        clientId:\n          type: string\n          format: uuid\n        clientSecret:\n          type: string\n          nullable: true\n        redirectUrls:\n          type: array\n          items:\n            type: string\n          nullable: true\n        objectId:\n          type: string\n          format: uuid\n        id:\n          type: string\n      additionalProperties: false\n    ProjectIdentityDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          $ref: '#/components/schemas/ProjectIdentity'\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ProjectIdentityDefinition:\n      required:\n        - deploymentScopeId\n        - displayName\n      type: object\n      properties:\n        displayName:\n          type: string\n        deploymentScopeId:\n          type: string\n      additionalProperties: false\n    ProjectIdentityListDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProjectIdentity'\n          nullable: true\n          readOnly: true\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ProjectListDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Project'\n          nullable: true\n          readOnly: true\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ProjectMembership:\n      required:\n        - projectId\n        - role\n      type: object\n      properties:\n        projectId:\n          type: string\n        role:\n          enum:\n            - None\n            - Member\n            - Admin\n            - Owner\n            - Adapter\n          type: string\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n          nullable: true\n      additionalProperties: false\n    ProjectTemplate:\n      required:\n        - displayName\n        - id\n        - isDefault\n        - organization\n        - organizationName\n        - repository\n        - slug\n      type: object\n      properties:\n        organization:\n          type: string\n        organizationName:\n          type: string\n        slug:\n          type: string\n        name:\n          type: string\n          nullable: true\n        displayName:\n          type: string\n        components:\n          type: array\n          items:\n            type: string\n          nullable: true\n        repository:\n          $ref: '#/components/schemas/RepositoryReference'\n        description:\n          type: string\n          nullable: true\n        isDefault:\n          type: boolean\n        inputJsonSchema:\n          type: string\n          nullable: true\n        id:\n          type: string\n      additionalProperties: false\n    ProjectTemplateDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          $ref: '#/components/schemas/ProjectTemplate'\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ProjectTemplateDefinition:\n      required:\n        - displayName\n        - repository\n      type: object\n      properties:\n        displayName:\n          type: string\n        repository:\n          $ref: '#/components/schemas/RepositoryDefinition'\n      additionalProperties: false\n    ProjectTemplateListDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProjectTemplate'\n          nullable: true\n          readOnly: true\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    RepositoryDefinition:\n      required:\n        - url\n      type: object\n      properties:\n        url:\n          type: string\n        token:\n          type: string\n          nullable: true\n        version:\n          type: string\n          nullable: true\n      additionalProperties: false\n    RepositoryReference:\n      required:\n        - provider\n        - type\n        - url\n      type: object\n      properties:\n        url:\n          type: string\n        token:\n          type: string\n          nullable: true\n        version:\n          type: string\n          nullable: true\n        baselUrl:\n          type: string\n          nullable: true\n        mountUrl:\n          type: string\n          nullable: true\n        ref:\n          type: string\n          nullable: true\n        provider:\n          enum:\n            - Unknown\n            - GitHub\n            - DevOps\n          type: string\n        type:\n          enum:\n            - Unknown\n            - Tag\n            - Branch\n            - Hash\n          type: string\n        organization:\n          type: string\n          nullable: true\n        repository:\n          type: string\n          nullable: true\n        project:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ResultError:\n      type: object\n      properties:\n        code:\n          enum:\n            - Unknown\n            - Failed\n            - Conflict\n            - NotFound\n            - ServerError\n            - ValidationError\n            - Unauthorized\n            - Forbidden\n          type: string\n        message:\n          type: string\n          nullable: true\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/ValidationError'\n          nullable: true\n      additionalProperties: false\n    Schedule:\n      required:\n        - id\n        - organization\n        - organizationName\n        - projectId\n        - projectName\n      type: object\n      properties:\n        organization:\n          type: string\n        organizationName:\n          type: string\n        projectId:\n          type: string\n        projectName:\n          type: string\n        enabled:\n          type: boolean\n        recurring:\n          type: boolean\n        daysOfWeek:\n          type: array\n          items:\n            enum:\n              - Sunday\n              - Monday\n              - Tuesday\n              - Wednesday\n              - Thursday\n              - Friday\n              - Saturday\n            type: string\n          nullable: true\n        utcHour:\n          type: integer\n          format: int32\n        utcMinute:\n          type: integer\n          format: int32\n        creator:\n          type: string\n          nullable: true\n        created:\n          type: string\n          format: date-time\n        lastUpdatedBy:\n          type: string\n          nullable: true\n        lastUpdated:\n          type: string\n          format: date-time\n        lastRun:\n          type: string\n          format: date-time\n          nullable: true\n        componentTasks:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComponentTaskReference'\n          nullable: true\n        id:\n          type: string\n      additionalProperties: false\n    ScheduleDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          $ref: '#/components/schemas/Schedule'\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ScheduleDefinition:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n        recurring:\n          type: boolean\n        daysOfWeek:\n          type: array\n          items:\n            enum:\n              - Sunday\n              - Monday\n              - Tuesday\n              - Wednesday\n              - Thursday\n              - Friday\n              - Saturday\n            type: string\n          nullable: true\n        utcHour:\n          type: integer\n          format: int32\n        utcMinute:\n          type: integer\n          format: int32\n        componentTasks:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComponentTaskReference'\n          nullable: true\n      additionalProperties: false\n    ScheduleListDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Schedule'\n          nullable: true\n          readOnly: true\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    StatusResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        state:\n          type: string\n          nullable: true\n          readOnly: true\n        stateMessage:\n          type: string\n          nullable: true\n        location:\n          type: string\n          nullable: true\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResultError'\n          nullable: true\n        _trackingId:\n          type: string\n          nullable: true\n      additionalProperties: false\n    StringListDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          type: array\n          items:\n            type: string\n          nullable: true\n          readOnly: true\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    StringStringDictionaryDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          type: object\n          additionalProperties:\n            type: string\n          nullable: true\n          readOnly: true\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    TeamCloudInformation:\n      type: object\n      properties:\n        imageVersion:\n          type: string\n          nullable: true\n        templateVersion:\n          type: string\n          nullable: true\n      additionalProperties: false\n    TeamCloudInformationDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          $ref: '#/components/schemas/TeamCloudInformation'\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    User:\n      required:\n        - id\n        - organization\n        - organizationName\n        - role\n        - userType\n      type: object\n      properties:\n        organization:\n          type: string\n        organizationName:\n          type: string\n        displayName:\n          type: string\n          nullable: true\n        loginName:\n          type: string\n          nullable: true\n        mailAddress:\n          type: string\n          nullable: true\n        userType:\n          enum:\n            - User\n            - Group\n            - System\n            - Service\n          type: string\n        role:\n          enum:\n            - None\n            - Member\n            - Admin\n            - Owner\n            - Adapter\n          type: string\n        projectMemberships:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProjectMembership'\n          nullable: true\n        alternateIdentities:\n          type: object\n          properties:\n            AzureResourceManager:\n              $ref: '#/components/schemas/AlternateIdentity'\n            AzureDevOps:\n              $ref: '#/components/schemas/AlternateIdentity'\n            GitHub:\n              $ref: '#/components/schemas/AlternateIdentity'\n            Kubernetes:\n              $ref: '#/components/schemas/AlternateIdentity'\n          additionalProperties: false\n          nullable: true\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n          nullable: true\n        id:\n          type: string\n      additionalProperties: false\n    UserDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          $ref: '#/components/schemas/User'\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    UserDefinition:\n      required:\n        - identifier\n        - role\n      type: object\n      properties:\n        identifier:\n          type: string\n        role:\n          type: string\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n          nullable: true\n      additionalProperties: false\n    UserListDataResult:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        status:\n          type: string\n          nullable: true\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/User'\n          nullable: true\n          readOnly: true\n        location:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ValidationError:\n      type: object\n      properties:\n        field:\n          type: string\n          nullable: true\n        message:\n          type: string\n          nullable: true\n      additionalProperties: false\n  securitySchemes:\n    oauth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://login.microsoftonline.com//oauth2/v2.0/authorize\n          tokenUrl: https://login.microsoftonline.com//oauth2/v2.0/token\n          scopes:\n            openid: Sign you in\n            http://TeamCloud.DEMO.Web/user_impersonation: Access the TeamCloud API\nsecurity:\n  - oauth2:\n      - openid\n      - http://TeamCloud.DEMO.Web/user_impersonation",
			"canonicalURL": "/github.com/microsoft/TeamCloud@c9f7bd085798468a3edd8fb3dcf089c8a5ab5759/-/blob/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/microsoft/TeamCloud/blob/c9f7bd085798468a3edd8fb3dcf089c8a5ab5759/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/orgs/{organizationId}/projects/{projectId}/components/{componentId}/tasks/{taskId}/cancel\": put: security: security \"oauth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}