{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/worldtimeapi/openapi.yml",
			"byteSize": 11775,
			"content": "openapi: \"3.0.1\"\ninfo:\n  x-ballerina-display:\n    label: World Time API\n    iconPath: \"icon.png\"\n  title: \"World Time API\"\n  version: \"20210108\"\n  description: \u003e-\n    This is a generated connector for [WorldTimeAPI v0.6.1](http://worldtimeapi.org/) OpenAPI Specification.\n    \n    [WorldTime API](http://worldtimeapi.org/pages/faqs#what-is-it) is a simple \"microservice\" which returns the local-time for a given timezone in both unixtime and ISO8601 format.\n    The worldTimeAPI connector supports to get the current time based on a request with a timezone and additional information including whether\n    that timezone is currently in Daylight Savings Time, when DST starts and ends, the UTC offset, etc.\n  x-ballerina-init-description: \u003e-\n    The connector initialization doesn't require setting the API credentials.\n\n    World Time API data is simple and free to access. Follow [this link](http://worldtimeapi.org/) for more details.\nservers:\n  - url: http://worldtimeapi.org/api/\n\npaths:\n  /timezone:\n    get:\n      summary: a listing of all timezones.\n      operationId: listTimezones\n      responses:\n        '200':\n          $ref: \"#/components/responses/SuccessfulListJsonResponse\"\n  /timezone.txt:\n    get:\n      summary: a listing of all timezones.\n      operationId: listTimezonesAsText\n      responses:\n        '200':\n          $ref: \"#/components/responses/SuccessfulListTextResponse\"\n\n  /timezone/{area}:\n    get:\n      summary: a listing of all timezones available for that area.\n      operationId: getTimezoneByArea\n      parameters:\n        - name: area\n          in: path\n          description: Area\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: \"#/components/responses/SuccessfulListJsonResponse\"\n        default:\n          $ref: \"#/components/responses/ErrorJsonResponse\"\n  /timezone/{area}.txt:\n    get:\n      summary: a listing of all timezones available for that area.\n      operationId: getTimezoneByAreaAsText\n      parameters:\n        - name: area\n          in: path\n          description: Area\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: \"#/components/responses/SuccessfulListTextResponse\"\n        default:\n          $ref: \"#/components/responses/ErrorTextResponse\"\n\n  /timezone/{area}/{location}:\n    get:\n      summary: request the current time for a timezone.\n      operationId: getCurrentTime\n      parameters:\n        - name: area\n          in: path\n          description: Area\n          required: true\n          schema:\n            type: string\n        - name: location\n          in: path\n          description: location\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: \"#/components/responses/SuccessfulDateTimeJsonResponse\"\n        default:\n          $ref: \"#/components/responses/ErrorJsonResponse\"\n  /timezone/{area}/{location}.txt:\n    get:\n      summary: request the current time for a timezone.\n      operationId: getCurrentTimeAsText\n      parameters:\n        - name: area\n          in: path\n          description: Area\n          required: true\n          schema:\n            type: string\n        - name: location\n          in: path\n          description: Location\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: \"#/components/responses/SuccessfulDateTimeTextResponse\"\n        default:\n          $ref: \"#/components/responses/ErrorTextResponse\"\n\n  /timezone/{area}/{location}/{region}:\n    get:\n      summary: request the current time for a timezone.\n      operationId: getCurrentTimeByRegion\n      parameters:\n        - name: area\n          in: path\n          description: Area\n          required: true\n          schema:\n            type: string\n        - name: location\n          in: path\n          required: true\n          description: Location\n          schema:\n            type: string\n        - name: region\n          in: path\n          description: Region\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: \"#/components/responses/SuccessfulDateTimeJsonResponse\"\n        default:\n          $ref: \"#/components/responses/ErrorJsonResponse\"\n  /timezone/{area}/{location}/{region}.txt:\n    get:\n      summary: request the current time for a timezone.\n      operationId: getCurrentTimeByRegionAsText\n      parameters:\n        - name: area\n          in: path\n          description: Area\n          required: true\n          schema:\n            type: string\n        - name: location\n          in: path\n          description: Location\n          required: true\n          schema:\n            type: string\n        - name: region\n          in: path\n          description: Region\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: \"#/components/responses/SuccessfulDateTimeTextResponse\"\n        default:\n          $ref: \"#/components/responses/ErrorTextResponse\"\n\n  /ip:\n    get:\n      summary: \u003e-\n        request the current time based on the ip of the request.\n        note: this is a \"best guess\" obtained from open-source data.\n      operationId: getCurrentTimeBasedOnIp\n      responses:\n        '200':\n          $ref: \"#/components/responses/SuccessfulDateTimeJsonResponse\"\n        default:\n          $ref: \"#/components/responses/ErrorJsonResponse\"\n  /ip.txt:\n    get:\n      summary: \u003e-\n        request the current time based on the ip of the request.\n        note: this is a \"best guess\" obtained from open-source data.\n      operationId: getCurrentTimeBasedOnIpAsText\n      responses:\n        '200':\n          $ref: \"#/components/responses/SuccessfulDateTimeTextResponse\"\n        default:\n          $ref: \"#/components/responses/ErrorTextResponse\"\n\n  /ip/{ipv4}:\n    get:\n      summary: \u003e-\n        request the current time based on the ip of the request.\n        note: this is a \"best guess\" obtained from open-source data.\n      operationId: getCurrentTimeBasedOnIpv4\n      parameters:\n        - name: ipv4\n          in: path\n          description: IPv4 address\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: \"#/components/responses/SuccessfulDateTimeJsonResponse\"\n        default:\n          $ref: \"#/components/responses/ErrorJsonResponse\"\n  /ip/{ipv4}.txt:\n    get:\n      summary: \u003e-\n        request the current time based on the ip of the request.\n        note: this is a \"best guess\" obtained from open-source data.\n      operationId: getCurrentTimeBasedOnIpv4AsText\n      parameters:\n        - name: ipv4\n          in: path\n          description: IPv4 address\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: \"#/components/responses/SuccessfulDateTimeTextResponse\"\n        default:\n          $ref: \"#/components/responses/ErrorTextResponse\"\n\ncomponents:\n  responses:\n    SuccessfulListJsonResponse:\n      description: \u003e-\n        the list of available timezones in JSON format\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ListJsonResponse\"\n    SuccessfulListTextResponse:\n      description: \u003e-\n        the list of available timezones in plain text\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ListTextResponse\"\n\n    SuccessfulDateTimeJsonResponse:\n      description: \u003e-\n        the current time for the timezone requested in JSON format\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DateTimeJsonResponse\"\n    SuccessfulDateTimeTextResponse:\n      description: \u003e-\n        the current time for the timezone requested in plain text\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/DateTimeTextResponse\"\n\n    ErrorJsonResponse:\n      description: \u003e-\n        an error response in JSON format\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorJsonResponse\"\n    ErrorTextResponse:\n      description: \u003e-\n        an error response in plain text\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ErrorTextResponse\"\n\n  schemas:\n    ListJsonResponse:\n      type: array\n      description: \u003e-\n        a list of available timezones\n      items:\n        type: string\n\n    ListTextResponse:\n      type: string\n      description: \u003e-\n        a list of available timezones, one per line\n\n    DateTimeJsonResponse:\n      required:\n        - abbreviation\n        - client_ip\n        - datetime\n        - day_of_week\n        - day_of_year\n        - dst\n        - dst_offset\n        - timezone\n        - unixtime\n        - utc_datetime\n        - utc_offset\n        - week_number\n      properties:\n        abbreviation:\n          type: string\n          description: \u003e-\n            the abbreviated name of the timezone\n        client_ip:\n          type: string\n          description: \u003e-\n            the IP of the client making the request\n        datetime:\n          type: string\n          description: \u003e-\n            an ISO8601-valid string representing\n            the current, local date/time\n        day_of_week:\n          type: integer\n          description: \u003e-\n            current day number of the week, where sunday is 0\n        day_of_year:\n          type: integer\n          description: \u003e-\n            ordinal date of the current year\n        dst:\n          type: boolean\n          description: \u003e-\n            flag indicating whether the local\n            time is in daylight savings\n        dst_from:\n          type: string\n          description: \u003e-\n            an ISO8601-valid string representing\n            the datetime when daylight savings\n            started for this timezone\n        dst_offset:\n          type: integer\n          description: \u003e-\n            the difference in seconds between the current local\n            time and daylight saving time for the location\n        dst_until:\n          type: string\n          description: \u003e-\n            an ISO8601-valid string representing\n            the datetime when daylight savings\n            will end for this timezone\n        raw_offset:\n          type: integer\n          description: \u003e-\n            the difference in seconds between the current local time\n            and the time in UTC, excluding any daylight saving difference\n            (see dst_offset)\n        timezone:\n          type: string\n          description: \u003e-\n            timezone in `Area/Location` or\n            `Area/Location/Region` format\n        unixtime:\n          type: integer\n          description: \u003e-\n            number of seconds since the Epoch\n        utc_datetime:\n          type: string\n          description: \u003e-\n            an ISO8601-valid string representing\n            the current date/time in UTC\n        utc_offset:\n          type: string\n          description: \u003e-\n            an ISO8601-valid string representing\n            the offset from UTC\n        week_number:\n          type: integer\n          description: \u003e-\n            the current week number\n\n    DateTimeTextResponse:\n      type: string\n      description: \u003e-\n        time zone details, as per the DateTimeJsonResponse\n        response, in the format `key: value`, one item per line\n\n    ErrorJsonResponse:\n      required:\n        - error\n      properties:\n        error:\n          type: string\n          description: \u003e-\n            details about the error encountered\n\n    ErrorTextResponse:\n      type: string\n      description: \u003e-\n        details about the error encountered in plain text",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/worldtimeapi/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/worldtimeapi/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/timezone/{area}/{location}/{region}.txt\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}