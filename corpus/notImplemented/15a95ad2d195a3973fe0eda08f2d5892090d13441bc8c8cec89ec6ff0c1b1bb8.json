{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DimitriTuaz/radio-didou"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "openapi/openapi.json",
			"byteSize": 19749,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"radiod - A friendly web radio.\",\n    \"version\": \"1.0.0\",\n    \"contact\": {}\n  },\n  \"paths\": {\n    \"/configuration\": {\n      \"get\": {\n        \"x-controller-name\": \"ConfigurationController\",\n        \"x-operation-name\": \"getConfiguration\",\n        \"tags\": [\n          \"ConfigurationController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return the client configuration\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Configuration\"\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"ConfigurationController.getConfiguration\"\n      }\n    },\n    \"/media/delete/{credentialId}\": {\n      \"delete\": {\n        \"x-controller-name\": \"MediaController\",\n        \"x-operation-name\": \"deleteById\",\n        \"tags\": [\n          \"MediaController\"\n        ],\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Credential DELETE success\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"credentialId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"operationId\": \"MediaController.deleteById\"\n      }\n    },\n    \"/media/find\": {\n      \"get\": {\n        \"x-controller-name\": \"MediaController\",\n        \"x-operation-name\": \"find\",\n        \"tags\": [\n          \"MediaController\"\n        ],\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Array of Credential model instances\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MediaCredentials\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"scope\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"operationId\": \"MediaController.find\"\n      }\n    },\n    \"/media/{serviceId}/callback\": {\n      \"get\": {\n        \"x-controller-name\": \"MediaController\",\n        \"x-operation-name\": \"create\",\n        \"tags\": [\n          \"MediaController\"\n        ],\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Add your credential to Radiod and redirect to /close\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"serviceId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"code\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"operationId\": \"MediaController.create\"\n      }\n    },\n    \"/now/find\": {\n      \"get\": {\n        \"x-controller-name\": \"NowController\",\n        \"x-operation-name\": \"findMedia\",\n        \"tags\": [\n          \"NowController\"\n        ],\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return an array of users with a Spotify account.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/User\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"NowController.findMedia\"\n      }\n    },\n    \"/now/get\": {\n      \"get\": {\n        \"x-controller-name\": \"NowController\",\n        \"x-operation-name\": \"getNow\",\n        \"tags\": [\n          \"NowController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return informations about the current song\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NowObject\"\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"NowController.getNow\"\n      }\n    },\n    \"/now/getState\": {\n      \"get\": {\n        \"x-controller-name\": \"NowController\",\n        \"x-operation-name\": \"getState\",\n        \"tags\": [\n          \"NowController\"\n        ],\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return the state of NowService\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NowState\"\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"NowController.getState\"\n      }\n    },\n    \"/now/setDefaultState\": {\n      \"post\": {\n        \"x-controller-name\": \"NowController\",\n        \"x-operation-name\": \"setDefaultState\",\n        \"tags\": [\n          \"NowController\"\n        ],\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Set the state of NowService to the default state\"\n          }\n        },\n        \"operationId\": \"NowController.setDefaultState\"\n      }\n    },\n    \"/now/setState\": {\n      \"post\": {\n        \"x-controller-name\": \"NowController\",\n        \"x-operation-name\": \"setState\",\n        \"tags\": [\n          \"NowController\"\n        ],\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Set the state of NowService\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/NowState\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"NowController.setState\"\n      }\n    },\n    \"/ping\": {\n      \"get\": {\n        \"x-controller-name\": \"PingController\",\n        \"x-operation-name\": \"ping\",\n        \"tags\": [\n          \"PingController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ping Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"greeting\": {\n                      \"type\": \"string\"\n                    },\n                    \"date\": {\n                      \"type\": \"string\"\n                    },\n                    \"url\": {\n                      \"type\": \"string\"\n                    },\n                    \"headers\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"Content-Type\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"additionalProperties\": false\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"PingController.ping\"\n      }\n    },\n    \"/song/add\": {\n      \"put\": {\n        \"x-controller-name\": \"SongController\",\n        \"x-operation-name\": \"add\",\n        \"tags\": [\n          \"SongController\"\n        ],\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Informations about the current song\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Song\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"url\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"operationId\": \"SongController.add\"\n      }\n    },\n    \"/song/delete\": {\n      \"delete\": {\n        \"x-controller-name\": \"SongController\",\n        \"x-operation-name\": \"remove\",\n        \"tags\": [\n          \"SongController\"\n        ],\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The user's song is deleted with success\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"url\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"operationId\": \"SongController.remove\"\n      }\n    },\n    \"/song/get\": {\n      \"get\": {\n        \"x-controller-name\": \"SongController\",\n        \"x-operation-name\": \"get\",\n        \"tags\": [\n          \"SongController\"\n        ],\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Array of user's songs\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Song\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"SongController.get\"\n      }\n    },\n    \"/song/is\": {\n      \"get\": {\n        \"x-controller-name\": \"SongController\",\n        \"x-operation-name\": \"is\",\n        \"tags\": [\n          \"SongController\"\n        ],\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return true is this is an user's song, false otherwise.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"url\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"operationId\": \"SongController.is\"\n      }\n    },\n    \"/song/synchronize\": {\n      \"post\": {\n        \"x-controller-name\": \"SongController\",\n        \"x-operation-name\": \"synchronize\",\n        \"tags\": [\n          \"SongController\"\n        ],\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The synchronization with Spotify is a success.\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": false\n          },\n          {\n            \"name\": \"description\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": false\n          }\n        ],\n        \"operationId\": \"SongController.synchronize\"\n      }\n    },\n    \"/user/login\": {\n      \"post\": {\n        \"x-controller-name\": \"UserController\",\n        \"x-operation-name\": \"login\",\n        \"tags\": [\n          \"UserController\"\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Grant token in a cookie\",\n            \"headers\": {\n              \"Set-Cookie\": {\n                \"description\": \"Access token valid for 48 hours\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginCredentials\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"UserController.login\"\n      }\n    },\n    \"/user/logout\": {\n      \"post\": {\n        \"x-controller-name\": \"UserController\",\n        \"x-operation-name\": \"logout\",\n        \"tags\": [\n          \"UserController\"\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Revoke the token\",\n            \"headers\": {\n              \"Set-Cookie\": {\n                \"description\": \"Expire the token cookie.\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"UserController.logout\"\n      }\n    },\n    \"/user/me\": {\n      \"get\": {\n        \"x-controller-name\": \"UserController\",\n        \"x-operation-name\": \"currentUser\",\n        \"tags\": [\n          \"UserController\"\n        ],\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The current user profile\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"UserController.currentUser\"\n      }\n    },\n    \"/user/register\": {\n      \"post\": {\n        \"x-controller-name\": \"UserController\",\n        \"x-operation-name\": \"register\",\n        \"tags\": [\n          \"UserController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/NewUser\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"UserController.register\"\n      }\n    },\n    \"/user/{userId}\": {\n      \"get\": {\n        \"x-controller-name\": \"UserController\",\n        \"x-operation-name\": \"findById\",\n        \"tags\": [\n          \"UserController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"operationId\": \"UserController.findById\"\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"jwt\": {\n        \"type\": \"apiKey\",\n        \"in\": \"cookie\",\n        \"name\": \"RADIO-DIDOU-AUTH\"\n      }\n    },\n    \"schemas\": {\n      \"Configuration\": {\n        \"title\": \"Configuration\",\n        \"properties\": {\n          \"icecast_url\": {\n            \"type\": \"string\"\n          },\n          \"spotify_id\": {\n            \"type\": \"string\"\n          },\n          \"deezer_id\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"icecast_url\",\n          \"spotify_id\",\n          \"deezer_id\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"MediaCredentials\": {\n        \"title\": \"MediaCredentials\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"number\"\n          },\n          \"token\": {\n            \"type\": \"string\"\n          },\n          \"identifier\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"scope\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"type\",\n          \"token\",\n          \"identifier\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"NowObject\": {\n        \"title\": \"NowObject\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"number\"\n          },\n          \"listeners\": {\n            \"type\": \"number\"\n          },\n          \"song\": {\n            \"type\": \"string\"\n          },\n          \"artists\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"album\": {\n            \"type\": \"string\"\n          },\n          \"release_date\": {\n            \"type\": \"string\"\n          },\n          \"cover\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"type\",\n          \"listeners\",\n          \"song\",\n          \"artists\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"NowState\": {\n        \"title\": \"NowState\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"number\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"song\": {\n            \"type\": \"string\"\n          },\n          \"artist\": {\n            \"type\": \"string\"\n          },\n          \"album\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"type\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"User\": {\n        \"title\": \"User\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"power\": {\n            \"type\": \"number\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"playlistId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"email\",\n          \"power\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"Song\": {\n        \"title\": \"Song\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"album\": {\n            \"type\": \"string\"\n          },\n          \"artist\": {\n            \"type\": \"string\"\n          },\n          \"artwork\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"title\",\n          \"album\",\n          \"artist\",\n          \"artwork\",\n          \"url\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"NewUser\": {\n        \"title\": \"NewUser\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"email\",\n          \"password\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"LoginCredentials\": {\n        \"title\": \"LoginCredentials\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"email\",\n          \"password\"\n        ],\n        \"additionalProperties\": false\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"/\"\n    }\n  ]\n}",
			"canonicalURL": "/github.com/DimitriTuaz/radio-didou@f6e21aa0aa102403b279914aa5850abfa0eb86c4/-/blob/openapi/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/DimitriTuaz/radio-didou/blob/f6e21aa0aa102403b279914aa5850abfa0eb86c4/openapi/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/media/delete/{credentialId}\": delete: security: security \"jwt\" (index 0): cookie security not implemented",
	"NotImplemented": [
		"cookie security"
	]
}