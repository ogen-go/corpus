{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/AnalogIO/coffeecard_app"
		},
		"file": {
			"name": "coffeecard_api.swagger.json",
			"size": 0,
			"path": "openapi/coffeecard_api.swagger.json",
			"byteSize": 43049,
			"content": "{\n  \"x-generator\": \"NSwag v13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v12.0.0.0))\",\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Cafe Analog CoffeeCard API\",\n    \"description\": \"ASP.NET Core WebAPI for Cafe Analog\",\n    \"contact\": {\n      \"name\": \"AnalogIO\",\n      \"url\": \"https://github.com/analogio\",\n      \"email\": \"support@analogio.dk\"\n    },\n    \"license\": {\n      \"name\": \"Use under MIT\",\n      \"url\": \"https://github.com/AnalogIO/analog-core/blob/master/LICENSE\"\n    },\n    \"version\": \"v1\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://analogio.dk/clippy\"\n    }\n  ],\n  \"paths\": {\n    \"/api/v1/Account/register\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Register a new account. A account is required to verify its email before logging in\",\n        \"operationId\": \"Account_Register\",\n        \"requestBody\": {\n          \"x-name\": \"registerDto\",\n          \"description\": \"Register data object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RegisterDto\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-position\": 1\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successful account creation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageResponseDto\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Email already registered\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageResponseDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/Account/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Returns a token that is used to identify the account\",\n        \"operationId\": \"Account_Login\",\n        \"requestBody\": {\n          \"x-name\": \"loginDto\",\n          \"description\": \"Login data object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginDto\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-position\": 1\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful account login\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid credentials\"\n          },\n          \"403\": {\n            \"description\": \"Account email not verified\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiException\"\n                }\n              }\n            }\n          },\n          \"429\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiException\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/Account\": {\n      \"get\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Returns basic data about the account\",\n        \"operationId\": \"Account_Get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid credentials\"\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": []\n          }\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Updates the account and returns the updated values.\\nOnly properties which are present in the UpdateUserDto will be updated\",\n        \"operationId\": \"Account_Update\",\n        \"requestBody\": {\n          \"x-name\": \"userDto\",\n          \"description\": \"Update account information request. All properties are optional as the server only\\n            updates the values of the properties which are present\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateUserDto\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-position\": 1\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid credentials\"\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/Account/forgotpassword\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"operationId\": \"Account_ForgotPassword\",\n        \"requestBody\": {\n          \"x-name\": \"emailDTO\",\n          \"description\": \"Account email\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/EmailDto\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-position\": 1\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageResponseDto\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"E-mail not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiException\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/AppConfig\": {\n      \"get\": {\n        \"tags\": [\n          \"AppConfig\"\n        ],\n        \"summary\": \"Get app configuration\",\n        \"operationId\": \"AppConfig_Get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AppConfigDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid credentials\"\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/CoffeeCards\": {\n      \"get\": {\n        \"tags\": [\n          \"CoffeeCards\"\n        ],\n        \"summary\": \"Retrieve the coffee cards of the account\",\n        \"operationId\": \"CoffeeCards_Get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CoffeeCardDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid credentials\"\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/Leaderboard\": {\n      \"get\": {\n        \"tags\": [\n          \"Leaderboard\"\n        ],\n        \"summary\": \"Gets the leaderboard by the specified preset\",\n        \"operationId\": \"Leaderboard_Get\",\n        \"parameters\": [\n          {\n            \"name\": \"preset\",\n            \"in\": \"query\",\n            \"description\": \"Leaderboard preset. 0 - Monthly, 1 - Semester and 2 - Total\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"top\",\n            \"in\": \"query\",\n            \"description\": \"Number of results to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 10\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LeaderboardDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid credentials\"\n          }\n        }\n      }\n    },\n    \"/api/v1/MobilePay/initiate\": {\n      \"post\": {\n        \"tags\": [\n          \"MobilePay\"\n        ],\n        \"summary\": \"Initiates a purchase from the given productId and returns an orderId\",\n        \"operationId\": \"MobilePay_InitiatePurchase\",\n        \"requestBody\": {\n          \"x-name\": \"initiatePurchaseDto\",\n          \"description\": \"Initiate purchase request\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/InitiatePurchaseDto\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-position\": 1\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InitiatePurchaseResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid credentials\"\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/MobilePay/complete\": {\n      \"post\": {\n        \"tags\": [\n          \"MobilePay\"\n        ],\n        \"summary\": \"Validates the purchase against MobilePay and delivers the tickets if succeeded\",\n        \"operationId\": \"MobilePay_CompletePurchase\",\n        \"requestBody\": {\n          \"x-name\": \"dto\",\n          \"description\": \"Complete purchase request with MobilePay reference\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CompletePurchaseDto\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-position\": 1\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Purchase successfully fulfilled\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid credentials\"\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/Ping\": {\n      \"get\": {\n        \"tags\": [\n          \"Ping\"\n        ],\n        \"summary\": \"Ping\",\n        \"operationId\": \"Ping_Ping\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/Products\": {\n      \"get\": {\n        \"tags\": [\n          \"Products\"\n        ],\n        \"summary\": \"Returns a list of available products based on a account's user group\",\n        \"operationId\": \"Products_GetProductsPublic\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ProductDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/Products/app\": {\n      \"get\": {\n        \"tags\": [\n          \"Products\"\n        ],\n        \"summary\": \"Returns a list of available products based on a account's user group\",\n        \"operationId\": \"Products_GetProductsForUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ProductDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid credentials\"\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/Programmes\": {\n      \"get\": {\n        \"tags\": [\n          \"Programmes\"\n        ],\n        \"summary\": \"Returns a list of available programmes\",\n        \"operationId\": \"Programmes_Get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ProgrammeDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/Purchases\": {\n      \"get\": {\n        \"tags\": [\n          \"Purchases\"\n        ],\n        \"summary\": \"Returns a list of purchases for the given user via the supplied token in the header\",\n        \"operationId\": \"Purchases_Get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PurchaseDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid credentials\"\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/Purchases/redeemvoucher\": {\n      \"post\": {\n        \"tags\": [\n          \"Purchases\"\n        ],\n        \"summary\": \"Redeems the voucher supplied as parameter in the path\",\n        \"operationId\": \"Purchases_RedeemVoucher\",\n        \"parameters\": [\n          {\n            \"name\": \"voucherCode\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PurchaseDto\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Voucher code already used\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiException\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid credentials\"\n          },\n          \"404\": {\n            \"description\": \"Voucher code not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiException\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/Purchases/issueproduct\": {\n      \"post\": {\n        \"tags\": [\n          \"Purchases\"\n        ],\n        \"summary\": \"Issue purchase used by the ipad in the cafe\",\n        \"operationId\": \"Purchases_IssueProduct\",\n        \"requestBody\": {\n          \"x-name\": \"issueProduct\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/IssueProductDto\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-position\": 1\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PurchaseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid credentials\"\n          }\n        }\n      }\n    },\n    \"/api/v1/Tickets\": {\n      \"get\": {\n        \"tags\": [\n          \"Tickets\"\n        ],\n        \"summary\": \"Returns a list of tickets\",\n        \"operationId\": \"Tickets_Get\",\n        \"parameters\": [\n          {\n            \"name\": \"used\",\n            \"in\": \"query\",\n            \"description\": \"Include already used tickets\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TicketDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid credentials\"\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/Tickets/useMultiple\": {\n      \"post\": {\n        \"tags\": [\n          \"Tickets\"\n        ],\n        \"summary\": \"Uses the tickets supplied via product ids in the body\",\n        \"operationId\": \"Tickets_UseMultipleTickets\",\n        \"requestBody\": {\n          \"x-name\": \"dto\",\n          \"description\": \"Use multiple tickets request\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UseMultipleTicketDto\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-position\": 1\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TicketDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request, not enough tickets. See explanation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiException\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid credentials\"\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/Tickets/use\": {\n      \"post\": {\n        \"tags\": [\n          \"Tickets\"\n        ],\n        \"summary\": \"Use ticket request\",\n        \"operationId\": \"Tickets_Use\",\n        \"requestBody\": {\n          \"x-name\": \"dto\",\n          \"description\": \"Use ticket request\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UseTicketDTO\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-position\": 1\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TicketDto\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request, not enough tickets. See explanation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiException\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid credentials\"\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": []\n          }\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"MessageResponseDto\": {\n        \"type\": \"object\",\n        \"description\": \"Simple response class with a string message\",\n        \"example\": {\n          \"message\": \"Successful completion\"\n        },\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"description\": \"Message with API response\",\n            \"example\": \"Successful completion\"\n          }\n        }\n      },\n      \"RegisterDto\": {\n        \"type\": \"object\",\n        \"description\": \"Register a new user data object\",\n        \"example\": {\n          \"name\": \"John Doe\",\n          \"email\": \"john@doe.com\",\n          \"password\": \"[no example provided]\"\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"name\",\n          \"email\",\n          \"password\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Full Name of user\",\n            \"minLength\": 1,\n            \"example\": \"John Doe\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"description\": \"Email Address of user\",\n            \"format\": \"email\",\n            \"minLength\": 1,\n            \"example\": \"john@doe.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"description\": \"Pin Code as first UTF8 encoded, then SHA256 hashed, and then Base64 encoded string\",\n            \"minLength\": 1,\n            \"example\": \"[no example provided]\"\n          }\n        }\n      },\n      \"TokenDto\": {\n        \"type\": \"object\",\n        \"description\": \"Login response with Bearer JWT Token\",\n        \"example\": {\n          \"token\": \"[no example provided]\"\n        },\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\",\n            \"description\": \"Bearer JWT token used for authentication\",\n            \"example\": \"[no example provided]\"\n          }\n        }\n      },\n      \"ApiException\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Exception\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"StatusCode\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"Exception\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"StackTrace\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"Message\": {\n            \"type\": \"string\"\n          },\n          \"InnerException\": {\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Exception\"\n              }\n            ]\n          },\n          \"Source\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"LoginDto\": {\n        \"type\": \"object\",\n        \"description\": \"Login data object\",\n        \"example\": {\n          \"email\": \"john@doe.com\",\n          \"password\": \"[no example provided]\",\n          \"version\": \"2.1.0\"\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"email\",\n          \"password\",\n          \"version\"\n        ],\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"description\": \"Email Address of user\",\n            \"format\": \"email\",\n            \"minLength\": 1,\n            \"example\": \"john@doe.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"description\": \"Pin Code as first UTF8 encoded, then SHA256 hashed, and then Base64 encoded string\",\n            \"minLength\": 1,\n            \"example\": \"[no example provided]\"\n          },\n          \"version\": {\n            \"type\": \"string\",\n            \"description\": \"App version of device logging in\",\n            \"minLength\": 1,\n            \"example\": \"2.1.0\"\n          }\n        }\n      },\n      \"UserDto\": {\n        \"type\": \"object\",\n        \"description\": \"User information\",\n        \"example\": {\n          \"id\": 123,\n          \"name\": \"John Doe\",\n          \"email\": \"john@doe.com\",\n          \"privacyActivated\": true,\n          \"programmeId\": 1,\n          \"level\": 1,\n          \"requiredExp\": 12,\n          \"rankAllTime\": 15,\n          \"rankSemester\": 4,\n          \"rankMonth\": 5\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"id\",\n          \"name\",\n          \"email\",\n          \"privacyActivated\",\n          \"programmeId\",\n          \"level\",\n          \"requiredExp\",\n          \"rankAllTime\",\n          \"rankSemester\",\n          \"rankMonth\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"User Id\",\n            \"format\": \"int32\",\n            \"example\": 123\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Full Name of user\",\n            \"minLength\": 1,\n            \"example\": \"John Doe\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"description\": \"Email of user\",\n            \"minLength\": 1,\n            \"example\": \"john@doe.com\"\n          },\n          \"privacyActivated\": {\n            \"type\": \"boolean\",\n            \"description\": \"Privacy Activated\",\n            \"example\": true\n          },\n          \"programmeId\": {\n            \"type\": \"integer\",\n            \"description\": \"Study Programme Id of user\",\n            \"format\": \"int32\",\n            \"example\": 1\n          },\n          \"level\": {\n            \"type\": \"integer\",\n            \"description\": \"User Level\",\n            \"format\": \"int32\",\n            \"example\": 1\n          },\n          \"requiredExp\": {\n            \"type\": \"integer\",\n            \"description\": \"User Experience Level\",\n            \"format\": \"int32\",\n            \"example\": 12\n          },\n          \"rankAllTime\": {\n            \"type\": \"integer\",\n            \"description\": \"User's Rank all time\",\n            \"format\": \"int32\",\n            \"example\": 15\n          },\n          \"rankSemester\": {\n            \"type\": \"integer\",\n            \"description\": \"User's rank current semester\",\n            \"format\": \"int32\",\n            \"example\": 4\n          },\n          \"rankMonth\": {\n            \"type\": \"integer\",\n            \"description\": \"User's rank current month\",\n            \"format\": \"int32\",\n            \"example\": 5\n          }\n        }\n      },\n      \"UpdateUserDto\": {\n        \"type\": \"object\",\n        \"description\": \"Update User information request object. All properties are optional as the server only updates the values of the properties which are present\",\n        \"example\": {\n          \"name\": \"John Doe\",\n          \"email\": \"john@doe.com\",\n          \"privacyActivated\": true,\n          \"programmeId\": 1,\n          \"password\": \"[no example provided]\"\n        },\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Full Name of user\",\n            \"example\": \"John Doe\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"description\": \"Email of user\",\n            \"format\": \"email\",\n            \"example\": \"john@doe.com\"\n          },\n          \"privacyActivated\": {\n            \"type\": \"boolean\",\n            \"description\": \"Privacy Activated\",\n            \"nullable\": true,\n            \"example\": true\n          },\n          \"programmeId\": {\n            \"type\": \"integer\",\n            \"description\": \"Study Programme Id of user\",\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"example\": 1\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"description\": \"Pin Code as first UTF8 encoded, then SHA256 hashed, and then Base64 encoded string\",\n            \"example\": \"[no example provided]\"\n          }\n        }\n      },\n      \"EmailDto\": {\n        \"type\": \"object\",\n        \"description\": \"User email data object\",\n        \"example\": {\n          \"email\": \"john@doe.com\"\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"email\"\n        ],\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"description\": \"User Email\",\n            \"format\": \"email\",\n            \"minLength\": 1,\n            \"example\": \"john@doe.com\"\n          }\n        }\n      },\n      \"AppConfigDto\": {\n        \"type\": \"object\",\n        \"description\": \"App Configuration\",\n        \"example\": {\n          \"environmentType\": \"Production\",\n          \"merchantId\": \"APP1234\"\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"environmentType\",\n          \"merchantId\"\n        ],\n        \"properties\": {\n          \"environmentType\": {\n            \"description\": \"Environment type for indicating production or test system\",\n            \"example\": \"Production\",\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/EnvironmentType\"\n              }\n            ]\n          },\n          \"merchantId\": {\n            \"type\": \"string\",\n            \"description\": \"MobilePay MerchantId\",\n            \"minLength\": 1,\n            \"example\": \"APP1234\"\n          }\n        }\n      },\n      \"EnvironmentType\": {\n        \"type\": \"string\",\n        \"description\": \"\",\n        \"x-enumNames\": [\n          \"Production\",\n          \"Test\",\n          \"LocalDevelopment\"\n        ],\n        \"enum\": [\n          \"Production\",\n          \"Test\",\n          \"LocalDevelopment\"\n        ]\n      },\n      \"CoffeeCardDto\": {\n        \"type\": \"object\",\n        \"description\": \"A CoffeeCard is a union datatype of a product and unused tickets associated with the product. \",\n        \"example\": {\n          \"productId\": 1,\n          \"name\": \"Filter Coffee\",\n          \"ticketsLeft\": 5,\n          \"price\": 50,\n          \"quantity\": 10\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"productId\",\n          \"name\",\n          \"ticketsLeft\",\n          \"price\",\n          \"quantity\"\n        ],\n        \"properties\": {\n          \"productId\": {\n            \"type\": \"integer\",\n            \"description\": \"Id of product\",\n            \"format\": \"int32\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of product\",\n            \"minLength\": 1,\n            \"example\": \"Filter Coffee\"\n          },\n          \"ticketsLeft\": {\n            \"type\": \"integer\",\n            \"description\": \"Remaining (if any) unused tickets left for product\",\n            \"format\": \"int32\",\n            \"example\": 5\n          },\n          \"price\": {\n            \"type\": \"integer\",\n            \"description\": \"Price of product\",\n            \"format\": \"int32\",\n            \"example\": 50\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"description\": \"Quantity of tickets in product\",\n            \"format\": \"int32\",\n            \"example\": 10\n          }\n        }\n      },\n      \"LeaderboardDto\": {\n        \"type\": \"object\",\n        \"description\": \"A user on the leaderboard\",\n        \"example\": {\n          \"name\": \"John Doe\",\n          \"score\": 25\n        },\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Account name\",\n            \"example\": \"John Doe\"\n          },\n          \"score\": {\n            \"type\": \"integer\",\n            \"description\": \"Account score\",\n            \"format\": \"int32\",\n            \"example\": 25\n          }\n        }\n      },\n      \"InitiatePurchaseResponseDto\": {\n        \"type\": \"object\",\n        \"description\": \"Initiation of a new purchase response\",\n        \"example\": {\n          \"orderId\": \"ae76a5ba-82e8-46d8-8431-6cbb3130b94a\"\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"orderId\"\n        ],\n        \"properties\": {\n          \"orderId\": {\n            \"type\": \"string\",\n            \"description\": \"Order Id\",\n            \"minLength\": 1,\n            \"example\": \"ae76a5ba-82e8-46d8-8431-6cbb3130b94a\"\n          }\n        }\n      },\n      \"InitiatePurchaseDto\": {\n        \"type\": \"object\",\n        \"description\": \"Initiate a new purchase request\",\n        \"example\": {\n          \"productId\": 1\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"productId\"\n        ],\n        \"properties\": {\n          \"productId\": {\n            \"type\": \"integer\",\n            \"description\": \"Id of product for purchase request\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        }\n      },\n      \"CompletePurchaseDto\": {\n        \"type\": \"object\",\n        \"description\": \"Represents a request to complete a purchase\",\n        \"example\": {\n          \"orderId\": \"ae76a5ba-82e8-46d8-8431-6cbb3130b94a\",\n          \"transactionId\": \"123241619\"\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"orderId\",\n          \"transactionId\"\n        ],\n        \"properties\": {\n          \"orderId\": {\n            \"type\": \"string\",\n            \"description\": \"Order Id for purchase\",\n            \"minLength\": 1,\n            \"example\": \"ae76a5ba-82e8-46d8-8431-6cbb3130b94a\"\n          },\n          \"transactionId\": {\n            \"type\": \"string\",\n            \"description\": \"Transaction Id at external payment provider\",\n            \"minLength\": 1,\n            \"example\": 123241619\n          }\n        }\n      },\n      \"ProductDto\": {\n        \"type\": \"object\",\n        \"description\": \"Represents a purchasable product\",\n        \"example\": {\n          \"id\": 1,\n          \"price\": 300,\n          \"numberOfTickets\": 10,\n          \"name\": \"Coffee clip card\",\n          \"description\": \"Coffee clip card of 10 clips\"\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"id\",\n          \"price\",\n          \"numberOfTickets\",\n          \"name\",\n          \"description\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"Id of product\",\n            \"format\": \"int32\",\n            \"example\": 1\n          },\n          \"price\": {\n            \"type\": \"integer\",\n            \"description\": \"Product price\",\n            \"format\": \"int32\",\n            \"example\": 300\n          },\n          \"numberOfTickets\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of tickets in product\",\n            \"format\": \"int32\",\n            \"example\": 10\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of product\",\n            \"minLength\": 1,\n            \"example\": \"Coffee clip card\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"Description of products\",\n            \"minLength\": 1,\n            \"example\": \"Coffee clip card of 10 clips\"\n          }\n        }\n      },\n      \"ProgrammeDto\": {\n        \"type\": \"object\",\n        \"description\": \"Represents a study programme\",\n        \"example\": {\n          \"id\": 1,\n          \"shortName\": \"SWU\",\n          \"fullName\": \"Software Development\"\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"id\",\n          \"shortName\",\n          \"fullName\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"Id of study programme\",\n            \"format\": \"int32\",\n            \"example\": 1\n          },\n          \"shortName\": {\n            \"type\": \"string\",\n            \"description\": \"Short name of study programme\",\n            \"minLength\": 1,\n            \"example\": \"SWU\"\n          },\n          \"fullName\": {\n            \"type\": \"string\",\n            \"description\": \"Full name of study programme\",\n            \"minLength\": 1,\n            \"example\": \"Software development\"\n          }\n        }\n      },\n      \"PurchaseDto\": {\n        \"type\": \"object\",\n        \"description\": \"Represents a purchase\",\n        \"example\": \"{\\n    \\\"id\\\": 22,\\n    \\\"productName\\\": \\\"Coffee\\\",\\n    \\\"productId\\\": 1,\\n    \\\"price\\\": 300,\\n    \\\"numberOfTickets\\\": 10,\\n    \\\"dateCreated\\\": \\\"2022-01-09T21:03:52.2283208Z\\\",\\n    \\\"completed: true,\\n    \\\"orderId\\\": \\\"f5cb3e0f-3b9b-4f50-8c4f-a7450f300a5c\\\",\\n    \\\"transactionId\\\": \\\"1482981489\\\"\\n}\",\n        \"additionalProperties\": false,\n        \"required\": [\n          \"id\",\n          \"productName\",\n          \"productId\",\n          \"price\",\n          \"numberOfTickets\",\n          \"dateCreated\",\n          \"completed\",\n          \"orderId\",\n          \"transactionId\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"Id of purchase\",\n            \"format\": \"int32\",\n            \"example\": 1371\n          },\n          \"productName\": {\n            \"type\": \"string\",\n            \"description\": \"Name of purchased product\",\n            \"minLength\": 1,\n            \"example\": \"Coffee\"\n          },\n          \"productId\": {\n            \"type\": \"integer\",\n            \"description\": \"Id of purchased product\",\n            \"format\": \"int32\",\n            \"example\": 1\n          },\n          \"price\": {\n            \"type\": \"integer\",\n            \"description\": \"Total purchase price in Danish Kroner (kr)\",\n            \"format\": \"int32\",\n            \"example\": 300\n          },\n          \"numberOfTickets\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of tickets issued in purchase\",\n            \"format\": \"int32\",\n            \"example\": 10\n          },\n          \"dateCreated\": {\n            \"type\": \"string\",\n            \"description\": \"Date time for purchase in Utc format\",\n            \"format\": \"date-time\",\n            \"minLength\": 1,\n            \"example\": \"2022-01-09T21:03:52.2283208Z\"\n          },\n          \"completed\": {\n            \"type\": \"boolean\",\n            \"description\": \"Is purchase completed (with MobilePay)\",\n            \"example\": true\n          },\n          \"orderId\": {\n            \"type\": \"string\",\n            \"description\": \"Order Id\",\n            \"minLength\": 1,\n            \"example\": \"f5cb3e0f-3b9b-4f50-8c4f-a7450f300a5c\"\n          },\n          \"transactionId\": {\n            \"type\": \"string\",\n            \"description\": \"Transaction id at external payment provider\",\n            \"minLength\": 1,\n            \"example\": 1482981489\n          }\n        }\n      },\n      \"IssueProductDto\": {\n        \"type\": \"object\",\n        \"description\": \"Issue product request\",\n        \"example\": {\n          \"issuedBy\": \"dann\",\n          \"userId\": \"122\",\n          \"productId\": 1\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"issuedBy\",\n          \"userId\",\n          \"productId\"\n        ],\n        \"properties\": {\n          \"issuedBy\": {\n            \"type\": \"string\",\n            \"description\": \"Name/Initials of person who issued purchase\",\n            \"minLength\": 1\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"description\": \"User id who should receive the product\",\n            \"format\": \"int32\",\n            \"example\": 122\n          },\n          \"productId\": {\n            \"type\": \"integer\",\n            \"description\": \"Id of Product to issue\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        }\n      },\n      \"TicketDto\": {\n        \"type\": \"object\",\n        \"description\": \"Representing a ticket for a product\",\n        \"example\": \"{\\n    \\\"id\\\": 122,\\n    \\\"dateCreated\\\": \\\"2022-01-09T21:03:52.2283208Z\\\",\\n    \\\"dateUsed\\\": \\\"2022-01-09T21:03:52.2283208Z\\\",\\n    \\\"productName: \\\"Coffee\\\"\\n}\",\n        \"additionalProperties\": false,\n        \"required\": [\n          \"id\",\n          \"dateCreated\",\n          \"dateUsed\",\n          \"productName\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"Ticket Id\",\n            \"format\": \"int32\",\n            \"example\": 122\n          },\n          \"dateCreated\": {\n            \"type\": \"string\",\n            \"description\": \"Issuing date time for ticket in Utc format\",\n            \"format\": \"date-time\",\n            \"minLength\": 1,\n            \"example\": \"2022-01-09T21:03:52.2283208Z\"\n          },\n          \"dateUsed\": {\n            \"type\": \"string\",\n            \"description\": \"Used date time for ticket in Utc format\",\n            \"format\": \"date-time\",\n            \"minLength\": 1,\n            \"example\": \"2022-01-09T21:03:52.2283208Z\"\n          },\n          \"productName\": {\n            \"type\": \"string\",\n            \"description\": \"Name of product a ticket is for\",\n            \"minLength\": 1,\n            \"example\": \"Coffee\"\n          }\n        }\n      },\n      \"UseMultipleTicketDto\": {\n        \"type\": \"object\",\n        \"description\": \"Use multiple tickets request\",\n        \"example\": {\n          \"productIds\": [\n            1,\n            2\n          ]\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"productIds\"\n        ],\n        \"properties\": {\n          \"productIds\": {\n            \"type\": \"array\",\n            \"description\": \"List of products ids to use a ticket for\",\n            \"example\": \"1, 2\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        }\n      },\n      \"UseTicketDTO\": {\n        \"type\": \"object\",\n        \"description\": \"Use ticket request\",\n        \"example\": {\n          \"productId\": 1\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"productId\"\n        ],\n        \"properties\": {\n          \"productId\": {\n            \"type\": \"integer\",\n            \"description\": \"Id of product to use a ticket for\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"Bearer\": {\n        \"type\": \"http\",\n        \"description\": \"Insert a JWT Bearer token: Bearer {token}\",\n        \"name\": \"Authorization\",\n        \"in\": \"header\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/AnalogIO/coffeecard_app@7b7a76fc4ac20ff903509b29696e5d7c8cf742f6/-/blob/openapi/coffeecard_api.swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/AnalogIO/coffeecard_app/blob/7b7a76fc4ac20ff903509b29696e5d7c8cf742f6/openapi/coffeecard_api.swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/v1/Purchases/redeemvoucher\": post: responses: 400: contents: application/json: generate schema: allOf: allOf additionalProperties merging not implemented",
	"NotImplemented": [
		"allOf additionalProperties merging"
	]
}