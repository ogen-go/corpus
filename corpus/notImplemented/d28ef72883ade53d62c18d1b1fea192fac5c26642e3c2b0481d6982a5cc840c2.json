{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stichtingsem/technology-prototype"
		},
		"file": {
			"name": "usage.v1.yaml",
			"size": 0,
			"path": "reference/usage.v1.yaml",
			"byteSize": 6606,
			"content": "openapi: 3.0.0\ninfo:\n  title: Usage API\n  version: '1.0'\n  description: |\n    This is an API provided by the Learning Application in the SEM ecosystem, and is designed to enable a learning application to make information about usage of a product by a teacher or student to be confirmed to the Marketplace.\n\n    The Usage events are send when a student uses the product in the entitlement. A LA can choose to send the usage per individual or if the entitlement is on school level , skip the student id and send the anonymous total.\n\n    In the Usage get api has the option to return the usage including a list of students who have used product in this entitlement \n\n    # Events\n\n    It is envisaged that the service implementing this API, also implements the generic [Events](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/events.v1.yaml) and [Webhooks](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/webhooks.v1.yaml) API to enable subscription to changes vs polling.\n\n\n    Events generated by the Usage API are connected to (first) use of the product.\n     - `la.usage.first` - First time\n     - `la.usage.ongoing` - Regular usage\n  contact:\n    name: SEM\n    url: 'https://stichtingsem.org/'\nservers:\n  - url: 'https://example.stichtingsem.org/api'\n    description: usage\npaths:\n  '/usage/{entitlementid}':\n    parameters:\n      - schema:\n          type: string\n        name: entitlementid\n        in: path\n        required: true\n    get:\n      summary: Get usage for a specific entitlement\n      tags:\n        - usage\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/usage'\n            application/xml:\n              schema:\n                type: object\n                properties: {}\n      operationId: get-usage-by-entitlement-id\n      description: |-\n        Retrieve the full usage based on a entitlement-id, needs to confirm that the caller is able to access either based on their provider information (they can only see their own usage) in the case of the provider scope.\n        This API has pagination, using `start` and `limit`, with an optional `status` filter.\n      security:\n        - APIKey:\n            - la.usage.first\n            - la.usage.ongoing\n      parameters:\n        - in: query\n          name: status\n          description: |\n            Filter by status\n          schema:\n            type: string\n            enum:\n              - uniqueActivation\n              - weeklyActivation\n              - monthlyActivation\n              - InitialActivation\n        - in: query\n          name: start\n          description: 'Start point for pagination of results, defaults to 0,'\n          schema:\n            type: integer\n            format: int32\n          examples:\n            default:\n              value: 0\n              summary: The start point for pagination\n        - in: query\n          name: limit\n          description: 'Limit of number of results returned by page, defaults to 20 with max 100.'\n          schema:\n            type: integer\n            maximum: 100\n            format: int32\n          examples:\n            default:\n              value: 20\n              summary: The default value if none is provided\n            max:\n              value: 100\n              summary: The largest recommended page size\ntags:\n  - name: entitlements\n  - name: usage\ncomponents:\n  schemas:\n    usage-event:\n      title: usage API event\n      type: object\n      description: |\n        This is an API provided by the LA in the SEM ecosystem, and is designed to enable a MP to make the usage information about teachers and learners of product available to the rest of the ecosystem in a security and privacy concious way.\n      properties:\n        entitlementId:\n          type: string\n        schemaVersion:\n          type: integer\n          description: 'schema version of this event/object. Start with 0, inclement when we have changes, so we know how to deserialise.'\n        schoolId:\n          type: string\n        id:\n          type: string\n          description: unique id of user who used the product of this entitlement (optional)\n        eckid:\n          type: string\n        usageDate:\n          type: string\n          format: date\n        usageType:\n          type: string\n          enum:\n            - uniqueActivation\n            - weeklyActivation\n            - monthlyActivation\n            - InitialActivation\n          description: Type of usage report. Currently only initialActivations are implemented\n        totalForThisEntitlement:\n          type: integer\n          description: Accumulated total for this entitlement\n      required:\n        - entitlementId\n        - usageDate\n        - usageType\n    usage:\n      title: usage API\n      type: object\n      description: |\n        This is an API provided by the LA in the SEM ecosystem, and is designed to enable a MP to make the usage information about teachers and learners of product available to the rest of the ecosystem in a security and privacy concious way.\n      properties:\n        entitlementId:\n          type: string\n        schemaVersion:\n          type: integer\n          description: 'schema version of this event/object. Start with 0, inclement when we have changes, so we know how to deserialise.'\n        schoolId:\n          type: string\n        id:\n          type: string\n          description: unique id of user who used the product of this entitlement (optional)\n        eckid:\n          type: string\n        totalForThisEntitlement:\n          type: integer\n          description: Accumulated total for this entitlement\n        entitleeUsageList:\n          type: array\n          items:\n            $ref: '#/components/schemas/entitlee'\n      required:\n        - entitlementId\n    entitlee:\n      title: entitlee\n      type: object\n      properties:\n        id:\n          type: string\n        eckId:\n          type: string\n        firstUsed:\n          type: string\n          format: date-time\n        lastUsed:\n          type: string\n          format: date-time\n      required:\n        - id\n        - firstUsed\n  securitySchemes:\n    APIKey:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: ''\n          refreshUrl: ''\n          scopes:\n            la.usage.ongoing: ''\n            la.usage.first: ''\n        implicit:\n          authorizationUrl: ''\n          refreshUrl: ''\n          scopes:\n            la.usage.ongoing: ''\n            la.usage.first: ''\n      description: ''\n",
			"canonicalURL": "/github.com/stichtingsem/technology-prototype@3bf27b60f5566865821b0496df27c73dc3e3c5e2/-/blob/reference/usage.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stichtingsem/technology-prototype/blob/3bf27b60f5566865821b0496df27c73dc3e3c5e2/reference/usage.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/usage/{entitlementid}\": get: security: security \"APIKey\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}