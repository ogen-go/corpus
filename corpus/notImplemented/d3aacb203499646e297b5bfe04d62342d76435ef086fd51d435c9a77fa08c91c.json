{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/mbus.local/0.3.5/openapi.yaml",
			"byteSize": 9389,
			"content": "openapi: 3.0.3\nservers:\n  - url: http://mbus.local\n  - url: /\ninfo:\n  title: M-Bus HTTPD API\n  version: 0.3.5\n  x-apisguru-categories:\n    - iot\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/packom/mbus-api/master/api/openapi.yaml\n      version: \"3.0\"\n  x-providerName: mbus.local\npaths:\n  /mbus/api:\n    get:\n      description: Returns this API specification\n      operationId: mbus_api\n      responses:\n        \"200\":\n          content:\n            text/x-yaml:\n              schema:\n                $ref: \"#/components/schemas/yaml\"\n          description: OK\n        \"404\":\n          content:\n            text/plain:\n              example: File not found\n              schema:\n                $ref: \"#/components/schemas/textError\"\n          description: Not found\n  \"/mbus/get/{device}/{baudrate}/{address}\":\n    post:\n      description: Gets data from the slave identified by {address}\n      operationId: get\n      parameters:\n        - description: The serial device to scan - /dev/ is pre-pended to {device} by M-Bus HTTPD before scanning\n          example: ttyAMA0\n          explode: false\n          in: path\n          name: device\n          required: true\n          schema:\n            $ref: \"#/components/schemas/device\"\n          style: simple\n        - description: Baudrate to communicate with M-Bus devices\n          example: 2400\n          explode: false\n          in: path\n          name: baudrate\n          required: true\n          schema:\n            $ref: \"#/components/schemas/baudrate\"\n          style: simple\n        - description: The slave device to get data from\n          example: 48\n          explode: false\n          in: path\n          name: address\n          required: true\n          schema:\n            $ref: \"#/components/schemas/address\"\n          style: simple\n      responses:\n        \"200\":\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/mbusData\"\n          description: OK\n        \"400\":\n          content:\n            text/plain:\n              example: Baudrate {baudrate} is invalid\n              schema:\n                $ref: \"#/components/schemas/textError\"\n          description: Bad request\n        \"404\":\n          content:\n            text/plain:\n              example: Slave {address} not responding\n              schema:\n                $ref: \"#/components/schemas/textError\"\n          description: Not found (or M-Bus HTTPD is unauthorized to access it, or to change baud rate to that specified, etc)\n  \"/mbus/getMulti/{device}/{baudrate}/{address}/{maxframes}\":\n    post:\n      description: Gets data from the slave identified by {address}, and supports multiple responses from the slave\n      operationId: getMulti\n      parameters:\n        - description: The serial device to scan - /dev/ is pre-pended to {device} by M-Bus HTTPD before scanning\n          example: ttyAMA0\n          explode: false\n          in: path\n          name: device\n          required: true\n          schema:\n            $ref: \"#/components/schemas/device\"\n          style: simple\n        - description: Baudrate to communicate with M-Bus devices\n          example: 2400\n          explode: false\n          in: path\n          name: baudrate\n          required: true\n          schema:\n            $ref: \"#/components/schemas/baudrate\"\n          style: simple\n        - description: The slave device to get data from\n          example: 48\n          explode: false\n          in: path\n          name: address\n          required: true\n          schema:\n            $ref: \"#/components/schemas/address\"\n          style: simple\n        - description: The slave device to get data from\n          example: 16\n          explode: false\n          in: path\n          name: maxframes\n          required: true\n          schema:\n            $ref: \"#/components/schemas/maxframes\"\n          style: simple\n      responses:\n        \"200\":\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/mbusData\"\n          description: OK\n        \"400\":\n          content:\n            text/plain:\n              example: Baudrate {baudrate} is invalid\n              schema:\n                $ref: \"#/components/schemas/textError\"\n          description: Bad request\n        \"404\":\n          content:\n            text/plain:\n              example: Slave {address} not responding\n              schema:\n                $ref: \"#/components/schemas/textError\"\n          description: Not found (or M-Bus HTTPD is unauthorized to access it, or to change baud rate to that specified, etc)\n  /mbus/hat:\n    get:\n      description: Gets Raspberry Pi Hat information\n      operationId: hat\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/hat\"\n          description: OK\n        \"404\":\n          content:\n            text/plain:\n              example: Hat information not found\n              schema:\n                $ref: \"#/components/schemas/textError\"\n          description: Not found\n  /mbus/hat/off:\n    post:\n      description: Turns off power to the M-Bus\n      operationId: hatOff\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          content:\n            text/plain:\n              example: M-Bus Master Hat not installed\n              schema:\n                $ref: \"#/components/schemas/textError\"\n          description: Not found\n  /mbus/hat/on:\n    post:\n      description: Turns on power to the M-Bus\n      operationId: hatOn\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          content:\n            text/plain:\n              example: M-Bus Master Hat not installed\n              schema:\n                $ref: \"#/components/schemas/textError\"\n          description: Not found\n  \"/mbus/scan/{device}/{baudrate}\":\n    post:\n      description: Scan the specified device for slaves\n      operationId: scan\n      parameters:\n        - description: The serial device to scan - /dev/ is pre-pended to {device} by M-Bus HTTPD before scanning\n          example: ttyAMA0\n          explode: false\n          in: path\n          name: device\n          required: true\n          schema:\n            $ref: \"#/components/schemas/device\"\n          style: simple\n        - description: Baudrate to communicate with M-Bus devices\n          example: 2400\n          explode: false\n          in: path\n          name: baudrate\n          required: true\n          schema:\n            $ref: \"#/components/schemas/baudrate\"\n          style: simple\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              example: Found a M-Bus device at address 1\n              schema:\n                $ref: \"#/components/schemas/slaves\"\n          description: OK\n        \"400\":\n          content:\n            text/plain:\n              example: Baudrate {baudrate} is invalid\n              schema:\n                $ref: \"#/components/schemas/textError\"\n          description: Bad request\n        \"404\":\n          content:\n            text/plain:\n              example: Device /dev/{device} does not exist\n              schema:\n                $ref: \"#/components/schemas/textError\"\n          description: Not found (e.g. device not found, or M-Bus HTTPD is unauthorized to access it, or to change baud rate to that specified, device not responding etc)\ncomponents:\n  schemas:\n    address:\n      description: Slave address (primary or secondary)\n      example: \"48\"\n      format: string\n      maxLength: 16\n      minLength: 1\n      type: string\n    baudrate:\n      description: Baudrate to use for the communication - valid values 300, 600, 1200, 2400, 4800, 9600\n      enum:\n        - 300\n        - 600\n        - 1200\n        - 2400\n        - 4800\n        - 9600\n      example: 2400\n      format: int32\n      type: integer\n    device:\n      description: The device the M-Bus is connected to - /dev/ is prepended to {device} by M-Bus HTTPD\n      example: ttyAMA0\n      type: string\n    hat:\n      description: Raspberry Pi Hat Information\n      example:\n        addr: 30\n        enabled: true\n        index: 1\n      properties:\n        product:\n          description: Product\n          example: M-Bus Master\n          type: string\n        productId:\n          description: Product ID\n          example: 1\n          type: string\n        productVer:\n          description: Product Version\n          example: 2\n          type: string\n        uuid:\n          description: Hat UUID\n          example: 148fa981-a33b-a07a-a13f-a2405d08e0fe\n          type: string\n        vendor:\n          description: Hat Vendor\n          example: packom.net\n          type: string\n    maxframes:\n      description: Max frames to listen for\n      example: 16\n      format: int32\n      maximum: 250\n      minimum: 1\n      type: integer\n    mbusData:\n      description: M-Bus device data as an XML document\n      example: \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e...\n      type: string\n    slaves:\n      description: Output of libmbus scan command\n      example: Found a M-Bus device at address 1\n      type: string\n    textError:\n      description: Some error text\n      example: Device /dev/{device} does not exist\n      type: string\n    yaml:\n      description: A YAML file\n      example: A YAML file\n      type: string\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/mbus.local/0.3.5/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/mbus.local/0.3.5/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/mbus/scan/{device}/{baudrate}\": post: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}