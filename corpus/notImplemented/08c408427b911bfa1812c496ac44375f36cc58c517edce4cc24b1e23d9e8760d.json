{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/clarkmcc/go-hubspot"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "generated/transactional/api/openapi.yaml",
			"byteSize": 19904,
			"content": "openapi: 3.0.1\ninfo:\n  title: Transactional Email\n  version: v3\nservers:\n- url: https://api.hubapi.com/\ntags:\n- name: Single_Send\n- name: Public_Smtp_Tokens\npaths:\n  /marketing/v3/transactional/single-email/send:\n    post:\n      description: Asynchronously send a transactional email. Returns the status of\n        the email send with a statusId that can be used to continuously query for\n        the status using the Email Send Status API.\n      operationId: post-/marketing/v3/transactional/single-email/send_sendEmail\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PublicSingleSendRequestEgg'\n        description: A request object describing the email to send.\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailSendStatusView'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - oauth2_legacy:\n        - transactional-email\n      - hapikey: []\n      summary: Send a single transactional email asynchronously.\n      tags:\n      - Single_Send\n      x-hubspot-rate-limit-exemptions:\n      - daily\n      - ten-secondly\n  /marketing/v3/transactional/smtp-tokens:\n    get:\n      description: Query multiple SMTP API tokens by campaign name or a single token\n        by emailCampaignId.\n      operationId: get-/marketing/v3/transactional/smtp-tokens_getTokensPage\n      parameters:\n      - description: A name for the campaign tied to the SMTP API token.\n        explode: true\n        in: query\n        name: campaignName\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Identifier assigned to the campaign provided during the token\n          creation.\n        explode: true\n        in: query\n        name: emailCampaignId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Starting point to get the next set of results.\n        explode: true\n        in: query\n        name: after\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Maximum number of tokens to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponseSmtpApiTokenView'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - hapikey: []\n      summary: Query SMTP API tokens by campaign name or an emailCampaignId.\n      tags:\n      - Public_Smtp_Tokens\n    post:\n      description: Create a SMTP API token.\n      operationId: post-/marketing/v3/transactional/smtp-tokens_createToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SmtpApiTokenRequestEgg'\n        description: A request object that includes the campaign name tied to the\n          token and whether contacts should be created for recipients of emails.\n        required: false\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SmtpApiTokenView'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - hapikey: []\n      summary: Create a SMTP API token.\n      tags:\n      - Public_Smtp_Tokens\n  /marketing/v3/transactional/smtp-tokens/{tokenId}:\n    delete:\n      description: Delete a single token by ID.\n      operationId: delete-/marketing/v3/transactional/smtp-tokens/{tokenId}_archiveToken\n      parameters:\n      - description: Identifier generated when a token is created.\n        explode: false\n        in: path\n        name: tokenId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          content: {}\n          description: No content\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - hapikey: []\n      summary: Delete a single token by ID.\n      tags:\n      - Public_Smtp_Tokens\n    get:\n      description: Query a single token by ID.\n      operationId: get-/marketing/v3/transactional/smtp-tokens/{tokenId}_getTokenById\n      parameters:\n      - description: Identifier generated when a token is created.\n        explode: false\n        in: path\n        name: tokenId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SmtpApiTokenView'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - hapikey: []\n      summary: Query a single token by ID.\n      tags:\n      - Public_Smtp_Tokens\n  /marketing/v3/transactional/smtp-tokens/{tokenId}/password-reset:\n    post:\n      description: Allows the creation of a replacement password for a given token.\n        Once the password is successfully reset, the old password for the token will\n        be invalid.\n      operationId: post-/marketing/v3/transactional/smtp-tokens/{tokenId}/password-reset_resetPassword\n      parameters:\n      - description: Identifier generated when a token is created.\n        explode: false\n        in: path\n        name: tokenId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SmtpApiTokenView'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - hapikey: []\n      summary: Reset the password of an existing token.\n      tags:\n      - Public_Smtp_Tokens\ncomponents:\n  responses:\n    Error:\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: An error occurred.\n  schemas:\n    CollectionResponseSmtpApiTokenView:\n      description: A collection of SMTP API tokens.\n      example:\n        paging:\n          next:\n            link: link\n            after: after\n        results:\n        - createdAt: 2000-01-23T04:56:07.000+00:00\n          password: password\n          createdBy: createdBy\n          createContact: true\n          id: id\n          emailCampaignId: emailCampaignId\n          campaignName: campaignName\n        - createdAt: 2000-01-23T04:56:07.000+00:00\n          password: password\n          createdBy: createdBy\n          createContact: true\n          id: id\n          emailCampaignId: emailCampaignId\n          campaignName: campaignName\n      properties:\n        results:\n          description: The actual collection of tokens.\n          items:\n            $ref: '#/components/schemas/SmtpApiTokenView'\n          type: array\n        paging:\n          $ref: '#/components/schemas/Paging'\n      required:\n      - results\n      type: object\n    EmailSendStatusView:\n      description: Describes the status of an email send request.\n      example:\n        eventId:\n          created: 2000-01-23T04:56:07.000+00:00\n          id: id\n        completedAt: 2000-01-23T04:56:07.000+00:00\n        statusId: statusId\n        sendResult: SENT\n        requestedAt: 2000-01-23T04:56:07.000+00:00\n        startedAt: 2000-01-23T04:56:07.000+00:00\n        status: PENDING\n      properties:\n        eventId:\n          $ref: '#/components/schemas/EventIdView'\n        statusId:\n          description: Identifier used to query the status of the send.\n          type: string\n        sendResult:\n          description: Result of the send.\n          enum:\n          - SENT\n          - IDEMPOTENT_IGNORE\n          - QUEUED\n          - IDEMPOTENT_FAIL\n          - THROTTLED\n          - EMAIL_DISABLED\n          - PORTAL_SUSPENDED\n          - INVALID_TO_ADDRESS\n          - BLOCKED_DOMAIN\n          - PREVIOUSLY_BOUNCED\n          - EMAIL_UNCONFIRMED\n          - PREVIOUS_SPAM\n          - PREVIOUSLY_UNSUBSCRIBED_MESSAGE\n          - PREVIOUSLY_UNSUBSCRIBED_PORTAL\n          - INVALID_FROM_ADDRESS\n          - CAMPAIGN_CANCELLED\n          - VALIDATION_FAILED\n          - MTA_IGNORE\n          - BLOCKED_ADDRESS\n          - PORTAL_OVER_LIMIT\n          - PORTAL_EXPIRED\n          - PORTAL_MISSING_MARKETING_SCOPE\n          - MISSING_TEMPLATE_PROPERTIES\n          - MISSING_REQUIRED_PARAMETER\n          - PORTAL_AUTHENTICATION_FAILURE\n          - MISSING_CONTENT\n          - CORRUPT_INPUT\n          - TEMPLATE_RENDER_EXCEPTION\n          - GRAYMAIL_SUPPRESSED\n          - UNCONFIGURED_SENDING_DOMAIN\n          - UNDELIVERABLE\n          - CANCELLED_ABUSE\n          - QUARANTINED_ADDRESS\n          - ADDRESS_ONLY_ACCEPTED_ON_PROD\n          - PORTAL_NOT_AUTHORIZED_FOR_APPLICATION\n          - ADDRESS_LIST_BOMBED\n          - ADDRESS_OPTED_OUT\n          - RECIPIENT_FATIGUE_SUPPRESSED\n          - TOO_MANY_RECIPIENTS\n          - PREVIOUSLY_UNSUBSCRIBED_BRAND\n          - NON_MARKETABLE_CONTACT\n          type: string\n        requestedAt:\n          description: Time when the send was requested.\n          format: date-time\n          type: string\n        startedAt:\n          description: Time when the send began processing.\n          format: date-time\n          type: string\n        completedAt:\n          description: Time when the send was completed.\n          format: date-time\n          type: string\n        status:\n          description: Status of the send request.\n          enum:\n          - PENDING\n          - PROCESSING\n          - CANCELED\n          - COMPLETE\n          type: string\n      required:\n      - status\n      - statusId\n      type: object\n    Error:\n      example:\n        message: Invalid input (details will vary based on the error)\n        correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf\n        category: VALIDATION_ERROR\n        links:\n          knowledge-base: https://www.hubspot.com/products/service/knowledge-base\n      properties:\n        message:\n          description: A human readable message describing the error along with remediation\n            steps where appropriate\n          example: An error occurred\n          type: string\n        correlationId:\n          description: A unique identifier for the request. Include this value with\n            any error reports or support tickets\n          example: aeb5f871-7f07-4993-9211-075dc63e7cbf\n          format: uuid\n          type: string\n        category:\n          description: The error category\n          type: string\n        subCategory:\n          description: A specific category that contains more specific detail about\n            the error\n          type: string\n        errors:\n          description: further information about the error\n          items:\n            $ref: '#/components/schemas/ErrorDetail'\n          type: array\n        context:\n          additionalProperties:\n            items:\n              type: string\n            type: array\n          description: Context about the error condition\n          example:\n            invalidPropertyName:\n            - propertyValue\n            missingScopes:\n            - scope1\n            - scope2\n          type: object\n        links:\n          additionalProperties:\n            type: string\n          description: A map of link names to associated URIs containing documentation\n            about the error or recommended remediation steps\n          type: object\n      required:\n      - category\n      - correlationId\n      - message\n      type: object\n    ErrorDetail:\n      properties:\n        message:\n          description: A human readable message describing the error along with remediation\n            steps where appropriate\n          type: string\n        in:\n          description: The name of the field or parameter in which the error was found.\n          type: string\n        code:\n          description: The status code associated with the error detail\n          type: string\n        subCategory:\n          description: A specific category that contains more specific detail about\n            the error\n          type: string\n        context:\n          additionalProperties:\n            items:\n              type: string\n            type: array\n          description: Context about the error condition\n          example:\n            missingScopes:\n            - scope1\n            - scope2\n          type: object\n      required:\n      - message\n      type: object\n    EventIdView:\n      description: The ID of a send event.\n      example:\n        created: 2000-01-23T04:56:07.000+00:00\n        id: id\n      properties:\n        created:\n          description: Time of event creation.\n          format: date-time\n          type: string\n        id:\n          description: Identifier of event.\n          type: string\n      required:\n      - created\n      - id\n      type: object\n    NextPage:\n      example:\n        link: link\n        after: after\n      properties:\n        after:\n          type: string\n        link:\n          type: string\n      required:\n      - after\n      type: object\n    Paging:\n      example:\n        next:\n          link: link\n          after: after\n      properties:\n        next:\n          $ref: '#/components/schemas/NextPage'\n      type: object\n    PublicSingleSendEmail:\n      description: A JSON object containing anything you want to override.\n      example:\n        cc:\n        - cc\n        - cc\n        sendId: sendId\n        bcc:\n        - bcc\n        - bcc\n        replyTo:\n        - replyTo\n        - replyTo\n        from: from\n        to: to\n      properties:\n        from:\n          description: The From header for the email.\n          type: string\n        to:\n          description: The recipient of the email.\n          type: string\n        sendId:\n          description: ID for a particular send. No more than one email will be sent\n            per sendId.\n          type: string\n        replyTo:\n          description: List of Reply-To header values for the email.\n          items:\n            type: string\n          type: array\n        cc:\n          description: List of email addresses to send as Cc.\n          items:\n            type: string\n          type: array\n        bcc:\n          description: List of email addresses to send as Bcc.\n          items:\n            type: string\n          type: array\n      required:\n      - bcc\n      - cc\n      - replyTo\n      type: object\n    PublicSingleSendRequestEgg:\n      description: A request to send a single transactional email asynchronously.\n      example:\n        customProperties: '{}'\n        emailId: 0\n        message:\n          cc:\n          - cc\n          - cc\n          sendId: sendId\n          bcc:\n          - bcc\n          - bcc\n          replyTo:\n          - replyTo\n          - replyTo\n          from: from\n          to: to\n        contactProperties:\n          key: contactProperties\n      properties:\n        message:\n          $ref: '#/components/schemas/PublicSingleSendEmail'\n        contactProperties:\n          additionalProperties:\n            type: string\n          description: The contactProperties field is a map of contact property values.\n            Each contact property value contains a name and value property. Each property\n            will get set on the contact record and will be visible in the template\n            under {{ contact.NAME }}. Use these properties when you want to set a\n            contact property while you’re sending the email. For example, when sending\n            a reciept you may want to set a last_paid_date property, as the sending\n            of the receipt will have information about the last payment.\n          type: object\n        customProperties:\n          description: |-\n            The customProperties field is a map of property values. Each property value contains a name and value property. Each property will be visible in the template under {{ custom.NAME }}.\n            Note: Custom properties do not currently support arrays. To provide a listing in an email, one workaround is to build an HTML list (either with tables or ul) and specify it as a custom property.\n          properties: {}\n          type: object\n        emailId:\n          description: The content ID for the transactional email, which can be found\n            in email tool UI.\n          format: int32\n          type: integer\n      required:\n      - contactProperties\n      - customProperties\n      - emailId\n      - message\n      type: object\n    SmtpApiTokenRequestEgg:\n      description: A request object to create a SMTP API token\n      example:\n        createContact: true\n        campaignName: campaignName\n      properties:\n        createContact:\n          description: Indicates whether a contact should be created for recipients\n            of emails.\n          type: boolean\n        campaignName:\n          description: A name for the campaign tied to the SMTP API token.\n          type: string\n      required:\n      - campaignName\n      - createContact\n      type: object\n    SmtpApiTokenView:\n      description: A SMTP API token provides both an ID and password that can be used\n        to send email through the HubSpot SMTP API.\n      example:\n        createdAt: 2000-01-23T04:56:07.000+00:00\n        password: password\n        createdBy: createdBy\n        createContact: true\n        id: id\n        emailCampaignId: emailCampaignId\n        campaignName: campaignName\n      properties:\n        id:\n          description: User name to log into the HubSpot SMTP server.\n          type: string\n        createdBy:\n          description: Email address of the user that sent the token creation request.\n          type: string\n        password:\n          description: Password used to log into the HubSpot SMTP server.\n          type: string\n        emailCampaignId:\n          description: Identifier assigned to the campaign provided in the token creation\n            request.\n          type: string\n        createdAt:\n          description: Timestamp generated when a token is created.\n          format: date-time\n          type: string\n        createContact:\n          description: Indicates whether a contact should be created for recipients\n            of emails.\n          type: boolean\n        campaignName:\n          description: A name for the campaign tied to the token.\n          type: string\n      required:\n      - campaignName\n      - createContact\n      - createdAt\n      - createdBy\n      - emailCampaignId\n      - id\n      type: object\n  securitySchemes:\n    oauth2_legacy:\n      flows:\n        authorizationCode:\n          authorizationUrl: https://app.hubspot.com/oauth/authorize\n          scopes:\n            transactional-email: Transactional Emails\n          tokenUrl: https://api.hubapi.com/oauth/v1/token\n      type: oauth2\n    hapikey:\n      in: query\n      name: hapikey\n      type: apiKey\n",
			"canonicalURL": "/github.com/clarkmcc/go-hubspot@8c0e4f75dbeb3e9a84b11fb2d18ddc3e8b4c9e7e/-/blob/generated/transactional/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/clarkmcc/go-hubspot/blob/8c0e4f75dbeb3e9a84b11fb2d18ddc3e8b4c9e7e/generated/transactional/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/marketing/v3/transactional/single-email/send\": post: responses: default: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}