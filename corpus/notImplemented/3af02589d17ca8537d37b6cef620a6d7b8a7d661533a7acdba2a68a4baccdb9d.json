{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-apimanagement-apimloggers-2016-10-10-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-apimanagement-apimloggers-2016-10-10-swagger.yaml",
			"byteSize": 22180,
			"content": "openapi: 3.0.0\ninfo:\n  description: Use these REST APIs for performing operations on logger entity Azure API\n    Management deployment.The Logger entity in API Management represents an\n    event sink that you can use to log API Management events. Currently the\n    Logger entity supports logging API Management events to Azure EventHub.\n  title: ApiManagementClient\n  version: 2016-10-10\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2016-10-10/apimloggers.json\n      version: \"2.0\"\n  x-preferred: false\n  x-providerName: azure.com\n  x-serviceName: apimanagement-apimloggers\n  x-tags:\n    - Azure\n    - Microsoft\nsecurity:\n  - azure_auth:\n      - user_impersonation\npaths:\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers\":\n    get:\n      description: Lists a collection of loggers in the specified service instance.\n      externalDocs:\n        url: https://msdn.microsoft.com/en-us/library/azure/mt592020.aspx\n      operationId: Loggers_ListByService\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          x-ms-parameter-location: method\n          schema:\n            type: string\n        - description: The name of the API Management service.\n          in: path\n          name: serviceName\n          required: true\n          x-ms-parameter-location: method\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 50\n            pattern: ^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$\n        - description: \u003e-\n            | Field | Supported operators    | Supported\n            functions                         |\n\n            |-------|------------------------|---------------------------------------------|\n\n            | id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n\n            | type  | eq                     |                                             |\n          in: query\n          name: $filter\n          required: false\n          schema:\n            type: string\n        - description: Number of records to return.\n          in: query\n          name: $top\n          required: false\n          x-ms-parameter-location: method\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n        - description: Number of records to skip.\n          in: query\n          name: $skip\n          required: false\n          x-ms-parameter-location: method\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n        - description: Subscription credentials which uniquely identify Microsoft Azure\n            subscription. The subscription ID forms part of the URI for every\n            service call.\n          in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Lists a collection of Logger entities.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LoggerCollection\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - Loggers\n      x-ms-odata: \"#/components/schemas/LoggerResponse\"\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}\":\n    delete:\n      description: Deletes the specified logger.\n      operationId: Loggers_Delete\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          x-ms-parameter-location: method\n          schema:\n            type: string\n        - description: The name of the API Management service.\n          in: path\n          name: serviceName\n          required: true\n          x-ms-parameter-location: method\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 50\n            pattern: ^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$\n        - $ref: \"#/components/parameters/LoggerIdParameter\"\n        - description: The entity state (Etag) version of the logger to delete. A value of\n            \"*\" can be used for If-Match to unconditionally apply the operation.\n          in: header\n          name: If-Match\n          required: true\n          schema:\n            type: string\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n        - description: Subscription credentials which uniquely identify Microsoft Azure\n            subscription. The subscription ID forms part of the URI for every\n            service call.\n          in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The logger was successfully deleted.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - Loggers\n    get:\n      description: Gets the details of the logger specified by its identifier.\n      operationId: Loggers_Get\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          x-ms-parameter-location: method\n          schema:\n            type: string\n        - description: The name of the API Management service.\n          in: path\n          name: serviceName\n          required: true\n          x-ms-parameter-location: method\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 50\n            pattern: ^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$\n        - $ref: \"#/components/parameters/LoggerIdParameter\"\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n        - description: Subscription credentials which uniquely identify Microsoft Azure\n            subscription. The subscription ID forms part of the URI for every\n            service call.\n          in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The response body contains the specified Logger entity.\n          headers:\n            ETag:\n              description: Current entity state version. Should be treated as opaque and\n                used to make conditional HTTP requests.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LoggerResponse\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - Loggers\n    patch:\n      description: Updates an existing logger.\n      operationId: Loggers_Update\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          x-ms-parameter-location: method\n          schema:\n            type: string\n        - description: The name of the API Management service.\n          in: path\n          name: serviceName\n          required: true\n          x-ms-parameter-location: method\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 50\n            pattern: ^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$\n        - $ref: \"#/components/parameters/LoggerIdParameter\"\n        - description: The entity state (Etag) version of the logger to update. A value of\n            \"*\" can be used for If-Match to unconditionally apply the operation.\n          in: header\n          name: If-Match\n          required: true\n          schema:\n            type: string\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n        - description: Subscription credentials which uniquely identify Microsoft Azure\n            subscription. The subscription ID forms part of the URI for every\n            service call.\n          in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LoggerUpdateParameters\"\n        description: Update parameters.\n        required: true\n      responses:\n        \"204\":\n          description: The existing logger was successfully updated.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - Loggers\n    put:\n      description: Creates or Updates a logger.\n      operationId: Loggers_CreateOrUpdate\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          x-ms-parameter-location: method\n          schema:\n            type: string\n        - description: The name of the API Management service.\n          in: path\n          name: serviceName\n          required: true\n          x-ms-parameter-location: method\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 50\n            pattern: ^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$\n        - $ref: \"#/components/parameters/LoggerIdParameter\"\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n        - description: Subscription credentials which uniquely identify Microsoft Azure\n            subscription. The subscription ID forms part of the URI for every\n            service call.\n          in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LoggerCreateParameters\"\n        description: Create parameters.\n        required: true\n      responses:\n        \"201\":\n          description: Logger was successfully created.\n        \"204\":\n          description: The existing logger was successfully updated.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - Loggers\nservers:\n  - url: https://management.azure.com\ncomponents:\n  parameters:\n    LoggerIdParameter:\n      description: Logger identifier. Must be unique in the API Management service instance.\n      in: path\n      name: loggerid\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        maxLength: 256\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow.\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  schemas:\n    LoggerCollection:\n      description: Paged Logger list representation.\n      properties:\n        count:\n          description: Total record count number across all pages.\n          format: int64\n          type: integer\n        nextLink:\n          description: Next page link if any.\n          type: string\n        value:\n          description: Logger values.\n          items:\n            $ref: \"#/components/schemas/LoggerResponse\"\n          type: array\n    LoggerCreateParameters:\n      description: Parameters supplied to the Create Logger operation.\n      properties:\n        credentials:\n          additionalProperties:\n            type: string\n          description: The name and SendRule connection string of the event hub.\n          example:\n            connectionString: Endpoint=endpoint and key from Azure classic portal. This property\n              in credentials is must.\n            name: Event hub name. This is optional.\n          type: object\n        description:\n          description: Logger description.\n          type: string\n        isBuffered:\n          description: Whether records are buffered in the logger before publishing.\n            Default is assumed to be true.\n          type: boolean\n        type:\n          description: Logger type.\n          enum:\n            - AzureEventHub\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: LoggerTypeContract\n      required:\n        - type\n        - credentials\n    LoggerResponse:\n      description: The Logger entity in API Management represents an event sink that you\n        can use to log API Management events. Currently the Logger entity\n        supports logging API Management events to Azure Event Hubs.\n      properties:\n        credentials:\n          additionalProperties:\n            type: string\n          description: The name and SendRule connection string of the event hub.\n          example:\n            connectionString: Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...\n            name: apim\n          type: object\n        description:\n          description: Logger description.\n          maxLength: 256\n          type: string\n        id:\n          description: Uniquely identifies the logger within the current API Management\n            service instance. The value is a valid relative URL in the format of\n            /loggers/{loggerId} where {loggerId} is a logger identifier.\n          readOnly: true\n          type: string\n        isBuffered:\n          default: true\n          description: Whether records are buffered in the logger before publishing.\n            Default is assumed to be true.\n          type: boolean\n        type:\n          description: Logger type.\n          enum:\n            - AzureEventHub\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: LoggerTypeContract\n      required:\n        - type\n        - credentials\n    LoggerUpdateParameters:\n      description: Parameters supplied to the Update Logger operation.\n      properties:\n        credentials:\n          additionalProperties:\n            type: string\n          description: Logger credentials.\n          type: object\n        description:\n          description: Logger description.\n          type: string\n        isBuffered:\n          description: whether records are buffered in the logger before publishing.\n            Default is assumed to be true.\n          type: boolean\n        type:\n          description: Logger type.\n          enum:\n            - AzureEventHub\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: LoggerTypeContract\n      required:\n        - type\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-apimanagement-apimloggers-2016-10-10-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-apimanagement-apimloggers-2016-10-10-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers\": get: security: security \"azure_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}