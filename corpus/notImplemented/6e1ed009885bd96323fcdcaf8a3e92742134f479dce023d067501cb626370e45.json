{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Tufin/oasdiff"
		},
		"file": {
			"name": "openapi-test1.yaml",
			"size": 0,
			"path": "data/openapi-test1.yaml",
			"byteSize": 8202,
			"content": "info:\n  title: Tufin\n  version: 1.0.0\nopenapi: 3.0.3\nx-extension-test: \nx-extension-test2: go \nexternalDocs:\n  url: https://tufin.com\ntags:\n- name: security\n  description: control security\n  x-extension-test: \n- name: reuven\n  description: Harrison\nservers: \n- url: tufin.com\n  x-extension-test: \nsecurity:\n- bearerAuth: []\npaths:\n  /api/{domain}/{project}/badges/security-score:\n    x-extension-test: \n    parameters:\n    - in: path\n      name: domain\n      required: true\n      schema:\n        description: Hyphen-separated list of lowercase string\n        example: generic-bank\n        format: hyphen-separated list\n        pattern: ^(?:([a-z]+-)*([a-z]+)?)$\n        type: string\n    get:\n      operationId: GetSecurityScores\n      x-extension-test: \n      x-beta: true\n      tags:\n        - security\n      parameters:\n      - in: query\n        name: filter\n        x-extension-test: \n        content:\n          application/json:\n            x-extension-test: \n            schema:\n              type: object\n              properties:\n                type:\n                  type: string\n                color:\n                  type: string\n      - in: header\n        name: user\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n      - in: cookie\n        name: test\n        content:\n          application/json:\n            schema:\n              type: object\n      - in: query\n        name: image\n        examples:\n          0:\n            value: 'reuven'\n        schema:\n          x-extension-test:\n          description: alphanumeric \n          example: tufinim/generic-bank:cia-latest\n          format: general string\n          pattern: ^(?:[\\w-./:]+)$\n          type: string\n      - in: query\n        name: token\n        schema:\n          description: RFC 4122 UUID\n          example: 26734565-dbcc-449a-a370-0beaaf04b0e8\n          format: uuid\n          pattern: ^(?:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12})$\n          type: string\n          maxLength: 29\n      - in: header\n        name: X-Auth-Name\n        required: true\n        schema:\n          description: empty string\n          format: empty string\n          pattern: ^(?:)$\n          type: string\n      - in: path\n        name: domain\n        required: true\n        schema:\n          description: Hyphen-separated list of lowercase string\n          example: generic-bank\n          format: hyphen-separated list\n          pattern: ^(?:([a-z]+-)*([a-z]+)?)$\n          type: string\n      - in: path\n        name: project\n        required: true\n        schema:\n          description: Lowercase string\n          example: retail\n          format: lowercase string\n          pattern: ^(?:[a-z]+)$\n          type: string\n      responses:\n        '200':\n          description: OK\n        '201':\n          description: none\n          content:\n            application/xml:\n              schema:\n                type: string\n      servers: []\n  /api/{domain}/{project}/install-command:\n    get:\n      parameters:\n      - in: header\n        name: X-Auth-Name\n        required: true\n        schema:\n          description: any string\n          example: Joe\n          format: any string\n          pattern: ^(?:.*)$\n          type: string\n      - in: path\n        name: domain\n        required: true\n        schema:\n          enum:\n          - generic-bank\n          - tufin\n          type: string\n      - in: path\n        name: project\n        required: true\n        schema:\n          enum:\n          - retail\n          - my-project\n          - test\n          - eks\n          type: string\n      - in: header\n        name: network-policies\n        schema: \n          $ref: '#/components/schemas/network-policies'\n      responses:\n        default:\n          description: Tufin1\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per hour.\n      servers: []\n  /subscribe:\n    post:\n      summary: Subscribe to a webhook\n      callbacks:   # Callback definition\n        myEvent:   # Event name\n          'hi':\n            post:\n              requestBody:   # Contents of the callback message\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      type: object\n                      properties:\n                        message:\n                          type: number\n                          example: Some event happened\n                      required:\n                        - message\n                    encoding:\n                      historyMetadata:\n                        # require XML Content-Type in utf-8 encoding\n                        contentType: application/xml; charset=utf-8\n                        style: spaceDelimited\n                      profileImage:\n                        # only accept png/jpeg\n                        contentType: image/png, image/jpeg\n                        headers:\n                          i:\n                            schema:\n                              type: integer\n                            description: integer\n              responses:   # Expected responses to the callback message\n                '200':\n                  description: Your server returns this code if it accepts the callback\n                  links:\n                    \"test\":\n                      operationId: \"reuven\"\n                      description: \"test\"\n                    \"test1\":\n                      operationId: \"reuven\"\n                      description: \"test\"\n                    \"test2\":\n                      operationId: \"GetSecurityScores\"\n                    \n          'bye':\n            post:\n              requestBody:   # Contents of the callback message\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      type: object          \n              responses:   # Expected responses to the callback message\n                '200':\n                  description: Your server returns this code if it accepts the callback\n      responses:\n        default:\n          description: Tufin\n  /register:\n    post:\n      security:\n      - bearerAuth: []\n      - OAuth: []\n      summary: Subscribe to a webhook\n      responses:\n        default:\n          description: Tufin\ncomponents:\n  schemas:\n    network-policies:\n      additionalProperties: true\n      properties:\n        netpols:\n          type: string\n      type: object\n    rules:\n      properties:\n        netpols:\n          type: string\n      type: object      \n  parameters:\n      network-policies:\n        name: network-policies\n        in: header\n        schema: \n          $ref: '#/components/schemas/network-policies'\n  headers:\n    test:\n      schema: \n        $ref: '#/components/schemas/network-policies'\n    new:\n      schema: \n        $ref: '#/components/schemas/network-policies'\n    testc:\n      content: \n        application/json:\n          schema:\n            type: object\n  requestBodies:\n      reuven:\n        content:\n          application/json:\n            schema:\n              type: object\n              discriminator:\n                propertyName: meter_name\n              properties: \n                meter_name:\n                    type: string\n                tenant:\n                  type: string\n                meter_value:\n                  type: number\n                time:\n                  type: integer\n                dimensions:\n                  type: object\n  securitySchemes:\n    bearerAuth:      \n      type: http\n      scheme: bearer\n      bearerFormat: JWT \n    AccessToken:\n      type: http\n      scheme: bearer\n    OAuth:\n      x-extension-test: \n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://tufin.io/auth\n          tokenUrl: https://tufin.io/token\n          scopes:\n            accountRead: Allows account data to be read\n            accountWrite: Allows account data to be written      \n  responses:\n    OK:\n      description: 200 OK\n",
			"canonicalURL": "/github.com/Tufin/oasdiff@873ae63bce3d9b288efee7abebb8fdc476e4a0aa/-/blob/data/openapi-test1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Tufin/oasdiff/blob/873ae63bce3d9b288efee7abebb8fdc476e4a0aa/data/openapi-test1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/register\": post: security: security \"OAuth\" (index 1): oauth2 security not implemented",
	"NotImplemented": [
		"cookie params",
		"oauth2 security",
		"object with additionalProperties",
		"unsupported content types"
	]
}