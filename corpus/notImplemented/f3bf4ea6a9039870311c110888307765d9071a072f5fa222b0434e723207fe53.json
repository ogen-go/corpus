{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eikek/docspell"
		},
		"file": {
			"name": "joex-openapi.yml",
			"size": 0,
			"path": "modules/joexapi/src/main/resources/joex-openapi.yml",
			"byteSize": 6826,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: Docspell JOEX\n  version: 0.38.0-SNAPSHOT\n  description: |\n    This is the remote API to the job executor component of Docspell.\n    Docspell is a free document management system focused on small\n    groups or families.\n\n    The routes are not protected by the application. This api is meant\n    to be used by the server component of Docspell.\n  license:\n    name: AGPLv3\n    url: https://spdx.org/licenses/AGPL-3.0-or-later.html\n\nservers:\n  - url: /api/v1\n    description: Current host\n\npaths:\n  /api/info/version:\n    get:\n      operationId: \"info-version\"\n      tags: [ Api Info ]\n      summary: Get basic information about this software.\n      description: |\n        Returns the version and project name and other properties of the build.\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VersionInfo\"\n  /notify:\n    post:\n      operationId: \"v1-notify\"\n      tags: [ Job Executor ]\n      summary: Notify the job executor.\n      description: |\n        Notifies the job executor to wake up and look for jobs in th queue.\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n  /running:\n    get:\n      operationId: \"v1-running\"\n      tags: [ Job Executor ]\n      summary: Get a list of currently executing jobs.\n      description: |\n        Returns all jobs this executor is currently executing.\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobList\"\n  /shutdownAndExit:\n    post:\n      operationId: \"v1-shutdown-and-exit\"\n      tags: [ Job Executor ]\n      summary: Stops this component and exits.\n      description: |\n        Gracefully stops the scheduler and also stops the process.\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n  /job/{id}:\n    get:\n      operationId: \"v1-job-by-id\"\n      tags: [ Current Jobs ]\n      summary: Get a job by its id.\n      description: |\n        Returns details about a job given the id.\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobAndLog\"\n  /job/{id}/cancel:\n    post:\n      operationId: \"v1-job-cancel\"\n      tags: [ Current Jobs ]\n      summary: Request to cancel a running job.\n      description: |\n        Requests to cancel the running job. This will try to cancel\n        the execution but it is not guaranteed that it can immediately\n        abort. The job is then removed from the queue.\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n  /addon/config:\n    get:\n      operationId: \"v1-addon-config-get\"\n      tags: [ Addons ]\n      summary: What is supported running addons\n      description: |\n        Return what this joex supports when executing addons.\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddonSupport\"\n\ncomponents:\n  schemas:\n    AddonSupport:\n      description: |\n        How this joex supports executing addons.\n      required:\n        - nodeId\n        - runners\n      properties:\n        nodeId:\n          type: string\n          format: ident\n        runners:\n          type: array\n          items:\n            type: string\n            format: addon-runner-type\n            enum:\n              - nix-flake\n              - docker\n              - trivial\n\n    JobAndLog:\n      description: |\n        Some more details about the job.\n      required:\n        - job\n        - logs\n      properties:\n        job:\n          $ref: \"#/components/schemas/Job\"\n        logs:\n          type: array\n          items:\n            $ref: \"#/components/schemas/JobLogEvent\"\n    JobLogEvent:\n      description: |\n        A log output line.\n      required:\n        - time\n        - level\n        - message\n      properties:\n        time:\n          description: DateTime\n          type: integer\n          format: date-time\n        level:\n          type: string\n          format: loglevel\n        message:\n          type: string\n    JobList:\n      description: |\n        A list of jobs.\n      required:\n        - items\n      properties:\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Job\"\n    Job:\n      description: |\n        Data about a running job.\n      required:\n        - id\n        - name\n        - submitted\n        - priority\n        - retries\n        - progress\n        - started\n      properties:\n        id:\n          type: string\n          format: ident\n        name:\n          type: string\n        submitted:\n          description: DateTime\n          type: integer\n          format: date-time\n        priority:\n          type: integer\n          format: priority\n        retries:\n          type: integer\n          format: int32\n        progress:\n          type: integer\n          format: int32\n        started:\n          description: DateTime\n          type: integer\n          format: date-time\n    VersionInfo:\n      description: |\n        Information about the software.\n      required:\n        - version\n        - builtAtMillis\n        - builtAtString\n        - gitCommit\n        - gitVersion\n      properties:\n        version:\n          type: string\n        builtAtMillis:\n          type: integer\n          format: int64\n        builtAtString:\n          type: string\n        gitCommit:\n          type: string\n        gitVersion:\n          type: string\n    BasicResult:\n      description: |\n        Some basic result of an operation.\n      required:\n        - success\n        - message\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n  parameters:\n    id:\n      name: id\n      in: path\n      description: An identifier\n      required: true\n      schema:\n        type: string\n",
			"canonicalURL": "/github.com/eikek/docspell@58061333da979baae981445dc77341eb42e895e0/-/blob/modules/joexapi/src/main/resources/joex-openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/eikek/docspell/blob/58061333da979baae981445dc77341eb42e895e0/modules/joexapi/src/main/resources/joex-openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/addon/config\": get: responses: 200: contents: application/json: generate schema: field runners: item: primitive: format \"addon-runner-type\": enum format not implemented",
	"NotImplemented": [
		"enum format"
	]
}