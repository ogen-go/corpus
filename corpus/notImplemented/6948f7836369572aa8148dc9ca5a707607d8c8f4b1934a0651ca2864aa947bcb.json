{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenShipping/openshipping.github.io"
		},
		"file": {
			"name": "tracking-api.yaml",
			"size": 0,
			"path": "tracking-api/tracking-api.yaml",
			"byteSize": 11000,
			"content": "openapi: 3.0.0\ninfo:\n  version: \"1.0.2\"\n  title: Openshipping - Get Tracking API\n  description: API providing tracking data\n  contact:\n    name: openshipping.org\ntags:\n  - name: Consignment\n    description: Provides tracking data of consignment. \n  - name: Transport Equipment\n    description: Provides tracking data of an equipment during its last commercial cycle.\npaths:\n  /consignments/{consignmentRef}:\n    get:\n      tags:\n        - Consignment\n      parameters:\n        - name: consignmentRef\n          in: path\n          description: Consignment identifier (booking number or bill of lading number).\n          required: true\n          schema:\n            type: string\n        - name: eventFilter\n          in: query\n          description: All events or latest events (latest is default)\n          required: false\n          schema:\n            type: string\n      responses: \n        '200':\n          description: Returned Consignment\n          content: \n            application/json: \n              schema: \n                $ref: '#/components/schemas/Consignment'\n        '404':\n          description: Consignment not found\n  /transportEquipment/{equipmentNumber}:\n    get:\n      tags:\n        - Transport Equipment\n      parameters:\n        - name: equipmentNumber\n          in: path\n          description: BIC container identifier\n          required: true\n          schema:\n            type: string\n        - name: eventFilter\n          in: query\n          description: All events or latest events (latest is default)\n          required: false\n          schema:\n            type: string\n      responses: \n        '200':\n          description: Returned TransportEquipment\n          content: \n            application/json: \n              schema: \n                $ref: '#/components/schemas/TransportEquipment'\n        '404':\n          description: TransportEquipment not found\ncomponents:\n  schemas:\n    Consignment:\n      type: object\n      required:\n        - consignmentRef\n      properties:\n        consignmentRef:\n          type: string\n          description: The unique identification of the Consignment, issued by the carrier. It is recommended that this is either the carrier booking number or bill of lading number. Please refer to UN/EDIFACT's \"BN\" and \"BL\" codes (\"BN\" defined as Consignment identifier, carrier assigned [1016] Reference number assigned by a carrier of its agent to identify a specific consignment such as a booking reference number when cargo space is reserved prior to loading. (http://www.unece.org/fileadmin/DAM/trade/untdid/d16b/tred/tred1153.htm)\n        milestoneEvents:\n          description: Transport plan of the consignment\n          type: array\n          items:\n            $ref: '#/components/schemas/PlannedMilestoneEvent'\n        genericEvents:\n          description: Generic events for the Consignment\n          type: array\n          items:\n            $ref: '#/components/schemas/PlannedEvent'\n        transportEquipment:\n          description: List of the TransportEquipment allocated to this Consignment\n          type: array\n          items:\n            $ref: '#/components/schemas/TransportEquipment'\n        \n    TransportEquipment:\n      type: object\n      properties: \n        consignmentRef:\n          type: string\n          description: Only provided if the requestor is logged in as a valid party to the consignment. Not provided in the Consignment responses, as it is redundant.\n        equipmentNumber:\n          description: The ISO 6346 goverend number, physically printed on the equipment. This represents UN/EDIFACT's \"EQ\" code. Number assigned by the manufacturer to specific equipment. (http://www.unece.org/fileadmin/DAM/trade/untdid/d16b/tred/tred1153.htm)\n          type: string\n          example: MRSU3395549\n        milestoneEvents:\n          description: Estimated events for the Transport Equipment\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/EstimatedMilestoneEvent'\n              - $ref: '#/components/schemas/ActualMilestoneEvent'\n        smartEvents:\n          description: Smart events for the Transport Equipment\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/EstimatedSmartEvent'              \n              - $ref: '#/components/schemas/ActualSmartEvent'\n        genericEvents:\n          description: Generic events for the Transport Equipment\n          type: array\n          items:\n            description: Generic event for the Transport Equipment\n            oneOf:\n              - $ref: '#/components/schemas/EstimatedEvent'\n              - $ref: '#/components/schemas/ActualEvent'\n\n    Event:\n      type: object\n      required:\n        - eventTime\n      properties:\n        originatorId:\n          type: string\n          description: SCAC code of the organization that published this event\n        eventNature:\n          type: string\n          description: 'Indicates if the event is ''Planned'', ''Estimated'' or ''Actual'' '\n          example: Estimated\n        eventTime:\n          type: string\n          format: date-time\n          description: Time of the event occurrance, in ISO 8601 format yyyy-MM-dd'T'hh:mm:ss.sssÂ±hh:mm\n          example: '2018-06-22T06:20:30.000-01:00'\n        eventCodeType:\n          type: string\n          description: 'This can link to coded event standards, such as ''EDIFACT'' or ''CEFACT Recommendation 24''.'\n          example: 'CEFACT Recommendation 24'\n        eventCodeValue:\n          type: string\n          description: 'The code as per the codification scheme.'\n          example: 359\n        eventCodeDescription:\n          type: string\n          description: 'Description as per the codeification scheme.'\n          example: 'Bill of Lading issued'\n\n    PlannedEvent:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/Event'\n      properties:\n        planRef:\n          type: string\n          description: Common reference used across a set of planned events, in order to associate them to the same plan.\n\n    EstimatedEvent:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/Event'\n      properties:\n        gpsLocation:\n          description: 'GPS coordinates [latitude,longitude]'\n          example: 55.702248, 12.600225\n          type: array\n          items:\n            type: number\n            minItems: 2\n            maxItems: 2\n    ActualEvent:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/Event'\n      properties:\n        gpsLocation:\n          description: 'GPS coordinates [latitude,longitude]'\n          example: 55.702248, 12.600225\n          type: array\n          items:\n            type: number\n            minItems: 2\n            maxItems: 2\n\n    PlannedMilestoneEvent:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/PlannedEvent'\n        - $ref: '#/components/schemas/MilestoneEventData'\n\n    EstimatedMilestoneEvent:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EstimatedEvent'\n        - $ref: '#/components/schemas/MilestoneEventData'\n\n    ActualMilestoneEvent:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/ActualEvent'\n        - $ref: '#/components/schemas/MilestoneEventData'\n\n    MilestoneEventData:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/TransportMovement'\n        - $ref: '#/components/schemas/TransportMeans'\n      properties:\n        location:\n          type: string\n          description: The UN/LOCODE where the event occured.\n          example: AUSYD\n        terminal:\n          type: string\n          description: SMDG code of the terminal where the event took place. The SMDG code must be denoted with a dash \"-\" between the UN/LOCODE and the Terminal code. Note that the UN/LOCODE provided as part of the terminal's SMDG code will in most cases be the same provided in the location attribute but can deviate, thus please always provide the full SMDG code\n          example: USMOB-APMT\n        transportationPhase:\n          description: The transportation phase\n          type: string\n          enum:\n            - Import\n            - Export\n            - Transshipment\n          example: Import\n        fullStatus:\n          type: string\n          description: Indication of whether the container is full or empty\n          enum:\n            - Full\n            - Empty\n          example: Full\n\n    TransportMeans:\n      description: 'The devices used to convey goods or other objects from place to place during logistics cargo movements.'\n      type: object\n      properties:\n        vehicleId:\n          type: string\n          description: Identification of the means of transport. Use IMO numbers for vessels and barges\n          example: 9337262\n        vehicleType:\n          type: string\n          description: 'Vehicle type: Truck, Vessel, Rail, Barge, Air'\n\n    TransportMovement:\n      description: 'The conveyance (physical carriage) of goods or other objects used for logistics transport purposes.'\n      type: object\n      properties:\n        transportReference:\n          type: integer\n          description: A transport reference like Transport Order, Visit number (sequence in the tour for rail transportation), or Voyage number for vessels.\n\n    ActualSmartEvent:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/ActualEvent'\n        - $ref: '#/components/schemas/SmartEventData'\n      required:\n        - gpsLocation\n    EstimatedSmartEvent:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EstimatedEvent'\n        - $ref: '#/components/schemas/SmartEventData'\n      required:\n        - gpsLocation\n    SmartEventData:\n      type: object\n      properties:\n        metaData:\n          $ref: '#/components/schemas/MetaData'\n        eventDetail:\n          type: object\n          description : 'A smart event can contain detail data. Data providers should agree on a common definition of the details of each smart event. See external link: https://app.swaggerhub.com/apis/API-Factory/Smart_Event_Catalog/0.0.3'\n      required:\n        - metaData\n\n    MetaData:\n      type: object\n      description: metadata related to smart events\n      properties:\n        assetId:\n          type: string\n          description: 'Container number: 4 letters + 7 digits written on the container, defined by BIC'\n        assetType:\n          type: string\n          description: 'Asset type. For instance, ''DRY'' or ''Refeer'' '\n        deviceId:\n          type: string\n          description: Id of the IOT device used for asset tracking\n        generationTimestamp:\n          type: string\n          format: date-time\n          description: Generation timestamp of the event, in ISO 8601 format yyyy-MM-dd'T'hh:mm:ss.sssÂ±hh:mm\n        software:\n          type: string\n          description: Software used for posting event\n        softwareVersion:\n          type: string\n          description: Software version",
			"canonicalURL": "/github.com/OpenShipping/openshipping.github.io@a47f473ad5dbde74c80672c0801bf364a2435769/-/blob/tracking-api/tracking-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OpenShipping/openshipping.github.io/blob/a47f473ad5dbde74c80672c0801bf364a2435769/tracking-api/tracking-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/consignments/{consignmentRef}\": get: responses: 200: contents: application/json: generate schema: field milestoneEvents: item: allOf: complex schema merging not implemented",
	"NotImplemented": [
		"complex schema merging",
		"sum types with same names"
	]
}