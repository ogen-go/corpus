{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dunglas/mercure"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "spec/openapi.yaml",
			"byteSize": 7345,
			"content": "openapi: 3.0.2\ninfo:\n  title: The Mercure protocol\n  description: \"[Mercure](https://mercure.rocks) is a protocol allowing to push data updates to web browsers and other HTTP clients in a convenient, fast, reliable and battery-efficient way.\"\n  version: 0.3.2\n  contact:\n    name: KÃ©vin Dunglas\n    url: https://mercure.rocks\n    email: contact@mercure.rocks\n  license:\n    name: GNU Affero General Public License v3.0 or later\n    url: https://github.com/dunglas/mercure/blob/master/LICENSE\n    x-spdx: AGPL-3.0-or-later\npaths:\n  \"/.well-known/mercure\":\n    get:\n      summary: Subscribe to updates\n      externalDocs:\n        description: Subscription specification\n        url: https://mercure.rocks/spec#subscription\n      parameters:\n        - name: topic\n          in: query\n          description: The topic to get updates from, can be a URI template (RFC6570).\n          required: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: Last-Event-ID\n          in: query\n          description: The last received event id, to retrieve missed events.\n          schema:\n            type: string\n        - name: Last-Event-ID\n          in: header\n          description: The last received event id, to retrieve missed events, takes precedence over the query parameter.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Event stream opened.\n          content:\n            \"text/event-stream\": {}\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"400\":\n          description: Missing topic parameter or invalid URI template.\n    post:\n      summary: Publish an update\n      externalDocs:\n        description: Publishing specification\n        url: https://mercure.rocks/spec#publication\n      requestBody:\n        content:\n          \"application/x-www-form-urlencoded\":\n            schema:\n              properties:\n                  topic: \n                    description: IRIs of the updated topic. If this key is present several times, the first occurrence is considered to be the canonical URL of the topic, and other ones are considered to be alternate URLs.\n                    type: array\n                    items:\n                      type: string\n                  data:\n                    description: The content of the new version of this topic.\n                    type: string\n                  private:\n                    description: To mark an update as private. If not provided, this update will be public.\n                    type: boolean\n                  id:\n                    description: \"The topic's revision identifier: it will be used as the SSE's `id` property.\"\n                    type: string\n                  type:\n                    description: The SSE's `event` property (a specific event type).\n                    type: string\n                  retry:\n                    description: The SSE's `retry` property (the reconnection time).\n                    type: integer\n              required:\n                - topic\n                - data\n      responses:\n        \"200\":\n          description: The id of this update\n          content:\n            \"text/plain\": {}\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        '400':\n          description: Invalid request\n  \"/.well-known/mercure/subscriptions\":\n    get:\n      summary: Active subscriptions\n      externalDocs:\n        description: Subscription API\n        url: https://mercure.rocks/spec#subscription-api\n      responses:\n        \"200\":\n          description: The list of active subscriptions\n          content:\n            \"application/ld+json\":\n              schema:\n                $ref: \"#/components/schemas/Subscriptions\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n  \"/.well-known/mercure/subscriptions/{topic}\":\n    get:\n      summary: Active subscriptions for the given topic\n      externalDocs:\n        description: Subscription API\n        url: https://mercure.rocks/spec#subscription-api\n      parameters:\n        - in: path\n          name: topic\n          schema:\n            type: string\n          required: true\n      responses:\n        \"200\":\n          description: The list of active subscriptions\n          content:\n            \"application/ld+json\":\n              schema:\n                $ref: \"#/components/schemas/Subscriptions\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n  \"/.well-known/mercure/subscriptions/{topic}/{subscriber}\":\n    get:\n      summary: Active subscription for the given topic and subscriber\n      externalDocs:\n        description: Subscription API\n        url: https://mercure.rocks/spec#active-subscriptions\n      parameters:\n        - in: path\n          name: topic\n          schema:\n            type: string\n          required: true\n        - in: path\n          name: subscriber\n          schema:\n            type: string\n          required: true\n      responses:\n        \"200\":\n          description: The list of active subscriptions\n          content:\n            \"application/ld+json\":\n              schema:\n                $ref: \"#/components/schemas/Subscriptions\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\ncomponents:\n  schemas:\n    Subscriptions:\n      type: object\n      required: [\"@context\", \"id\", \"type\", \"lastEventID\", \"subscriptions\"]\n      properties:\n        \"@context\":\n          type: string\n          format: iri\n          example: https://mercure.rocks/\n        id:\n          type: string\n          format: iri-reference\n          example: /.well-known/mercure/subscriptions\n        type:\n          type: string\n          format: iri-reference\n          example: Subscriptions\n        lastEventID:\n          type: string\n          example: urn:uuid:5e94c686-2c0b-4f9b-958c-92ccc3bbb4eb\n        subscriptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Subscription'\n    Subscription:\n      type: object\n      required: [\"id\", \"type\", \"topic\", \"subscriber\", \"active\"]\n      properties:\n        \"@context\":\n          type: string\n          format: iri\n          example: https://mercure.rocks/\n        id:\n          type: string\n          format: iri-reference\n          example: /.well-known/mercure/subscriptions\n        type:\n          type: string\n          format: iri-reference\n          example: Subscription\n        topic:\n          type: string\n          example: https://example.com/{selector}\n        subscriber:\n          type: string\n          example: urn:uuid:bb3de268-05b0-4c65-b44e-8f9acefc29d6\n        active:\n          type: boolean\n        payload:\n          type: object\n        lastEventID:\n          type: string\n          example: urn:uuid:5e94c686-2c0b-4f9b-958c-92ccc3bbb4eb\n  responses:\n    \"401\":\n      description: Not authorized (missing or invalid JWT).\n  securitySchemes:\n    Bearer:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n      description: Preferred for server to server\n    Cookie:\n      type: apiKey\n      in: cookie\n      name: mercureAuthorization\n      description: Preferred for web browsers (the cookie name may change depending on the configuration)\nsecurity:\n  - Bearer: []\n  - Cookie: []\nexternalDocs:\n  description: The Mercure protocol specification\n  url: https://mercure.rocks/spec\n",
			"canonicalURL": "/github.com/dunglas/mercure@9819d2dd23b9287d0772dfb80a216b31a21c7cba/-/blob/spec/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dunglas/mercure/blob/9819d2dd23b9287d0772dfb80a216b31a21c7cba/spec/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/.well-known/mercure\": get: responses: 200: contents: unsupported content types: [text/event-stream]",
	"NotImplemented": [
		"unsupported content types"
	]
}