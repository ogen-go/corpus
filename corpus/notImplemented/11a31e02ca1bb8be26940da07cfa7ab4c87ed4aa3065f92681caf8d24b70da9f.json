{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "firebasehosting-v1beta1.yaml",
			"size": 0,
			"path": "providers/src/googleapis.com/v0.1.2/services/firebasehosting-v1beta1.yaml",
			"byteSize": 67454,
			"content": "components:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n        - '1'\n        - '2'\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n        - json\n        - media\n        - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you\n        with API access, quota, and reports. Required unless you provide an OAuth\n        2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications.\n        Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    ActingUser:\n      description: Contains metadata about the user who performed an action, such\n        as creating a release or finalizing a version.\n      properties:\n        email:\n          description: The email address of the user when the user performed the action.\n          type: string\n        imageUrl:\n          description: A profile image URL for the user. May not be present if the\n            user has changed their email address or deleted their account.\n          type: string\n      type: object\n    CertDnsChallenge:\n      description: Represents a DNS certificate challenge.\n      properties:\n        domainName:\n          description: The domain name upon which the DNS challenge must be satisfied.\n          type: string\n        token:\n          description: The value that must be present as a TXT record on the domain\n            name to satisfy the challenge.\n          type: string\n      type: object\n    CertHttpChallenge:\n      description: Represents an HTTP certificate challenge.\n      properties:\n        path:\n          description: The URL path on which to serve the specified token to satisfy\n            the certificate challenge.\n          type: string\n        token:\n          description: The token to serve at the specified URL path to satisfy the\n            certificate challenge.\n          type: string\n      type: object\n    Channel:\n      description: A `Channel` represents a stream of releases for a site. All sites\n        have a default `live` channel that serves content to the Firebase-provided\n        subdomains and any connected custom domains.\n      properties:\n        createTime:\n          description: Output only. The time at which the channel was created.\n          format: google-datetime\n          readOnly: true\n          type: string\n        expireTime:\n          description: The time at which the channel will be automatically deleted.\n            If null, the channel will not be automatically deleted. This field is\n            present in the output whether it's set directly or via the `ttl` field.\n          format: google-datetime\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: Text labels used for extra metadata and/or filtering.\n          type: object\n        name:\n          description: 'The fully-qualified resource name for the channel, in the\n            format: sites/ SITE_ID/channels/CHANNEL_ID'\n          type: string\n        release:\n          $ref: '#/components/schemas/Release'\n          description: Output only. The current release for the channel, if any.\n          readOnly: true\n        retainedReleaseCount:\n          description: The number of previous releases to retain on the channel for\n            rollback or other purposes. Must be a number between 1-100. Defaults to\n            10 for new channels.\n          format: int32\n          type: integer\n        ttl:\n          description: Input only. A time-to-live for this channel. Sets `expire_time`\n            to the provided duration past the time of the request.\n          format: google-duration\n          type: string\n        updateTime:\n          description: Output only. The time at which the channel was last updated.\n          format: google-datetime\n          readOnly: true\n          type: string\n        url:\n          description: Output only. The URL at which the content of this channel's\n            current release can be viewed. This URL is a Firebase-provided subdomain\n            of `web.app`. The content of this channel's current release can also be\n            viewed at the Firebase-provided subdomain of `firebaseapp.com`. If this\n            channel is the `live` channel for the Hosting site, then the content of\n            this channel's current release can also be viewed at any connected custom\n            domains.\n          readOnly: true\n          type: string\n      type: object\n    CloneVersionRequest:\n      properties:\n        exclude:\n          $ref: '#/components/schemas/PathFilter'\n          description: If provided, only paths that do not match any of the RegEx\n            values in this list will be included in the new version.\n        finalize:\n          description: If true, the call to `CloneVersion` immediately finalizes the\n            version after cloning is complete. If false, the cloned version will have\n            a status of `CREATED`. Use [`UpdateVersion`](patch) to set the status\n            of the version to `FINALIZED`.\n          type: boolean\n        include:\n          $ref: '#/components/schemas/PathFilter'\n          description: If provided, only paths that match one or more RegEx values\n            in this list will be included in the new version.\n        sourceVersion:\n          description: 'Required. The unique identifier for the version to be cloned,\n            in the format: sites/SITE_ID/versions/VERSION_ID'\n          type: string\n      type: object\n    CloudRunRewrite:\n      description: A configured rewrite that directs requests to a Cloud Run service.\n        If the Cloud Run service does not exist when setting or updating your Firebase\n        Hosting configuration, then the request fails. Any errors from the Cloud Run\n        service are passed to the end user (for example, if you delete a service,\n        any requests directed to that service receive a `404` error).\n      properties:\n        region:\n          description: Optional. User-provided region where the Cloud Run service\n            is hosted. Defaults to `us-central1` if not supplied.\n          type: string\n        serviceId:\n          description: Required. User-defined ID of the Cloud Run service.\n          type: string\n      type: object\n    Domain:\n      description: The intended behavior and status information of a domain.\n      properties:\n        domainName:\n          description: Required. The domain name of the association.\n          type: string\n        domainRedirect:\n          $ref: '#/components/schemas/DomainRedirect'\n          description: If set, the domain should redirect with the provided parameters.\n        provisioning:\n          $ref: '#/components/schemas/DomainProvisioning'\n          description: Output only. Information about the provisioning of certificates\n            and the health of the DNS resolution for the domain.\n        site:\n          description: Required. The site name of the association.\n          type: string\n        status:\n          description: Output only. Additional status of the domain association.\n          enum:\n          - DOMAIN_STATUS_UNSPECIFIED\n          - DOMAIN_CHANGE_PENDING\n          - DOMAIN_ACTIVE\n          - DOMAIN_VERIFICATION_REQUIRED\n          - DOMAIN_VERIFICATION_LOST\n          type: string\n        updateTime:\n          description: Output only. The time at which the domain was last updated.\n          format: google-datetime\n          type: string\n      type: object\n    DomainProvisioning:\n      description: The current certificate provisioning status information for a domain.\n      properties:\n        certChallengeDiscoveredTxt:\n          description: The TXT records (for the certificate challenge) that were found\n            at the last DNS fetch.\n          items:\n            type: string\n          type: array\n        certChallengeDns:\n          $ref: '#/components/schemas/CertDnsChallenge'\n          description: The DNS challenge for generating a certificate.\n        certChallengeHttp:\n          $ref: '#/components/schemas/CertHttpChallenge'\n          description: The HTTP challenge for generating a certificate.\n        certStatus:\n          description: The certificate provisioning status; updated when Firebase\n            Hosting provisions an SSL certificate for the domain.\n          enum:\n          - CERT_STATUS_UNSPECIFIED\n          - CERT_PENDING\n          - CERT_MISSING\n          - CERT_PROCESSING\n          - CERT_PROPAGATING\n          - CERT_ACTIVE\n          - CERT_ERROR\n          type: string\n        discoveredIps:\n          description: The IPs found at the last DNS fetch.\n          items:\n            type: string\n          type: array\n        dnsFetchTime:\n          description: The time at which the last DNS fetch occurred.\n          format: google-datetime\n          type: string\n        dnsStatus:\n          description: The DNS record match status as of the last DNS fetch.\n          enum:\n          - DNS_STATUS_UNSPECIFIED\n          - DNS_PENDING\n          - DNS_MISSING\n          - DNS_PARTIAL_MATCH\n          - DNS_MATCH\n          - DNS_EXTRANEOUS_MATCH\n          type: string\n        expectedIps:\n          description: The list of IPs to which the domain is expected to resolve.\n          items:\n            type: string\n          type: array\n      type: object\n    DomainRedirect:\n      description: Defines the behavior of a domain-level redirect. Domain redirects\n        preserve the path of the redirect but replace the requested domain with the\n        one specified in the redirect configuration.\n      properties:\n        domainName:\n          description: Required. The domain name to redirect to.\n          type: string\n        type:\n          description: Required. The redirect status code.\n          enum:\n          - REDIRECT_TYPE_UNSPECIFIED\n          - MOVED_PERMANENTLY\n          type: string\n      type: object\n    Empty:\n      description: 'A generic empty message that you can re-use to avoid defining\n        duplicated empty messages in your APIs. A typical example is to use it as\n        the request or the response type of an API method. For instance: service Foo\n        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON\n        representation for `Empty` is empty JSON object `{}`.'\n      properties: {}\n      type: object\n    Header:\n      description: A [`Header`](https://firebase.google.com/docs/hosting/full-config#headers)\n        specifies a URL pattern that, if matched to the request URL path, triggers\n        Hosting to apply the specified custom response headers.\n      properties:\n        glob:\n          description: The user-supplied [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching)\n            to match against the request URL path.\n          type: string\n        headers:\n          additionalProperties:\n            type: string\n          description: Required. The additional headers to add to the response.\n          type: object\n        regex:\n          description: The user-supplied RE2 regular expression to match against the\n            request URL path.\n          type: string\n      type: object\n    I18nConfig:\n      description: If provided, i18n rewrites are enabled.\n      properties:\n        root:\n          description: Required. The user-supplied path where country and language\n            specific content will be looked for within the public directory.\n          type: string\n      type: object\n    ListChannelsResponse:\n      properties:\n        channels:\n          description: The list of channels.\n          items:\n            $ref: '#/components/schemas/Channel'\n          type: array\n        nextPageToken:\n          description: The pagination token, if more results exist beyond the ones\n            in this response. Include this token in your next call to `ListChannels`.\n            Page tokens are short-lived and should not be stored.\n          type: string\n      type: object\n    ListDomainsResponse:\n      description: The response to listing Domains.\n      properties:\n        domains:\n          description: The list of domains, if any exist.\n          items:\n            $ref: '#/components/schemas/Domain'\n          type: array\n        nextPageToken:\n          description: The pagination token, if more results exist.\n          type: string\n      type: object\n    ListReleasesResponse:\n      properties:\n        nextPageToken:\n          description: The pagination token, if more results exist beyond the ones\n            in this response. Include this token in your next call to `ListReleases`.\n            Page tokens are short-lived and should not be stored.\n          type: string\n        releases:\n          description: The list of hashes of files that still need to be uploaded,\n            if any exist.\n          items:\n            $ref: '#/components/schemas/Release'\n          type: array\n      type: object\n    ListSitesResponse:\n      properties:\n        nextPageToken:\n          description: The pagination token, if more results exist beyond the ones\n            in this response. Include this token in your next call to `ListSites`.\n            Page tokens are short-lived and should not be stored.\n          type: string\n        sites:\n          description: A list of Site objects associated with the specified Firebase\n            project.\n          items:\n            $ref: '#/components/schemas/Site'\n          type: array\n      type: object\n    ListVersionFilesResponse:\n      properties:\n        files:\n          description: ' The list of paths to the hashes of the files in the specified\n            version.'\n          items:\n            $ref: '#/components/schemas/VersionFile'\n          type: array\n        nextPageToken:\n          description: The pagination token, if more results exist beyond the ones\n            in this response. Include this token in your next call to `ListVersionFiles`.\n            Page tokens are short-lived and should not be stored.\n          type: string\n      type: object\n    ListVersionsResponse:\n      properties:\n        nextPageToken:\n          description: The pagination token, if more results exist beyond the ones\n            in this response. Include this token in your next call to `ListVersions`.\n            Page tokens are short-lived and should not be stored.\n          type: string\n        versions:\n          description: The list of versions, if any exist.\n          items:\n            $ref: '#/components/schemas/Version'\n          type: array\n      type: object\n    Operation:\n      description: This resource represents a long-running operation that is the result\n        of a network API call.\n      properties:\n        done:\n          description: If the value is `false`, it means the operation is still in\n            progress. If `true`, the operation is completed, and either `error` or\n            `response` is available.\n          type: boolean\n        error:\n          $ref: '#/components/schemas/Status'\n          description: The error result of the operation in case of failure or cancellation.\n        metadata:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type\n              URL.\n          description: Service-specific metadata associated with the operation. It\n            typically contains progress information and common metadata such as create\n            time. Some services might not provide such metadata. Any method that returns\n            a long-running operation should document the metadata type, if any.\n          type: object\n        name:\n          description: The server-assigned name, which is only unique within the same\n            service that originally returns it. If you use the default HTTP mapping,\n            the `name` should be a resource name ending with `operations/{unique_id}`.\n          type: string\n        response:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type\n              URL.\n          description: The normal response of the operation in case of success. If\n            the original method returns no data on success, such as `Delete`, the\n            response is `google.protobuf.Empty`. If the original method is standard\n            `Get`/`Create`/`Update`, the response should be the resource. For other\n            methods, the response should have the type `XxxResponse`, where `Xxx`\n            is the original method name. For example, if the original method name\n            is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.\n          type: object\n      type: object\n    PathFilter:\n      description: A representation of filter path.\n      properties:\n        regexes:\n          description: An array of RegEx values by which to filter.\n          items:\n            type: string\n          type: array\n      type: object\n    PopulateVersionFilesRequest:\n      properties:\n        files:\n          additionalProperties:\n            type: string\n          description: A set of file paths to the hashes corresponding to assets that\n            should be added to the version. A file path to an empty hash will remove\n            the path from the version. Calculate a hash by Gzipping the file then\n            taking the SHA256 hash of the newly compressed file.\n          type: object\n      type: object\n    PopulateVersionFilesResponse:\n      properties:\n        uploadRequiredHashes:\n          description: The content hashes of the specified files that need to be uploaded\n            to the specified URL.\n          items:\n            type: string\n          type: array\n        uploadUrl:\n          description: 'The URL to which the files should be uploaded, in the format:\n            \"https://upload-firebasehosting.googleapis.com/upload/sites/SITE_ID /versions/VERSION_ID/files\"\n            Perform a multipart `POST` of the Gzipped file contents to the URL using\n            a forward slash and the hash of the file appended to the end.'\n          type: string\n      type: object\n    Redirect:\n      description: A [`Redirect`](https://firebase.google.com/docs/hosting/full-config#redirects)\n        specifies a URL pattern that, if matched to the request URL path, triggers\n        Hosting to respond with a redirect to the specified destination path.\n      properties:\n        glob:\n          description: The user-supplied [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching)\n            to match against the request URL path.\n          type: string\n        location:\n          description: 'Required. The value to put in the HTTP location header of\n            the response. The location can contain capture group values from the pattern\n            using a `:` prefix to identify the segment and an optional `*` to capture\n            the rest of the URL. For example: \"glob\": \"/:capture*\", \"statusCode\":\n            301, \"location\": \"https://example.com/foo/:capture\"'\n          type: string\n        regex:\n          description: The user-supplied RE2 regular expression to match against the\n            request URL path.\n          type: string\n        statusCode:\n          description: Required. The status HTTP code to return in the response. It\n            must be a valid 3xx status code.\n          format: int32\n          type: integer\n      type: object\n    Release:\n      description: ' A `Release` is a particular [collection of configurations and\n        files](sites.versions) that is set to be public at a particular time.'\n      properties:\n        message:\n          description: The deploy description when the release was created. The value\n            can be up to 512 characters.\n          type: string\n        name:\n          description: 'Output only. The unique identifier for the release, in either\n            of the following formats: - sites/SITE_ID/releases/RELEASE_ID - sites/SITE_ID/channels/CHANNEL_ID/releases/RELEASE_ID\n            This name is provided in the response body when you call [`releases.create`](sites.releases/create)\n            or [`channels.releases.create`](sites.channels.releases/create).'\n          type: string\n        releaseTime:\n          description: Output only. The time at which the version is set to be public.\n          format: google-datetime\n          type: string\n        releaseUser:\n          $ref: '#/components/schemas/ActingUser'\n          description: Output only. Identifies the user who created the release.\n        type:\n          description: Explains the reason for the release. Specify a value for this\n            field only when creating a `SITE_DISABLE` type release.\n          enum:\n          - TYPE_UNSPECIFIED\n          - DEPLOY\n          - ROLLBACK\n          - SITE_DISABLE\n          type: string\n        version:\n          $ref: '#/components/schemas/Version'\n          description: Output only. The configuration and content that was released.\n      type: object\n    Rewrite:\n      description: A [`Rewrite`](https://firebase.google.com/docs/hosting/full-config#rewrites)\n        specifies a URL pattern that, if matched to the request URL path, triggers\n        Hosting to respond as if the service were given the specified destination\n        URL.\n      properties:\n        dynamicLinks:\n          description: The request will be forwarded to Firebase Dynamic Links.\n          type: boolean\n        function:\n          description: The function to proxy requests to. Must match the exported\n            function name exactly.\n          type: string\n        glob:\n          description: The user-supplied [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching)\n            to match against the request URL path.\n          type: string\n        path:\n          description: The URL path to rewrite the request to.\n          type: string\n        regex:\n          description: The user-supplied RE2 regular expression to match against the\n            request URL path.\n          type: string\n        run:\n          $ref: '#/components/schemas/CloudRunRewrite'\n          description: The request will be forwarded to Cloud Run.\n      type: object\n    ServingConfig:\n      description: The configuration for how incoming requests to a site should be\n        routed and processed before serving content. The URL request paths are matched\n        against the specified URL patterns in the configuration, then Hosting applies\n        the applicable configuration according to a specific [priority order](https://firebase.google.com/docs/hosting/full-config#hosting_priority_order).\n      properties:\n        appAssociation:\n          description: How to handle well known App Association files.\n          enum:\n          - AUTO\n          - NONE\n          type: string\n        cleanUrls:\n          description: Defines whether to drop the file extension from uploaded files.\n          type: boolean\n        headers:\n          description: An array of objects, where each object specifies a URL pattern\n            that, if matched to the request URL path, triggers Hosting to apply the\n            specified custom response headers.\n          items:\n            $ref: '#/components/schemas/Header'\n          type: array\n        i18n:\n          $ref: '#/components/schemas/I18nConfig'\n          description: Optional. Defines i18n rewrite behavior.\n        redirects:\n          description: An array of objects (called redirect rules), where each rule\n            specifies a URL pattern that, if matched to the request URL path, triggers\n            Hosting to respond with a redirect to the specified destination path.\n          items:\n            $ref: '#/components/schemas/Redirect'\n          type: array\n        rewrites:\n          description: An array of objects (called rewrite rules), where each rule\n            specifies a URL pattern that, if matched to the request URL path, triggers\n            Hosting to respond as if the service were given the specified destination\n            URL.\n          items:\n            $ref: '#/components/schemas/Rewrite'\n          type: array\n        trailingSlashBehavior:\n          description: Defines how to handle a trailing slash in the URL path.\n          enum:\n          - TRAILING_SLASH_BEHAVIOR_UNSPECIFIED\n          - ADD\n          - REMOVE\n          type: string\n      type: object\n    Site:\n      description: A `Site` represents a Firebase Hosting site.\n      properties:\n        appId:\n          description: Optional. The [ID of a Web App](https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id)\n            associated with the Hosting site.\n          type: string\n        defaultUrl:\n          description: Output only. The default URL for the Hosting site.\n          readOnly: true\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: Optional. User-specified labels for the Hosting site.\n          type: object\n        name:\n          description: 'Output only. The fully-qualified resource name of the Hosting\n            site, in the format: projects/PROJECT_IDENTIFIER/sites/SITE_ID PROJECT_IDENTIFIER:\n            the Firebase project''s [`ProjectNumber`](https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects#FirebaseProject.FIELDS.project_number)\n            ***(recommended)*** or its [`ProjectId`](https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects#FirebaseProject.FIELDS.project_id).\n            Learn more about using project identifiers in Google''s [AIP 2510 standard](https://google.aip.dev/cloud/2510).'\n          readOnly: true\n          type: string\n        type:\n          description: Output only. The type of Hosting site. Every Firebase project\n            has a `DEFAULT_SITE`, which is created when Hosting is provisioned for\n            the project. All additional sites are `USER_SITE`.\n          enum:\n          - TYPE_UNSPECIFIED\n          - DEFAULT_SITE\n          - USER_SITE\n          readOnly: true\n          type: string\n      type: object\n    SiteConfig:\n      description: A `SiteConfig` contains metadata associated with a specific site\n        that controls Firebase Hosting serving behavior\n      properties:\n        cloudLoggingEnabled:\n          description: Whether or not web requests made by site visitors are logged\n            via Cloud Logging.\n          type: boolean\n        maxVersions:\n          description: The number of FINALIZED versions that will be held for a site\n            before automatic deletion. When a new version is deployed, content for\n            versions in storage in excess of this number will be deleted, and will\n            no longer be billed for storage usage. Oldest versions will be deleted\n            first; sites are created with an unlimited number of max_versions by default.\n          format: int64\n          type: string\n      type: object\n    Status:\n      description: 'The `Status` type defines a logical error model that is suitable\n        for different programming environments, including REST APIs and RPC APIs.\n        It is used by [gRPC](https://github.com/grpc). Each `Status` message contains\n        three pieces of data: error code, error message, and error details. You can\n        find out more about this error model and how to work with it in the [API Design\n        Guide](https://cloud.google.com/apis/design/errors).'\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: A list of messages that carry the error details. There is a\n            common set of message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type\n                URL.\n            type: object\n          type: array\n        message:\n          description: A developer-facing error message, which should be in English.\n            Any user-facing error message should be localized and sent in the google.rpc.Status.details\n            field, or localized by the client.\n          type: string\n      type: object\n    Version:\n      description: A `Version` is a configuration and a collection of static files\n        which determine how a site is displayed.\n      properties:\n        config:\n          $ref: '#/components/schemas/ServingConfig'\n          description: The configuration for the behavior of the site. This configuration\n            exists in the [`firebase.json`](https://firebase.google.com/docs/cli/#the_firebasejson_file)\n            file.\n        createTime:\n          description: Output only. The time at which the version was created.\n          format: google-datetime\n          type: string\n        createUser:\n          $ref: '#/components/schemas/ActingUser'\n          description: Output only. Identifies the user who created the version.\n        deleteTime:\n          description: Output only. The time at which the version was `DELETED`.\n          format: google-datetime\n          type: string\n        deleteUser:\n          $ref: '#/components/schemas/ActingUser'\n          description: Output only. Identifies the user who `DELETED` the version.\n        fileCount:\n          description: Output only. The total number of files associated with the\n            version. This value is calculated after a version is `FINALIZED`.\n          format: int64\n          type: string\n        finalizeTime:\n          description: Output only. The time at which the version was `FINALIZED`.\n          format: google-datetime\n          type: string\n        finalizeUser:\n          $ref: '#/components/schemas/ActingUser'\n          description: Output only. Identifies the user who `FINALIZED` the version.\n        labels:\n          additionalProperties:\n            type: string\n          description: The labels used for extra metadata and/or filtering.\n          type: object\n        name:\n          description: 'The fully-qualified resource name for the version, in the\n            format: sites/ SITE_ID/versions/VERSION_ID This name is provided in the\n            response body when you call [`CreateVersion`](sites.versions/create).'\n          type: string\n        status:\n          description: The deploy status of the version. For a successful deploy,\n            call [`CreateVersion`](sites.versions/create) to make a new version (`CREATED`\n            status), [upload all desired files](sites.versions/populateFiles) to the\n            version, then [update](sites.versions/patch) the version to the `FINALIZED`\n            status. Note that if you leave the version in the `CREATED` state for\n            more than 12 hours, the system will automatically mark the version as\n            `ABANDONED`. You can also change the status of a version to `DELETED`\n            by calling [`DeleteVersion`](sites.versions/delete).\n          enum:\n          - VERSION_STATUS_UNSPECIFIED\n          - CREATED\n          - FINALIZED\n          - DELETED\n          - ABANDONED\n          - EXPIRED\n          - CLONING\n          type: string\n        versionBytes:\n          description: Output only. The total stored bytesize of the version. This\n            value is calculated after a version is `FINALIZED`.\n          format: int64\n          type: string\n      type: object\n    VersionFile:\n      description: A static content file that is part of a version.\n      properties:\n        hash:\n          description: The SHA256 content hash of the file.\n          type: string\n        path:\n          description: The URI at which the file's content should display.\n          type: string\n        status:\n          description: Output only. The current status of a particular file in the\n            specified version. The value will be either `pending upload` or `uploaded`.\n          enum:\n          - STATUS_UNSPECIFIED\n          - EXPECTED\n          - ACTIVE\n          type: string\n      type: object\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,\n              and delete your Google Cloud data and see the email address for your\n              Google Account.\n            https://www.googleapis.com/auth/cloud-platform.read-only: View your data\n              across Google Cloud services and see the email address of your Google\n              Account\n            https://www.googleapis.com/auth/firebase: View and administer all your\n              Firebase data and settings\n            https://www.googleapis.com/auth/firebase.readonly: View all your Firebase\n              data and settings\n      type: oauth2\n    Oauth2c:\n      description: Oauth 2.0 authorizationCode authentication\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,\n              and delete your Google Cloud data and see the email address for your\n              Google Account.\n            https://www.googleapis.com/auth/cloud-platform.read-only: View your data\n              across Google Cloud services and see the email address of your Google\n              Account\n            https://www.googleapis.com/auth/firebase: View and administer all your\n              Firebase data and settings\n            https://www.googleapis.com/auth/firebase.readonly: View all your Firebase\n              data and settings\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n      type: oauth2\n  x-stackQL-resources: {}\nexternalDocs:\n  url: https://firebase.google.com/docs/hosting/\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: The Firebase Hosting REST API enables programmatic and customizable\n    management and deployments to your Firebase-hosted sites. Use this REST API to\n    create and manage channels and sites as well as to deploy new or updated hosting\n    configurations and content files.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Firebase Hosting API\n  version: v1beta1\n  x-apisguru-categories:\n  - analytics\n  - media\n  x-logo:\n    url: https://api.apis.guru/v2/cache/logo/https_upload.wikimedia.org_wikipedia_commons_e_e1_YouTube_play_buttom_icon_%282013-2017%29.svg\n  x-origin:\n  - format: google\n    url: https://firebasehosting.googleapis.com/$discovery/rest?version=v1beta1\n    version: v1\n  x-providerName: googleapis.com\n  x-serviceName: firebasehosting\nopenapi: 3.0.0\npaths:\n  /v1beta1/{name}:\n    delete:\n      description: Deletes the specified version.\n      operationId: firebasehosting.sites.versions.delete\n      parameters:\n      - description: 'Required. The fully-qualified resource name for the version,\n          in the format: sites/SITE_ID/versions/VERSION_ID'\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - sites\n    get:\n      description: Gets a domain mapping on the specified site.\n      operationId: firebasehosting.sites.domains.get\n      parameters:\n      - description: Required. The name of the domain configuration to get.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Domain'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase.readonly\n      tags:\n      - sites\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: ' Updates the specified metadata for the specified version. This\n        method will fail with `FAILED_PRECONDITION` in the event of an invalid state\n        transition. The supported [state](../sites.versions#versionstatus) transitions\n        for a version are from `CREATED` to `FINALIZED`. Use [`DeleteVersion`](delete)\n        to set the status of a version to `DELETED`.'\n      operationId: firebasehosting.sites.versions.patch\n      parameters:\n      - description: 'The fully-qualified resource name for the version, in the format:\n          sites/ SITE_ID/versions/VERSION_ID This name is provided in the response\n          body when you call [`CreateVersion`](sites.versions/create).'\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: A set of field names from your [version](../sites.versions) that\n          you want to update. A field will be overwritten if, and only if, it's in\n          the mask. If a mask is not provided then a default mask of only [`status`](../sites.versions#Version.FIELDS.status)\n          will be used.\n        in: query\n        name: updateMask\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Version'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Version'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - sites\n    put:\n      description: Updates the specified domain mapping, creating the mapping as if\n        it does not exist.\n      operationId: firebasehosting.sites.domains.update\n      parameters:\n      - description: Required. The name of the domain association to update or create,\n          if an association doesn't already exist.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Domain'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Domain'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - sites\n  /v1beta1/{parent}/channels:\n    get:\n      description: Lists the channels for the specified site. All sites have a default\n        `live` channel.\n      operationId: firebasehosting.sites.channels.list\n      parameters:\n      - description: 'Required. The site for which to list channels, in the format:\n          sites/SITE_ID'\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The maximum number of channels to return. The service may return\n          a lower number if fewer channels exist than this maximum number. If unspecified,\n          defaults to 10. The maximum value is 100; values above 100 will be coerced\n          to 100.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: A token from a previous call to `ListChannels` that tells the\n          server where to resume listing.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListChannelsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase.readonly\n      tags:\n      - sites\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new channel in the specified site.\n      operationId: firebasehosting.sites.channels.create\n      parameters:\n      - description: 'Required. The site in which to create this channel, in the format:\n          sites/ SITE_ID'\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: Required. Immutable. A unique ID within the site that identifies\n          the channel.\n        in: query\n        name: channelId\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Channel'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Channel'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - sites\n  /v1beta1/{parent}/domains:\n    get:\n      description: Lists the domains for the specified site.\n      operationId: firebasehosting.sites.domains.list\n      parameters:\n      - description: 'Required. The parent for which to list domains, in the format:\n          sites/ site-name'\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The page size to return. Defaults to 50.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: The next_page_token from a previous request, if provided.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDomainsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase.readonly\n      tags:\n      - sites\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a domain mapping on the specified site.\n      operationId: firebasehosting.sites.domains.create\n      parameters:\n      - description: 'Required. The parent to create the domain association for, in\n          the format: sites/site-name'\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Domain'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Domain'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - sites\n  /v1beta1/{parent}/files:\n    get:\n      description: Lists the remaining files to be uploaded for the specified version.\n      operationId: firebasehosting.sites.versions.files.list\n      parameters:\n      - description: 'Required. The version for which to list files, in the format:\n          sites/SITE_ID /versions/VERSION_ID'\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The maximum number of version files to return. The service may\n          return a lower number if fewer version files exist than this maximum number.\n          If unspecified, defaults to 1000.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: A token from a previous call to `ListVersionFiles` that tells\n          the server where to resume listing.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: ' The type of files that should be listed for the specified version.'\n        in: query\n        name: status\n        schema:\n          enum:\n          - STATUS_UNSPECIFIED\n          - EXPECTED\n          - ACTIVE\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListVersionFilesResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase.readonly\n      tags:\n      - sites\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{parent}/releases:\n    get:\n      description: Lists the releases that have been created for the specified site\n        or channel. When used to list releases for a site, this list includes releases\n        for both the default `live` channel and any active preview channels for the\n        specified site.\n      operationId: firebasehosting.sites.releases.list\n      parameters:\n      - description: 'Required. The site or channel for which to list releases, in\n          either of the following formats: - sites/SITE_ID - sites/SITE_ID/channels/CHANNEL_ID '\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The maximum number of releases to return. The service may return\n          a lower number if fewer releases exist than this maximum number. If unspecified,\n          defaults to 100.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: A token from a previous call to `releases.list` or `channels.releases.list`\n          that tells the server where to resume listing.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListReleasesResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase.readonly\n      tags:\n      - sites\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new release, which makes the content of the specified\n        version actively display on the appropriate URL(s).\n      operationId: firebasehosting.sites.releases.create\n      parameters:\n      - description: 'Required. The site or channel to which the release belongs,\n          in either of the following formats: - sites/SITE_ID - sites/SITE_ID/channels/CHANNEL_ID'\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: ' The unique identifier for a version, in the format: sites/SITE_ID/versions/\n          VERSION_ID The SITE_ID in this version identifier must match the SITE_ID\n          in the `parent` parameter. This query parameter must be empty if the `type`\n          field in the request body is `SITE_DISABLE`.'\n        in: query\n        name: versionName\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Release'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Release'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - sites\n  /v1beta1/{parent}/sites:\n    get:\n      description: Lists each Hosting Site associated with the specified parent Firebase\n        project.\n      operationId: firebasehosting.projects.sites.list\n      parameters:\n      - description: 'Required. The Firebase project for which to list sites, in the\n          format: projects/PROJECT_IDENTIFIER Refer to the `Site` [`name`](../projects#Site.FIELDS.name)\n          field for details about PROJECT_IDENTIFIER values.'\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: Optional. The maximum number of sites to return. The service\n          may return a lower number if fewer sites exist than this maximum number.\n          If unspecified, defaults to 40.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. A token from a previous call to `ListSites` that tells\n          the server where to resume listing.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSitesResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase.readonly\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new Hosting Site in the specified parent Firebase project.\n        Note that Hosting sites can take several minutes to propagate through Firebase\n        systems.\n      operationId: firebasehosting.projects.sites.create\n      parameters:\n      - description: 'Required. The Firebase project in which to create a Hosting\n          site, in the format: projects/PROJECT_IDENTIFIER Refer to the `Site` [`name`](../projects#Site.FIELDS.name)\n          field for details about PROJECT_IDENTIFIER values.'\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: Required. Immutable. A globally unique identifier for the Hosting\n          site. This identifier is used to construct the Firebase-provisioned subdomains\n          for the site, so it must also be a valid domain name label.\n        in: query\n        name: siteId\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Site'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Site'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - projects\n  /v1beta1/{parent}/versions:\n    get:\n      description: Lists the versions that have been created for the specified site.\n        This list includes versions for both the default `live` channel and any active\n        preview channels for the specified site.\n      operationId: firebasehosting.sites.versions.list\n      parameters:\n      - description: 'Required. The site or channel for which to list versions, in\n          either of the following formats: - sites/SITE_ID - sites/SITE_ID/channels/CHANNEL_ID '\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'A filter string used to return a subset of versions in the response.\n          The currently supported fields for filtering are: `name`, `status`, and\n          `create_time`. Learn more about filtering in Google''s [AIP 160 standard](https://google.aip.dev/160).'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: The maximum number of versions to return. The service may return\n          a lower number if fewer versions exist than this maximum number. If unspecified,\n          defaults to 25. The maximum value is 100; values above 100 will be coerced\n          to 100.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: A token from a previous call to `ListVersions` that tells the\n          server where to resume listing.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListVersionsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase.readonly\n      tags:\n      - sites\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new version for the specified site.\n      operationId: firebasehosting.sites.versions.create\n      parameters:\n      - description: 'Required. The site in which to create the version, in the format:\n          sites/ SITE_ID'\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The self-reported size of the version. This value is used for\n          a pre-emptive quota check for legacy version uploads.\n        in: query\n        name: sizeBytes\n        schema:\n          type: string\n      - description: A unique id for the new version. This is was only specified for\n          legacy version creations, and should be blank.\n        in: query\n        name: versionId\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Version'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Version'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - sites\n  /v1beta1/{parent}/versions:clone:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new version on the specified target site using the content\n        of the specified version.\n      operationId: firebasehosting.sites.versions.clone\n      parameters:\n      - description: 'Required. The target site for the cloned version, in the format:\n          sites/ SITE_ID'\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CloneVersionRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - sites\n  /v1beta1/{parent}:populateFiles:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: ' Adds content files to the specified version. Each file must be\n        under 2 GB.'\n      operationId: firebasehosting.sites.versions.populateFiles\n      parameters:\n      - description: 'Required. The version to which to add files, in the format:\n          sites/SITE_ID /versions/VERSION_ID'\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PopulateVersionFilesRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PopulateVersionFilesResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - sites\nservers:\n- url: https://firebasehosting.googleapis.com/\ntags:\n- name: projects\n- name: sites\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/googleapis.com/v0.1.2/services/firebasehosting-v1beta1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/googleapis.com/v0.1.2/services/firebasehosting-v1beta1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1beta1/{parent}/files\": get: security: security \"Oauth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}