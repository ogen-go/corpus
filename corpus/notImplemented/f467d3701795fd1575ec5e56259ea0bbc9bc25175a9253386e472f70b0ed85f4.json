{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/amamenko/owen-wilson-wow-api"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi.yml",
			"byteSize": 6625,
			"content": "# This is an OpenAPI description for the Owen Wilson Wow API.\n# You can view the resulting docs on ReadMe: https://wow.readme.io\nopenapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: The Owen Wilson Wow API\n  license:\n    name: MIT\nservers:\n  - url: https://owen-wilson-wow-api.herokuapp.com/wows\npaths:\n  /random:\n    get:\n      summary: Random \"Wow\"\n      description: Retrieve a random \"wow\" in JSON format.\n      operationId: random\n      tags:\n        - wow\n      parameters:\n        - name: results\n          in: query\n          description: Retrieve a specific number of random \"wow\" results.\n          required: false\n          example: 5\n          schema:\n            type: integer\n        - name: year\n          in: query\n          description: Retrieve a random \"wow\" from a specific year.\n          required: false\n          example: 2011\n          schema:\n            type: integer\n        - name: movie\n          in: query\n          description: Retrieve a random \"wow\" by the name of the movie it appears in.\n          required: false\n          example: zoolander\n          schema:\n            type: string\n        - name: director\n          in: query\n          description: Retrieve a random \"wow\" from a movie with a particular director.\n          required: false\n          example: wes anderson\n          schema:\n            type: string\n        - name: wow_in_movie\n          in: query\n          description: Retrieve a random \"wow\" by the number of its occurrence in a movie.\n          required: false\n          example: 2\n          schema:\n            type: integer\n        - name: sort\n          in: query\n          description: Sort multiple random results by either movie, release_date, year, director, or number_current_wow.\n          required: false\n          example: movie\n          schema:\n            type: string\n            enum: [movie, release_date, year, director, number_current_wow]\n        - name: direction\n          in: query\n          description: Sort direction can be either asc (ascending) or desc (descending).\n          required: false\n          example: asc\n          schema:\n            type: string\n            enum: [asc, desc]\n      responses:\n        \"200\":\n          description: An array of movies\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Wows\"\n  /ordered/{index}:\n    get:\n      summary: Ordered \"Wow\"\n      description: Retrieve \"wow\" results by their index in the chronological order of all results.\n      operationId: ordered\n      tags:\n        - wow\n      parameters:\n        - name: index\n          in: path\n          description: Index within results array. Either a single index or a range. Range is between a first index and a second index, inclusive.\n          required: true\n          examples:\n            single:\n              value: 0\n            range:\n              value: 3-7\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Either a single movie or an array of movies\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Wow\"\n                  - $ref: \"#/components/schemas/Wows\"\n        \"400\":\n          description: Bad Request\n          content:\n            text/html:\n              schema:\n                type: string\n              examples:\n                response:\n                  summary: Invalid index input\n                  value: \"400 Bad Request: Index should be a number or a range between two numbers\"\n  /movies:\n    get:\n      summary: All Movies\n      description: Retrieve all names of movies in which Owen Wilson says \"wow.\"\n      operationId: movies\n      tags:\n        - metadata\n      responses:\n        \"200\":\n          description: An array of movies\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                  example: Cars\n  /directors:\n    get:\n      summary: All Directors\n      description: Retrieve all directors of movies in which Owen Wilson says \"wow.\"\n      operationId: directors\n      tags:\n        - metadata\n      responses:\n        \"200\":\n          description: An array of directors\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                  example: Wes Anderson\n\ncomponents:\n  schemas:\n    Wow:\n      type: object\n      properties:\n        movie:\n          type: string\n          example: Midnight in Paris\n        year:\n          type: integer\n          example: 2011\n        release_date:\n          type: string\n          format: date\n          example: 2011-05-20\n        director:\n          type: string\n          example: Woody Allen\n        character:\n          type: string\n          example: Gil Pender\n        movie_duration:\n          type: string\n          example: 01:33:57\n        timestamp:\n          type: string\n          example: 00:58:22\n        full_line:\n          type: string\n          example: Wow.\n        current_wow_in_movie:\n          type: integer\n          example: 5\n        total_wows_in_movie:\n          type: integer\n          example: 10\n        poster:\n          type: string\n          example: https://images.ctfassets.net/bs8ntwkklfua/2ZcfSCe2dlfoVzYMr4b9nK/d566e5ad044dee56645f3bffc7200d64/Midnight_in_Paris_Poster.jpg\n        video:\n          type: object\n          properties:\n            1080p:\n              type: string\n              example: https://videos.ctfassets.net/bs8ntwkklfua/1DSaYjQ8SnL1Imeuxe0eXE/100d3106c8a0bf5e80372e2187daf325/Midnight_in_Paris_Wow_5_1080p.mp4\n            720p:\n              type: string\n              example: https://videos.ctfassets.net/bs8ntwkklfua/eFI1n7voe4CsxkWEWv2q0/36781ed8f50e508e8e1f79c8e65e601a/Midnight_in_Paris_Wow_5_720p.mp4\n            480p:\n              type: string\n              example: https://videos.ctfassets.net/bs8ntwkklfua/6oSaIzfy7k3DJMvvy3j1kN/d77192d7decb3ba9d06a5210a58df1fa/Midnight_in_Paris_Wow_5_480p.mp4\n            360p:\n              type: string\n              example: https://videos.ctfassets.net/bs8ntwkklfua/4LQ4lkhx41XDC6UcMlmjbA/dfd5e3604c85c9fb9d38ea2dfdd02a2f/Midnight_in_Paris_Wow_5_360p.mp4\n        audio:\n          type: string\n          example: https://assets.ctfassets.net/bs8ntwkklfua/2A5G34x8JCQBuYwU4D2l9S/27cc467b3ff5796ff1bbe113a06a6e64/Midnight_in_Paris_Wow_5.mp3\n    Wows:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Wow\"\n",
			"canonicalURL": "/github.com/amamenko/owen-wilson-wow-api@4c1de355c2e21aa645d3406e64c6eae6c6232ddf/-/blob/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/amamenko/owen-wilson-wow-api/blob/4c1de355c2e21aa645d3406e64c6eae6c6232ddf/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/ordered/{index}\": get: responses: 400: contents: unsupported content types: [text/html]",
	"NotImplemented": [
		"unsupported content types"
	]
}