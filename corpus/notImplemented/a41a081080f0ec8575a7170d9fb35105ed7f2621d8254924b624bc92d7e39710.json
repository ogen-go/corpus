{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/EnMasseProject/enmasse"
		},
		"file": {
			"name": "eclipse-hono.yaml",
			"size": 0,
			"path": "documentation/src/main/resources/eclipse-hono.yaml",
			"byteSize": 20971,
			"content": "openapi: 3.0.1\ninfo:\n   title: Eclipse Hono™ Device Registry API\n   description: This API defines how to manage *Devices* and their *Credentials*.\n   contact:\n      name: Contact details\n      url: https://www.eclipse.org/hono/community/get-in-touch/\n   license:\n      name: EPL-2.0\n      url: https://www.eclipse.org/legal/epl-2.0/\n   version: 1.1.0\n\nexternalDocs:\n   description: Eclipse Hono™ web page\n   url: https://eclipse.org/hono\n\ntags:\n   - name: devices\n     description: Device registration\n     externalDocs:\n        description: Hono device identity\n        url: https://www.eclipse.org/hono/docs/concepts/device-identity/\n   - name: credentials\n     description: Device credentials\n     externalDocs:\n        description: Hono device identity\n        url: https://www.eclipse.org/hono/docs/concepts/device-identity/\n\nservers:\n   - url: '{server}/v1'\n     variables:\n        server:\n           default: http://hono.eclipse.org:28080\n\npaths:\n\n# Device API\n\n   /devices/{tenantId}:\n\n      parameters:\n         - $ref: '#/components/parameters/tenantId'\n\n      post:\n         tags:\n            - devices\n         summary: Create new device registration with auto-generated ID\n         operationId: createDeviceRegistration\n         requestBody:\n            description: New device\n            content:\n               application/json:\n                  schema:\n                     $ref: '#/components/schemas/Device'\n            required: false\n         responses:\n            201:\n               $ref: '#/components/responses/Created'\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            403:\n               $ref: '#/components/responses/NotAllowed'\n\n   /devices/{tenantId}/{deviceId}:\n\n      parameters:\n         - $ref: '#/components/parameters/tenantId'\n         - $ref: '#/components/parameters/deviceId'\n\n      post:\n         tags:\n            - devices\n         summary: Create new device registration\n         operationId: createDeviceRegistrationWithId\n         requestBody:\n            description: New device\n            content:\n               application/json:\n                  schema:\n                     $ref: '#/components/schemas/Device'\n            required: false\n         responses:\n            201:\n               $ref: '#/components/responses/Created'\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            403:\n               $ref: '#/components/responses/NotAllowed'\n            409:\n               $ref: '#/components/responses/AlreadyExists'\n\n      get:\n         tags:\n            - devices\n         summary: Get device registration information\n         operationId: getRegistration\n         responses:\n            200:\n               description: operation successful\n               content:\n                  application/json:\n                     schema:\n                        $ref: '#/components/schemas/Device'\n               headers:\n                  ETag:\n                     description: Version of the resource\n                     schema:\n                        type: string\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            404:\n               $ref: '#/components/responses/NotFound'\n\n      put:\n         tags:\n            - devices\n         summary: Update existing device registration\n         operationId: updateRegistration\n         parameters:\n            - $ref: '#/components/parameters/resourceVersion'\n         requestBody:\n            description: Updated device registration\n            content:\n               application/json:\n                  schema:\n                     $ref: '#/components/schemas/Device'\n            required: true\n         responses:\n            204:\n               $ref: '#/components/responses/Updated'\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            403:\n               $ref: '#/components/responses/NotAllowed'\n            404:\n               $ref: '#/components/responses/NotFound'\n            412:\n               $ref: '#/components/responses/ResourceVersionMismatch'\n\n      delete:\n         tags:\n            - devices\n         summary: Delete device registration\n         operationId: deleteRegistration\n         parameters:\n            - $ref: '#/components/parameters/resourceVersion'\n         responses:\n            204:\n               $ref: '#/components/responses/Deleted'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            403:\n               $ref: '#/components/responses/NotAllowed'\n            404:\n               $ref: '#/components/responses/NotFound'\n            412:\n               $ref: '#/components/responses/ResourceVersionMismatch'\n\n   /credentials/{tenantId}/{deviceId}:\n\n      parameters:\n         - $ref: '#/components/parameters/tenantId'\n         - $ref: '#/components/parameters/deviceId'\n\n      get:\n         tags:\n            - credentials\n         summary: Get credentials set of a device.\n         description: |\n            Get the credentials set of a device. As long as the device is\n            registered and the user has read access to it, this call should\n            never return \"not found\".\n            Depending on its implementation (or configuration), the device registry\n            can either return all credentials information including full secret details or\n            secret metadata along with the generated identifier (an `id` property).\n            The identifier can be used for the follow-up `update` operation).\n         operationId: getAllCredentials\n         responses:\n            200:\n               description: Operation successful\n               content:\n                  application/json:\n                     schema:\n                        $ref: '#/components/schemas/CredentialsSet'\n                     examples:\n                        Credentials Metadata:\n                           $ref: '#/components/examples/MetaPasswordExample'\n               headers:\n                  ETag:\n                     description: Version of the resource\n                     schema:\n                        type: string\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            404:\n               $ref: '#/components/responses/NotFound'\n\n      put:\n         tags:\n            - credentials\n         summary: Update credentials set for registered device\n         description: If the device registry is handling full secret details, the updated credential set\n                      will be an exact match of the provided content. If it is using secret metadata,\n                      data will be merged in based on the secret identities.\n         operationId: setAllCredentials\n         parameters:\n            - $ref: '#/components/parameters/resourceVersion'\n         requestBody:\n            content:\n               application/json:\n                  schema:\n                     $ref: '#/components/schemas/CredentialsSet'\n                  examples:\n                     Hashed Password:\n                        $ref: '#/components/examples/HashedPasswordExample'\n                     Plain Password:\n                        $ref: '#/components/examples/PlainPasswordExample'\n            required: true\n         responses:\n            204:\n               $ref: '#/components/responses/Updated'\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            403:\n               $ref: '#/components/responses/NotAllowed'\n            404:\n               $ref: '#/components/responses/NotFound'\n            412:\n               $ref: '#/components/responses/ResourceVersionMismatch'\n\ncomponents:\n\n   schemas:\n\n# Common schema\n\n      Error:\n         type: object\n         additionalProperties: true\n         required:\n            - error\n         properties:\n            \"error\":\n               type: string\n               description: A human readable error message of what went wrong.\n\n      DefaultProperties:\n         type: object\n         additionalProperties: true\n         description: Defaults for properties defined on the tenant and device level.\n\n      Extensions:\n         type: object\n         additionalProperties: true\n         description: Allows arbitrary properties as extension to the ones\n                      specified by the Hono API.\n\n# Devices schema\n\n      Device:\n         type: object\n         additionalProperties: false\n         properties:\n            \"enabled\":\n               type: boolean\n               default: true\n            \"defaults\":\n               $ref: '#/components/schemas/DefaultProperties'\n            \"via\":\n               type: array\n               items:\n                  type: string\n               description: The device IDs of the gateways that are registered to act on behalf of this device. Note that \"via\" and \"memberOf\" must not be set at the same time.\n            \"viaGroups\":\n               type: array\n               items:\n                  type: string\n               description: The IDs of the gateway groups that are registered to act on behalf of this device. Note that \"viaGroups\" and \"memberOf\" must not be set at the same time.\n            \"memberOf\":\n               type: array\n               items:\n                  type: string\n               description: The IDs of the gateway groups that this device is a member of. Note that \"via\" and \"memberOf\" must not be set at the same time. The same applies for \"viaGroups\" and \"memberOf\" which must be set at the same time too. The reason is that Eclipse Hono does not support groups of gateway groups.\n            \"ext\":\n               $ref: '#/components/schemas/Extensions'\n\n# Credentials\n\n      CredentialsSet:\n         type: array\n         description: A set of credentials. The entries in this list must be\n                      unique by the composite key of `auth-id` and `type`.\n         items:\n            $ref: '#/components/schemas/TypedCredentials'\n\n      TypedCredentials:\n         additionalProperties: false\n         oneOf:\n            - $ref: '#/components/schemas/PasswordCredentials'\n            - $ref: '#/components/schemas/PSKCredentials'\n            - $ref: '#/components/schemas/X509CertificateCredentials'\n         discriminator:\n            propertyName: type\n            mapping:\n               \"hashed-password\": '#/components/schemas/PasswordCredentials'\n               \"psk\": '#/components/schemas/PSKCredentials'\n               \"x509-cert\": '#/components/schemas/X509CertificateCredentials'\n\n      CommonCredentials:\n         type: object\n         additionalProperties: false\n         required:\n            - auth-id\n            - type\n         properties:\n            \"type\":\n               type: string\n            \"auth-id\":\n               type: string\n            \"enabled\":\n               type: boolean\n               default: true\n            \"ext\":\n               $ref: '#/components/schemas/Extensions'\n\n      PasswordCredentials:\n         additionalProperties: false\n         allOf:\n            - $ref: '#/components/schemas/CommonCredentials'\n            - type: object\n              additionalProperties: false\n              properties:\n                 \"secrets\":\n                    type: array\n                    items:\n                       $ref: '#/components/schemas/PasswordSecret'\n\n      PSKCredentials:\n         additionalProperties: false\n         allOf:\n            - $ref: '#/components/schemas/CommonCredentials'\n            - type: object\n              additionalProperties: false\n              properties:\n                 \"secrets\":\n                    type: array\n                    items:\n                       $ref: '#/components/schemas/PSKSecret'\n\n      X509CertificateCredentials:\n         additionalProperties: false\n         allOf:\n            - $ref: '#/components/schemas/CommonCredentials'\n            - type: object\n              additionalProperties: false\n              properties:\n                 \"secrets\":\n                    type: array\n                    items:\n                       $ref: '#/components/schemas/X509CertificateSecret'\n\n      CommonSecret:\n         type: object\n         additionalProperties: false\n         properties:\n            \"id\":\n               type: string\n               description: The device registry can assign an identity to the secret.\n                            This value can be used to update secrets based on their metadata.\n            \"enabled\":\n               type: boolean\n               default: true\n            \"not-before\":\n               type: string\n               format: date-time\n            \"not-after\":\n               type: string\n               format: date-time\n            \"comment\":\n               type: string\n\n      X509CertificateSecret:\n         additionalProperties: false\n         allOf:\n            - $ref: '#/components/schemas/CommonSecret'\n\n      PasswordSecret:\n         additionalProperties: false\n         allOf:\n            - $ref: '#/components/schemas/CommonSecret'\n            - type: object\n              additionalProperties: false\n              properties:\n                 \"hash-function\":\n                    type: string\n                    example: bcrypt\n                    description: The name of the hash function used to create the password hash (defined in `pwd-hash` property).\n                                 If the password is defined using a `pwd-plain` property, this value will be ignored by the device registry.\n                                 This property should be empty when returning passwords from the device registry using only secret metadata.\n                                 In this case the id field must be set instead.\n                 \"pwd-hash\":\n                    type: string\n                    format: byte\n                    description: The password hash created using the `hash-function` and optional `salt` values.\n                                 If the password is defined using a `pwd-plain` property, this value will be ignored by the device registry.\n                                 This property should be empty when returning passwords from the device registry using only secret metadata.\n                                 In this case the id field must be set instead.\n                 \"salt\":\n                    type: string\n                    format: byte\n                    description: The Base64 encoding of the salt used in the password hash (defined in the `pwd-hash` property).\n                                 If the password is defined using a `pwd-plain` property, this value will be ignored by the device registry.\n                                 This property should be empty when returning passwords from the device registry using only secret metadata.\n                                 In this case the id field must be set instead.\n                 \"pwd-plain\":\n                    type: string\n                    format: byte\n                    description: The clear text value of the password to be hashed by the device registry.\n                                 If this property is specified, the device registry will ignore user-provided hash properties (`hash-function`, `pwd-hash` and `salt`).\n                                 This property must never be stored by the device registry.\n                                 This property must be empty when returning passwords from the device registry.\n\n      PSKSecret:\n         additionalProperties: false\n         allOf:\n            - $ref: '#/components/schemas/CommonSecret'\n            - type: object\n              additionalProperties: false\n              required:\n                 - key\n              properties:\n                 \"key\":\n                    type: string\n                    format: byte\n\n   parameters:\n\n      resourceVersion:\n         name: If-Match\n         in: header\n         description: The expected resource version\n         required: false\n         schema:\n            type: string\n\n      tenantId:\n         name: tenantId\n         in: path\n         description: The ID of the tenant\n         required: true\n         schema:\n            type: string\n         example: DEFAULT_TENANT\n\n      deviceId:\n         name: deviceId\n         in: path\n         description: The ID of the device\n         required: true\n         schema:\n            type: string\n         example: 4711\n\n      authId:\n         name: authId\n         in: path\n         description: The authentication ID of the device\n         required: true\n         schema:\n            type: string\n         example: sensor1\n\n      type:\n         name: type\n         in: path\n         description: The credentials type\n         required: true\n         schema:\n            type: string\n         example: sha-256\n\n   responses:\n\n      Unauthorized:\n         description: Authentication credentials are required, but missing.\n         headers:\n            \"WWW-Authenticate\":\n               schema:\n                  type: string\n\n      Created:\n         description: Object created.\n         headers:\n            Location:\n               description: URL to the resource\n               schema:\n                  type: string\n                  format: uri\n            ETag:\n               description: The new version of the resource\n               schema:\n                  type: string\n         content:\n            application/json:\n               schema:\n                  type: object\n                  additionalProperties: false\n                  required:\n                     - id\n                  properties:\n                     id:\n                        type: string\n                        description: The ID of the created object\n\n      Updated:\n         description: Object updated.\n         headers:\n            ETag:\n               description: The new version of the resource\n               schema:\n                  type: string\n\n      Deleted:\n         description: Object deleted.\n\n      NotFound:\n         description: |\n            Object not found. This may also be returned for some operations\n            if the user misses read access for the object.\n         content:\n            application/json:\n               schema:\n                  $ref: '#/components/schemas/Error'\n\n      NotAllowed:\n         description: |\n            Operation not allowed. If the user does not have read access\n            for this object, then `404` will be returned instead.\n         content:\n            application/json:\n               schema:\n                  $ref: '#/components/schemas/Error'\n\n      MalformedRequest:\n         description: Malformed request\n         content:\n            application/json:\n               schema:\n                  $ref: '#/components/schemas/Error'\n\n      AlreadyExists:\n         description: |\n            Object already exists. If the user has no read access for\n            the existing object, then `403` should be returned instead.\n         content:\n            application/json:\n               schema:\n                  $ref: '#/components/schemas/Error'\n\n      ResourceVersionMismatch:\n         description: |\n            Expected resource version does not match current.\n            This can only happen when the request header `If-Match`\n            was set.\n         content:\n            application/json:\n               schema:\n                  $ref: '#/components/schemas/Error'\n\n   examples:\n      HashedPasswordExample:\n         value:\n            [{\n                auth-id: sensor1,\n                type: hashed-password,\n                secrets: [{\n                             \"not-after\": \"2027-12-24T19:00:00Z\",\n                             \"pwd-hash\": \"AQIDBAUGBwg=\",\n                             \"salt\": \"Mq7wFw==\",\n                             \"hash-function\": \"sha-512\"\n                          }]\n             }]\n\n      PlainPasswordExample:\n         value:\n           [{\n               auth-id: sensor1,\n               type: hashed-password,\n               secrets: [{\n                  \"id\": \"349556ea-4902-47c7-beb0-1009ab693fb4\",\n                  \"not-after\": \"2027-12-24T19:00:00Z\",\n                  \"pwd-plain\": \"hono-secret\"\n               }]\n            }]\n      MetaPasswordExample:\n         value:\n            auth-id: sensor1\n            type: hashed-password\n            secrets: [{\n               \"id\": \"349556ea-4902-47c7-beb0-1009ab693fb4\",\n               \"not-after\": \"2027-12-24T19:00:00Z\",\n            }]\n",
			"canonicalURL": "/github.com/EnMasseProject/enmasse@e4e541c29d0d4944a6cf3c419c46d764a38d7a55/-/blob/documentation/src/main/resources/eclipse-hono.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/EnMasseProject/enmasse/blob/e4e541c29d0d4944a6cf3c419c46d764a38d7a55/documentation/src/main/resources/eclipse-hono.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/credentials/{tenantId}/{deviceId}\": get: responses: 200: contents: application/json: generate schema: item: oneOf: collect variants: oneOf[0]: allOf: allOf additionalProperties merging not implemented",
	"NotImplemented": [
		"allOf additionalProperties merging"
	]
}