{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/GSA/open-gsa-redesign"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "_apidocs/regulationsgov/v4/openapi.yaml",
			"byteSize": 60826,
			"content": "# ------------------\n# Disclaimer:\n# ------------------\n# This Open API specification document is work in progress. This document will continue \n# to be updated until our Public API v4 is finalized.\n#--------------------\nopenapi: 3.0.0\ninfo:\n  title: Regulations.gov API\n  description: \u003e-\n    Public API for Regulations.gov\n  version: \"4.0\"\nservers:\n  - url: 'https://api.regulations.gov/v4'\n    description: Production endpoint for Regulations.gov API\nsecurity: \n  - ApiKeyAuth: []\npaths:\n  /documents:\n    get:\n      summary: List of documents\n      description: This endpoint returns list of documents\n      tags:\n        - documents\n      parameters: \n        - name: filter[agencyId]\n          in: query\n          description: \u003e-\n            'Filters results for the agency acronym specified in the value. Example: ''EPA'''\n          required: false\n          schema:\n            type: string\n        - name: filter[commentEndDate]\n          in: query\n          description: \u003e-  \n            Filters results relative to the comment end date.  The value must be formatted as `yyyy-MM-dd`.\u003cbr/\u003e\u003cbr/\u003e Omission of a parameter modifier will match results to the exact date provided, otherwise, one of the parameter modifiers below may be used. \u003cbr/\u003e `ge` - greater than or equal \u003cbr/\u003e `le` - less than or equal\n          required: false\n          schema:\n            type: string\n            format: date\n        - name: filter[docketId]\n          in: query\n          description: \u003e-\n            Filters results on the specified docket ID.\n          required: false\n          schema:\n            type: string\n        - name: filter[documentType]\n          in: query\n          description: \u003e-\n            Filters results on the specified document type.\n          required: false\n          schema:\n            $ref: '#/components/schemas/DocumentType'\n        - name: filter[frDocNum]\n          in: query\n          description: \u003e-\n            Filters results on the specified frDocNum.\n          required: false\n          schema:\n            type: string\n        - name: filter[searchTerm]\n          in: query\n          description: \u003e-\n            Filters results on the given term.\n          required: false\n          schema:\n            type: string\n        - name: filter[postedDate]\n          in: query\n          description: \u003e-  \n            Filters results relative to the posted date.  The value must be formatted as `yyyy-MM-dd`.\u003cbr/\u003e\u003cbr/\u003e Omission of a parameter modifier will match results to the exact date provided, otherwise, one of the parameter modifiers below may be used. \u003cbr/\u003e `ge` - greater than or equal \u003cbr/\u003e `le` - less than or equal\n          required: false\n          schema:\n            type: string\n            format: date\n        - name: filter[lastModifiedDate]\n          in: query\n          description: \u003e-  \n            Filters results relative to the last modified date.  The value must be formatted as `yyyy-MM-dd HH:mm:ss`.\u003cbr/\u003e\u003cbr/\u003e Omission of a parameter modifier will match results to the exact date provided, otherwise, one of the parameter modifiers below may be used. \u003cbr/\u003e `ge` - greater than or equal \u003cbr/\u003e `le` - less than or equal\n          required: false\n          schema:\n            type: string\n            format: date            \n        - name: filter[subtype]\n          in: query\n          description: \u003e-\n            Filters results on the supplied document subtype\n          required: false\n          schema:\n            type: string\n        - name: filter[withinCommentPeriod]\n          in: query\n          description: \u003e-\n            Filters results for documents that are open for comment by setting the value to `true`. \u003cbr/\u003e\u003cbr/\u003e _`False` is not an acceptable value for this parameter, hence it should be removed when not being used._          \n          required: false\n          schema:\n            type: boolean\n        - name: sort\n          in: query\n          description: \u003e-\n            Sorts the results on the field specified in the value.  The default behavior will sort the results in ascending order; to sort in descending order, prepend a minus sign to the value. \u003cbr/\u003e\u003cbr/\u003e Supported values are `commentEndDate`, `postedDate`, `lastModifiedDate`, `documentId` and `title`. Multiple sort options can be passed in as a comma separated list to sort results by multiple fields.         \n          required: false\n          schema:\n            type: string\n        - name: page[number]\n          in: query\n          description: \u003e-\n            Specifies the number for the page of results that will be returned from the query. \u003cbr/\u003e\u003cbr/\u003e Acceptable values are numerical between, and including, 1 and 20.          \n          required: false\n          schema:\n            type: integer\n        - name: page[size]\n          in: query\n          description: \u003e-\n            Specifies the size per page of results that will be returned from the query. \u003cbr/\u003e\u003cbr/\u003e Acceptable values are numerical between, and including, 5 and 250.           \n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: A JSON\\:API document with the a list of documents\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/DocumentFindAllResponse'\n        '400':\n          description: Validation error\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n        '403':\n           description: API key is missing or invalid\n           content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError' \n  /documents/{documentId}:\n    get:\n      tags:\n        - documents\n      summary: Get detailed information for specified documentId\n      description: Gets the detailed information of a specific document with the passed documentId.\n      parameters:\n        - name: documentId\n          in: path\n          description: ID of document to return\n          required: true\n          schema:\n            type: string\n        - name: include #Only supported value for include is attachments.\n          in: query\n          description: resources to include\n          required: false\n          schema:\n            type: string\n          example: attachments\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/DocumentFindOneResponse'\n        '400':\n          description: Validation error\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n        '403':\n           description: API key is missing or invalid\n           content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n        '404':\n          description: Document not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n  /comments:\n    get:\n      summary: List of comments\n      description: This endpoint returns list of comments \n      tags:\n        - comments\n      parameters: \n        - name: filter[agencyId]\n          in: query\n          description: \u003e-\n            'Filters results for the agency acronym specified in the value. Example: ''EPA'''\n          required: false\n          schema:\n            type: string\n        - name: filter[searchTerm]\n          in: query\n          description: \u003e-\n            Filters results on the given term.\n          required: false\n          schema:\n            type: string\n        - name: filter[postedDate]\n          in: query\n          description: \u003e-\n            Filters results relative to the posted date.  The value must be formatted as `yyyy-MM-dd`.\u003cbr/\u003e\u003cbr/\u003e Omission of a parameter modifier will match results to the exact date provided, otherwise, one of the parameter modifiers below may be used. \u003cbr/\u003e `ge` - greater than or equal \u003cbr/\u003e `le` - less than or equal\n          required: false\n          schema:\n            type: string\n            format: date\n        - name: filter[lastModifiedDate]\n          in: query\n          description: \u003e-  \n            Filters results relative to the last modified date.  The value must be formatted as `yyyy-MM-dd HH:mm:ss`.\u003cbr/\u003e\u003cbr/\u003e Omission of a parameter modifier will match results to the exact date provided, otherwise, one of the parameter modifiers below may be used. \u003cbr/\u003e `ge` - greater than or equal \u003cbr/\u003e `le` - less than or equal\n          required: false\n          schema:\n            type: string\n            format: date\n        - name: filter[commentOnId]\n          in: query\n          description: \u003e-\n            Filters results on the supplied commentOnId\n          required: false\n          schema:\n            type: string\n        - name: sort\n          in: query\n          description: \u003e-\n            Sorts the results on the field specified in the value.  The default behavior will sort the results in ascending order; to sort in descending order, prepend a minus sign to the value. \u003cbr/\u003e\u003cbr/\u003e The only supported values are `postedDate`, `lastModifiedDate` and `documentId`. Multiple sort options can be passed in as a comma separated list to sort results by multiple fields.          \n          required: false\n          schema:\n            type: string\n        - name: page[number]\n          in: query\n          description: \u003e-\n            Specifies the number for the page of results that will be returned from the query. \u003cbr/\u003e\u003cbr/\u003e Acceptable values are numerical between, and including, 1 and 20.          \n          required: false\n          schema:\n            type: integer\n        - name: page[size]\n          in: query\n          description: \u003e-\n            Specifies the size per page of results that will be returned from the query. \u003cbr/\u003e\u003cbr/\u003e Acceptable values are numerical between, and including, 5 and 250.           \n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: A JSON\\:API document with the a list of comments\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/CommentFindAllResponse'\n        '400':\n          description: Validation error\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n        '403':\n           description: API key is missing or invalid\n           content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n    post:\n      summary: Creates a new comment.\n      tags:\n        - comments\n      requestBody:\n        description: A JSON object containing comment information\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n                $ref: '#/components/schemas/JSONResourcePostRequestObject'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONResourcePostResponseObject'\n        '400':\n          description: Validation error\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n        '403':\n           description: API key is missing or invalid\n           content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n        '404':\n          description: Document not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n  /comments/{commentId}:\n    get:\n      summary: Get detailed information for specified commentId\n      description: Gets the detailed information of a specific comment with the passed commentId.\n      tags:\n        - comments\n      parameters:\n        - name: commentId\n          in: path\n          description: ID of comment to return\n          required: true\n          schema:\n            type: string\n        - name: include #Only supported value for include is attachments.\n          in: query\n          description: resources to include\n          example: attachments\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/CommentFindOneResponse'\n        '400':\n          description: Validation error\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n        '403':\n           description: API key is missing or invalid\n           content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n        '404':\n          description: Document not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n  /dockets:\n    get:\n      summary: List of dockets\n      description: This endpoint returns list of dockets \n      tags:\n        - dockets\n      parameters:\n        - name: filter[agencyId]\n          in: query\n          description: \u003e-\n            'Filters results for the agency acronym specified in the value. Example: ''EPA'''\n          required: false\n          schema:\n            type: string\n        - name: filter[searchTerm]\n          in: query\n          description: \u003e-\n            Filters results on the given term.\n          required: false\n          schema:\n            type: string\n        - name: filter[lastModifiedDate]\n          in: query\n          description: \u003e-  \n            Filters results relative to the last modified date.  The value must be formatted as `yyyy-MM-dd HH:mm:ss`.\u003cbr/\u003e\u003cbr/\u003e Omission of a parameter modifier will match results to the exact date provided, otherwise, one of the parameter modifiers below may be used. \u003cbr/\u003e `ge` - greater than or equal \u003cbr/\u003e `le` - less than or equal\n          required: false\n          schema:\n            type: string\n            format: date\n        - name: filter[docketType]\n          in: query\n          description: \u003e-\n            Filters results on the specified docket type.\n          required: false\n          schema:\n            $ref: '#/components/schemas/DocketType'\n        - name: sort\n          in: query\n          description: \u003e-\n            Sorts the results on the field specified in the value.  The default behavior will sort the results in ascending order; to sort in descending order, prepend a minus sign to the value. \u003cbr/\u003e\u003cbr/\u003e The only supported values are `title`, `docketId` and `lastModifiedDate`. Multiple sort options can be passed in as a comma separated list to sort results by multiple fields.          \n          required: false\n          schema:\n            type: string\n        - name: page[number]\n          in: query\n          description: \u003e-\n            Specifies the number for the page of results that will be returned from the query. \u003cbr/\u003e\u003cbr/\u003e Acceptable values are numerical between, and including, 1 and 20.          \n          required: false\n          schema:\n            type: integer\n        - name: page[size]\n          in: query\n          description: \u003e-\n            Specifies the size per page of results that will be returned from the query. \u003cbr/\u003e\u003cbr/\u003e Acceptable values are numerical between, and including, 5 and 250.           \n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: A JSON\\:API document with the a list of dockets\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/DocketFindAllResponse'\n        '400':\n          description: Validation error\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n        '403':\n           description: API key is missing or invalid\n           content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n  /dockets/{docketId}:\n    get:\n      tags:\n        - dockets\n      summary: Get detailed information for specified docketId\n      description: Gets the detailed information of a specific docket with the passed docketId.\n      parameters:\n        - name: docketId\n          in: path\n          description: ID of docket to return\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/DocketFindOneResponse'\n        '400':\n          description: Validation error\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n        '403':\n           description: API key is missing or invalid\n           content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n        '404':\n          description: Document not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n  /agency-categories:\n    get:\n      summary: Returns a list of categories\n      description: This endpoint returns list of categories\n      tags:\n        - comment submission utilities\n      parameters:\n        - name: filter[acronym]\n          in: query\n          description: \u003e-\n            'Filters results for the agency acronym specified in the value. Example: ''EPA'''\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: List of agency categories\n          content:\n            application/vnd.api+json:\n             schema: # TODO: Pull this object out into a component\n                type: object \n                properties: \n                  data:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        default:\n                          type: boolean\n                          description: Defines if its the default category value\n                        acronym:\n                          type: string\n                          description: Agency acronym\n                        categories:\n                          type: string\n                          description: The name of the category\n        '400':\n          description: Validation error\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n        '403':\n           description: API key is missing or invalid\n           content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n  /submission-keys:\n    post:\n      summary: Creates the unique submission key\n      operationId: GetSubmitterKey\n      tags:\n        - comment submission utilities\n      requestBody:\n        content: \n          application/vnd.api+json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      example: 'submissionKeys'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: object\n                    properties:\n                        id:\n                          type: string\n                          description: the newly created submission key\n                        type:\n                          type: string\n                          example: 'submission-keys'\n                        links:\n                          $ref: '#/components/schemas/SelfLink'\n        '403':\n           description: API key is missing or invalid\n           content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'      \n  /file-upload-urls:\n    post:\n      summary: Creates a presigned url to upload file\n      tags:\n        - comment submission utilities\n      description: 'Returns a pre-signed URL to upload a file to the S3 bucket'\n      requestBody:\n        required: true\n        content: \n          application/vnd.api+json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      example: 'file-upload-urls'\n                    attributes:\n                      type: object\n                      properties: \n                        submissionKey:\n                          type: string\n                          description: submission key for the submission\n                        fileName:\n                          type: string\n                          description: name of the file to upload\n                        contentType:\n                          type: string\n                          description: content type of the file\n      responses:\n        '201':\n          description: Created\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                        format: uri\n                        description: The pre-signed url to upload the file\n                      type:\n                        type: string\n                        example: 'file-upload-urls'\n                      attributes:\n                        type: object\n                        properties: \n                          submissionKey:\n                            type: string\n                            description: submission key for the submission\n                          fileName:\n                            type: string\n                            description: name of the file to upload\n                          contentType:\n                            type: string\n                            description: content type of the file\n        '400':\n          description: Validation error\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\n        '403':\n           description: API key is missing or invalid\n           content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JSONError'\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:          # arbitrary name for the security scheme\n        type: apiKey\n        in: header       # can be \"header\", \"query\" or \"cookie\"\n        name: X-Api-Key  # name of the header, query parameter or cookie\n  schemas:\n    #JSON:API Specific documentation\n    DocumentFindAllResponse:\n      description: A JSON:API document with a list of resources\n      properties:\n        data:\n          description: The list of documents where each document is a JSON:API document\n          type: array\n          uniqueItems: true\n          items:\n            $ref: '#/components/schemas/DocumentFindAllItem'\n        meta:\n          $ref: '#/components/schemas/FindAllResponseMetadata'\n    CommentFindAllResponse:\n      description: A JSON:API document with a list of resources\n      properties:\n        data:\n          description: The list of comments where each comment is a JSON:API document\n          type: array\n          uniqueItems: true\n          items:\n            $ref: '#/components/schemas/CommentFindAllItem'\n        meta:\n          $ref: '#/components/schemas/FindAllResponseMetadata'\n    DocketFindAllResponse:\n      description: A JSON:API document with a list of resources\n      properties:\n        data:\n          description: The list of dockets where each docket is a JSON:API document\n          type: array\n          uniqueItems: true\n          items:\n            $ref: '#/components/schemas/DocketFindAllItem'\n        meta:\n          $ref: '#/components/schemas/FindAllResponseMetadata'\n    DocumentFindAllItem:\n      description: A JSON:API document which represents a single document in the list\n      properties:\n        id:\n          description: The JSON:API resource ID `documentId`\n          type: string\n        type:\n          description: The JSON:API resource type `documents`\n          type: string\n        attributes: \n          $ref: '#/components/schemas/Document'\n        links: \n          type: array\n          items:\n            $ref: '#/components/schemas/SelfLink'\n    CommentFindAllItem:\n      description: A JSON:API document which represents a single document in the list\n      properties:\n        id:\n          description: The JSON:API resource ID `documentId`\n          type: string\n        type:\n          description: The JSON:API resource type `comments`\n          type: string\n        attributes: \n          $ref: '#/components/schemas/Comment'\n        links: \n          type: array\n          items:\n            $ref: '#/components/schemas/SelfLink'\n    DocketFindAllItem:\n      description: A JSON:API document which represents a single document in the list\n      properties:\n        id:\n          description: The JSON:API resource ID `docketId`\n          type: string\n        type:\n          description: The JSON:API resource type `dockets`\n          type: string\n        attributes: \n          $ref: '#/components/schemas/Docket'\n        links: \n          type: array\n          items:\n            $ref: '#/components/schemas/SelfLink'\n    AttachmentFindAllItem:\n      description: A JSON:API document which represents a single document in the list\n      properties:\n        id:\n          description: The JSON:API resource ID `attachmentId`\n          type: string\n        type:\n          description: The JSON:API resource type `attachments`\n          type: string\n        attributes: \n          $ref: '#/components/schemas/Attachment'\n        links: \n          type: array\n          items:\n            $ref: '#/components/schemas/SelfLink'\n    FindAllResponseMetadata:\n      description: A JSON:API document\n      properties:\n        hasNextPage:\n          type: boolean\n        hasPreviousPage:\n          type: boolean\n        numberOfElements:\n          type: integer\n        pageNumber: \n          type: integer\n        pageSize:\n          type: integer\n        totalElements:\n          type: integer\n        totalPages:\n          type: integer\n        firstPage:\n          type: boolean\n        lastPage:\n          type: boolean\n    DocumentFindOneResponse:\n      description: A JSON:API document which represents a single document\n      type: object\n      properties:\n        id:\n          description: The JSON:API resource ID (documentId of the document)\n          type: string\n        type:\n          description: The JSON:API resource type `documents`\n          type: string\n        attributes: \n          $ref: \"#/components/schemas/DocumentDetail\"\n        relationships:\n          $ref: \"#/components/schemas/Relationship\"\n        links: \n          type: array\n          items:\n            $ref: '#/components/schemas/SelfLink'\n        included:\n          description: The list of documents where each document is a JSON:API document\n          type: array\n          uniqueItems: true\n          items:\n            $ref: '#/components/schemas/AttachmentFindAllItem'\n    CommentFindOneResponse:\n      description: A JSON:API document which represents a single document\n      type: object\n      properties:\n        id:\n          description: The JSON:API resource ID (documentId of the comment). DocumentId field is always returned in JSON response. This is an agency configurable field. Each agency has option to configure the format of the field. \n          type: string\n        type:\n          description: The JSON:API resource type `comments`\n          type: string\n        attributes: \n          $ref: \"#/components/schemas/CommentDetail\"\n        relationships:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Relationship\"\n        links: \n          type: array\n          items:\n            $ref: '#/components/schemas/SelfLink'\n        included:\n          description: The list of documents where each document is a JSON:API document\n          type: array\n          uniqueItems: true\n          items:\n            $ref: '#/components/schemas/AttachmentFindAllItem'\n    DocketFindOneResponse:\n      description: A JSON:API document which represents a single document\n      type: object\n      properties:\n        id:\n          description: The JSON:API resource ID (docketId of the docket)\n          type: string\n        type:\n          description: The JSON:API resource type `dockets`\n          type: string\n        attributes: \n          $ref: \"#/components/schemas/DocketDetail\"\n        links: \n          type: array\n          items:\n            $ref: '#/components/schemas/SelfLink'\n    Relationship:\n      description: A single relationship object\n      type: object\n      properties:\n        data:\n          $ref: \"#/components/schemas/RelationshipToAttachment\"\n        links:\n          $ref: \"#/components/schemas/RelationshipLinks\"\n      additionalProperties: false\n    RelationshipToAttachment:\n      description: \u003e-\n        An array of attachment objects as relationship resources.\n      type: array\n      items:\n        type: object\n        properties:\n          type:\n            type: string\n          id:\n            type: string\n    RelationshipLinks:\n      description: \u003e-\n        Relationship links to other related resources (`attachments`)\n      type: object\n      properties:\n        self:\n          $ref: \"#/components/schemas/Link\"\n        related:\n          $ref: \"#/components/schemas/Link\"\n      additionalProperties: false\n    SelfLink:\n      description: Link to self\n      type: object\n      properties:\n        self:\n          $ref: \"#/components/schemas/Link\"\n    Link:\n      description: A string containing the link URL.\n      type: string\n      format: uri-reference\n      uniqueItems: true\n    JSONResourcePostRequestObject:\n      description: A JSON:API document which represents a single document being posted\n      type: object\n      properties:\n        type:\n          description: The JSON:API resource type `comments`\n          type: string\n        attributes: \n          type: object\n          oneOf:\n            - $ref: \"#/components/schemas/IndividualComment\"\n            - $ref: \"#/components/schemas/OrganizationComment\"\n            - $ref: \"#/components/schemas/AnonymousComment\"\n    JSONResourcePostResponseObject:\n      description: A JSON:API document which represents the response from post\n      type: object\n      properties:\n        id:\n          description: The comment tracking number\n          type: string\n        type:\n          description: The JSON:API resource type `comments`\n          type: string\n        attributes:\n          $ref: \"#/components/schemas/CommentPostResponse\"\n    JSONError:\n      description: A JSON:API document\n      type: object\n      properties:\n        errors:\n          description: List of JSON:API Error\n          type: array\n          items:\n            $ref: \"#/components/schemas/Error\" \n    #Regulations.gov documentation        \n    DocumentType:\n      type: string\n      description: type of document. This field is always returned in JSON response\n      enum:\n        - Notice\n        - Rule\n        - Proposed Rule\n        - Supporting \u0026 Related Material\n        - Other\n    DocketType:\n      type: string\n      description: the type of docket\n      enum:\n        - Rulemaking\n        - Nonrulemaking \n    SubmitterType:\n      type: string\n      description: the submitter type\n      enum:\n        - Anonymous\n        - Individual\n        - Organization\n    FileFormat:\n      type: object\n      properties: \n        fileUrl:\n          type: string\n          description: URL of the file on S3\n        format:\n          type: string\n          description: The format of the file such as `pdf`\n        size:\n          type: integer\n          description: The file size\n    #Relationship model for attachments\n    Attachment:\n      type: object\n      properties:\n        agencyNote:\n          type: string\n          description: The note by agency\n        authors:\n          type: array\n          items:\n            type: string\n          description: The individual, organization, or group of collaborators that contributed to the creation of the attachment.\n        docAbstract:\n          type: string\n          description: The detailed description of the attachment.\n        docOrder:\n          type: integer\n          description: The order of the attachment\n        fileFormats:\n          type: array\n          description: list of file formats\n          items:\n              $ref: '#/components/schemas/FileFormat'\n        modifyDate:\n          type: string\n          format: date-time\n          description: The date when the attachment was last modified.\n        publication:\n          type: string\n          description: The publication date\n        restrictReason:\n          type: string\n          description: If the attachment is restricted, this field will state the reason.\n        restrictReasonType:\n          type: string\n          description: If the attachment is restricted, this field will state the type of restriction.\n        title:\n          type: string\n          description: The formal title of the attachment\n    #Search components     \n    Document:\n      type: object\n      properties: \n        agencyId:\n          type: string\n          description: The acronym used to abbreviate the name of the agency associated with the document.\n        commentEndDate:\n          type: string\n          nullable: true\n          format: date-time\n          description: The date that closes the period when public comments may be submitted on the document.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`.\n        commentStartDate:\n          type: string\n          nullable: true\n          format: date-time\n          description: The date that begins the period when public comments may be submitted on the document.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`.\n        docketId:\n          type: string\n          description: The ID of the docket to which the document corresponds.\n        documentType:\n          $ref: '#/components/schemas/DocumentType'\n        frDocNum:\n          type: string\n          description: The federal register document number of the document.\n        highlightedContent:\n          type: string\n          nullable: true\n          description: Content highlighted by search engine for the searchTerm. Only returned for searches with searchTerm.\n        lastModifiedDate:\n          type: string\n          format: date-time\n          description: The date document was last modified in the system.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`.\n        objectId:\n          type: string\n          description: The internal ID of the document in our system.\n        openForComment:\n          type: boolean\n          description: Conveys if the document is open for comment\n        postedDate:\n          type: string\n          description: The date that the document was posted by the agency to the system.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`.\n        subtype:\n          type: string\n          nullable: true\n          description: An agency-specific attribute to further categorize a document beyond the type (`documentType`).\n        title:\n          type: string\n          description: The formal title of the document.\n        withdrawn:\n          type: boolean\n          description: Conveys if the document is withdrawn\n    Comment:\n      type: object\n      properties:\n        agencyId:\n          type: string\n          description: The acronym used to abbreviate the name of the agency associated with the document.\n        documentType:\n          $ref: '#/components/schemas/DocumentType'\n        highlightedContent:\n          type: string\n          nullable: true\n          description: Content highlighted by search engine for the searchTerm. Only returned for searches with searchTerm.\n        lastModifiedDate:\n          type: string\n          format: date-time\n          description: The date comment was last modified in the system.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`.\n        objectId:\n          type: string\n          description: The internal ID of the comment in our system.\n        postedDate:\n          type: string\n          description: The date that the document was posted by the agency to the system.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`.\n        title:\n          type: string\n          description: The formal title of the document.\n        withdrawn:\n          type: boolean\n          description: Conveys if the document is withdrawn\n    Docket:\n      type: object\n      properties:\n        agencyId:\n          type: string\n          description: The acronym used to abbreviate the name of the agency associated with the docket.\n        docketType:\n          $ref: '#/components/schemas/DocketType'\n        highlightedContent:\n          type: string\n          nullable: true\n          description: Content highlighted by search engine for the searchTerm. Only returned for searches with searchTerm.\n        lastModifiedDate:\n          type: string\n          format: date-time\n          description: The date docket was last modified in the system.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`.\n        objectId:\n          type: string\n          description: The internal ID of the docket in our system.\n        title:\n          type: string\n          description: The formal title of the docket.\n    #Detail components\n    BasicDetailModel:\n      type: object\n      properties:\n        address1:\n          type: string\n          nullable: true\n          description: The first line of the submitter's address. \n        address2:\n          type: string\n          nullable: true\n          description: The second line of the submitter's address.\n        agencyId:\n          type: string\n          description: The acronym used to abbreviate the name of the agency associated with the document. This field is always returned in JSON response.\n        city:\n          type: string\n          nullable: true\n          description: The city associated with the submitter's address. This is an agency configurable field. An agency can configure this field to make it not publicly accessible.\n        category:\n          type: string\n          nullable: true\n          description: An agency-specific category allowing agencies to group comments according to their type.\n        comment:\n          type: string\n          description: The comment text associated with the comment submission. This field is always returned in JSON response.\n        country:\n          type: string\n          nullable: true\n          description: The country associated with the submitter's address. This is an agency configurable field. An agency can configure this field to make it not publicly accessible.\n        docAbstract:\n          type: string\n          description: The detailed description of the document. This is an agency configurable field. An agency can configure this field to make it not publicly accessible.\n        docketId:\n          type: string\n          description: The ID of the docket to which the document corresponds. This field is always returned in JSON response. \n        documentType:\n          $ref: '#/components/schemas/DocumentType'\n        email:\n          type: string\n          nullable: true\n          description: The submitter's e-mail address.\n        fax:\n          type: string\n          nullable: true\n          description: The submitter's fax number.\n        field1:\n          type: string\n          nullable: true\n          description: An agency-specific field used for storing additional data with the document. This is an agency configurable field. An agency can configure this field to make it not publicly accessible.\n        field2:\n          type: string\n          nullable: true\n          description: An agency-specific field used for storing additional data with the document. This is an agency configurable field. An agency can configure this field to make it not publicly accessible.\n        fileFormats:\n          type: array\n          description: list of file formats\n          items:\n            $ref: '#/components/schemas/FileFormat'\n        firstName:\n          type: string\n          nullable: true\n          description: The submitter's first name. This is an agency configurable field. An agency can configure this field to make it not publicly accessible.\n        govAgency:\n          type: string\n          nullable: true\n          description: The name of the government agency that the submitter represents. This is an agency configurable field. An agency can configure this field to make it not publicly accessible.\n        govAgencyType:\n          type: string\n          nullable: true\n          description: The type of government agency that the submitter represents. This is an agency configurable field. An agency can configure this field to make it not publicly accessible.\n        lastName:\n          type: string\n          nullable: true\n          description: The submitter's last name. This is an agency configurable field. An agency can configure this field to make it not publicly accessible.\n        legacyId:\n          type: string\n          nullable: true\n          description: An agency-specific identifier that was given to the document in the legacy system. This is an agency configurable field. An agency can configure this field to make it not publicly accessible.\n        modifyDate:\n          type: string\n          format: date-time\n          description: The date when the document was last modified.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`.\n        objectId:\n          type: string\n          description: The internal ID of the document in our system.\n        openForComment:\n          type: boolean\n          description: Conveys if the document is open for commenting.\n        organization:\n          type: string\n          nullable: true\n          description: The organization that the submitter represents. This is an agency configurable field. An agency can configure this field to make it not publicly accessible.\n        originalDocumentId:\n          type: string\n          description: The document ID that was assigned when first entered into the system should a change occur that requires a new document ID to be assigned.\n        pageCount:\n          type: string\n          nullable: true\n          description: Conveys the number of pages contained in the document. This is an agency configurable field. An agency can configure this field to make it not publicly accessible.\n        phone:\n          type: string\n          nullable: true\n          description: The submitter's phone number.\n        postedDate:\n          type: string\n          format: date-time\n          description: The date that the document was posted by the agency to the system.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`. This field is always returned in JSON response.\n        postmarkDate:\n          type: string\n          nullable: true\n          format: date-time\n          description: The postmark date of a document that was sent by mail.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`. This is an agency configurable field. An agency can configure this field to make it not publicly accessible.\n        reasonWithdrawn:\n          type: string\n          nullable: true\n          description: If the document is withdrawn, this field will state the reason. If data exists, it is always returned in JSON response.\n        receiveDate:\n          type: string\n          format: date-time\n          description: The date that the document was received by the agency to the system.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2018-06-29T04:00:00Z`. This field is always returned in JSON response.\n        restrictReason:\n          type: string\n          description: If the document is restricted, this field will state the reason. If data exists, it is always returned in JSON response.\n        restrictReasonType:\n          type: string\n          description: If the document is restricted, this field will state the type of restriction. If data exists, it is always returned in JSON response.\n        stateProvinceRegion:\n          type: string\n          nullable: true\n          description: The submitter's state,province or region. This is an agency configurable field. An agency can configure this field to make it not publicly accessible.\n        subtype:\n          type: string\n          nullable: true\n          description: An agency-specific attribute to further categorize a document beyond the documentType. This is an agency configurable field. An agency can configure this field to make it not publicly accessible.\n        title:\n          type: string\n          description: The formal title of the document. This field is always returned in JSON response.\n        trackingNbr:\n          type: string\n          description: The tracking number of the submission. This field is always returned in JSON response.\n        withdrawn:\n          type: boolean\n          description: Conveys if the document is withdrawn. This field is always returned in JSON response.\n        zip:\n          type: string\n          description: The zip associated with the submitter's address. This is an agency configurable field. An agency can configure this field to make it not publicly accessible.\n    DocumentDetail:\n      allOf:     # Combines the BasicDetailModel and the inline model\n        - $ref: '#/components/schemas/BasicDetailModel'\n        - type: object\n          required:\n            - documentId\n          properties: \n            additionalRins:\n              type: array\n              nullable: true\n              items:\n                type: string\n              description: One or more Regulatory Information Numbers (RINs) to which the document relates.\n            allowLateComments:\n              type: boolean\n              description: Indicates whether the owning agency will accept comments on the document after the due date.\n            authorDate:\n              type: string\n              nullable: true\n              format: date-time\n              description: The date that the authors wrote or published the document.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`.\n            authors:\n              type: array\n              nullable: true\n              items:\n                type: string\n              description: The individual, organization, or group of collaborators that contributed to the creation of the document.\n            cfrPart:\n              type: string\n              nullable: true\n              description: The Code of Federal Regulations (CFR) Citation applicable to the document.\n            commentEndDate:\n              type: string\n              nullable: true\n              format: date-time\n              description: The date that closes the period when public comments may be submitted on the document.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`.\n            commentStartDate:\n              type: string\n              nullable: true\n              format: date-time\n              description: The date that begins the period when public comments may be submitted on the document.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`.\n            effectiveDate:\n              type: string\n              nullable: true\n              format: date-time\n              description: The date the document is put into effect.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`.\n            exhibitLocation:\n              type: string\n              nullable: true\n              description: The physical location of an exhibit to which a document refers.\n            exhibitType:\n              type: string\n              nullable: true\n              description: The type of exhibit to which a document refers.\n            frDocNum:\n              type: string\n              nullable: true\n              description: The unique identifier of a document originating in the [Federal Register](https://www.federalregister.gov/).\n            frVolNum:\n              type: string\n              nullable: true\n              description: The [Federal Register](https://www.federalregister.gov/) volume number where the document was published.\n            implementationDate:\n              type: string\n              nullable: true\n              format: date-time\n              description: The date the document is to be implemented.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`.\n            openForComment:\n              type: boolean\n              description: Conveys if a document is open for comment.\n            media:\n              type: string\n              nullable: true\n              description: The media in which the document is stored.\n            ombApproval:\n              type: string\n              nullable: true\n              description: The control number assigned when approval is given by the Office of Management and Budget (OMB) in accordance with the Paperwork Reduction Act (PRA).\n            paperLength:\n              type: integer\n              description: When the document is in paper format, indicates the length of the paper.\n            paperWidth:\n              type: integer\n              description: When the document is in paper format, indicates the width of the paper.\n            regWriterInstruction:\n              type: string\n              nullable: true\n              description: Additional instructions provided by the writer of the regulation.\n            sourceCitation:\n              type: string\n              nullable: true\n              description: The citation for the source that published the document.\n            startEndPage:\n              type: string\n              nullable: true\n              description: The starting and ending pages where the document was published.\n            subject:\n              type: string\n              nullable: true\n              description: The subject of the document.\n            topics:\n              type: array\n              nullable: true\n              items:\n                type: string\n              description: The principal topics to which the document pertains.\n    CommentDetail: \n      allOf:     # Combines the BasicDetailModel and the inline model\n        - $ref: '#/components/schemas/BasicDetailModel'\n        - type: object\n          required:\n            - documentId\n          properties: \n            commentOnDocumentId:\n              type: string\n              description: documentId of the parent document. This field is always returned in JSON response.\n            duplicateComments:\n              type: integer\n              description: Number of duplicate comments\n    DocketDetail:\n      type: object\n      properties:\n        agencyId:\n          type: string\n          description: The acronym used to abbreviate the name of the agency associated with the docket.\n        category:\n          type: string\n          nullable: true\n          description: Agency specific docket category providing regulatory action details, status, and the agency program and or office.\n        dkAbstract:\n          type: string\n          description: The detailed description of the docket.\n        docketType:\n          $ref: '#/components/schemas/DocketType'\n        effectiveDate:\n          type: string\n          format: date-time\n          description: The date the docket is put into effect.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`.\n        field1:\n          type: string\n          nullable: true\n          description: An agency-specific field used for storing additional data with the docket.\n        field2:\n          type: string\n          nullable: true\n          description: An agency-specific field used for storing additional data with the docket.\n        generic:\n          type: string\n          nullable: true\n          description: An agency-specific field used for storing additional data with the docket.\n        keywords:\n          type: array\n          nullable: true\n          items:\n            type: string\n            description: Agency selected keywords associated with a docket to improve its searchability by the public.\n        legacyId:\n          type: string\n          nullable: true\n          description: An agency-specific identifier that was given to the docket in the legacy system.\n        modifyDate:\n          type: string\n          format: date-time\n          description: The date when the docket was last modified.\u003cbr/\u003e\u003cbr/\u003eThe date is formatted as ISO 8601 with an offset such as `2019-01-20T13:15:45Z`.\n        objectId:\n          type: string\n          description: The internal ID of the document in our system.\n        organization:\n          type: string\n          nullable: true\n          description: Identifies docket's (a regulatory action) orginating agency and/or department.\n        petitionNbr:\n          type: string\n          nullable: true\n          description: Agency specific identifier associated with a docket.\n        program:\n          type: string\n          nullable: true\n          description: The agency specific program associated with the docket.\n        rin:\n          type: string\n          nullable: true\n          description: OMB issued Regulation Identifier Number (RIN) uniquely identifies a docket and its documents.\n        shortTitle:\n          type: string\n          nullable: true\n          description: A combination of letters and or numbers assigned to an agency's regulatory action for purposes of brevity.\n        subType:\n          type: string\n          nullable: true\n          description: This agency specific attribute characterizes a docket (regulatory action) beyond its assigned docket type, e.g., Rulemaking.\n        subType2:\n          type: string\n          nullable: true\n          description: This agency specific attribute characterizes a docket (regulatory action) beyond the designated docket subtype.\n        title:\n          type: string\n          description: A name or descriptive heading given to an agency's docket.\n    #Comment Submission Related components\n    BaseCommentPayload:\n      type: object\n      required:\n        - comment\n        - commentOnDocumentId\n        - submissionType #user should set submission Type to API\n      properties:\n        category:\n          type: string\n          description: An agency-specific category allowing agencies to group comments according to their type.\n        comment:\n          type: string\n          maxLength: 5000\n          description: The comment text\n        commentOnDocumentId:\n          type: string\n          description: documentId of the parent document\n        email:\n          type: string\n          maxLength: 100\n          description: The email address to receive email receipt for the commenrt\n        files:\n          type: array\n          items:\n            type: string\n            description: The names of the files submitted with the submission\n        numItemsReceived:\n          type: integer\n          description: The number of items included in the submission          \n        sendEmailReceipt:\n          type: boolean\n          description: Conveys if the user would like to receive an email receipt for the comment\n        submissionKey:\n          type: string\n          description: The unique identifier associated with the submission\n        submissionType:\n          type: string\n          description: The submitter type - Its always going to be `API` for comments submitted via API \n    IndividualComment:\n      allOf:     # Combines the BasicCommentPayLoad and the inline model\n        - $ref: '#/components/schemas/BaseCommentPayload'\n        - type: object\n          required:\n            - submitterType\n            - firstName\n            - lastName\n          properties:\n            city:\n              type: string\n              maxLength: 50\n              description: The city associated with the submitter's address.\n            country:\n              type: string\n              maxLength: 50\n              description: The country associated with the submitter's address.\n            firstName:\n              type: string\n              maxLength: 25\n              description: The submitter's first name.\n            lastName:\n              type: string\n              maxLength: 25\n              description: The submitter's last name.\n            phone:\n              type: string\n              maxLength: 50\n              description: The submitter's phone number.\n            stateProvinceRegion:\n              type: string\n              maxLength: 50\n              description: The email associated with the submitter's address.\n            submitterType: #submitter type should be set to Individual\n              $ref: '#/components/schemas/SubmitterType'\n            zip:\n              type: string\n              maxLength: 10\n              description: The zip associated with the submitter's address.\n    OrganizationComment: \n      allOf:     # Combines the BasicCommentPayLoad and the inline model\n        - $ref: '#/components/schemas/BaseCommentPayload'\n        - type: object\n          required:\n            - submitterType\n            - organization\n            - organizationType\n          properties:\n            organization:\n              type: string\n              maxLength: 120\n              description: The organization that the submitter represents.          \n            organizationType:\n              type: string\n              description: The agency specific organization type that the submitter represents.          \n            submitterType: #submitter type should be set to Organization\n              $ref: '#/components/schemas/SubmitterType'\n    AnonymousComment: \n      allOf:     # Combines the BasicCommentPayLoad and the inline model\n        - $ref: '#/components/schemas/BaseCommentPayload'\n        - type: object\n          required:\n            - submitterType\n          properties: \n            submitterType: #submitter type should be set to Anonymous\n              $ref: '#/components/schemas/SubmitterType'\n    CommentPostResponse:\n      allOf:\n        - oneOf:     # Returns the created comment\n          - $ref: '#/components/schemas/IndividualComment'\n          - $ref: '#/components/schemas/OrganizationComment'\n          - $ref: '#/components/schemas/AnonymousComment'\n        - type: object\n          properties:\n            numItemsReceived:\n              type: integer\n              description: The number of items included in the submission          \n            receiveDate: \n              type: string\n              description: The date comment was received.\n    Error:\n      type: object\n      properties:\n        status:\n          type: integer #http status code\n        title:\n          type: string\n        detail:\n          type: string\n",
			"canonicalURL": "/github.com/GSA/open-gsa-redesign@3aafdb8358076ab75e0224c74d0d05b75074516c/-/blob/_apidocs/regulationsgov/v4/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/GSA/open-gsa-redesign/blob/3aafdb8358076ab75e0224c74d0d05b75074516c/_apidocs/regulationsgov/v4/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/agency-categories\": get: responses: 200: contents: unsupported content types: [application/vnd.api+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}