{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-cloudasset-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-cloudasset-v1-swagger.yaml",
			"byteSize": 62787,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  description: The cloud asset API manages the history and inventory of cloud resources.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Cloud Asset\n  version: v1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: google\n      url: https://cloudasset.googleapis.com/$discovery/rest?version=v1\n      version: v1\n  x-preferred: true\n  x-providerName: googleapis.com\n  x-serviceName: cloudasset\nexternalDocs:\n  url: https://cloud.google.com/resource-manager/docs/cloud-asset-inventory/quickstart-cloud-asset-inventory\ntags:\n  - name: operations\n  - name: v1\npaths:\n  \"/v1/{name}\":\n    get:\n      description: \u003e-\n        Gets the latest state of a long-running operation.  Clients can use this\n\n        method to poll the operation result at intervals as recommended by the API\n\n        service.\n      operationId: cloudasset.operations.get\n      parameters:\n        - description: The name of the operation resource.\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Operation\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - operations\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  \"/v1/{parent}:batchGetAssetsHistory\":\n    get:\n      description: \u003e-\n        Batch gets the update history of assets that overlap a time window.\n\n        For RESOURCE content, this API outputs history with asset in both\n\n        non-delete or deleted status.\n\n        For IAM_POLICY content, this API outputs history when the asset and its\n\n        attached IAM POLICY both exist. This can create gaps in the output history.\n\n        If a specified asset does not exist, this API returns an INVALID_ARGUMENT\n\n        error.\n      operationId: cloudasset.batchGetAssetsHistory\n      parameters:\n        - description: \u003e-\n            A list of the full names of the assets. For example:\n\n            `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`.\n\n            See [Resource\n\n            Names](https://cloud.google.com/apis/design/resource_names#full_resource_name)\n\n            and [Resource Name\n\n            Format](https://cloud.google.com/resource-manager/docs/cloud-asset-inventory/resource-name-format)\n\n            for more info.\n\n\n            The request becomes a no-op if the asset name list is empty, and the max\n\n            size of the asset name list is 100 in one request.\n          in: query\n          name: assetNames\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Required. The content type.\n          in: query\n          name: contentType\n          schema:\n            type: string\n            enum:\n              - CONTENT_TYPE_UNSPECIFIED\n              - RESOURCE\n              - IAM_POLICY\n              - ORG_POLICY\n              - ACCESS_POLICY\n        - description: \u003e-\n            Required. The relative name of the root asset. It can only be an\n\n            organization number (such as \"organizations/123\"), a project ID (such as\n\n            \"projects/my-project-id\")\", or a project number (such as \"projects/12345\").\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n        - description: |-\n            End time of the time window (inclusive).\n            Current timestamp if not specified.\n          in: query\n          name: readTimeWindow.endTime\n          schema:\n            type: string\n        - description: Start time of the time window (exclusive).\n          in: query\n          name: readTimeWindow.startTime\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/BatchGetAssetsHistoryResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - v1\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  \"/v1/{parent}:exportAssets\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Exports assets with time and resource types to a given Cloud Storage\n        location. The output format is newline-delimited JSON.\n        This API implements the google.longrunning.Operation API allowing you\n        to keep track of the export.\n      operationId: cloudasset.exportAssets\n      parameters:\n        - description: \u003e-\n            Required. The relative name of the root asset. This can only be an\n\n            organization number (such as \"organizations/123\"), a project ID (such as\n\n            \"projects/my-project-id\"), or a project number (such as \"projects/12345\"),\n\n            or a folder number (such as \"folders/123\").\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ExportAssetsRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Operation\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - v1\nservers:\n  - url: https://cloudasset.googleapis.com/\ncomponents:\n  parameters:\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n          - media\n          - proto\n        default: json\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be\n        any arbitrary string assigned to a user, but should not exceed 40\n        characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        type: string\n        enum:\n          - \"1\"\n          - \"2\"\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n    Oauth2c:\n      description: Oauth 2.0 accessCode authentication\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n  schemas:\n    Asset:\n      description: |-\n        Cloud asset. This includes all Google Cloud Platform resources,\n        Cloud IAM policies, and other non-GCP assets.\n      properties:\n        accessLevel:\n          $ref: \"#/components/schemas/GoogleIdentityAccesscontextmanagerV1AccessLev\\\n            el\"\n        accessPolicy:\n          $ref: \"#/components/schemas/GoogleIdentityAccesscontextmanagerV1AccessPol\\\n            icy\"\n        ancestors:\n          description: \u003e-\n            Asset's ancestry path in Cloud Resource Manager (CRM) hierarchy,\n\n            represented as a list of relative resource names. Ancestry path starts with\n\n            the closest CRM ancestor and ends at root. If the asset is a CRM\n\n            project/folder/organization, this starts from the asset itself.\n\n\n            Example: [\"projects/123456789\", \"folders/5432\", \"organizations/1234\"]\n          items:\n            type: string\n          type: array\n        assetType:\n          description: 'Type of the asset. Example: \"compute.googleapis.com/Disk\".'\n          type: string\n        iamPolicy:\n          $ref: \"#/components/schemas/Policy\"\n        name:\n          description: \u003e-\n            The full name of the asset. For example:\n\n            `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`.\n\n            See [Resource\n\n            Names](https://cloud.google.com/apis/design/resource_names#full_resource_name)\n\n            for more information.\n          type: string\n        orgPolicy:\n          description: \u003e-\n            Representation of the Cloud Organization Policy set on an asset. For\n            each\n\n            asset, there could be multiple Organization policies with different\n\n            constraints.\n          items:\n            $ref: \"#/components/schemas/GoogleCloudOrgpolicyV1Policy\"\n          type: array\n        resource:\n          $ref: \"#/components/schemas/Resource\"\n        servicePerimeter:\n          $ref: \"#/components/schemas/GoogleIdentityAccesscontextmanagerV1ServicePe\\\n            rimeter\"\n      type: object\n    AuditConfig:\n      description: \u003e-\n        Specifies the audit configuration for a service.\n\n        The configuration determines which permission types are logged, and what\n\n        identities, if any, are exempted from logging.\n\n        An AuditConfig must have one or more AuditLogConfigs.\n\n\n        If there are AuditConfigs for both `allServices` and a specific service,\n\n        the union of the two AuditConfigs is used for that service: the log_types\n\n        specified in each AuditConfig are enabled, and the exempted_members in each\n\n        AuditLogConfig are exempted.\n\n\n        Example Policy with multiple AuditConfigs:\n\n            {\n              \"audit_configs\": [\n                {\n                  \"service\": \"allServices\"\n                  \"audit_log_configs\": [\n                    {\n                      \"log_type\": \"DATA_READ\",\n                      \"exempted_members\": [\n                        \"user:jose@example.com\"\n                      ]\n                    },\n                    {\n                      \"log_type\": \"DATA_WRITE\",\n                    },\n                    {\n                      \"log_type\": \"ADMIN_READ\",\n                    }\n                  ]\n                },\n                {\n                  \"service\": \"sampleservice.googleapis.com\"\n                  \"audit_log_configs\": [\n                    {\n                      \"log_type\": \"DATA_READ\",\n                    },\n                    {\n                      \"log_type\": \"DATA_WRITE\",\n                      \"exempted_members\": [\n                        \"user:aliya@example.com\"\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n\n        For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\n\n        logging. It also exempts jose@example.com from DATA_READ logging, and\n\n        aliya@example.com from DATA_WRITE logging.\n      properties:\n        auditLogConfigs:\n          description: The configuration for logging of each type of permission.\n          items:\n            $ref: \"#/components/schemas/AuditLogConfig\"\n          type: array\n        service:\n          description: |-\n            Specifies a service that will be enabled for audit logging.\n            For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n            `allServices` is a special value that covers all services.\n          type: string\n      type: object\n    AuditLogConfig:\n      description: |-\n        Provides the configuration for logging a type of permissions.\n        Example:\n\n            {\n              \"audit_log_configs\": [\n                {\n                  \"log_type\": \"DATA_READ\",\n                  \"exempted_members\": [\n                    \"user:jose@example.com\"\n                  ]\n                },\n                {\n                  \"log_type\": \"DATA_WRITE\",\n                }\n              ]\n            }\n\n        This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\n        jose@example.com from DATA_READ logging.\n      properties:\n        exemptedMembers:\n          description: |-\n            Specifies the identities that do not cause logging for this type of\n            permission.\n            Follows the same format of Binding.members.\n          items:\n            type: string\n          type: array\n        logType:\n          description: The log type that this config enables.\n          enum:\n            - LOG_TYPE_UNSPECIFIED\n            - ADMIN_READ\n            - DATA_WRITE\n            - DATA_READ\n          type: string\n      type: object\n    BatchGetAssetsHistoryResponse:\n      description: Batch get assets history response.\n      properties:\n        assets:\n          description: A list of assets with valid time windows.\n          items:\n            $ref: \"#/components/schemas/TemporalAsset\"\n          type: array\n      type: object\n    BigQueryDestination:\n      description: A BigQuery destination.\n      properties:\n        dataset:\n          description: \u003e-\n            Required. The BigQuery dataset in format\n\n            \"projects/projectId/datasets/datasetId\", to which the snapshot result\n\n            should be exported. If this dataset does not exist, the export call returns\n\n            an error.\n          type: string\n        force:\n          description: \u003e-\n            If the destination table already exists and this flag is `TRUE`, the\n\n            table will be overwritten by the contents of assets snapshot. If the flag\n\n            is not set and the destination table already exists, the export call\n\n            returns an error.\n          type: boolean\n        table:\n          description: \u003e-\n            Required. The BigQuery table to which the snapshot result should be\n\n            written. If this table does not exist, a new table with the given name\n\n            will be created.\n          type: string\n      type: object\n    Binding:\n      description: Associates `members` with a `role`.\n      properties:\n        condition:\n          $ref: \"#/components/schemas/Expr\"\n        members:\n          description: \u003e+\n            Specifies the identities requesting access for a Cloud Platform\n            resource.\n\n            `members` can have the following values:\n\n\n            * `allUsers`: A special identifier that represents anyone who is\n               on the internet; with or without a Google account.\n\n            * `allAuthenticatedUsers`: A special identifier that represents anyone\n               who is authenticated with a Google account or a service account.\n\n            * `user:{emailid}`: An email address that represents a specific Google\n               account. For example, `alice@example.com` .\n\n\n            * `serviceAccount:{emailid}`: An email address that represents a service\n               account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n            * `group:{emailid}`: An email address that represents a Google group.\n               For example, `admins@example.com`.\n\n\n            * `domain:{domain}`: The G Suite domain (primary) that represents all the\n               users of that domain. For example, `google.com` or `example.com`.\n\n          items:\n            type: string\n          type: array\n        role:\n          description: |-\n            Role that is assigned to `members`.\n            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.\n          type: string\n      type: object\n    ExportAssetsRequest:\n      description: Export asset request.\n      properties:\n        assetTypes:\n          description: \u003e-\n            A list of asset types of which to take a snapshot for. For example:\n\n            \"compute.googleapis.com/Disk\". If specified, only matching assets will be\n\n            returned. See [Introduction to Cloud Asset\n\n            Inventory](https://cloud.google.com/resource-manager/docs/cloud-asset-inventory/overview)\n\n            for all supported asset types.\n          items:\n            type: string\n          type: array\n        contentType:\n          description: \u003e-\n            Asset content type. If not specified, no content but the asset name\n            will be\n\n            returned.\n          enum:\n            - CONTENT_TYPE_UNSPECIFIED\n            - RESOURCE\n            - IAM_POLICY\n            - ORG_POLICY\n            - ACCESS_POLICY\n          type: string\n        outputConfig:\n          $ref: \"#/components/schemas/OutputConfig\"\n        readTime:\n          description: \u003e-\n            Timestamp to take an asset snapshot. This can only be set to a\n            timestamp\n\n            between 2018-10-02 UTC (inclusive) and the current time. If not specified,\n\n            the current time will be used. Due to delays in resource data collection\n\n            and indexing, there is a volatile window during which running the same\n\n            query may get different results.\n          format: google-datetime\n          type: string\n      type: object\n    Expr:\n      description: |-\n        Represents an expression text. Example:\n\n            title: \"User account presence\"\n            description: \"Determines whether the request has a user account\"\n            expression: \"size(request.user) \u003e 0\"\n      properties:\n        description:\n          description: \u003e-\n            An optional description of the expression. This is a longer text\n            which\n\n            describes the expression, e.g. when hovered over it in a UI.\n          type: string\n        expression:\n          description: |-\n            Textual representation of an expression in\n            Common Expression Language syntax.\n\n            The application context of the containing message determines which\n            well-known feature set of CEL is supported.\n          type: string\n        location:\n          description: \u003e-\n            An optional string indicating the location of the expression for\n            error\n\n            reporting, e.g. a file name and a position in the file.\n          type: string\n        title:\n          description: |-\n            An optional title for the expression, i.e. a short string describing\n            its purpose. This can be used e.g. in UIs which allow to enter the\n            expression.\n          type: string\n      type: object\n    GcsDestination:\n      description: A Cloud Storage location.\n      properties:\n        uri:\n          description: \u003e-\n            The uri of the Cloud Storage object. It's the same uri that is used\n            by\n\n            gsutil. For example: \"gs://bucket_name/object_name\". See [Viewing and\n\n            Editing Object\n\n            Metadata](https://cloud.google.com/storage/docs/viewing-editing-metadata)\n\n            for more information.\n          type: string\n        uriPrefix:\n          description: \u003e-\n            The uri prefix of all generated Cloud Storage objects. For example:\n\n            \"gs://bucket_name/object_name_prefix\". Each object uri is in format:\n\n            \"gs://bucket_name/object_name_prefix/\u003casset type\u003e/\u003cshard number\u003e and only\n\n            contains assets for that type. \u003cshard number\u003e starts from 0. For example:\n\n            \"gs://bucket_name/object_name_prefix/compute.googleapis.com/Disk/0\" is\n\n            the first shard of output objects containing all\n\n            compute.googleapis.com/Disk assets. An INVALID_ARGUMENT error will be\n\n            returned if file with the same name \"gs://bucket_name/object_name_prefix\"\n\n            already exists.\n          type: string\n      type: object\n    GoogleCloudOrgpolicyV1BooleanPolicy:\n      description: \u003e-\n        Used in `policy_type` to specify how `boolean_policy` will behave at\n        this\n\n        resource.\n      properties:\n        enforced:\n          description: \u003e-\n            If `true`, then the `Policy` is enforced. If `false`, then any\n\n            configuration is acceptable.\n\n\n            Suppose you have a `Constraint`\n\n            `constraints/compute.disableSerialPortAccess` with `constraint_default`\n\n            set to `ALLOW`. A `Policy` for that `Constraint` exhibits the following\n\n            behavior:\n              - If the `Policy` at this resource has enforced set to `false`, serial\n                port connection attempts will be allowed.\n              - If the `Policy` at this resource has enforced set to `true`, serial\n                port connection attempts will be refused.\n              - If the `Policy` at this resource is `RestoreDefault`, serial port\n                connection attempts will be allowed.\n              - If no `Policy` is set at this resource or anywhere higher in the\n                resource hierarchy, serial port connection attempts will be allowed.\n              - If no `Policy` is set at this resource, but one exists higher in the\n                resource hierarchy, the behavior is as if the`Policy` were set at\n                this resource.\n\n            The following examples demonstrate the different possible layerings:\n\n\n            Example 1 (nearest `Constraint` wins):\n              `organizations/foo` has a `Policy` with:\n                {enforced: false}\n              `projects/bar` has no `Policy` set.\n            The constraint at `projects/bar` and `organizations/foo` will not be\n\n            enforced.\n\n\n            Example 2 (enforcement gets replaced):\n              `organizations/foo` has a `Policy` with:\n                {enforced: false}\n              `projects/bar` has a `Policy` with:\n                {enforced: true}\n            The constraint at `organizations/foo` is not enforced.\n\n            The constraint at `projects/bar` is enforced.\n\n\n            Example 3 (RestoreDefault):\n              `organizations/foo` has a `Policy` with:\n                {enforced: true}\n              `projects/bar` has a `Policy` with:\n                {RestoreDefault: {}}\n            The constraint at `organizations/foo` is enforced.\n\n            The constraint at `projects/bar` is not enforced, because\n\n            `constraint_default` for the `Constraint` is `ALLOW`.\n          type: boolean\n      type: object\n    GoogleCloudOrgpolicyV1ListPolicy:\n      description: \u003e-\n        Used in `policy_type` to specify how `list_policy` behaves at this\n\n        resource.\n\n\n        `ListPolicy` can define specific values and subtrees of Cloud Resource\n\n        Manager resource hierarchy (`Organizations`, `Folders`, `Projects`) that\n\n        are allowed or denied by setting the `allowed_values` and `denied_values`\n\n        fields. This is achieved by using the `under:` and optional `is:` prefixes.\n\n        The `under:` prefix is used to denote resource subtree values.\n\n        The `is:` prefix is used to denote specific values, and is required only\n\n        if the value contains a \":\". Values prefixed with \"is:\" are treated the\n\n        same as values with no prefix.\n\n        Ancestry subtrees must be in one of the following formats:\n            - “projects/\u003cproject-id\u003e”, e.g. “projects/tokyo-rain-123”\n            - “folders/\u003cfolder-id\u003e”, e.g. “folders/1234”\n            - “organizations/\u003corganization-id\u003e”, e.g. “organizations/1234”\n        The `supports_under` field of the associated `Constraint`  defines whether\n\n        ancestry prefixes can be used. You can set `allowed_values` and\n\n        `denied_values` in the same `Policy` if `all_values` is\n\n        `ALL_VALUES_UNSPECIFIED`. `ALLOW` or `DENY` are used to allow or deny all\n\n        values. If `all_values` is set to either `ALLOW` or `DENY`,\n\n        `allowed_values` and `denied_values` must be unset.\n      properties:\n        allValues:\n          description: The policy all_values state.\n          enum:\n            - ALL_VALUES_UNSPECIFIED\n            - ALLOW\n            - DENY\n          type: string\n        allowedValues:\n          description: \u003e-\n            List of values allowed  at this resource. Can only be set if\n            `all_values`\n\n            is set to `ALL_VALUES_UNSPECIFIED`.\n          items:\n            type: string\n          type: array\n        deniedValues:\n          description: \u003e-\n            List of values denied at this resource. Can only be set if\n            `all_values`\n\n            is set to `ALL_VALUES_UNSPECIFIED`.\n          items:\n            type: string\n          type: array\n        inheritFromParent:\n          description: \u003e-\n            Determines the inheritance behavior for this `Policy`.\n\n\n            By default, a `ListPolicy` set at a resource supercedes any `Policy` set\n\n            anywhere up the resource hierarchy. However, if `inherit_from_parent` is\n\n            set to `true`, then the values from the effective `Policy` of the parent\n\n            resource are inherited, meaning the values set in this `Policy` are\n\n            added to the values inherited up the hierarchy.\n\n\n            Setting `Policy` hierarchies that inherit both allowed values and denied\n\n            values isn't recommended in most circumstances to keep the configuration\n\n            simple and understandable. However, it is possible to set a `Policy` with\n\n            `allowed_values` set that inherits a `Policy` with `denied_values` set.\n\n            In this case, the values that are allowed must be in `allowed_values` and\n\n            not present in `denied_values`.\n\n\n            For example, suppose you have a `Constraint`\n\n            `constraints/serviceuser.services`, which has a `constraint_type` of\n\n            `list_constraint`, and with `constraint_default` set to `ALLOW`.\n\n            Suppose that at the Organization level, a `Policy` is applied that\n\n            restricts the allowed API activations to {`E1`, `E2`}. Then, if a\n\n            `Policy` is applied to a project below the Organization that has\n\n            `inherit_from_parent` set to `false` and field all_values set to DENY,\n\n            then an attempt to activate any API will be denied.\n\n\n            The following examples demonstrate different possible layerings for\n\n            `projects/bar` parented by `organizations/foo`:\n\n\n            Example 1 (no inherited values):\n              `organizations/foo` has a `Policy` with values:\n                {allowed_values: “E1” allowed_values:”E2”}\n              `projects/bar` has `inherit_from_parent` `false` and values:\n                {allowed_values: \"E3\" allowed_values: \"E4\"}\n            The accepted values at `organizations/foo` are `E1`, `E2`.\n\n            The accepted values at `projects/bar` are `E3`, and `E4`.\n\n\n            Example 2 (inherited values):\n              `organizations/foo` has a `Policy` with values:\n                {allowed_values: “E1” allowed_values:”E2”}\n              `projects/bar` has a `Policy` with values:\n                {value: “E3” value: ”E4” inherit_from_parent: true}\n            The accepted values at `organizations/foo` are `E1`, `E2`.\n\n            The accepted values at `projects/bar` are `E1`, `E2`, `E3`, and `E4`.\n\n\n            Example 3 (inheriting both allowed and denied values):\n              `organizations/foo` has a `Policy` with values:\n                {allowed_values: \"E1\" allowed_values: \"E2\"}\n              `projects/bar` has a `Policy` with:\n                {denied_values: \"E1\"}\n            The accepted values at `organizations/foo` are `E1`, `E2`.\n\n            The value accepted at `projects/bar` is `E2`.\n\n\n            Example 4 (RestoreDefault):\n              `organizations/foo` has a `Policy` with values:\n                {allowed_values: “E1” allowed_values:”E2”}\n              `projects/bar` has a `Policy` with values:\n                {RestoreDefault: {}}\n            The accepted values at `organizations/foo` are `E1`, `E2`.\n\n            The accepted values at `projects/bar` are either all or none depending on\n\n            the value of `constraint_default` (if `ALLOW`, all; if\n\n            `DENY`, none).\n\n\n            Example 5 (no policy inherits parent policy):\n              `organizations/foo` has no `Policy` set.\n              `projects/bar` has no `Policy` set.\n            The accepted values at both levels are either all or none depending on\n\n            the value of `constraint_default` (if `ALLOW`, all; if\n\n            `DENY`, none).\n\n\n            Example 6 (ListConstraint allowing all):\n              `organizations/foo` has a `Policy` with values:\n                {allowed_values: “E1” allowed_values: ”E2”}\n              `projects/bar` has a `Policy` with:\n                {all: ALLOW}\n            The accepted values at `organizations/foo` are `E1`, E2`.\n\n            Any value is accepted at `projects/bar`.\n\n\n            Example 7 (ListConstraint allowing none):\n              `organizations/foo` has a `Policy` with values:\n                {allowed_values: “E1” allowed_values: ”E2”}\n              `projects/bar` has a `Policy` with:\n                {all: DENY}\n            The accepted values at `organizations/foo` are `E1`, E2`.\n\n            No value is accepted at `projects/bar`.\n\n\n            Example 10 (allowed and denied subtrees of Resource Manager hierarchy):\n\n            Given the following resource hierarchy\n              O1-\u003e{F1, F2}; F1-\u003e{P1}; F2-\u003e{P2, P3},\n              `organizations/foo` has a `Policy` with values:\n                {allowed_values: \"under:organizations/O1\"}\n              `projects/bar` has a `Policy` with:\n                {allowed_values: \"under:projects/P3\"}\n                {denied_values: \"under:folders/F2\"}\n            The accepted values at `organizations/foo` are `organizations/O1`,\n              `folders/F1`, `folders/F2`, `projects/P1`, `projects/P2`,\n              `projects/P3`.\n            The accepted values at `projects/bar` are `organizations/O1`,\n              `folders/F1`, `projects/P1`.\n          type: boolean\n        suggestedValue:\n          description: \u003e-\n            Optional. The Google Cloud Console will try to default to a\n            configuration\n\n            that matches the value specified in this `Policy`. If `suggested_value`\n\n            is not set, it will inherit the value specified higher in the hierarchy,\n\n            unless `inherit_from_parent` is `false`.\n          type: string\n      type: object\n    GoogleCloudOrgpolicyV1Policy:\n      description: \u003e-\n        Defines a Cloud Organization `Policy` which is used to specify\n        `Constraints`\n\n        for configurations of Cloud Platform resources.\n      properties:\n        booleanPolicy:\n          $ref: \"#/components/schemas/GoogleCloudOrgpolicyV1BooleanPolicy\"\n        constraint:\n          description: \u003e-\n            The name of the `Constraint` the `Policy` is configuring, for\n            example,\n\n            `constraints/serviceuser.services`.\n\n\n            Immutable after creation.\n          type: string\n        etag:\n          description: \u003e-\n            An opaque tag indicating the current version of the `Policy`, used\n            for\n\n            concurrency control.\n\n\n            When the `Policy` is returned from either a `GetPolicy` or a\n\n            `ListOrgPolicy` request, this `etag` indicates the version of the current\n\n            `Policy` to use when executing a read-modify-write loop.\n\n\n            When the `Policy` is returned from a `GetEffectivePolicy` request, the\n\n            `etag` will be unset.\n\n\n            When the `Policy` is used in a `SetOrgPolicy` method, use the `etag` value\n\n            that was returned from a `GetOrgPolicy` request as part of a\n\n            read-modify-write loop for concurrency control. Not setting the `etag`in a\n\n            `SetOrgPolicy` request will result in an unconditional write of the\n\n            `Policy`.\n          format: byte\n          type: string\n        listPolicy:\n          $ref: \"#/components/schemas/GoogleCloudOrgpolicyV1ListPolicy\"\n        restoreDefault:\n          $ref: \"#/components/schemas/GoogleCloudOrgpolicyV1RestoreDefault\"\n        updateTime:\n          description: \u003e-\n            The time stamp the `Policy` was previously updated. This is set by\n            the\n\n            server, not specified by the caller, and represents the last time a call to\n\n            `SetOrgPolicy` was made for that `Policy`. Any value set by the client will\n\n            be ignored.\n          format: google-datetime\n          type: string\n        version:\n          description: Version of the `Policy`. Default version is 0;\n          format: int32\n          type: integer\n      type: object\n    GoogleCloudOrgpolicyV1RestoreDefault:\n      description: \u003e-\n        Ignores policies set above this resource and restores the\n\n        `constraint_default` enforcement behavior of the specific `Constraint` at\n\n        this resource.\n\n\n        Suppose that `constraint_default` is set to `ALLOW` for the\n\n        `Constraint` `constraints/serviceuser.services`. Suppose that organization\n\n        foo.com sets a `Policy` at their Organization resource node that restricts\n\n        the allowed service activations to deny all service activations. They\n\n        could then set a `Policy` with the `policy_type` `restore_default` on\n\n        several experimental projects, restoring the `constraint_default`\n\n        enforcement of the `Constraint` for only those projects, allowing those\n\n        projects to have all services activated.\n      properties: {}\n      type: object\n    GoogleIdentityAccesscontextmanagerV1AccessLevel:\n      description: \u003e-\n        An `AccessLevel` is a label that can be applied to requests to GCP\n        services,\n\n        along with a list of requirements necessary for the label to be applied.\n      properties:\n        basic:\n          $ref: \"#/components/schemas/GoogleIdentityAccesscontextmanagerV1BasicLevel\"\n        createTime:\n          description: Output only. Time the `AccessLevel` was created in UTC.\n          format: google-datetime\n          type: string\n        description:\n          description: Description of the `AccessLevel` and its use. Does not affect\n            behavior.\n          type: string\n        name:\n          description: \u003e-\n            Required. Resource name for the Access Level. The `short_name`\n            component\n\n            must begin with a letter and only include alphanumeric and '_'. Format:\n\n            `accessPolicies/{policy_id}/accessLevels/{short_name}`\n          type: string\n        title:\n          description: Human readable title. Must be unique within the Policy.\n          type: string\n        updateTime:\n          description: Output only. Time the `AccessLevel` was updated in UTC.\n          format: google-datetime\n          type: string\n      type: object\n    GoogleIdentityAccesscontextmanagerV1AccessPolicy:\n      description: \u003e-\n        `AccessPolicy` is a container for `AccessLevels` (which define the\n        necessary\n\n        attributes to use GCP services) and `ServicePerimeters` (which define regions\n\n        of services able to freely pass data within a perimeter). An access policy is\n\n        globally visible within an organization, and the restrictions it specifies\n\n        apply to all projects within an organization.\n      properties:\n        createTime:\n          description: Output only. Time the `AccessPolicy` was created in UTC.\n          format: google-datetime\n          type: string\n        name:\n          description: |-\n            Output only. Resource name of the `AccessPolicy`. Format:\n            `accessPolicies/{policy_id}`\n          type: string\n        parent:\n          description: |-\n            Required. The parent of this `AccessPolicy` in the Cloud Resource\n            Hierarchy. Currently immutable once created. Format:\n            `organizations/{organization_id}`\n          type: string\n        title:\n          description: Required. Human readable title. Does not affect behavior.\n          type: string\n        updateTime:\n          description: Output only. Time the `AccessPolicy` was updated in UTC.\n          format: google-datetime\n          type: string\n      type: object\n    GoogleIdentityAccesscontextmanagerV1BasicLevel:\n      description: \"`BasicLevel` is an `AccessLevel` using a set of recommended features.\"\n      properties:\n        combiningFunction:\n          description: \u003e-\n            How the `conditions` list should be combined to determine if a\n            request is\n\n            granted this `AccessLevel`. If AND is used, each `Condition` in\n\n            `conditions` must be satisfied for the `AccessLevel` to be applied. If OR\n\n            is used, at least one `Condition` in `conditions` must be satisfied for the\n\n            `AccessLevel` to be applied. Default behavior is AND.\n          enum:\n            - AND\n            - OR\n          type: string\n        conditions:\n          description: Required. A list of requirements for the `AccessLevel` to be granted.\n          items:\n            $ref: \"#/components/schemas/GoogleIdentityAccesscontextmanagerV1Conditi\\\n              on\"\n          type: array\n      type: object\n    GoogleIdentityAccesscontextmanagerV1Condition:\n      description: \u003e-\n        A condition necessary for an `AccessLevel` to be granted. The Condition\n        is an\n\n        AND over its fields. So a Condition is true if: 1) the request IP is from one\n\n        of the listed subnetworks AND 2) the originating device complies with the\n\n        listed device policy AND 3) all listed access levels are granted AND 4) the\n\n        request was sent at a time allowed by the DateTimeRestriction.\n      properties:\n        devicePolicy:\n          $ref: \"#/components/schemas/GoogleIdentityAccesscontextmanagerV1DevicePol\\\n            icy\"\n        ipSubnetworks:\n          description: \u003e-\n            CIDR block IP subnetwork specification. May be IPv4 or IPv6. Note\n            that for\n\n            a CIDR IP address block, the specified IP address portion must be properly\n\n            truncated (i.e. all the host bits must be zero) or the input is considered\n\n            malformed. For example, \"192.0.2.0/24\" is accepted but \"192.0.2.1/24\" is\n\n            not. Similarly, for IPv6, \"2001:db8::/32\" is accepted whereas\n\n            \"2001:db8::1/32\" is not. The originating IP of a request must be in one of\n\n            the listed subnets in order for this Condition to be true. If empty, all IP\n\n            addresses are allowed.\n          items:\n            type: string\n          type: array\n        members:\n          description: |-\n            The request must be made by one of the provided user or service\n            accounts. Groups are not supported.\n            Syntax:\n            `user:{emailid}`\n            `serviceAccount:{emailid}`\n            If not specified, a request may come from any user.\n          items:\n            type: string\n          type: array\n        negate:\n          description: \u003e-\n            Whether to negate the Condition. If true, the Condition becomes a\n            NAND over\n\n            its non-empty fields, each field must be false for the Condition overall to\n\n            be satisfied. Defaults to false.\n          type: boolean\n        regions:\n          description: \u003e-\n            The request must originate from one of the provided\n            countries/regions.\n\n            Must be valid ISO 3166-1 alpha-2 codes.\n          items:\n            type: string\n          type: array\n        requiredAccessLevels:\n          description: \u003e-\n            A list of other access levels defined in the same `Policy`,\n            referenced by\n\n            resource name. Referencing an `AccessLevel` which does not exist is an\n\n            error. All access levels listed must be granted for the Condition\n\n            to be true. Example:\n\n            \"`accessPolicies/MY_POLICY/accessLevels/LEVEL_NAME\"`\n          items:\n            type: string\n          type: array\n      type: object\n    GoogleIdentityAccesscontextmanagerV1DevicePolicy:\n      description: \u003e-\n        `DevicePolicy` specifies device specific restrictions necessary to\n        acquire a\n\n        given access level. A `DevicePolicy` specifies requirements for requests from\n\n        devices to be granted access levels, it does not do any enforcement on the\n\n        device. `DevicePolicy` acts as an AND over all specified fields, and each\n\n        repeated field is an OR over its elements. Any unset fields are ignored. For\n\n        example, if the proto is { os_type : DESKTOP_WINDOWS, os_type :\n\n        DESKTOP_LINUX, encryption_status: ENCRYPTED}, then the DevicePolicy will be\n\n        true for requests originating from encrypted Linux desktops and encrypted\n\n        Windows desktops.\n      properties:\n        allowedDeviceManagementLevels:\n          description: \u003e-\n            Allowed device management levels, an empty list allows all\n            management\n\n            levels.\n          items:\n            enum:\n              - MANAGEMENT_UNSPECIFIED\n              - NONE\n              - BASIC\n              - COMPLETE\n            type: string\n          type: array\n        allowedEncryptionStatuses:\n          description: Allowed encryptions statuses, an empty list allows all statuses.\n          items:\n            enum:\n              - ENCRYPTION_UNSPECIFIED\n              - ENCRYPTION_UNSUPPORTED\n              - UNENCRYPTED\n              - ENCRYPTED\n            type: string\n          type: array\n        osConstraints:\n          description: Allowed OS versions, an empty list allows all types and all versions.\n          items:\n            $ref: \"#/components/schemas/GoogleIdentityAccesscontextmanagerV1OsConst\\\n              raint\"\n          type: array\n        requireAdminApproval:\n          description: Whether the device needs to be approved by the customer admin.\n          type: boolean\n        requireCorpOwned:\n          description: Whether the device needs to be corp owned.\n          type: boolean\n        requireScreenlock:\n          description: \u003e-\n            Whether or not screenlock is required for the DevicePolicy to be\n            true.\n\n            Defaults to `false`.\n          type: boolean\n      type: object\n    GoogleIdentityAccesscontextmanagerV1OsConstraint:\n      description: A restriction on the OS type and version of devices making requests.\n      properties:\n        minimumVersion:\n          description: |-\n            The minimum allowed OS version. If not set, any version of this OS\n            satisfies the constraint. Format: `\"major.minor.patch\"`.\n            Examples: `\"10.5.301\"`, `\"9.2.1\"`.\n          type: string\n        osType:\n          description: Required. The allowed OS type.\n          enum:\n            - OS_UNSPECIFIED\n            - DESKTOP_MAC\n            - DESKTOP_WINDOWS\n            - DESKTOP_LINUX\n            - DESKTOP_CHROME_OS\n          type: string\n        requireVerifiedChromeOs:\n          description: \u003e-\n            Only allows requests from devices with a verified Chrome OS.\n\n            Verifications includes requirements that the device is enterprise-managed,\n\n            conformant to Dasher domain policies, and the caller has permission to call\n\n            the API targeted by the request.\n          type: boolean\n      type: object\n    GoogleIdentityAccesscontextmanagerV1ServicePerimeter:\n      description: \u003e-\n        `ServicePerimeter` describes a set of GCP resources which can freely\n        import\n\n        and export data amongst themselves, but not export outside of the\n\n        `ServicePerimeter`. If a request with a source within this `ServicePerimeter`\n\n        has a target outside of the `ServicePerimeter`, the request will be blocked.\n\n        Otherwise the request is allowed. There are two types of Service Perimeter -\n\n        Regular and Bridge. Regular Service Perimeters cannot overlap, a single GCP\n\n        project can only belong to a single regular Service Perimeter. Service\n\n        Perimeter Bridges can contain only GCP projects as members, a single GCP\n\n        project may belong to multiple Service Perimeter Bridges.\n      properties:\n        createTime:\n          description: Output only. Time the `ServicePerimeter` was created in UTC.\n          format: google-datetime\n          type: string\n        description:\n          description: |-\n            Description of the `ServicePerimeter` and its use. Does not affect\n            behavior.\n          type: string\n        name:\n          description: \u003e-\n            Required. Resource name for the ServicePerimeter.  The `short_name`\n\n            component must begin with a letter and only include alphanumeric and '_'.\n\n            Format: `accessPolicies/{policy_id}/servicePerimeters/{short_name}`\n          type: string\n        perimeterType:\n          description: \u003e-\n            Perimeter type indicator. A single project is\n\n            allowed to be a member of single regular perimeter, but multiple service\n\n            perimeter bridges. A project cannot be a included in a perimeter bridge\n\n            without being included in regular perimeter. For perimeter bridges,\n\n            the restricted service list as well as access level lists must be\n\n            empty.\n          enum:\n            - PERIMETER_TYPE_REGULAR\n            - PERIMETER_TYPE_BRIDGE\n          type: string\n        status:\n          $ref: \"#/components/schemas/GoogleIdentityAccesscontextmanagerV1ServicePe\\\n            rimeterConfig\"\n        title:\n          description: Human readable title. Must be unique within the Policy.\n          type: string\n        updateTime:\n          description: Output only. Time the `ServicePerimeter` was updated in UTC.\n          format: google-datetime\n          type: string\n      type: object\n    GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig:\n      description: |-\n        `ServicePerimeterConfig` specifies a set of GCP resources that describe\n        specific Service Perimeter configuration.\n      properties:\n        accessLevels:\n          description: \u003e-\n            A list of `AccessLevel` resource names that allow resources within\n            the\n\n            `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed\n\n            must be in the same policy as this `ServicePerimeter`. Referencing a\n\n            nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are\n\n            listed, resources within the perimeter can only be accessed via GCP calls\n\n            with request origins within the perimeter. Example:\n\n            `\"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL\"`.\n\n            For Service Perimeter Bridge, must be empty.\n          items:\n            type: string\n          type: array\n        resources:\n          description: \u003e-\n            A list of GCP resources that are inside of the service perimeter.\n\n            Currently only projects are allowed. Format: `projects/{project_number}`\n          items:\n            type: string\n          type: array\n        restrictedServices:\n          description: \u003e-\n            GCP services that are subject to the Service Perimeter restrictions.\n            For\n\n            example, if `storage.googleapis.com` is specified, access to the storage\n\n            buckets inside the perimeter must meet the perimeter's access restrictions.\n          items:\n            type: string\n          type: array\n      type: object\n    Operation:\n      description: \u003e-\n        This resource represents a long-running operation that is the result of\n        a\n\n        network API call.\n      properties:\n        done:\n          description: \u003e-\n            If the value is `false`, it means the operation is still in\n            progress.\n\n            If `true`, the operation is completed, and either `error` or `response` is\n\n            available.\n          type: boolean\n        error:\n          $ref: \"#/components/schemas/Status\"\n        metadata:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: \u003e-\n            Service-specific metadata associated with the operation.  It\n            typically\n\n            contains progress information and common metadata such as create time.\n\n            Some services might not provide such metadata.  Any method that returns a\n\n            long-running operation should document the metadata type, if any.\n          type: object\n        name:\n          description: \u003e-\n            The server-assigned name, which is only unique within the same\n            service that\n\n            originally returns it. If you use the default HTTP mapping, the\n\n            `name` should be a resource name ending with `operations/{unique_id}`.\n          type: string\n        response:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: \u003e-\n            The normal response of the operation in case of success.  If the\n            original\n\n            method returns no data on success, such as `Delete`, the response is\n\n            `google.protobuf.Empty`.  If the original method is standard\n\n            `Get`/`Create`/`Update`, the response should be the resource.  For other\n\n            methods, the response should have the type `XxxResponse`, where `Xxx`\n\n            is the original method name.  For example, if the original method name\n\n            is `TakeSnapshot()`, the inferred response type is\n\n            `TakeSnapshotResponse`.\n          type: object\n      type: object\n    OutputConfig:\n      description: Output configuration for export assets destination.\n      properties:\n        bigqueryDestination:\n          $ref: \"#/components/schemas/BigQueryDestination\"\n        gcsDestination:\n          $ref: \"#/components/schemas/GcsDestination\"\n      type: object\n    Policy:\n      description: \u003e-\n        Defines an Identity and Access Management (IAM) policy. It is used to\n\n        specify access control policies for Cloud Platform resources.\n\n\n\n        A `Policy` is a collection of `bindings`. A `binding` binds one or more\n\n        `members` to a single `role`. Members can be user accounts, service accounts,\n\n        Google groups, and domains (such as G Suite). A `role` is a named list of\n\n        permissions (defined by IAM or configured by users). A `binding` can\n\n        optionally specify a `condition`, which is a logic expression that further\n\n        constrains the role binding based on attributes about the request and/or\n\n        target resource.\n\n\n        **JSON Example**\n\n            {\n              \"bindings\": [\n                {\n                  \"role\": \"role/resourcemanager.organizationAdmin\",\n                  \"members\": [\n                    \"user:mike@example.com\",\n                    \"group:admins@example.com\",\n                    \"domain:google.com\",\n                    \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n                  ]\n                },\n                {\n                  \"role\": \"roles/resourcemanager.organizationViewer\",\n                  \"members\": [\"user:eve@example.com\"],\n                  \"condition\": {\n                    \"title\": \"expirable access\",\n                    \"description\": \"Does not grant access after Sep 2020\",\n                    \"expression\": \"request.time \u003c\n                    timestamp('2020-10-01T00:00:00.000Z')\",\n                  }\n                }\n              ]\n            }\n\n        **YAML Example**\n\n            bindings:\n            - members:\n              - user:mike@example.com\n              - group:admins@example.com\n              - domain:google.com\n              - serviceAccount:my-project-id@appspot.gserviceaccount.com\n              role: roles/resourcemanager.organizationAdmin\n            - members:\n              - user:eve@example.com\n              role: roles/resourcemanager.organizationViewer\n              condition:\n                title: expirable access\n                description: Does not grant access after Sep 2020\n                expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\n\n        For a description of IAM and its features, see the\n\n        [IAM developer's guide](https://cloud.google.com/iam/docs).\n      properties:\n        auditConfigs:\n          description: Specifies cloud audit logging configuration for this policy.\n          items:\n            $ref: \"#/components/schemas/AuditConfig\"\n          type: array\n        bindings:\n          description: |-\n            Associates a list of `members` to a `role`. Optionally may specify a\n            `condition` that determines when binding is in effect.\n            `bindings` with no members will result in an error.\n          items:\n            $ref: \"#/components/schemas/Binding\"\n          type: array\n        etag:\n          description: \u003e-\n            `etag` is used for optimistic concurrency control as a way to help\n\n            prevent simultaneous updates of a policy from overwriting each other.\n\n            It is strongly suggested that systems make use of the `etag` in the\n\n            read-modify-write cycle to perform policy updates in order to avoid race\n\n            conditions: An `etag` is returned in the response to `getIamPolicy`, and\n\n            systems are expected to put that etag in the request to `setIamPolicy` to\n\n            ensure that their change will be applied to the same version of the policy.\n\n\n            If no `etag` is provided in the call to `setIamPolicy`, then the existing\n\n            policy is overwritten. Due to blind-set semantics of an etag-less policy,\n\n            'setIamPolicy' will not fail even if either of incoming or stored policy\n\n            does not meet the version requirements.\n          format: byte\n          type: string\n        version:\n          description: \u003e-\n            Specifies the format of the policy.\n\n\n            Valid values are 0, 1, and 3. Requests specifying an invalid value will be\n\n            rejected.\n\n\n            Operations affecting conditional bindings must specify version 3. This can\n\n            be either setting a conditional policy, modifying a conditional binding,\n\n            or removing a conditional binding from the stored conditional policy.\n\n            Operations on non-conditional policies may specify any valid value or\n\n            leave the field unset.\n\n\n            If no etag is provided in the call to `setIamPolicy`, any version\n\n            compliance checks on the incoming and/or stored policy is skipped.\n          format: int32\n          type: integer\n      type: object\n    Resource:\n      description: Representation of a cloud resource.\n      properties:\n        data:\n          additionalProperties:\n            description: Properties of the object.\n          description: \u003e-\n            The content of the resource, in which some sensitive fields are\n            scrubbed\n\n            away and may not be present.\n          type: object\n        discoveryDocumentUri:\n          description: \u003e-\n            The URL of the discovery document containing the resource's JSON\n            schema.\n\n            For example:\n\n            `\"https://www.googleapis.com/discovery/v1/apis/compute/v1/rest\"`.\n\n            It will be left unspecified for resources without a discovery-based API,\n\n            such as Cloud Bigtable.\n          type: string\n        discoveryName:\n          description: \u003e-\n            The JSON schema name listed in the discovery document.\n\n            Example: \"Project\". It will be left unspecified for resources (such as\n\n            Cloud Bigtable) without a discovery-based API.\n          type: string\n        parent:\n          description: \u003e-\n            The full name of the immediate parent of this resource. See\n\n            [Resource\n\n            Names](https://cloud.google.com/apis/design/resource_names#full_resource_name)\n\n            for more information.\n\n\n            For GCP assets, it is the parent resource defined in the [Cloud IAM policy\n\n            hierarchy](https://cloud.google.com/iam/docs/overview#policy_hierarchy).\n\n            For example:\n\n            `\"//cloudresourcemanager.googleapis.com/projects/my_project_123\"`.\n\n\n            For third-party assets, it is up to the users to define.\n          type: string\n        resourceUrl:\n          description: \u003e-\n            The REST URL for accessing the resource. An HTTP GET operation using\n            this\n\n            URL returns the resource itself.\n\n            Example:\n\n            `https://cloudresourcemanager.googleapis.com/v1/projects/my-project-123`.\n\n            It will be left unspecified for resources without a REST API.\n          type: string\n        version:\n          description: 'The API version. Example: \"v1\".'\n          type: string\n      type: object\n    Status:\n      description: \u003e-\n        The `Status` type defines a logical error model that is suitable for\n\n        different programming environments, including REST APIs and RPC APIs. It is\n\n        used by [gRPC](https://github.com/grpc). Each `Status` message contains\n\n        three pieces of data: error code, error message, and error details.\n\n\n        You can find out more about this error model and how to work with it in the\n\n        [API Design Guide](https://cloud.google.com/apis/design/errors).\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: \u003e-\n            A list of messages that carry the error details.  There is a common\n            set of\n\n            message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        message:\n          description: |-\n            A developer-facing error message, which should be in English. Any\n            user-facing error message should be localized and sent in the\n            google.rpc.Status.details field, or localized by the client.\n          type: string\n      type: object\n    TemporalAsset:\n      description: \u003e-\n        Temporal asset. In addition to the asset, the temporal asset includes\n        the\n\n        status of the asset and valid from and to time of it.\n      properties:\n        asset:\n          $ref: \"#/components/schemas/Asset\"\n        deleted:\n          description: If the asset is deleted or not.\n          type: boolean\n        window:\n          $ref: \"#/components/schemas/TimeWindow\"\n      type: object\n    TimeWindow:\n      description: A time window of (start_time, end_time].\n      properties:\n        endTime:\n          description: |-\n            End time of the time window (inclusive).\n            Current timestamp if not specified.\n          format: google-datetime\n          type: string\n        startTime:\n          description: Start time of the time window (exclusive).\n          format: google-datetime\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-cloudasset-v1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-cloudasset-v1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/{name}\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}