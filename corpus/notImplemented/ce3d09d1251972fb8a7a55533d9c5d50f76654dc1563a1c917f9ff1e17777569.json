{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/K8s-api-operator"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "scenarios/scenario-1-target-endpoint/swagger.yaml",
			"byteSize": 4626,
			"content": "# Copyright (c) 2021 WSO2 Inc. (http:www.wso2.org) All Rights Reserved.\n#\n# WSO2 Inc. licenses this file to you under the Apache License,\n# Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http:www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nopenapi: 3.0.0\nservers:\n  - description: Localhost\n    url: http://localhost:8080\ninfo:\n  description: This is a sample backend - products\n  version: v1\n  title: Products\n  contact:\n    email: renukapiyumal@gmail.com\ntags:\n  - name: product\n    description: Products of store\nx-wso2-production-endpoints:\n  urls:\n    - http://products\n  type: http\nx-wso2-sandbox-endpoints:\n  urls:\n    - http://products\n  type: http\nx-wso2-basePath: /products-api/v1\npaths:\n  /products:\n    get:\n      tags:\n        - product\n      summary: All Products\n      description: All products of the store\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Product\"\n    post:\n      tags:\n        - product\n      summary: Add Product\n      description: Add new products to the store\n      requestBody:\n        content:\n          applicatoin/json:\n            schema:\n              $ref: \"#/components/schemas/Product\"\n\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n        400:\n          description: Invalid Product\n  /products/{id}:\n    get:\n      tags:\n        - product\n      summary: Find product by ID\n      description: Returns a single product\n      parameters:\n        - name: id\n          in: path\n          description: ID of product to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n            example: 3\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n        400:\n          description: Invalid ID supplied\n        404:\n          description: Product not found\n    put:\n      tags:\n        - product\n      summary: Update product by ID\n      description: Update a product\n      parameters:\n        - name: id\n          in: path\n          description: ID of product to update\n          required: true\n          schema:\n            type: integer\n            format: int64\n            example: 3\n      requestBody:\n        content:\n          applicatoin/json:\n            schema:\n              $ref: \"#/components/schemas/Product\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n        400:\n          description: Invalid ID supplied\n        404:\n          description: Product not found\n    delete:\n      tags:\n        - product\n      summary: Delete product by ID\n      description: Delete a product\n      parameters:\n        - name: id\n          in: path\n          description: ID of product to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n            example: 3\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Result\"\n        400:\n          description: Invalid ID supplied\n        404:\n          description: Product not found\ncomponents:\n  schemas:\n    Product:\n      type: object\n      required:\n        - name\n        - category\n        - price\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 3\n        name:\n          type: string\n          example: ABC Smart TV\n        category:\n          type: string\n          example: Electronics\n        price:\n          type: integer\n          format: int64\n          example: 39999\n    Result:\n      type: object\n      properties:\n        result:\n          type: string\n          example: success\n",
			"canonicalURL": "/github.com/wso2/K8s-api-operator@603f72dbb95104b38ef1e44a7fa3442d6f20e873/-/blob/scenarios/scenario-1-target-endpoint/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/k8s-api-operator/blob/603f72dbb95104b38ef1e44a7fa3442d6f20e873/scenarios/scenario-1-target-endpoint/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/products\": post: requestBody: contents: unsupported content types: [applicatoin/json]",
	"NotImplemented": [
		"unsupported content types"
	]
}