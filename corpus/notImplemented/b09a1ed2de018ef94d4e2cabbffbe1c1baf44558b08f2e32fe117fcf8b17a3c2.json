{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/micromdm/nanomdm"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/openapi.yaml",
			"byteSize": 6932,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.1.0\n  title: NanoMDM API\npaths:\n  /v1/pushcert:\n    put:\n      description: Upload APNs certificate and private key.\n      security:\n        - basicAuth: []\n      requestBody:\n        description: The request body includes the APNs certificate and private key in PEM-encoded format concatenated together *without* any wrapping or container formats like JSON. The private key must *not* be encrypted.\n        required: true\n        content:\n          text/plain:\n            schema:\n              type: string\n            example: |-\n              -----BEGIN CERTIFICATE-----\n              MIIFdjCCBF6gAwIBAgIIZ7SjAeWsGIwwDQYJKoZIhvcNAQELBQAwgYwxQDA+BgNV\n              [..snip..]\n              lL5jy74l8Za59w==\n              -----END CERTIFICATE-----\n              -----BEGIN RSA PRIVATE KEY-----\n              MIIEogIBAAKCAQEAyfyVbzvN3t0RZgemV2YNGByPjIC3nAyMeabAg/xh/RlqS1uY\n              [..snip..]\n              ThmdpyJ76efnVCpgta/av0LZ6S9914MJpw2ff6H2Ou3y54Jy/94=\n              -----END RSA PRIVATE KEY-----\n      responses:\n        '200':\n          description: The \"topic\" (UID attribute) from the uploaded APNs certificate is returned or any errors that occured with the upload and storage.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                  topic:\n                    type: string\n                    description: The \"topic\" (UID attribute) from the uploaded APNs certificate.\n                    example: 'com.apple.mgmt.External.e3b8ceac-1f18-2c8e-8a63-dd17d99435d9'\n        '401':\n           $ref: '#/components/responses/UnauthorizedError'\n        '500':\n          description: Error reading HTTP body from request\n  /v1/push/{id*}:\n    get:\n      description: Send APNs push notifications to MDM enrollments\n      security:\n        - basicAuth: []\n      responses:\n        '200':\n          $ref: '#/components/responses/APIResultOK'\n        '207':\n          $ref: '#/components/responses/APIResultSomeFailed'\n        '500':\n          $ref: '#/components/responses/APIResultAllFailed'\n        '401':\n           $ref: '#/components/responses/UnauthorizedError'\n      parameters:\n        - $ref: '#/components/parameters/idParam'\n  /v1/enqueue/{id*}:\n    put:\n      description: Enqueue MDM commands to MDM enrollments and (optionally) send APNs push notifications\n      security:\n        - basicAuth: []\n      requestBody:\n        description: The request body is an XML-encoded MDM command plist.\n        required: true\n        content:\n          text/plain:\n            # Apple plists can't cleanly be represented in OpenAPI specification so we have to fake the Content-Type as text/plain.\n            schema:\n              type: string\n            example: |-\n              \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n              \u003c!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"\u003e\n              \u003cplist version=\"1.0\"\u003e\n              \u003cdict\u003e\n                \u003ckey\u003eCommand\u003c/key\u003e\n                \u003cdict\u003e\n                  \u003ckey\u003eRequestType\u003c/key\u003e\n                  \u003cstring\u003eProfileList\u003c/string\u003e\n                \u003c/dict\u003e\n                \u003ckey\u003eCommandUUID\u003c/key\u003e\n                \u003cstring\u003efedd659e-fc3c-4e35-8bb1-c8f51ae542a5\u003c/string\u003e\n              \u003c/dict\u003e\n              \u003c/plist\u003e\n      responses:\n        '200':\n          $ref: '#/components/responses/APIResultOK'\n        '207':\n          $ref: '#/components/responses/APIResultSomeFailed'\n        '400':\n          description: Error decoding MDM command plist.\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '500':\n          description:  One of two modes. One mode is an error reading HTTP body from request (which will return no content nor content-type). Otherwise all enqueue requests failed. Returns JSON API response object including errors.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIResult'\n      parameters:\n        - $ref: '#/components/parameters/idParam'\n        - in: query\n          name: nopush\n          schema:\n            type: string\n            example: '1'\n  /version:\n    get:\n      description: Returns the running NanoMDM version\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema: \n                type: object\n                properties: \n                  version:\n                    type: string\n                example:\n                  version: \"v0.1.0\"\ncomponents:\n  parameters:\n    idParam:\n      name: id*\n      in: path\n      description: Enrollment ID(s) of device- or user-channel enrollments. Typically a UUID-looking identifier.\n      required: true\n      explode: true\n      style: simple\n      schema:\n        type: array\n        items:\n          type: string\n        minItems: 1\n        example: ['299BD49-1A0C-422C-B285-2E4FF087C673', 'E2E4A8EB-45EE-488D-B9D7-4CC3B1C40699']\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n  responses:\n    UnauthorizedError:\n      description: API key is missing or invalid.\n      headers:\n        WWW-Authenticate:\n          schema:\n            type: string\n    APIResultOK:\n      description: All requests succeeded. Returns JSON API response object.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/APIResult'\n    APIResultSomeFailed:\n      description: Some requests succeeded and some failed. Returns JSON API response object including errors.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/APIResult'\n    APIResultAllFailed:\n      description:  All requests failed. Returns JSON API response object including errors.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/APIResult'\n  schemas:\n    APIResult:\n      type: object\n      description: foo\n      properties:\n        no_push:\n          type: boolean\n          default: false\n        push_error:\n          type: string\n        command_error:\n          type: string\n        command_uuid:\n          type: string\n          example: 'c7fc0872-f22f-4823-8ae0-f3d0174fb48a'\n          format: uuid\n        request_type:\n          type: string\n        status:\n          type: object\n          properties:\n            $id:\n              type: object\n              properties:\n                push_error:\n                  type: string\n                push_result:\n                  type: string\n                  format: uuid\n                  example: '6E14E52F-7F07-42C7-8367-4D81441DC85F'\n                  description: Push UUID from Apple Push Notification service servers.\n                command_error:\n                  type: string\n",
			"canonicalURL": "/github.com/micromdm/nanomdm@5a0a160c8d89259bdd5feca346c0a9c4a93f95cc/-/blob/docs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/micromdm/nanomdm/blob/5a0a160c8d89259bdd5feca346c0a9c4a93f95cc/docs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/enqueue/{id*}\": put: requestBody: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}