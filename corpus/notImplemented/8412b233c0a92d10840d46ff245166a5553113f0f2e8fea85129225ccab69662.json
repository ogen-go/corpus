{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/identity-api-server"
		},
		"file": {
			"name": "keystore.yaml",
			"size": 0,
			"path": "components/org.wso2.carbon.identity.api.server.keystore.management/org.wso2.carbon.identity.api.server.keystore.management.v1/src/main/resources/keystore.yaml",
			"byteSize": 12804,
			"content": "openapi: 3.0.0\ninfo:\n  description: This is the REST API for Keystore related operations in WSO2 Identity Server.\n  version: \"v1\"\n  title: WSO2 Identity Server - Keystore API\n  contact:\n    name: WSO2 Identity Server\n    url: 'https://wso2.com/identity-and-access-management'\n    email: architecture@wso2.org\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nservers:\n  - url: 'https://localhost:9443/t/{tenant-domain}/api/server/v1'\n    variables:\n      tenant-domain:\n        default: carbon.super\npaths:\n  /keystores/certs:\n    get:\n      tags:\n        - Certificates\n      summary: Retrieves the list of certificate aliases\n      operationId: getCertificateAliases\n      description: |\n        This REST API can be used to get the certificate aliases from the keystore.\u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n          * /permission/admin/manage/identity/keystoremgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n          * internal_keystore_view\n      security:\n        - BasicAuth: []\n        - OAuth2: []\n      parameters:\n        - $ref: '#/components/parameters/filterQueryParam'\n      responses:\n        '200':\n          description: OK.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CertificateResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    post:\n      tags:\n        - Certificates\n      summary: Uploads the certificate with the given alias\n      operationId: uploadCertificate\n      description: |\n        This REST API can be used to upload the certificate to the tenant keystore. This API is not supported for super tenant. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n          * /permission/admin/manage/identity/keystoremgt/update \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n          * internal_keystore_update\n      servers:\n        - url: 'https://localhost:9443/t/wso2.com/api/server/v1'\n      security:\n        - BasicAuth: []\n        - OAuth2: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CertificateRequest'\n      responses:\n        '201':\n          description: Created.\n          headers:\n            Location:\n              description: Certificate\n              schema:\n                type: string\n                format: uri\n                example: https://localhost:9443/t/wso2.com/api/server/v1/keystores/certs/newcert\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /keystores/certs/public:\n    get:\n      tags:\n        - Certificates\n      summary: Retrieves the public certificate\n      operationId: getPublicCertificate\n      description: |\n        This REST API can be used to download the public certificate from the keystore. \u003cbr\u003e\n      security: []\n      parameters:\n        - $ref: '#/components/parameters/encodeCertQueryParam'\n      responses:\n        '200':\n          description: OK.\n          content:\n            application/pkix-cert:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /keystores/certs/{alias}:\n    get:\n      tags:\n        - Certificates\n      summary: retrieves the certificate of the provided alias\n      operationId: getCertificate\n      description: |\n        This REST API can be used to download the certificate from the keystore. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n          * /permission/admin/manage/identity/keystoremgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n          * internal_keystore_view\n      security:\n        - BasicAuth: []\n        - OAuth2: []\n      parameters:\n        - $ref: '#/components/parameters/aliasPathParam'\n        - $ref: '#/components/parameters/encodeCertQueryParam'\n      responses:\n        '200':\n          description: OK.\n          content:\n            application/pkix-cert:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      tags:\n        - Certificates\n      summary: Deletes the certificate\n      operationId: deleteCertificate\n      description: |\n        This REST API can be used to delete the certificate with the given alias from the tenant keystore. This API is not supported for super tenant. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n          * /permission/admin/manage/identity/keystoremgt/update \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n          * internal_keystore_update\n      servers:\n        - url: 'https://localhost:9443/t/wso2.com/api/server/v1'\n      security:\n        - BasicAuth: []\n        - OAuth2: []\n      parameters:\n        - $ref: '#/components/parameters/aliasPathParam'\n      responses:\n        '204':\n          description: Successfully Deleted.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '405':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /keystores/client-certs:\n    get:\n      tags:\n        - Certificates\n      summary: Retrieves the list of certificate aliases from the client truststore\n      operationId: getClientCertificateAliases\n      description: |\n        This REST API can be used to get the list of certificate aliases from the client truststore. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n          * /permission/admin/manage/identity/keystoremgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n          * internal_keystore_view\n      servers:\n        - url: 'https://localhost:9443/t/carbon.super/api/server/v1'\n      security:\n        - BasicAuth: []\n        - OAuth2: []\n      parameters:\n        - $ref: '#/components/parameters/filterQueryParam'\n      responses:\n        '200':\n          description: OK.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CertificateResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /keystores/client-certs/{alias}:\n    get:\n      tags:\n        - Certificates\n      summary: Retrieves the certificate of the provided alias\n      operationId: getClientCertificate\n      description: |\n        This REST API can be used to download the certificate of specified alias from the client-truststore. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n          * /permission/admin/manage/identity/keystoremgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n          * internal_keystore_view\n      servers:\n        - url: 'https://localhost:9443/t/carbon.super/api/server/v1'\n      security:\n        - BasicAuth: []\n        - OAuth2: []\n      parameters:\n        - $ref: '#/components/parameters/aliasPathParam'\n        - $ref: '#/components/parameters/encodeCertQueryParam'\n      responses:\n        '200':\n          description: OK.\n          content:\n            application/pkix-cert:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\ncomponents:\n  parameters:\n    filterQueryParam:\n      in: query\n      name: filter\n      required: false\n      description: Condition to filter the retrieval of records. Supports 'sw', 'co', 'ew' and 'eq' operations.\n                  E.g. keystores/certs?filter=alias+eq+wso2carbon\n      schema:\n        type: string\n    aliasPathParam:\n      in: path\n      name: alias\n      required: true\n      description: alias of the certificate\n      schema:\n        type: string\n    encodeCertQueryParam:\n      in: query\n      name: encode-cert\n      required: false\n      schema:\n        type: boolean\n  responses:\n    BadRequest:\n      description: Bad Request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    Unauthorized:\n      description: Unauthorized.\n    Forbidden:\n      description: Resource Forbidden.\n    NotFound:\n      description: Resource Not Found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    MethodNotAllowed:\n      description: Method Not Allowed.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    ServerError:\n      description: Internal Server Error.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    OAuth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://localhost:9443/oauth2/authorize'\n          tokenUrl: 'https://localhost:9443/oauth2/token'\n          scopes: {}\n  schemas:\n    CertificateResponse:\n      type: object\n      required:\n        - alias\n        - certificate\n      properties:\n        alias:\n          type: string\n          example: wso2carbon\n        certificate:\n          type: string\n          format: uri\n          example: https://localhost:9443/t/carbon.super/api/server/v1/keystores/certs/wso2carbon\n    CertificateRequest:\n      type: object\n      required:\n        - alias\n        - certificate\n      properties:\n        alias:\n          type: string\n          example: newcert\n        certificate:\n          type: string\n          example: 'MIIDADCCAeigAwIBAgIEnRKL8zANBgkqhkiG9w0BAQQFADBCMREwDwYDVQQDDAh3c28yLmNvbTENMAsGA1UECwwETm9uZTEPMA0GA1UECgwGTm9uZSBMMQ0wCwYDVQQGEwROb25lMB4XDTE5MDkyMjA5MzgyM1oXDTI5MTAxOTA5MzgyM1owQjERMA8GA1UEAwwId3NvMi5jb20xDTALBgNVBAsMBE5vbmUxDzANBgNVBAoMBk5vbmUgTDENMAsGA1UEBhMETm9uZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMY6diX4CyRNARLYQq5tLnjSMbCh4waM7EDniKeZuQAKVdBpzgvan+G8QrgfJqZ7IfYCLFKSQIpblMiULnaf0Zy1VqQG+QNh+CHpMJ0jRPAKWUXQrgzFu24+araRei9v9VBHVwaNVp1uHKx9cL4XAXdIRv+ZDCTrkvJJUPxrNgF14UIUPsNIZF5perptTUUaudyDiGug80baTXxuEf7gJh6LcT5UIJF/moWKhLYhKEFa7nq7sJLcGIUKRlIxF487rTe1zZzN9RsdpH5d11DnltThOdO1mF9BX1U6F3yuJoOlsIcHIeab0XED0jw8PFi5+LT7EOe6xzaB9sL2DB38o8sCAwEAATANBgkqhkiG9w0BAQQFAAOCAQEArqGJfCOIjY5sFhO6Fd5x3dM6OrA7QcjxzNxsNwO7e2zFr4SHJqekfErZxFTLGWMpyMakvTFAk3e/ShvDQ71nBxYl6Rbdco0f2SUI2ig3lQR5ZTxPmxSSNNbX4K2ptAgzikmSjc6lrGRUnMkMKetClDRsOf9banuDImB2aIn2STmFR2U5duui2oEep3C5mlxregBXI8xEWF6VpXzeEz2AEOaKWOPLDTQsBWxSFi9uVVkD9GwN7yJCXWF81enCpQ4U1PHVhAdS40HTXbis/R0+ykDdkDLmbu3Oa+F2uyWnarAR9rKVfjNovXvJPX4D+5/wipDyXUOO58tyF0342JuIdA=='\n    ErrorResponse:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: string\n          example: 'AAA-00000'\n        message:\n          type: string\n          example: 'Some Error Message'\n        description:\n          type: string\n          example: 'Some Error Description'\n        traceId:\n          type: string\n          example: 'e0fbcfeb-3617-43c4-8dd0-7b7d38e13047'\n",
			"canonicalURL": "/github.com/wso2/identity-api-server@1c81f70117e6130228ac537f8526ad3655061b43/-/blob/components/org.wso2.carbon.identity.api.server.keystore.management/org.wso2.carbon.identity.api.server.keystore.management.v1/src/main/resources/keystore.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/identity-api-server/blob/1c81f70117e6130228ac537f8526ad3655061b43/components/org.wso2.carbon.identity.api.server.keystore.management/org.wso2.carbon.identity.api.server.keystore.management.v1/src/main/resources/keystore.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/keystores/certs\": get: security: security \"OAuth2\" (index 1): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}