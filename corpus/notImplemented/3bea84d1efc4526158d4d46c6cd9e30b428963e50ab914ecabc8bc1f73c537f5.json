{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/pme123/camundala"
		},
		"file": {
			"name": "postmanOpenApi.yml",
			"size": 0,
			"path": "examples/invoice/postmanOpenApi.yml",
			"byteSize": 29129,
			"content": "openapi: 3.0.3\ninfo:\n  title: Invoice Example Process API\n  version: '1.0'\n  description: |2+\n\n\n    Generated Open API:\n\n    - **openApi.yml**: Documentation of the Processes (this DocumentationðŸ˜Š).\n    - **postmanOpenApi.yml**: Open Api that you can import to Postman!\n      Be aware that this needs some adjustments.\n\n    \u003eWARNING: This is an experimental way and not approved.\n\n    **[Check Project on Cawemo](https://cawemo.com/folders/a76e4b8e-8631-4d20-a8eb-258b000ff88a--camundala)**\n\n    \u003e This is the invoice demo application which is shipped with the full distributions.\n\n    See the original [README](https://github.com/camunda/camunda-bpm-platform/tree/master/examples/invoice).\n\n    I bundled it here! Just run `InvoiceServletProcessApplication`.\n\n    This based on this Project: https://github.com/pme123/spring-boot-datakurre-plugins\n\n\n    # Changelog\n\n    \u003cdetails\u003e\n    \u003csummary\u003eCHANGELOG.md\u003c/summary\u003e\n    \u003cp\u003e\n\n\n    All notable changes to this project will be documented in this file.\n\n    * Types of Changes (L3):\n      * Added: new features\n      * Changed: changes in existing functionality\n      * Deprecated: soon-to-be-removed features\n      * Removed: now removed features\n      * Fixed: any bug fixes\n      * Security: in case of vulnerabilities\n\n\n    The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n    and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n    ### Unreleased\n    Initial Version\n\n    \u003c/p\u003e\n    \u003c/details\u003e\n\nservers:\n- url: http://localhost:8034/engine-rest\npaths:\n  /process-definition/key/{key}/start:\n    post:\n      tags:\n      - InvoiceReceiptP\n      summary: 'InvoiceReceiptP: StartProcessInstance'\n      description: |2\n\n        This starts the Invoice Receipt Process.\n\n        \u003ciframe src=\"https://cawemo.com/embed/e289c19a-8a57-4467-8583-de72a5e57488\" style=\"width:100%;height:500px;border:1px solid #ccc\" allowfullscreen\u003e\u003c/iframe\u003e\n      operationId: 'InvoiceReceiptP: StartProcessInstance'\n      parameters:\n      - name: key\n        in: path\n        description: The Process- or Decision-DefinitionKey of the Process or Decision\n        required: true\n        schema:\n          type: string\n          default: InvoiceReceiptP\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StartProcessIn'\n            examples:\n              standard:\n                value:\n                  variables:\n                    creditor:\n                      value: Great Pizza for Everyone Inc.\n                      type: String\n                    invoiceNumber:\n                      value: I-12345\n                      type: String\n                    amount:\n                      value: 300.0\n                      type: Double\n                    invoiceDocument:\n                      value: \n                      valueInfo:\n                        filename: invoice.pdf\n                        mimetype: application/pdf\n                      type: File\n                    invoiceCategory:\n                      value: Travel Expenses\n                      type: String\n                  businessKey: example-businesskey\n                  withVariablesInReturn: true\n        required: true\n      responses:\n        '200':\n          description: ''\n  /decision-definition/key/{key}/evaluate/--REMOVE:invoice-assign-approver--:\n    post:\n      tags:\n      - InvoiceReceiptP\n      summary: 'invoice-assign-approver: EvaluateDecision'\n      description: |2\n\n        Decision Table on who must approve the Invoice.\n\n        \u003ciframe src=\"https://cawemo.com/embed/155ba236-d5d1-42f7-8b56-3e90e0bb98d4\" style=\"width:100%;height:500px;border:1px solid #ccc\" allowfullscreen\u003e\u003c/iframe\u003e\n\n\n        Decision DMN:\n        - _decisionDefinitionKey_: `invoice-assign-approver`,\n      operationId: 'invoice-assign-approver: EvaluateDecision'\n      parameters:\n      - name: key\n        in: path\n        description: The Process- or Decision-DefinitionKey of the Process or Decision\n        required: true\n        schema:\n          type: string\n          default: invoice-assign-approver\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EvaluateDecisionIn'\n            examples:\n              standard:\n                value:\n                  variables:\n                    amount:\n                      value: 1050.0\n                      type: Double\n                    invoiceCategory:\n                      value: Travel Expenses\n                      type: String\n        required: true\n      responses:\n        '200':\n          description: ''\n  /task/--REMOVE:ApproveInvoiceUT--:\n    post:\n      tags:\n      - InvoiceReceiptP\n      summary: 'ApproveInvoiceUT: GetActiveTask'\n      description: Approve the invoice (or not).\n      operationId: 'ApproveInvoiceUT: GetActiveTask'\n      responses:\n        '200':\n          description: ''\n  /task/{taskId}/form-variables/--REMOVE:ApproveInvoiceUT--:\n    get:\n      tags:\n      - InvoiceReceiptP\n      summary: 'ApproveInvoiceUT: GetTaskFormVariables'\n      description: |-\n        Retrieves the form variables for a task.\n        The form variables take form data specified on the task into account.\n        If form fields are defined, the variable types and default values of the form fields are taken into account.\n\n        Approve the invoice (or not).\n      operationId: 'ApproveInvoiceUT: GetTaskFormVariables'\n      parameters:\n      - name: taskId\n        in: path\n        description: |\n          The taskId of the Form.\n          \u003e This is the result id of the `GetActiveTask`\n        required: true\n        schema:\n          type: string\n          default: '{{taskId}}'\n      - name: variableNames\n        in: query\n        description: |-\n          A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list.\n          It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched.\n          If the query parameter contains non-existent variable names, the variable names are ignored.\n        required: false\n        schema:\n          type: string\n          default: creditor,amount,invoiceCategory,invoiceNumber,invoiceDocument\n      - name: deserializeValues\n        in: query\n        required: false\n        schema:\n          type: boolean\n          default: false\n      responses:\n        '200':\n          description: ''\n  /task/{taskId}/complete/--REMOVE:ApproveInvoiceUT--:\n    post:\n      tags:\n      - InvoiceReceiptP\n      summary: 'ApproveInvoiceUT: CompleteTask'\n      description: Approve the invoice (or not).\n      operationId: 'ApproveInvoiceUT: CompleteTask'\n      parameters:\n      - name: taskId\n        in: path\n        description: |\n          The taskId of the Form.\n          \u003e This is the result id of the `GetActiveTask`\n        required: true\n        schema:\n          type: string\n          default: '{{taskId}}'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CompleteTaskIn'\n            examples:\n              standard:\n                value:\n                  variables:\n                    approved:\n                      value: true\n                      type: Boolean\n                  withVariablesInReturn: true\n              Invoice approved:\n                value:\n                  variables:\n                    approved:\n                      value: true\n                      type: Boolean\n                  withVariablesInReturn: true\n              Invoice NOT approved:\n                value:\n                  variables:\n                    approved:\n                      value: false\n                      type: Boolean\n                  withVariablesInReturn: true\n        required: true\n      responses:\n        '200':\n          description: ''\n  /task/--REMOVE:PrepareBankTransferUT--:\n    post:\n      tags:\n      - InvoiceReceiptP\n      summary: 'PrepareBankTransferUT: GetActiveTask'\n      description: Prepare the bank transfer in the Financial Accounting System.\n      operationId: 'PrepareBankTransferUT: GetActiveTask'\n      responses:\n        '200':\n          description: ''\n  /task/{taskId}/form-variables/--REMOVE:PrepareBankTransferUT--:\n    get:\n      tags:\n      - InvoiceReceiptP\n      summary: 'PrepareBankTransferUT: GetTaskFormVariables'\n      description: |-\n        Retrieves the form variables for a task.\n        The form variables take form data specified on the task into account.\n        If form fields are defined, the variable types and default values of the form fields are taken into account.\n\n        Prepare the bank transfer in the Financial Accounting System.\n      operationId: 'PrepareBankTransferUT: GetTaskFormVariables'\n      parameters:\n      - name: taskId\n        in: path\n        description: |\n          The taskId of the Form.\n          \u003e This is the result id of the `GetActiveTask`\n        required: true\n        schema:\n          type: string\n          default: '{{taskId}}'\n      - name: variableNames\n        in: query\n        description: |-\n          A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list.\n          It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched.\n          If the query parameter contains non-existent variable names, the variable names are ignored.\n        required: false\n        schema:\n          type: string\n          default: creditor,amount,invoiceCategory,invoiceNumber,invoiceDocument\n      - name: deserializeValues\n        in: query\n        required: false\n        schema:\n          type: boolean\n          default: false\n      responses:\n        '200':\n          description: ''\n  /task/{taskId}/complete/--REMOVE:PrepareBankTransferUT--:\n    post:\n      tags:\n      - InvoiceReceiptP\n      summary: 'PrepareBankTransferUT: CompleteTask'\n      description: Prepare the bank transfer in the Financial Accounting System.\n      operationId: 'PrepareBankTransferUT: CompleteTask'\n      parameters:\n      - name: taskId\n        in: path\n        description: |\n          The taskId of the Form.\n          \u003e This is the result id of the `GetActiveTask`\n        required: true\n        schema:\n          type: string\n          default: '{{taskId}}'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CompleteTaskIn'\n            examples:\n              standard:\n                value:\n                  variables: {}\n                  withVariablesInReturn: true\n        required: true\n      responses:\n        '200':\n          description: ''\n  /task/--REMOVE:AssignReviewerUT--:\n    post:\n      tags:\n      - ReviewInvoiceP\n      summary: 'AssignReviewerUT: GetActiveTask'\n      description: Select the Reviewer.\n      operationId: 'AssignReviewerUT: GetActiveTask'\n      responses:\n        '200':\n          description: ''\n  /task/{taskId}/form-variables/--REMOVE:AssignReviewerUT--:\n    get:\n      tags:\n      - ReviewInvoiceP\n      summary: 'AssignReviewerUT: GetTaskFormVariables'\n      description: |-\n        Retrieves the form variables for a task.\n        The form variables take form data specified on the task into account.\n        If form fields are defined, the variable types and default values of the form fields are taken into account.\n\n        Select the Reviewer.\n      operationId: 'AssignReviewerUT: GetTaskFormVariables'\n      parameters:\n      - name: taskId\n        in: path\n        description: |\n          The taskId of the Form.\n          \u003e This is the result id of the `GetActiveTask`\n        required: true\n        schema:\n          type: string\n          default: '{{taskId}}'\n      - name: variableNames\n        in: query\n        description: |-\n          A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list.\n          It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched.\n          If the query parameter contains non-existent variable names, the variable names are ignored.\n        required: false\n        schema:\n          type: string\n          default: creditor,amount,invoiceCategory,invoiceNumber,invoiceDocument\n      - name: deserializeValues\n        in: query\n        required: false\n        schema:\n          type: boolean\n          default: false\n      responses:\n        '200':\n          description: ''\n  /task/{taskId}/complete/--REMOVE:AssignReviewerUT--:\n    post:\n      tags:\n      - ReviewInvoiceP\n      summary: 'AssignReviewerUT: CompleteTask'\n      description: Select the Reviewer.\n      operationId: 'AssignReviewerUT: CompleteTask'\n      parameters:\n      - name: taskId\n        in: path\n        description: |\n          The taskId of the Form.\n          \u003e This is the result id of the `GetActiveTask`\n        required: true\n        schema:\n          type: string\n          default: '{{taskId}}'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CompleteTaskIn'\n            examples:\n              standard:\n                value:\n                  variables:\n                    reviewer:\n                      value: John\n                      type: String\n                  withVariablesInReturn: true\n        required: true\n      responses:\n        '200':\n          description: ''\n  /task/--REMOVE:ReviewInvoiceUT--:\n    post:\n      tags:\n      - ReviewInvoiceP\n      summary: 'ReviewInvoiceUT: GetActiveTask'\n      description: Review Invoice and approve.\n      operationId: 'ReviewInvoiceUT: GetActiveTask'\n      responses:\n        '200':\n          description: ''\n  /task/{taskId}/form-variables/--REMOVE:ReviewInvoiceUT--:\n    get:\n      tags:\n      - ReviewInvoiceP\n      summary: 'ReviewInvoiceUT: GetTaskFormVariables'\n      description: |-\n        Retrieves the form variables for a task.\n        The form variables take form data specified on the task into account.\n        If form fields are defined, the variable types and default values of the form fields are taken into account.\n\n        Review Invoice and approve.\n      operationId: 'ReviewInvoiceUT: GetTaskFormVariables'\n      parameters:\n      - name: taskId\n        in: path\n        description: |\n          The taskId of the Form.\n          \u003e This is the result id of the `GetActiveTask`\n        required: true\n        schema:\n          type: string\n          default: '{{taskId}}'\n      - name: variableNames\n        in: query\n        description: |-\n          A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list.\n          It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched.\n          If the query parameter contains non-existent variable names, the variable names are ignored.\n        required: false\n        schema:\n          type: string\n          default: creditor,amount,invoiceCategory,invoiceNumber,invoiceDocument\n      - name: deserializeValues\n        in: query\n        required: false\n        schema:\n          type: boolean\n          default: false\n      responses:\n        '200':\n          description: ''\n  /task/{taskId}/complete/--REMOVE:ReviewInvoiceUT--:\n    post:\n      tags:\n      - ReviewInvoiceP\n      summary: 'ReviewInvoiceUT: CompleteTask'\n      description: Review Invoice and approve.\n      operationId: 'ReviewInvoiceUT: CompleteTask'\n      parameters:\n      - name: taskId\n        in: path\n        description: |\n          The taskId of the Form.\n          \u003e This is the result id of the `GetActiveTask`\n        required: true\n        schema:\n          type: string\n          default: '{{taskId}}'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CompleteTaskIn'\n            examples:\n              standard:\n                value:\n                  variables:\n                    clarified:\n                      value: true\n                      type: Boolean\n                  withVariablesInReturn: true\n              Invoice clarified:\n                value:\n                  variables:\n                    clarified:\n                      value: true\n                      type: Boolean\n                  withVariablesInReturn: true\n              Invoice NOT clarified:\n                value:\n                  variables:\n                    clarified:\n                      value: false\n                      type: Boolean\n                  withVariablesInReturn: true\n        required: true\n      responses:\n        '200':\n          description: ''\ncomponents:\n  schemas:\n    CBoolean:\n      required:\n      - value\n      - type\n      type: object\n      properties:\n        value:\n          type: boolean\n        type:\n          type: string\n    CDouble:\n      required:\n      - value\n      - type\n      type: object\n      properties:\n        value:\n          type: number\n          format: double\n        type:\n          type: string\n    CEnum:\n      required:\n      - value\n      - type\n      type: object\n      properties:\n        value:\n          type: string\n        type:\n          type: string\n    CFile:\n      required:\n      - value\n      - valueInfo\n      - type\n      type: object\n      properties:\n        value:\n          type: string\n          description: The File's content as Base64 encoded String.\n        valueInfo:\n          $ref: '#/components/schemas/CFileValueInfo'\n        type:\n          type: string\n    CFileValueInfo:\n      required:\n      - filename\n      type: object\n      properties:\n        filename:\n          type: string\n        mimetype:\n          type: string\n    CInteger:\n      required:\n      - value\n      - type\n      type: object\n      properties:\n        value:\n          type: integer\n        type:\n          type: string\n    CJson:\n      required:\n      - value\n      - type\n      type: object\n      properties:\n        value:\n          type: string\n        type:\n          type: string\n    CLong:\n      required:\n      - value\n      - type\n      type: object\n      properties:\n        value:\n          type: integer\n          format: int64\n        type:\n          type: string\n    CNull:\n      type: object\n    CString:\n      required:\n      - value\n      - type\n      type: object\n      properties:\n        value:\n          type: string\n        type:\n          type: string\n    CamundaVariable:\n      oneOf:\n      - $ref: '#/components/schemas/CBoolean'\n      - $ref: '#/components/schemas/CDouble'\n      - $ref: '#/components/schemas/CEnum'\n      - $ref: '#/components/schemas/CFile'\n      - $ref: '#/components/schemas/CInteger'\n      - $ref: '#/components/schemas/CJson'\n      - $ref: '#/components/schemas/CLong'\n      - $ref: '#/components/schemas/CNull'\n      - $ref: '#/components/schemas/CString'\n    CompleteTaskIn:\n      required:\n      - variables\n      - withVariablesInReturn\n      type: object\n      properties:\n        variables:\n          $ref: '#/components/schemas/Map_CamundaVariable'\n        withVariablesInReturn:\n          type: boolean\n          description: Set to false will not return the Process Variables and the\n            Result Status is 204.\n      description: 'A JSON object with the following properties: (at least an empty\n        JSON object {} or an empty request body)'\n    EvaluateDecisionIn:\n      required:\n      - variables\n      type: object\n      properties:\n        variables:\n          $ref: '#/components/schemas/Map_CamundaVariable'\n      description: 'A JSON object with the following properties:'\n    Map_CamundaVariable:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/CamundaVariable'\n    StartProcessIn:\n      required:\n      - variables\n      - withVariablesInReturn\n      type: object\n      properties:\n        variables:\n          $ref: '#/components/schemas/Map_CamundaVariable'\n        businessKey:\n          type: string\n          description: The business key of the process instance.\n        withVariablesInReturn:\n          type: boolean\n          description: Set to false will not return the Process Variables.\n      description: 'A JSON object with the following properties: (at least an empty\n        JSON object {} or an empty request body)'\n",
			"canonicalURL": "/github.com/pme123/camundala@8f0d63a17634a36bc62292180cb852b430c71e63/-/blob/examples/invoice/postmanOpenApi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/pme123/camundala/blob/8f0d63a17634a36bc62292180cb852b430c71e63/examples/invoice/postmanOpenApi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/process-definition/key/{key}/start\": post: requestBody: contents: application/json: generate schema: field variables: item: oneOf: oneOf CamundaVariable: variant CDouble: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}