{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eikek/sbt-openapi-schema"
		},
		"file": {
			"name": "test.yml",
			"size": 0,
			"path": "plugin/src/sbt-test/openapi-test/json-extra-scala/src/main/resources/test.yml",
			"byteSize": 4607,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: Test Simple\n  version: 0.0.1\n\nservers:\n  - url: /api/v1\n    description: Current host\n\npaths:\n  '/test':\n    get:\n      responses:\n        '200':\n          description: test\n          content:\n            applicaton/json:\n              schema:\n                $ref: \"#/components/schemas/DiscriminatorObject\"\ncomponents:\n  schemas:\n    Room:\n      description: |\n        A room with some properties.\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        seats:\n          type: integer\n          format: int32\n\n    Person:\n      description: |\n        A person.\n      required:\n        - lastname\n      properties:\n        firstname:\n          description: |\n            The first name of the person.\n          type: string\n        lastname:\n          description: |\n            The last name of the person.\n          type: string\n        dob:\n          description: |\n            The date of birth of a person.\n          type: string\n          format: date\n\n    Course:\n      description: |\n        A course.\n      required:\n        - id\n        - starts\n        - room\n      properties:\n        id:\n          description: |\n            A unique id for this course.\n          type: string\n        starts:\n          description: |\n            The date when this course starts.\n          type: string\n          format: date\n        room:\n          $ref: '#/components/schemas/Room'\n        members:\n          description: |\n            A list of members currently enrolled in this course.\n          type: array\n          items:\n            $ref: '#/components/schemas/Person'\n\n    NestedArray:\n      description: |\n        Test nested array.\n      properties:\n        matrix:\n          type: array\n          items:\n            type: array\n            items:\n              type: integer\n              format: int32\n\n    SimpleString:\n      description:\n        This is just a string.\n      type: string\n\n    ExtractedData1:\n      description: |\n        Contains data from extraction.\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/Course'\n\n    ExtractedData2:\n      description: |\n        Contains data from extraction.\n      type: object\n      additionalProperties:\n        type: string\n\n    DiscriminatorObject:\n      type: object\n      discriminator:\n        propertyName: \"type\"\n      properties:\n        type:\n          type: string\n        sharedString:\n          type: string\n          description: |\n            Shared string value with all types of this object\n        anotherSharedBoolean:\n          type: boolean\n          description: |\n            A shared boolean value\n      required:\n        - type\n        - anotherSharedBoolean\n\n    FirstDiscriminatorSubObject:\n      allOf:\n        - $ref: '#/components/schemas/DiscriminatorObject'\n        - type: object\n          properties:\n            uniqueString:\n              type: string\n              description: |\n                String unique to this instance of discriminator\n\n    SecondDiscriminatorObject:\n      allOf:\n        - $ref: '#/components/schemas/DiscriminatorObject'\n        - type: object\n          properties:\n            uniqueInteger:\n              type: integer\n              description: |\n                String unique to this instance of discriminator\n            otherUniqueBoolean:\n              type: boolean\n          required:\n            - uniqueInteger\n    Pet:\n      type: object\n      discriminator:\n        propertyName: petType\n      properties:\n        name:\n          type: string\n        petType:\n          type: string\n      required:\n        - name\n        - petType\n    Cat:  ## \"Cat\" will be used as the discriminator value\n      description: A representation of a cat\n      allOf:\n        - $ref: '#/components/schemas/Pet'\n        - type: object\n          properties:\n            huntingSkill:\n              type: string\n              description: The measured skill for hunting\n              enum:\n                - clueless\n                - lazy\n                - adventurous\n                - aggressive\n          required:\n            - huntingSkill\n    Dog:  ## \"Dog\" will be used as the discriminator value\n      description: A representation of a dog\n      allOf:\n        - $ref: '#/components/schemas/Pet'\n        - type: object\n          properties:\n            packSize:\n              type: integer\n              format: int32\n              description: the size of the pack the dog is from\n              default: 0\n              minimum: 0\n          required:\n            - packSize\n",
			"canonicalURL": "/github.com/eikek/sbt-openapi-schema@3410d7a72da5f41405b9d136b355b1d103c0172c/-/blob/plugin/src/sbt-test/openapi-test/json-extra-scala/src/main/resources/test.yml",
			"externalURLs": [
				{
					"url": "https://github.com/eikek/sbt-openapi-schema/blob/3410d7a72da5f41405b9d136b355b1d103c0172c/plugin/src/sbt-test/openapi-test/json-extra-scala/src/main/resources/test.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/test\": get: responses: 200: contents: unsupported content types: [applicaton/json]",
	"NotImplemented": [
		"unsupported content types"
	]
}