{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eclipse/hono"
		},
		"file": {
			"name": "device-registry-v1.yaml",
			"size": 0,
			"path": "site/documentation/content/api/management/device-registry-v1.yaml",
			"byteSize": 82371,
			"content": "openapi: 3.0.1\ninfo:\n   title: Eclipse Hono™ Device Registry API\n   description: |\n      This API defines how to manage *Tenants*, *Devices*, and *Credentials*.\n      It acts as a common basis which all Hono device registries should\n      implement.\n\n      ## Required APIs\n\n      All operations, except the `tenants` resource are required. The tenant\n      management might be outside of the scope of the device registry and\n      managed by a higher level system. In this case all calls should simply\n      return `404`. However, if the `tenants` resource is implemented, then all\n      operations of it must be implemented.\n\n      ## Security\n\n      This specification explicitly leaves out the part of authenticating and\n      authorizing users with the device registry. It is assumed that some form\n      of token exchange between the user agent and the backend service will\n      take place. Like for example HTTP basic authentication, or a bearer token.\n\n      ## Code generation\n\n      This model is not optimized for generating code from it. Code generators\n      try to understand the model and then translate this into the required\n      programming language. Even if there would be no bugs in the code\n      generators, that process would already only be an approximation. So\n      this model focuses on the description of the API, and does not tweak\n      the specification in a way to please code generators.\n\n   contact:\n      name: Contact details\n      url: https://www.eclipse.org/hono/community/get-in-touch/\n   license:\n      name: EPL-2.0\n      url: https://www.eclipse.org/legal/epl-2.0/\n   version: 1.12.2\n\nexternalDocs:\n   description: Eclipse Hono™ web page\n   url: https://eclipse.org/hono\n\ntags:\n   - name: tenants\n     description: Tenant Management (optional)\n     externalDocs:\n        description: Hono Multi-Tenancy\n        url: https://www.eclipse.org/hono/docs/concepts/tenancy/\n   - name: devices\n     description: Device registration\n     externalDocs:\n        description: Hono device identity\n        url: https://www.eclipse.org/hono/docs/concepts/device-identity/\n   - name: credentials\n     description: Device credentials\n     externalDocs:\n        description: Hono device identity\n        url: https://www.eclipse.org/hono/docs/concepts/device-identity/\n\nservers:\n   - url: '{server}/v1'\n     variables:\n        server:\n           default: https://hono.eclipseprojects.io:28443\n           description: Hono Sandbox\n\nsecurity:\n   - BearerAuth: []\n   - BasicAuth: []\n\npaths:\n\n# Tenant API\n\n   /tenants:\n\n      post:\n         tags:\n            - tenants\n         summary: Create a new tenant with an auto-generated ID\n         description: |\n            Clients use this operation to register a new tenant with an identifier that\n            is generated by the registry.\n         operationId: createTenant\n         requestBody:\n            description: The configuration properties to register for the tenant.\n            content:\n               application/json:\n                  schema:\n                     $ref: '#/components/schemas/Tenant'\n                  examples:\n                     default:\n                        $ref: '#/components/examples/TenantAllAdaptersExample'\n                     mqtt-only:\n                        $ref: '#/components/examples/TenantMqttAdapterOnlyExample'\n            required: false\n         responses:\n            201:\n               $ref: '#/components/responses/Created'\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            403:\n               $ref: '#/components/responses/NotAllowed'\n            409:\n               description: |\n                  Indicates that an existing tenant uses a certificate authority with the same Subject DN.\n                  If the client has no read access to the conflicting tenant then `403` should be returned instead.\n               content:\n                  application/json:\n                     schema:\n                        $ref: '#/components/schemas/Error'\n                     example:\n                        error: \"Root Certificate Authority is already used by other tenant\"\n                        subject-dn: \"CN=devices,OU=iot,O=ACME\"\n            413:\n               $ref: '#/components/responses/RequestEntityTooLarge'\n\n      get:\n         tags:\n            - tenants\n         summary: Search tenants with optional filters, paging and sorting options.\n         operationId: searchTenants\n         parameters:\n            - $ref: '#/components/parameters/pageSize'\n            - $ref: '#/components/parameters/pageOffset'\n            - $ref: '#/components/parameters/filterJson'\n            - $ref: '#/components/parameters/sortJson'\n         responses:\n            200:\n               description: operation successful\n               content:\n                  application/json:\n                     schema:\n                        $ref: '#/components/schemas/SearchTenantsResult'\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            404:\n               $ref: '#/components/responses/NotFound'\n\n   /tenants/{tenantId}:\n\n      parameters:\n         - $ref: '#/components/parameters/tenantId'\n\n      post:\n         tags:\n            - tenants\n         summary: Create a new tenant with a given ID\n         description: |\n            Clients use this operation to register a new tenant with a given identifier.\n         operationId: createTenantWithId\n         requestBody:\n            description: The configuration properties to register for the tenant.\n            content:\n               application/json:\n                  schema:\n                     $ref: '#/components/schemas/Tenant'\n                  examples:\n                     default:\n                        $ref: '#/components/examples/TenantAllAdaptersExample'\n                     mqtt-only:\n                        $ref: '#/components/examples/TenantMqttAdapterOnlyExample'\n            required: false\n         responses:\n            201:\n               $ref: '#/components/responses/Created'\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            403:\n               $ref: '#/components/responses/NotAllowed'\n            409:\n               description: |\n                  Indicates that a tenant with the given identifier already exists or that an existing tenant uses\n                  a certificate authority with the same Subject DN.\n                  If the client has no read access to the conflicting tenant then `403` should be returned instead.\n               content:\n                  application/json:\n                     schema:\n                        $ref: '#/components/schemas/Error'\n                     example:\n                        error: \"tenant with given identifier already exists\"\n            413:\n               $ref: '#/components/responses/RequestEntityTooLarge'\n\n      get:\n         tags:\n            - tenants\n         summary: Get tenant information\n         description: |\n            Clients use this operation to retrieve the configuration properties of an existing tenant.\n         operationId: getTenant\n         responses:\n            200:\n               description: operation successful\n               content:\n                  application/json:\n                     schema:\n                        $ref: '#/components/schemas/Tenant'\n                     examples:\n                        mqtt-only:\n                           summary: Constrained tenant\n                           description: |\n                              The body contains the configuration properties of a tenant for which\n                              some resource limits have been defined.\n                           value: |\n                              {\n                                 \"enabled\": true,\n                                 \"resource-limits\": {\n                                    \"max-connections\": 1000,\n                                    \"max-ttl\": 3600,\n                                    \"data-volume\": {\n                                       \"effective-since\": \"2019-12-01T00:00:00Z\",\n                                       \"max-bytes\": 10000000,\n                                       \"period\": {\n                                          \"mode\": \"monthly\"\n                                       }\n                                    }\n                                 }\n                              }\n               headers:\n                  ETag:\n                     description: Version of the resource\n                     schema:\n                        type: string\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            404:\n               $ref: '#/components/responses/NotFound'\n\n      put:\n         tags:\n            - tenants\n         summary: Update tenant information\n         description: |\n            Clients use this operation to replace an existing tenant's registration information\n            with the information contained in the request body.\n         operationId: updateTenant\n         parameters:\n            - $ref: '#/components/parameters/resourceVersion'\n         requestBody:\n            description: The configuration properties to replace the tenant's existing configuration with.\n            content:\n               application/json:\n                  schema:\n                     $ref: '#/components/schemas/Tenant'\n                  examples:\n                     disable-tenant:\n                        summary: Disable a tenant\n                        description: |\n                           Disabling a tenant effectively prevents any devices of that tenant\n                           to connect to any of the protocol adapters. Devices that are\n                           already connected to an adapter can no longer upload any data\n                           nor receive any commands. Note that the example payload does\n                           not contain any other properties than *enabled* which means\n                           that all other configuration will be removed.\n                        value: |\n                           {\n                              \"enabled\": false\n                           }\n            required: true\n         responses:\n            204:\n               $ref: '#/components/responses/Updated'\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            403:\n               $ref: '#/components/responses/NotAllowed'\n            404:\n               $ref: '#/components/responses/NotFound'\n            409:\n               description: |\n                  Indicates that an existing tenant uses a certificate authority with the same Subject DN.\n                  If the client has no read access to the conflicting tenant then `403` should be returned instead.\n               content:\n                  application/json:\n                     schema:\n                        $ref: '#/components/schemas/Error'\n                     example:\n                        error: \"Root Certificate Authority is already used by other tenant\"\n                        subject-dn: \"CN=devices,OU=iot,O=ACME\"\n            412:\n               $ref: '#/components/responses/ResourceVersionMismatch'\n            413:\n               $ref: '#/components/responses/RequestEntityTooLarge'\n\n      delete:\n         tags:\n            - tenants\n         summary: Delete tenant\n         description: |\n            Clients use this operation to remove an existing tenant from the registry.\n\n            When the operation succeeds, the data owned by this tenant (including devices and their\n            credentials) must no longer be accessible. These entities should be reported as *not found*.\n         operationId: deleteTenant\n         parameters:\n            - $ref: '#/components/parameters/resourceVersion'\n         responses:\n            204:\n               $ref: '#/components/responses/Deleted'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            403:\n               $ref: '#/components/responses/NotAllowed'\n            404:\n               $ref: '#/components/responses/NotFound'\n            412:\n               $ref: '#/components/responses/ResourceVersionMismatch'\n\n# Device API\n\n   /devices/{tenantId}:\n\n      parameters:\n         - $ref: '#/components/parameters/tenantId'\n\n      post:\n         tags:\n            - devices\n         summary: Create a new device registration with auto-generated ID\n         description: |\n            Clients use this operation to register a new device for an existing tenant with\n            an identifier that is generated by the registry.\n         operationId: createDeviceRegistration\n         requestBody:\n            description: The configuration properties to register for the device.\n            content:\n               application/json:\n                  schema:\n                     $ref: '#/components/schemas/Device'\n                  examples:\n                     default:\n                        $ref: '#/components/examples/DeviceDefaultExample'\n                     extensions:\n                        $ref: '#/components/examples/DeviceExtExample'\n            required: false\n         responses:\n            201:\n               $ref: '#/components/responses/Created'\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            403:\n               $ref: '#/components/responses/NotAllowed'\n            404:\n               $ref: '#/components/responses/TenantNotFound'\n            413:\n               $ref: '#/components/responses/RequestEntityTooLarge'\n\n      get:\n         tags:\n            - devices\n         summary: Search devices for a tenant with optional filters, paging and sorting options.\n         operationId: searchDevicesForTenant\n         parameters:\n            - $ref: '#/components/parameters/pageSize'\n            - $ref: '#/components/parameters/pageOffset'\n            - $ref: '#/components/parameters/filterJson'\n            - $ref: '#/components/parameters/sortJson'\n         responses:\n            200:\n               description: operation successful\n               content:\n                  application/json:\n                     schema:\n                        $ref: '#/components/schemas/SearchDevicesResult'\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            404:\n               $ref: '#/components/responses/NotFound'\n\n      delete:\n         tags:\n            - devices\n         summary: Delete all devices of a tenant.\n         description: |\n            Clients use this operation to remove all devices of a tenant from the registry.\n\n            When the operation succeeds, none of the registration information and credentials of devices\n            belonging to the tenant must be accessible anymore. These entities should be reported as *not found*.\n         operationId: deleteDevicesOfTenant\n         responses:\n            204:\n               description: All devices of the tenant have been deleted\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n\n   /devices/{tenantId}/{deviceId}:\n\n      parameters:\n         - $ref: '#/components/parameters/tenantId'\n         - $ref: '#/components/parameters/deviceId'\n\n      post:\n         tags:\n            - devices\n         summary: Create a new device registration\n         description: |\n            Clients use this operation to register a new device for an existing tenant with\n            a given identifier\n         operationId: createDeviceRegistrationWithId\n         requestBody:\n            description: The configuration properties to register for the device.\n            content:\n               application/json:\n                  schema:\n                     $ref: '#/components/schemas/Device'\n                  examples:\n                     default:\n                        $ref: '#/components/examples/DeviceDefaultExample'\n                     extensions:\n                        $ref: '#/components/examples/DeviceExtExample'\n            required: false\n         responses:\n            201:\n               $ref: '#/components/responses/Created'\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            403:\n               $ref: '#/components/responses/NotAllowed'\n            409:\n               $ref: '#/components/responses/AlreadyExists'\n            404:\n               $ref: '#/components/responses/TenantNotFound'\n            413:\n               $ref: '#/components/responses/RequestEntityTooLarge'\n\n      get:\n         tags:\n            - devices\n         summary: Get device registration information\n         description: |\n            Clients use this operation to retrieve the configuration properties of an existing device.\n         operationId: getRegistration\n         responses:\n            200:\n               description: operation successful\n               content:\n                  application/json:\n                     schema:\n                        $ref: '#/components/schemas/Device'\n                     examples:\n                        fully-configured:\n                           summary: Fully configured device\n                           description: |\n                              The body contains the configuration properties of a device which\n                              has been configured extensively.\n                           value: |\n                              {\n                                 \"enabled\": true,\n                                 \"defaults\": {\n                                    \"ttl\": 300,\n                                    \"content-type\": \"application/vnd.acme+json\"\n                                 },\n                                 \"via\": [\n                                    \"gw-1\", \"gw-4\"\n                                 ],\n                                 \"status\": {\n                                    \"created\": \"2019-10-03T13:45:16Z\"\n                                    \"updated\": \"2020-05-04T10:11:12Z\"\n                                    \"last-user\": \"Bob\",\n                                    \"autoProvisioned\": false,\n                                    \"autoProvisioningNotificationSent\": false\n                                 }\n                                 \"ext\": {\n                                    \"manufacturer\": \"ACME\",\n                                    \"model-no\": \"TEMP-SEN\",\n                                    \"serial-no\": \"3435A-454\"\n                                 }\n                              }\n               headers:\n                  ETag:\n                     description: Version of the resource\n                     schema:\n                        type: string\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            404:\n               $ref: '#/components/responses/NotFound'\n\n      put:\n         tags:\n            - devices\n         summary: Update an existing device registration\n         description: |\n            Clients use this operation to replace an existing device's registration information\n            with the information contained in the request body.\n         operationId: updateRegistration\n         parameters:\n            - $ref: '#/components/parameters/resourceVersion'\n         requestBody:\n            description: The configuration properties to replace the device's existing configuration with.\n            content:\n               application/json:\n                  schema:\n                     $ref: '#/components/schemas/Device'\n                  examples:\n                     disable-device:\n                        summary: Disable a device\n                        description: |\n                           Disabling a device effectively prevents the device\n                           to connect to any of the protocol adapters. If the device is\n                           already connected to an adapter then it can no longer upload\n                           any data nor receive any commands. Note that the example payload does\n                           not contain any other properties than *enabled* which means\n                           that all other configuration will be removed.\n                        value: |\n                           {\n                              \"enabled\": false\n                           }\n            required: true\n         responses:\n            204:\n               $ref: '#/components/responses/Updated'\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            403:\n               $ref: '#/components/responses/NotAllowed'\n            404:\n               $ref: '#/components/responses/NotFound'\n            412:\n               $ref: '#/components/responses/ResourceVersionMismatch'\n            413:\n               $ref: '#/components/responses/RequestEntityTooLarge'\n\n      delete:\n         tags:\n            - devices\n         summary: Delete an existing device registration\n         description: |\n            Clients use this operation to remove an existing device from the registry.\n\n            When the operation succeeds, the data owned by this device (including its credentials)\n            must no longer be accessible. These entities should be reported as *not found*.\n         operationId: deleteRegistration\n         parameters:\n            - $ref: '#/components/parameters/resourceVersion'\n         responses:\n            204:\n               $ref: '#/components/responses/Deleted'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            403:\n               $ref: '#/components/responses/NotAllowed'\n            404:\n               $ref: '#/components/responses/NotFound'\n            412:\n               $ref: '#/components/responses/ResourceVersionMismatch'\n\n   /credentials/{tenantId}/{deviceId}:\n\n      parameters:\n         - $ref: '#/components/parameters/tenantId'\n         - $ref: '#/components/parameters/deviceId'\n\n      get:\n         tags:\n            - credentials\n         summary: Gets a device's set of credentials.\n         description: |\n            Clients use this operation to retrieve the set of credentials registered for an existing device.\n            Hono's protocol adapters use the credentials registered for a device in order to\n            authenticate the device when it connects to an adapter.\n            Implementors may return all of the credentials' data including all\n            details of its secrets like password hash and/or hash algortihm used.\n            This mode of operation is called *replace mode*. However, this behavior is\n            discouraged because it might disclose confidential information in plain text.\n\n            Instead, implementors should remove all confidential information from the secrets\n            and include a (unique) identifier with each secret. Clients can then refer to\n            this identifier in order to update particular secrets. This mode of operation\n            is called *patch mode*.\n         operationId: getAllCredentials\n         responses:\n            200:\n               description: Operation successful\n               content:\n                  application/json:\n                     schema:\n                        $ref: '#/components/schemas/CredentialsSet'\n                     examples:\n                        meta-data:\n                           $ref: '#/components/examples/CredentialsMetaDataExample'\n               headers:\n                  ETag:\n                     description: Version of the resource\n                     schema:\n                        type: string\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            404:\n               $ref: '#/components/responses/DeviceNotFound'\n\n      put:\n         tags:\n            - credentials\n         summary: Updates a device's credentials.\n         description: |\n            A client uses this operation to update a device's existing set of credentials\n            with the credentials contained in the request body.\n\n            A registry may run in one of two modes for updating credentials, *replace mode*\n            or *patch mode*. A client can determine the mode of operation by means of inspecting\n            any of the secrets returned by the *getAllCredentials* operation. If the secrets\n            do not contain an `id` property, then the registry uses *replace mode*, otherwise\n            it operates in *patch mode*.\n\n            In replace mode the registry simply replaces a device's existing set of credentials\n            with the credentials provided in the request body.\n\n            In patch mode the registry processes the set of updated credentials provided in the\n            request body as follows.\n            1. Start with an empty set `N` of new credentials.\n            1. For each updated credentials object `c-U` contained in the request body,\n               the registry looks up an existing credentials object `c-E` of the same device ID, type\n               and authentication identifier.\n               1. If no matching credentials object exists, `c-U` is added to the set of new\n                  credentials `N`.\n               1. Otherwise, `c-E` is patched over with `c-U` as follows. For each of `c-U`'s\n                  secrets `s-U` the registry does the following\n                  1. If `s-U` has no `id` property, the registry assigns a unique identifier to `s-U`.\n                  1. Otherwise, the registry tries to find a secret `s-E` with the same identifier as `s-U`\n                     among the secrets of `c-E`.\n                     1. If no matching secret exists, updating the credentials has failed and the registry\n                        returns a response with status 400 (Bad Request).\n                     1. Otherwise the confidential properties of `s-E` are merged into `s-U`\n                        with the property values of `s-U` taking precedence.\n               1. `c-U` is added to `N`.\n            1. The registry replaces the device's existing set of credentials with `N` and returns an\n               empty response with status code 204 (No Content) to indicate the successful outcome of the\n               operation.\n\n               Note that `N` does not contain any of the existing credentials objects `c-E` for which\n               no corresponding credentials object `c-U` with the same device ID, type and authentication\n               identifier exists. This way, existing credentials can be deleted.\n         operationId: setAllCredentials\n         parameters:\n            - $ref: '#/components/parameters/resourceVersion'\n         requestBody:\n            content:\n               application/json:\n                  schema:\n                     $ref: '#/components/schemas/CredentialsSet'\n                  examples:\n                     set-password:\n                        $ref: '#/components/examples/CredentialsSetPasswordExample'\n                     change-password:\n                        $ref: '#/components/examples/CredentialsChangePasswordExample'\n            required: true\n         responses:\n            204:\n               $ref: '#/components/responses/Updated'\n            400:\n               $ref: '#/components/responses/MalformedRequest'\n            401:\n               $ref: '#/components/responses/Unauthorized'\n            403:\n               $ref: '#/components/responses/NotAllowed'\n            404:\n               $ref: '#/components/responses/DeviceNotFound'\n            409:\n               $ref: '#/components/responses/AlreadyExists'\n            412:\n               $ref: '#/components/responses/ResourceVersionMismatch'\n            413:\n               $ref: '#/components/responses/RequestEntityTooLarge'\n\ncomponents:\n\n   schemas:\n\n# Common schema\n\n      Error:\n         type: object\n         additionalProperties: true\n         required:\n            - error\n         properties:\n            \"error\":\n               type: string\n               description: A human readable error message of what went wrong.\n\n      DefaultProperties:\n         type: object\n         additionalProperties: true\n         description: Defaults for properties defined on the tenant and device level.\n\n      Extensions:\n         type: object\n         additionalProperties: true\n         description: Allows arbitrary properties as extension to the ones\n                      specified by the Hono API.\n\n      # Tenant schema\n\n      Tenant:\n         type: object\n         additionalProperties: false\n         properties:\n            \"enabled\":\n               type: boolean\n               default: true\n            \"alias\":\n               type: string\n               pattern: \"[a-z0-9-]+\"\n               description: |\n                  An alternative identifier that this tenant may be looked up by. Registry implementations MAY\n                  choose to ignore this property. Otherwise, the alias MUST consist of only lower case letters,\n                  digits and hyphens and thus be a valid LDH-label as defined by\n                  [RFC 5890](https://datatracker.ietf.org/doc/html/rfc5890#section-2.3.1).\n                  If set, the alias MUST be unique among all tenants. Implementations of Hono's Tenant service\n                  MAY consider this property when looking up a tenant by its identifier as defined by the\n                  [get Tenant operation](https://www.eclipse.org/hono/docs/api/tenant/#get-tenant-information).\n            \"ext\":\n               $ref: '#/components/schemas/Extensions'\n            \"adapters\":\n               type: array\n               description: |\n                  A list of configuration options for certain types of protocol adapters.\n                  If set then the array must not be empty.\n                  Multiple entries for the same type are considered an error.\n                  If not set, then all adapters are enabled using their respective\n                  default configuration.\n               items:\n                  $ref: '#/components/schemas/Adapter'\n            \"defaults\":\n               $ref: '#/components/schemas/DefaultProperties'\n            \"minimum-message-size\":\n               type: integer\n               default: 0\n               description: |\n                  The minimum message size in bytes. If set, then reported size of\n                  telemetry, event and command messages is calculated as the minimum multiple\n                  of the configured value that is greater than or equal to the messages\n                  payload size.\n            \"registration-limits\":\n               $ref: '#/components/schemas/RegistrationLimits'\n            \"resource-limits\":\n               $ref: '#/components/schemas/ResourceLimit'\n            \"tracing\":\n               $ref: '#/components/schemas/TracingConfig'\n            \"trust-anchor-group\":\n               type: string\n               description: |\n                  A logical identifier used for implicitly grouping together tenants that may use trusted CAs having\n                  the same subject DN.\n            \"trusted-ca\":\n               type: array\n               description: |\n                  The set of root certificate authorities which are used for verifying the signature of\n                  client certificates that devices use for authentication.\n               items:\n                  $ref: '#/components/schemas/TrustedCA'\n\n      TenantWithId:\n         type: object\n         additionalProperties: false\n         allOf:\n            - type: object\n              properties:\n                 \"id\":\n                    description: The identifier of the tenant.\n                    type: string\n            - $ref: '#/components/schemas/Tenant'\n\n      TrustedCA:\n         type: object\n         additionalProperties: false\n         properties:\n            \"id\":\n               type: string\n               description: |\n                  An (optional) identifier for the trust anchor. This identifier must be unique\n                  among a tenant's trust anchors. If this property is not provided,\n                  then the device registry assigns a unique identifier.\n               example: A user provided identifier could look like \"DEFAULT_TENANT_CA_2021_2022\".\n            \"subject-dn\":\n               type: string\n               description: |\n                  The subject DN of the trusted root certificate in\n                  the format defined by [RFC 2253](https://tools.ietf.org/html/rfc2253#section-2).\n                  CAs of the *same* tenant may share the same subject DN, for example\n                  allowing for the definition of overlapping validity periods.\n                  However, CAs of *different* tenants must not share the same\n                  subject DN in order to allow for the unique look up of a tenant by\n                  the subject DN of one of its trusted CAs.\n                  If the `cert` property is used to provide an X.509 certificate\n                  then the subject DN is determined from the certificate and this\n                  property is ignored.\n                  Otherwise, if the `public-key` property is\n                  used, this property is mandatory.\n            \"public-key\":\n               type: string\n               format: byte\n               description: |\n                  The Base64 encoded binary DER encoding of the\n                  trusted root certificate’s public key.\n                  If the `cert` property is used to provide an\n                  X.509 certificate then the public key is extracted\n                  from the certificate and this property is ignored.\n                  Either this property or `cert` must be set.\n            \"algorithm\":\n               type: string\n               description: |\n                  The algorithm used for the public key of the CA.\n                  If the `cert` property is used to provide an\n                  X.509 certificate then the algorithm is determined\n                  from the certificate and this property is ignored.\n                  Otherwise, if the `public-key` property is\n                  used, this property must be set to the algorithm\n                  used, if other than the default.\n               default: RSA\n               example: EC\n            \"not-before\":\n               type: string\n               format: date-time\n               description: |\n                  The point in time from which on the certificate authority\n                  may be used for authenticating devices.\n                  If the `cert` property is used to provide an\n                  X.509 certificate then the point in time is\n                  determined from the certificate and this property is ignored.\n                  Otherwise, if the `public-key` property is\n                  used, this property is mandatory.\n                  NB: The value MUST be a string that complies with the format defined in\n                  [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6) as indicated\n                  by the [date-time](https://spec.openapis.org/oas/v3.0.1#dataTypeFormat)\n                  format in the OpenAPI specification.\n            \"not-after\":\n               type: string\n               format: date-time\n               description: |\n                  The point in time until which the certificate authority\n                  may be used for authenticating devices.\n                  If the `cert` property is used to provide an\n                  X.509 certificate then the point in time is\n                  determined from the certificate and this property is ignored.\n                  Otherwise, if the `public-key` property is\n                  used, this property is mandatory.\n                  NB: The value MUST be a string that complies with the format defined in\n                  [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6) as indicated\n                  by the [date-time](https://spec.openapis.org/oas/v3.0.1#dataTypeFormat)\n                  format in the OpenAPI specification.\n            \"cert\":\n               type: string\n               format: byte\n               description: |\n                  The Base64 encoded binary DER encoding of the trusted X.509 root certificate.\n                  This property can be used as a convenient alternative to\n                  specifying the `public-key`, `not-before`, `not-after` and\n                  `algorithm` properties explicitly. Implementors of this\n                  API may choose to support this property only for uploading\n                  a certificate but then extract all relevant data and store\n                  it in the properties described above.\n                  Either this property or `public-key` must be set.\n            \"auth-id-template\":\n               type: string\n               description: |\n                  Specifies the template to generate the `auth-id` to use for authentication and also\n                  auto-provisioning of devices and gateways based on the client certificate. The placeholders\n                  `{{subject-cn}}`, `{{subject-dn}}`, `{{subject-ou}}` and `{{subject-o}}` are currently supported.\n                  The template MUST contain at least one of these placeholders. The `auth-id` is generated by\n                  replacing all the placeholders in the template string with their corresponding *Common Name (CN)*,\n                  *Organizational Unit Name (OU)* and *Organization Name (O)* from the client certificate's subject DN.\n                  If the template is not specified, the client certificate's subject DN is used as the `auth-id`.\n                  The *Subject DN* is formatted according to the rules defined in \n                  [RFC 2253](https://tools.ietf.org/html/rfc2253#section-2).\n            \"auto-provisioning-enabled\":\n               type: boolean\n               default: false\n               description: |\n                  Indicates whether this trusted certificate may be used for automatically provisioning devices.\n                  If it is *true* and the feature is supported by the device registry, the device registry\n                  automatically provisions unregistered devices that authenticate with a client certificate\n                  issued by this CA (that is, creates registration and credentials).\n            \"auto-provision-as-gateway\":\n               type: boolean\n               default: false\n               description: |\n                  Indictates whether this trusted certificate authority may be used for automatically provisioning \n                  gateways. If it is *true* and the *auto-provisioning-enabled* is also *true*, then the unregistered\n                  devices that authenticate with a client certificate issued by this CA are provisioned as gateways\n                  provided that the device registry implementation being used supports this feature.\n            \"auto-provisioning-device-id-template\":\n               type: string\n               description: |\n                  Specifies the template to use by the device registry to generate the `device-id` during \n                  auto-provisioning of devices and gateways. The placeholders `{{subject-cn}}`, `{{subject-dn}}`,\n                  `{{subject-ou}}` and `{{subject-o}}` are currently supported. The template MUST contain at least\n                  one of these placeholders. The `device-id` is generated by replacing any placeholders in the\n                  template string with their corresponding *Common Name (CN)*, *Organizational Unit Name (OU)* and\n                  *Organization Name (O)* from the client certificate's subject DN. The *Subject DN* is formatted\n                  according to the rules defined in [RFC 2253](https://tools.ietf.org/html/rfc2253#section-2).\n\n         example:\n            subject-dn: \"CN=devices,OU=iot,O=ACME\"\n            public-key: \"Tk9UIEEgUFVCTElDIEtFWQ==\"\n            algorithm: \"EC\"\n            auto-provisioning-enabled: true\n            auto-provision-as-gateway: false\n            auto-provisioning-device-id-template: \"device-{{subject-dn}}\"\n            not-before: \"2019-10-03T13:45:16+02:00\"\n            not-after: \"2021-10-03T00:00:00Z\"\n\n      Adapter:\n         type: object\n         additionalProperties: true\n         required:\n            - type\n         properties:\n            \"type\":\n               type: string\n            \"enabled\":\n               type: boolean\n               default: false\n            \"device-authentication-required\":\n               type: boolean\n               default: true\n            \"ext\":\n               $ref: '#/components/schemas/Extensions'\n\n      RegistrationLimits:\n         type: object\n         additionalProperties: false\n         properties:\n            \"max-devices\":\n               type: integer\n               default: -1\n               description: |\n                  The maximum number of devices that can be registered for a tenant.\n                  A value of `-1` (the default) indicates that no limit is set.\n            \"max-credentials-per-device\":\n               type: integer\n               default: -1\n               description: |\n                  The maximum number of credentials that can be registered for a device.\n                  A value of `-1` (the default) indicates that no limit is set.\n\n      ResourceLimit:\n         type: object\n         additionalProperties: false\n         properties:\n            \"max-connections\":\n               type: integer\n               default: -1\n               description: |\n                  The maximum number of concurrent connections allowed from devices of this tenant.\n                  A value of `-1` (the default) indicates that no limit is set.\n            \"max-ttl\":\n               type: integer\n               default: -1\n               description: |\n                  The maximum time-to-live (in seconds) to use for events published by\n                  devices of this tenant. Any default TTL value specified\n                  at either the tenant or device level will be limited to\n                  the max value specified here.\n                  If this property is set to a value greater than `-1` and no\n                  default TTL is specified for a device, the max value will\n                  be used for events published by the device.\n                  A value of `-1` (the default) indicates that no limit is set.\n                  Note that this property contains the TTL in seconds whereas\n                  the AMQP 1.0 specification defines a message's ttl header\n                  to use milliseconds.\n            \"max-ttl-telemetry-qos0\":\n               type: integer\n               default: -1\n               description: |\n                  The maximum time-to-live (in seconds) to use for telemetry messages that\n                  are published by devices of this tenant using QoS 0.\n                  If this property is set to a value greater than `-1` then this value will\n                  be used for all QoS 0 telemetry messages published by the tenant's devices.\n                  A value of `-1` (the default) indicates that no limit is set.\n                  Note that this property contains the TTL in seconds whereas\n                  the AMQP 1.0 specification defines a message's ttl header\n                  to use milliseconds.\n            \"max-ttl-telemetry-qos1\":\n               type: integer\n               default: -1\n               description: |\n                  The maximum time-to-live (in seconds) to use for telemetry messages that\n                  are published by devices of this tenant using QoS 1.\n                  If this property is set to a value greater than `-1` then this value will\n                  be used for all QoS 1 telemetry messages published by the tenant's devices.\n                  A value of `-1` (the default) indicates that no limit is set.\n                  Note that this property contains the TTL in seconds whereas\n                  the AMQP 1.0 specification defines a message's ttl header\n                  to use milliseconds.\n            \"max-ttl-command-response\":\n               type: integer\n               default: -1\n               description: |\n                  The maximum time-to-live (in seconds) to use for command response messages\n                  published by devices of this tenant.\n                  If this property is set to a value greater than `-1` then this value will\n                  be used for all command response messages published by the tenant's devices.\n                  A value of `-1` (the default) indicates that no limit is set.\n                  Note that this property contains the TTL in seconds whereas\n                  the AMQP 1.0 specification defines a message's ttl header\n                  to use milliseconds.\n            \"data-volume\":\n               $ref: '#/components/schemas/DataVolume'\n            \"connection-duration\":\n               $ref: '#/components/schemas/ConnectionDuration'\n            \"ext\":\n               $ref: '#/components/schemas/Extensions'\n\n      TracingConfig:\n         type: object\n         additionalProperties: false\n         properties:\n            \"sampling-mode\":\n               type: string\n               description: |\n                  Defines if and how often OpenTracing spans are being\n                  sampled when processing messages for this tenant.\n                  The value `default` indicates that the underyling tracing\n                  system's default sampling mode should be used.\n                  The value `all` indicates that every span created for\n                  messages of the tenant will be sampled.\n                  The value `none` indicates that no spans should be sampled\n                  at all for the tenant.\n                  The mode defined here may be overridden for specific\n                  devices by means of the `sampling-mode-per-auth-id`\n                  property.\n               default: default\n               enum:\n                  - default\n                  - all\n                  - none\n            \"sampling-mode-per-auth-id\":\n               type: object\n               description: |\n                  Defines if and how often OpenTracing spans are being\n                  sampled when processing messages for specific devices\n                  of this tenant.\n                  This object contains a property for each device for which\n                  specific behavior should be defined, using the device's\n                  authentication identifier as the property name and\n                  the device specific sampling mode as its value.\n                  The value `default` indicates that the underyling tracing\n                  system's default sampling mode should be used.\n                  The value `all` indicates that every span created for\n                  messages of the tenant will be sampled.\n                  The value `none` indicates that no spans should be sampled\n                  at all for the tenant.\n                  The mode defined for a particular device has precedence\n                  over the value defined by the `sampling-mode` property.\n               additionalProperties:\n                  type: string\n                  description: |\n                    The property name is the device's 'authentication identifier.\n                  default: default\n                  enum:\n                     - default\n                     - all\n                     - none\n\n      DataVolume:\n         type: object\n         additionalProperties: false\n         required:\n            - effective-since\n         properties:\n            \"effective-since\":\n               type: string\n               format: date-time\n               description: |\n                  The point in time at which the data volume limit came into effect.\n                  NB: The value MUST be a string that complies with the format defined in\n                  [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6) as indicated\n                  by the [date-time](https://spec.openapis.org/oas/v3.0.1#dataTypeFormat)\n                  format in the OpenAPI specification.\n            \"max-bytes\":\n               type: integer\n               default: -1\n               description: The maximum amount of data (in bytes) that all of the tenant's devices together may\n                            transfer to and/or receive from protocol adapters during each accounting period.\n                            A value of `-1` (the default) indicates that no limit is set.\n            \"period\":\n               $ref: '#/components/schemas/Period'\n\n      ConnectionDuration:\n         type: object\n         additionalProperties: false\n         required:\n            - effective-since\n         properties:\n            \"effective-since\":\n               type: string\n               format: date-time\n               description: |\n                  The point in time at which the connection duration limit came into effect.\n                  NB: The value MUST be a string that complies with the format defined in\n                  [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6) as indicated\n                  by the [date-time](https://spec.openapis.org/oas/v3.0.1#dataTypeFormat)\n                  format in the OpenAPI specification.\n            \"max-minutes\":\n               type: integer\n               default: -1\n               description: |\n                 The maximum amount of time (in minutes) that all of the tenant's devices together may\n                 be connected to a protocol adapter during each accounting period.\n                 A value of `-1` (the default) indicates that no limit is set.\n            \"period\":\n               $ref: '#/components/schemas/Period'\n\n      Period:\n         type: object\n         additionalProperties: false\n         required:\n            - mode\n         properties:\n            \"mode\":\n               type: string\n               description: |\n                 The accounting period's mode of recurrence. The following modes are defined:\n                 * `monthly`: Accounting periods start at midnight (start of day) UTC on the 1st day of each month.\n                 * `days`: Accounting periods start at the time of the initial accounting period every *N* days where\n                           *N* is the value of the *no-of-days* property.\n\n                 The initial accounting period always starts at the point in time that the plan was put in effect at.\n                 Implementations MUST support the *monthly* and *days* modes and MAY support additional custom modes.\n            \"no-of-days\":\n               type: integer\n               minimum: 1\n               description: The accounting period length in days. This property is only used if *mode* is set to value\n                            `days`. Otherwise, this property is ignored.\n               \n# Devices schema\n\n      Device:\n         type: object\n         additionalProperties: false\n         properties:\n            \"enabled\":\n               type: boolean\n               default: true\n            \"defaults\":\n               $ref: '#/components/schemas/DefaultProperties'\n            \"via\":\n               type: array\n               items:\n                  type: string\n               description: |\n                  The device IDs of the gateways that are registered to act on behalf of this device.\n                  Note that \"via\" and \"memberOf\" must not be set at the same time.\n            \"viaGroups\":\n               type: array\n               items:\n                  type: string\n               description: |\n                  The IDs of the gateway groups that are registered to act on behalf of this device.\n                  Note that \"viaGroups\" and \"memberOf\" must not be set at the same time.\n            \"memberOf\":\n               type: array\n               items:\n                  type: string\n               description: |\n                  The IDs of the gateway groups that this device is a member of.\n                  Note that neither \"via\" nor \"viaGroups\" must be set if \"memberOf\" is set.\n            \"authorities\":\n               type: array\n               items:\n                  type: string\n               description: |\n                  The authorities granted to a device. Applies to gateways only currently: the authority\n                  `auto-provisioning-enabled` entitles a gateway device to perform auto-provisioning for its\n                  edge devices.\n            \"downstream-message-mapper\":\n               type: string\n               description: |\n                  The name of a service that can be used by protocol adapters to transform downstream messages\n                  uploaded by devices before sending them to downstream consumers.\n                  The protocol adapter needs to map this name to the particular service to invoke.\n                  NB: This is an experimental feature and thus this property is subject to change without\n                  notice.\n            \"upstream-message-mapper\":\n               type: string\n               description: |\n                  The name of a service that can be used by protocol adapters to transform upstream commands to be sent to devices.\n                  The protocol adapter needs to map this name to the particular service to invoke.\n                  NB: This is an experimental feature and thus this property is subject to change without\n                  notice.\n            \"ext\":\n               $ref: '#/components/schemas/Extensions'\n            \"status\":\n               $ref: '#/components/schemas/Status'\n            \"command-endpoint\":\n               type: object\n               additionalProperties: false\n               description: |\n                  The endpoint of the device that command messages should be sent to. Only relevant for devices\n                  that connect to a type of protocol adapter that actively connects to the device for sending commands,\n                  instead of using a connection initiated by the device.\n               required:\n                  - uri\n               properties:\n                  \"uri\":\n                     type: string\n                     description: |\n                        Configures the URI to which the command should be sent. The placeholder `{{deviceId}}` is\n                        supported and will be replaced with the id of the device to which the command was initially\n                        sent.\n                  \"headers\":\n                     type: object\n                     additionalProperties: true\n                     description: Allows arbitrary headers which will be added to the command.\n                  \"payload-properties\":\n                     type: object\n                     additionalProperties: true\n                     description: Allows arbitrary properties which will be added to the command payload.\n\n      DeviceWithId:\n         type: object\n         additionalProperties: false\n         allOf:\n            - type: object\n              properties:\n                 \"id\":\n                    description: The identifier of the device.\n                    type: string\n                    readOnly: true\n            - $ref: '#/components/schemas/Device'\n\n      Status:\n         type: object\n         additionalProperties: false\n         description: |\n            Additional meta data describing the entity.\n         properties:\n            \"created\":\n               type: string\n               format: date-time\n               readOnly: true\n               description: The point in time when the entity was originally created.\n            \"updated\":\n               type: string\n               format: date-time\n               readOnly: true\n               description: The point in time when the entity was last updated.\n            \"last-user\":\n               type: string\n               readOnly: true\n               description: The user who made the last edit on this entity.\n            \"auto-provisioned\":\n               type: boolean\n               default: false\n               readOnly: true\n               description: Indicates if the entity was created via auto-provisioning.\n            \"auto-provisioning-notification-sent\":\n               type: boolean\n               default: false\n               readOnly: true\n               description: Indicates if downstream consumers have been notified about the newly auto-provisioned\n                  entity by means of a corresponding event.\n\n      SearchTenantsResult:\n         type: object\n         description: The result of a search request for tenants.\n         additionalProperties: false\n         properties:\n            \"total\":\n               type: integer\n               minimum: 0\n               description: The total number of objects in the result set, regardless of the *pageSize* set in query.\n            \"result\":\n               type: array\n               items:\n                  $ref: '#/components/schemas/TenantWithId'\n\n      SearchDevicesResult:\n         type: object\n         description: The result of a search request for devices.\n         additionalProperties: false\n         properties:\n            \"total\":\n               type: integer\n               minimum: 0\n               description: The total number of objects in the result set, regardless of the *pageSize* set in query.\n            \"result\":\n               type: array\n               items:\n                  $ref: '#/components/schemas/DeviceWithId'\n\n# Credentials\n\n      CredentialsSet:\n         type: array\n         description: A set of credentials. The entries in this list must be\n                      unique by the composite key of `auth-id` and `type`.\n         items:\n            $ref: '#/components/schemas/TypedCredentials'\n\n      TypedCredentials:\n         additionalProperties: false\n         oneOf:\n            - $ref: '#/components/schemas/PasswordCredentials'\n            - $ref: '#/components/schemas/PSKCredentials'\n            - $ref: '#/components/schemas/X509CertificateCredentials'\n         discriminator:\n            propertyName: type\n            mapping:\n               \"hashed-password\": '#/components/schemas/PasswordCredentials'\n               \"psk\": '#/components/schemas/PSKCredentials'\n               \"x509-cert\": '#/components/schemas/X509CertificateCredentials'\n\n      CommonCredentials:\n         type: object\n         additionalProperties: false\n         properties:\n            \"type\":\n               type: string\n            \"auth-id\":\n               type: string\n            \"enabled\":\n               type: boolean\n               default: true\n            \"ext\":\n               $ref: '#/components/schemas/Extensions'\n\n      PasswordCredentials:\n         additionalProperties: false\n         allOf:\n            - $ref: '#/components/schemas/CommonCredentials'\n            - type: object\n              required:\n                 - type\n                 - auth-id\n                 - secrets\n              additionalProperties: false\n              properties:\n                 \"type\":\n                    type: string\n                    pattern: \"hashed-password\"\n                 \"auth-id\":\n                    type: string\n                    description: |\n                       The authentication identifier provided by the device as part of the *user name*.\n                       Example: For user name `sensor1@DEFAULT_TENANT` the authentication identifier to be registered\n                       is `sensor1`.\n                 \"secrets\":\n                    type: array\n                    items:\n                       $ref: '#/components/schemas/PasswordSecret'\n                    minItems: 1\n\n      PSKCredentials:\n         additionalProperties: false\n         allOf:\n            - $ref: '#/components/schemas/CommonCredentials'\n            - type: object\n              required:\n                 - type\n                 - auth-id\n                 - secrets\n              additionalProperties: false\n              properties:\n                 \"type\":\n                    type: string\n                    pattern: \"psk\"\n                 \"auth-id\":\n                    type: string\n                    description: The *PSK identity* provided by the device in the TLS handshake.\n                 \"secrets\":\n                    type: array\n                    items:\n                       $ref: '#/components/schemas/PSKSecret'\n                    minItems: 1\n\n      X509CertificateCredentials:\n         additionalProperties: false\n         allOf:\n            - $ref: '#/components/schemas/CommonCredentials'\n            - type: object\n              required:\n                 - type\n              additionalProperties: false\n              properties:\n                 \"type\":\n                    type: string\n                    pattern: \"x509-cert\"\n                 \"auth-id\":\n                    type: string\n                    description: |\n                       The *subject DN* of the public key contained in the device's X.509 certificate.\n                       The value MUST be formatted according to the rules defined in\n                       [RFC 2253](https://tools.ietf.org/html/rfc2253#section-2).\n                       If the property *auth-id-template* is specified in the tenant's trusted anchor,\n                       the implementors of this API MUST generate *auth-id* by applying the template to\n                       the given *subject DN*. Otherwise the *Subject DN* is stored as the *auth-id*.\n                 \"secrets\":\n                    type: array\n                    items:\n                       $ref: '#/components/schemas/X509CertificateSecret'\n                    description: |\n                       A secret containing the X.509 certificate's validity period.\n                    minItems: 1\n                    maxItems: 1\n                 \"cert\":\n                    type: string\n                    format: byte\n                    writeOnly: true\n                    description: |\n                       The Base64 encoded binary DER encoding of the device's X.509 client certificate.\n                       This property can be used as a convenient alternative to specifying the certificate's\n                       meta data in the *auth-id* and *secrets* explicitly.\n                       When provided in a request body, implementors of this API MUST extract the subject DN\n                       from the certificate's public key. The *subject DN* MUST be formatted according to the\n                       rules defined in [RFC 2253](https://tools.ietf.org/html/rfc2253#section-2).\n                       The extracted *subject DN* is used as the *auth-id* if there is no *auth-id-template*\n                       specified in the tenant's trusted anchor. Otherwise, the *auth-id* MUST be generated\n                       by applying the template to the extracted *subject DN*. The certificate's validity\n                       period MUST be stored in a single secret. The certificate itself must then be discarded.\n\n      CommonSecret:\n         type: object\n         additionalProperties: false\n         properties:\n            \"id\":\n               type: string\n               description: The device registry can assign an identity to the secret.\n                            This value can be used to update secrets based on their metadata.\n            \"enabled\":\n               type: boolean\n               default: true\n               description: Indicates if this secret can be used for authentication.\n            \"not-before\":\n               type: string\n               format: date-time\n               description: |\n                  The point in time from which on this secret will be accepted for authentication.\n                  NB: The value MUST be a string that complies with the format defined in\n                  [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6) as indicated\n                  by the [date-time](https://spec.openapis.org/oas/v3.0.1#dataTypeFormat)\n                  format in the OpenAPI specification.\n            \"not-after\":\n               type: string\n               format: date-time\n               description: |\n                  The point in time after which this secret will no longer be accepted for authentication.\n                  NB: The value MUST be a string that complies with the format defined in\n                  [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6) as indicated\n                  by the [date-time](https://spec.openapis.org/oas/v3.0.1#dataTypeFormat)\n                  format in the OpenAPI specification.\n            \"comment\":\n               type: string\n\n      X509CertificateSecret:\n         additionalProperties: false\n         allOf:\n            - $ref: '#/components/schemas/CommonSecret'\n\n      PasswordSecret:\n         additionalProperties: false\n         allOf:\n            - $ref: '#/components/schemas/CommonSecret'\n            - type: object\n              additionalProperties: false\n              properties:\n                 \"hash-function\":\n                    type: string\n                    example: bcrypt\n                    description: The name of the hash function used to create the password hash (defined in `pwd-hash` property).\n                                 If the password is defined using a `pwd-plain` property, this value will be ignored by the device registry.\n                                 This property should be empty when returning passwords from the device registry using only secret metadata.\n                                 In this case the id field must be set instead.\n                 \"pwd-hash\":\n                    type: string\n                    description: The password hash as a string, either the output of applying the Bcrypt hash function\n                                 to the clear text password if the `hash-function` is `bcrypt`, or otherwise the Base64 encoding\n                                 of the bytes resulting from applying the hash function to the byte array consisting of the salt bytes\n                                 (if a salt is used) and the UTF-8 encoding of the clear text password.\n                                 For detail regarding different hash functions and the required encoding refer to the\n                                 [Credentials API](https://www.eclipse.org/hono/docs/api/credentials/#hashed-password).\n                                 If the password is defined using a `pwd-plain` property, this value will be ignored by the device registry.\n                                 This property should be empty when returning passwords from the device registry using only secret metadata.\n                                 In this case the id field must be set instead.\n                 \"salt\":\n                    type: string\n                    format: byte\n                    description: The Base64 encoding of the salt used in the password hash (defined in the `pwd-hash` property).\n                                 If the password is defined using a `pwd-plain` property, this value will be ignored by the device registry.\n                                 This property should be empty when returning passwords from the device registry using only secret metadata.\n                                 In this case the id field must be set instead.\n                 \"pwd-plain\":\n                    type: string\n                    writeOnly: true\n                    description: The clear text value of the password to be hashed by the device registry.\n                                 If this property is specified, the device registry will ignore user-provided hash properties (`hash-function`, `pwd-hash` and `salt`).\n                                 This property must never be included in a response from the device registry.\n                                 A device registry implementation must never write plain text passwords to a persistent store.\n\n      PSKSecret:\n         additionalProperties: false\n         allOf:\n            - $ref: '#/components/schemas/CommonSecret'\n            - type: object\n              additionalProperties: false\n              required:\n                 - key\n              properties:\n                 \"key\":\n                    type: string\n                    format: byte\n                    description: The secret key shared between device and Hono.\n\n      FilterJson:\n        description: Filters to be applied to bulk queries.\n        additionalProperties: false\n        required:\n           - field\n           - value\n        properties:\n          \"field\":\n            type: string\n            description: |\n              A [Json Pointer](https://tools.ietf.org/html/rfc6901) identifying the field to use for filtering.\n          \"op\":\n            type: string\n            description: The operator to use when applying the filter.\n            default: eq\n            enum:\n              - eq\n          \"value\":\n            oneOf:\n              - type: boolean\n                description: The value to filter the boolean typed field with.\n              - type: integer\n                description: The value to filter the integer typed field with.\n              - type: number\n                description: The value to filter the number typed field with.\n              - type: string\n                description: |\n                   The value to filter the string typed field with.\n                   Wildcard characters are supported : `*` will match zero or any number of characters\n                   and `?` will match exactly one character.\n\n   parameters:\n\n      resourceVersion:\n         name: If-Match\n         in: header\n         description: The expected resource version\n         required: false\n         schema:\n            type: string\n\n      tenantId:\n         name: tenantId\n         in: path\n         description: The ID of the tenant\n         required: true\n         schema:\n            type: string\n         example: DEFAULT_TENANT\n\n      deviceId:\n         name: deviceId\n         in: path\n         description: The ID of the device\n         required: true\n         schema:\n            type: string\n         example: 4711\n\n      pageSize:\n        name: pageSize\n        in: query\n        description: |\n           The maximum number of objects to include in a response.\n        required: false\n        schema:\n           type: integer\n           minimum: 0\n           maximum: 200\n           default: 30\n\n      pageOffset:\n        name: pageOffset\n        in: query\n        description: |\n           The offset into the result set from which to include objects in the response. This allows to retrieve the whole result set page by page.\n        required: false\n        schema:\n           type: integer\n           minimum: 0\n           default: 0\n\n      filterJson:\n        name: filterJson\n        in: query\n        description: |\n          A predicate that objects in the result set must match. If this parameter is specified multiple\n          times, objects in the result set must match all predicates.\n          The predicate is specified as a string representing a JSON object complying with the following schema\n          ```\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"required\": [\"field\", \"value\"],\n            \"properties\": {\n              \"field\": {\n                \"type\": \"string\",\n                \"description\": \"A Json Pointer (https://tools.ietf.org/html/rfc6901) identifying the field to use for filtering.\"\n              },\n              \"op\": {\n                \"type\": \"string\",\n                \"description\": \"The operator to apply.\",\n                \"default\": \"eq\",\n                \"enum\": [\"eq\"]\n              },\n              \"value\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"boolean\",\n                    \"description\": \"The value to filter the boolean typed field with.\"\n                  },{\n                    \"type\": \"number\",\n                    \"description\": \"The value to filter the number typed field with.\"\n                  },{\n                    \"type\": \"string\",\n                    \"description\": \"The value to filter the string typed field with.\n                       Wildcard characters are supported : `*` will match zero or any number of characters\n                       and `?` will match exactly one character.\"\n                  }\n                ]\n              }\n            }\n          }\n          ```\n        required: false\n        schema:\n          type: string\n        examples:\n          boolean field:\n            value: \"{\\\"field\\\": \\\"/enabled\\\",\\\"value\\\": true}\"\n          number field:\n            value: \"{\\\"field\\\": \\\"/ext/count\\\",\\\"value\\\": 15}\"\n          string field:\n            value: \"{\\\"field\\\": \\\"/ext/brand\\\",\\\"value\\\": \\\"eclipse*\\\"}\"\n\n      sortJson:\n        name: sortJson\n        in: query\n        description: |\n          Specifies a property to sort the result set by. If this parameter is specified multiple\n          times, the sort options are applied in the order they are specified in the query string.\n          The sort option is specified as a string representing a JSON object complying with the following schema\n          ```\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"required\": [\"field\"],\n            \"properties\": {\n              \"field\": {\n                \"type\": \"string\",\n                \"description\": \"A Json Pointer (https://tools.ietf.org/html/rfc6901) identifying the field to sort by.\"\n              },\n              \"direction\": {\n                \"type\": \"string\",\n                \"description\": \"The sort direction.\",\n                \"default\": \"asc\",\n                \"enum\": [\"asc\", \"desc\"]\n              }\n            }\n          }\n          ```\n        required: false\n        schema:\n          type: string\n        examples:\n          sort ascending:\n            value: \"{\\\"field\\\":\\\"/ext/brand\\\"}\"\n          sort descending:\n            value: \"{\\\"field\\\":\\\"/status/created\\\",\\\"direction\\\":\\\"desc\\\"}\"\n\n   responses:\n\n      Unauthorized:\n         description: Authentication credentials are required, but missing.\n         headers:\n            \"WWW-Authenticate\":\n               schema:\n                  type: string\n\n      Created:\n         description: Object created.\n         headers:\n            Location:\n               description: URL to the resource\n               schema:\n                  type: string\n                  format: uri\n            ETag:\n               description: The new version of the resource\n               schema:\n                  type: string\n         content:\n            application/json:\n               schema:\n                  type: object\n                  additionalProperties: false\n                  required:\n                     - id\n                  properties:\n                     id:\n                        type: string\n                        description: The ID of the created object\n\n      Updated:\n         description: Object updated.\n         headers:\n            ETag:\n               description: The new version of the resource\n               schema:\n                  type: string\n\n      Deleted:\n         description: Object deleted.\n\n      NotFound:\n         description: |\n            Object not found. This may also be returned for some operations\n            if the user lacks authorization to read the subject of the operation.\n         content:\n            application/json:\n               schema:\n                  $ref: '#/components/schemas/Error'\n\n      TenantNotFound:\n         description: |\n            The referenced tenant could not be found.\n\n            This may also be returned for some operations\n            if the user lacks authorization to read the tenant.\n         content:\n            application/json:\n               schema:\n                  $ref: '#/components/schemas/Error'\n\n      DeviceNotFound:\n         description: |\n            The referenced device could not be found.\n\n            This may also be returned for some operations\n            if the user lacks authorization to read the device.\n         content:\n            application/json:\n               schema:\n                  $ref: '#/components/schemas/Error'\n\n      NotAllowed:\n         description: |\n            Operation not allowed. If the user does not have read access\n            for this object, then `404` will be returned instead.\n         content:\n            application/json:\n               schema:\n                  $ref: '#/components/schemas/Error'\n\n      MalformedRequest:\n         description: Malformed request\n         content:\n            application/json:\n               schema:\n                  $ref: '#/components/schemas/Error'\n\n      AlreadyExists:\n         description: |\n            Object already exists. If the user has no read access for\n            the existing object, then `403` should be returned instead.\n         content:\n            application/json:\n               schema:\n                  $ref: '#/components/schemas/Error'\n\n      ResourceVersionMismatch:\n         description: |\n            Expected resource version does not match current.\n            This can only happen when the request header `If-Match`\n            was set.\n         content:\n            application/json:\n               schema:\n                  $ref: '#/components/schemas/Error'\n\n      RequestEntityTooLarge:\n         description: |\n            The size of the payload in the request body exceeds the registry's configured limit.\n         content:\n            application/json:\n               schema:\n                  $ref: '#/components/schemas/Error'\n\n   securitySchemes:\n\n      BearerAuth:\n         type: http\n         scheme: bearer\n\n      BasicAuth:\n         type: http\n         scheme: basic\n\n   examples:\n\n      TenantAllAdaptersExample:\n         summary: All adapters\n         description: |\n            An empty request body can be used to create a tenant\n            using default values. This means that the tenant will be\n            enabled and devices of the tenant may connect to all\n            protocol adapters.\n         value:\n\n      TenantMqttAdapterOnlyExample:\n         summary: MQTT adapter only\n         description: |\n            Creates a tenant with only the MQTT adapter enabled.\n            Devices of the tenant will thus not be able to connect\n            to any adapter other than the MQTT adapter.\n         value: |\n            {\n               \"adapters\": [{\n                  \"type\": \"hono-mqtt\",\n                  \"enabled\": true\n               }]\n            }\n\n      DeviceDefaultExample:\n         summary: Default properties\n         description: |\n            An empty request body can be used to create an enabled device\n            with no additional configuration.\n\n      DeviceExtExample:\n         summary: Extension properties\n         description: |\n            Creates a device with some (application specific) extension properties.\n         value: |\n            {\n                \"ext\": {\n                   \"ep\": \"IMEI4711\"\n                }\n            }\n\n      CredentialsSetPasswordExample:\n         summary: Set pre-hashed password\n         description: |\n            The secret does not refer to an existing secret (no *id* property). Thus, the\n            existing secrets (if any) will be replaced with the hashed password secret.\n         value:\n            [{\n                \"auth-id\": \"sensor1\",\n                \"type\": \"hashed-password\",\n                \"secrets\": [{\n                   \"pwd-hash\": \"AQIDBAUGBwg=\",\n                   \"salt\": \"Mq7wFw==\",\n                   \"hash-function\": \"sha-512\",\n                   \"not-after\": \"2027-12-24T19:00:00Z\"\n                }]\n             }]\n\n      CredentialsChangePasswordExample:\n         summary: Change password\n         description: |\n            The secret refers to an existing hashed password which will be updated\n            with the included values. The plaintext password will be hashed using\n            the registry's default hash algorithm.\n         value:\n           [{\n               auth-id: sensor1,\n               type: hashed-password,\n               secrets: [{\n                  \"id\": \"349556ea-4902-47c7-beb0-1009ab693fb4\",\n                  \"pwd-plain\": \"newpassword\",\n                  \"not-after\": \"2027-12-24T19:00:00Z\"\n               }]\n            }]\n\n      CredentialsMetaDataExample:\n         summary: Meta data only\n         description: |\n            The secrets do not contain the confidential information like password hash\n            or salt. Instead, the secrets contain an identifier which can be\n            used to refer to the secret in a subsequent update operation.\n         value:\n           [{\n               \"enabled\": true,\n               \"auth-id\": \"sensor1\",\n               \"type\": \"hashed-password\",\n               \"secrets\": [{\n                  \"id\": \"349556ea-4902-47c7-beb0-1009ab693fb4\",\n                  \"not-after\": \"2027-12-24T19:00:00Z\"\n               }]\n            }]\n",
			"canonicalURL": "/github.com/eclipse/hono@074d92032a936f3c1e63b1627b3d1efcd8946775/-/blob/site/documentation/content/api/management/device-registry-v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/eclipse/hono/blob/074d92032a936f3c1e63b1627b3d1efcd8946775/site/documentation/content/api/management/device-registry-v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/credentials/{tenantId}/{deviceId}\": get: responses: 200: contents: application/json: generate schema: item: oneOf: collect variants: oneOf[0]: allOf: allOf additionalProperties merging not implemented",
	"NotImplemented": [
		"allOf additionalProperties merging"
	]
}