{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/qiudaoke/flowable-userguide"
		},
		"file": {
			"name": "flowable-oas-form.yaml",
			"size": 0,
			"path": "V6.5.0/docs/public-api/references/openapi/form/flowable-oas-form.yaml",
			"byteSize": 33737,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'http://localhost:8080/flowable-rest/form-api'\n  - url: 'https://localhost:8080/flowable-rest/form-api'\ninfo:\n  description: \u003e-\n    # flowable / flow??b(??)l /\n\n\n    - a compact and highly efficient workflow and Business Process Management\n    (BPM) platform for developers, system admins and business users.\n\n    - a lightning fast, tried and tested BPMN 2 process engine written in Java.\n    It is Apache 2.0 licensed open source, with a committed community.\n\n    - can run embedded in a Java application, or as a service on a server, a\n    cluster, and in the cloud. It integrates perfectly with Spring. With a rich\n    Java and REST API, it is the ideal engine for orchestrating human or system\n    activities.\n  version: v1\n  title: Flowable Form REST API\n  contact:\n    name: Flowable\n    url: 'http://www.flowable.org/'\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: Engine\n  - name: Form Definitions\n  - name: Form Deployments\n  - name: Form Instance Models\n  - name: Form Instances\n  - name: Form Models\n  - name: Query\npaths:\n  /form-management/engine:\n    get:\n      tags:\n        - Engine\n      summary: Get form engine info\n      description: \u003e-\n        Returns a read-only view of the engine that is used in this\n        REST-service.\n      operationId: getEngineInfo\n      responses:\n        '200':\n          description: Indicates the engine info is returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormEngineInfoResponse'\n      security:\n        - basicAuth: []\n  /form-repository/deployments:\n    get:\n      tags:\n        - Form Deployments\n      summary: List of Form Deployments\n      description: ''\n      operationId: listFormDeployments\n      parameters:\n        - name: name\n          in: query\n          description: Only return form deployments with the given name.\n          required: false\n          schema:\n            type: string\n        - name: nameLike\n          in: query\n          description: Only return form deployments with a name like the given name.\n          required: false\n          schema:\n            type: string\n        - name: category\n          in: query\n          description: Only return form deployments with the given category.\n          required: false\n          schema:\n            type: string\n        - name: categoryNotEquals\n          in: query\n          description: Only return form deployments which don?t have the given category.\n          required: false\n          schema:\n            type: string\n        - name: tenantId\n          in: query\n          description: Only return form deployments with the given tenantId.\n          required: false\n          schema:\n            type: string\n        - name: tenantIdLike\n          in: query\n          description: Only return form deployments with a tenantId like the given value.\n          required: false\n          schema:\n            type: string\n        - name: withoutTenantId\n          in: query\n          description: \u003e-\n            If true, only returns form deployments without a tenantId set. If\n            false, the withoutTenantId parameter is ignored.\n          required: false\n          schema:\n            type: boolean\n        - name: sort\n          in: query\n          description: 'Property to sort on, to be used together with the order.'\n          required: false\n          schema:\n            type: string\n            enum:\n              - id\n              - name\n              - deployTime\n              - tenantId\n      responses:\n        '200':\n          description: Indicates the request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataResponseFormDeployment'\n      security:\n        - basicAuth: []\n    post:\n      tags:\n        - Form Deployments\n      summary: Create a new form deployment\n      description: \u003e-\n        The request body should contain data of type multipart/form-data. There\n        should be exactly one file in the request, any additional files will be\n        ignored. The deployment name is the name of the file-field passed in.\n        Make sure the file-name ends with .form or .xml.\n      operationId: uploadDeployment\n      parameters:\n        - name: tenantId\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormDeployment'\n        '201':\n          description: Indicates the form deployment was created.\n        '400':\n          description: \u003e-\n            Indicates there was no content present in the request body or the\n            content mime-type is not supported for form deployment. The\n            status-description contains additional information.\n      security:\n        - basicAuth: []\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n  '/form-repository/deployments/{deploymentId}':\n    get:\n      tags:\n        - Form Deployments\n      summary: Get a form deployment\n      description: ''\n      operationId: getFormDeployment\n      parameters:\n        - name: deploymentId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Indicates the form deployment was found and returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormDeployment'\n        '404':\n          description: Indicates the requested form deployment was not found.\n      security:\n        - basicAuth: []\n    delete:\n      tags:\n        - Form Deployments\n      summary: Delete a form deployment\n      description: ''\n      operationId: deleteFormDeployment\n      parameters:\n        - name: deploymentId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: \u003e-\n            Indicates the form deployment was found and has been deleted.\n            Response-body is intentionally empty.\n        '404':\n          description: Indicates the requested form deployment was not found.\n      security:\n        - basicAuth: []\n  '/form-repository/deployments/{deploymentId}/resourcedata/{resourceName}':\n    get:\n      tags:\n        - Form Deployments\n      summary: Get a form deployment resource content\n      description: \u003e-\n        The response body will contain the binary resource-content for the\n        requested resource. The response content-type will be the same as the\n        type returned in the resources mimeType property. Also, a\n        content-disposition header is set, allowing browsers to download the\n        file instead of displaying it.\n      operationId: getFormDeploymentResource\n      parameters:\n        - name: deploymentId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: resourceName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Indicates both form deployment and resource have been found and the\n            resource data has been returned.\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  type: string\n                  format: byte\n        '404':\n          description: \u003e-\n            Indicates the requested form deployment was not found or there is no\n            resource with the given id present in the form deployment. The\n            status-description contains additional information.\n      security:\n        - basicAuth: []\n  /form-repository/form-definitions:\n    get:\n      tags:\n        - Form Definitions\n      summary: List of form definitions\n      description: ''\n      operationId: listFormDefinitions\n      parameters:\n        - name: category\n          in: query\n          description: Only return form definitions with the given category.\n          required: false\n          schema:\n            type: string\n        - name: categoryLike\n          in: query\n          description: Only return form definitions with a category like the given value.\n          required: false\n          schema:\n            type: string\n        - name: categoryNotEquals\n          in: query\n          description: Only return form definitions not with the given category.\n          required: false\n          schema:\n            type: string\n        - name: key\n          in: query\n          description: Only return form definitions with the given key.\n          required: false\n          schema:\n            type: string\n        - name: keyLike\n          in: query\n          description: Only return form definitions with a key like the given value.\n          required: false\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: Only return form definitions with the given name.\n          required: false\n          schema:\n            type: string\n        - name: nameLike\n          in: query\n          description: Only return form definitions with a name like the given value.\n          required: false\n          schema:\n            type: string\n        - name: resourceName\n          in: query\n          description: Only return form definitions with the given resource name.\n          required: false\n          schema:\n            type: string\n        - name: resourceNameLike\n          in: query\n          description: Only return form definitions a resource name like the given value.\n          required: false\n          schema:\n            type: string\n        - name: version\n          in: query\n          description: Only return form definitions with the given version.\n          required: false\n          schema:\n            type: string\n        - name: versionGreaterThan\n          in: query\n          description: \u003e-\n            Only return form definitions with a version greater than the given\n            value.\n          required: false\n          schema:\n            type: string\n        - name: versionGreaterThanOrEquals\n          in: query\n          description: \u003e-\n            Only return form definitions with a version greater than or equal to\n            the given value.\n          required: false\n          schema:\n            type: string\n        - name: versionLowerThan\n          in: query\n          description: \u003e-\n            Only return form definitions with a version lower than the given\n            value.\n          required: false\n          schema:\n            type: string\n        - name: versionLowerThanOrEquals\n          in: query\n          description: \u003e-\n            Only return form definitions with a version lower than or equal to\n            the given value.\n          required: false\n          schema:\n            type: string\n        - name: deploymentId\n          in: query\n          description: Only return form definitions with the given deployment id.\n          required: false\n          schema:\n            type: string\n        - name: tenantId\n          in: query\n          description: Only return form definitions with the given tenant id.\n          required: false\n          schema:\n            type: string\n        - name: tenantIdLike\n          in: query\n          description: Only return form definitions with a tenant id like the given value.\n          required: false\n          schema:\n            type: string\n        - name: withoutTenantId\n          in: query\n          description: Only return form definitions without a tenant id.\n          required: false\n          schema:\n            type: string\n        - name: latest\n          in: query\n          description: If true; only the latest versions will be returned.\n          required: false\n          schema:\n            type: boolean\n        - name: sort\n          in: query\n          description: 'Property to sort on, to be used together with the order.'\n          required: false\n          schema:\n            type: string\n            enum:\n              - key\n              - category\n              - id\n              - version\n              - name\n              - deploymentId\n              - tenantId\n      responses:\n        '200':\n          description: \u003e-\n            Indicates request was successful and the form definitions are\n            returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataResponseFormDefinitionResponse'\n        '400':\n          description: \u003e-\n            Indicates a parameter was passed in the wrong format . The\n            status-message contains additional information.\n      security:\n        - basicAuth: []\n  '/form-repository/form-definitions/{formDefinitionId}':\n    get:\n      tags:\n        - Form Definitions\n      summary: Get a form definition\n      description: ''\n      operationId: getForm\n      parameters:\n        - name: formDefinitionId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Indicates the form definition was found returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormDefinitionResponse'\n        '404':\n          description: Indicates the form definition was not found.\n      security:\n        - basicAuth: []\n  '/form-repository/form-definitions/{formDefinitionId}/model':\n    get:\n      tags:\n        - Form Definitions\n      summary: Get a form definition Form model\n      description: ''\n      operationId: getFormDefinitionFormModel\n      parameters:\n        - name: formDefinitionId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Indicates the form definition Form model was found returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormModel'\n        '404':\n          description: Indicates the form definition Form model was not found.\n      security:\n        - basicAuth: []\n  '/form-repository/form-definitions/{formDefinitionId}/resourcedata':\n    get:\n      tags:\n        - Form Definitions\n      summary: Get a form definition resource content\n      description: ''\n      operationId: getFormDefinitionContent\n      parameters:\n        - name: formDefinitionId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Indicates both form definition and resource have been found and the\n            resource data has been returned.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                  format: byte\n        '404':\n          description: \u003e-\n            Indicates the requested form definition was not found or there is no\n            resource with the given id present in the process definition. The\n            status-description contains additional information.\n      security:\n        - basicAuth: []\n  /form/form-instance-model:\n    post:\n      tags:\n        - Form Instance Models\n      summary: Get a form instance model\n      description: ''\n      operationId: getFormInstanceModel\n      responses:\n        '200':\n          description: Indicates the form instance was found and the model is returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormInstanceModelResponse'\n        '404':\n          description: Indicates the form instance was not found.\n      security:\n        - basicAuth: []\n      requestBody:\n        $ref: '#/components/requestBodies/FormRequest'\n  '/form/form-instance/{formInstanceId}':\n    get:\n      tags:\n        - Form Instances\n      summary: Get a form instance\n      description: ''\n      operationId: getFormInstance\n      parameters:\n        - name: formInstanceId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Indicates the form instance was found and returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormInstanceResponse'\n        '404':\n          description: Indicates the requested form instance was not found.\n      security:\n        - basicAuth: []\n  /form/form-instances:\n    get:\n      tags:\n        - Form Instances\n      summary: List of form instances\n      description: ''\n      operationId: listFormInstances\n      parameters:\n        - name: id\n          in: query\n          description: Only return form instances with the given id.\n          required: false\n          schema:\n            type: string\n        - name: formDefinitionId\n          in: query\n          description: Only return form instances with the given form definition id.\n          required: false\n          schema:\n            type: string\n        - name: formDefinitionIdLike\n          in: query\n          description: \u003e-\n            Only return form instances with a form definition id like the given\n            value.\n          required: false\n          schema:\n            type: string\n        - name: taskId\n          in: query\n          description: Only return form instances with the given task id.\n          required: false\n          schema:\n            type: string\n        - name: taskIdLike\n          in: query\n          description: Only return form instances with a task id like the given value.\n          required: false\n          schema:\n            type: string\n        - name: processInstanceId\n          in: query\n          description: Only return form instances with the given process instance id.\n          required: false\n          schema:\n            type: string\n        - name: processInstanceIdLike\n          in: query\n          description: \u003e-\n            Only return form instances with a process instance id like the given\n            value.\n          required: false\n          schema:\n            type: string\n        - name: processDefinitionId\n          in: query\n          description: Only return form instances with the given process definition id.\n          required: false\n          schema:\n            type: string\n        - name: processDefinitionIdLike\n          in: query\n          description: \u003e-\n            Only return form instances with a process definition id like the\n            given value.\n          required: false\n          schema:\n            type: string\n        - name: submittedBy\n          in: query\n          description: Only return form instances submitted by the given value.\n          required: false\n          schema:\n            type: string\n        - name: submittedByLike\n          in: query\n          description: Only return form instances submitted by like the given value.\n          required: false\n          schema:\n            type: string\n        - name: tenantId\n          in: query\n          description: Only return form instances with the given tenantId.\n          required: false\n          schema:\n            type: string\n        - name: tenantIdLike\n          in: query\n          description: Only return form instances with a tenantId like the given value.\n          required: false\n          schema:\n            type: string\n        - name: withoutTenantId\n          in: query\n          description: \u003e-\n            If true, only returns form instances without a tenantId set. If\n            false, the withoutTenantId parameter is ignored.\n          required: false\n          schema:\n            type: boolean\n        - name: sort\n          in: query\n          description: 'Property to sort on, to be used together with the order.'\n          required: false\n          schema:\n            type: string\n            enum:\n              - submittedDate\n              - tenantId\n      responses:\n        '200':\n          description: Indicates request was successful and the form instances are returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataResponseFormInstanceResponse'\n        '400':\n          description: \u003e-\n            Indicates a parameter was passed in the wrong format . The\n            status-message contains additional information.\n      security:\n        - basicAuth: []\n    post:\n      tags:\n        - Form Instances\n      summary: Store a form instance\n      description: \u003e-\n        Provide either a FormDefinitionKey or a FormDefinitionId together with\n        the other properties.\n      operationId: storeFormInstance\n      responses:\n        '201':\n          description: Indicates the form instance was stored.\n        '404':\n          description: Indicates the related form model was not found.\n      security:\n        - basicAuth: []\n      requestBody:\n        $ref: '#/components/requestBodies/FormRequest'\n  /form/model:\n    post:\n      tags:\n        - Form Models\n      summary: Get a populated form model\n      description: \u003e-\n        Provide variables needed to pre populated form fields and to render\n        expression based form fields\n      operationId: getFormModel\n      responses:\n        '200':\n          description: Indicates the form model was found and returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormModelResponse'\n        '404':\n          description: Indicates the requested form model was not found.\n      security:\n        - basicAuth: []\n      requestBody:\n        $ref: '#/components/requestBodies/FormRequest'\n  /query/form-instances:\n    post:\n      tags:\n        - Form Instances\n        - Query\n      summary: Query form instances\n      description: \u003e-\n        The request body can contain all possible filters that can be used in\n        the List form instances URL query. On top of these, it?s possible to\n        provide an array of variables to include in the query, with their format\n        described here.\n\n\n        The general paging and sorting query-parameters can be used for this\n        URL.\n      operationId: queryFormInstances\n      responses:\n        '200':\n          description: Indicates request was successful and the form instances are returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataResponseFormInstanceResponse'\n        '400':\n          description: \u003e-\n            Indicates a parameter was passed in the wrong format . The\n            status-message contains additional information.\n      security:\n        - basicAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormInstanceQueryRequest'\ncomponents:\n  schemas:\n    DataResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n        total:\n          type: integer\n          format: int64\n        start:\n          type: integer\n          format: int32\n        sort:\n          type: string\n        order:\n          type: string\n        size:\n          type: integer\n          format: int32\n    DataResponseFormDefinitionResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/FormDefinitionResponse'\n        total:\n          type: integer\n          format: int64\n        start:\n          type: integer\n          format: int32\n        sort:\n          type: string\n        order:\n          type: string\n        size:\n          type: integer\n          format: int32\n    DataResponseFormDeployment:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/FormDeployment'\n        total:\n          type: integer\n          format: int64\n        start:\n          type: integer\n          format: int32\n        sort:\n          type: string\n        order:\n          type: string\n        size:\n          type: integer\n          format: int32\n    DataResponseFormInstanceResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/FormInstanceResponse'\n        total:\n          type: integer\n          format: int64\n        start:\n          type: integer\n          format: int32\n        sort:\n          type: string\n        order:\n          type: string\n        size:\n          type: integer\n          format: int32\n    ExpressionFormField:\n      allOf:\n        - $ref: '#/components/schemas/FormField'\n        - type: object\n          properties:\n            expression:\n              type: string\n    FormContainer:\n      allOf:\n        - $ref: '#/components/schemas/FormField'\n        - type: object\n          properties:\n            fields:\n              type: array\n              items:\n                type: array\n                items:\n                  $ref: '#/components/schemas/FormField'\n    FormDefinitionResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: '10'\n        url:\n          type: string\n          example: 'http://localhost:8182/form-repository/form-definitions/simpleForm'\n        category:\n          type: string\n          example: Examples\n        name:\n          type: string\n          example: The Simple Form\n        key:\n          type: string\n          example: simpleForm\n        description:\n          type: string\n          example: This is a form for testing purposes\n        version:\n          type: integer\n          format: int32\n          example: 1\n        resourceName:\n          type: string\n          example: SimpleSourceName\n        deploymentId:\n          type: string\n          example: 818e4703-f1d2-11e6-8549-acde48001121\n        parentDeploymentId:\n          type: string\n          example: '2'\n        tenantId:\n          type: string\n          example: 'null'\n    FormDeployment:\n      type: object\n      properties:\n        id:\n          type: string\n          example: '10'\n        name:\n          type: string\n          example: flowable-form-examples\n        deploymentTime:\n          type: string\n          format: date-time\n          example: '2010-10-13T14:54:26.750+02:00'\n        category:\n          type: string\n          example: examples\n        url:\n          type: string\n          example: 'http://localhost:8081/form-api/form-repository/deployments/10'\n        parentDeploymentId:\n          type: string\n          example: '5'\n        tenantId:\n          type: string\n          example: 'null'\n    FormEngineInfoResponse:\n      type: object\n      properties:\n        name:\n          type: string\n          example: default\n        resourceUrl:\n          type: string\n          example: 'file://flowable/flowable.form.cfg.xml'\n        exception:\n          type: string\n          example: 'null'\n        version:\n          type: string\n          example: 6.2.0\n    FormField:\n      type: object\n      discriminator:\n        propertyName: fieldType\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n        value:\n          type: object\n        required:\n          type: boolean\n        readOnly:\n          type: boolean\n        overrideId:\n          type: boolean\n        placeholder:\n          type: string\n        params:\n          type: object\n          additionalProperties:\n            type: object\n        layout:\n          $ref: '#/components/schemas/LayoutDefinition'\n    FormInstanceModelResponse:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        key:\n          type: string\n        version:\n          type: integer\n          format: int32\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/FormField'\n        outcomes:\n          type: array\n          items:\n            $ref: '#/components/schemas/FormOutcome'\n        outcomeVariableName:\n          type: string\n        formInstanceId:\n          type: string\n        submittedBy:\n          type: string\n        submittedDate:\n          type: string\n          format: date-time\n        selectedOutcome:\n          type: string\n        taskId:\n          type: string\n        processInstanceId:\n          type: string\n        processDefinitionId:\n          type: string\n        tenantId:\n          type: string\n        url:\n          type: string\n    FormInstanceQueryRequest:\n      type: object\n      properties:\n        start:\n          type: integer\n          format: int32\n        size:\n          type: integer\n          format: int32\n        sort:\n          type: string\n        order:\n          type: string\n        id:\n          type: string\n        formDefinitionId:\n          type: string\n        formDefinitionIdLike:\n          type: string\n        taskId:\n          type: string\n        taskIdLike:\n          type: string\n        processInstanceId:\n          type: string\n        processInstanceIdLike:\n          type: string\n        processDefinitionId:\n          type: string\n        processDefinitionIdLike:\n          type: string\n        submittedBy:\n          type: string\n        submittedByLike:\n          type: string\n        tenantId:\n          type: string\n        tenantIdLike:\n          type: string\n        withoutTenantId:\n          type: boolean\n    FormInstanceResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: 48b9ac82-f1d3-11e6-8549-acde48001122\n        formDefinitionId:\n          type: string\n          example: 818e4703-f1d2-11e6-8549-acde48001122\n        taskId:\n          type: string\n          example: '88'\n        processInstanceId:\n          type: string\n          example: '66'\n        processDefinitionId:\n          type: string\n          example: 'oneTaskProcess:1:158'\n        submittedDate:\n          type: string\n          format: date-time\n          example: '2013-04-17T10:17:43.902+0000'\n        submittedBy:\n          type: string\n          example: testUser\n        formValuesId:\n          type: string\n          example: 818e4703-f1d2-11e6-8549-acde48001110\n        tenantId:\n          type: string\n          example: 'null'\n        url:\n          type: string\n          example: \u003e-\n            http://localhost:8182/form/form-instances/48b9ac82-f1d3-11e6-8549-acde48001122\n    FormModel:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        key:\n          type: string\n        version:\n          type: integer\n          format: int32\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/FormField'\n        outcomes:\n          type: array\n          items:\n            $ref: '#/components/schemas/FormOutcome'\n        outcomeVariableName:\n          type: string\n    FormModelResponse:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        key:\n          type: string\n        version:\n          type: integer\n          format: int32\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/FormField'\n        outcomes:\n          type: array\n          items:\n            $ref: '#/components/schemas/FormOutcome'\n        outcomeVariableName:\n          type: string\n        url:\n          type: string\n    FormOutcome:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n    FormRequest:\n      type: object\n      properties:\n        formInstanceId:\n          type: string\n        formDefinitionId:\n          type: string\n        formDefinitionKey:\n          type: string\n        taskId:\n          type: string\n        processInstanceId:\n          type: string\n        processDefinitionId:\n          type: string\n        scopeId:\n          type: string\n        scopeType:\n          type: string\n        scopeDefinitionId:\n          type: string\n        tenantId:\n          type: string\n        parentDeploymentId:\n          type: string\n        variables:\n          type: object\n          additionalProperties:\n            type: object\n    LayoutDefinition:\n      type: object\n      properties:\n        row:\n          type: integer\n          format: int32\n    Option:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n    OptionFormField:\n      allOf:\n        - $ref: '#/components/schemas/FormField'\n        - type: object\n          properties:\n            optionType:\n              type: string\n            hasEmptyValue:\n              type: boolean\n            options:\n              type: array\n              items:\n                $ref: '#/components/schemas/Option'\n  requestBodies:\n    FormRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FormRequest'\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic",
			"canonicalURL": "/github.com/qiudaoke/flowable-userguide@f9269440e64eab847fd9235a5cc63216797d082f/-/blob/V6.5.0/docs/public-api/references/openapi/form/flowable-oas-form.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/qiudaoke/flowable-userguide/blob/f9269440e64eab847fd9235a5cc63216797d082f/V6.5.0/docs/public-api/references/openapi/form/flowable-oas-form.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/form-repository/deployments/{deploymentId}/resourcedata/{resourceName}\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}