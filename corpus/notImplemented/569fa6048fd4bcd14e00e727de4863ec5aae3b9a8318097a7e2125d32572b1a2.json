{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mappls-api/mapmyindia-rest-api"
		},
		"file": {
			"name": "placeDetail-adv.yml",
			"size": 0,
			"path": "docs/custom/placeDetail-adv.yml",
			"byteSize": 11032,
			"content": "openapi: 3.0.3\ninfo:\n  title: Place Detail API\n  description: \u003e-\n    This APIs follow OAuth2 based security. **To know more on how to create your authorization tokens, please use our authorization token URL. More details available**  [here](https://www.mapmyindia.com/api/advanced-maps/doc/authentication-api.php). \u003cbr\u003e\u003cbr\u003e\n    **Note**: \u003col\u003e \u003cli\u003e The response listed in the below documentation is ONLY indicative of the overall capabilities of MapmyIndia's Search APIs. \u003c/li\u003e\u003cli\u003e Not all response parameters mentioned in the below documentation is assured to be present in all the use-cases. The response of any of the below search API is thus, dependent on the use-case agreed upon between MapmyIndia \u0026 it's API consumer. \u003c/i\u003e\u003cli\u003e For any further clarifications on what all of the response structure is available for your use case, please contact your business relationship manager or contact MapmyIndia API support.\u003c/li\u003e\u003cli\u003e \u003cstrong\u003ePREMIUM APIs\u003c/strong\u003e are not available for evalulation on signup. To get access, please contact API Support.\u003c/li\u003e\u003c/ol\u003e\n  termsOfService: 'https://www.mapmyindia.com/api/terms-\u0026-conditions'\n  version: 1.0.0\n  license:\n    name: MapmyIndia License Key Signup\n    url: https://www.mapmyindia.com/api/\n  contact:\n    name: MapmyIndia API Support\n    email: apisupport@mapmyindia.com\n    url: https://www.mapmyindia.com/api/\nsecurity: \n  - BearerAuth: []\nservers:\n  - url: 'https://explore.mapmyindia.com'\n    description: 'Live Prod server for Place Detail API'\npaths:\n  /apis/O2O/entity/{eLoc}:\n      get:\n        tags:\n          - Place Detail API\n        description: \u003e-\n          MapmyIndia eloc is a simple, standardized and precise pan-India digital address system. Every location has been assigned a unique digital address or an eLoc. Place Detail API can be used to extract the details of a place with the help of its eLoc i.e. a 6 digit code or a place_id.\n          \u003cbr\u003eThis APIs follow OAuth2 based security. **To know more on how to create your authorization tokens, please use our authorization token URL. More details available**  [here](https://www.mapmyindia.com/api/advanced-maps/doc/authentication-api.php).\n          \u003cbr\u003eThe API leverages OAuth 2.0 based security. Hence, the developer would need to send a request for access token using their client_id and client_secret to the OAuth API. Once validated from the OAuth API, the access_token and the token_type need to be sent as Authorization header with the value: \"{`token_type`} {`access_token`}‚Äù. \u003cbr\u003e\u003cstrong\u003eAuthorization\u003c/strong\u003e: `token_type` `access_token`.\n# \u003cp style=text-align:right\u003e\u003cstrong\u003e\u003ca href=\"https://www.mapmyindia.com/api/advanced-maps/doc/sample/mapmyindia-vector-maps-place-details-api-example.php\"\u003eLive Demo\u003c/a\u003e | \u003ca href=\"https://github.com/MapmyIndia/mapmyindia-rest-api/tree/master/mapmyindia-maps-place-details-api-example\"\u003eDownload Sample Code\u003c/a\u003e \u003c/p\u003e\n        summary: \u003e-\n          Place Detail API\n        operationId: placeDetail\n        servers:\n        - url: https://explore.mapmyindia.com\n          description: 'Live Prod server for Place Detail API'\n        parameters:\n          - name: eLoc\n            in: path\n            description: 'Six or Eight Digit unique code.'\n            allowEmptyValue: false\n            required: true\n            example: \"MMI000\"\n            schema:\n              type: string\n        responses:\n          '200':\n            description: \u003e-\n              This API is highly configurable API that enables to provision the required set of attributes to the user on the basis of their required use case. The default configuration with available with basic pay-as-you-go rates is that of `General Details` subtemplate.\n            content:\n              application/json:\n                schema:\n                  anyOf:\n                    - $ref: '#/components/schemas/sbt_general_details'\n                    - $ref: '#/components/schemas/sbt_admin_token'\n                    - $ref: '#/components/schemas/sbt_address_token'\n                    - $ref: '#/components/schemas/sbt_contact_details'\n                    - $ref: '#/components/schemas/sbt_loc_coordinates'\n                    - $ref: '#/components/schemas/sbt_nav_coordinates'\n                  example: \n                    eloc: \"3F45CB\"\n                    name: \"The Lalit New Delhi\"\n                    address: \"15, Barakhamba Avenue, Connaught Place, New Delhi, Delhi, 110001\"\n          '204':\n            description: Not found\n          '400':\n            description: Bad request\n          '401':\n            description: API access denied\n          '403':\n            description: Forbidden\n          '500':\n            description: Something went wrong\n          '503':\n            description: Internal server error\n        deprecated: false\ncomponents:\n  schemas:\n    sbt_general_details:\n      title: General Details\n      description: \u003e-\n        Generic details about a place.\n      type: object\n      required:\n        - eloc\n        - name\n        - address\n      properties:\n        eloc:\n          type: string\n          description: '6 characters alphanumeric unique identifier.'\n          format: string\n          example: '3F45CB'\n        name: \n          type: string\n          description: 'Name of the place.'\n          format: string\n          example: 'The Lalit New Delhi'\n        address: \n          type: string\n          description: 'address of the place.'\n          format: string\n          example: '3F45CB'\n    sbt_admin_token:\n      title: Admin Tokens\n      description: \u003e-\n        Details about the administrative hierarchy of the place.\n      type: object\n      required:\n        - district\n        - subDistrict\n        - city\n        - state\n        - pincode\n      properties:\n        subDistrict:\n          type: string\n          description: 'The name of the sub-district in which the location exists.'\n          format: string\n          example: 'Connaught Place'\n        city:\n          type: string\n          description: 'The name of the city in which the location exists.'\n          format: string\n          example: 'New Delhi'\n        state:\n          type: string\n          description: 'The name of the state in which the location exists.'\n          format: string\n          example: 'Delhi'\n        pincode:\n          type: integer\n          description: 'The pin code of the location area.'\n          format: string\n          example: '110010'\n        district:\n          type: string\n          description: 'The name of the district in which the location exists.'\n          format: string\n          example: 'New Delhi District'\n    sbt_loc_coordinates: \n      title: Location Coordinates\n      description: \u003e-\n        Details about the location geometry of the place.\n      type: object\n      required:\n        - latitude\n        - longitude\n      properties:\n        longitude:\n          type: number\n          description: 'It shows us the longitude of the location searched.'\n          format: double\n          example: 77.2274580000001\n        latitude:\n          type: number\n          description: 'It shows us the latitude of the location searched.'\n          format: double\n          example: 28.6311600000001\n    sbt_address_token: \n      title: Address Tokens\n      description: \u003e-\n        Details about the address of the place.\n      type: object\n      required:\n        - houseNumber\n        - houseName\n        - locality\n        - street\n        - subSubLocality\n        - subLocality\n        - village\n        - poi\n      properties:\n        houseNumber:\n          type: string\n          description: 'House Number of the place.'\n          format: string\n          example: '237'\n        houseName:\n          type: string\n          description: 'House Name of the place.'\n          format: string\n          example: 'MMI Building'\n        poi:\n          type: string\n          description: 'Name of the POI.'\n          format: string\n          example: 'The Lalit New Delhi'\n        street:\n          type: string\n          description: 'Name of the street of the place.'\n          format: string\n          example: 'Barakhamba Road'\n        subSubLocality:\n          type: string\n          description: 'Name of the subsublocality to which the place belongs.'\n          format: string\n        subLocality:\n          type: string\n          description: 'Name of the sublocality.'\n          format: string\n        locality:\n          type: string\n          description: 'Name of the locality.'\n          format: string\n          example: 'Okhla industrial phase 3'\n        village:\n          type: string\n          description: 'Name of the village.'\n          format: string\n          example: 'Okhla Vilage'    \n    sbt_nav_coordinates: \n      title: Entry-Exit Coordinates\n      description: \u003e-\n        Details about the Entry / Exit geometry of the place.\n      type: object\n      required:\n        - entry_lat\n        - entry_lon\n      properties:\n        entry_lon:\n          type: number\n          description: 'It shows us the entry longitude of the location searched.'\n          format: double\n          example: 77.2689280000001\n        entry_lat:\n          type: number\n          description: 'It shows us the entry latitude of the location searched.'\n          format: double\n          example: 28.5507160000001    \n    sbt_contact_details: \n      title: Contact Details\n      description: \u003e-\n        Details about the contact information of the place.\n      required: \n        - keyinfo\n      properties:\n        keyinfo: \n          type: array\n          items: \n            $ref: '#/components/schemas/contactObject'\n    contactObject: \n      title: Array of KeyInfo objects\n      type: object\n      required: \n        - heading\n        - values\n      properties: \n        heading: \n          type: string\n          description: 'The type of keyinfo object.'\n          format: string\n          example: 'Contact Details'\n        values: \n          type: array\n          description: 'array of key value pairs containing required information of the place.'\n          items: \n            $ref: '#/components/schemas/valueObject'\n          example: \n            - title: 'Email'\n              value: 'contact@mapmyindia.com'\n            - title: 'Telephone'\n              value: '+911146009900'\n            - title: 'Website'\n              value: 'www.mapmyindia.com'\n            - title: 'Mobile'\n              value: '+91-9999333223'\n    valueObject: \n      title: key value pairs\n      description: \u003e-\n        key-value pair with title and their respective values.\n      required: \n        - title\n        - value\n      properties: \n        heading: \n          type: string\n          description: 'The type of keyinfo object.'\n          format: string\n        value: \n          type: string\n          description: 'The type of keyinfo object.'\n          format: string\n  securitySchemes:\n    BearerAuth: \n      type: http\n      scheme: bearer\n      bearerFormat: 'bearer 0XXXXXXf-dXX0-4XX0-8XXa-eXXXXXXXXXX6'",
			"canonicalURL": "/github.com/mappls-api/mapmyindia-rest-api@87d8f9380ea23d137db2aa50df5a395507530f5a/-/blob/docs/custom/placeDetail-adv.yml",
			"externalURLs": [
				{
					"url": "https://github.com/mappls-api/mapmyindia-rest-api/blob/87d8f9380ea23d137db2aa50df5a395507530f5a/docs/custom/placeDetail-adv.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/apis/O2O/entity/{eLoc}\": get: responses: 200: contents: application/json: generate schema: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}