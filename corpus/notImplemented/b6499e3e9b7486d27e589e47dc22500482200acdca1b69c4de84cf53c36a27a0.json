{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MetaCell/cloud-harness"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "applications/workflows/server/workflows_api/openapi/openapi.yaml",
			"byteSize": 5486,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: cloudharness@metacell.us\n  description: Workflows API\n  license:\n    name: UNLICENSED\n  title: Workflows API\n  version: 0.1.0\nservers:\n- description: Metacell host\n  url: https://workflows.cloudharness.metacell.us/api\ntags:\n- description: standard creation, listing and retrieve\n  name: Create and Access\npaths:\n  /operations:\n    get:\n      description: |\n        see all operations for the user\n      operationId: list_operations\n      parameters:\n      - description: filter by status\n        example: QUEUED\n        explode: true\n        in: query\n        name: status\n        required: false\n        schema:\n          $ref: '#/components/schemas/OperationStatus'\n        style: form\n      - description: continue previous search (pagination chunks)\n        explode: true\n        in: query\n        name: previous_search_token\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: maximum number of records to return per page\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 10\n          maximum: 50\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationSearchResult'\n          description: search results matching criteria\n        \"400\":\n          description: bad input parameter\n      summary: lists operations\n      tags:\n      - Create and Access\n      x-openapi-router-controller: workflows_api.controllers.create_and_access_controller\n  /operations/{name}:\n    delete:\n      description: |\n        delete operation by its name\n      operationId: delete_operation\n      parameters:\n      - explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          description: delete OK\n        \"404\":\n          description: not found\n      summary: deletes operation by name\n      tags:\n      - Create and Access\n      x-openapi-router-controller: workflows_api.controllers.create_and_access_controller\n    get:\n      description: |\n        retrieves an operation by its name\n      operationId: get_operation\n      parameters:\n      - explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Operation'\n                type: array\n          description: search results matching criteria\n        \"404\":\n          description: not found\n      summary: get operation by name\n      tags:\n      - Create and Access\n      x-openapi-router-controller: workflows_api.controllers.create_and_access_controller\n  /operations/{name}/logs:\n    get:\n      description: |\n        retrieves an operation log by its name\n      operationId: log_operation\n      parameters:\n      - explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                example: Hello world\n                type: string\n          description: search results matching criteria\n        \"404\":\n          description: not found\n      summary: get operation by name\n      tags:\n      - Create and Access\n      x-openapi-router-controller: workflows_api.controllers.create_and_access_controller\ncomponents:\n  schemas:\n    OperationSearchResult:\n      description: a list of operations with meta data about the result\n      example:\n        meta:\n          continueToken: continueToken\n        items:\n        - workflow: workflow\n          createTime: 2016-08-29T09:12:33.001Z\n          name: name\n          message: message\n        - workflow: workflow\n          createTime: 2016-08-29T09:12:33.001Z\n          name: name\n          message: message\n      properties:\n        meta:\n          $ref: '#/components/schemas/SearchResultData'\n        items:\n          items:\n            $ref: '#/components/schemas/Operation'\n          type: array\n    SearchResultData:\n      description: describes a search\n      example:\n        continueToken: continueToken\n      properties:\n        continueToken:\n          description: token to use for pagination\n          type: string\n    Operation:\n      description: represents the status of a distributed API call\n      example:\n        workflow: workflow\n        createTime: 2016-08-29T09:12:33.001Z\n        name: name\n        message: message\n      properties:\n        message:\n          description: usually set when an error occurred\n          type: string\n        name:\n          description: operation name\n          type: string\n        createTime:\n          example: 2016-08-29T09:12:33.001Z\n          format: date-time\n          readOnly: true\n          type: string\n        status:\n          $ref: '#/components/schemas/OperationStatus'\n        workflow:\n          description: low level representation as an Argo json\n          type: string\n    OperationStatus:\n      default: Pending\n      enum:\n      - Pending\n      - Running\n      - Error\n      - Succeeded\n      - Skipped\n      - Failed\n      type: string\n",
			"canonicalURL": "/github.com/MetaCell/cloud-harness@1677e55fe23347e0162ef6f34cc1416f62841f8c/-/blob/applications/workflows/server/workflows_api/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MetaCell/cloud-harness/blob/1677e55fe23347e0162ef6f34cc1416f62841f8c/applications/workflows/server/workflows_api/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/operations/{name}/logs\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}