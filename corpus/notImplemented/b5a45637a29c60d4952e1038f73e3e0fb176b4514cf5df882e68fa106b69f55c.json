{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/phoenixnap/go-sdk-bmc"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "ranchersolutionapi/api/openapi.yaml",
			"byteSize": 26218,
			"content": "openapi: 3.0.3\ninfo:\n  contact:\n    email: support@phoenixnap.com\n    name: PhoenixNAP Team\n    url: https://phoenixnap.com/\n  description: |\n    Simplify enterprise-grade Kubernetes cluster operations and management with Rancher on Bare Metal Cloud.\n    Deploy Kubernetes clusters using a few API calls.\u003cbr\u003e\n    \u003cbr\u003e\n    \u003cspan class='pnap-api-knowledge-base-link'\u003e\n    Knowledge base articles to help you can be found\n    \u003ca href='https://phoenixnap.com/kb/rancher-bmc-integration-kubernetes' target='_blank'\u003ehere\u003c/a\u003e\n    \u003c/span\u003e\u003cbr\u003e\n    \u003cbr\u003e\n    \u003cb\u003eAll URLs are relative to (https://api.phoenixnap.com/solutions/rancher/v1beta)\u003c/b\u003e\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  termsOfService: https://phoenixnap.com/infrastructure-solutions/legal-it/privacy-shield-compliant-privacy-policy\n  title: Rancher Solution API\n  version: \"0.1\"\nservers:\n- url: https://api.phoenixnap.com/solutions/rancher/v1beta\nsecurity:\n- OAuth2:\n  - bmc\n  - bmc.read\ntags:\n- description: Cluster operations\n  name: Clusters\npaths:\n  /clusters:\n    get:\n      description: Cluster list.\n      operationId: clustersGet\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                SampleList:\n                  value:\n                  - id: 60a773b89fd9035858ce8902\n                    name: Rancher Deployment\n                    description: A Rancher Server deployment in Phoenix.\n                    location: PHX\n                    initialClusterVersion: v2.5.9\n                    nodePools:\n                    - name: Rancher Server Node Pool\n                      nodeCount: 1\n                      serverType: s0.d1.small\n                      nodes:\n                      - serverId: 60b08f04adab617be44068bb\n                  - id: 60b0901020e265e2245aaead\n                    name: Rancher Deployment\n                    description: A Rancher Server deployment in Ashburn.\n                    location: ASH\n                    initialClusterVersion: v2.5.9\n                    nodePools:\n                    - name: Rancher Server Node Pool\n                      nodeCount: 1\n                      serverType: s0.d1.small\n                      nodes:\n                      - serverId: 60b090093f1b23d1d8726c0f\n              schema:\n                items:\n                  $ref: '#/components/schemas/Cluster'\n                type: array\n          description: Cluster list.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed due to invalid credentials. Please check\n            the provided credentials and try again.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed since this resource cannot be accessed by\n            the provided credentials.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The server encountered an unexpected condition that prevented\n            it from fulfilling the request.\n      security:\n      - OAuth2:\n        - bmc.read\n      summary: Cluster list.\n      tags:\n      - Clusters\n    post:\n      description: \"Create a Rancher Server Deployment as described in \u003ca href='https://rancher.com/docs/rancher/v2.5/en/overview/architecture/#rancher-server-architecture'\\\n        \\ target='_blank'\u003eRancher Docs Architecture\u003c/a\u003e. Rancher Server allows the\\\n        \\ creation, import and management of multiple Downstream User Kubernetes Clusters.\\n\\\n        \u003cb\u003eThis is not a Downstream User Cluster\u003c/b\u003e.\\n\"\n      operationId: clustersPost\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Location:\n                value:\n                  location: PHX\n              NameDescriptionLocation:\n                value:\n                  name: Rancher Deployment\n                  description: A Rancher Server deployment. Sane defaults for all\n                    configuration options are applied.\n                  location: PHX\n              LocationNodePools:\n                value:\n                  name: Rancher Deployment\n                  description: A Rancher Server deployment with specific location\n                    and server type.\n                  location: ASH\n                  nodePools:\n                  - serverType: s1.c1.medium\n                    sshConfig:\n                      installDefaultKeys: false\n                      keys:\n                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75\n                        userOne\n                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75\n                        userTwo\n              AdvancedRancherConfig:\n                value:\n                  name: Rancher Deployment\n                  description: A Rancher Server deployment. Advanced configurations\n                    parameters are used.\n                  location: ASH\n                  configuration:\n                    token: gS7SnDnY5st0ryJxMXA7\n                    tlsSan: mydomain.com\n                    nodeTaint: CriticalAddonsOnly=true:NoExecute\n              WorkloadClusterConfig:\n                value:\n                  name: Rancher cluster deployment\n                  description: Deployment of both management and workload clusters.\n                  location: ASH\n                  nodePools:\n                  - serverType: s1.c1.medium\n                    sshConfig:\n                      installDefaultKeys: false\n                      keys:\n                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75\n                        userOne\n                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75\n                        userTwo\n                  workloadConfiguration:\n                    name: Workload cluster\n                    location: PHX\n                    serverCount: 3\n                    serverType: s0.d1.small\n            schema:\n              $ref: '#/components/schemas/Cluster'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                id: 60a773b89fd9035858ce8902\n                name: Rancher Deployment\n                description: A Rancher Server deployment.\n                location: PHX\n                initialClusterVersion: v2.5.9\n                metadata:\n                  url: https://rancher\n                  username: admin\n                  password: 1234567890abcd!\n                nodePools:\n                - name: Rancher Server Node Pool\n                  nodeCount: 1\n                  serverType: s0.d1.small\n                  nodes:\n                  - serverId: 60b08f04adab617be44068bb\n              schema:\n                $ref: '#/components/schemas/Cluster'\n          description: Cluster is being created.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed due to wrong data. Please check the provided\n            parameters and try again.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed due to invalid credentials. Please check\n            the provided credentials and try again.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed since this resource cannot be accessed by\n            the provided credentials.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The server encountered an unexpected condition that prevented\n            it from fulfilling the request.\n      security:\n      - OAuth2:\n        - bmc\n      summary: Create a Rancher Server Deployment.\n      tags:\n      - Clusters\n  /clusters/{id}:\n    delete:\n      description: Delete a cluster.\n      operationId: clustersIdDelete\n      parameters:\n      - description: The Cluster identifier.\n        example: \"123\"\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteResult'\n          description: Cluster is being deleted.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed due to invalid credentials. Please check\n            the provided credentials and try again.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed since this resource cannot be accessed by\n            the provided credentials.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The server encountered an unexpected condition that prevented\n            it from fulfilling the request.\n      security:\n      - OAuth2:\n        - bmc\n      summary: Delete a cluster.\n      tags:\n      - Clusters\n    get:\n      description: Retrieve a Cluster\n      operationId: clustersIdGet\n      parameters:\n      - description: The Cluster identifier.\n        example: \"123\"\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cluster'\n          description: Cluster details\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed due to invalid credentials. Please check\n            the provided credentials and try again.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request failed since this resource cannot be accessed by\n            the provided credentials.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The server encountered an unexpected condition that prevented\n            it from fulfilling the request.\n      security:\n      - OAuth2:\n        - bmc.read\n      summary: Retrieve a Cluster\n      tags:\n      - Clusters\ncomponents:\n  responses:\n    Unauthorized:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The request failed due to invalid credentials. Please check the\n        provided credentials and try again.\n    Forbidden:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The request failed since this resource cannot be accessed by the\n        provided credentials.\n    InternalServerError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The server encountered an unexpected condition that prevented it\n        from fulfilling the request.\n    BadRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The request failed due to wrong data. Please check the provided\n        parameters and try again.\n  schemas:\n    Cluster:\n      description: Cluster details.\n      example:\n        metadata: null\n        statusDescription: Creating\n        configuration: null\n        name: Rancher Management Cluster\n        description: My first Rancher Server Cluster.\n        location: PHX\n        id: 6047127fed34ecc3ba8402d2\n        nodePools:\n        - nodes:\n          - serverId: 60b08f04adab617be44068bb\n          - serverId: 60b08f04adab617be44068bb\n          serverType: s0.d1.small\n          name: Rancher Server node pool.\n          nodeCount: 0\n          sshConfig: null\n        initialClusterVersion: v2.5.9\n        workloadConfiguration: null\n      properties:\n        id:\n          description: (Read-only) The Cluster identifier.\n          example: 6047127fed34ecc3ba8402d2\n          readOnly: true\n          type: string\n        name:\n          description: Cluster name. This field is autogenerated if not provided.\n          example: Rancher Management Cluster\n          type: string\n        description:\n          description: Cluster description.\n          example: My first Rancher Server Cluster.\n          type: string\n        location:\n          description: \"Deployment location. Cannot be changed once a cluster is created.\\\n            \\ Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`, `CHI`,\\\n            \\ `SEA` or `AUS`.\"\n          example: PHX\n          type: string\n        initialClusterVersion:\n          description: (Read-only) The Rancher version that was installed on the cluster\n            during the first creation process.\n          example: v2.5.9\n          readOnly: true\n          type: string\n        nodePools:\n          description: The node pools associated with the cluster.\n          items:\n            $ref: '#/components/schemas/NodePool'\n          maxItems: 1\n          minItems: 1\n          type: array\n        configuration:\n          $ref: '#/components/schemas/Cluster_configuration'\n        metadata:\n          $ref: '#/components/schemas/Cluster_metadata'\n        workloadConfiguration:\n          $ref: '#/components/schemas/Cluster_workloadConfiguration'\n        statusDescription:\n          description: The cluster status\n          example: Creating\n          readOnly: true\n          type: string\n      required:\n      - location\n      type: object\n    NodePool:\n      description: Node Pool Configuration. A node pool contains the name and configuration\n        for a cluster's node pool. Node pools are set of nodes with a common configuration\n        and specification.\n      example:\n        nodes:\n        - serverId: 60b08f04adab617be44068bb\n        - serverId: 60b08f04adab617be44068bb\n        serverType: s0.d1.small\n        name: Rancher Server node pool.\n        nodeCount: 0\n        sshConfig: null\n      properties:\n        name:\n          description: The name of the node pool.\n          example: Rancher Server node pool.\n          type: string\n        nodeCount:\n          description: \"Number of configured nodes, currently only node counts of\\\n            \\ 1 and 3 are possible.\"\n          type: integer\n        serverType:\n          default: s0.d1.small\n          description: \"Node server type. Cannot be changed once a server is created.\\\n            \\ Currently this field should be set to either `s0.d1.small`, `s0.d1.medium`,\\\n            \\ `s1.c1.small`, `s1.c1.medium`, `s1.c2.medium`, `s1.c2.large`, `s2.c1.small`,\\\n            \\ `s2.c1.medium`, `s2.c1.large`, `s2.c2.small`, `s2.c2.medium`, `s2.c2.large`,\\\n            \\ `s1.e1.small`, `s1.e1.medium`, `s1.e1.large`.\"\n          example: s0.d1.small\n          type: string\n        sshConfig:\n          $ref: '#/components/schemas/NodePool_sshConfig'\n        nodes:\n          description: (Read-only) The nodes associated with this node pool.\n          items:\n            $ref: '#/components/schemas/Node'\n          readOnly: true\n          type: array\n      type: object\n    Node:\n      description: Node details.\n      example:\n        serverId: 60b08f04adab617be44068bb\n      properties:\n        serverId:\n          description: The server identifier.\n          example: 60b08f04adab617be44068bb\n          type: string\n      type: object\n    RancherClusterConfig:\n      description: (Write-only) Rancher configuration parameters.\n      properties:\n        token:\n          description: Shared secret used to join a server or agent to a cluster.\n          example: gS7SnDnY5st0ryJxMXA7\n          type: string\n        tlsSan:\n          description: This maps to ranchers `tls-san`. Add additional hostname or\n            IP as a Subject Alternative Name in the TLS cert.\n          example: mydomain.com\n          type: string\n        etcdSnapshotScheduleCron:\n          default: \"0 0,12 * * *\"\n          description: \"This maps to ranchers `etcd-snapshot-schedule-cron`. Snapshot\\\n            \\ interval time in cron spec. eg. every 5 hours ‘0 */5 * * *’. Default:\\\n            \\ at 12 am/pm\"\n          example: \"0 0,12 * * *\"\n          type: string\n        etcdSnapshotRetention:\n          default: 5\n          description: This maps to ranchers `etcd-snapshot-retention`. Number of\n            snapshots to retain.\n          example: 5\n          type: integer\n        nodeTaint:\n          description: \"This maps to ranchers `node-taint`. Registering kubelet with\\\n            \\ set of taints. By default, server nodes will be schedulable and thus\\\n            \\ your workloads can get launched on them. If you wish to have a dedicated\\\n            \\ control plane where no user workloads will run, you can use taints.\"\n          example: CriticalAddonsOnly=true:NoExecute\n          type: string\n        clusterDomain:\n          description: This maps to ranchers `cluster-domain`. Cluster Domain.\n          example: cluster.local\n          type: string\n        certificates:\n          $ref: '#/components/schemas/RancherClusterConfig_certificates'\n      type: object\n    WorkloadClusterConfig:\n      description: (Write-only) Workload cluster configuration parameters.\n      properties:\n        name:\n          description: The name of the workload cluster. This field is autogenerated\n            if not provided.\n          example: Workload CLuster\n          type: string\n        serverCount:\n          default: 1\n          description: Number of configured servers. Currently only server counts\n            of 1 and 3 are possible.\n          example: 3\n          type: integer\n        serverType:\n          default: s0.d1.small\n          description: \"Node server type. Cannot be changed once the cluster is created.\\\n            \\ Currently this field should be set to either `s0.d1.small`, `s0.d1.medium`,\\\n            \\ `s1.c1.small`, `s1.c1.medium`, `s1.c2.medium`, `s1.c2.large`, `s1.e1.small`,\\\n            \\ `s1.e1.medium`, `s1.e1.large`, `s2.c1.small`, `s2.c1.medium`, `s2.c1.large`,\\\n            \\ `s2.c2.small`, `s2.c2.medium`, `s2.c2.large`, `d1.c1.small`, `d1.c2.small`,\\\n            \\ `d1.c3.small`, `d1.c4.small`, `d1.c1.medium`, `d1.c2.medium`, `d1.c3.medium`,\\\n            \\ `d1.c4.medium`, `d1.c1.large`, `d1.c2.large`, `d1.c3.large`, `d1.c4.large`,\\\n            \\ `d1.m1.medium`, `d1.m2.medium`, `d1.m3.medium`, `d1.m4.medium`, `d2.c3.medium`,\\\n            \\ `d2.c4.medium`, `d2.c5.medium`, `d2.c3.large`, `d2.c4.large`, `d2.c5.large`,\\\n            \\ `d2.m2.medium`, `d2.m2.large` or `d2.m2.xlarge`.\"\n          example: s0.d1.small\n          type: string\n        location:\n          description: \"Workload cluster location. Cannot be changed once cluster\\\n            \\ is created. Currently this field should be set to `PHX`, `ASH`, `SGP`,\\\n            \\ `NLD`, `CHI`, `SEA` or `AUS`.\"\n          example: PHX\n          type: string\n      required:\n      - location\n      - serverType\n      type: object\n      writeOnly: true\n    SshConfig:\n      description: (Write-only) Configuration defining which public SSH keys are pre-installed\n        as authorized on the server.\n      properties:\n        installDefaultKeys:\n          default: true\n          description: Define whether public keys marked as default should be installed\n            on this node. These are public keys that were already recorded on this\n            system. Use \u003ca href='https://developers.phoenixnap.com/docs/bmc/1/routes/ssh-keys/get'\n            target='_blank'\u003eGET /ssh-keys\u003c/a\u003e to retrieve a list of possible values.\n          example: true\n          type: boolean\n        keys:\n          description: List of public SSH keys.\n          example: \"[ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75\\\n            \\ user]\"\n          items:\n            type: string\n          type: array\n        keyIds:\n          description: List of public SSH key identifiers. These are public keys that\n            were already recorded on this system. Use \u003ca href='https://developers.phoenixnap.com/docs/bmc/1/routes/ssh-keys/get'\n            target='_blank'\u003eGET /ssh-keys\u003c/a\u003e to retrieve a list of possible values.\n          example:\n          - 5fa54d1e91867c03a0a7b4a4\n          items:\n            type: string\n          type: array\n      type: object\n    RancherServerMetadata:\n      description: (Read Only) Connection parameters to use to connect to the Rancher\n        Server Administrative GUI.\n      properties:\n        url:\n          description: The Rancher Server URL.\n          example: https://rancher/\n          type: string\n        username:\n          description: The username to use to login to the Rancher Server. This field\n            is returned only as a response to the create cluster request. Make sure\n            to take note or you will not be able to access the server.\n          example: admin\n          type: string\n        password:\n          description: This is the password to be used to login to the Rancher Server.\n            This field is returned only as a response to the create cluster request.\n            Make sure to take note or you will not be able to access the server.\n          example: 1234567890abcd!\n          type: string\n      type: object\n    RancherClusterCertificates:\n      description: (Write-only) Define the custom SSL certificates to be used instead\n        of defaults.\n      properties:\n        caCertificate:\n          description: The SSL CA certificate to be used for rancher admin.\n          type: string\n        certificate:\n          description: The SSL certificate to be used for rancher admin.\n          type: string\n        certificateKey:\n          description: The SSL certificate key to be used for rancher admin.\n          type: string\n      type: object\n    DeleteResult:\n      description: Result of a successful delete action.\n      example:\n        result: Solution cluster has been deleted.\n        clusterId: x78sdkjds879sd7cx8\n      properties:\n        result:\n          description: Solution cluster has been deleted.\n          example: Solution cluster has been deleted.\n          type: string\n        clusterId:\n          description: The unique identifier of the solution cluster.\n          example: x78sdkjds879sd7cx8\n          type: string\n      required:\n      - clusterId\n      - result\n      type: object\n    Error:\n      properties:\n        message:\n          description: The description detailing the cause of the error code.\n          readOnly: true\n          type: string\n        validationErrors:\n          description: \"Validation errors, if any.\"\n          items:\n            type: string\n          readOnly: true\n          type: array\n      required:\n      - message\n      type: object\n    Cluster_configuration:\n      allOf:\n      - $ref: '#/components/schemas/RancherClusterConfig'\n      writeOnly: true\n    Cluster_metadata:\n      allOf:\n      - $ref: '#/components/schemas/RancherServerMetadata'\n      readOnly: true\n    Cluster_workloadConfiguration:\n      allOf:\n      - $ref: '#/components/schemas/WorkloadClusterConfig'\n      writeOnly: true\n    NodePool_sshConfig:\n      allOf:\n      - $ref: '#/components/schemas/SshConfig'\n      writeOnly: true\n    RancherClusterConfig_certificates:\n      allOf:\n      - $ref: '#/components/schemas/RancherClusterCertificates'\n      writeOnly: true\n  securitySchemes:\n    OAuth2:\n      flows:\n        clientCredentials:\n          scopes:\n            bmc: Grants full access to bmc-api.\n            bmc.read: Grants read only access to bmc-api.\n          tokenUrl: https://auth.phoenixnap.com/auth/realms/BMC/protocol/openid-connect/token\n      type: oauth2\n",
			"canonicalURL": "/github.com/phoenixnap/go-sdk-bmc@58d897ca3c3aa5afd9d2f560a9708099a44fab17/-/blob/ranchersolutionapi/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/phoenixnap/go-sdk-bmc/blob/58d897ca3c3aa5afd9d2f560a9708099a44fab17/ranchersolutionapi/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/clusters\": get: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}