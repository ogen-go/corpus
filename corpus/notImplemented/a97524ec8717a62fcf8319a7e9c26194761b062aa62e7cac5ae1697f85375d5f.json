{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/habitat-sh/habitat"
		},
		"file": {
			"name": "sup-api.json",
			"size": 0,
			"path": "components/docs-chef-io/static/habitat-api-docs/sup-api.json",
			"byteSize": 18286,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Habitat Supervisor\",\n    \"version\": \"1.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://{rootUri}\",\n      \"variables\": {\n        \"rootUri\": {\n          \"description\": \"The root URI for the Habitat Supervisor\",\n          \"default\": \"\"\n        }\n      },\n      \"x-amf-parameters\": {\n        \"rootUri\": {\n          \"description\": \"The root URI for the Habitat Supervisor\",\n          \"example\": \"localhost:9631\"\n        }\n      }\n    }\n  ],\n  \"consumes\": [\n    \"application/json\"\n  ],\n  \"produces\": [\n    \"application/json\"\n  ],\n  \"paths\": {\n    \"/butterfly\": {\n      \"get\": {\n        \"description\": \"Butterfly debug output\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        }\n      }\n    },\n    \"/census\": {\n      \"get\": {\n        \"description\": \"Census debug output\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        }\n      }\n    },\n    \"/services\": {\n      \"get\": {\n        \"description\": \"List information of all loaded services\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"x-amf-merge\": [\n                    {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/service\"\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"503\": {\n            \"description\": \"Supervisor hasn't fully started. Try again later.\"\n          }\n        }\n      }\n    },\n    \"/services/{name}/{group}\": {\n      \"parameters\": [\n        {\n          \"name\": \"name\",\n          \"required\": true,\n          \"in\": \"path\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"group\",\n          \"required\": true,\n          \"in\": \"path\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"get\": {\n        \"description\": \"Show information of a single loaded service\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"x-amf-merge\": [\n                    {\n                      \"$ref\": \"#/components/schemas/service\"\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Service not loaded\"\n          },\n          \"503\": {\n            \"description\": \"Supervisor hasn't fully started. Try again later.\"\n          }\n        }\n      }\n    },\n    \"/services/{name}/{group}/config\": {\n      \"parameters\": [\n        {\n          \"name\": \"name\",\n          \"required\": true,\n          \"in\": \"path\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"group\",\n          \"required\": true,\n          \"in\": \"path\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"get\": {\n        \"description\": \"Get last configuration for the given service group\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/toml\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Service not loaded\"\n          },\n          \"503\": {\n            \"description\": \"Supervisor hasn't fully started. Try again later.\"\n          }\n        }\n      }\n    },\n    \"/services/{name}/{group}/health\": {\n      \"parameters\": [\n        {\n          \"name\": \"name\",\n          \"required\": true,\n          \"in\": \"path\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"group\",\n          \"required\": true,\n          \"in\": \"path\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"get\": {\n        \"description\": \"Health check status and output for the given service group\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Health Check - Ok / Warning\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"x-amf-merge\": [\n                    {\n                      \"$ref\": \"#/components/schemas/healthCheckOutput\"\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Service not loaded\"\n          },\n          \"500\": {\n            \"description\": \"Health Check - Unknown\"\n          },\n          \"503\": {\n            \"description\": \"Health Check - Critical\"\n          }\n        }\n      }\n    },\n    \"/services/{name}/{group}/{organization}\": {\n      \"parameters\": [\n        {\n          \"name\": \"name\",\n          \"required\": true,\n          \"in\": \"path\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"group\",\n          \"required\": true,\n          \"in\": \"path\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"organization\",\n          \"required\": true,\n          \"in\": \"path\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"get\": {\n        \"description\": \"Show information of a single loaded service scoped to an organization\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"x-amf-merge\": [\n                    {\n                      \"$ref\": \"#/components/schemas/service\"\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Service not loaded\"\n          },\n          \"503\": {\n            \"description\": \"Supervisor hasn't fully started. Try again later.\"\n          }\n        }\n      }\n    },\n    \"/services/{name}/{group}/{organization}/config\": {\n      \"parameters\": [\n        {\n          \"name\": \"name\",\n          \"required\": true,\n          \"in\": \"path\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"group\",\n          \"required\": true,\n          \"in\": \"path\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"organization\",\n          \"required\": true,\n          \"in\": \"path\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"get\": {\n        \"description\": \"Get last configuration for the given service group\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/toml\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Service not loaded\"\n          },\n          \"503\": {\n            \"description\": \"Temporarily couldn't load configuration\"\n          }\n        }\n      }\n    },\n    \"/services/{name}/{group}/{organization}/health\": {\n      \"parameters\": [\n        {\n          \"name\": \"name\",\n          \"required\": true,\n          \"in\": \"path\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"group\",\n          \"required\": true,\n          \"in\": \"path\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"organization\",\n          \"required\": true,\n          \"in\": \"path\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"get\": {\n        \"description\": \"Health check status and output for the given service group\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Health Check - Ok / Warning\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"x-amf-merge\": [\n                    {\n                      \"$ref\": \"#/components/schemas/healthCheckOutput\"\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Service not loaded\"\n          },\n          \"500\": {\n            \"description\": \"Health Check - Unknown\"\n          },\n          \"503\": {\n            \"description\": \"Health Check - Critical\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"hookTable\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"health_check\": {\n            \"type\": \"object\",\n            \"x-amf-merge\": [\n              {\n                \"$ref\": \"#/components/schemas/hookInfo\"\n              }\n            ]\n          },\n          \"init\": {\n            \"type\": \"object\",\n            \"x-amf-merge\": [\n              {\n                \"$ref\": \"#/components/schemas/hookInfo\"\n              }\n            ]\n          },\n          \"file_updated\": {\n            \"type\": \"object\",\n            \"x-amf-merge\": [\n              {\n                \"$ref\": \"#/components/schemas/hookInfo\"\n              }\n            ]\n          },\n          \"reload\": {\n            \"type\": \"object\",\n            \"x-amf-merge\": [\n              {\n                \"$ref\": \"#/components/schemas/hookInfo\"\n              }\n            ]\n          },\n          \"reconfigure\": {\n            \"type\": \"object\",\n            \"x-amf-merge\": [\n              {\n                \"$ref\": \"#/components/schemas/hookInfo\"\n              }\n            ]\n          },\n          \"suitability\": {\n            \"type\": \"object\",\n            \"x-amf-merge\": [\n              {\n                \"$ref\": \"#/components/schemas/hookInfo\"\n              }\n            ]\n          },\n          \"run\": {\n            \"type\": \"object\",\n            \"x-amf-merge\": [\n              {\n                \"$ref\": \"#/components/schemas/hookInfo\"\n              }\n            ]\n          },\n          \"post_run\": {\n            \"type\": \"object\",\n            \"x-amf-merge\": [\n              {\n                \"$ref\": \"#/components/schemas/hookInfo\"\n              }\n            ]\n          }\n        }\n      },\n      \"pkg\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"ident\",\n          \"origin\",\n          \"name\",\n          \"version\",\n          \"release\",\n          \"deps\",\n          \"env\",\n          \"exposes\",\n          \"exports\",\n          \"path\",\n          \"svc_path\",\n          \"svc_config_path\",\n          \"svc_data_path\",\n          \"svc_files_path\",\n          \"svc_static_path\",\n          \"svc_var_path\",\n          \"svc_pid_file\",\n          \"svc_run\",\n          \"svc_user\",\n          \"svc_group\"\n        ],\n        \"properties\": {\n          \"ident\": {\n            \"type\": \"string\"\n          },\n          \"origin\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"release\": {\n            \"type\": \"string\"\n          },\n          \"deps\": {\n            \"type\": \"array\",\n            \"x-amf-merge\": [\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/pkgIdent\"\n                }\n              }\n            ]\n          },\n          \"env\": {\n            \"type\": \"object\"\n          },\n          \"exposes\": {\n            \"type\": \"array\",\n            \"x-amf-merge\": [\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            ]\n          },\n          \"exports\": {\n            \"type\": \"object\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          },\n          \"svc_path\": {\n            \"type\": \"string\"\n          },\n          \"svc_config_path\": {\n            \"type\": \"string\"\n          },\n          \"svc_data_path\": {\n            \"type\": \"string\"\n          },\n          \"svc_files_path\": {\n            \"type\": \"string\"\n          },\n          \"svc_static_path\": {\n            \"type\": \"string\"\n          },\n          \"svc_var_path\": {\n            \"type\": \"string\"\n          },\n          \"svc_pid_file\": {\n            \"type\": \"string\"\n          },\n          \"svc_run\": {\n            \"type\": \"string\"\n          },\n          \"svc_user\": {\n            \"type\": \"string\"\n          },\n          \"svc_group\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"processInfo\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"pid\",\n          \"preamble\",\n          \"state\",\n          \"state_entered\",\n          \"started\"\n        ],\n        \"properties\": {\n          \"pid\": {\n            \"type\": \"integer\"\n          },\n          \"preamble\": {\n            \"type\": \"string\"\n          },\n          \"state\": {\n            \"enum\": [\n              \"Up\",\n              \"Down\",\n              \"Start\",\n              \"Restart\"\n            ],\n            \"type\": \"string\"\n          },\n          \"state_entered\": {\n            \"type\": \"integer\"\n          },\n          \"started\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"service\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"service_group\",\n          \"bldr_url\",\n          \"spec_file\",\n          \"spec_ident\",\n          \"topology\",\n          \"update_strategy\",\n          \"cfg\",\n          \"pkg\",\n          \"sys\",\n          \"health_check\",\n          \"initialized\",\n          \"last_election_status\",\n          \"needs_reload\",\n          \"needs_reconfiguration\",\n          \"hooks\",\n          \"process\"\n        ],\n        \"properties\": {\n          \"service_group\": {\n            \"type\": \"string\"\n          },\n          \"bldr_url\": {\n            \"type\": \"string\"\n          },\n          \"spec_file\": {\n            \"type\": \"string\"\n          },\n          \"spec_ident\": {\n            \"type\": \"object\",\n            \"x-amf-merge\": [\n              {\n                \"$ref\": \"#/components/schemas/pkgIdent\"\n              }\n            ]\n          },\n          \"topology\": {\n            \"enum\": [\n              \"standalone\",\n              \"leader\"\n            ],\n            \"type\": \"string\"\n          },\n          \"update_strategy\": {\n            \"enum\": [\n              \"none\",\n              \"rolling\",\n              \"at-once\"\n            ],\n            \"type\": \"string\"\n          },\n          \"cfg\": {\n            \"type\": \"object\"\n          },\n          \"pkg\": {\n            \"type\": \"object\",\n            \"x-amf-merge\": [\n              {\n                \"$ref\": \"#/components/schemas/pkg\"\n              }\n            ]\n          },\n          \"sys\": {},\n          \"health_check\": {\n            \"enum\": [\n              \"Ok\",\n              \"Warning\",\n              \"Critical\",\n              \"Unknown\"\n            ],\n            \"type\": \"string\"\n          },\n          \"initialized\": {\n            \"type\": \"boolean\"\n          },\n          \"last_election_status\": {\n            \"type\": \"string\"\n          },\n          \"needs_reload\": {\n            \"type\": \"boolean\"\n          },\n          \"needs_reconfiguration\": {\n            \"type\": \"boolean\"\n          },\n          \"hooks\": {\n            \"type\": \"object\",\n            \"x-amf-merge\": [\n              {\n                \"$ref\": \"#/components/schemas/hookTable\"\n              }\n            ]\n          },\n          \"config_from\": {\n            \"type\": \"string\"\n          },\n          \"process\": {\n            \"type\": \"object\",\n            \"x-amf-merge\": [\n              {\n                \"$ref\": \"#/components/schemas/processInfo\"\n              }\n            ]\n          }\n        }\n      },\n      \"systemInfo\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"version\",\n          \"member_id\",\n          \"ip\",\n          \"hostname\",\n          \"gossip_ip\",\n          \"gossip_port\",\n          \"http_gateway_ip\",\n          \"http_gateway_port\",\n          \"permanent\"\n        ],\n        \"properties\": {\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"member_id\": {\n            \"type\": \"string\"\n          },\n          \"ip\": {\n            \"type\": \"string\"\n          },\n          \"hostname\": {\n            \"type\": \"string\"\n          },\n          \"gossip_ip\": {\n            \"type\": \"string\"\n          },\n          \"gossip_port\": {\n            \"type\": \"integer\"\n          },\n          \"http_gateway_ip\": {\n            \"type\": \"string\"\n          },\n          \"http_gateway_port\": {\n            \"type\": \"integer\"\n          },\n          \"permanent\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"hookInfo\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"render_pair\",\n          \"stdout_log_path\",\n          \"stderr_log_path\"\n        ],\n        \"properties\": {\n          \"render_pair\": {\n            \"type\": \"string\"\n          },\n          \"stdout_log_path\": {\n            \"type\": \"string\"\n          },\n          \"stderr_log_path\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"pkgIdent\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"origin\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"origin\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"release\": {\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"healthCheckOutput\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"stdout\",\n          \"stderr\"\n        ],\n        \"properties\": {\n          \"stdout\": {\n            \"type\": \"string\"\n          },\n          \"stderr\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/habitat-sh/habitat@c1e53dcf1d8b73007e9b4a4fc197500c23a8d825/-/blob/components/docs-chef-io/static/habitat-api-docs/sup-api.json",
			"externalURLs": [
				{
					"url": "https://github.com/habitat-sh/habitat/blob/c1e53dcf1d8b73007e9b4a4fc197500c23a8d825/components/docs-chef-io/static/habitat-api-docs/sup-api.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/census\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema",
		"unsupported content types"
	]
}