{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/factset/enterprise-sdk"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "code/java/FactSetContentAPIBatch/v1/api/openapi.yaml",
			"byteSize": 32058,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: api@factset.com\n    name: FactSet Research Systems\n    url: http://www.factset.com/api\n  description: FactSet Content APIs - Batching Endpoint\n  license:\n    name: License Information\n    url: http://www.factset.com/api/license.html\n  termsOfService: http://www.factset.com/api/terms.html\n  title: FactSet Batch API Service\n  version: 1.0.0\nservers:\n- description: Production Server\n  url: https://api.factset.com/content\n- description: Test Server\n  url: http://cts-content-proxy-ts-poc.factset.io\nsecurity:\n- FactSetApiKey: []\n- FactSetOAuth2: []\npaths:\n  /batch/v1/result:\n    get:\n      deprecated: false\n      description: Returns the response data for the underlying batch request that\n        is specified by the id.\n      operationId: getBatchData\n      parameters:\n      - allowEmptyValue: false\n        description: Batch Request identifier.\n        explode: true\n        in: query\n        name: id\n        required: true\n        schema:\n          format: uuid\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Price of AAPL as of March 29 2019:\n                  $ref: '#/components/examples/singleSecurityPrices'\n                Prices for AAPL and TSLA as of March 29th 2019:\n                  $ref: '#/components/examples/twoSecuritiesPrices'\n                One Month of Daily Prices for AAPL in March 2019:\n                  $ref: '#/components/examples/oneMonthSecurityPrices'\n              schema:\n                $ref: '#/components/schemas/BatchDataResponse'\n          description: Request Response Object when batch request has completed and\n            response is created\n        \"202\":\n          content:\n            application/json:\n              examples:\n                Batch Request Queued:\n                  $ref: '#/components/examples/BatchStatusQueuedResponse'\n                Batch Request Executing:\n                  $ref: '#/components/examples/BatchStatusExecutingResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch Request has not finished and the result has NOT been\n            created.\n        \"404\":\n          content:\n            application/json:\n              examples:\n                Batch Request Not Found:\n                  $ref: '#/components/examples/notFound'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Resource not found.\n      summary: Returns the response for a Batch Request\n      tags:\n      - Batch Processing\n      x-factset-different-success-responses: true\n      x-accepts: application/json\n    post:\n      deprecated: false\n      description: 'Return the response data for the underlying batch request that\n        is specified by the id. '\n      operationId: getBatchDataWithPost\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Batch Data Request:\n                $ref: '#/components/examples/BatchDataRequest'\n            schema:\n              $ref: '#/components/schemas/BatchDataRequest'\n        description: Batch Data Request Post Body\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Price of AAPL as of March 29 2019:\n                  $ref: '#/components/examples/singleSecurityPrices'\n                Prices for AAPL and TSLA as of March 29th 2019:\n                  $ref: '#/components/examples/twoSecuritiesPrices'\n                One Month of Daily Prices for AAPL in March 2019:\n                  $ref: '#/components/examples/oneMonthSecurityPrices'\n              schema:\n                $ref: '#/components/schemas/BatchDataResponse'\n          description: Request Response Object when batch request has completed and\n            response is created.\n        \"202\":\n          content:\n            application/json:\n              examples:\n                Batch Request Queued:\n                  $ref: '#/components/examples/BatchStatusQueuedResponse'\n                Batch Request Executing:\n                  $ref: '#/components/examples/BatchStatusExecutingResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch Request has not finished and the result has NOT been\n            created.\n        \"404\":\n          content:\n            application/json:\n              examples:\n                Batch Request Not Found:\n                  $ref: '#/components/examples/notFound'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Resource not found.\n      summary: Returns the response for a Batch Request\n      tags:\n      - Batch Processing\n      x-factset-different-success-responses: true\n      x-contentType: application/json\n      x-accepts: application/json\n  /batch/v1/status:\n    get:\n      deprecated: false\n      description: Return the status for the underlying batch request that is specified\n        by the id.\n      operationId: getBatchStatus\n      parameters:\n      - allowEmptyValue: false\n        description: Batch Request identifier.\n        explode: true\n        in: query\n        name: id\n        required: true\n        schema:\n          format: uuid\n          type: string\n        style: form\n      responses:\n        \"201\":\n          content:\n            application/json:\n              examples:\n                Batch Status Done:\n                  $ref: '#/components/examples/BatchStatusDoneResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch Request has been completed and the response has been\n            created.\n          headers:\n            Location:\n              description: Path to Batch Request result.\n              example: batch/v1/result?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"202\":\n          content:\n            application/json:\n              examples:\n                Batch Status Queued:\n                  $ref: '#/components/examples/BatchStatusQueuedResponse'\n                Batch Status Executing:\n                  $ref: '#/components/examples/BatchStatusExecutingResponse'\n                Batch Status Failed:\n                  $ref: '#/components/examples/BatchStatusFailedResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch Request has not finished and the result has NOT been\n            created.\n        \"404\":\n          content:\n            application/json:\n              examples:\n                Batch Request Not Found:\n                  $ref: '#/components/examples/notFound'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Resource not found.\n      summary: Returns the status for a Batch Request\n      tags:\n      - Batch Processing\n      x-accepts: application/json\n    post:\n      deprecated: false\n      description: 'Return the status for the underlying batch request that is specified\n        by the id. '\n      operationId: getBatchStatusWithPost\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Batch Status Request:\n                $ref: '#/components/examples/BatchStatusRequest'\n            schema:\n              $ref: '#/components/schemas/BatchStatusRequest'\n        description: Batch Status Request Post Body\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              examples:\n                Batch Status Done:\n                  $ref: '#/components/examples/BatchStatusDoneResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch Request has been completed and the response has been\n            created.\n          headers:\n            Location:\n              description: Path to Batch Request result.\n              example: batch/v1/result?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"202\":\n          content:\n            application/json:\n              examples:\n                Batch Status Queued:\n                  $ref: '#/components/examples/BatchStatusQueuedResponse'\n                Batch Status Executing:\n                  $ref: '#/components/examples/BatchStatusExecutingResponse'\n                Batch Status Failed:\n                  $ref: '#/components/examples/BatchStatusFailedResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch Request has not finished and the result has NOT been\n            created.\n        \"404\":\n          content:\n            application/json:\n              examples:\n                Batch Request Not Found:\n                  $ref: '#/components/examples/notFound'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Resource not found.\n      summary: Returns the status for a Batch Request\n      tags:\n      - Batch Processing\n      x-contentType: application/json\n      x-accepts: application/json\ncomponents:\n  examples:\n    BatchPricesRequestPost:\n      description: Batch Request for Prices for APPL and Tesla.\n      summary: Batch Request for Prices for APPL and Tesla.\n      value:\n        ids:\n        - AAPL-US\n        - TSLA-US\n        startDate: 2019-01-01\n        endDate: 2019-12-31\n        frequency: D\n        calendar: FIVEDAY\n        currency: LOCAL\n        adjust: SPLIT\n        batch: \"Y\"\n    BatchDataRequest:\n      description: Batch Data Request\n      value:\n        id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n    BatchStatusRequest:\n      description: Batch Status Request\n      value:\n        id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n    BatchStatusAcceptedResponse:\n      description: Batch Status Accepted Response\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: QUEUED\n          startTime: 2021-06-29T18:34:52.168Z\n          endTime: null\n          error: null\n    BatchStatusQueuedResponse:\n      description: Batch Status Queued Response\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: QUEUED\n          startTime: 2021-06-29T18:34:52.168Z\n          endTime: null\n          error: null\n    BatchStatusExecutingResponse:\n      description: Batch Status Executing Response\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: EXECUTING\n          startTime: 2021-06-29T18:34:52.168Z\n          endTime: null\n          error: null\n    BatchStatusDoneResponse:\n      description: Batch Status Done Response\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: DONE\n          startTime: 2021-06-29T18:34:52.168Z\n          endTime: 2021-06-29T18:34:55.402Z\n          error: null\n    BatchStatusFailedResponse:\n      description: Batch Status Failed Response\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: FAILED\n          startTime: 2021-06-29T18:34:52.168Z\n          endTime: 2021-06-29T18:34:55.402Z\n          error: Invalid format for startDate\n    singleSecurityPrices:\n      description: Single Price Record for AAPL\n      summary: Single Price Record for AAPL as of March 29 2019\n      value:\n        data:\n        - fsymId: MH33D6-R\n          date: 2019-03-29\n          adjDate: 2014-06-09\n          currency: USD\n          price: 189.95\n          priceOpen: 189.83\n          priceHigh: 190.08\n          priceLow: 188.54\n          volume: 23563.96\n          requestId: AAPL\n    twoSecuritiesPrices:\n      description: Price Records for AAPL and TSLA as of March 29 2019\n      summary: Price Records for AAPL and TSLA as of March 29 2019\n      value:\n        data:\n        - fsymId: MH33D6-R\n          date: 2019-03-29\n          adjDate: 2014-06-09\n          currency: USD\n          price: 189.95\n          priceOpen: 189.83\n          priceHigh: 190.08\n          priceLow: 188.54\n          volume: 23563.96\n          requestId: AAPL\n        - fsymId: Q2YN1N-R\n          date: 2019-03-29\n          adjDate: null\n          currency: USD\n          price: 279.86\n          priceOpen: 278.7\n          priceHigh: 280.16\n          priceLow: 274.5\n          volume: 5991.338\n          requestId: TSLA\n    oneMonthSecurityPrices:\n      description: One month of daily open, high, low, and close end-of-day prices\n        and volume for AAPL for March 2019.\n      summary: One month of daily prices for AAPL for March 2019\n      value:\n        data:\n        - fsymId: MH33D6-R\n          date: 2019-03-01\n          adjDate: 2014-06-09\n          currency: USD\n          price: 174.97\n          priceOpen: 174.28\n          priceHigh: 175.15\n          priceLow: 172.89\n          volume: 25886.17\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-04\n          adjDate: 2014-06-09\n          currency: USD\n          price: 175.85\n          priceOpen: 175.69\n          priceHigh: 177.75\n          priceLow: 173.97\n          volume: 27436.2\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-05\n          adjDate: 2014-06-09\n          currency: USD\n          price: 175.53\n          priceOpen: 175.94\n          priceHigh: 176\n          priceLow: 174.54\n          volume: 19737.42\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-06\n          adjDate: 2014-06-09\n          currency: USD\n          price: 174.52\n          priceOpen: 174.67\n          priceHigh: 175.49\n          priceLow: 173.94\n          volume: 20810.38\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-07\n          adjDate: 2014-06-09\n          currency: USD\n          price: 172.5\n          priceOpen: 173.87\n          priceHigh: 174.44\n          priceLow: 172.02\n          volume: 24796.37\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-08\n          adjDate: 2014-06-09\n          currency: USD\n          price: 172.91\n          priceOpen: 170.32\n          priceHigh: 173.07\n          priceLow: 169.5\n          volume: 23999.36\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-11\n          adjDate: 2014-06-09\n          currency: USD\n          price: 178.9\n          priceOpen: 175.49\n          priceHigh: 179.12\n          priceLow: 175.35\n          volume: 32011.03\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-12\n          adjDate: 2014-06-09\n          currency: USD\n          price: 180.91\n          priceOpen: 180\n          priceHigh: 182.67\n          priceLow: 179.37\n          volume: 32467.58\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-13\n          adjDate: 2014-06-09\n          currency: USD\n          price: 181.71\n          priceOpen: 182.25\n          priceHigh: 183.3\n          priceLow: 180.92\n          volume: 31032.52\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-14\n          adjDate: 2014-06-09\n          currency: USD\n          price: 183.73\n          priceOpen: 183.9\n          priceHigh: 184.1\n          priceLow: 182.56\n          volume: 23579.51\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-15\n          adjDate: 2014-06-09\n          currency: USD\n          price: 186.12\n          priceOpen: 184.85\n          priceHigh: 187.33\n          priceLow: 183.74\n          volume: 39042.91\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-18\n          adjDate: 2014-06-09\n          currency: USD\n          price: 188.02\n          priceOpen: 185.8\n          priceHigh: 188.39\n          priceLow: 185.79\n          volume: 26219.83\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-19\n          adjDate: 2014-06-09\n          currency: USD\n          price: 186.53\n          priceOpen: 188.35\n          priceHigh: 188.99\n          priceLow: 185.92\n          volume: 31646.37\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-20\n          adjDate: 2014-06-09\n          currency: USD\n          price: 188.16\n          priceOpen: 186.23\n          priceHigh: 189.49\n          priceLow: 184.73\n          volume: 31035.23\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-21\n          adjDate: 2014-06-09\n          currency: USD\n          price: 195.09\n          priceOpen: 190.02\n          priceHigh: 196.33\n          priceLow: 189.81\n          volume: 51034.24\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-22\n          adjDate: 2014-06-09\n          currency: USD\n          price: 191.05\n          priceOpen: 195.34\n          priceHigh: 197.69\n          priceLow: 190.78\n          volume: 42407.67\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-25\n          adjDate: 2014-06-09\n          currency: USD\n          price: 188.74\n          priceOpen: 191.51\n          priceHigh: 191.98\n          priceLow: 186.6\n          volume: 43845.29\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-26\n          adjDate: 2014-06-09\n          currency: USD\n          price: 186.79\n          priceOpen: 191.664\n          priceHigh: 192.88\n          priceLow: 184.58\n          volume: 49800.54\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-27\n          adjDate: 2014-06-09\n          currency: USD\n          price: 188.47\n          priceOpen: 188.75\n          priceHigh: 189.76\n          priceLow: 186.55\n          volume: 29848.43\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-28\n          adjDate: 2014-06-09\n          currency: USD\n          price: 188.72\n          priceOpen: 188.95\n          priceHigh: 189.559\n          priceLow: 187.53\n          volume: 20780.36\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-29\n          adjDate: 2014-06-09\n          currency: USD\n          price: 189.95\n          priceOpen: 189.83\n          priceHigh: 190.08\n          priceLow: 188.54\n          volume: 23563.96\n          requestId: AAPL\n    multipleIdsOneYearPost:\n      description: One Year of Daily Prices for APPL and Tesla in Calendar 2019 Year\n      summary: One Year of Daily Prices for APPL and Tesla in Calendar 2019 Year\n      value:\n        ids:\n        - AAPL-US\n        - TSLA-US\n        startDate: 2019-01-01\n        endDate: 2019-12-31\n        frequency: D\n        calendar: FIVEDAY\n        currency: LOCAL\n        adjust: SPLIT\n    singleIdsOneYearMonthlyPost:\n      description: One Year of Monthly Prices for AAPL-US in Calendar 2019 Year\n      summary: One Year of Monthly Prices for AAPL-US in Calendar 2019 Year\n      value:\n        ids:\n        - AAPL-US\n        startDate: 2019-01-01\n        endDate: 2019-12-31\n        frequency: M\n        calendar: FIVEDAY\n        currency: LOCAL\n        adjust: SPLIT\n    priceAdjustedForDividendsMonthlyPost:\n      summary: Price adjusted for splits, spinoffs and dividends.\n      value:\n        ids:\n        - AAPL-US\n        startDate: 2019-01-01\n        endDate: 2019-12-31\n        frequency: M\n        calendar: FIVEDAY\n        currency: LOCAL\n        adjust: DIVADJ\n    badRequestRequiredParameter:\n      description: This error message occurs when the request does not include the\n        required parameters. Required parameters are indicated with a red asterisks\n        symbol in the specification file.\n      summary: Bad Request - Required Parameter Missing\n      value:\n        status: Bad Request\n        timestamp: 2020-06-12 15:48:42.016\n        path: /factset-prices/v1/{endpoint}\n        message: The parameter 'ids' is required and may not be empty.\n        subErrors: null\n    badRequestInvalidParameters:\n      description: This error message occurs when a request parameter is used in which\n        is not recognized by the service. Please revise your request to include only\n        the parameters listed in the specification. Typical causes are spelling mistakes\n        and use of improper casing.\n      summary: Bad Request - Invalid Parameters\n      value:\n        status: Bad Request\n        timestamp: 2020-06-12 15:58:54.068\n        path: /factset-prices/v1/{endpoint}\n        message: 'Invalid Parameter (s): fakeParameterName1 fakeParameterName2. Please\n          modify your request to use parameters outlined in the specification for\n          this endpoint.'\n        subErrors: null\n    badRequestReadTimeout:\n      description: This error may be returned if it takes more than 29 seconds to\n        hear back from the data fetch service.\n      summary: Bad Request - Read Timeout\n      value:\n        status: Bad Request\n        timestamp: 2019-11-04 16:18:38.949\n        path: /factset-prices/v1/{endpoint}\n        message: The request took too long. Try again with a smaller request.\n        subErrors: null\n    unauthenticated:\n      description: This occurs when a user is not properly authenticated or recognized\n        by the service. Please double check the USERNAME-SERIAL and API-Key used to\n        request and ensure you are within the IP range specified for the Key. Report\n        Issue under 401 error for help with troubleshooting.\n      summary: User Authentication Failed\n      value:\n        status: User Authentication Failed\n        timestamp: 2019-10-31 16:08:07.945\n        path: /factset-prices/v1/{endpoint}\n        message: User Authentication Failed.\n        subErrors: null\n    forbidden:\n      description: The USERNAME-SERIAL attempted to request the endpoint is not authorized\n        to access. The request was a legal request, but the server is refusing to\n        respond. Please reach out to FactSet Account Team for assistance with authorization.\n      summary: Forbidden\n      value:\n        status: Forbidden\n        timestamp: 2020-06-12 16:08:51.731\n        path: /factset-prices/v1/{endpoint}\n        message: USERNAME-SERIAL does not have permission to use /factset-prices/v1/{endpoint}\n        subErrors: null\n    notFound:\n      description: The requested item was not found.\n      summary: Not Found\n      value:\n        status: Not Found\n        timestamp: 2020-06-12T16:08:51.731Z\n        path: /batch/v1/status\n        message: The Batch Request was not found. It has probably expired.\n        subErrors: null\n    unsupportedMediaType:\n      description: This bad request occurs when the media type passed in the request\n        is not supported. Currently the APIs only support 'application/json'.\n      summary: Unsupported Media Type\n      value:\n        status: Unsupported Media Type\n        timestamp: 2019-11-05 09:42:27.237\n        path: /factset-prices/v1/{endpoint}\n        message: text/html media type is not supported. Supported media types are\n          application/json\n        subErrors: null\n    notWritable:\n      description: This error may be returned when the server encounters an error\n        writing the JSON response.\n      summary: Internal Server Error - Not Writable\n      value:\n        status: Internal Server Error\n        timestamp: 2019-11-05 09:48:29.18\n        path: /factset-prices/v1/{endpoint}\n        message: Error writing JSON output\n        subErrors: null\n    generalException:\n      description: This is the most general error that can be returned to by the service.\n        Please `Report Issue` to FactSet.\n      summary: Internal Server Error - General Exception\n      value:\n        status: Internal Server Error\n        timestamp: 2019-11-01 10:36:01.944\n        path: /factset-prices/v1/{endpoint}\n        message: Unexpected error\n        subErrors: null\n  parameters:\n    batchId:\n      allowEmptyValue: false\n      description: Batch Request identifier.\n      explode: true\n      in: query\n      name: id\n      required: true\n      schema:\n        format: uuid\n        type: string\n      style: form\n  responses:\n    \"400\":\n      content:\n        application/json:\n          examples:\n            Bad Request - Missing Required Parameter:\n              $ref: '#/components/examples/badRequestRequiredParameter'\n            Bad Request - Invalid Parameter:\n              $ref: '#/components/examples/badRequestInvalidParameters'\n            Bad Request - Read Timeout:\n              $ref: '#/components/examples/badRequestReadTimeout'\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n      description: Bad Request. This can occur for several reasons. Please review\n        the \"message\" for more details.\n    \"401\":\n      content:\n        application/json:\n          examples:\n            Bad Request - Date Format:\n              $ref: '#/components/examples/unauthenticated'\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n      description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and have\n        successfully generated an API KEY for the IP range you are connecting from.\n        For more help, select the **Report Issue** in the top right corner of this\n        Developer Portal specification card and choose Connectivity 401 or 403 Responses.\n    \"403\":\n      content:\n        application/json:\n          examples:\n            Bad Request - Date Format:\n              $ref: '#/components/examples/forbidden'\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n      description: The USERNAME-SERIAL attempted to request the endpoint is not authorized\n        to access. The request was a legal request, but the server is refusing to\n        respond. Please reach out to FactSet Account Team for assistance with authorization.\n    \"404\":\n      content:\n        application/json:\n          examples:\n            Batch Request Not Found:\n              $ref: '#/components/examples/notFound'\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n      description: Resource not found.\n    \"415\":\n      content:\n        application/json:\n          examples:\n            Bad Request - Date Format:\n              $ref: '#/components/examples/unsupportedMediaType'\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n      description: Unsupported Media Type. This error may be returned when the caller\n        sends a resource in a format that is not accepted by the server. This can\n        be fixed by ensuring that Content-Type header is set to the correct value.\n        In this instance, \"application/json\" would be the appropriate value.\n    \"500\":\n      content:\n        application/json:\n          examples:\n            Internal Server Error - Not Writable:\n              $ref: '#/components/examples/notWritable'\n            Internal Server Error - General Exception:\n              $ref: '#/components/examples/generalException'\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n      description: Internal Server Error.\n  schemas:\n    BatchDataRequest:\n      example:\n        id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n      properties:\n        id:\n          description: Batch Request identifier.\n          example: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          format: uuid\n          type: string\n      required:\n      - id\n      title: Batch Data Request\n      type: object\n    BatchDataResponse:\n      example:\n        data: '{}'\n      properties:\n        data:\n          description: |\n            The schema for the batched result is determined by the endpoint you used with the _batch_ parameter.\n            Please see the schema for that endpoint for the definition.\n          title: Batch Data\n          type: object\n      title: Batch Data Response\n      type: object\n    BatchData:\n      description: |\n        The schema for the batched result is determined by the endpoint you used with the _batch_ parameter.\n        Please see the schema for that endpoint for the definition.\n      title: Batch Data\n      type: object\n    BatchStatusRequest:\n      example:\n        id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n      properties:\n        id:\n          description: Batch Request identifier.\n          example: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          format: uuid\n          type: string\n      title: Batch Status Request\n      type: object\n    BatchStatusResponse:\n      example:\n        data:\n          startTime: 2000-01-23T04:56:07.000+00:00\n          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          endTime: 2000-01-23T04:56:07.000+00:00\n          error: Invalid Parameter (s)- curr. Please modify your request to use parameters\n            outlined in the specification for this endpoint.\n          status: QUEUED\n      properties:\n        data:\n          $ref: '#/components/schemas/BatchStatus'\n      title: Batch Status Response\n      type: object\n    BatchStatus:\n      example:\n        startTime: 2000-01-23T04:56:07.000+00:00\n        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n        endTime: 2000-01-23T04:56:07.000+00:00\n        error: Invalid Parameter (s)- curr. Please modify your request to use parameters\n          outlined in the specification for this endpoint.\n        status: QUEUED\n      properties:\n        id:\n          description: the id of batch request.\n          format: uuid\n          type: string\n        startTime:\n          description: Time when the batch request is started. This is in Eastern\n            Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS],\n            following ISO 8601.\n          format: date-time\n          type: string\n        endTime:\n          description: Time when the batch request is ended. This is in Eastern Time\n            Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following\n            ISO 8601.\n          format: date-time\n          type: string\n        status:\n          enum:\n          - QUEUED\n          - EXECUTING\n          - DONE\n          - FAILED\n          type: string\n        error:\n          description: Error message.\n          example: Invalid Parameter (s)- curr. Please modify your request to use\n            parameters outlined in the specification for this endpoint.\n          type: string\n      title: Batch Status\n      type: object\n    errorResponse:\n      properties:\n        status:\n          description: status\n          example: Bad Request\n          type: string\n        timestamp:\n          description: timestamp in YYYY-MM-DD HH:MM:SS.SSS\n          format: date-time\n          type: string\n        path:\n          description: The Endpoint path {package}/version/{endpoint}\n          example: /factset-prices/v1/prices\n          type: string\n        message:\n          description: The plain text error message\n          example: Validation Error\n          type: string\n        subErrors:\n          $ref: '#/components/schemas/errorResponse_subErrors'\n      title: Error Response\n      type: object\n    errorResponse_subErrors:\n      description: subErrors related to the error message. Null if not applicable.\n      properties:\n        object:\n          description: the operation ID\n          type: string\n        field:\n          description: Parameter Field Name\n          type: string\n        message:\n          description: Error message\n          type: string\n        rejectedValue:\n          description: Rejected Values in an Array\n          items:\n            type: string\n          type: array\n      type: object\n  securitySchemes:\n    FactSetOAuth2:\n      flows:\n        clientCredentials:\n          scopes: {}\n          tokenUrl: https://auth.factset.com/as/token.oauth2\n      type: oauth2\n    FactSetApiKey:\n      scheme: basic\n      type: http\n\n",
			"canonicalURL": "/github.com/factset/enterprise-sdk@dcf75a02daedc726c313912a349d2863114bc92c/-/blob/code/java/FactSetContentAPIBatch/v1/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/factset/enterprise-sdk/blob/dcf75a02daedc726c313912a349d2863114bc92c/code/java/FactSetContentAPIBatch/v1/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/batch/v1/result\": get: security: security \"FactSetOAuth2\" (index 1): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}