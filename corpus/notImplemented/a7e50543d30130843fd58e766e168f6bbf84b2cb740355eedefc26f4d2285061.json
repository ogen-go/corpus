{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ebi-uniprot/openapi-spring-maven-plugin"
		},
		"file": {
			"name": "request-body-general.yaml",
			"size": 0,
			"path": "src/test/resources/expected-output/request-body-general.yaml",
			"byteSize": 7085,
			"content": "openapi: 3.0.1\ninfo:\n  title: OpenAPI definition\n  version: v0\nservers:\n- url: localhost\n  description: ' Default server url'\npaths:\n  /methodWithoutRequestBodyAndTwoParameters:\n    delete:\n      summary: Delete user\n      description: This can only be done by the logged in user.\n      operationId: methodWithoutRequestBodyAndTwoParameters\n      parameters:\n      - name: name\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: code\n        in: query\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: default response\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/User'\n  /methodWithRequestBodyWithoutContent:\n    post:\n      summary: Create user\n      description: This can only be done by the logged in user.\n      operationId: methodWithRequestBodyWithoutContent\n      requestBody:\n        description: Created user object\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      responses:\n        200:\n          description: default response\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/User'\n  /methodWithTwoRequestBodyWithoutAnnotationAndTwoConsumes:\n    post:\n      summary: Create pet\n      description: Creating pet.\n      operationId: methodWithTwoRequestBodyWithoutAnnotationAndTwoConsumes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        200:\n          description: default response\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Pet'\n  /methodWithRequestBodyWithoutContentWithoutImplementation:\n    get:\n      summary: Create user\n      description: This can only be done by the logged in user.\n      operationId: methodWithRequestBodyWithoutContentWithoutImplementation\n      parameters:\n      - name: user\n        in: query\n        required: true\n        schema:\n          $ref: '#/components/schemas/User'\n      responses:\n        200:\n          description: default response\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/User'\n  /methodWithRequestBodyWithoutAnnotationAndTwoConsumes:\n    put:\n      summary: Modify pet\n      description: Modifying pet.\n      operationId: methodWithRequestBodyWithoutAnnotationAndTwoConsumes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        200:\n          description: default response\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/User'\n  /methodWithOneSimpleRequestBody:\n    delete:\n      summary: Delete pet\n      description: Deleting pet.\n      operationId: methodWithOneSimpleRequestBody\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: integer\n              format: int32\n          application/xml:\n            schema:\n              type: integer\n              format: int32\n      responses:\n        200:\n          description: default response\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Pet'\n  /methodWithRequestBodyAndTwoParameters:\n    post:\n      summary: Create user\n      description: This can only be done by the logged in user.\n      operationId: methodWithRequestBodyAndTwoParameters\n      parameters:\n      - name: name\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: code\n        in: query\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Created user object\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      responses:\n        200:\n          description: default response\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/User'\n  /methodWithRequestBodyWithoutAnnotation:\n    put:\n      summary: Modify user\n      description: Modifying user.\n      operationId: methodWithRequestBodyWithoutAnnotation\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        200:\n          description: default response\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/User'\n  /methodWithTwoRequestBodyWithAnnotationAndTwoConsumes:\n    post:\n      summary: Create pet\n      description: Creating pet.\n      operationId: methodWithTwoRequestBodyWithAnnotationAndTwoConsumes\n      requestBody:\n        description: Request Body User\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        200:\n          description: default response\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Pet'\ncomponents:\n  schemas:\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        phone:\n          type: string\n        userStatus:\n          type: integer\n          description: User Status\n          format: int32\n      xml:\n        name: User\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Category\n    Pet:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        category:\n          $ref: '#/components/schemas/Category'\n        name:\n          type: string\n        photoUrls:\n          type: array\n          xml:\n            wrapped: true\n          items:\n            type: string\n            xml:\n              name: photoUrl\n        tags:\n          type: array\n          xml:\n            wrapped: true\n          items:\n            $ref: '#/components/schemas/Tag'\n        status:\n          type: string\n          description: pet status in the store\n          enum:\n          - available,pending,sold\n      xml:\n        name: Pet\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Tag\n",
			"canonicalURL": "/github.com/ebi-uniprot/openapi-spring-maven-plugin@f6d3c5d3f4ad5e03cbea5461b1fa52a104697dbe/-/blob/src/test/resources/expected-output/request-body-general.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ebi-uniprot/openapi-spring-maven-plugin/blob/f6d3c5d3f4ad5e03cbea5461b1fa52a104697dbe/src/test/resources/expected-output/request-body-general.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/methodWithTwoRequestBodyWithAnnotationAndTwoConsumes\": post: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}