{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/heremaps/xyz-documentation"
		},
		"file": {
			"name": "public3.yml",
			"size": 0,
			"path": "docs/api/openapi/public3.yml",
			"byteSize": 66860,
			"content": "---\nopenapi: \"3.0.2\"\ninfo:\n  title: \"HERE Data Hub\"\n  description: \"HERE Data Hub is a REST API for simple access to geo data.\"\n  contact: {}\n  version: \"1.18.7\"\nservers:\n- url: \"/hub\"\nsecurity:\n- AccessToken: []\n- Bearer: []\ntags:\n- name: \"Manage Spaces\"\n  description: \"Space management endpoints.\"\n- name: \"Read Features\"\n  description: \"Read only endpoints for features.\"\n- name: \"Write Features\"\n  description: \"Read and write endpoints for features.\"\npaths:\n  /spaces:\n    get:\n      tags:\n      - \"Manage Spaces\"\n      summary: \"List spaces\"\n      description: \"Lists the spaces, which the current authenticated user has access\\\n        \\ to.\"\n      operationId: \"getSpaces\"\n      parameters:\n      - name: \"includeRights\"\n        in: \"query\"\n        description: \"If set to _true_, the access rights for each space are included\\\n          \\ in the response.\"\n        required: false\n        schema:\n          type: \"boolean\"\n          default: false\n      - name: \"owner\"\n        in: \"query\"\n        description: \"Define the owner(s) of spaces to be shown in the response.\\n\\\n          Possible values are:\\n\\n* __me__ (_The default value;_ Show only the spaces\\\n          \\ being owned by the current user),\\n* __(someOwnerId)__ (_Only for shared\\\n          \\ spaces:_ Explicitly only show spaces belonging to the specified user),\\n\\\n          * __others__ (Show only the spaces having been shared _excluding the own\\\n          \\ ones_),\\n* __*__ (Show all spaces the current user has access to)\\n\"\n        required: false\n        schema:\n          type: \"string\"\n          default: \"me\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/SpacesResponse\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n    post:\n      tags:\n      - \"Manage Spaces\"\n      summary: \"Create a space\"\n      description: \"Creates a new space.\"\n      operationId: \"postSpace\"\n      requestBody:\n        $ref: \"#/components/requestBodies/SpaceRequest\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/SpaceResponse\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse400\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"409\":\n          $ref: \"#/components/responses/ErrorResponse409\"\n        \"413\":\n          $ref: \"#/components/responses/ErrorResponse413\"\n  /spaces/{spaceId}:\n    get:\n      tags:\n      - \"Manage Spaces\"\n      summary: \"Get a space by ID\"\n      description: \"Returns the space definition.\"\n      operationId: \"getSpace\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/SpaceResponse\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n    patch:\n      tags:\n      - \"Manage Spaces\"\n      summary: \"Update a space\"\n      description: \"Updates a space.\"\n      operationId: \"patchSpace\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      requestBody:\n        $ref: \"#/components/requestBodies/SpaceRequest\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/SpaceResponse\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse400\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n        \"409\":\n          $ref: \"#/components/responses/ErrorResponse409\"\n        \"413\":\n          $ref: \"#/components/responses/ErrorResponse413\"\n    delete:\n      tags:\n      - \"Manage Spaces\"\n      summary: \"Delete a space\"\n      description: \"Deletes a space configuration. The data of the space may or may\\\n        \\ not be deleted, depending on the underlying storage provider.\"\n      operationId: \"deleteSpace\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/SpaceResponse\"\n        \"204\":\n          $ref: \"#/components/responses/EmptyResponse\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n  /spaces/{spaceId}/features:\n    get:\n      tags:\n      - \"Read Features\"\n      summary: \"Get features by ID\"\n      description: \"Returns all of the features found for the provided list of ids.\\\n        \\ The response is always a FeatureCollection, even if there are no features\\\n        \\ with the provided ids.\"\n      operationId: \"getFeatures\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      - $ref: \"#/components/parameters/RequiredIds\"\n      - $ref: \"#/components/parameters/PropertiesSelection\"\n      - $ref: \"#/components/parameters/Force2D\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FeatureCollectionResponse\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n        \"513\":\n          $ref: \"#/components/responses/ErrorResponse513\"\n    put:\n      tags:\n      - \"Write Features\"\n      summary: \"Create or replace multiple features\"\n      description: \"Create or replace the provided features.\"\n      operationId: \"putFeatures\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      - $ref: \"#/components/parameters/AddTags\"\n      - $ref: \"#/components/parameters/RemoveTags\"\n      requestBody:\n        $ref: \"#/components/requestBodies/FeatureCollectionRequest\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FeatureCollectionModificationResponse\"\n        \"204\":\n          $ref: \"#/components/responses/EmptyResponse\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse400\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n        \"409\":\n          $ref: \"#/components/responses/ErrorResponse409\"\n        \"413\":\n          $ref: \"#/components/responses/ErrorResponse413\"\n        \"513\":\n          $ref: \"#/components/responses/ErrorResponse513\"\n    post:\n      tags:\n      - \"Write Features\"\n      summary: \"Modify features in the space\"\n      description: \"Create or patch features.\"\n      operationId: \"postFeatures\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      - $ref: \"#/components/parameters/AddTags\"\n      - $ref: \"#/components/parameters/RemoveTags\"\n      requestBody:\n        $ref: \"#/components/requestBodies/FeatureCollectionOrFeatureModificationListRequest\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FeatureCollectionModificationResponse\"\n        \"204\":\n          $ref: \"#/components/responses/EmptyResponse\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse400\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n        \"409\":\n          $ref: \"#/components/responses/ErrorResponse409\"\n        \"413\":\n          $ref: \"#/components/responses/ErrorResponse413\"\n        \"513\":\n          $ref: \"#/components/responses/ErrorResponse513\"\n    delete:\n      tags:\n      - \"Write Features\"\n      summary: \"Delete multiple features\"\n      description: \"Delete multiple features from the space.\"\n      operationId: \"deleteFeatures\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      - $ref: \"#/components/parameters/Ids\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FeatureCollectionModificationResponse\"\n        \"204\":\n          $ref: \"#/components/responses/EmptyResponse\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n  /spaces/{spaceId}/features/{featureId}:\n    get:\n      tags:\n      - \"Read Features\"\n      summary: \"Get a feature by ID\"\n      description: \"Retrieves the feature with the provided identifier.\"\n      operationId: \"getFeature\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      - $ref: \"#/components/parameters/FeatureId\"\n      - $ref: \"#/components/parameters/PropertiesSelection\"\n      - $ref: \"#/components/parameters/Force2D\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FeatureResponse\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n        \"513\":\n          $ref: \"#/components/responses/ErrorResponse513\"\n    put:\n      tags:\n      - \"Write Features\"\n      summary: \"Create or replace a feature\"\n      description: \"Creates or replaces a feature in the space.\"\n      operationId: \"putFeature\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      - $ref: \"#/components/parameters/FeatureId\"\n      - $ref: \"#/components/parameters/AddTags\"\n      - $ref: \"#/components/parameters/RemoveTags\"\n      requestBody:\n        $ref: \"#/components/requestBodies/FeatureRequest\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FeatureResponse\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse400\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"409\":\n          $ref: \"#/components/responses/ErrorResponse409\"\n        \"413\":\n          $ref: \"#/components/responses/ErrorResponse413\"\n        \"513\":\n          $ref: \"#/components/responses/ErrorResponse513\"\n    patch:\n      tags:\n      - \"Write Features\"\n      summary: \"Patch a feature\"\n      description: \"Patches an existing feature.\"\n      operationId: \"patchFeature\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      - $ref: \"#/components/parameters/FeatureId\"\n      - $ref: \"#/components/parameters/AddTags\"\n      - $ref: \"#/components/parameters/RemoveTags\"\n      requestBody:\n        $ref: \"#/components/requestBodies/FeatureRequest\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FeatureResponse\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse400\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n        \"409\":\n          $ref: \"#/components/responses/ErrorResponse409\"\n        \"413\":\n          $ref: \"#/components/responses/ErrorResponse413\"\n        \"513\":\n          $ref: \"#/components/responses/ErrorResponse513\"\n    delete:\n      tags:\n      - \"Write Features\"\n      summary: \"Deletes a feature from the space\"\n      description: \"Deletes an existing feature.\"\n      operationId: \"deleteFeature\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      - $ref: \"#/components/parameters/FeatureId\"\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/EmptyResponse\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n  /spaces/{spaceId}/statistics:\n    get:\n      tags:\n      - \"Read Features\"\n      summary: \"Get statistics\"\n      description: \"Returns statistical information about this space.\"\n      operationId: \"getStatistics\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      - $ref: \"#/components/parameters/SkipCache\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/StatisticsResponse\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n  /spaces/{spaceId}/bbox:\n    get:\n      tags:\n      - \"Read Features\"\n      summary: \"Get features by bounding box\"\n      description: \"Return the features which are inside a bounding box stipulated\\\n        \\ by west, north, east and south parameters.\"\n      operationId: \"getFeaturesByBBox\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      - $ref: \"#/components/parameters/West\"\n      - $ref: \"#/components/parameters/North\"\n      - $ref: \"#/components/parameters/East\"\n      - $ref: \"#/components/parameters/South\"\n      - $ref: \"#/components/parameters/TagList\"\n      - $ref: \"#/components/parameters/Clip\"\n      - $ref: \"#/components/parameters/Limit\"\n      - $ref: \"#/components/parameters/PropertiesQuery\"\n      - $ref: \"#/components/parameters/PropertiesSelection\"\n      - $ref: \"#/components/parameters/SkipCache\"\n      - $ref: \"#/components/parameters/Clustering\"\n      - $ref: \"#/components/parameters/ClusteringParams\"\n      - $ref: \"#/components/parameters/Force2D\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FeatureCollectionResponse\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse400\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n        \"513\":\n          $ref: \"#/components/responses/ErrorResponse513\"\n  /spaces/{spaceId}/tile/{type}/{tileId}:\n    get:\n      tags:\n      - \"Read Features\"\n      summary: \"Get features in tile\"\n      description: \"List the features selected by tile type and tile id.\"\n      operationId: \"getFeaturesByTile\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      - $ref: \"#/components/parameters/TileType\"\n      - $ref: \"#/components/parameters/TileId\"\n      - $ref: \"#/components/parameters/TagList\"\n      - $ref: \"#/components/parameters/Clip\"\n      - $ref: \"#/components/parameters/PropertiesQuery\"\n      - $ref: \"#/components/parameters/PropertiesSelection\"\n      - $ref: \"#/components/parameters/SkipCache\"\n      - $ref: \"#/components/parameters/Clustering\"\n      - $ref: \"#/components/parameters/ClusteringParams\"\n      - $ref: \"#/components/parameters/Margin\"\n      - $ref: \"#/components/parameters/Limit\"\n      - $ref: \"#/components/parameters/Force2D\"\n      - $ref: \"#/components/parameters/Mode\"\n      - $ref: \"#/components/parameters/VizSampling\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/TileResponse\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse400\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n        \"513\":\n          $ref: \"#/components/responses/ErrorResponse513\"\n  /spaces/{spaceId}/spatial:\n    get:\n      tags:\n      - \"Read Features\"\n      summary: \"Get features with radius search\"\n      description: \"List the features which are inside the specified radius.\\nThe\\\n        \\ origin radius point is calculated based either on latitude \u0026 longitude or\\\n        \\ by\\nspecifying a features geometry. As third option it is possible to use\\\n        \\ a H3 index\\nas input geometry.\\n\"\n      operationId: \"getFeaturesBySpatial\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      - $ref: \"#/components/parameters/Latitude\"\n      - $ref: \"#/components/parameters/Longitude\"\n      - $ref: \"#/components/parameters/RefSpaceId\"\n      - $ref: \"#/components/parameters/RefFeatureId\"\n      - $ref: \"#/components/parameters/H3Index\"\n      - $ref: \"#/components/parameters/Radius\"\n      - $ref: \"#/components/parameters/TagList\"\n      - $ref: \"#/components/parameters/Limit\"\n      - $ref: \"#/components/parameters/Clip\"\n      - $ref: \"#/components/parameters/PropertiesQuery\"\n      - $ref: \"#/components/parameters/PropertiesSelection\"\n      - $ref: \"#/components/parameters/SkipCache\"\n      - $ref: \"#/components/parameters/Force2D\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FeatureCollectionResponse\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse400\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n        \"513\":\n          $ref: \"#/components/responses/ErrorResponse513\"\n    post:\n      tags:\n      - \"Read Features\"\n      summary: \"Get features which intersects the provided geometry.\"\n      description: \"List the features which are inside the specified radius.\\nThe\\\n        \\ origin point is calculated based on the geometry provided as payload.\\n\"\n      operationId: \"getFeaturesBySpatialPost\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      - $ref: \"#/components/parameters/Radius\"\n      - $ref: \"#/components/parameters/TagList\"\n      - $ref: \"#/components/parameters/Limit\"\n      - $ref: \"#/components/parameters/Clip\"\n      - $ref: \"#/components/parameters/PropertiesQuery\"\n      - $ref: \"#/components/parameters/PropertiesSelection\"\n      - $ref: \"#/components/parameters/SkipCache\"\n      - $ref: \"#/components/parameters/Force2D\"\n      requestBody:\n        $ref: \"#/components/requestBodies/GeometryRequest\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FeatureCollectionResponse\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse400\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n        \"513\":\n          $ref: \"#/components/responses/ErrorResponse513\"\n  /spaces/{spaceId}/search:\n    get:\n      tags:\n      - \"Read Features\"\n      summary: \"Search for features\"\n      description: \"Searches for features in the space. The results are unordered\\\n        \\ and the request does not allow to continue the search, which is the main\\\n        \\ difference when compared to the _iterate_ request.\"\n      operationId: \"searchForFeatures\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      - $ref: \"#/components/parameters/TagList\"\n      - $ref: \"#/components/parameters/Limit\"\n      - $ref: \"#/components/parameters/PropertiesQuery\"\n      - $ref: \"#/components/parameters/PropertiesSelection\"\n      - $ref: \"#/components/parameters/SkipCache\"\n      - $ref: \"#/components/parameters/Force2D\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FeatureCollectionResponse\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse400\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n        \"513\":\n          $ref: \"#/components/responses/ErrorResponse513\"\n  /spaces/{spaceId}/iterate:\n    get:\n      tags:\n      - \"Read Features\"\n      summary: \"Iterate features in the space\"\n      description: \"Iterates all of the features in the space. The features in the\\\n        \\ response are ordered so that no feature is returned twice. If there are\\\n        \\ more features, which could be loaded, the response FeatureCollection will\\\n        \\ contain the root attribute _handle_. The value of this attribute can be\\\n        \\ passed as a query parameter for the following request in order to continue\\\n        \\ the iteration from the marked position.\"\n      operationId: \"iterateFeatures\"\n      parameters:\n      - $ref: \"#/components/parameters/SpaceId\"\n      - $ref: \"#/components/parameters/Limit\"\n      - $ref: \"#/components/parameters/PropertiesSelection\"\n      - $ref: \"#/components/parameters/SkipCache\"\n      - $ref: \"#/components/parameters/Handle\"\n      - $ref: \"#/components/parameters/Force2D\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/IterateResponse\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse400\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse401\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorResponse403\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse404\"\n        \"513\":\n          $ref: \"#/components/responses/ErrorResponse513\"\ncomponents:\n  securitySchemes:\n    AccessToken:\n      type: \"apiKey\"\n      in: \"query\"\n      name: \"access_token\"\n    Bearer:\n      type: \"http\"\n      scheme: \"bearer\"\n      bearerFormat: \"JWT\"\n  parameters:\n    AddTags:\n      name: \"addTags\"\n      in: \"query\"\n      description: \"Tags to be added to the features.\"\n      required: false\n      style: \"form\"\n      schema:\n        type: \"array\"\n        items:\n          type: \"string\"\n    Clip:\n      name: \"clip\"\n      in: \"query\"\n      description: \"If set to _true_ the features' geometries are clipped to the geometry\\\n        \\ of the tile, bounding box or input geometry. Default is _false_.\"\n      required: false\n      schema:\n        type: \"boolean\"\n    Clustering:\n      name: \"clustering\"\n      in: \"query\"\n      description: \"The clustering algorithm to apply to the data within the result.\\\n        \\ Providing this query parameter the data will be returned in a clustered\\\n        \\ way. This means the data won't necessarily be returned in its original shape\\\n        \\ or with its original properties.\\nDepending on the chosen clustering algorithm\\\n        \\ there could be different mandatory and/or optional parameters to specify\\\n        \\ the behavior of the algorithm.\\nPossible values are:\\n\\n  * \\\"hexbin\\\"\\n\\\n        \\n    The hexbin algorithm divides the world in hexagonal \\\"bins\\\" on a specified\\\n        \\ resolution.\\n    Each hexagon has an address being described by the H3 addressing\\\n        \\ scheme.\\n    For more information on that topic see: https://eng.uber.com/h3/\\n\\\n        \\n  * \\\"quadbin\\\"\\n\\n    The quadbin algorithm takes the geometry input from\\\n        \\ the request (e.g. quadkey / bbox..)\\n    and count the features in it. This\\\n        \\ clustering mode works also for very large spaces and\\n    can be used for\\\n        \\ getting an overview where data is present in a given space. Furthermore,\\n\\\n        \\    a property filter on one property is applicable.\"\n      required: false\n      schema:\n        type: \"string\"\n        enum:\n        - \"hexbin\"\n        - \"quadbin\"\n    ClusteringParams:\n      name: \"clusteringParams\"\n      in: \"query\"\n      required: false\n      description: \"Some parameters for the chosen clustering algorithm.\\n\\nDepending\\\n        \\ on the chosen clustering algorithm there could be different mandatory and/or\\n\\\n        optional parameters to specify the behavior of the algorithm.\\n\\n### Clustering-Parameter\\\n        \\ reference\\n\\nNOTE: The actual query parameters in the URL are looking like:\\\n        \\ `?clustering.aParameterName=aValue`\\n\\n**Clustering-type: \\\"hexbin\\\":**\\n\\\n        \\nThere are several parameters needed by the H3 based hexbin algorithm.\\n\\\n        For more information on that topic see: https://eng.uber.com/h3/\\n\\n| Parameter\\\n        \\   | Type    | Mandatory | Meaning                                      \\\n        \\                         |\\n|-------------|---------|-----------|-----------------------------------------------------------------------|\\n\\\n        | absoluteResolution  | Number  | NO        | integer, The H3 hexagon resolution\\\n        \\ [0,13]                      |\\n| resolution  | Number  | NO        | deprecated,\\\n        \\ renamed to absoluteResolution                             |\\n| relativeResolution\\\n        \\ | Number  | NO        | integer value [-2,2] to be added to current used\\\n        \\ resolution  |\\n| property    | String  | NO        | A property of the original\\\n        \\ features for which to calculate statistics |\\n| pointmode   | Boolean |\\\n        \\ NO        | retuns the centroid of hexagons as geojson feature         \\\n        \\           |\\n| singlecoord | Boolean | NO        | force to evaluate the\\\n        \\ first object coordinate only (default: false)   |\\n| sampling    | String\\\n        \\  | NO        | samplingratio of underlying dataset  |\\n|             | \\\n        \\        |           | string value [off (1/1), low (1/8), lowmed (1/32),\\\n        \\ med (1/128), medhigh (1/1024), high (1/4096)] (default: off) |\\n\\n**Clustering-type:\\\n        \\ \\\"quadbin\\\":**\\n\\nThere are several parameters needed by the quadbin algorithm.\\\n        \\ You can use one property filter in combination.\\n\\n| Parameter   | Type\\\n        \\    | Mandatory | Meaning                                               \\\n        \\                |\\n|-------------|---------|-----------|-----------------------------------------------------------------------|\\n\\\n        | relativeResolution | Number  | NO        | integer, The quad resolution\\\n        \\ [0,4]                                             |\\n| noBuffer    | Boolean\\\n        \\ | NO        | do not place a buffer around quad polygons, default: false\\\n        \\            |\\n| resolution  | Number  | NO        | deprecated, renamed\\\n        \\ to resolutionRelative             |\\n| countmode   | String  | NO      \\\n        \\  | [real, estimated, mixed]                                    |\\n|    \\\n        \\         |         |           | real = real feature counts. Best accuracy,\\\n        \\ but slow.                  |\\n|             |         |           |    \\\n        \\ Not recommended for big result sets                       |\\n|         \\\n        \\    |         |           |                                             \\\n        \\                          |\\n|             |         |           | estimated\\\n        \\ = estimated feature counts. Low accuracy, but very fast      |\\n|      \\\n        \\       |         |           |     Recommended for big result sets      \\\n        \\                     |\\n|             |         |           |           \\\n        \\                                                            |\\n|        \\\n        \\     |         |           | mixed (default) = estimated feature counts combined\\\n        \\ with real ones.   |\\n|             |         |           |     If the estimation\\\n        \\ is low a real count gets applied. Fits to the |\\n|             |       \\\n        \\  |           |     most use cases                                      \\\n        \\  |\\n\"\n      style: \"form\"\n      explode: true\n      schema:\n        type: \"object\"\n        example:\n          clustering.resolution: 3\n          clustering.property: \"a.nested.property\"\n        additionalProperties:\n          type: \"string\"\n    East:\n      name: \"east\"\n      in: \"query\"\n      description: \"The longitude in WGS'84 decimal degree (-180 to +180) of the east\\\n        \\ (right) border of the bounding box.\"\n      required: false\n      schema:\n        type: \"number\"\n        format: \"double\"\n        minimum: -180\n        maximum: 180\n    FeatureId:\n      name: \"featureId\"\n      in: \"path\"\n      description: \"The unique identifier of a feature in the space.\"\n      required: true\n      schema:\n        type: \"string\"\n    Force2D:\n      name: \"force2D\"\n      in: \"query\"\n      description: \"If set to _true_ the features in the response will have only X's\\\n        \\ and Y's as coordinates.\"\n      schema:\n        type: \"boolean\"\n    Handle:\n      name: \"handle\"\n      in: \"query\"\n      description: \"The handle to continue the iteration.\"\n      schema:\n        type: \"string\"\n    Ids:\n      name: \"id\"\n      in: \"query\"\n      description: \"A comma separated list of unique feature identifiers. These are\\\n        \\ the acceptable formats for this field:\\n  * id=value1,value2\\n  * id=value1,id=value2\"\n      schema:\n        type: \"array\"\n        items:\n          type: \"string\"\n    Latitude:\n      name: \"lat\"\n      in: \"query\"\n      description: \"The latitude in WGS'84 decimal degree (-90 to +90) of the center\\\n        \\ Point.\"\n      schema:\n        type: \"number\"\n        minimum: -90\n        maximum: 90\n    Limit:\n      name: \"limit\"\n      in: \"query\"\n      description: \"The maximum number of features in the response. Default is _30000_.\\\n        \\ Hard limit is _100000_.\"\n      schema:\n        type: \"integer\"\n    Longitude:\n      name: \"lon\"\n      in: \"query\"\n      description: \"The longitude in WGS'84 decimal degree (-180 to +180) of the center\\\n        \\ Point.\"\n      schema:\n        type: \"number\"\n        minimum: -180\n        maximum: 180\n    Margin:\n      name: \"margin\"\n      in: \"query\"\n      description: \"Margin in pixels on the respective projected level around the\\\n        \\ tile. Default is 0.\"\n      schema:\n        type: \"integer\"\n        minimum: 0\n    Mode:\n      name: \"mode\"\n      in: \"query\"\n      description: \"optimize resultset and geometries for dispaly. mode = [raw|viz]\\n\\\n        \\nNote: when using mode=viz, the value of \\\"limit\\\" parameter will be set\\\n        \\ to its max value (100000) if not specified otherwise.\"\n      required: false\n      schema:\n        type: \"string\"\n        enum:\n        - \"raw\"\n        - \"viz\"\n    North:\n      name: \"north\"\n      in: \"query\"\n      description: \"The latitude in WGS'84 decimal degree (-90 to +90) of the north\\\n        \\ (top) border of the bounding box.\"\n      required: false\n      schema:\n        type: \"number\"\n        format: \"double\"\n        minimum: -90\n        maximum: 90\n    Part:\n      name: \"part\"\n      in: \"query\"\n      description: \"Requests disjunct parts of iteration results (used with sort).\\\n        \\ List of two integers \\\"part,total\\\".\\npart=1,4 read as first part out of\\\n        \\ 4, ... until part=4,4 .\\n\\nExample: ?part=7,9\\n\"\n      explode: false\n      schema:\n        type: \"array\"\n        items:\n          type: \"integer\"\n    PropertiesQuery:\n      name: \"params\"\n      in: \"query\"\n      description: \"Additional feature filters which compares the feature's property's\\\n        \\ value with the one specified in the query, resulting in a subset of features.\\n\\\n        \\nThe usage of multiple property names represents an AND operation. The usage\\\n        \\ of a comma (,) separating the properties values, represents an OR operation.\\n\\\n        \\nProperties initiated with 'f.' are used to access values which are added\\\n        \\ by default in the stored feature. The possible values are: 'f.id', 'f.createdAt'\\\n        \\ and 'f.updatedAt'.\\n\\nProperties initiated with 'p.' are used to access\\\n        \\ values in the stored feature which are under the 'properties' property.\\\n        \\ Use it as a shorthand accessor for 'properties' values.\\n\\nThe format should\\\n        \\ follow the specification below\\n  * ?p.property_name_1=property_value_1\u0026f.special_property_name_1=special_property_value_1\\n\\\n        \\n\\nFor example, the above query, the Features will be filtered by 'property'\\\n        \\ AND 'special property' equals to their respective values.\\n\\nWhile in the\\\n        \\ following example\\n  * ?p.property_name_1=value_1,value_2\\n\\n\\nThe resulting\\\n        \\ Features list will contain all elements having value_1 OR value_2.\\n\\nAdditionally\\\n        \\ to the operators used in the examples above, the query can be written, with\\\n        \\ the same semantic, by using the long operators: \\\"=gte=\\\", \\\"=lte=\\\", \\\"\\\n        =gt=\\\", \\\"=lt=\\\" and \\\"=cs=\\\". The below queries yield the same result:\\n\\\n        \\  * ?p.property_name_1\u003e=10\\n  * ?p.property_name_1=gte=10\\n\\n\\nThe available\\\n        \\ operators are:\\n  - \\\"=\\\" - equals\\n  - \\\"!=\\\" - not equals\\n  - \\\"=.null\\\"\\\n        \\ - is null\\n  - \\\"!=.null\\\" - is not null\\n  - \\\"\u003e=\\\" or \\\"=gte=\\\" - greater\\\n        \\ than or equals\\n  - \\\"\u003c=\\\" or \\\"=lte=\\\" - less than or equals\\n  - \\\"\u003e\\\"\\\n        \\ or \\\"=gt=\\\" - greater than\\n  - \\\"\u003c\\\" or \\\"=lt=\\\" - less than\\n  - \\\"@\u003e\\\"\\\n        \\ or \\\"=cs=\\\" - Array contains\\n\"\n      explode: true\n      schema:\n        type: \"object\"\n        example:\n          p.myProperty: \"someValue\"\n          p.otherProperty: 5\n        additionalProperties:\n          type: \"string\"\n    PropertiesSelection:\n      name: \"selection\"\n      in: \"query\"\n      description: \"A list of properties to be returned in the features result list.\\\n        \\ Multiple attributes can be\\nspecified by using comma(,).\\n\\nExample: ?selection=p.name,p.capacity,p.color,rootpropertyname\\n\"\n      explode: false\n      schema:\n        type: \"array\"\n        items:\n          type: \"string\"\n    H3Index:\n      name: \"h3Index\"\n      in: \"query\"\n      description: \"H3 index\"\n      schema:\n        type: \"string\"\n    Radius:\n      name: \"radius\"\n      in: \"query\"\n      description: \"Radius in meter which defines the diameter of the search request.\"\n      schema:\n        type: \"integer\"\n    RefFeatureId:\n      name: \"refFeatureId\"\n      in: \"query\"\n      description: \"The unique identifier of a feature in the referenced space.\\n\\\n        The geometry of that feature gets used for the spatial query.\\nAlways to use\\\n        \\ in combination with refCatalogHrn and refLayerId.\"\n      schema:\n        type: \"string\"\n    RefSpaceId:\n      name: \"refSpaceId\"\n      in: \"query\"\n      description: \"As alternative for defining center coordinates, it is possible\\\n        \\ to reference a geometry in a space. Therefore it is needed to provide the\\\n        \\ space id where the referenced feature is stored. Always to use in combination\\\n        \\ with refFeatureId.\"\n      schema:\n        type: \"string\"\n    RemoveTags:\n      name: \"removeTags\"\n      in: \"query\"\n      description: \"Tags to be removed from the features.\"\n      required: false\n      style: \"form\"\n      schema:\n        type: \"array\"\n        items:\n          type: \"string\"\n    RequiredIds:\n      name: \"id\"\n      in: \"query\"\n      description: \"A comma separated list of unique feature identifiers. These are\\\n        \\ the acceptable formats for this field:\\n  * id=value1,value2\\n  * id=value1,id=value2\"\n      required: true\n      schema:\n        type: \"array\"\n        items:\n          type: \"string\"\n    SkipCache:\n      name: \"skipCache\"\n      in: \"query\"\n      description: \"If set to _true_ the response is not returned from cache. Default\\\n        \\ is _false_.\"\n      schema:\n        type: \"boolean\"\n    Sort:\n      name: \"sort\"\n      in: \"query\"\n      description: \"Specifies the sort order by a list of properties. Ascending assumed\\\n        \\ if no sort direction (:asc, :desc) is specified\\n\\nExample: ?sort=p.name:asc,p.color:desc\\n\"\n      explode: false\n      schema:\n        type: \"array\"\n        items:\n          type: \"string\"\n    South:\n      name: \"south\"\n      in: \"query\"\n      description: \"The latitude in WGS'84 decimal degree (-90 to +90) of the south\\\n        \\ (bottom) border of the bounding box.\"\n      required: false\n      schema:\n        type: \"number\"\n        format: \"double\"\n        minimum: -90\n        maximum: 90\n    SpaceId:\n      name: \"spaceId\"\n      in: \"path\"\n      description: \"The unique identifier of the space.\"\n      required: true\n      schema:\n        type: \"string\"\n    TagList:\n      name: \"tags\"\n      in: \"query\"\n      description: \"A comma separated list of tags or combination of tags concatenated\\\n        \\ with a plus sign (+). A comma separated list of tags means any tag may be\\\n        \\ found. A plus sign concatenated list means every tag is required.\"\n      allowEmptyValue: true\n      style: \"form\"\n      schema:\n        type: \"array\"\n        items:\n          type: \"string\"\n    TileId:\n      name: \"tileId\"\n      in: \"path\"\n      description: \"The tile identifier can be provided as quadkey (__1__), Web Mercator\\\n        \\ level,x,y coordinates (__1_1_0__) or OSGEO Tile Map Service level,x,y (__1_1_0__).\"\n      required: true\n      schema:\n        type: \"string\"\n    TileType:\n      name: \"type\"\n      in: \"path\"\n      description: \"The type of tile identifier. \\\"quadkey\\\" - Virtual Earth, \\\"web\\\"\\\n        \\ - Web Mercator, \\\"tms\\\" - OSGEO Tile Map Service, \\\"here\\\" - Here Tile Schema.\"\n      required: true\n      schema:\n        type: \"string\"\n        enum:\n        - \"quadkey\"\n        - \"web\"\n        - \"tms\"\n        - \"here\"\n    VizSampling:\n      name: \"vizSampling\"\n      in: \"query\"\n      description: \"Choose sampling strength in case of mode = viz.\\nvizSampling =\\\n        \\ [low|med|high|off] - default:med.\"\n      required: false\n      schema:\n        type: \"string\"\n        enum:\n        - \"low\"\n        - \"med\"\n        - \"high\"\n        - \"off\"\n    West:\n      name: \"west\"\n      in: \"query\"\n      description: \"The longitude in WGS'84 decimal degree (-180 to +180) of the west\\\n        \\ (left) border of the bounding box.\"\n      required: false\n      schema:\n        type: \"number\"\n        format: \"double\"\n        minimum: -180\n        maximum: 180\n  responses:\n    EmptyResponse:\n      description: \"An empty response as a result of a user-request with accepted\\\n        \\ MIME type application/x-empty.\"\n      content:\n        application/x-empty:\n          schema:\n            type: \"string\"\n    ErrorResponse400:\n      description: \"Malformed or Bad Request.\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example:\n            type: \"ErrorResponse\"\n            streamId: \"7480e28a-e273-11e8-9af8-7508bbe361d9\"\n            error: \"Exception\"\n            errorMessage: \"\u003cInvalid request details\u003e\"\n    ErrorResponse401:\n      description: \"Unauthorized to perform the request.\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    ErrorResponse403:\n      description: \"Forbidden request. Insufficient rights to perform the request.\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example:\n            type: \"ErrorResponse\"\n            streamId: \"7480e28a-e273-11e8-9af8-7508bbe361d9\"\n            error: \"Exception\"\n            errorMessage: \"Insufficient rights + \u003cRequest specific access error details\u003e\"\n    ErrorResponse404:\n      description: \"Not found.\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example:\n            type: \"ErrorResponse\"\n            streamId: \"7480e28a-e273-11e8-9af8-7508bbe361d9\"\n            error: \"Exception\"\n            errorMessage: \"The requested resource does not exist.\"\n    ErrorResponse409:\n      description: \"An error response which indicates a conflict.\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example:\n            type: \"ErrorResponse\"\n            streamId: \"7480e28a-e273-11e8-9af8-7508bbe361d9\"\n            error: \"Exception\"\n            errorMessage: \"The record exists.\"\n    ErrorResponse413:\n      description: \"Request entity too large.\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    ErrorResponse513:\n      description: \"Response payload too large.\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example:\n            type: \"ErrorResponse\"\n            streamId: \"7480e28a-e273-11e8-9af8-7508bbe361d9\"\n            error: \"Exception\"\n            errorMessage: \"The response payload was too large. Please try to reduce\\\n              \\ the expected amount of data.\"\n    FeatureCollectionModificationResponse:\n      description: \"An array of features and their modifications response.\"\n      content:\n        application/geo+json:\n          schema:\n            $ref: \"#/components/schemas/FeatureCollectionModification\"\n          example:\n            type: \"FeatureCollection\"\n            etag: \"b9be03f253c53c23\"\n            inserted:\n            - \"BfiimUxHjj\"\n            updated:\n            - \"cuiImUxOjj\"\n            features:\n            - type: \"Feature\"\n              id: \"BfiimUxHjj\"\n              geometry:\n                type: \"Point\"\n                coordinates:\n                - -2.960847\n                - 53.430828\n              properties:\n                name: \"Anfield\"\n                '@ns:com:here:xyz':\n                  createdAt: 1517504700726\n                  updatedAt: 1517504700726\n                  space: \"0FzlE2wX\"\n                  tags:\n                  - \"football\"\n                  - \"stadium\"\n                amenity: \"Football Stadium\"\n                capacity: 54074\n                description: \"Home of Liverpool Football Club\"\n    FeatureCollectionResponse:\n      description: \"An array of features response.\"\n      content:\n        application/geo+json:\n          schema:\n            $ref: \"#/components/schemas/FeatureCollection\"\n    FeatureResponse:\n      description: \"A feature response.\"\n      content:\n        application/geo+json:\n          schema:\n            $ref: \"#/components/schemas/Feature\"\n    HistoryStatisticsResponseResponse:\n      description: \"Statistical information about a history.\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/HistoryStatisticsResponse\"\n    IterateResponse:\n      description: \"A FeatureCollection with handle response.\"\n      content:\n        application/geo+json:\n          schema:\n            $ref: \"#/components/schemas/FeatureCollectionIterable\"\n    SpaceResponse:\n      description: \"The space.\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Space\"\n          examples:\n            response:\n              value:\n                id: \"0FzlE2wX\"\n                title: \"My Demo Space\"\n                description: \"Description as markdown\"\n                owner: \"HERE-12345678-1234-1111-1234-1234432112344321\"\n                cid: \"dX0BH75QE8paCVQr8MQw\"\n                createdAt: 1560417151751\n                updatedAt: 1561480482869\n    SpacesResponse:\n      description: \"The list of spaces.\"\n      content:\n        application/json:\n          schema:\n            items:\n              $ref: \"#/components/schemas/Space\"\n            type: \"array\"\n          examples:\n            response:\n              value:\n              - id: \"0FzlE2wX\"\n                title: \"My Demo Space\"\n                description: \"Description as markdown\"\n                owner: \"HERE-12345678-1234-1111-1234-1234432112344321\"\n                cid: \"dX0BH75QE8paCVQr8MQw\"\n                createdAt: 1560417151751\n                updatedAt: 1561480482869\n    StatisticsResponse:\n      description: \"Statistical information about a space.\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Statistics\"\n    TileResponse:\n      description: \"A FeatureCollection in GeoJSON or mvt format response.\"\n      content:\n        application/geo+json:\n          schema:\n            $ref: \"#/components/schemas/FeatureCollection\"\n  requestBodies:\n    FeatureCollectionOrFeatureModificationListRequest:\n      description: \"A FeatureCollection object or a FeatureModificationList object.\"\n      required: true\n      content:\n        application/geo+json:\n          schema:\n            $ref: \"#/components/schemas/FeatureCollection\"\n    FeatureCollectionRequest:\n      description: \"A feature collection request.\"\n      required: true\n      content:\n        application/geo+json:\n          schema:\n            $ref: \"#/components/schemas/FeatureCollection\"\n    FeatureRequest:\n      description: \"A feature request.\"\n      required: true\n      content:\n        application/geo+json:\n          schema:\n            $ref: \"#/components/schemas/Feature\"\n    GeometryRequest:\n      description: \"A geometry request.\"\n      content:\n        application/geo+json:\n          schema:\n            $ref: \"#/components/schemas/Geometry\"\n    SpaceRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Space\"\n  schemas:\n    Copyright:\n      type: \"object\"\n      description: \"Provides some information about a copyright\"\n      properties:\n        label:\n          description: \"The copyright label to be displayed by the client.\"\n          type: \"string\"\n        alt:\n          description: \"The description text for the label to be displayed by the\\\n            \\ client.\"\n          type: \"string\"\n      example:\n        label: \"HERE\"\n        alt: \"HERE Data Hub\"\n    Error:\n      type: \"object\"\n      description: \"The response send when the request failed. This response may be\\\n        \\ send for certain HTTP error codes like 403 Forbidden or 502 Bad Gateway\\\n        \\ and should hold more details about the error reason.\"\n      properties:\n        streamId:\n          description: \"A unique identifier of the request. This identifier should\\\n            \\ be provided when reporting errors. Its used to track requests through\\\n            \\ the Data Hub platform.\"\n          type: \"string\"\n        type:\n          type: \"string\"\n          description: \"The type of the error. Defaults to 'ErrorResponse'.\"\n        error:\n          type: \"string\"\n          description: \"The error summary.\"\n        errorMessage:\n          type: \"string\"\n          description: \"A human readable message in English that should provide a\\\n            \\ more detailed description of the error reason.\"\n    Estimated:\n      type: \"boolean\"\n      description: \"True if the value is only an estimation; false otherwise.\"\n      example: true\n    Feature:\n      allOf:\n      - $ref: \"#/components/schemas/GeoJSON\"\n      - type: \"object\"\n        description: \"A Feature object represents a spatially bounded thing.\"\n        properties:\n          id:\n            description: \"The unique identifier of the feature.\"\n            type: \"string\"\n          geometry:\n            $ref: \"#/components/schemas/Geometry\"\n          properties:\n            type: \"object\"\n            description: \"The properties of the feature.\"\n            properties:\n              '@ns:com:here:xyz':\n                $ref: \"#/components/schemas/Namespace\"\n            additionalProperties: true\n        example:\n          type: \"Feature\"\n          id: \"BfiimUxHjj\"\n          geometry:\n            type: \"Point\"\n            coordinates:\n            - -2.960847\n            - 53.430828\n          properties:\n            name: \"Anfield\"\n            '@ns:com:here:xyz':\n              tags:\n              - \"football\"\n              - \"stadium\"\n            amenity: \"Football Stadium\"\n            capacity: 54074\n            description: \"Home of Liverpool Football Club\"\n    FeatureCollection:\n      allOf:\n      - $ref: \"#/components/schemas/GeoJSON\"\n      - type: \"object\"\n        description: \"A FeatureCollection GeoJSON object.\"\n        required:\n        - \"features\"\n        discriminator:\n          propertyName: \"type\"\n          mapping:\n            FeatureCollectionIterable: \"#/components/schemas/FeatureCollectionIterable\"\n            FeatureCollectionModification: \"#/components/schemas/FeatureCollectionModification\"\n        properties:\n          features:\n            type: \"array\"\n            description: \"Features included in the collection.\"\n            items:\n              $ref: \"#/components/schemas/Feature\"\n        example:\n          type: \"FeatureCollection\"\n          features:\n          - type: \"Feature\"\n            id: \"BfiimUxHjj\"\n            geometry:\n              type: \"Point\"\n              coordinates:\n              - -2.960847\n              - 53.430828\n            properties:\n              name: \"Anfield\"\n              '@ns:com:here:xyz':\n                createdAt: 1517504700726\n                updatedAt: 1517504700726\n                tags:\n                - \"football\"\n                - \"stadium\"\n              amenity: \"Football Stadium\"\n              capacity: 54074\n              description: \"Home of Liverpool Football Club\"\n    FeatureCollectionIterable:\n      allOf:\n      - $ref: \"#/components/schemas/FeatureCollection\"\n      - type: \"object\"\n        properties:\n          handle:\n            type: \"string\"\n            description: \"The handle of the next batch.\"\n          nextPageToken:\n            type: \"string\"\n            description: \"The nextPageToken of the next batch.\"\n        example:\n          type: \"FeatureCollection\"\n          handle: 1000\n          nextPageToken: 1000\n          features:\n          - type: \"Feature\"\n            id: \"BfiimUxHjj\"\n            geometry:\n              type: \"Point\"\n              coordinates:\n              - -2.960847\n              - 53.430828\n            properties:\n              name: \"Anfield\"\n              '@ns:com:here:xyz':\n                createdAt: 1517504700726\n                updatedAt: 1517504700726\n                tags:\n                - \"football\"\n                - \"stadium\"\n              amenity: \"Football Stadium\"\n              capacity: 54074\n              description: \"Home of Liverpool Football Club\"\n    FeatureCollectionModification:\n      allOf:\n      - $ref: \"#/components/schemas/FeatureCollection\"\n      - type: \"object\"\n        properties:\n          inserted:\n            type: \"array\"\n            description: \"List of inserted feature IDs.\"\n            items:\n              type: \"string\"\n          updated:\n            type: \"array\"\n            description: \"List of updated features IDs.\"\n            items:\n              type: \"string\"\n          deleted:\n            type: \"array\"\n            description: \"List of deleted features IDs.\"\n            items:\n              type: \"string\"\n        example:\n          type: \"FeatureCollection\"\n          etag: \"b9be03f253c53c23\"\n          inserted:\n          - \"BfiimUxHjj\"\n          updated:\n          - \"cuiImUxOjj\"\n          features:\n          - type: \"Feature\"\n            id: \"BfiimUxHjj\"\n            geometry:\n              type: \"Point\"\n              coordinates:\n              - -2.960847\n              - 53.430828\n            properties:\n              name: \"Anfield\"\n              '@ns:com:here:xyz':\n                createdAt: 1517504700726\n                updatedAt: 1517504700726\n                space: \"0FzlE2wX\"\n                tags:\n                - \"football\"\n                - \"stadium\"\n              amenity: \"Football Stadium\"\n              capacity: 54074\n              description: \"Home of Liverpool Football Club\"\n    GeoJSON:\n      type: \"object\"\n      description: \"The base type for all possible GeoJSON objects.\"\n      required:\n      - \"type\"\n      properties:\n        type:\n          type: \"string\"\n        bbox:\n          type: \"array\"\n          description: \"Describes the coordinate range of the GeoJSON object.\"\n          items:\n            type: \"number\"\n      discriminator:\n        propertyName: \"type\"\n        mapping:\n          Feature: \"#/components/schemas/Feature\"\n          FeatureCollection: \"#/components/schemas/FeatureCollection\"\n          Geometry: \"#/components/schemas/Geometry\"\n    Geometry:\n      allOf:\n      - $ref: \"#/components/schemas/GeoJSON\"\n      - type: \"object\"\n        description: \"A Geometry object represents points, curves, and surfaces in\\\n          \\ coordinate layer.\"\n        discriminator:\n          propertyName: \"type\"\n          mapping:\n            MultiPoint: \"#/components/schemas/MultiPoint\"\n            MultiLineString: \"#/components/schemas/MultiLineString\"\n            LineString: \"#/components/schemas/LineString\"\n            MultiPolygon: \"#/components/schemas/MultiPolygon\"\n            Point: \"#/components/schemas/Point\"\n            Polygon: \"#/components/schemas/Polygon\"\n    HistoryStatisticsResponse:\n      description: \"The response returned to when counting features in a history.\"\n      properties:\n        type:\n          type: \"string\"\n        count:\n          type: \"object\"\n          readOnly: true\n          properties:\n            value:\n              type: \"integer\"\n              description: \"The amount of features being in the history.\"\n              format: \"int64\"\n              minimum: 0\n            estimated:\n              $ref: \"#/components/schemas/Estimated\"\n        byteSize:\n          deprecated: true\n          type: \"object\"\n          readOnly: true\n          properties:\n            value:\n              type: \"integer\"\n              description: \"The amount of bytes that are allocated in the storage\\\n                \\ for this history.\"\n              format: \"int64\"\n              minimum: 0\n            estimated:\n              $ref: \"#/components/schemas/Estimated\"\n        dataSize:\n          type: \"object\"\n          readOnly: true\n          properties:\n            value:\n              type: \"integer\"\n              description: \"The amount of bytes that are allocated in the storage\\\n                \\ for this history.\"\n              format: \"int64\"\n              minimum: 0\n            estimated:\n              $ref: \"#/components/schemas/Estimated\"\n        maxVersion:\n          type: \"object\"\n          readOnly: true\n          properties:\n            value:\n              type: \"integer\"\n              description: \"The last version which got written into the history.\"\n              format: \"int64\"\n              minimum: 0\n            estimated:\n              $ref: \"#/components/schemas/Estimated\"\n      example:\n        type: \"HistoryStatisticsResponse\"\n        count:\n          value: 29208\n          estimated: true\n        byteSize:\n          value: 108364\n          estimated: true\n        dataSize:\n          value: 108364\n          estimated: true\n        maxVersion:\n          value: 112\n          estimated: true\n    LineString:\n      allOf:\n      - $ref: \"#/components/schemas/Geometry\"\n      - type: \"object\"\n        description: \"A LineString geometry.\"\n        properties:\n          coordinates:\n            type: \"array\"\n            items:\n              type: \"array\"\n              items:\n                type: \"number\"\n              maxItems: 3\n              minItems: 2\n            minItems: 2\n    MultiLineString:\n      allOf:\n      - $ref: \"#/components/schemas/Geometry\"\n      - type: \"object\"\n        description: \"A MultiLineString geometry.\"\n        properties:\n          coordinates:\n            type: \"array\"\n            items:\n              type: \"array\"\n              items:\n                type: \"array\"\n                items:\n                  type: \"number\"\n                maxItems: 3\n                minItems: 2\n              minItems: 2\n    MultiPoint:\n      allOf:\n      - $ref: \"#/components/schemas/Geometry\"\n      - type: \"object\"\n        description: \"A MultiPoint geometry.\"\n        properties:\n          coordinates:\n            type: \"array\"\n            items:\n              type: \"array\"\n              items:\n                type: \"number\"\n              maxItems: 3\n              minItems: 2\n    MultiPolygon:\n      allOf:\n      - $ref: \"#/components/schemas/Geometry\"\n      - type: \"object\"\n        description: \"A MultiPolygon geometry.\"\n        properties:\n          coordinates:\n            type: \"array\"\n            items:\n              type: \"array\"\n              items:\n                type: \"array\"\n                items:\n                  type: \"array\"\n                  items:\n                    type: \"number\"\n                  maxItems: 3\n                  minItems: 2\n                minItems: 4\n    Namespace:\n      type: \"object\"\n      description: \"The XYZ namespace.\"\n      properties:\n        space:\n          description: \"The space ID.\"\n          example: \"0FzlE2wX\"\n          readOnly: true\n          type: \"string\"\n        tags:\n          description: \"The tags for this objects.\"\n          items:\n            type: \"string\"\n          type: \"array\"\n        createdAt:\n          description: \"The UNIX Epoch time of when this feature has been created\\\n            \\ (in milliseconds since 01.01.1970).\"\n          example: 1234567890123\n          format: \"int64\"\n          readOnly: true\n          type: \"integer\"\n        updatedAt:\n          description: \"The UNIX Epoch time of when this feature has been last updated\\\n            \\ (in milliseconds since 01.01.1970).\"\n          example: 1234567890123\n          format: \"int64\"\n          readOnly: true\n          type: \"integer\"\n    Point:\n      allOf:\n      - $ref: \"#/components/schemas/Geometry\"\n      - type: \"object\"\n        description: \"A Point geometry.\"\n        properties:\n          coordinates:\n            type: \"array\"\n            items:\n              type: \"number\"\n            maxItems: 3\n            minItems: 2\n    Polygon:\n      allOf:\n      - $ref: \"#/components/schemas/Geometry\"\n      - type: \"object\"\n        description: \"A Polygon geometry.\"\n        properties:\n          coordinates:\n            type: \"array\"\n            items:\n              type: \"array\"\n              items:\n                type: \"array\"\n                items:\n                  type: \"number\"\n                maxItems: 3\n                minItems: 2\n              minItems: 4\n    Space:\n      type: \"object\"\n      description: \"A data holder for features which points to a persistent storage.\"\n      properties:\n        id:\n          description: \"The unique identifier of the space which consists of an (optional)\\\n            \\ prefix and a base part (prefix-base).\"\n          example: \"0FzlE2wX\"\n          type: \"string\"\n        title:\n          description: \"The space title.\"\n          example: \"My Demo Space\"\n          type: \"string\"\n        description:\n          description: \"The space description in markdown format.\"\n          example: \"Description as markdown.\"\n          type: \"string\"\n        owner:\n          description: \"The identifier of the owner of this space, most likely the\\\n            \\ HERE account ID.\"\n          type: \"string\"\n        shared:\n          description: \"If set to __true__, every authenticated user can read the\\\n            \\ features in the space.\\nWhen publishing a space it's also recommended\\\n            \\ to set the fields __copyright__ \u0026 __license__.\\n\"\n          type: \"boolean\"\n        readOnly:\n          description: \"A flag indicating whether the space allows write operations\\\n            \\ (false) or not (true).\"\n          type: \"boolean\"\n        copyright:\n          items:\n            $ref: \"#/components/schemas/Copyright\"\n          type: \"array\"\n        license:\n          description: \"Information about the license bound to the data within the\\\n            \\ space.\"\n          enum:\n          - \"AFL-3.0\"\n          - \"Apache-2.0\"\n          - \"Artistic-2.0\"\n          - \"BSL-1.0\"\n          - \"BSD-2-Clause\"\n          - \"BSD-3-Clause\"\n          - \"BSD-3-Clause-Clear\"\n          - \"CC0-1.0\"\n          - \"CC-BY-4.0\"\n          - \"CC-BY-SA-4.0\"\n          - \"WTFPL\"\n          - \"ECL-1.0\"\n          - \"ECL-2.0\"\n          - \"EUPL-1.1\"\n          - \"AGPL-3.0-only\"\n          - \"GPL-2.0-only\"\n          - \"GPL-3.0-only\"\n          - \"LGPL-2.1-only\"\n          - \"LGPL-3.0-only\"\n          - \"ISC\"\n          - \"LPPL-1.3c\"\n          - \"MS-PL\"\n          - \"MIT\"\n          - \"MPL-2.0\"\n          - \"OSL-3.0\"\n          - \"PostgreSQL\"\n          - \"OFL-1.1\"\n          - \"NCSA\"\n          - \"Unlicense\"\n          - \"Zlib\"\n          - \"ODbL-1.0\"\n          type: \"string\"\n        packages:\n          description: \"List of packages that this space belongs to.\"\n          items:\n            type: \"string\"\n          type: \"array\"\n        cid:\n          description: \"An additional identifier specifying a context of the owner.\"\n          type: \"string\"\n        createdAt:\n          default: 1538352000000\n          description: \"The UNIX Epoch time of when this space has been created (in\\\n            \\ milliseconds since 01.01.1970). Defaults to October 1st, 2018.\"\n          example: 1538352000000\n          format: \"int64\"\n          readOnly: true\n          type: \"integer\"\n        updatedAt:\n          default: 1538352000000\n          description: \"The UNIX Epoch time of when this space has been last updated\\\n            \\ (in milliseconds since 01.01.1970). Defaults to October 1st, 2018.\"\n          example: 1538352000000\n          format: \"int64\"\n          readOnly: true\n          type: \"integer\"\n        contentUpdatedAt:\n          default: 1538352000000\n          description: \"The UNIX Epoch time of when the content of this space has\\\n            \\ been last updated (in milliseconds since 01.01.1970). Defaults to October\\\n            \\ 1st, 2018.\"\n          example: 1538352000000\n          format: \"int64\"\n          readOnly: true\n          type: \"integer\"\n        searchableProperties:\n          $ref: \"#/components/schemas/SearchableProperties\"\n        rights:\n          description: \"The list of rights the current user has when accessing the\\\n            \\ space. This property is only shown when listing spaces with the option\\\n            \\ _includeRights=true_\"\n          type: \"array\"\n          items:\n            type: \"string\"\n          readOnly: true\n      example:\n        title: \"My Demo Space\"\n        description: \"Description as markdown\"\n    SearchableProperties:\n      description: \"A map defined by the user that indicates, which of the feature's\\\n        \\ properties to be searchable. The key is the name of the property (nested\\\n        \\ properties can be specified using the dot-notation e.g.: some.nested.property)\\\n        \\ and the value is a boolean telling whether the property should be searchable\\\n        \\ or not. Setting the value to `false` the property won't be searchable at\\\n        \\ all. (Even if the  property was chosen to be searchable by the automated\\\n        \\ property-search algorithm before). Optional it is possible to define the\\\n        \\ datatype (object,array,string,number,boolean) of the property eg.: some.nested.property::array.\\\n        \\ If the datatype is not given, an attempt is made to determine it automatically.\"\n      type: \"object\"\n      additionalProperties:\n        type: \"boolean\"\n    Statistics:\n      type: \"object\"\n      description: \"The statistical information about the space.\"\n      properties:\n        count:\n          type: \"object\"\n          description: \"The amount of features stored in the space.\"\n          properties:\n            value:\n              type: \"integer\"\n            estimated:\n              $ref: \"#/components/schemas/Estimated\"\n        byteSize:\n          deprecated: true\n          type: \"object\"\n          description: \"The amount of bytes that are allocated in the storage for\\\n            \\ this space.\"\n          properties:\n            value:\n              type: \"integer\"\n            estimated:\n              $ref: \"#/components/schemas/Estimated\"\n        dataSize:\n          type: \"object\"\n          description: \"The amount of bytes that are allocated in the storage for\\\n            \\ this space.\"\n          properties:\n            value:\n              type: \"integer\"\n            estimated:\n              $ref: \"#/components/schemas/Estimated\"\n        bbox:\n          type: \"object\"\n          description: \"The most outer bounding box around all features being within\\\n            \\ the space.\"\n          properties:\n            value:\n              type: \"array\"\n              items:\n                type: \"number\"\n            estimated:\n              $ref: \"#/components/schemas/Estimated\"\n        geometryTypes:\n          type: \"object\"\n          description: \"The types of geometries part of the space.\"\n          properties:\n            value:\n              type: \"array\"\n              items:\n                type: \"string\"\n            estimated:\n              $ref: \"#/components/schemas/Estimated\"\n        properties:\n          type: \"object\"\n          description: \"The properties of the features of the space.\"\n          properties:\n            value:\n              type: \"array\"\n              items:\n                type: \"object\"\n                properties:\n                  key:\n                    type: \"string\"\n                    description: \"Property key of the feature.\"\n                    example: \"Route\"\n                  count:\n                    type: \"number\"\n                    description: \"Count of the features with the property.\"\n                    example: 1202\n                  searchable:\n                    type: \"boolean\"\n                    description: \"Specifies if the property is searchable.\"\n                    example: false\n            estimated:\n              $ref: \"#/components/schemas/Estimated\"\n            searchable:\n              type: \"string\"\n              description: \"Specifies the scope of searchability of the properties.\\\n                \\ One of NONE, PARTIAL, ALL.\"\n              example: \"PARTIAL\"\n        tags:\n          type: \"object\"\n          description: \"Tags of the space with their count.\"\n          properties:\n            value:\n              type: \"array\"\n              items:\n                type: \"object\"\n                properties:\n                  key:\n                    type: \"string\"\n                    description: \"Tag name\"\n                  count:\n                    type: \"number\"\n                    description: \"How many features with this tag\"\n            estimated:\n              $ref: \"#/components/schemas/Estimated\"\n        searchable:\n          type: \"string\"\n          description: \"Specifies the scope of searchability of the properties. One\\\n            \\ of NONE, PARTIAL, ALL.\"\n          example: \"PARTIAL\"\n      example:\n        type: \"StatisticsResponse\"\n        count:\n          value: 29208\n          estimated: true\n        byteSize:\n          value: 108364\n          estimated: true\n        dataSize:\n          value: 108364\n          estimated: true\n        bbox:\n          value:\n          - -10\n          - -10\n          - 10\n          - 10\n          estimated: true\n        geometryTypes:\n          value:\n          - \"Point\"\n          estimated: true\n        properties:\n          value:\n          - key: \"Route\"\n            count: 29208\n            searchable: true\n          - key: \"Route Type\"\n            count: 29208\n            searchable: true\n          estimated: true\n          searchable: \"PARTIAL\"\n        tags:\n          value:\n          - key: \"PuneBusStop\"\n            count: 29208\n        etag: \"072d3ec0f881b4e7\"\n",
			"canonicalURL": "/github.com/heremaps/xyz-documentation@4e36cea9d614799b20d74fa15e3e23b18d084bed/-/blob/docs/api/openapi/public3.yml",
			"externalURLs": [
				{
					"url": "https://github.com/heremaps/xyz-documentation/blob/4e36cea9d614799b20d74fa15e3e23b18d084bed/docs/api/openapi/public3.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/spaces\": post: responses: 413: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"object with additionalProperties",
		"unsupported content types"
	]
}