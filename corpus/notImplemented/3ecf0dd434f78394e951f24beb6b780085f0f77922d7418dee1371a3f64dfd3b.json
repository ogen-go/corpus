{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "domains-v1beta1.yaml",
			"size": 0,
			"path": "providers/src/googleapis.com/v0.1.2/services/domains-v1beta1.yaml",
			"byteSize": 93992,
			"content": "components:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n        - '1'\n        - '2'\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n        - json\n        - media\n        - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you\n        with API access, quota, and reports. Required unless you provide an OAuth\n        2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications.\n        Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    AuditConfig:\n      description: 'Specifies the audit configuration for a service. The configuration\n        determines which permission types are logged, and what identities, if any,\n        are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.\n        If there are AuditConfigs for both `allServices` and a specific service, the\n        union of the two AuditConfigs is used for that service: the log_types specified\n        in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig\n        are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\":\n        [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\",\n        \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\"\n        }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\",\n        \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\",\n        \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice,\n        this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also\n        exempts jose@example.com from DATA_READ logging, and aliya@example.com from\n        DATA_WRITE logging.'\n      properties:\n        auditLogConfigs:\n          description: The configuration for logging of each type of permission.\n          items:\n            $ref: '#/components/schemas/AuditLogConfig'\n          type: array\n        service:\n          description: Specifies a service that will be enabled for audit logging.\n            For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices`\n            is a special value that covers all services.\n          type: string\n      type: object\n    AuditLogConfig:\n      description: 'Provides the configuration for logging a type of permissions.\n        Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\":\n        [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables\n        ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com\n        from DATA_READ logging.'\n      properties:\n        exemptedMembers:\n          description: Specifies the identities that do not cause logging for this\n            type of permission. Follows the same format of Binding.members.\n          items:\n            type: string\n          type: array\n        logType:\n          description: The log type that this config enables.\n          enum:\n          - LOG_TYPE_UNSPECIFIED\n          - ADMIN_READ\n          - DATA_WRITE\n          - DATA_READ\n          type: string\n      type: object\n    AuthorizationCode:\n      description: Defines an authorization code.\n      properties:\n        code:\n          description: The Authorization Code in ASCII. It can be used to transfer\n            the domain to or from another registrar.\n          type: string\n      type: object\n    Binding:\n      description: Associates `members`, or principals, with a `role`.\n      properties:\n        condition:\n          $ref: '#/components/schemas/Expr'\n          description: The condition that is associated with this binding. If the\n            condition evaluates to `true`, then this binding applies to the current\n            request. If the condition evaluates to `false`, then this binding does\n            not apply to the current request. However, a different role binding might\n            grant the same role to one or more of the principals in this binding.\n            To learn which resources support conditions in their IAM policies, see\n            the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n        members:\n          description: 'Specifies the principals requesting access for a Cloud Platform\n            resource. `members` can have the following values: * `allUsers`: A special\n            identifier that represents anyone who is on the internet; with or without\n            a Google account. * `allAuthenticatedUsers`: A special identifier that\n            represents anyone who is authenticated with a Google account or a service\n            account. * `user:{emailid}`: An email address that represents a specific\n            Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`:\n            An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`.\n            * `group:{emailid}`: An email address that represents a Google group.\n            For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`:\n            An email address (plus unique identifier) representing a user that has\n            been recently deleted. For example, `alice@example.com?uid=123456789012345678901`.\n            If the user is recovered, this value reverts to `user:{emailid}` and the\n            recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`:\n            An email address (plus unique identifier) representing a service account\n            that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n            If the service account is undeleted, this value reverts to `serviceAccount:{emailid}`\n            and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:\n            An email address (plus unique identifier) representing a Google group\n            that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`.\n            If the group is recovered, this value reverts to `group:{emailid}` and\n            the recovered group retains the role in the binding. * `domain:{domain}`:\n            The G Suite domain (primary) that represents all the users of that domain.\n            For example, `google.com` or `example.com`. '\n          items:\n            type: string\n          type: array\n        role:\n          description: Role that is assigned to the list of `members`, or principals.\n            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.\n          type: string\n      type: object\n    ConfigureContactSettingsRequest:\n      description: Request for the `ConfigureContactSettings` method.\n      properties:\n        contactNotices:\n          description: The list of contact notices that the caller acknowledges. The\n            notices needed here depend on the values specified in `contact_settings`.\n          items:\n            enum:\n            - CONTACT_NOTICE_UNSPECIFIED\n            - PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT\n            type: string\n          type: array\n        contactSettings:\n          $ref: '#/components/schemas/ContactSettings'\n          description: Fields of the `ContactSettings` to update.\n        updateMask:\n          description: Required. The field mask describing which fields to update\n            as a comma-separated list. For example, if only the registrant contact\n            is being updated, the `update_mask` would be `\"registrant_contact\"`.\n          format: google-fieldmask\n          type: string\n        validateOnly:\n          description: Validate the request without actually updating the contact\n            settings.\n          type: boolean\n      type: object\n    ConfigureDnsSettingsRequest:\n      description: Request for the `ConfigureDnsSettings` method.\n      properties:\n        dnsSettings:\n          $ref: '#/components/schemas/DnsSettings'\n          description: Fields of the `DnsSettings` to update.\n        updateMask:\n          description: Required. The field mask describing which fields to update\n            as a comma-separated list. For example, if only the name servers are being\n            updated for an existing Custom DNS configuration, the `update_mask` would\n            be `\"custom_dns.name_servers\"`. When changing the DNS provider from one\n            type to another, pass the new provider's field name as part of the field\n            mask. For example, when changing from a Google Domains DNS configuration\n            to a Custom DNS configuration, the `update_mask` would be `\"custom_dns\"`.\n            //\n          format: google-fieldmask\n          type: string\n        validateOnly:\n          description: Validate the request without actually updating the DNS settings.\n          type: boolean\n      type: object\n    ConfigureManagementSettingsRequest:\n      description: Request for the `ConfigureManagementSettings` method.\n      properties:\n        managementSettings:\n          $ref: '#/components/schemas/ManagementSettings'\n          description: Fields of the `ManagementSettings` to update.\n        updateMask:\n          description: Required. The field mask describing which fields to update\n            as a comma-separated list. For example, if only the transfer lock is being\n            updated, the `update_mask` would be `\"transfer_lock_state\"`.\n          format: google-fieldmask\n          type: string\n      type: object\n    Contact:\n      description: Details required for a contact associated with a `Registration`.\n      properties:\n        email:\n          description: Required. Email address of the contact.\n          type: string\n        faxNumber:\n          description: Fax number of the contact in international format. For example,\n            `\"+1-800-555-0123\"`.\n          type: string\n        phoneNumber:\n          description: Required. Phone number of the contact in international format.\n            For example, `\"+1-800-555-0123\"`.\n          type: string\n        postalAddress:\n          $ref: '#/components/schemas/PostalAddress'\n          description: Required. Postal address of the contact.\n      type: object\n    ContactSettings:\n      description: Defines the contact information associated with a `Registration`.\n        [ICANN](https://icann.org/) requires all domain names to have associated contact\n        information. The `registrant_contact` is considered the domain's legal owner,\n        and often the other contacts are identical.\n      properties:\n        adminContact:\n          $ref: '#/components/schemas/Contact'\n          description: Required. The administrative contact for the `Registration`.\n        privacy:\n          description: Required. Privacy setting for the contacts associated with\n            the `Registration`.\n          enum:\n          - CONTACT_PRIVACY_UNSPECIFIED\n          - PUBLIC_CONTACT_DATA\n          - PRIVATE_CONTACT_DATA\n          - REDACTED_CONTACT_DATA\n          type: string\n        registrantContact:\n          $ref: '#/components/schemas/Contact'\n          description: 'Required. The registrant contact for the `Registration`. *Caution:\n            Anyone with access to this email address, phone number, and/or postal\n            address can take control of the domain.* *Warning: For new `Registration`s,\n            the registrant will receive an email confirmation that they must complete\n            within 15 days to avoid domain suspension.*'\n        technicalContact:\n          $ref: '#/components/schemas/Contact'\n          description: Required. The technical contact for the `Registration`.\n      type: object\n    CustomDns:\n      description: Configuration for an arbitrary DNS provider.\n      properties:\n        dsRecords:\n          description: The list of DS records for this domain, which are used to enable\n            DNSSEC. The domain's DNS provider can provide the values to set here.\n            If this field is empty, DNSSEC is disabled.\n          items:\n            $ref: '#/components/schemas/DsRecord'\n          type: array\n        nameServers:\n          description: Required. A list of name servers that store the DNS zone for\n            this domain. Each name server is a domain name, with Unicode domain names\n            expressed in Punycode format.\n          items:\n            type: string\n          type: array\n      type: object\n    DnsSettings:\n      description: Defines the DNS configuration of a `Registration`, including name\n        servers, DNSSEC, and glue records.\n      properties:\n        customDns:\n          $ref: '#/components/schemas/CustomDns'\n          description: An arbitrary DNS provider identified by its name servers.\n        glueRecords:\n          description: The list of glue records for this `Registration`. Commonly\n            empty.\n          items:\n            $ref: '#/components/schemas/GlueRecord'\n          type: array\n        googleDomainsDns:\n          $ref: '#/components/schemas/GoogleDomainsDns'\n          description: The free DNS zone provided by [Google Domains](https://domains.google/).\n      type: object\n    DsRecord:\n      description: Defines a Delegation Signer (DS) record, which is needed to enable\n        DNSSEC for a domain. It contains a digest (hash) of a DNSKEY record that must\n        be present in the domain's DNS zone.\n      properties:\n        algorithm:\n          description: The algorithm used to generate the referenced DNSKEY.\n          enum:\n          - ALGORITHM_UNSPECIFIED\n          - RSAMD5\n          - DH\n          - DSA\n          - ECC\n          - RSASHA1\n          - DSANSEC3SHA1\n          - RSASHA1NSEC3SHA1\n          - RSASHA256\n          - RSASHA512\n          - ECCGOST\n          - ECDSAP256SHA256\n          - ECDSAP384SHA384\n          - ED25519\n          - ED448\n          - INDIRECT\n          - PRIVATEDNS\n          - PRIVATEOID\n          type: string\n        digest:\n          description: The digest generated from the referenced DNSKEY.\n          type: string\n        digestType:\n          description: The hash function used to generate the digest of the referenced\n            DNSKEY.\n          enum:\n          - DIGEST_TYPE_UNSPECIFIED\n          - SHA1\n          - SHA256\n          - GOST3411\n          - SHA384\n          type: string\n        keyTag:\n          description: The key tag of the record. Must be set in range 0 -- 65535.\n          format: int32\n          type: integer\n      type: object\n    ExportRegistrationRequest:\n      description: Request for the `ExportRegistration` method.\n      properties: {}\n      type: object\n    Expr:\n      description: 'Represents a textual expression in the Common Expression Language\n        (CEL) syntax. CEL is a C-like expression language. The syntax and semantics\n        of CEL are documented at https://github.com/google/cel-spec. Example (Comparison):\n        title: \"Summary size limit\" description: \"Determines if a summary is less\n        than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality):\n        title: \"Requestor is owner\" description: \"Determines if requestor is the document\n        owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic):\n        title: \"Public documents\" description: \"Determine whether the document should\n        be publicly visible\" expression: \"document.type != ''private'' \u0026\u0026 document.type\n        != ''internal''\" Example (Data Manipulation): title: \"Notification string\"\n        description: \"Create a notification string with a timestamp.\" expression:\n        \"''New message received at '' + string(document.create_time)\" The exact variables\n        and functions that may be referenced within an expression are determined by\n        the service that evaluates it. See the service documentation for additional\n        information.'\n      properties:\n        description:\n          description: Optional. Description of the expression. This is a longer text\n            which describes the expression, e.g. when hovered over it in a UI.\n          type: string\n        expression:\n          description: Textual representation of an expression in Common Expression\n            Language syntax.\n          type: string\n        location:\n          description: Optional. String indicating the location of the expression\n            for error reporting, e.g. a file name and a position in the file.\n          type: string\n        title:\n          description: Optional. Title for the expression, i.e. a short string describing\n            its purpose. This can be used e.g. in UIs which allow to enter the expression.\n          type: string\n      type: object\n    GlueRecord:\n      description: Defines a host on your domain that is a DNS name server for your\n        domain and/or other domains. Glue records are a way of making the IP address\n        of a name server known, even when it serves DNS queries for its parent domain.\n        For example, when `ns.example.com` is a name server for `example.com`, the\n        host `ns.example.com` must have a glue record to break the circular DNS reference.\n      properties:\n        hostName:\n          description: Required. Domain name of the host in Punycode format.\n          type: string\n        ipv4Addresses:\n          description: List of IPv4 addresses corresponding to this host in the standard\n            decimal format (e.g. `198.51.100.1`). At least one of `ipv4_address` and\n            `ipv6_address` must be set.\n          items:\n            type: string\n          type: array\n        ipv6Addresses:\n          description: List of IPv6 addresses corresponding to this host in the standard\n            hexadecimal format (e.g. `2001:db8::`). At least one of `ipv4_address`\n            and `ipv6_address` must be set.\n          items:\n            type: string\n          type: array\n      type: object\n    GoogleDomainsDns:\n      description: Configuration for using the free DNS zone provided by Google Domains\n        as a `Registration`'s `dns_provider`. You cannot configure the DNS zone itself\n        using the API. To configure the DNS zone, go to [Google Domains](https://domains.google/).\n      properties:\n        dsRecords:\n          description: Output only. The list of DS records published for this domain.\n            The list is automatically populated when `ds_state` is `DS_RECORDS_PUBLISHED`,\n            otherwise it remains empty.\n          items:\n            $ref: '#/components/schemas/DsRecord'\n          readOnly: true\n          type: array\n        dsState:\n          description: Required. The state of DS records for this domain. Used to\n            enable or disable automatic DNSSEC.\n          enum:\n          - DS_STATE_UNSPECIFIED\n          - DS_RECORDS_UNPUBLISHED\n          - DS_RECORDS_PUBLISHED\n          type: string\n        nameServers:\n          description: Output only. A list of name servers that store the DNS zone\n            for this domain. Each name server is a domain name, with Unicode domain\n            names expressed in Punycode format. This field is automatically populated\n            with the name servers assigned to the Google Domains DNS zone.\n          items:\n            type: string\n          readOnly: true\n          type: array\n      type: object\n    ListLocationsResponse:\n      description: The response message for Locations.ListLocations.\n      properties:\n        locations:\n          description: A list of locations that matches the specified filter in the\n            request.\n          items:\n            $ref: '#/components/schemas/Location'\n          type: array\n        nextPageToken:\n          description: The standard List next-page token.\n          type: string\n      type: object\n    ListOperationsResponse:\n      description: The response message for Operations.ListOperations.\n      properties:\n        nextPageToken:\n          description: The standard List next-page token.\n          type: string\n        operations:\n          description: A list of operations that matches the specified filter in the\n            request.\n          items:\n            $ref: '#/components/schemas/Operation'\n          type: array\n      type: object\n    ListRegistrationsResponse:\n      description: Response for the `ListRegistrations` method.\n      properties:\n        nextPageToken:\n          description: When present, there are more results to retrieve. Set `page_token`\n            to this value on a subsequent call to get the next page of results.\n          type: string\n        registrations:\n          description: A list of `Registration`s.\n          items:\n            $ref: '#/components/schemas/Registration'\n          type: array\n      type: object\n    Location:\n      description: A resource that represents Google Cloud Platform location.\n      properties:\n        displayName:\n          description: The friendly name for this location, typically a nearby city\n            name. For example, \"Tokyo\".\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: 'Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\":\n            \"us-east1\"}'\n          type: object\n        locationId:\n          description: 'The canonical id for this location. For example: `\"us-east1\"`.'\n          type: string\n        metadata:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type\n              URL.\n          description: Service-specific metadata. For example the available capacity\n            at the given location.\n          type: object\n        name:\n          description: 'Resource name for the location, which may vary between implementations.\n            For example: `\"projects/example-project/locations/us-east1\"`'\n          type: string\n      type: object\n    ManagementSettings:\n      description: Defines renewal, billing, and transfer settings for a `Registration`.\n      properties:\n        renewalMethod:\n          description: Output only. The renewal method for this `Registration`.\n          enum:\n          - RENEWAL_METHOD_UNSPECIFIED\n          - AUTOMATIC_RENEWAL\n          - MANUAL_RENEWAL\n          readOnly: true\n          type: string\n        transferLockState:\n          description: Controls whether the domain can be transferred to another registrar.\n          enum:\n          - TRANSFER_LOCK_STATE_UNSPECIFIED\n          - UNLOCKED\n          - LOCKED\n          type: string\n      type: object\n    Money:\n      description: Represents an amount of money with its currency type.\n      properties:\n        currencyCode:\n          description: The three-letter currency code defined in ISO 4217.\n          type: string\n        nanos:\n          description: Number of nano (10^-9) units of the amount. The value must\n            be between -999,999,999 and +999,999,999 inclusive. If `units` is positive,\n            `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive,\n            zero, or negative. If `units` is negative, `nanos` must be negative or\n            zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.\n          format: int32\n          type: integer\n        units:\n          description: The whole units of the amount. For example if `currencyCode`\n            is `\"USD\"`, then 1 unit is one US dollar.\n          format: int64\n          type: string\n      type: object\n    Operation:\n      description: This resource represents a long-running operation that is the result\n        of a network API call.\n      properties:\n        done:\n          description: If the value is `false`, it means the operation is still in\n            progress. If `true`, the operation is completed, and either `error` or\n            `response` is available.\n          type: boolean\n        error:\n          $ref: '#/components/schemas/Status'\n          description: The error result of the operation in case of failure or cancellation.\n        metadata:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type\n              URL.\n          description: Service-specific metadata associated with the operation. It\n            typically contains progress information and common metadata such as create\n            time. Some services might not provide such metadata. Any method that returns\n            a long-running operation should document the metadata type, if any.\n          type: object\n        name:\n          description: The server-assigned name, which is only unique within the same\n            service that originally returns it. If you use the default HTTP mapping,\n            the `name` should be a resource name ending with `operations/{unique_id}`.\n          type: string\n        response:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type\n              URL.\n          description: The normal response of the operation in case of success. If\n            the original method returns no data on success, such as `Delete`, the\n            response is `google.protobuf.Empty`. If the original method is standard\n            `Get`/`Create`/`Update`, the response should be the resource. For other\n            methods, the response should have the type `XxxResponse`, where `Xxx`\n            is the original method name. For example, if the original method name\n            is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.\n          type: object\n      type: object\n    OperationMetadata:\n      description: Represents the metadata of the long-running operation. Output only.\n      properties:\n        apiVersion:\n          description: API version used to start the operation.\n          type: string\n        createTime:\n          description: The time the operation was created.\n          format: google-datetime\n          type: string\n        endTime:\n          description: The time the operation finished running.\n          format: google-datetime\n          type: string\n        statusDetail:\n          description: Human-readable status of the operation, if any.\n          type: string\n        target:\n          description: Server-defined resource path for the target of the operation.\n          type: string\n        verb:\n          description: Name of the verb executed by the operation.\n          type: string\n      type: object\n    Policy:\n      description: 'An Identity and Access Management (IAM) policy, which specifies\n        access controls for Google Cloud resources. A `Policy` is a collection of\n        `bindings`. A `binding` binds one or more `members`, or principals, to a single\n        `role`. Principals can be user accounts, service accounts, Google groups,\n        and domains (such as G Suite). A `role` is a named list of permissions; each\n        `role` can be an IAM predefined role or a user-created custom role. For some\n        types of Google Cloud resources, a `binding` can also specify a `condition`,\n        which is a logical expression that allows access to a resource only if the\n        expression evaluates to `true`. A condition can add constraints based on attributes\n        of the request, the resource, or both. To learn which resources support conditions\n        in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n        **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\",\n        \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\",\n        \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\":\n        \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\"\n        ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant\n        access after Sep 2020\", \"expression\": \"request.time \u003c timestamp(''2020-10-01T00:00:00.000Z'')\",\n        } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings:\n        - members: - user:mike@example.com - group:admins@example.com - domain:google.com\n        - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin\n        - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer\n        condition: title: expirable access description: Does not grant access after\n        Sep 2020 expression: request.time \u003c timestamp(''2020-10-01T00:00:00.000Z'')\n        etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see\n        the [IAM documentation](https://cloud.google.com/iam/docs/).'\n      properties:\n        auditConfigs:\n          description: Specifies cloud audit logging configuration for this policy.\n          items:\n            $ref: '#/components/schemas/AuditConfig'\n          type: array\n        bindings:\n          description: Associates a list of `members`, or principals, with a `role`.\n            Optionally, may specify a `condition` that determines how and when the\n            `bindings` are applied. Each of the `bindings` must contain at least one\n            principal. The `bindings` in a `Policy` can refer to up to 1,500 principals;\n            up to 250 of these principals can be Google groups. Each occurrence of\n            a principal counts towards these limits. For example, if the `bindings`\n            grant 50 different roles to `user:alice@example.com`, and not to any other\n            principal, then you can add another 1,450 principals to the `bindings`\n            in the `Policy`.\n          items:\n            $ref: '#/components/schemas/Binding'\n          type: array\n        etag:\n          description: '`etag` is used for optimistic concurrency control as a way\n            to help prevent simultaneous updates of a policy from overwriting each\n            other. It is strongly suggested that systems make use of the `etag` in\n            the read-modify-write cycle to perform policy updates in order to avoid\n            race conditions: An `etag` is returned in the response to `getIamPolicy`,\n            and systems are expected to put that etag in the request to `setIamPolicy`\n            to ensure that their change will be applied to the same version of the\n            policy. **Important:** If you use IAM Conditions, you must include the\n            `etag` field whenever you call `setIamPolicy`. If you omit this field,\n            then IAM allows you to overwrite a version `3` policy with a version `1`\n            policy, and all of the conditions in the version `3` policy are lost.'\n          format: byte\n          type: string\n        version:\n          description: 'Specifies the format of the policy. Valid values are `0`,\n            `1`, and `3`. Requests that specify an invalid value are rejected. Any\n            operation that affects conditional role bindings must specify version\n            `3`. This requirement applies to the following operations: * Getting a\n            policy that includes a conditional role binding * Adding a conditional\n            role binding to a policy * Changing a conditional role binding in a policy\n            * Removing any role binding, with or without a condition, from a policy\n            that includes conditions **Important:** If you use IAM Conditions, you\n            must include the `etag` field whenever you call `setIamPolicy`. If you\n            omit this field, then IAM allows you to overwrite a version `3` policy\n            with a version `1` policy, and all of the conditions in the version `3`\n            policy are lost. If a policy does not include any conditions, operations\n            on that policy may specify any valid version or leave the field unset.\n            To learn which resources support conditions in their IAM policies, see\n            the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'\n          format: int32\n          type: integer\n      type: object\n    PostalAddress:\n      description: 'Represents a postal address, e.g. for postal delivery or payments\n        addresses. Given a postal address, a postal service can deliver items to a\n        premise, P.O. Box or similar. It is not intended to model geographical locations\n        (roads, towns, mountains). In typical usage an address would be created via\n        user input or from importing existing data, depending on the type of process.\n        Advice on address input / editing: - Use an i18n-ready address widget such\n        as https://github.com/google/libaddressinput) - Users should not be presented\n        with UI elements for input or editing of fields outside countries where that\n        field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478'\n      properties:\n        addressLines:\n          description: Unstructured address lines describing the lower levels of an\n            address. Because values in address_lines do not have type information\n            and may sometimes contain multiple values in a single field (e.g. \"Austin,\n            TX\"), it is important that the line order is clear. The order of address\n            lines should be \"envelope order\" for the country/region of the address.\n            In places where this can vary (e.g. Japan), address_language is used to\n            make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\"\n            or \"en\" for small-to-large). This way, the most specific line of an address\n            can be selected based on the language. The minimum permitted structural\n            representation of an address consists of a region_code with all remaining\n            information placed in the address_lines. It would be possible to format\n            such an address very approximately without geocoding, but no semantic\n            reasoning could be made about any of the address components until it was\n            at least partially resolved. Creating an address only containing a region_code\n            and address_lines, and then geocoding is the recommended way to handle\n            completely unstructured addresses (as opposed to guessing which parts\n            of the address should be localities or administrative areas).\n          items:\n            type: string\n          type: array\n        administrativeArea:\n          description: Optional. Highest administrative subdivision which is used\n            for postal addresses of a country or region. For example, this can be\n            a state, a province, an oblast, or a prefecture. Specifically, for Spain\n            this is the province and not the autonomous community (e.g. \"Barcelona\"\n            and not \"Catalonia\"). Many countries don't use an administrative area\n            in postal addresses. E.g. in Switzerland this should be left unpopulated.\n          type: string\n        languageCode:\n          description: 'Optional. BCP-47 language code of the contents of this address\n            (if known). This is often the UI language of the input form or is expected\n            to match one of the languages used in the address'' country/region, or\n            their transliterated equivalents. This can affect formatting in certain\n            countries, but is not critical to the correctness of the data and will\n            never affect any validation or other non-formatting related operations.\n            If this value is not known, it should be omitted (rather than specifying\n            a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\".'\n          type: string\n        locality:\n          description: 'Optional. Generally refers to the city/town portion of the\n            address. Examples: US city, IT comune, UK post town. In regions of the\n            world where localities are not well defined or do not fit into this structure\n            well, leave locality empty and use address_lines.'\n          type: string\n        organization:\n          description: Optional. The name of the organization at the address.\n          type: string\n        postalCode:\n          description: Optional. Postal code of the address. Not all countries use\n            or require postal codes to be present, but where they are used, they may\n            trigger additional validation with other parts of the address (e.g. state/zip\n            validation in the U.S.A.).\n          type: string\n        recipients:\n          description: Optional. The recipient at the address. This field may, under\n            certain circumstances, contain multiline information. For example, it\n            might contain \"care of\" information.\n          items:\n            type: string\n          type: array\n        regionCode:\n          description: 'Required. CLDR region code of the country/region of the address.\n            This is never inferred and it is up to the user to ensure the value is\n            correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html\n            for details. Example: \"CH\" for Switzerland.'\n          type: string\n        revision:\n          description: The schema revision of the `PostalAddress`. This must be set\n            to 0, which is the latest revision. All new revisions **must** be backward\n            compatible with old revisions.\n          format: int32\n          type: integer\n        sortingCode:\n          description: \"Optional. Additional, country-specific, sorting code. This\\\n            \\ is not used in most regions. Where it is used, the value is either a\\\n            \\ string like \\\"CEDEX\\\", optionally followed by a number (e.g. \\\"CEDEX\\\n            \\ 7\\\"), or just a number alone, representing the \\\"sector code\\\" (Jamaica),\\\n            \\ \\\"delivery area indicator\\\" (Malawi) or \\\"post office indicator\\\" (e.g.\\\n            \\ C\\xF4te d'Ivoire).\"\n          type: string\n        sublocality:\n          description: Optional. Sublocality of the address. For example, this can\n            be neighborhoods, boroughs, districts.\n          type: string\n      type: object\n    RegisterDomainRequest:\n      description: Request for the `RegisterDomain` method.\n      properties:\n        contactNotices:\n          description: The list of contact notices that the caller acknowledges. The\n            notices needed here depend on the values specified in `registration.contact_settings`.\n          items:\n            enum:\n            - CONTACT_NOTICE_UNSPECIFIED\n            - PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT\n            type: string\n          type: array\n        domainNotices:\n          description: The list of domain notices that you acknowledge. Call `RetrieveRegisterParameters`\n            to see the notices that need acknowledgement.\n          items:\n            enum:\n            - DOMAIN_NOTICE_UNSPECIFIED\n            - HSTS_PRELOADED\n            type: string\n          type: array\n        registration:\n          $ref: '#/components/schemas/Registration'\n          description: Required. The complete `Registration` resource to be created.\n        validateOnly:\n          description: 'When true, only validation will be performed, without actually\n            registering the domain. Follows: https://cloud.google.com/apis/design/design_patterns#request_validation'\n          type: boolean\n        yearlyPrice:\n          $ref: '#/components/schemas/Money'\n          description: Required. Yearly price to register or renew the domain. The\n            value that should be put here can be obtained from RetrieveRegisterParameters\n            or SearchDomains calls.\n      type: object\n    RegisterParameters:\n      description: Parameters required to register a new domain.\n      properties:\n        availability:\n          description: Indicates whether the domain is available for registration.\n            This value is accurate when obtained by calling `RetrieveRegisterParameters`,\n            but is approximate when obtained by calling `SearchDomains`.\n          enum:\n          - AVAILABILITY_UNSPECIFIED\n          - AVAILABLE\n          - UNAVAILABLE\n          - UNSUPPORTED\n          - UNKNOWN\n          type: string\n        domainName:\n          description: The domain name. Unicode domain names are expressed in Punycode\n            format.\n          type: string\n        domainNotices:\n          description: Notices about special properties of the domain.\n          items:\n            enum:\n            - DOMAIN_NOTICE_UNSPECIFIED\n            - HSTS_PRELOADED\n            type: string\n          type: array\n        supportedPrivacy:\n          description: Contact privacy options that the domain supports.\n          items:\n            enum:\n            - CONTACT_PRIVACY_UNSPECIFIED\n            - PUBLIC_CONTACT_DATA\n            - PRIVATE_CONTACT_DATA\n            - REDACTED_CONTACT_DATA\n            type: string\n          type: array\n        yearlyPrice:\n          $ref: '#/components/schemas/Money'\n          description: Price to register or renew the domain for one year.\n      type: object\n    Registration:\n      description: 'The `Registration` resource facilitates managing and configuring\n        domain name registrations. There are several ways to create a new `Registration`\n        resource: To create a new `Registration` resource, find a suitable domain\n        name by calling the `SearchDomains` method with a query to see available domain\n        name options. After choosing a name, call `RetrieveRegisterParameters` to\n        ensure availability and obtain information like pricing, which is needed to\n        build a call to `RegisterDomain`. Another way to create a new `Registration`\n        is to transfer an existing domain from another registrar. First, go to the\n        current registrar to unlock the domain for transfer and retrieve the domain''s\n        transfer authorization code. Then call `RetrieveTransferParameters` to confirm\n        that the domain is unlocked and to get values needed to build a call to `TransferDomain`.'\n      properties:\n        contactSettings:\n          $ref: '#/components/schemas/ContactSettings'\n          description: Required. Settings for contact information linked to the `Registration`.\n            You cannot update these with the `UpdateRegistration` method. To update\n            these settings, use the `ConfigureContactSettings` method.\n        createTime:\n          description: Output only. The creation timestamp of the `Registration` resource.\n          format: google-datetime\n          readOnly: true\n          type: string\n        dnsSettings:\n          $ref: '#/components/schemas/DnsSettings'\n          description: Settings controlling the DNS configuration of the `Registration`.\n            You cannot update these with the `UpdateRegistration` method. To update\n            these settings, use the `ConfigureDnsSettings` method.\n        domainName:\n          description: Required. Immutable. The domain name. Unicode domain names\n            must be expressed in Punycode format.\n          type: string\n        expireTime:\n          description: Output only. The expiration timestamp of the `Registration`.\n          format: google-datetime\n          readOnly: true\n          type: string\n        issues:\n          description: Output only. The set of issues with the `Registration` that\n            require attention.\n          items:\n            enum:\n            - ISSUE_UNSPECIFIED\n            - CONTACT_SUPPORT\n            - UNVERIFIED_EMAIL\n            type: string\n          readOnly: true\n          type: array\n        labels:\n          additionalProperties:\n            type: string\n          description: Set of labels associated with the `Registration`.\n          type: object\n        managementSettings:\n          $ref: '#/components/schemas/ManagementSettings'\n          description: Settings for management of the `Registration`, including renewal,\n            billing, and transfer. You cannot update these with the `UpdateRegistration`\n            method. To update these settings, use the `ConfigureManagementSettings`\n            method.\n        name:\n          description: Output only. Name of the `Registration` resource, in the format\n            `projects/*/locations/*/registrations/`.\n          readOnly: true\n          type: string\n        pendingContactSettings:\n          $ref: '#/components/schemas/ContactSettings'\n          description: Output only. Pending contact settings for the `Registration`.\n            Updates to the `contact_settings` field that change its `registrant_contact`\n            or `privacy` fields require email confirmation by the `registrant_contact`\n            before taking effect. This field is set only if there are pending updates\n            to the `contact_settings` that have not yet been confirmed. To confirm\n            the changes, the `registrant_contact` must follow the instructions in\n            the email they receive.\n          readOnly: true\n        state:\n          description: Output only. The state of the `Registration`\n          enum:\n          - STATE_UNSPECIFIED\n          - REGISTRATION_PENDING\n          - REGISTRATION_FAILED\n          - TRANSFER_PENDING\n          - TRANSFER_FAILED\n          - ACTIVE\n          - SUSPENDED\n          - EXPORTED\n          readOnly: true\n          type: string\n        supportedPrivacy:\n          description: Output only. Set of options for the `contact_settings.privacy`\n            field that this `Registration` supports.\n          items:\n            enum:\n            - CONTACT_PRIVACY_UNSPECIFIED\n            - PUBLIC_CONTACT_DATA\n            - PRIVATE_CONTACT_DATA\n            - REDACTED_CONTACT_DATA\n            type: string\n          readOnly: true\n          type: array\n      type: object\n    ResetAuthorizationCodeRequest:\n      description: Request for the `ResetAuthorizationCode` method.\n      properties: {}\n      type: object\n    RetrieveRegisterParametersResponse:\n      description: Response for the `RetrieveRegisterParameters` method.\n      properties:\n        registerParameters:\n          $ref: '#/components/schemas/RegisterParameters'\n          description: Parameters to use when calling the `RegisterDomain` method.\n      type: object\n    RetrieveTransferParametersResponse:\n      description: Response for the `RetrieveTransferParameters` method.\n      properties:\n        transferParameters:\n          $ref: '#/components/schemas/TransferParameters'\n          description: Parameters to use when calling the `TransferDomain` method.\n      type: object\n    SearchDomainsResponse:\n      description: Response for the `SearchDomains` method.\n      properties:\n        registerParameters:\n          description: Results of the domain name search.\n          items:\n            $ref: '#/components/schemas/RegisterParameters'\n          type: array\n      type: object\n    SetIamPolicyRequest:\n      description: Request message for `SetIamPolicy` method.\n      properties:\n        policy:\n          $ref: '#/components/schemas/Policy'\n          description: 'REQUIRED: The complete policy to be applied to the `resource`.\n            The size of the policy is limited to a few 10s of KB. An empty policy\n            is a valid policy but certain Cloud Platform services (such as Projects)\n            might reject them.'\n        updateMask:\n          description: 'OPTIONAL: A FieldMask specifying which fields of the policy\n            to modify. Only the fields in the mask will be modified. If no mask is\n            provided, the following default mask is used: `paths: \"bindings, etag\"`'\n          format: google-fieldmask\n          type: string\n      type: object\n    Status:\n      description: 'The `Status` type defines a logical error model that is suitable\n        for different programming environments, including REST APIs and RPC APIs.\n        It is used by [gRPC](https://github.com/grpc). Each `Status` message contains\n        three pieces of data: error code, error message, and error details. You can\n        find out more about this error model and how to work with it in the [API Design\n        Guide](https://cloud.google.com/apis/design/errors).'\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: A list of messages that carry the error details. There is a\n            common set of message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type\n                URL.\n            type: object\n          type: array\n        message:\n          description: A developer-facing error message, which should be in English.\n            Any user-facing error message should be localized and sent in the google.rpc.Status.details\n            field, or localized by the client.\n          type: string\n      type: object\n    TestIamPermissionsRequest:\n      description: Request message for `TestIamPermissions` method.\n      properties:\n        permissions:\n          description: The set of permissions to check for the `resource`. Permissions\n            with wildcards (such as '*' or 'storage.*') are not allowed. For more\n            information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).\n          items:\n            type: string\n          type: array\n      type: object\n    TestIamPermissionsResponse:\n      description: Response message for `TestIamPermissions` method.\n      properties:\n        permissions:\n          description: A subset of `TestPermissionsRequest.permissions` that the caller\n            is allowed.\n          items:\n            type: string\n          type: array\n      type: object\n    TransferDomainRequest:\n      description: Request for the `TransferDomain` method.\n      properties:\n        authorizationCode:\n          $ref: '#/components/schemas/AuthorizationCode'\n          description: The domain's transfer authorization code. You can obtain this\n            from the domain's current registrar.\n        contactNotices:\n          description: The list of contact notices that you acknowledge. The notices\n            needed here depend on the values specified in `registration.contact_settings`.\n          items:\n            enum:\n            - CONTACT_NOTICE_UNSPECIFIED\n            - PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT\n            type: string\n          type: array\n        registration:\n          $ref: '#/components/schemas/Registration'\n          description: Required. The complete `Registration` resource to be created.\n            You can leave `registration.dns_settings` unset to import the domain's\n            current DNS configuration from its current registrar. Use this option\n            only if you are sure that the domain's current DNS service will not cease\n            upon transfer, as is often the case for DNS services provided for free\n            by the registrar.\n        validateOnly:\n          description: Validate the request without actually transferring the domain.\n          type: boolean\n        yearlyPrice:\n          $ref: '#/components/schemas/Money'\n          description: Required. Acknowledgement of the price to transfer or renew\n            the domain for one year. Call `RetrieveTransferParameters` to obtain the\n            price, which you must acknowledge.\n      type: object\n    TransferParameters:\n      description: Parameters required to transfer a domain from another registrar.\n      properties:\n        currentRegistrar:\n          description: The registrar that currently manages the domain.\n          type: string\n        domainName:\n          description: The domain name. Unicode domain names are expressed in Punycode\n            format.\n          type: string\n        nameServers:\n          description: The name servers that currently store the configuration of\n            the domain.\n          items:\n            type: string\n          type: array\n        supportedPrivacy:\n          description: Contact privacy options that the domain supports.\n          items:\n            enum:\n            - CONTACT_PRIVACY_UNSPECIFIED\n            - PUBLIC_CONTACT_DATA\n            - PRIVATE_CONTACT_DATA\n            - REDACTED_CONTACT_DATA\n            type: string\n          type: array\n        transferLockState:\n          description: Indicates whether the domain is protected by a transfer lock.\n            For a transfer to succeed, this must show `UNLOCKED`. To unlock a domain,\n            go to its current registrar.\n          enum:\n          - TRANSFER_LOCK_STATE_UNSPECIFIED\n          - UNLOCKED\n          - LOCKED\n          type: string\n        yearlyPrice:\n          $ref: '#/components/schemas/Money'\n          description: Price to transfer or renew the domain for one year.\n      type: object\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,\n              and delete your Google Cloud data and see the email address for your\n              Google Account.\n      type: oauth2\n    Oauth2c:\n      description: Oauth 2.0 authorizationCode authentication\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,\n              and delete your Google Cloud data and see the email address for your\n              Google Account.\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n      type: oauth2\n  x-stackQL-resources: {}\nexternalDocs:\n  url: https://cloud.google.com/domains/\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: Enables management and configuration of domain names.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Cloud Domains API\n  version: v1beta1\n  x-apisguru-categories:\n  - analytics\n  - media\n  x-logo:\n    url: https://api.apis.guru/v2/cache/logo/https_upload.wikimedia.org_wikipedia_commons_e_e1_YouTube_play_buttom_icon_%282013-2017%29.svg\n  x-origin:\n  - format: google\n    url: https://domains.googleapis.com/$discovery/rest?version=v1beta1\n    version: v1\n  x-providerName: googleapis.com\n  x-serviceName: domains\nopenapi: 3.0.0\npaths:\n  /v1beta1/{location}/registrations:retrieveRegisterParameters:\n    get:\n      description: Gets parameters needed to register a new domain name, including\n        price and up-to-date availability. Use the returned values to call `RegisterDomain`.\n      operationId: domains.projects.locations.registrations.retrieveRegisterParameters\n      parameters:\n      - description: Required. The location. Must be in the format `projects/*/locations/*`.\n        in: path\n        name: location\n        required: true\n        schema:\n          type: string\n      - description: Required. The domain name. Unicode domain names must be expressed\n          in Punycode format.\n        in: query\n        name: domainName\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RetrieveRegisterParametersResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{location}/registrations:retrieveTransferParameters:\n    get:\n      description: Gets parameters needed to transfer a domain name from another registrar\n        to Cloud Domains. For domains managed by Google Domains, transferring to Cloud\n        Domains is not yet supported. Use the returned values to call `TransferDomain`.\n      operationId: domains.projects.locations.registrations.retrieveTransferParameters\n      parameters:\n      - description: Required. The location. Must be in the format `projects/*/locations/*`.\n        in: path\n        name: location\n        required: true\n        schema:\n          type: string\n      - description: Required. The domain name. Unicode domain names must be expressed\n          in Punycode format.\n        in: query\n        name: domainName\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RetrieveTransferParametersResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{location}/registrations:searchDomains:\n    get:\n      description: Searches for available domain names similar to the provided query.\n        Availability results from this method are approximate; call `RetrieveRegisterParameters`\n        on a domain before registering to confirm availability.\n      operationId: domains.projects.locations.registrations.searchDomains\n      parameters:\n      - description: Required. The location. Must be in the format `projects/*/locations/*`.\n        in: path\n        name: location\n        required: true\n        schema:\n          type: string\n      - description: Required. String used to search for available domain names.\n        in: query\n        name: query\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchDomainsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{name}:\n    delete:\n      description: 'Deletes a `Registration` resource. For `Registration` resources\n        using usage billing, this method works if: * `state` is `EXPORTED` with `expire_time`\n        in the past * `state` is `REGISTRATION_FAILED` * `state` is `TRANSFER_FAILED`\n        This method works on any `Registration` resource using subscription billing,\n        provided that the resource was created at least 1 day in the past. When an\n        active domain is successfully deleted, you can continue to use the domain\n        in [Google Domains](https://domains.google/) until it expires. The calling\n        user becomes the domain''s sole owner in Google Domains, and permissions for\n        the domain are subsequently managed there. The domain will not renew automatically\n        unless the new owner sets up billing in Google Domains.'\n      operationId: domains.projects.locations.registrations.delete\n      parameters:\n      - description: Required. The name of the `Registration` to delete, in the format\n          `projects/*/locations/*/registrations/*`.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    get:\n      description: Gets the details of a `Registration` resource.\n      operationId: domains.projects.locations.registrations.get\n      parameters:\n      - description: Required. The name of the `Registration` to get, in the format\n          `projects/*/locations/*/registrations/*`.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Registration'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: 'Updates select fields of a `Registration` resource, notably `labels`.\n        To update other fields, use the appropriate custom update method: * To update\n        management settings, see `ConfigureManagementSettings` * To update DNS configuration,\n        see `ConfigureDnsSettings` * To update contact information, see `ConfigureContactSettings`'\n      operationId: domains.projects.locations.registrations.patch\n      parameters:\n      - description: Output only. Name of the `Registration` resource, in the format\n          `projects/*/locations/*/registrations/`.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: Required. The field mask describing which fields to update as\n          a comma-separated list. For example, if only the labels are being updated,\n          the `update_mask` would be `\"labels\"`.\n        in: query\n        name: updateMask\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Registration'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{name}/locations:\n    get:\n      description: Lists information about the supported locations for this service.\n      operationId: domains.projects.locations.list\n      parameters:\n      - description: The resource that owns the locations collection, if applicable.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: A filter to narrow down results to a preferred subset. The filtering\n          language accepts strings like \"displayName=tokyo\", and is documented in\n          more detail in [AIP-160](https://google.aip.dev/160).\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: The maximum number of results to return. If not set, the service\n          selects a default.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: A page token received from the `next_page_token` field in the\n          response. Send that page token to receive the subsequent page.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListLocationsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{name}/operations:\n    get:\n      description: 'Lists operations that match the specified filter in the request.\n        If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE:\n        the `name` binding allows API services to override the binding to use different\n        resource name schemes, such as `users/*/operations`. To override the binding,\n        API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to\n        their service configuration. For backwards compatibility, the default name\n        includes the operations collection id, however overriding users must ensure\n        the name binding is the parent resource, without the operations collection\n        id.'\n      operationId: domains.projects.locations.operations.list\n      parameters:\n      - description: The name of the operation's parent resource.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: The standard list filter.\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: The standard list page size.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: The standard list page token.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOperationsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{name}:export:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Exports a `Registration` resource, such that it is no longer managed\n        by Cloud Domains. When an active domain is successfully exported, you can\n        continue to use the domain in [Google Domains](https://domains.google/) until\n        it expires. The calling user becomes the domain's sole owner in Google Domains,\n        and permissions for the domain are subsequently managed there. The domain\n        will not renew automatically unless the new owner sets up billing in Google\n        Domains.\n      operationId: domains.projects.locations.registrations.export\n      parameters:\n      - description: Required. The name of the `Registration` to export, in the format\n          `projects/*/locations/*/registrations/*`.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExportRegistrationRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/registrations:\n    get:\n      description: Lists the `Registration` resources in a project.\n      operationId: domains.projects.locations.registrations.list\n      parameters:\n      - description: Required. The project and location from which to list `Registration`s,\n          specified in the format `projects/*/locations/*`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'Filter expression to restrict the `Registration`s returned.\n          The expression must specify the field name, a comparison operator, and the\n          value that you want to use for filtering. The value must be a string, a\n          number, a boolean, or an enum value. The comparison operator should be one\n          of =, !=, \u003e, \u003c, \u003e=, \u003c=, or : for prefix or wildcard matches. For example,\n          to filter to a specific domain name, use an expression like `domainName=\"example.com\"`.\n          You can also check for the existence of a field; for example, to find domains\n          using custom DNS settings, use an expression like `dnsSettings.customDns:*`.\n          You can also create compound filters by combining expressions with the `AND`\n          and `OR` operators. For example, to find domains that are suspended or have\n          specific issues flagged, use an expression like `(state=SUSPENDED) OR (issue:*)`.'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Maximum number of results to return.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: When set to the `next_page_token` from a prior response, provides\n          the next page of results.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListRegistrationsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{parent}/registrations:register:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Registers a new domain name and creates a corresponding `Registration`\n        resource. Call `RetrieveRegisterParameters` first to check availability of\n        the domain name and determine parameters like price that are needed to build\n        a call to this method. A successful call creates a `Registration` resource\n        in state `REGISTRATION_PENDING`, which resolves to `ACTIVE` within 1-2 minutes,\n        indicating that the domain was successfully registered. If the resource ends\n        up in state `REGISTRATION_FAILED`, it indicates that the domain was not registered\n        successfully, and you can safely delete the resource and retry registration.\n      operationId: domains.projects.locations.registrations.register\n      parameters:\n      - description: Required. The parent resource of the `Registration`. Must be\n          in the format `projects/*/locations/*`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterDomainRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/registrations:transfer:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Transfers a domain name from another registrar to Cloud Domains.\n        For domains managed by Google Domains, transferring to Cloud Domains is not\n        yet supported. Before calling this method, go to the domain's current registrar\n        to unlock the domain for transfer and retrieve the domain's transfer authorization\n        code. Then call `RetrieveTransferParameters` to confirm that the domain is\n        unlocked and to get values needed to build a call to this method. A successful\n        call creates a `Registration` resource in state `TRANSFER_PENDING`. It can\n        take several days to complete the transfer process. The registrant can often\n        speed up this process by approving the transfer through the current registrar,\n        either by clicking a link in an email from the registrar or by visiting the\n        registrar's website. A few minutes after transfer approval, the resource transitions\n        to state `ACTIVE`, indicating that the transfer was successful. If the transfer\n        is rejected or the request expires without being approved, the resource can\n        end up in state `TRANSFER_FAILED`. If transfer fails, you can safely delete\n        the resource and retry the transfer.\n      operationId: domains.projects.locations.registrations.transfer\n      parameters:\n      - description: Required. The parent resource of the `Registration`. Must be\n          in the format `projects/*/locations/*`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransferDomainRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{registration}:configureContactSettings:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Updates a `Registration`'s contact settings. Some changes require\n        confirmation by the domain's registrant contact .\n      operationId: domains.projects.locations.registrations.configureContactSettings\n      parameters:\n      - description: Required. The name of the `Registration` whose contact settings\n          are being updated, in the format `projects/*/locations/*/registrations/*`.\n        in: path\n        name: registration\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConfigureContactSettingsRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{registration}:configureDnsSettings:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Updates a `Registration`'s DNS settings.\n      operationId: domains.projects.locations.registrations.configureDnsSettings\n      parameters:\n      - description: Required. The name of the `Registration` whose DNS settings are\n          being updated, in the format `projects/*/locations/*/registrations/*`.\n        in: path\n        name: registration\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConfigureDnsSettingsRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{registration}:configureManagementSettings:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Updates a `Registration`'s management settings.\n      operationId: domains.projects.locations.registrations.configureManagementSettings\n      parameters:\n      - description: Required. The name of the `Registration` whose management settings\n          are being updated, in the format `projects/*/locations/*/registrations/*`.\n        in: path\n        name: registration\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConfigureManagementSettingsRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{registration}:resetAuthorizationCode:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Resets the authorization code of the `Registration` to a new random\n        string. You can call this method only after 60 days have elapsed since the\n        initial domain registration.\n      operationId: domains.projects.locations.registrations.resetAuthorizationCode\n      parameters:\n      - description: Required. The name of the `Registration` whose authorization\n          code is being reset, in the format `projects/*/locations/*/registrations/*`.\n        in: path\n        name: registration\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResetAuthorizationCodeRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationCode'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{registration}:retrieveAuthorizationCode:\n    get:\n      description: Gets the authorization code of the `Registration` for the purpose\n        of transferring the domain to another registrar. You can call this method\n        only after 60 days have elapsed since the initial domain registration.\n      operationId: domains.projects.locations.registrations.retrieveAuthorizationCode\n      parameters:\n      - description: Required. The name of the `Registration` whose authorization\n          code is being retrieved, in the format `projects/*/locations/*/registrations/*`.\n        in: path\n        name: registration\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationCode'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{resource}:getIamPolicy:\n    get:\n      description: Gets the access control policy for a resource. Returns an empty\n        policy if the resource exists and does not have a policy set.\n      operationId: domains.projects.locations.registrations.getIamPolicy\n      parameters:\n      - description: 'REQUIRED: The resource for which the policy is being requested.\n          See the operation documentation for the appropriate value for this field.'\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      - description: Optional. The policy format version to be returned. Valid values\n          are 0, 1, and 3. Requests specifying an invalid value will be rejected.\n          Requests for policies with any conditional bindings must specify version\n          3. Policies without any conditional bindings may specify any valid value\n          or leave the field unset. To learn which resources support conditions in\n          their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n        in: query\n        name: options.requestedPolicyVersion\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{resource}:setIamPolicy:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Sets the access control policy on the specified resource. Replaces\n        any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED`\n        errors.\n      operationId: domains.projects.locations.registrations.setIamPolicy\n      parameters:\n      - description: 'REQUIRED: The resource for which the policy is being specified.\n          See the operation documentation for the appropriate value for this field.'\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetIamPolicyRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{resource}:testIamPermissions:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: 'Returns permissions that a caller has on the specified resource.\n        If the resource does not exist, this will return an empty set of permissions,\n        not a `NOT_FOUND` error. Note: This operation is designed to be used for building\n        permission-aware UIs and command-line tools, not for authorization checking.\n        This operation may \"fail open\" without warning.'\n      operationId: domains.projects.locations.registrations.testIamPermissions\n      parameters:\n      - description: 'REQUIRED: The resource for which the policy detail is being\n          requested. See the operation documentation for the appropriate value for\n          this field.'\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestIamPermissionsRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestIamPermissionsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\nservers:\n- url: https://domains.googleapis.com/\ntags:\n- name: projects\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/googleapis.com/v0.1.2/services/domains-v1beta1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/googleapis.com/v0.1.2/services/domains-v1beta1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1beta1/{name}/locations\": get: security: security \"Oauth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}