{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/getlarge/ticketing"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "apps/orders/openapi.json",
			"byteSize": 6722,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"paths\": {\n    \"/api/orders\": {\n      \"post\": {\n        \"operationId\": \"OrdersController_create\",\n        \"summary\": \"Create an order - Scope : orders:create_one\",\n        \"description\": \"Request creation of an order\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateOrderDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Order created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderDto\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"orders\"\n        ],\n        \"security\": [\n          {\n            \"session\": []\n          },\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"OrdersController_find\",\n        \"summary\": \"Find orders - Scope : orders:read_many\",\n        \"description\": \"Request user orders\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Orders found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/OrderDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"orders\"\n        ],\n        \"security\": [\n          {\n            \"session\": []\n          },\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/api/orders/{id}\": {\n      \"get\": {\n        \"operationId\": \"OrdersController_findById\",\n        \"summary\": \"Find an order - Scope : orders:read_one\",\n        \"description\": \"Request an order by id\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Order found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderDto\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"orders\"\n        ],\n        \"security\": [\n          {\n            \"session\": []\n          },\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"OrdersController_cancelById\",\n        \"summary\": \"Cancel an order - Scope : orders:delete_one\",\n        \"description\": \"Cancel an order by id\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Order cancelled\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderDto\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"orders\"\n        ],\n        \"security\": [\n          {\n            \"session\": []\n          },\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    }\n  },\n  \"info\": {\n    \"title\": \"Orders API\",\n    \"description\": \"Ticketing orders API description\",\n    \"version\": \"0.2.0\",\n    \"contact\": {}\n  },\n  \"tags\": [\n    {\n      \"name\": \"orders\",\n      \"description\": \"\"\n    }\n  ],\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3020\"\n    },\n    {\n      \"url\": \"http://localhost:80\"\n    },\n    {\n      \"url\": \"http://ticketing.dev\"\n    }\n  ],\n  \"components\": {\n    \"securitySchemes\": {\n      \"session\": {\n        \"type\": \"apiKey\",\n        \"in\": \"cookie\",\n        \"name\": \"session\"\n      },\n      \"bearer\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    },\n    \"schemas\": {\n      \"CreateOrderDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ticketId\": {\n            \"type\": \"string\",\n            \"description\": \"Ticket to order\"\n          }\n        },\n        \"required\": [\n          \"ticketId\"\n        ]\n      },\n      \"TicketDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Ticket database identifier\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"Ticket title\",\n            \"minLength\": 3,\n            \"maxLength\": 56\n          },\n          \"price\": {\n            \"type\": \"number\",\n            \"description\": \"Ticket price\",\n            \"minimum\": 0\n          },\n          \"version\": {\n            \"type\": \"number\",\n            \"description\": \"Ticket version represented by a number incremented at each updated\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"title\",\n          \"price\",\n          \"version\"\n        ]\n      },\n      \"OrderStatus\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"created\",\n          \"cancelled\",\n          \"awaiting:payment\",\n          \"complete\"\n        ]\n      },\n      \"OrderDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Order database identifier\"\n          },\n          \"ticket\": {\n            \"description\": \"Ticket ordered reference\",\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/TicketDto\"\n              }\n            ]\n          },\n          \"userId\": {\n            \"type\": \"string\",\n            \"description\": \"User who created the order\"\n          },\n          \"status\": {\n            \"description\": \"Order status\",\n            \"example\": \"complete\",\n            \"default\": \"created\",\n            \"$ref\": \"#/components/schemas/OrderStatus\"\n          },\n          \"expiresAt\": {\n            \"type\": \"string\",\n            \"description\": \"Order expiration date\"\n          },\n          \"version\": {\n            \"type\": \"number\",\n            \"description\": \"Order version represented by a number incremented at each updated\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"ticket\",\n          \"userId\",\n          \"status\",\n          \"version\"\n        ]\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"session\": []\n    },\n    {\n      \"bearer\": []\n    }\n  ]\n}",
			"canonicalURL": "/github.com/getlarge/ticketing@3534c252e339e4ce7626731465bd03bd7b2e01e8/-/blob/apps/orders/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/getlarge/ticketing/blob/3534c252e339e4ce7626731465bd03bd7b2e01e8/apps/orders/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/orders\": get: security: security \"session\" (index 0): cookie security not implemented",
	"NotImplemented": [
		"cookie security"
	]
}