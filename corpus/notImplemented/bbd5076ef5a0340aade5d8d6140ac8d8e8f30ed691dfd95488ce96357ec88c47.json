{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/justindav1s/microservices-on-openshift"
		},
		"file": {
			"name": "prosuct-openapi-spec.yaml",
			"size": 0,
			"path": "camelk/apicurito/prosuct-openapi-spec.yaml",
			"byteSize": 6070,
			"content": "openapi: 3.0.2\ninfo:\n    title: Product API\n    version: '1.0'\n    description: Product Information\nservers:\n    -\n        url: 'https://inventory-tekton-test.apps.sno.openshiftlabs.net'\n        description: Generated server url\npaths:\n    '/products/create/{productName}/{productType}/{productPrice}':\n        post:\n            tags:\n                - product-controller\n            parameters:\n                -\n                    name: productName\n                    schema:\n                        type: string\n                    in: path\n                    required: true\n                -\n                    name: productType\n                    schema:\n                        type: string\n                    in: path\n                    required: true\n                -\n                    name: productPrice\n                    schema:\n                        type: string\n                    in: path\n                    required: true\n            responses:\n                '200':\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    type: object\n                    description: OK\n            operationId: create\n    '/products/{productId}':\n        get:\n            tags:\n                - product-controller\n            parameters:\n                -\n                    name: productId\n                    schema:\n                        format: int32\n                        type: integer\n                    in: path\n                    required: true\n            responses:\n                '200':\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Product'\n                    description: OK\n            operationId: get\n    /products/types:\n        get:\n            tags:\n                - product-controller\n            responses:\n                '200':\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    type: string\n                    description: OK\n            operationId: getTypes\n    '/products/type/{type}':\n        get:\n            tags:\n                - product-controller\n            parameters:\n                -\n                    name: type\n                    schema:\n                        type: string\n                    in: path\n                    required: true\n            responses:\n                '200':\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: '#/components/schemas/Product'\n                    description: OK\n            operationId: getProductsOfType\n    /products/all:\n        get:\n            tags:\n                - product-controller\n            responses:\n                '200':\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    type: object\n                    description: OK\n            operationId: getAll\n    '/product/test/echo/{echoStr}':\n        get:\n            tags:\n                - test-controller\n            parameters:\n                -\n                    name: echoStr\n                    schema:\n                        type: string\n                    in: path\n                    required: true\n            responses:\n                '200':\n                    content:\n                        '*/*':\n                            schema:\n                                $ref: '#/components/schemas/Response'\n                    description: OK\n            operationId: echo\n    /health:\n        get:\n            tags:\n                - product-application\n            responses:\n                '200':\n                    content:\n                        '*/*':\n                            schema:\n                                type: string\n                    description: OK\n            operationId: ping\n    /config/p1:\n        get:\n            tags:\n                - config-controller\n            responses:\n                '200':\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                additionalProperties:\n                                    type: object\n                    description: OK\n            operationId: config\n    /:\n        get:\n            tags:\n                - product-application\n            responses:\n                '200':\n                    content:\n                        '*/*':\n                            schema:\n                                type: string\n                    description: OK\n            operationId: home\ncomponents:\n    schemas:\n        Product:\n            type: object\n            properties:\n                id:\n                    type: string\n                name:\n                    type: string\n                type:\n                    enum:\n                        - food\n                        - gadgets\n                        - clothes\n                    type: string\n                price:\n                    format: float\n                    type: number\n                basketIndex:\n                    format: int32\n                    type: integer\n        Response:\n            type: object\n            properties:\n                principal:\n                    type: string\n                date:\n                    type: string\n                message:\n                    type: string\n                echoing:\n                    type: string\n",
			"canonicalURL": "/github.com/justindav1s/microservices-on-openshift@8b7f0251214624ae77a6a0eca8749329aa442c2c/-/blob/camelk/apicurito/prosuct-openapi-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/justindav1s/microservices-on-openshift/blob/8b7f0251214624ae77a6a0eca8749329aa442c2c/camelk/apicurito/prosuct-openapi-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}