{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/xero.com/xero_files/2.9.4/openapi.yaml",
			"byteSize": 26588,
			"content": "openapi: 3.0.0\nservers:\n  - description: Xero Files API\n    url: https://api.xero.com/files.xro/1.0/\ninfo:\n  contact:\n    email: api@xero.com\n    name: Xero Platform Team\n    url: https://developer.xero.com\n    x-twitter: XeroAPI\n  description: These endpoints are specific to Xero Files API\n  termsOfService: https://developer.xero.com/xero-developer-platform-terms-conditions/\n  title: Xero Files API\n  version: 2.9.4\n  x-apisguru-categories:\n    - financial\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/XeroAPI/Xero-OpenAPI/master/xero_files.yaml\n      version: \"3.0\"\n  x-providerName: xero.com\n  x-serviceName: xero_files\ntags:\n  - description: Operations available to regular developers\n    name: Files\npaths:\n  \"/Associations/{ObjectId}\":\n    get:\n      description: By passing in the appropriate options,\n      operationId: getAssociationsByObject\n      parameters:\n        - description: Object id for single object\n          in: path\n          name: ObjectId\n          required: true\n          schema:\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '[ { \"FileId\":\"6beccb4a-0d7d-4518-93f3-e0cd1dccb254\",\n                \"ObjectId\":\"1270bf7c-5d18-473a-9231-1e36c4bd33ed\",\n                \"ObjectType\":\"Business\", \"ObjectGroup\":\"Contact\" } ]'\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Association\"\n                type: array\n          description: search results matching criteria\n      security:\n        - OAuth2:\n            - files.read\n      summary: Retrieves an association object using a unique object ID\n      tags:\n        - Files\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Files:\n    get:\n      operationId: getFiles\n      parameters:\n        - description: pass an optional page size value\n          in: query\n          name: pagesize\n          schema:\n            example: 50\n            maximum: 100\n            type: integer\n        - description: number of records to skip for pagination\n          in: query\n          name: page\n          schema:\n            example: 2\n            minimum: 1\n            type: integer\n        - description: values to sort by\n          in: query\n          name: sort\n          schema:\n            enum:\n              - Name\n              - Size\n              - CreatedDateUTC\n            example: CreatedDateUTC DESC\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"TotalCount\": 100, \"Page\": 1, \"PerPage\": 2, \"Items\": [ { \"Name\":\n                \"helo-heros.jpg\", \"MimeType\": \"application/jpg\", \"Size\":\n                2878711, \"CreatedDateUtc\": \"2021-02-10T16:02:54.9930000\",\n                \"UpdatedDateUtc\": \"2021-02-10T16:02:54.9930000\", \"User\": {\n                \"Name\": \"sid.maestre@xero.com\", \"FirstName\": \"Sidney\",\n                \"LastName\": \"Maestre\", \"FullName\": \"Sidney Maestre\", \"Id\":\n                \"740add2a-a703-4b8a-a670-1093919c2040\" }, \"FolderId\":\n                \"bf924975-7097-46f2-a143-1ecfbab3c8c3\", \"Id\":\n                \"3d413bfe-f40f-4807-b953-9a42f834ff15\" }, { \"Name\":\n                \"helo-heros.jpg\", \"MimeType\": \"application/jpg\", \"Size\":\n                2878711, \"CreatedDateUtc\": \"2021-02-09T21:16:00.6130000\",\n                \"UpdatedDateUtc\": \"2021-02-09T21:16:00.6130000\", \"User\": {\n                \"Name\": \"sid.maestre@xero.com\", \"FirstName\": \"Sidney\",\n                \"LastName\": \"Maestre\", \"FullName\": \"Sidney Maestre\", \"Id\":\n                \"740add2a-a703-4b8a-a670-1093919c2040\" }, \"FolderId\":\n                \"bf924975-7097-46f2-a143-1ecfbab3c8c3\", \"Id\":\n                \"22f87409-cdfd-4813-a868-559481bcb052\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Files\"\n          description: search results matching criteria\n      security:\n        - OAuth2:\n            - files.read\n      summary: Retrieves files\n      tags:\n        - Files\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: uploadFile\n      parameters:\n        - description: pass an optional folder id to save file to specific folder\n          in: query\n          name: FolderId\n          schema:\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                body:\n                  format: byte\n                  type: string\n                filename:\n                  type: string\n                mimeType:\n                  type: string\n                name:\n                  description: exact name of the file you are uploading\n                  type: string\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example: '{ \"Name\": \"helo-heros.jpg\", \"MimeType\": \"application/jpg\", \"Size\":\n                2878711, \"CreatedDateUtc\": \"2021-02-10T23:17:50.1930000\",\n                \"UpdatedDateUtc\": \"2021-02-10T23:17:50.1930000\", \"User\": {\n                \"Name\": \"sid.maestre@xero.com\", \"FirstName\": \"Sidney\",\n                \"LastName\": \"Maestre\", \"FullName\": \"Sidney Maestre\", \"Id\":\n                \"740add2a-a703-4b8a-a670-1093919c2040\" }, \"FolderId\":\n                \"bf924975-7097-46f2-a143-1ecfbab3c8c3\", \"Id\":\n                \"22f87409-cdfd-4813-a868-559481bcb052\" }'\n              schema:\n                $ref: \"#/components/schemas/FileObject\"\n          description: A successful request\n        \"400\":\n          content:\n            application/json:\n              example: '[ { \"type\":\"Validation\", \"title\":\"Validation failure\",\n                \"detail\":\"Extension: boo is not a valid File extension.\" } ]'\n          description: invalid input, object invalid\n      security:\n        - OAuth2:\n            - files\n      summary: Uploads a File\n      tags:\n        - Files\n  \"/Files/{FileId}\":\n    delete:\n      description: Delete a specific file\n      operationId: deleteFile\n      parameters:\n        - description: File id for single object\n          in: path\n          name: FileId\n          required: true\n          schema:\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: Successful deletion - return response 204 no content\n          x-isEmpty: true\n      security:\n        - OAuth2:\n            - files\n      summary: Deletes a specific file\n      tags:\n        - Files\n    get:\n      operationId: getFile\n      parameters:\n        - description: File id for single object\n          in: path\n          name: FileId\n          required: true\n          schema:\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Name\": \"helo-heros.jpg\", \"MimeType\": \"application/jpg\", \"Size\":\n                2878711, \"CreatedDateUtc\": \"2021-02-10T23:17:50.1930000\",\n                \"UpdatedDateUtc\": \"2021-02-10T23:17:50.1930000\", \"User\": {\n                \"Name\": \"sid.maestre@xero.com\", \"FirstName\": \"Sidney\",\n                \"LastName\": \"Maestre\", \"FullName\": \"Sidney Maestre\", \"Id\":\n                \"740add2a-a703-4b8a-a670-1093919c2040\" }, \"FolderId\":\n                \"bf924975-7097-46f2-a143-1ecfbab3c8c3\", \"Id\":\n                \"efd77bfc-7018-4da1-b251-7aa2d438382c\" }'\n              schema:\n                $ref: \"#/components/schemas/FileObject\"\n          description: search results matching criteria\n      security:\n        - OAuth2:\n            - files.read\n      summary: Retrieves a file by a unique file ID\n      tags:\n        - Files\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      description: Updates file properties of a single file\n      operationId: updateFile\n      parameters:\n        - description: File id for single object\n          in: path\n          name: FileId\n          required: true\n          schema:\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"FolderId\": \"bf924975-7097-46f2-a143-1ecfbab3c8c3\" }'\n            schema:\n              $ref: \"#/components/schemas/FileObject\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Name\": \"helo-heros.jpg\", \"MimeType\": \"application/jpg\", \"Size\":\n                2878711, \"CreatedDateUtc\": \"2021-02-10T23:17:50.1930000\",\n                \"UpdatedDateUtc\": \"2021-02-10T23:58:54.1000000\", \"User\": {\n                \"Name\": \"sid.maestre@xero.com\", \"FirstName\": \"Sidney\",\n                \"LastName\": \"Maestre\", \"FullName\": \"Sidney Maestre\", \"Id\":\n                \"740add2a-a703-4b8a-a670-1093919c2040\" }, \"FolderId\":\n                \"bf924975-7097-46f2-a143-1ecfbab3c8c3\", \"Id\":\n                \"efd77bfc-7018-4da1-b251-7aa2d438382c\" }'\n              schema:\n                $ref: \"#/components/schemas/FileObject\"\n          description: A successful request\n        \"400\":\n          content:\n            application/json:\n              example: '[ { \"type\":\"Rename\", \"title\":\"Rename failed\", \"detail\":\"Unable to\n                rename efd77bfc-7018-4da1-b251-7aa2d438382c to FooBar\" } ]'\n          description: invalid input, object invalid\n      security:\n        - OAuth2:\n            - files\n      summary: Update a file\n      tags:\n        - Files\n  \"/Files/{FileId}/Associations\":\n    get:\n      description: |\n        By passing in the appropriate options, \n      operationId: getFileAssociations\n      parameters:\n        - description: File id for single object\n          in: path\n          name: FileId\n          required: true\n          schema:\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '[ { \"FileId\":\"6beccb4a-0d7d-4518-93f3-e0cd1dccb254\",\n                \"ObjectId\":\"1270bf7c-5d18-473a-9231-1e36c4bd33ed\",\n                \"ObjectType\":\"Business\", \"ObjectGroup\":\"Contact\" } ]'\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Association\"\n                type: array\n          description: search results matching criteria\n      security:\n        - OAuth2:\n            - files.read\n      summary: Retrieves a specific file associations\n      tags:\n        - Files\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      description: By passing in the appropriate options, you can create a new folder\n      operationId: createFileAssociation\n      parameters:\n        - description: File id for single object\n          in: path\n          name: FileId\n          required: true\n          schema:\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"ObjectId\": \"1270bf7c-5d18-473a-9231-1e36c4bd33ed\", \"ObjectGroup\":\n              \"Contact\", \"ObjectType\": \"Business\" }'\n            schema:\n              $ref: \"#/components/schemas/Association\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example: '{ \"FileId\": \"6beccb4a-0d7d-4518-93f3-e0cd1dccb254\", \"ObjectId\":\n                \"1270bf7c-5d18-473a-9231-1e36c4bd33ed\", \"ObjectType\":\n                \"Business\", \"ObjectGroup\": \"Contact\" }'\n              schema:\n                $ref: \"#/components/schemas/Association\"\n          description: A successful request\n        \"400\":\n          content:\n            application/json:\n              example: '[ { \"type\":\"Validation\", \"title\":\"Validation failure\",\n                \"detail\":\"Object is not a Account\" } ]'\n          description: invalid input, object invalid\n      security:\n        - OAuth2:\n            - files\n      summary: Creates a new file association\n      tags:\n        - Files\n  \"/Files/{FileId}/Associations/{ObjectId}\":\n    delete:\n      description: By passing in the appropriate options, you can create a new folder\n      operationId: deleteFileAssociation\n      parameters:\n        - description: File id for single object\n          in: path\n          name: FileId\n          required: true\n          schema:\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n            format: uuid\n            type: string\n        - description: Object id for single object\n          in: path\n          name: ObjectId\n          required: true\n          schema:\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: Successful deletion - return response 204 no content\n          x-isEmpty: true\n      security:\n        - OAuth2:\n            - files\n      summary: Deletes an existing file association\n      tags:\n        - Files\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Files/{FileId}/Content\":\n    get:\n      description: By passing in the appropriate options, retrieve data for specific file\n      operationId: getFileContent\n      parameters:\n        - description: File id for single object\n          in: path\n          name: FileId\n          required: true\n          schema:\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: returns the byte array of the specific file based on id\n      security:\n        - OAuth2:\n            - files.read\n      summary: Retrieves the content of a specific file\n      tags:\n        - Files\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Folders:\n    get:\n      description: By passing in the appropriate options, you can search for available\n        folders\n      operationId: getFolders\n      parameters:\n        - description: values to sort by\n          in: query\n          name: sort\n          schema:\n            enum:\n              - Name\n              - Size\n              - CreatedDateUTC\n            example: CreatedDateUTC DESC\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '[ { \"Name\":\"Inbox\", \"FileCount\":14,\n                \"Email\":\"xero.inbox.jpf4.6oo29retajkhtfus@xerofiles.com\",\n                \"IsInbox\":true, \"Id\":\"bf924975-7097-46f2-a143-1ecfbab3c8c3\" }, {\n                \"Name\":\"Contracts\", \"FileCount\":7, \"IsInbox\":false,\n                \"Id\":\"554ff1ad-4b94-4266-9b45-e29bcb75e6bf\" } ]'\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Folder\"\n                type: array\n          description: search results matching criteria\n      security:\n        - OAuth2:\n            - files.read\n      summary: Retrieves folders\n      tags:\n        - Files\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      description: By passing in the appropriate properties, you can create a new folder\n      operationId: createFolder\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Name\": \"My Docs\" }'\n            schema:\n              $ref: \"#/components/schemas/Folder\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Name\": \"My Docs\", \"FileCount\": 0, \"IsInbox\": false, \"Id\":\n                \"913970ad-8c8e-4666-8294-35b9cac23206\" }'\n              schema:\n                $ref: \"#/components/schemas/Folder\"\n          description: search results matching criteria\n        \"400\":\n          content:\n            application/json:\n              example: '[ { \"type\":\"Validation\", \"title\":\"Validation failure\", \"detail\":\"Name\n                contains one or more bad characters\" } ]'\n          description: invalid input, object invalid\n      security:\n        - OAuth2:\n            - files\n      summary: Creates a new folder\n      tags:\n        - Files\n  \"/Folders/{FolderId}\":\n    delete:\n      description: By passing in the appropriate ID, you can delete a folder\n      operationId: deleteFolder\n      parameters:\n        - description: Folder id for single object\n          in: path\n          name: FolderId\n          required: true\n          schema:\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: Successful deletion - return response 204 no content\n          x-isEmpty: true\n      security:\n        - OAuth2:\n            - files\n      summary: Deletes a folder\n      tags:\n        - Files\n    get:\n      description: By passing in the appropriate ID, you can search for specific folder\n      operationId: getFolder\n      parameters:\n        - description: Folder id for single object\n          in: path\n          name: FolderId\n          required: true\n          schema:\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Name\": \"My Docs\", \"FileCount\": 0, \"IsInbox\": false, \"Id\":\n                \"4c5f3fe4-2516-4863-ac88-3029351773bf\" }'\n              schema:\n                $ref: \"#/components/schemas/Folder\"\n          description: search results matching criteria\n      security:\n        - OAuth2:\n            - files.read\n      summary: Retrieves specific folder by using a unique folder ID\n      tags:\n        - Files\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      description: By passing in the appropriate ID and properties, you can update a folder\n      operationId: updateFolder\n      parameters:\n        - description: Folder id for single object\n          in: path\n          name: FolderId\n          required: true\n          schema:\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Name\": \"Your Docs\" }'\n            schema:\n              $ref: \"#/components/schemas/Folder\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Name\": \"Your Docs\", \"FileCount\": 0, \"IsInbox\": false, \"Id\":\n                \"4c5f3fe4-2516-4863-ac88-3029351773bf\" }'\n              schema:\n                $ref: \"#/components/schemas/Folder\"\n          description: return the updated object\n        \"400\":\n          content:\n            application/json:\n              example: '[ { \"type\":\"Validation\", \"title\":\"Validation failure\", \"detail\":\"Name\n                contains one or more bad characters\" } ]'\n          description: invalid input, object invalid\n      security:\n        - OAuth2:\n            - files\n      summary: Updates an existing folder\n      tags:\n        - Files\n  /Inbox:\n    get:\n      description: Search for the user inbox\n      operationId: getInbox\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Name\": \"Inbox\", \"FileCount\": 14, \"Email\":\n                \"xero.inbox.jpf4.6oo29retajkhtfus@xerofiles.com\", \"IsInbox\":\n                true, \"Id\": \"bf924975-7097-46f2-a143-1ecfbab3c8c3\" }'\n              schema:\n                $ref: \"#/components/schemas/Folder\"\n          description: search results matching criteria\n      security:\n        - OAuth2:\n            - files.read\n      summary: Retrieves inbox folder\n      tags:\n        - Files\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\ncomponents:\n  parameters:\n    requiredHeader:\n      description: Xero identifier for Tenant\n      example: YOUR_XERO_TENANT_ID\n      in: header\n      name: xero-tenant-id\n      required: true\n      schema:\n        type: string\n  schemas:\n    Association:\n      properties:\n        FileId:\n          description: The unique identifier of the file\n          format: uuid\n          type: string\n        ObjectGroup:\n          $ref: \"#/components/schemas/ObjectGroup\"\n        ObjectId:\n          description: The identifier of the object that the file is being associated with\n            (e.g. InvoiceID, BankTransactionID, ContactID)\n          format: uuid\n          type: string\n        ObjectType:\n          $ref: \"#/components/schemas/ObjectType\"\n      type: object\n    FileObject:\n      properties:\n        CreatedDateUtc:\n          description: Created date in UTC\n          example: 2020-12-03T19:04:58.6970000\n          type: string\n        FolderId:\n          description: Folder relation object's UUID\n          example: 0f8ccf21-7267-4268-9167-a1e2c40c84c8\n          format: uuid\n          type: string\n        Id:\n          description: File object's UUID\n          example: d290f1ee-6c54-4b01-90e6-d701748f0851\n          format: uuid\n          type: string\n        MimeType:\n          description: MimeType of the file (image/png, image/jpeg, application/pdf, etc..)\n          example: image/jpeg\n          type: string\n        Name:\n          description: File Name\n          example: File2.jpg\n          type: string\n        Size:\n          description: Numeric value in bytes\n          example: 3615\n          type: integer\n        UpdatedDateUtc:\n          description: Updated date in UTC\n          example: 2020-12-03T19:04:58.6970000\n          type: string\n        User:\n          $ref: \"#/components/schemas/User\"\n      required:\n        - id\n        - name\n        - manufacturer\n        - releaseDate\n      type: object\n    Files:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/FileObject\"\n          type: array\n        Page:\n          example: 1\n          type: integer\n        PerPage:\n          example: 50\n          type: integer\n        TotalCount:\n          example: 2\n          type: integer\n      type: object\n    Folder:\n      properties:\n        Email:\n          description: The email address used to email files to the inbox. Only the inbox\n            will have this element.\n          example: foo@bar.com\n          type: string\n        FileCount:\n          description: The number of files in the folder\n          example: 5\n          type: integer\n        Id:\n          description: Xero unique identifier for a folder  Files\n          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n          format: uuid\n          type: string\n        IsInbox:\n          description: to indicate if the folder is the Inbox. The Inbox cannot be renamed\n            or deleted.\n          example: true\n          type: boolean\n        Name:\n          description: The name of the folder\n          example: assets\n          type: string\n      required:\n        - name\n    Folders:\n      properties:\n        Folders:\n          items:\n            $ref: \"#/components/schemas/Folder\"\n          type: array\n      type: object\n    ObjectGroup:\n      description: The Object Group that the object is in. These roughly correlate to\n        the endpoints that can be used to retrieve the object via the core\n        accounting API.\n      enum:\n        - Account\n        - BankTransaction\n        - Contact\n        - CreditNote\n        - Invoice\n        - Item\n        - ManualJournal\n        - Overpayment\n        - Payment\n        - Prepayment\n        - Receipt\n      type: string\n    ObjectType:\n      description: The Object Type\n      enum:\n        - Unknown\n        - Accpay\n        - AccPayCredit\n        - AccPayPayment\n        - AccRec\n        - AccRecCredit\n        - AccRecPayment\n        - Adjustment\n        - ApCreditPayment\n        - ApOverPayment\n        - ApOverPaymentPayment\n        - ApOverPaymentSourcePayment\n        - ApPrepayment\n        - ApPrepaymentPayment\n        - ApPrepaymentSourcePayment\n        - ArCreditPayment\n        - ArOverPayment\n        - ArOverpaymentPayment\n        - ArOverpaymentSourcePayment\n        - ArPrepayment\n        - ArPrepaymentPayment\n        - ArPrepaymentSourcePayment\n        - CashPaid\n        - CashRec\n        - ExpPayment\n        - ManJournal\n        - PurchaseOrder\n        - Receipt\n        - Transfer\n        - Account\n        - Contact\n        - Business\n        - Employee\n        - Person\n        - User\n        - Org\n        - FixedAsset\n        - PayRun\n        - PriceListItem\n        - Bank\n        - Current\n        - Equity\n        - Expense\n        - Fixed\n        - Liability\n        - Prepayment\n        - Revenue\n        - Sales\n        - Overheads\n        - Depreciatn\n        - OtherIncome\n        - DirectCosts\n        - Currliab\n        - Termliab\n        - NonCurrent\n      type: string\n    User:\n      properties:\n        FirstName:\n          description: First name of user\n          example: John\n          type: string\n        FullName:\n          description: Last name of user\n          example: Smith\n          type: string\n        Id:\n          description: Xero identifier\n          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n          format: uuid\n          type: string\n        LastName:\n          description: Last name of user\n          example: Smith\n          type: string\n        Name:\n          description: Key is Name, but returns Email address of user who created the file\n          example: john.smith@mail.com\n          type: string\n      required:\n        - Id\n      type: object\n  securitySchemes:\n    OAuth2:\n      description: For more information\n      flows:\n        authorizationCode:\n          authorizationUrl: https://login.xero.com/identity/connect/authorize\n          scopes:\n            email: Grant read-only access to your email\n            files: Grant read-write access to files and folders\n            files.read: Grant read-only access to files and folders\n            openid: Grant read-only access to your open id\n            profile: your profile information\n          tokenUrl: https://identity.xero.com/connect/token\n      type: oauth2\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/xero.com/xero_files/2.9.4/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/xero.com/xero_files/2.9.4/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/Associations/{ObjectId}\": get: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"empty schema",
		"oauth2 security"
	]
}