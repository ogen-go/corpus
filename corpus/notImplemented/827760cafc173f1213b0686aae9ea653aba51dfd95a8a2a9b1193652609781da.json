{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/fair-data/fairdatapoint"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "fdp/openapi/openapi.yaml",
			"byteSize": 7214,
			"content": "openapi: 3.0.0\ninfo:\n  title: FAIR Data Point\n  version: \"1.0.0\"\n  description: FAIR Data Point is a RESTful web service that enables data owners\n     to describe and to expose their datasets (metadata) as well as data users\n     to discover more information about available datasets according to the\n     [FAIR Data Principles](https://www.force11.org/group/fairgroup/fairprinciples).\n  contact:\n    name: Netherlands eScience Center\n    url: https://www.esciencecenter.nl/\n    email: info@esciencecenter.nl\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nexternalDocs:\n  description: Find out more about FAIR Data Point\n  url: https://github.com/fair-data/fairdatapoint\nservers:\n  - description: API version 1\n    url: /\ntags:\n  - name: Metadata\n    description: Metadata Controller\npaths:\n  /fdp:\n    get:\n      tags:\n        - Metadata\n      summary: Get FDP metadata\n      operationId: fdp.api.FDP.get\n      responses:\n        '200':\n          $ref: '#/components/responses/RDF'\n    post:\n      tags:\n        - Metadata\n      summary: Create FDP metadta\n      operationId: fdp.api.FDP.post\n      requestBody:\n        $ref: '#/components/requestBodies/RDF'\n      responses:\n        '200':\n          description: Successful operation\n        '405':\n          description: Validation exception\n    put:\n      tags:\n        - Metadata\n      summary: Update FDP metadta\n      operationId: fdp.api.FDP.put\n      requestBody:\n        $ref: '#/components/requestBodies/RDF'\n      responses:\n        '200':\n          description: Successful operation\n        '405':\n          description: Validation exception\n  /catalog:\n    get:\n      tags:\n        - Metadata\n      summary: Get catalog list\n      operationId: fdp.api.Catalog.get_all\n      responses:\n        '200':\n          description: Successful operation\n        '204':\n          description: No Content\n    post:\n      tags:\n        - Metadata\n      summary: Create Catalog metadta\n      operationId: fdp.api.Catalog.post\n      requestBody:\n        $ref: '#/components/requestBodies/RDF'\n      responses:\n        '200':\n          description: Successful operation\n        '405':\n          description: Validation exception\n  /catalog/{id}:\n    parameters:\n      - name: id\n        in: path\n        required: true\n        description: Catalog identifier\n        schema:\n          type: string\n        example: 'catalog01'\n    get:\n      tags:\n        - Metadata\n      summary: Get Catalog metadata\n      operationId: fdp.api.Catalog.get\n      responses:\n        '200':\n          $ref: '#/components/responses/RDF'\n        '404':\n          description: Invalid ID supplied\n    put:\n      tags:\n        - Metadata\n      summary: Update Catalog metadta\n      operationId: fdp.api.Catalog.put\n      requestBody:\n        $ref: '#/components/requestBodies/RDF'\n      responses:\n        '200':\n          description: Successful operation\n        '404':\n          description: Invalid ID supplied\n        '405':\n          description: Validation exception\n    delete:\n      tags:\n        - Metadata\n      summary: Delete Catalog metadta\n      operationId: fdp.api.Catalog.delete\n      responses:\n        '204':\n          description: Successful operation\n        '404':\n          description: Invalid ID supplied\n  /dataset:\n    get:\n      tags:\n        - Metadata\n      summary: Get dataset list\n      operationId: fdp.api.Dataset.get_all\n      responses:\n        '200':\n          description: Successful operation\n    post:\n      tags:\n        - Metadata\n      summary: Create Dataset metadta\n      operationId: fdp.api.Dataset.post\n      requestBody:\n        $ref: '#/components/requestBodies/RDF'\n      responses:\n        '200':\n          description: Successful operation\n        '405':\n          description: Validation exception\n  /dataset/{id}:\n    parameters:\n      - name: id\n        in: path\n        required: true\n        description: Dataset identifier\n        schema:\n          type: string\n        example: 'dataset01'\n    get:\n      tags:\n        - Metadata\n      summary: Get Dataset metadata\n      operationId: fdp.api.Dataset.get\n      responses:\n        '200':\n          $ref: '#/components/responses/RDF'\n        '404':\n          description: Invalid ID supplied\n    put:\n      tags:\n        - Metadata\n      summary: Update Dataset metadta\n      operationId: fdp.api.Dataset.put\n      requestBody:\n        $ref: '#/components/requestBodies/RDF'\n      responses:\n        '200':\n          description: Successful operation\n        '404':\n          description: Invalid ID supplied\n        '405':\n          description: Validation exception\n    delete:\n      tags:\n        - Metadata\n      summary: Delete Dataset metadta\n      operationId: fdp.api.Dataset.delete\n      responses:\n        '204':\n          description: Successful operation\n        '404':\n          description: Invalid ID supplied\n  /distribution:\n    get:\n      tags:\n        - Metadata\n      summary: Get distribution list\n      operationId: fdp.api.Distribution.get_all\n      responses:\n        '200':\n          description: Successful operation\n    post:\n      tags:\n        - Metadata\n      summary: Create Distribution metadta\n      operationId: fdp.api.Distribution.post\n      requestBody:\n        $ref: '#/components/requestBodies/RDF'\n      responses:\n        '200':\n          description: Successful operation\n        '405':\n          description: Validation exception\n  /distribution/{id}:\n    parameters:\n      - name: id\n        in: path\n        required: true\n        description: Distribution identifier\n        schema:\n          type: string\n        example: 'distribution01'\n    get:\n      tags:\n        - Metadata\n      summary: Get Distribution metadata\n      operationId: fdp.api.Distribution.get\n      responses:\n        '200':\n          $ref: '#/components/responses/RDF'\n        '404':\n          description: Invalid ID supplied\n    put:\n      tags:\n        - Metadata\n      summary: Update Distribution metadta\n      operationId: fdp.api.Distribution.put\n      requestBody:\n        $ref: '#/components/requestBodies/RDF'\n      responses:\n        '200':\n          description: Successful operation\n        '404':\n          description: Invalid ID supplied\n        '405':\n          description: Validation exception\n    delete:\n      tags:\n        - Metadata\n      summary: Delete Distribution metadta\n      operationId: fdp.api.Distribution.delete\n      responses:\n        '204':\n          description: Successful operation\n        '404':\n          description: Invalid ID supplied\ncomponents:\n  requestBodies:\n    RDF:\n      required: true\n      content:\n        text/turtle:\n          schema:\n            {}\n        text/n3:\n          schema:\n            {}\n        application/ld+json:\n          schema:\n            {}\n        application/rdf+xml:\n          schema:\n            {}\n        application/n-triples:\n          schema:\n            {}\n  responses:\n    RDF:\n      description: Successful operation\n      content:\n        text/turtle:\n          {}\n        text/n3:\n          {}\n        application/rdf+xml:\n          {}\n        application/ld+json:\n          {}\n        application/n-triples:\n          {}",
			"canonicalURL": "/github.com/fair-data/fairdatapoint@9822696a28b74f194c2dea99163fff15e57cc28f/-/blob/fdp/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/fair-data/fairdatapoint/blob/9822696a28b74f194c2dea99163fff15e57cc28f/fdp/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/catalog\": post: requestBody: contents: unsupported content types: [application/ld+json, application/n-triples, application/rdf+xml, text/n3, text/turtle]",
	"NotImplemented": [
		"unsupported content types"
	]
}