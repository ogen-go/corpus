{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/onflow/flow"
		},
		"file": {
			"name": "access.yaml",
			"size": 0,
			"path": "openapi/access.yaml",
			"byteSize": 29865,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: \"1.0.0\"\n  title: \"Access API\"\nservers:\n  - url: https://rest-canary.onflow.org/v1/\n    description: Flow Canary\n  - url: https://rest-testnet.onflow.org/v1\n    description: Flow Testnet\n  - url: https://rest-mainnet.onflow.org/v1\n    description: Flow Mainnet\npaths:\n  /blocks:\n    get:\n      summary: Gets Blocks by Height\n      description: Get block data by the provided height range or list of heights.\n      tags:\n        - Blocks\n      parameters:\n        - description: A comma-separated list of block heights to get. This parameter is incompatible with `start_height` and `end_height`.\n          name: height\n          in: query\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/BlockHeight'\n            minItems: 1\n            uniqueItems: true\n          explode: false\n          style: form\n        - name: start_height\n          in: query\n          schema:\n            $ref: '#/components/schemas/BlockHeight'\n          required: false\n          description: The start height of the block range to get. Must be used together with `end_height`. This parameter is incompatible with `height`.\n        - name: end_height\n          in: query\n          schema:\n            $ref: '#/components/schemas/BlockHeight'\n          required: false\n          description: The ending height of the block range to get. Must be used together with `start_height`. This parameter is incompatible with `height`.\n        - $ref: '#/components/parameters/expandParam'\n        - $ref: '#/components/parameters/selectParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Block'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  /blocks/{id}:\n    get:\n      summary: Get Blocks by ID.\n      description: Get a block data or list of blocks by the provided ID or list of IDs.\n      tags:\n        - Blocks\n      parameters:\n        - description: A block ID or comma-separated list of block IDs.\n          name: id\n          in: path\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Identifier'\n            minItems: 1\n            maxItems: 50\n            uniqueItems: true\n          explode: true\n          required: true\n        - $ref: '#/components/parameters/expandParam'\n        - $ref: '#/components/parameters/selectParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Block'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  /transactions/{id}:\n    get:\n      summary: Get a Transaction by ID.\n      description: Get a transaction data by the provided transaction ID.\n      tags:\n        - Transactions\n      parameters:\n        - description: The ID of the transaction to get.\n          name: id\n          in: path\n          schema:\n            $ref: '#/components/schemas/Identifier'\n          required: true\n        - $ref: '#/components/parameters/expandParam'\n        - $ref: '#/components/parameters/selectParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transaction'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  /transaction_results/{transaction_id}:\n    get:\n      summary: Get a Transaction Result by ID.\n      description: Get transaction result by the transaction result ID.\n      tags:\n        - Transactions\n      parameters:\n        - description: The transaction ID of the transaction result.\n          name: transaction_id\n          in: path\n          schema:\n            $ref: '#/components/schemas/Identifier'\n          required: true\n        - $ref: '#/components/parameters/expandParam'\n        - $ref: '#/components/parameters/selectParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionResult'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  /transactions:\n    post:\n      summary: Submit a Transaction\n      description: Send a new signed transaction payload to the network with [required transaction fields](https://docs.onflow.org/flow-go-sdk/#transactions).\n      tags:\n        - Transactions\n      requestBody:\n        description: The transaction to submit.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - script\n                - arguments\n                - reference_block_id\n                - gas_limit\n                - payer\n                - proposal_key\n                - authorizers\n                - payload_signatures\n                - envelope_signatures\n              properties:\n                script:\n                  type: string\n                  format: base64\n                  description: Base64 encoded content of the Cadence script.\n                arguments:\n                  type: array\n                  description: A list of arguments each encoded as Base64 passed in the [JSON-Cadence interchange format](https://docs.onflow.org/cadence/json-cadence-spec/).\n                  items:\n                    type: string\n                    format: base64\n                reference_block_id:\n                  $ref: '#/components/schemas/Identifier'\n                gas_limit:\n                  type: string\n                  format: uint64\n                  description: The limit on the amount of computation a transaction is allowed to preform.\n                payer:\n                  $ref: '#/components/schemas/Address'\n                proposal_key:\n                  $ref: '#/components/schemas/ProposalKey'\n                authorizers:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Address'\n                payload_signatures:\n                  type: array\n                  description: A list of Base64 encoded signatures.\n                  items:\n                    $ref: '#/components/schemas/TransactionSignature'\n                envelope_signatures:\n                  type: array\n                  description: A list of Base64 encoded signatures.\n                  items:\n                    $ref: '#/components/schemas/TransactionSignature'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transaction'\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n              description: The URI to the newly submitted transaction.\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  /collections/{id}:\n    get:\n      summary: Gets a Collection by ID\n      description: Get a collection by provided collection ID.\n      tags:\n        - Collections\n      parameters:\n        - name: id\n          in: path\n          schema:\n            $ref: '#/components/schemas/Identifier'\n          required: true\n          description: The collection ID.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Collection'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  /execution_results:\n    get:\n      summary: Get Execution Results by Block ID\n      description: Get execution result by provided block ID or multiple block IDs provided as comma-seperated list.\n      tags:\n        - Execution Results\n      parameters:\n        - description: Single ID or comma-separated list of block IDs.\n          name: block_id\n          in: query\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Identifier'\n            minItems: 1\n            uniqueItems: true\n          explode: false\n          style: form\n          required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ExecutionResult'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  /execution_results/{id}:\n    get:\n      summary: Get Execution Result by ID\n      description: Get execution result by provided execution result ID.\n      tags:\n        - Execution Results\n      parameters:\n        - name: id\n          in: path\n          schema:\n            $ref: '#/components/schemas/Identifier'\n          required: true\n          description: The ID of the execution result.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExecutionResult'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  /accounts/{address}:\n    get:\n      summary: Get an Account By Address\n      description: Get an account data by provided address in latest \"sealed\" block or by provided block height.\n      tags:\n        - Accounts\n      parameters:\n        - name: address\n          in: path\n          schema:\n            $ref: '#/components/schemas/Address'\n          required: true\n          description: The address of the account.\n        - name: block_height\n          in: query\n          schema:\n            $ref: '#/components/schemas/BlockHeight'\n          required: false\n          description: The block height to query for the account details at the \"sealed\" is used by default.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  /scripts:\n    post:\n      summary: Execute a Cadence Script\n      description: Executes a read-only Cadence script against the execution state at the given block height or ID. If block height or ID is not specified, then the script is executed at the latest sealed block height.\n      tags:\n        - Scripts\n      parameters:\n        - description: The ID of the block to execute the script against. For a specific block height, use `block_height` instead.\n          name: block_id\n          in: query\n          schema:\n            $ref: '#/components/schemas/Identifier'\n          required: false\n        - description: The height of the block to execute the script against. This parameter is incompatible with `block_id`.\n          name: block_height\n          in: query\n          schema:\n            $ref: '#/components/schemas/BlockHeight'\n          required: false\n      requestBody:\n        description: The script to execute.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                script:\n                  type: string\n                  format: base64\n                  description: Base64 encoded content of the Cadence script.\n                arguments:\n                  type: array\n                  description: An list of arguments each encoded as Base64 passed in the [JSON-Cadence interchange format](https://docs.onflow.org/cadence/json-cadence-spec/).\n                  items:\n                    type: string\n                    format: byte\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  value:\n                    type: string\n                    format: byte\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  /events:\n    get:\n      summary: Get Events\n      description: Query on-chain events by their name in the specified blocks heights or block IDs.\n      tags:\n        - Events\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockEvents'\n          description: OK\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n      parameters:\n        - name: type\n          in: query\n          description: The event type is [identifier of the event as defined here](https://docs.onflow.org/core-contracts/flow-token/#events).\n          required: true\n          deprecated: false\n          schema:\n            $ref: '#/components/schemas/EventType'\n          allowEmptyValue: false\n        - name: start_height\n          in: query\n          required: false\n          description: The start height of the block range for events. Must be used together with `end_height`. This parameter is incompatible with `block_ids`.\n          schema:\n            $ref: '#/components/schemas/BlockHeight'\n          allowEmptyValue: false\n        - name: end_height\n          in: query\n          required: false\n          description: The end height of the block range for events. Must be used together with `start_height`. This parameter is incompatible with `block_ids`.\n          schema:\n            $ref: '#/components/schemas/BlockHeight'\n          allowEmptyValue: false\n        - name: block_ids\n          description: List of block IDs. Either provide this parameter or both height parameters. This parameter is incompatible with heights parameters.\n          in: query\n          style: form\n          required: false\n          explode: false\n          allowEmptyValue: false\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Identifier'\n            minItems: 1\n            maxItems: 50\n            uniqueItems: true\n        - $ref: '#/components/parameters/selectParam'\ncomponents:\n  parameters:\n    expandParam:\n      description: A comma-separated list indicating which properties of the content to expand.\n      name: expand\n      in: query\n      schema:\n        type: array\n        items:\n          type: string\n        minItems: 1\n        uniqueItems: true\n      explode: false\n      style: form\n      required: false\n    selectParam:\n      description: A comma-separated list indicating which properties of the content to return.\n      name: select\n      in: query\n      schema:\n        type: array\n        items:\n          type: string\n        minItems: 1\n        uniqueItems: true\n      explode: false\n      style: form\n      required: false\n  schemas:\n    Account:\n      type: object\n      required:\n        - address\n        - balance\n        - _expandable\n      properties:\n        address:\n          $ref: '#/components/schemas/Address'\n        balance:\n          type: string\n          format: uint64\n          description: Flow balance of the account.\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/AccountPublicKey'\n          minItems: 1\n          uniqueItems: true\n        contracts:\n          type: object\n          additionalProperties:\n            type: string\n            format: byte\n        _expandable:\n          type: object\n          properties:\n            keys:\n              type: string\n            contracts:\n              type: string\n        _links:\n          $ref: '#/components/schemas/Links'\n    AccountPublicKey:\n      type: object\n      required:\n        - index\n        - public_key\n        - signing_algorithm\n        - hashing_algorithm\n        - sequence_number\n        - weight\n        - revoked\n      properties:\n        index:\n          type: string\n          format: uint64\n          description: Index of the public key.\n        public_key:\n          type: string\n          format: hex\n          description: Hex encoded public key.\n        signing_algorithm:\n          $ref: '#/components/schemas/SigningAlgorithm'\n        hashing_algorithm:\n          $ref: '#/components/schemas/HashingAlgorithm'\n        sequence_number:\n          type: string\n          format: uint64\n          description: Current account sequence number.\n        weight:\n          type: string\n          format: uint64\n          description: Weight of the key.\n        revoked:\n          type: boolean\n          description: Flag indicating whether the key is active or not.\n    SigningAlgorithm:\n      type: string\n      enum:\n        - BLSBLS12381\n        - ECDSAP256\n        - ECDSASecp256k1\n    HashingAlgorithm:\n      type: string\n      enum:\n        - SHA2_256\n        - SHA2_384\n        - SHA3_256\n        - SHA3_384\n        - KMAC128\n    Collection:\n      type: object\n      required:\n        - id\n        - _expandable\n      properties:\n        id:\n          $ref: '#/components/schemas/Identifier'\n        transactions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Transaction'\n        _expandable:\n          type: object\n          properties:\n            transactions:\n              type: array\n              items:\n                type: string\n                format: uri\n        _links:\n          $ref: '#/components/schemas/Links'\n    Transaction:\n      type: object\n      required:\n        - id\n        - script\n        - arguments\n        - reference_block_id\n        - gas_limit\n        - payer\n        - proposal_key\n        - authorizers\n        - payload_signatures\n        - envelope_signatures\n        - _expandable\n      properties:\n        id:\n          $ref: '#/components/schemas/Identifier'\n        script:\n          type: string\n          format: base64\n          description: Base64 encoded Cadence script.\n        arguments:\n          type: array\n          description: Array of Base64 encoded arguments with in [JSON-Cadence interchange format](https://docs.onflow.org/cadence/json-cadence-spec/).\n          items:\n            type: string\n            format: byte\n        reference_block_id:\n          $ref: '#/components/schemas/Identifier'\n        gas_limit:\n          type: string\n          format: uint64\n          description: The limit on the amount of computation a transaction is allowed to preform.\n        payer:\n          $ref: '#/components/schemas/Address'\n        proposal_key:\n          $ref: '#/components/schemas/ProposalKey'\n        authorizers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Address'\n        payload_signatures:\n          type: array\n          items:\n            $ref: '#/components/schemas/TransactionSignature'\n        envelope_signatures:\n          type: array\n          items:\n            $ref: '#/components/schemas/TransactionSignature'\n        result:\n          $ref: '#/components/schemas/TransactionResult'\n        _expandable:\n          type: object\n          properties:\n            result:\n              type: string\n              format: uri\n        _links:\n          $ref: '#/components/schemas/Links'\n    ProposalKey:\n      type: object\n      required:\n        - address\n        - key_index\n        - sequence_number\n      properties:\n        address:\n          $ref: '#/components/schemas/Address'\n        key_index:\n          type: string\n          format: uint64\n        sequence_number:\n          type: string\n          format: uint64\n    TransactionSignature:\n      description: Base64 encoded signature.\n      type: object\n      required:\n        - address\n        - key_index\n        - signature\n      properties:\n        address:\n          $ref: '#/components/schemas/Address'\n        key_index:\n          type: string\n          format: uint64\n        signature:\n          $ref: '#/components/schemas/Signature'\n    TransactionResult:\n      type: object\n      required:\n        - block_id\n        - status\n        - status_code\n        - error_message\n        - computation_used\n        - events\n      properties:\n        block_id:\n          $ref: '#/components/schemas/Identifier'\n        execution:\n          $ref: '#/components/schemas/TransactionExecution'\n        status:\n          $ref: '#/components/schemas/TransactionStatus'\n        status_code:\n          type: integer\n        error_message:\n          type: string\n          description: Provided transaction error in case the transaction wasn't successful.\n        computation_used:\n          type: string\n          format: uint64\n        events:\n          type: array\n          items:\n            $ref: '#/components/schemas/Event'\n        _links:\n          $ref: '#/components/schemas/Links'\n    TransactionExecution:\n      type: string\n      description: This value indicates whether the transaction execution succeded or not, this value should be checked when determining transaction success. \n      enum:\n        - Pending\n        - Success\n        - Failure\n    TransactionStatus:\n      type: string\n      description: This value indicates the state of the transaction execution. Only sealed and expired are final and immutable states.\n      enum:\n        - Pending\n        - Finalized\n        - Executed\n        - Sealed\n        - Expired\n    Block:\n      type: object\n      required:\n        - header\n        - _expandable\n      properties:\n        header:\n          $ref: '#/components/schemas/BlockHeader'\n        payload:\n          $ref: '#/components/schemas/BlockPayload'\n        execution_result:\n          $ref: '#/components/schemas/ExecutionResult'\n        _expandable:\n          type: object\n          properties:\n            payload:\n              type: string\n            execution_result:\n              type: string\n              format: uri\n        _links:\n          $ref: '#/components/schemas/Links'\n    BlockHeader:\n      type: object\n      required:\n        - id\n        - parent_id\n        - height\n        - timestamp\n        - parent_voter_signature\n      properties:\n        id:\n          $ref: '#/components/schemas/Identifier'\n        parent_id:\n          $ref: '#/components/schemas/Identifier'\n        height:\n          type: string\n          format: uint64\n        timestamp:\n          type: string\n          format: date-time\n        parent_voter_signature:\n          $ref: '#/components/schemas/Signature'\n    BlockPayload:\n      type: object\n      required:\n        - collection_guarantees\n        - block_seals\n      properties:\n        collection_guarantees:\n          type: array\n          items:\n            $ref: '#/components/schemas/CollectionGuarantee'\n          uniqueItems: true\n        block_seals:\n          type: array\n          items:\n            $ref: '#/components/schemas/BlockSeal'\n          uniqueItems: true\n    CollectionGuarantee:\n      type: object\n      required:\n        - collection_id\n        - signer_ids\n        - signature\n      properties:\n        collection_id:\n          $ref: '#/components/schemas/Identifier'\n        signer_ids:\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n          minItems: 1\n          uniqueItems: true\n        signature:\n          $ref: '#/components/schemas/Signature'\n    BlockSeal:\n      type: object\n      required:\n        - block_id\n        - result_id\n        - final_state\n        - aggregated_approval_signatures\n      properties:\n        block_id:\n          $ref: '#/components/schemas/Identifier'\n        result_id:\n          $ref: '#/components/schemas/Identifier'\n        final_state:\n          $ref: '#/components/schemas/StateCommitment'\n        aggregated_approval_signatures:\n          type: array\n          items:\n            $ref: '#/components/schemas/AggregatedSignature'\n          minItems: 1\n          uniqueItems: true\n    StateCommitment:\n      description: The root hash of the state tree.\n      type: string\n      format: hexadecimal\n      pattern: '[a-fA-F0-9]{64}'\n    AggregatedSignature:\n      type: object\n      required:\n        - verifier_signatures\n        - signer_ids\n      properties:\n        verifier_signatures:\n          type: array\n          items:\n            $ref: '#/components/schemas/Signature'\n          minItems: 1\n          uniqueItems: true\n        signer_ids:\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n          minItems: 1\n          uniqueItems: true\n    ExecutionResult:\n      type: object\n      required:\n        - id\n        - block_id\n        - events\n        - previous_result_id\n      properties:\n        id:\n          $ref: '#/components/schemas/Identifier'\n        block_id:\n          $ref: '#/components/schemas/Identifier'\n        events:\n          type: array\n          items:\n            $ref: '#/components/schemas/Event'\n        chunks:\n          type: array\n          items:\n            $ref: '#/components/schemas/Chunk'\n        previous_result_id:\n          $ref: '#/components/schemas/Identifier'\n        _links:\n          $ref: '#/components/schemas/Links'\n    BlockEvents:\n      type: object\n      properties:\n        block_id:\n          $ref: '#/components/schemas/Identifier'\n        block_height:\n          type: string\n        block_timestamp:\n          type: string\n          format: date-time\n        events:\n          type: array\n          items:\n            $ref: '#/components/schemas/Event'\n        _links:\n          $ref: '#/components/schemas/Links'\n    Event:\n      type: object\n      required:\n        - type\n        - transaction_id\n        - transaction_index\n        - event_index\n        - payload\n      properties:\n        type:\n          $ref: '#/components/schemas/EventType'\n        transaction_id:\n          $ref: '#/components/schemas/Identifier'\n        transaction_index:\n          type: string\n          format: uint64\n        event_index:\n          type: string\n          format: uint64\n        payload:\n          type: string\n          format: byte\n    BlockHeight:\n      oneOf:\n        - type: string\n          format: uint64\n        - type: string\n          enum:\n            - final\n            - sealed\n    EventType:\n      description: The qualified event type.\n      type: string\n    Address:\n      description: The 8-byte address of an account.\n      type: string\n      format: hexadecimal\n      pattern: '[a-fA-F0-9]{16}'\n    Identifier:\n      description: A 32-byte unique identifier for an entity.\n      type: string\n      format: hexadecimal\n      pattern: '[a-fA-F0-9]{64}'\n    Signature:\n      description: A variable length signature.\n      type: string\n      format: byte\n    Error:\n      type: object\n      properties:\n        code:\n          type: integer\n        message:\n          type: string\n    Chunk:\n      type: object\n      required:\n        - block_id\n        - collection_index\n        - start_state\n        - end_state\n        - event_collection\n        - index\n        - number_of_transactions\n        - total_computation_used\n      properties:\n        block_id:\n          $ref: '#/components/schemas/Identifier'\n        collection_index:\n          type: string\n          format: uint64\n        start_state:\n          type: string\n          format: byte\n        end_state:\n          type: string\n          format: byte\n        event_collection:\n          type: string\n          format: byte\n        index:\n          type: string\n          format: uint64\n        number_of_transactions:\n          type: string\n          format: uint64\n        total_computation_used:\n          type: string\n          format: uint64\n    Links:\n      type: object\n      properties:\n        _self:\n          type: string\n  responses:\n    400BadRequest:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    404NotFound:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    500InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\nexternalDocs:\n  description: \"Find out more about the Access API\"\n  url: \"https://docs.onflow.org/access-api/\"\n",
			"canonicalURL": "/github.com/onflow/flow@a90ed15cccd3b5bf1a8da3e47a2e0f7cc7f6e8bb/-/blob/openapi/access.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/onflow/flow/blob/a90ed15cccd3b5bf1a8da3e47a2e0f7cc7f6e8bb/openapi/access.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: \"block_height\": oneOf: oneOf BlockHeight: variant String: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}