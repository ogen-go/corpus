{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Mermade/openapi3-examples"
		},
		"file": {
			"name": "example2_from_._Fixed_multipart.md.yaml",
			"size": 0,
			"path": "3.0/pass/gluecon/example2_from_._Fixed_multipart.md.yaml",
			"byteSize": 1243,
			"content": "openapi: 3.0.0\ninfo:\n  title: Example of multi-part form\n  version: 1.0.0\npaths:\n  '/submit':\n    post:\n      requestBody:\n        content:\n          multipart/mixed:\n            schema:\n              type: object\n              properties:\n                id:\n                  # default is text/plain\n                  type: string\n                  format: uuid\n                address:\n                  # default is application/json\n                  type: object\n                  properties: {}\n                historyMetadata:\n                  # need to declare XML format!\n                  description: metadata in XML format\n                  type: object\n                  properties: {}\n                profileImage:\n                  # default is application/octet-stream, need to declare an image type only!\n                  type: string\n                  format: binary\n            encoding:\n              historyMetadata:\n                # require XML Content-Type in utf-8 encoding\n                contentType: application/xml; charset=utf-8\n              profileImage:\n                # only accept png/jpeg\n                contentType: image/png, image/jpeg\n      responses:\n        '200':\n          description: Success!\n",
			"canonicalURL": "/github.com/Mermade/openapi3-examples@9c2997e1a25919a8182080cc43a4db06d2dc775d/-/blob/3.0/pass/gluecon/example2_from_._Fixed_multipart.md.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Mermade/openapi3-examples/blob/9c2997e1a25919a8182080cc43a4db06d2dc775d/3.0/pass/gluecon/example2_from_._Fixed_multipart.md.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/submit\": post: requestBody: contents: unsupported content types: [multipart/mixed]",
	"NotImplemented": [
		"unsupported content types"
	]
}