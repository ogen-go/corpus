{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tkestack/tke"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "pkg/registry/harbor/client/api/swagger.yaml",
			"byteSize": 205920,
			"content": "openapi: 3.0.1\ninfo:\n  title: Harbor API\n  description: These APIs provide services for manipulating Harbor project.\n  version: \"2.0\"\nservers:\n- url: http://localhost/api/v2.0\n- url: https://localhost/api/v2.0\nsecurity:\n- basic: []\n- {}\npaths:\n  /projects:\n    get:\n      tags:\n      - project\n      summary: List projects\n      description: This endpoint returns projects created by Harbor.\n      operationId: listProjects\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: page\n        in: query\n        description: The page number\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int64\n          default: 1\n      - name: page_size\n        in: query\n        description: The size of per page\n        required: false\n        style: form\n        explode: true\n        schema:\n          maximum: 100\n          type: integer\n          format: int64\n          default: 10\n      - name: name\n        in: query\n        description: The name of project.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: public\n        in: query\n        description: The project is public or private.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n          format: int32\n      - name: owner\n        in: query\n        description: The name of project owner.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Return all matched projects.\n          headers:\n            X-Total-Count:\n              description: The total count of projects\n              style: simple\n              explode: false\n              schema:\n                type: integer\n            Link:\n              description: Link refers to the previous page and next page\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Project'\n                x-content-type: application/json\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    post:\n      tags:\n      - project\n      summary: Create a new project.\n      description: This endpoint is for user to create a new project.\n      operationId: createProject\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      requestBody:\n        description: New created project.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProjectReq'\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n            Location:\n              description: The location of the resource\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"409\":\n          description: Conflict\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n      x-codegen-request-body-name: project\n    head:\n      tags:\n      - project\n      summary: Check if the project name user provided already exists.\n      description: This endpoint is used to check if the project name provided already\n        exist.\n      operationId: headProject\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: query\n        description: Project name for checking exists.\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_id}:\n    get:\n      tags:\n      - project\n      summary: Return specific project detail information\n      description: This endpoint returns specific project information by project ID.\n      operationId: getProject\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_id\n        in: path\n        description: The ID of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: integer\n          format: int64\n      responses:\n        \"200\":\n          description: Return matched project information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    put:\n      tags:\n      - project\n      summary: Update properties for a selected project.\n      description: This endpoint is aimed to update the properties of a project.\n      operationId: updateProject\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_id\n        in: path\n        description: The ID of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Updates of project.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProjectReq'\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n      x-codegen-request-body-name: project\n    delete:\n      tags:\n      - project\n      summary: Delete project by projectID\n      description: This endpoint is aimed to delete project by project ID.\n      operationId: deleteProject\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_id\n        in: path\n        description: The ID of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: integer\n          format: int64\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"412\":\n          description: Precondition failed\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_id}/_deletable:\n    get:\n      tags:\n      - project\n      summary: Get the deletable status of the project\n      description: Get the deletable status of the project\n      operationId: getProjectDeletable\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_id\n        in: path\n        description: The ID of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: integer\n          format: int64\n      responses:\n        \"200\":\n          description: Return deletable status of the project.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectDeletable'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_id}/summary:\n    get:\n      tags:\n      - project\n      summary: Get summary of the project.\n      description: Get summary of the project.\n      operationId: getProjectSummary\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_id\n        in: path\n        description: The ID of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: integer\n          format: int64\n      responses:\n        \"200\":\n          description: Get summary of the project successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectSummary'\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_name}/repositories:\n    get:\n      tags:\n      - repository\n      summary: List repositories\n      description: List repositories of the specified project\n      operationId: listRepositories\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: q\n        in: query\n        description: Query string to query resources. Supported query patterns are\n          \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"list with\n          union releationship(k={v1 v2 v3})\" and \"list with intersetion relationship(k=(v1\n          v2 v3))\". The value of range and list can be string(enclosed by \" or '),\n          integer or time(in format \"2020-04-09 02:36:00\"). All of these query patterns\n          should be put in the query string \"q=xxx\" and splitted by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: page\n        in: query\n        description: The page number\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int64\n          default: 1\n      - name: page_size\n        in: query\n        description: The size of per page\n        required: false\n        style: form\n        explode: true\n        schema:\n          maximum: 100\n          type: integer\n          format: int64\n          default: 10\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Total-Count:\n              description: The total count of repositories\n              style: simple\n              explode: false\n              schema:\n                type: integer\n            Link:\n              description: Link refers to the previous page and next page\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Repository'\n                x-content-type: application/json\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_name}/repositories/{repository_name}:\n    get:\n      tags:\n      - repository\n      summary: Get repository\n      description: Get the repository specified by name\n      operationId: getRepository\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: repository_name\n        in: path\n        description: The name of the repository. If it contains slash, encode it with\n          URL encoding. e.g. a/b -\u003e a%252Fb\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Repository'\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    put:\n      tags:\n      - repository\n      summary: Update repository\n      description: Update the repository specified by name\n      operationId: updateRepository\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: repository_name\n        in: path\n        description: The name of the repository. If it contains slash, encode it with\n          URL encoding. e.g. a/b -\u003e a%252Fb\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        description: The JSON object of repository.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Repository'\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n      x-codegen-request-body-name: repository\n    delete:\n      tags:\n      - repository\n      summary: Delete repository\n      description: Delete the repository specified by name\n      operationId: deleteRepository\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: repository_name\n        in: path\n        description: The name of the repository. If it contains slash, encode it with\n          URL encoding. e.g. a/b -\u003e a%252Fb\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_name}/repositories/{repository_name}/artifacts:\n    get:\n      tags:\n      - artifact\n      summary: List artifacts\n      description: List artifacts under the specific project and repository. Except\n        the basic properties, the other supported queries in \"q\" includes \"tags=*\"\n        to list only tagged artifacts, \"tags=nil\" to list only untagged artifacts,\n        \"tags=~v\" to list artifacts whose tag fuzzy matches \"v\", \"tags=v\" to list\n        artifact whose tag exactly matches \"v\", \"labels=(id1, id2)\" to list artifacts\n        that both labels with id1 and id2 are added to\n      operationId: listArtifacts\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: repository_name\n        in: path\n        description: The name of the repository. If it contains slash, encode it with\n          URL encoding. e.g. a/b -\u003e a%252Fb\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: q\n        in: query\n        description: Query string to query resources. Supported query patterns are\n          \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"list with\n          union releationship(k={v1 v2 v3})\" and \"list with intersetion relationship(k=(v1\n          v2 v3))\". The value of range and list can be string(enclosed by \" or '),\n          integer or time(in format \"2020-04-09 02:36:00\"). All of these query patterns\n          should be put in the query string \"q=xxx\" and splitted by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: page\n        in: query\n        description: The page number\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int64\n          default: 1\n      - name: page_size\n        in: query\n        description: The size of per page\n        required: false\n        style: form\n        explode: true\n        schema:\n          maximum: 100\n          type: integer\n          format: int64\n          default: 10\n      - name: with_tag\n        in: query\n        description: Specify whether the tags are included inside the returning artifacts\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n          default: true\n      - name: with_label\n        in: query\n        description: Specify whether the labels are included inside the returning\n          artifacts\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n          default: false\n      - name: with_scan_overview\n        in: query\n        description: Specify whether the scan overview is included inside the returning\n          artifacts\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n          default: false\n      - name: with_signature\n        in: query\n        description: Specify whether the signature is included inside the tags of\n          the returning artifacts. Only works when setting \"with_tag=true\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n          default: false\n      - name: with_immutable_status\n        in: query\n        description: Specify whether the immutable status is included inside the tags\n          of the returning artifacts. Only works when setting \"with_tag=true\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n          default: false\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Total-Count:\n              description: The total count of artifacts\n              style: simple\n              explode: false\n              schema:\n                type: integer\n            Link:\n              description: Link refers to the previous page and next page\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Artifact'\n                x-content-type: application/json\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    post:\n      tags:\n      - artifact\n      summary: Copy artifact\n      description: Copy the artifact specified in the \"from\" parameter to the repository.\n      operationId: CopyArtifact\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: repository_name\n        in: path\n        description: The name of the repository. If it contains slash, encode it with\n          URL encoding. e.g. a/b -\u003e a%252Fb\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: from\n        in: query\n        description: The artifact from which the new artifact is copied from, the\n          format should be \"project/repository:tag\" or \"project/repository@digest\".\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n            Location:\n              description: The location of the resource\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"405\":\n          description: Method not allowed\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}:\n    get:\n      tags:\n      - artifact\n      summary: Get the specific artifact\n      description: Get the artifact specified by the reference under the project and\n        repository. The reference can be digest or tag.\n      operationId: getArtifact\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: repository_name\n        in: path\n        description: The name of the repository. If it contains slash, encode it with\n          URL encoding. e.g. a/b -\u003e a%252Fb\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: reference\n        in: path\n        description: The reference of the artifact, can be digest or tag\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: page\n        in: query\n        description: The page number\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int64\n          default: 1\n      - name: page_size\n        in: query\n        description: The size of per page\n        required: false\n        style: form\n        explode: true\n        schema:\n          maximum: 100\n          type: integer\n          format: int64\n          default: 10\n      - name: with_tag\n        in: query\n        description: Specify whether the tags are inclued inside the returning artifacts\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n          default: true\n      - name: with_label\n        in: query\n        description: Specify whether the labels are inclued inside the returning artifacts\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n          default: false\n      - name: with_scan_overview\n        in: query\n        description: Specify whether the scan overview is inclued inside the returning\n          artifacts\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n          default: false\n      - name: with_signature\n        in: query\n        description: Specify whether the signature is inclued inside the returning\n          artifacts\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n          default: false\n      - name: with_immutable_status\n        in: query\n        description: Specify whether the immutable status is inclued inside the tags\n          of the returning artifacts. Only works when setting \"with_tag=true\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n          default: false\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Artifact'\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    delete:\n      tags:\n      - artifact\n      summary: Delete the specific artifact\n      description: Delete the artifact specified by the reference under the project\n        and repository. The reference can be digest or tag\n      operationId: deleteArtifact\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: repository_name\n        in: path\n        description: The name of the repository. If it contains slash, encode it with\n          URL encoding. e.g. a/b -\u003e a%252Fb\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: reference\n        in: path\n        description: The reference of the artifact, can be digest or tag\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan:\n    post:\n      tags:\n      - scan\n      summary: Scan the artifact\n      description: Scan the specified artifact\n      operationId: scanArtifact\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: repository_name\n        in: path\n        description: The name of the repository. If it contains slash, encode it with\n          URL encoding. e.g. a/b -\u003e a%252Fb\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: reference\n        in: path\n        description: The reference of the artifact, can be digest or tag\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"202\":\n          description: Accepted\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan/{report_id}/log:\n    get:\n      tags:\n      - scan\n      summary: Get the log of the scan report\n      description: Get the log of the scan report\n      operationId: getReportLog\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: repository_name\n        in: path\n        description: The name of the repository. If it contains slash, encode it with\n          URL encoding. e.g. a/b -\u003e a%252Fb\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: reference\n        in: path\n        description: The reference of the artifact, can be digest or tag\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: report_id\n        in: path\n        description: The report id to get the log\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Successfully get scan log file\n          content:\n            text/plain:\n              schema:\n                type: string\n                x-content-type: text/plain\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/tags:\n    get:\n      tags:\n      - artifact\n      summary: List tags\n      description: List tags of the specific artifact\n      operationId: listTags\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: repository_name\n        in: path\n        description: The name of the repository. If it contains slash, encode it with\n          URL encoding. e.g. a/b -\u003e a%252Fb\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: reference\n        in: path\n        description: The reference of the artifact, can be digest or tag\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: q\n        in: query\n        description: Query string to query resources. Supported query patterns are\n          \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"list with\n          union releationship(k={v1 v2 v3})\" and \"list with intersetion relationship(k=(v1\n          v2 v3))\". The value of range and list can be string(enclosed by \" or '),\n          integer or time(in format \"2020-04-09 02:36:00\"). All of these query patterns\n          should be put in the query string \"q=xxx\" and splitted by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: page\n        in: query\n        description: The page number\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int64\n          default: 1\n      - name: page_size\n        in: query\n        description: The size of per page\n        required: false\n        style: form\n        explode: true\n        schema:\n          maximum: 100\n          type: integer\n          format: int64\n          default: 10\n      - name: with_signature\n        in: query\n        description: Specify whether the signature is included inside the returning\n          tags\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n          default: false\n      - name: with_immutable_status\n        in: query\n        description: Specify whether the immutable status is included inside the returning\n          tags\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n          default: false\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Total-Count:\n              description: The total count of tags\n              style: simple\n              explode: false\n              schema:\n                type: integer\n            Link:\n              description: Link refers to the previous page and next page\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Tag'\n                x-content-type: application/json\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    post:\n      tags:\n      - artifact\n      summary: Create tag\n      description: Create a tag for the specified artifact\n      operationId: createTag\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: repository_name\n        in: path\n        description: The name of the repository. If it contains slash, encode it with\n          URL encoding. e.g. a/b -\u003e a%252Fb\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: reference\n        in: path\n        description: The reference of the artifact, can be digest or tag\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        description: The JSON object of tag.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tag'\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n            Location:\n              description: The location of the resource\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"405\":\n          description: Method not allowed\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"409\":\n          description: Conflict\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n      x-codegen-request-body-name: tag\n  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/tags/{tag_name}:\n    delete:\n      tags:\n      - artifact\n      summary: Delete tag\n      description: Delete the tag of the specified artifact\n      operationId: deleteTag\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: repository_name\n        in: path\n        description: The name of the repository. If it contains slash, encode it with\n          URL encoding. e.g. a/b -\u003e a%252Fb\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: reference\n        in: path\n        description: The reference of the artifact, can be digest or tag\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: tag_name\n        in: path\n        description: The name of the tag\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/additions/{addition}:\n    get:\n      tags:\n      - artifact\n      summary: Get the addition of the specific artifact\n      description: Get the addition of the artifact specified by the reference under\n        the project and repository.\n      operationId: getAddition\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: repository_name\n        in: path\n        description: The name of the repository. If it contains slash, encode it with\n          URL encoding. e.g. a/b -\u003e a%252Fb\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: reference\n        in: path\n        description: The reference of the artifact, can be digest or tag\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: addition\n        in: path\n        description: The type of addition.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - build_history\n          - values.yaml\n          - readme.md\n          - dependencies\n          - vulnerabilities\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            Content-Type:\n              description: The content type of the addition\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: string\n                x-content-type: application/json\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/labels:\n    post:\n      tags:\n      - artifact\n      summary: Add label to artifact\n      description: Add label to the specified artiact.\n      operationId: addLabel\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: repository_name\n        in: path\n        description: The name of the repository. If it contains slash, encode it with\n          URL encoding. e.g. a/b -\u003e a%252Fb\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: reference\n        in: path\n        description: The reference of the artifact, can be digest or tag\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        description: The label that added to the artifact. Only the ID property is\n          needed.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Label'\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"409\":\n          description: Conflict\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n      x-codegen-request-body-name: label\n  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/labels/{label_id}:\n    delete:\n      tags:\n      - artifact\n      summary: Remove label from artifact\n      description: Remove the label from the specified artiact.\n      operationId: removeLabel\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: repository_name\n        in: path\n        description: The name of the repository. If it contains slash, encode it with\n          URL encoding. e.g. a/b -\u003e a%252Fb\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: reference\n        in: path\n        description: The reference of the artifact, can be digest or tag\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: label_id\n        in: path\n        description: The ID of the label that removed from the artifact.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: integer\n          format: int64\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"409\":\n          description: Conflict\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /audit-logs:\n    get:\n      tags:\n      - auditlog\n      summary: Get recent logs of the projects which the user is a member of\n      description: |\n        This endpoint let user see the recent operation logs of the projects which he is member of\n      operationId: listAuditLogs\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: q\n        in: query\n        description: Query string to query resources. Supported query patterns are\n          \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"list with\n          union releationship(k={v1 v2 v3})\" and \"list with intersetion relationship(k=(v1\n          v2 v3))\". The value of range and list can be string(enclosed by \" or '),\n          integer or time(in format \"2020-04-09 02:36:00\"). All of these query patterns\n          should be put in the query string \"q=xxx\" and splitted by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: page\n        in: query\n        description: The page number\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int64\n          default: 1\n      - name: page_size\n        in: query\n        description: The size of per page\n        required: false\n        style: form\n        explode: true\n        schema:\n          maximum: 100\n          type: integer\n          format: int64\n          default: 10\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Total-Count:\n              description: The total count of auditlogs\n              style: simple\n              explode: false\n              schema:\n                type: integer\n            Link:\n              description: Link refers to the previous page and next page\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AuditLog'\n                x-content-type: application/json\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_name}/logs:\n    get:\n      tags:\n      - project\n      summary: Get recent logs of the projects\n      description: Get recent logs of the projects\n      operationId: getLogs\n      parameters:\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: q\n        in: query\n        description: Query string to query resources. Supported query patterns are\n          \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"list with\n          union releationship(k={v1 v2 v3})\" and \"list with intersetion relationship(k=(v1\n          v2 v3))\". The value of range and list can be string(enclosed by \" or '),\n          integer or time(in format \"2020-04-09 02:36:00\"). All of these query patterns\n          should be put in the query string \"q=xxx\" and splitted by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: page\n        in: query\n        description: The page number\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int64\n          default: 1\n      - name: page_size\n        in: query\n        description: The size of per page\n        required: false\n        style: form\n        explode: true\n        schema:\n          maximum: 100\n          type: integer\n          format: int64\n          default: 10\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Total-Count:\n              description: The total count of auditlogs\n              style: simple\n              explode: false\n              schema:\n                type: integer\n            Link:\n              description: Link refers to the previous page and next page\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AuditLog'\n                x-content-type: application/json\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /p2p/preheat/providers:\n    get:\n      tags:\n      - preheat\n      summary: List P2P providers\n      description: List P2P providers\n      operationId: ListProviders\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Metadata'\n                x-content-type: application/json\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /p2p/preheat/instances/ping:\n    post:\n      tags:\n      - preheat\n      summary: Ping status of a instance.\n      description: |\n        This endpoint checks status of a instance, the instance can be given by ID or Endpoint URL (together with credential)\n      operationId: PingInstances\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      requestBody:\n        description: The JSON object of instance.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Instance'\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Instance not found (when instance is provided by ID).\n          content: {}\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n      x-codegen-request-body-name: instance\n  /p2p/preheat/instances:\n    get:\n      tags:\n      - preheat\n      summary: List P2P provider instances\n      description: List P2P provider instances\n      operationId: ListInstances\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: page\n        in: query\n        description: The page number\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int64\n          default: 1\n      - name: page_size\n        in: query\n        description: The size of per page\n        required: false\n        style: form\n        explode: true\n        schema:\n          maximum: 100\n          type: integer\n          format: int64\n          default: 10\n      - name: q\n        in: query\n        description: Query string to query resources. Supported query patterns are\n          \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"list with\n          union releationship(k={v1 v2 v3})\" and \"list with intersetion relationship(k=(v1\n          v2 v3))\". The value of range and list can be string(enclosed by \" or '),\n          integer or time(in format \"2020-04-09 02:36:00\"). All of these query patterns\n          should be put in the query string \"q=xxx\" and splitted by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Total-Count:\n              description: The total count of preheating provider instances\n              style: simple\n              explode: false\n              schema:\n                type: integer\n            Link:\n              description: Link refers to the previous page and next page\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Instance'\n                x-content-type: application/json\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    post:\n      tags:\n      - preheat\n      summary: Create p2p provider instances\n      description: Create p2p provider instances\n      operationId: CreateInstance\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      requestBody:\n        description: The JSON object of instance.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Instance'\n        required: true\n      responses:\n        \"201\":\n          description: Response to insatnce created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceCreatedResp'\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"409\":\n          description: Conflict\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n      x-codegen-request-body-name: instance\n  /p2p/preheat/instances/{preheat_instance_name}:\n    get:\n      tags:\n      - preheat\n      summary: Get a P2P provider instance\n      description: Get a P2P provider instance\n      operationId: GetInstance\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: preheat_instance_name\n        in: path\n        description: Instance Name\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Instance'\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    put:\n      tags:\n      - preheat\n      summary: Update the specified P2P provider instance\n      description: Update the specified P2P provider instance\n      operationId: UpdateInstance\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: preheat_instance_name\n        in: path\n        description: Instance Name\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        description: The instance to update\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Instance'\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceUpdateResp'\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n      x-codegen-request-body-name: instance\n    delete:\n      tags:\n      - preheat\n      summary: Delete the specified P2P provider instance\n      description: Delete the specified P2P provider instance\n      operationId: DeleteInstance\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: preheat_instance_name\n        in: path\n        description: Instance Name\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Instance ID deleted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceDeletedResp'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_name}/preheat/policies:\n    get:\n      tags:\n      - preheat\n      summary: List preheat policies\n      description: List preheat policies\n      operationId: ListPolicies\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: page\n        in: query\n        description: The page number\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int64\n          default: 1\n      - name: page_size\n        in: query\n        description: The size of per page\n        required: false\n        style: form\n        explode: true\n        schema:\n          maximum: 100\n          type: integer\n          format: int64\n          default: 10\n      - name: q\n        in: query\n        description: Query string to query resources. Supported query patterns are\n          \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"list with\n          union releationship(k={v1 v2 v3})\" and \"list with intersetion relationship(k=(v1\n          v2 v3))\". The value of range and list can be string(enclosed by \" or '),\n          integer or time(in format \"2020-04-09 02:36:00\"). All of these query patterns\n          should be put in the query string \"q=xxx\" and splitted by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: List preheat policies success\n          headers:\n            X-Total-Count:\n              description: The total count of policies\n              style: simple\n              explode: false\n              schema:\n                type: integer\n            Link:\n              description: Link refers to the previous page and next page\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PreheatPolicy'\n                x-content-type: application/json\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    post:\n      tags:\n      - preheat\n      summary: Create a preheat policy under a project\n      description: Create a preheat policy under a project\n      operationId: CreatePolicy\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        description: The policy schema info\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PreheatPolicy'\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n            Location:\n              description: The location of the resource\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"409\":\n          description: Conflict\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n      x-codegen-request-body-name: policy\n  /projects/{project_name}/preheat/policies/{preheat_policy_name}:\n    get:\n      tags:\n      - preheat\n      summary: Get a preheat policy\n      description: Get a preheat policy\n      operationId: GetPolicy\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: preheat_policy_name\n        in: path\n        description: Preheat Policy Name\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Get a preheat policy success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreheatPolicy'\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    put:\n      tags:\n      - preheat\n      summary: Update preheat policy\n      description: Update preheat policy\n      operationId: UpdatePolicy\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: preheat_policy_name\n        in: path\n        description: Preheat Policy Name\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        description: The policy schema info\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PreheatPolicy'\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"409\":\n          description: Conflict\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n      x-codegen-request-body-name: policy\n    post:\n      tags:\n      - preheat\n      summary: Manual preheat\n      description: Manual preheat\n      operationId: ManualPreheat\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: preheat_policy_name\n        in: path\n        description: Preheat Policy Name\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        description: The policy schema info\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PreheatPolicy'\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n            Location:\n              description: The location of the resource\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n      x-codegen-request-body-name: policy\n    delete:\n      tags:\n      - preheat\n      summary: Delete a preheat policy\n      description: Delete a preheat policy\n      operationId: DeletePolicy\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: preheat_policy_name\n        in: path\n        description: Preheat Policy Name\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions:\n    get:\n      tags:\n      - preheat\n      summary: List executions for the given policy\n      description: List executions for the given policy\n      operationId: ListExecutions\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: preheat_policy_name\n        in: path\n        description: Preheat Policy Name\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: page\n        in: query\n        description: The page number\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int64\n          default: 1\n      - name: page_size\n        in: query\n        description: The size of per page\n        required: false\n        style: form\n        explode: true\n        schema:\n          maximum: 100\n          type: integer\n          format: int64\n          default: 10\n      - name: q\n        in: query\n        description: Query string to query resources. Supported query patterns are\n          \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"list with\n          union releationship(k={v1 v2 v3})\" and \"list with intersetion relationship(k=(v1\n          v2 v3))\". The value of range and list can be string(enclosed by \" or '),\n          integer or time(in format \"2020-04-09 02:36:00\"). All of these query patterns\n          should be put in the query string \"q=xxx\" and splitted by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: List executions success\n          headers:\n            X-Total-Count:\n              description: The total count of executions\n              style: simple\n              explode: false\n              schema:\n                type: integer\n            Link:\n              description: Link refers to the previous page and next page\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Execution'\n                x-content-type: application/json\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}:\n    get:\n      tags:\n      - preheat\n      summary: Get a execution detail by id\n      description: Get a execution detail by id\n      operationId: GetExecution\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: preheat_policy_name\n        in: path\n        description: Preheat Policy Name\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: execution_id\n        in: path\n        description: Execution ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: integer\n      responses:\n        \"200\":\n          description: Get execution success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Execution'\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    patch:\n      tags:\n      - preheat\n      summary: Stop a execution\n      description: Stop a execution\n      operationId: StopExecution\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: preheat_policy_name\n        in: path\n        description: Preheat Policy Name\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: execution_id\n        in: path\n        description: Execution ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: integer\n      requestBody:\n        description: The data of execution\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Execution'\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content: {}\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n      x-codegen-request-body-name: execution\n  /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}/tasks:\n    get:\n      tags:\n      - preheat\n      summary: List all the related tasks for the given execution\n      description: List all the related tasks for the given execution\n      operationId: ListTasks\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: preheat_policy_name\n        in: path\n        description: Preheat Policy Name\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: execution_id\n        in: path\n        description: Execution ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: integer\n      - name: page\n        in: query\n        description: The page number\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int64\n          default: 1\n      - name: page_size\n        in: query\n        description: The size of per page\n        required: false\n        style: form\n        explode: true\n        schema:\n          maximum: 100\n          type: integer\n          format: int64\n          default: 10\n      - name: q\n        in: query\n        description: Query string to query resources. Supported query patterns are\n          \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"list with\n          union releationship(k={v1 v2 v3})\" and \"list with intersetion relationship(k=(v1\n          v2 v3))\". The value of range and list can be string(enclosed by \" or '),\n          integer or time(in format \"2020-04-09 02:36:00\"). All of these query patterns\n          should be put in the query string \"q=xxx\" and splitted by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: List tasks success\n          headers:\n            X-Total-Count:\n              description: The total count of tasks\n              style: simple\n              explode: false\n              schema:\n                type: integer\n            Link:\n              description: Link refers to the previous page and next page\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Task'\n                x-content-type: application/json\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}/tasks/{task_id}/logs:\n    get:\n      tags:\n      - preheat\n      summary: Get the log text stream of the specified task for the given execution\n      description: Get the log text stream of the specified task for the given execution\n      operationId: GetPreheatLog\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: preheat_policy_name\n        in: path\n        description: Preheat Policy Name\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: execution_id\n        in: path\n        description: Execution ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: integer\n      - name: task_id\n        in: path\n        description: Task ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: integer\n      responses:\n        \"200\":\n          description: Get log success\n          headers:\n            Content-Type:\n              description: Content type of response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            text/plain:\n              schema:\n                type: string\n                x-content-type: text/plain\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /projects/{project_name}/preheat/providers:\n    get:\n      tags:\n      - preheat\n      summary: Get all providers at project level\n      description: Get all providers at project level\n      operationId: ListProvidersUnderProject\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: project_name\n        in: path\n        description: The name of the project\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProviderUnderProject'\n                x-content-type: application/json\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"401\":\n          description: Unauthorized\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /icons/{digest}:\n    get:\n      tags:\n      - icon\n      summary: Get artifact icon\n      description: Get the artifact icon with the specified digest. As the original\n        icon image is resized and encoded before returning, the parameter \"digest\"\n        in the path doesn't match the hash of the returned content\n      operationId: getIcon\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: An unique ID for the request\n        required: false\n        style: simple\n        explode: false\n        schema:\n          minLength: 1\n          type: string\n      - name: digest\n        in: path\n        description: The digest of the resource\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Icon'\n        \"400\":\n          description: Bad request\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not found\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"500\":\n          description: Internal server error\n          headers:\n            X-Request-Id:\n              description: The ID of the corresponding request for the response\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\ncomponents:\n  schemas:\n    Errors:\n      type: object\n      properties:\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/Error'\n      description: The error array that describe the errors got during the handling\n        of request\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n          description: The error code\n        message:\n          type: string\n          description: The error message\n      description: a model for all the error response coming from harbor\n    Repository:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the repository\n          format: int64\n        project_id:\n          type: integer\n          description: The ID of the project that the repository belongs to\n          format: int64\n        name:\n          type: string\n          description: The name of the repository\n        description:\n          type: string\n          description: The description of the repository\n        artifact_count:\n          type: integer\n          description: The count of the artifacts inside the repository\n          format: int64\n        pull_count:\n          type: integer\n          description: The count that the artifact inside the repository pulled\n          format: int64\n        creation_time:\n          type: string\n          description: The creation time of the repository\n          format: date-time\n        update_time:\n          type: string\n          description: The update time of the repository\n          format: date-time\n      example:\n        creation_time: 2000-01-23T04:56:07.000+00:00\n        update_time: 2000-01-23T04:56:07.000+00:00\n        project_id: 6\n        name: name\n        artifact_count: 1\n        description: description\n        id: 0\n        pull_count: 5\n    Artifact:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the artifact\n          format: int64\n        type:\n          type: string\n          description: The type of the artifact, e.g. image, chart, etc\n        media_type:\n          type: string\n          description: The media type of the artifact\n        manifest_media_type:\n          type: string\n          description: The manifest media type of the artifact\n        project_id:\n          type: integer\n          description: The ID of the project that the artifact belongs to\n          format: int64\n        repository_id:\n          type: integer\n          description: The ID of the repository that the artifact belongs to\n          format: int64\n        digest:\n          type: string\n          description: The digest of the artifact\n        size:\n          type: integer\n          description: The size of the artifact\n          format: int64\n        icon:\n          type: string\n          description: The digest of the icon\n        push_time:\n          type: string\n          description: The push time of the artifact\n          format: date-time\n        pull_time:\n          type: string\n          description: The latest pull time of the artifact\n          format: date-time\n        extra_attrs:\n          $ref: '#/components/schemas/ExtraAttrs'\n        annotations:\n          $ref: '#/components/schemas/Annotations'\n        references:\n          type: array\n          items:\n            $ref: '#/components/schemas/Reference'\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n        addition_links:\n          $ref: '#/components/schemas/AdditionLinks'\n        labels:\n          type: array\n          items:\n            $ref: '#/components/schemas/Label'\n        scan_overview:\n          $ref: '#/components/schemas/ScanOverview'\n      example:\n        references:\n        - urls:\n          - urls\n          - urls\n          child_id: 2\n          parent_id: 5\n          annotations: null\n          child_digest: child_digest\n          platform:\n            '''os.version''': '''os.version'''\n            os: os\n            variant: variant\n            '''os.features''':\n            - '''os.features'''\n            - '''os.features'''\n            architecture: architecture\n        - urls:\n          - urls\n          - urls\n          child_id: 2\n          parent_id: 5\n          annotations: null\n          child_digest: child_digest\n          platform:\n            '''os.version''': '''os.version'''\n            os: os\n            variant: variant\n            '''os.features''':\n            - '''os.features'''\n            - '''os.features'''\n            architecture: architecture\n        addition_links:\n          key:\n            absolute: true\n            href: href\n        extra_attrs:\n          key: {}\n        icon: icon\n        annotations:\n          key: annotations\n        type: type\n        manifest_media_type: manifest_media_type\n        tags:\n        - pull_time: 2000-01-23T04:56:07.000+00:00\n          immutable: true\n          name: name\n          signed: true\n          repository_id: 9\n          id: 7\n          artifact_id: 3\n          push_time: 2000-01-23T04:56:07.000+00:00\n        - pull_time: 2000-01-23T04:56:07.000+00:00\n          immutable: true\n          name: name\n          signed: true\n          repository_id: 9\n          id: 7\n          artifact_id: 3\n          push_time: 2000-01-23T04:56:07.000+00:00\n        labels:\n        - creation_time: 2000-01-23T04:56:07.000+00:00\n          update_time: 2000-01-23T04:56:07.000+00:00\n          color: color\n          project_id: 4\n          scope: scope\n          name: name\n          description: description\n          id: 2\n        - creation_time: 2000-01-23T04:56:07.000+00:00\n          update_time: 2000-01-23T04:56:07.000+00:00\n          color: color\n          project_id: 4\n          scope: scope\n          name: name\n          description: description\n          id: 2\n        pull_time: 2000-01-23T04:56:07.000+00:00\n        size: 5\n        media_type: media_type\n        project_id: 6\n        digest: digest\n        scan_overview:\n          key:\n            severity: High\n            duration: 300\n            summary:\n              summary:\n                Critical: 5\n                High: 5\n              total: 500\n              fixable: 100\n            start_time: 2000-01-23T04:56:07.000+00:00\n            scan_status: Success\n            report_id: 5f62c830-f996-11e9-957f-0242c0a89008\n            complete_percent: 100\n            end_time: 2000-01-23T04:56:07.000+00:00\n        repository_id: 1\n        id: 0\n        push_time: 2000-01-23T04:56:07.000+00:00\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the tag\n          format: int64\n        repository_id:\n          type: integer\n          description: The ID of the repository that the tag belongs to\n          format: int64\n        artifact_id:\n          type: integer\n          description: The ID of the artifact that the tag attached to\n          format: int64\n        name:\n          type: string\n          description: The name of the tag\n        push_time:\n          type: string\n          description: The push time of the tag\n          format: date-time\n        pull_time:\n          type: string\n          description: The latest pull time of the tag\n          format: date-time\n        immutable:\n          type: boolean\n          description: The immutable status of the tag\n          x-omitempty: false\n        signed:\n          type: boolean\n          description: The attribute indicates whether the tag is signed or not\n          x-omitempty: false\n      example:\n        pull_time: 2000-01-23T04:56:07.000+00:00\n        immutable: true\n        name: name\n        signed: true\n        repository_id: 9\n        id: 7\n        artifact_id: 3\n        push_time: 2000-01-23T04:56:07.000+00:00\n    ExtraAttrs:\n      type: object\n      additionalProperties:\n        type: object\n        properties: {}\n        example: {}\n      x-schema-name: ExtraAttrs\n    Annotations:\n      type: object\n      additionalProperties:\n        type: string\n      x-schema-name: Annotations\n    AdditionLinks:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionLink'\n      x-schema-name: AdditionLinks\n    AdditionLink:\n      type: object\n      properties:\n        href:\n          type: string\n          description: The link of the addition\n        absolute:\n          type: boolean\n          description: Determine whether the link is an absolute URL or not\n          x-omitempty: false\n      example:\n        absolute: true\n        href: href\n    Reference:\n      type: object\n      properties:\n        parent_id:\n          type: integer\n          description: The parent ID of the reference\n          format: int64\n        child_id:\n          type: integer\n          description: The child ID of the reference\n          format: int64\n        child_digest:\n          type: string\n          description: The digest of the child artifact\n        platform:\n          $ref: '#/components/schemas/Platform'\n        annotations:\n          $ref: '#/components/schemas/Annotations'\n        urls:\n          type: array\n          description: The download URLs\n          items:\n            type: string\n      example:\n        urls:\n        - urls\n        - urls\n        child_id: 2\n        parent_id: 5\n        annotations: null\n        child_digest: child_digest\n        platform:\n          '''os.version''': '''os.version'''\n          os: os\n          variant: variant\n          '''os.features''':\n          - '''os.features'''\n          - '''os.features'''\n          architecture: architecture\n    Platform:\n      type: object\n      properties:\n        architecture:\n          type: string\n          description: The architecture that the artifact applys to\n        os:\n          type: string\n          description: The OS that the artifact applys to\n        '''os.version''':\n          type: string\n          description: The version of the OS that the artifact applys to\n        '''os.features''':\n          type: array\n          description: The features of the OS that the artifact applys to\n          items:\n            type: string\n        variant:\n          type: string\n          description: The variant of the CPU\n      example:\n        '''os.version''': '''os.version'''\n        os: os\n        variant: variant\n        '''os.features''':\n        - '''os.features'''\n        - '''os.features'''\n        architecture: architecture\n    Label:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the label\n          format: int64\n        name:\n          type: string\n          description: The name the label\n        description:\n          type: string\n          description: The description the label\n        color:\n          type: string\n          description: The color the label\n        scope:\n          type: string\n          description: The scope the label\n        project_id:\n          type: integer\n          description: The ID of project that the label belongs to\n          format: int64\n        creation_time:\n          type: string\n          description: The creation time the label\n          format: date-time\n        update_time:\n          type: string\n          description: The update time of the label\n          format: date-time\n      example:\n        creation_time: 2000-01-23T04:56:07.000+00:00\n        update_time: 2000-01-23T04:56:07.000+00:00\n        color: color\n        project_id: 4\n        scope: scope\n        name: name\n        description: description\n        id: 2\n    ScanOverview:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/NativeReportSummary'\n      description: The scan overview attached in the metadata of tag\n      x-schema-name: ScanOverview\n    NativeReportSummary:\n      type: object\n      properties:\n        report_id:\n          type: string\n          description: id of the native scan report\n          example: 5f62c830-f996-11e9-957f-0242c0a89008\n        scan_status:\n          type: string\n          description: The status of the report generating process\n          example: Success\n        severity:\n          type: string\n          description: The overall severity\n          example: High\n        duration:\n          type: integer\n          description: The seconds spent for generating the report\n          format: int64\n          example: 300\n        summary:\n          $ref: '#/components/schemas/VulnerabilitySummary'\n        start_time:\n          type: string\n          description: The start time of the scan process that generating report\n          format: date-time\n        end_time:\n          type: string\n          description: The end time of the scan process that generating report\n          format: date-time\n        complete_percent:\n          type: integer\n          description: The complete percent of the scanning which value is between\n            0 and 100\n          example: 100\n      description: The summary for the native report\n      example:\n        severity: High\n        duration: 300\n        summary:\n          summary:\n            Critical: 5\n            High: 5\n          total: 500\n          fixable: 100\n        start_time: 2000-01-23T04:56:07.000+00:00\n        scan_status: Success\n        report_id: 5f62c830-f996-11e9-957f-0242c0a89008\n        complete_percent: 100\n        end_time: 2000-01-23T04:56:07.000+00:00\n    VulnerabilitySummary:\n      type: object\n      properties:\n        total:\n          type: integer\n          description: The total number of the found vulnerabilities\n          format: int\n          example: 500\n        fixable:\n          type: integer\n          description: The number of the fixable vulnerabilities\n          format: int\n          example: 100\n        summary:\n          type: object\n          additionalProperties:\n            type: integer\n            format: int\n            example: 10\n          description: Numbers of the vulnerabilities with different severity\n          example:\n            Critical: 5\n            High: 5\n      description: |\n        VulnerabilitySummary contains the total number of the foun d vulnerabilities number and numbers of each severity level.\n      example:\n        summary:\n          Critical: 5\n          High: 5\n        total: 500\n        fixable: 100\n    AuditLog:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the audit log entry.\n        username:\n          type: string\n          description: Username of the user in this log entry.\n        resource:\n          type: string\n          description: Name of the repository in this log entry.\n        resource_type:\n          type: string\n          description: Tag of the repository in this log entry.\n        operation:\n          type: string\n          description: The operation against the repository in this log entry.\n        op_time:\n          type: string\n          description: The time when this operation is triggered.\n          format: date-time\n      example:\n        resource: resource\n        resource_type: resource_type\n        op_time: 2000-01-23T04:56:07.000+00:00\n        id: 0\n        operation: operation\n        username: username\n    Metadata:\n      type: object\n      properties:\n        id:\n          type: string\n          description: id\n        name:\n          type: string\n          description: name\n        icon:\n          type: string\n          description: icon\n        maintainers:\n          type: array\n          description: maintainers\n          items:\n            type: string\n        version:\n          type: string\n          description: version\n        source:\n          type: string\n          description: source\n      example:\n        maintainers:\n        - maintainers\n        - maintainers\n        name: name\n        icon: icon\n        id: id\n        source: source\n        version: version\n    Instance:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Unique ID\n        name:\n          type: string\n          description: Instance name\n        description:\n          type: string\n          description: Description of instance\n        vendor:\n          type: string\n          description: Based on which driver, identified by ID\n        endpoint:\n          type: string\n          description: The service endpoint of this instance\n        auth_mode:\n          type: string\n          description: The authentication way supported\n        auth_info:\n          type: object\n          additionalProperties:\n            type: string\n          description: The auth credential data if exists\n        status:\n          type: string\n          description: The health status\n        enabled:\n          type: boolean\n          description: Whether the instance is activated or not\n        default:\n          type: boolean\n          description: Whether the instance is default or not\n        insecure:\n          type: boolean\n          description: Whether the instance endpoint is insecure or not\n        setup_timestamp:\n          type: integer\n          description: The timestamp of instance setting up\n          format: int64\n      example:\n        endpoint: endpoint\n        default: true\n        vendor: vendor\n        name: name\n        insecure: true\n        description: description\n        auth_mode: auth_mode\n        id: 0\n        auth_info:\n          key: auth_info\n        setup_timestamp: 6\n        enabled: true\n        status: status\n    InstanceUpdateResp:\n      type: object\n      properties:\n        updated:\n          type: integer\n          description: ID of instance updated\n      example:\n        updated: 0\n    InstanceDeletedResp:\n      type: object\n      properties:\n        removed:\n          type: integer\n          description: ID of instance removed\n      example:\n        removed: 0\n    InstanceCreatedResp:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: ID of instance created\n      example:\n        id: 0\n    PreheatPolicy:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of preheat policy\n        name:\n          type: string\n          description: The Name of preheat policy\n        description:\n          type: string\n          description: The Description of preheat policy\n        project_id:\n          type: integer\n          description: The ID of preheat policy project\n        provider_id:\n          type: integer\n          description: The ID of preheat policy provider\n        provider_name:\n          type: string\n          description: The Name of preheat policy provider\n        filters:\n          type: string\n          description: The Filters of preheat policy\n        trigger:\n          type: string\n          description: The Trigger of preheat policy\n        enabled:\n          type: boolean\n          description: Whether the preheat policy enabled\n        creation_time:\n          type: string\n          description: The Create Time of preheat policy\n          format: date-time\n        update_time:\n          type: string\n          description: The Update Time of preheat policy\n          format: date-time\n      example:\n        creation_time: 2000-01-23T04:56:07.000+00:00\n        update_time: 2000-01-23T04:56:07.000+00:00\n        project_id: 6\n        name: name\n        description: description\n        provider_id: 1\n        id: 0\n        filters: filters\n        trigger: trigger\n        provider_name: provider_name\n        enabled: true\n    Metrics:\n      type: object\n      properties:\n        task_count:\n          type: integer\n          description: The count of task\n        success_task_count:\n          type: integer\n          description: The count of success task\n        error_task_count:\n          type: integer\n          description: The count of error task\n        pending_task_count:\n          type: integer\n          description: The count of pending task\n        running_task_count:\n          type: integer\n          description: The count of running task\n        scheduled_task_count:\n          type: integer\n          description: The count of scheduled task\n        stopped_task_count:\n          type: integer\n          description: The count of stopped task\n      example:\n        running_task_count: 7\n        success_task_count: 5\n        stopped_task_count: 3\n        scheduled_task_count: 9\n        error_task_count: 5\n        pending_task_count: 2\n        task_count: 1\n    Execution:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of execution\n        vendor_type:\n          type: string\n          description: The vendor type of execution\n        vendor_id:\n          type: integer\n          description: The vendor id of execution\n        status:\n          type: string\n          description: The status of execution\n        status_message:\n          type: string\n          description: The status message of execution\n        metrics:\n          $ref: '#/components/schemas/Metrics'\n        trigger:\n          type: string\n          description: The trigger of execution\n        extra_attrs:\n          $ref: '#/components/schemas/ExtraAttrs'\n        start_time:\n          type: string\n          description: The start time of execution\n        end_time:\n          type: string\n          description: The end time of execution\n      example:\n        status_message: status_message\n        start_time: start_time\n        extra_attrs:\n          key: {}\n        vendor_id: 6\n        end_time: end_time\n        id: 0\n        metrics:\n          running_task_count: 7\n          success_task_count: 5\n          stopped_task_count: 3\n          scheduled_task_count: 9\n          error_task_count: 5\n          pending_task_count: 2\n          task_count: 1\n        trigger: trigger\n        vendor_type: vendor_type\n        status: status\n    Task:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of task\n        execution_id:\n          type: integer\n          description: The ID of task execution\n        status:\n          type: string\n          description: The status of task\n        status_message:\n          type: string\n          description: The status message of task\n        run_count:\n          type: integer\n          description: The count of task run\n        extra_attrs:\n          $ref: '#/components/schemas/ExtraAttrs'\n        creation_time:\n          type: string\n          description: The creation time of task\n        update_time:\n          type: string\n          description: The update time of task\n        start_time:\n          type: string\n          description: The start time of task\n        end_time:\n          type: string\n          description: The end time of task\n      example:\n        status_message: status_message\n        creation_time: creation_time\n        execution_id: 6\n        start_time: start_time\n        update_time: update_time\n        extra_attrs:\n          key: {}\n        end_time: end_time\n        id: 0\n        status: status\n        run_count: 1\n    ProviderUnderProject:\n      type: object\n      properties:\n        id:\n          type: integer\n        provider:\n          type: string\n        enabled:\n          type: boolean\n        default:\n          type: boolean\n      example:\n        default: true\n        provider: provider\n        id: 0\n        enabled: true\n    Icon:\n      type: object\n      properties:\n        content-type:\n          type: string\n          description: The content type of the icon\n        content:\n          type: string\n          description: The base64 encoded content of the icon\n      example:\n        content-type: content-type\n        content: content\n    ProjectReq:\n      type: object\n      properties:\n        project_name:\n          type: string\n          description: The name of the project.\n        public:\n          type: boolean\n          description: deprecated, reserved for project creation in replication\n          nullable: true\n        metadata:\n          $ref: '#/components/schemas/ProjectMetadata'\n        cve_allowlist:\n          $ref: '#/components/schemas/CVEAllowlist'\n        storage_limit:\n          type: integer\n          description: The storage quota of the project.\n          format: int64\n          nullable: true\n        registry_id:\n          type: integer\n          description: The ID of referenced registry when creating the proxy cache\n            project\n          format: int64\n          nullable: true\n    Project:\n      type: object\n      properties:\n        project_id:\n          type: integer\n          description: Project ID\n          format: int32\n        owner_id:\n          type: integer\n          description: The owner ID of the project always means the creator of the\n            project.\n          format: int32\n        name:\n          type: string\n          description: The name of the project.\n        registry_id:\n          type: integer\n          description: The ID of referenced registry when the project is a proxy cache\n            project.\n          format: int64\n        creation_time:\n          type: string\n          description: The creation time of the project.\n          format: date-time\n        update_time:\n          type: string\n          description: The update time of the project.\n          format: date-time\n        deleted:\n          type: boolean\n          description: A deletion mark of the project.\n        owner_name:\n          type: string\n          description: The owner name of the project.\n        togglable:\n          type: boolean\n          description: Correspond to the UI about whether the project's publicity\n            is  updatable (for UI)\n        current_user_role_id:\n          type: integer\n          description: The role ID with highest permission of the current user who\n            triggered the API (for UI).  This attribute is deprecated and will be\n            removed in future versions.\n        current_user_role_ids:\n          type: array\n          description: The list of role ID of the current user who triggered the API\n            (for UI)\n          items:\n            type: integer\n            format: int32\n        repo_count:\n          type: integer\n          description: The number of the repositories under this project.\n        chart_count:\n          type: integer\n          description: The total number of charts under this project.\n        metadata:\n          $ref: '#/components/schemas/ProjectMetadata'\n        cve_allowlist:\n          $ref: '#/components/schemas/CVEAllowlist'\n      example:\n        creation_time: 2000-01-23T04:56:07.000+00:00\n        togglable: true\n        metadata:\n          severity: severity\n          prevent_vul: prevent_vul\n          retention_id: retention_id\n          reuse_sys_cve_allowlist: reuse_sys_cve_allowlist\n          public: public\n          auto_scan: auto_scan\n          enable_content_trust: enable_content_trust\n        owner_name: owner_name\n        owner_id: 6\n        repo_count: 2\n        registry_id: 1\n        update_time: 2000-01-23T04:56:07.000+00:00\n        current_user_role_id: 5\n        deleted: true\n        project_id: 0\n        name: name\n        current_user_role_ids:\n        - 5\n        - 5\n        cve_allowlist:\n          creation_time: 2000-01-23T04:56:07.000+00:00\n          update_time: 2000-01-23T04:56:07.000+00:00\n          expires_at: 2\n          project_id: 3\n          id: 9\n          items:\n          - cve_id: cve_id\n          - cve_id: cve_id\n        chart_count: 7\n    ProjectDeletable:\n      type: object\n      properties:\n        deletable:\n          type: boolean\n          description: Whether the project can be deleted.\n        message:\n          type: string\n          description: The detail message when the project can not be deleted.\n      example:\n        deletable: true\n        message: message\n    ProjectMetadata:\n      type: object\n      properties:\n        public:\n          type: string\n          description: The public status of the project. The valid values are \"true\",\n            \"false\".\n        enable_content_trust:\n          type: string\n          description: Whether content trust is enabled or not. If it is enabled,\n            user can't pull unsigned images from this project. The valid values are\n            \"true\", \"false\".\n          nullable: true\n        prevent_vul:\n          type: string\n          description: Whether prevent the vulnerable images from running. The valid\n            values are \"true\", \"false\".\n          nullable: true\n        severity:\n          type: string\n          description: If the vulnerability is high than severity defined here, the\n            images can't be pulled. The valid values are \"none\", \"low\", \"medium\",\n            \"high\", \"critical\".\n          nullable: true\n        auto_scan:\n          type: string\n          description: Whether scan images automatically when pushing. The valid values\n            are \"true\", \"false\".\n          nullable: true\n        reuse_sys_cve_allowlist:\n          type: string\n          description: Whether this project reuse the system level CVE allowlist as\n            the allowlist of its own.  The valid values are \"true\", \"false\". If it\n            is set to \"true\" the actual allowlist associate with this project, if\n            any, will be ignored.\n          nullable: true\n        retention_id:\n          type: string\n          description: The ID of the tag retention policy for the project\n          nullable: true\n      example:\n        severity: severity\n        prevent_vul: prevent_vul\n        retention_id: retention_id\n        reuse_sys_cve_allowlist: reuse_sys_cve_allowlist\n        public: public\n        auto_scan: auto_scan\n        enable_content_trust: enable_content_trust\n    ProjectSummary:\n      type: object\n      properties:\n        repo_count:\n          type: integer\n          description: The number of the repositories under this project.\n        chart_count:\n          type: integer\n          description: The total number of charts under this project.\n        project_admin_count:\n          type: integer\n          description: The total number of project admin members.\n        maintainer_count:\n          type: integer\n          description: The total number of maintainer members.\n        developer_count:\n          type: integer\n          description: The total number of developer members.\n        guest_count:\n          type: integer\n          description: The total number of guest members.\n        limited_guest_count:\n          type: integer\n          description: The total number of limited guest members.\n        quota:\n          $ref: '#/components/schemas/ProjectSummary_quota'\n        registry:\n          $ref: '#/components/schemas/Registry'\n      example:\n        registry:\n          creation_time: creation_time\n          update_time: update_time\n          credential:\n            access_key: access_key\n            access_secret: access_secret\n            type: type\n          name: name\n          insecure: true\n          description: description\n          id: 3\n          type: type\n          url: url\n          status: status\n        quota:\n          hard:\n            key: 9\n          used: null\n        maintainer_count: 5\n        guest_count: 2\n        limited_guest_count: 7\n        developer_count: 5\n        repo_count: 0\n        project_admin_count: 1\n        chart_count: 6\n    CVEAllowlist:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: ID of the allowlist\n        project_id:\n          type: integer\n          description: ID of the project which the allowlist belongs to.  For system\n            level allowlist this attribute is zero.\n        expires_at:\n          type: integer\n          description: the time for expiration of the allowlist, in the form of seconds\n            since epoch.  This is an optional attribute, if it's not set the CVE allowlist\n            does not expire.\n          nullable: true\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/CVEAllowlistItem'\n        creation_time:\n          type: string\n          description: The creation time of the allowlist.\n          format: date-time\n        update_time:\n          type: string\n          description: The update time of the allowlist.\n          format: date-time\n      description: The CVE Allowlist for system or project\n      example:\n        creation_time: 2000-01-23T04:56:07.000+00:00\n        update_time: 2000-01-23T04:56:07.000+00:00\n        expires_at: 2\n        project_id: 3\n        id: 9\n        items:\n        - cve_id: cve_id\n        - cve_id: cve_id\n    CVEAllowlistItem:\n      type: object\n      properties:\n        cve_id:\n          type: string\n          description: The ID of the CVE, such as \"CVE-2019-10164\"\n      description: The item in CVE allowlist\n      example:\n        cve_id: cve_id\n    RegistryCredential:\n      type: object\n      properties:\n        type:\n          type: string\n          description: Credential type, such as 'basic', 'oauth'.\n        access_key:\n          type: string\n          description: Access key, e.g. user name when credential type is 'basic'.\n        access_secret:\n          type: string\n          description: Access secret, e.g. password when credential type is 'basic'.\n      example:\n        access_key: access_key\n        access_secret: access_secret\n        type: type\n    Registry:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The registry ID.\n          format: int64\n        url:\n          type: string\n          description: The registry URL string.\n        name:\n          type: string\n          description: The registry name.\n        credential:\n          $ref: '#/components/schemas/RegistryCredential'\n        type:\n          type: string\n          description: Type of the registry, e.g. 'harbor'.\n        insecure:\n          type: boolean\n          description: Whether or not the certificate will be verified when Harbor\n            tries to access the server.\n        description:\n          type: string\n          description: Description of the registry.\n        status:\n          type: string\n          description: Health status of the registry.\n        creation_time:\n          type: string\n          description: The create time of the policy.\n        update_time:\n          type: string\n          description: The update time of the policy.\n      example:\n        creation_time: creation_time\n        update_time: update_time\n        credential:\n          access_key: access_key\n          access_secret: access_secret\n          type: type\n        name: name\n        insecure: true\n        description: description\n        id: 3\n        type: type\n        url: url\n        status: status\n    ResourceList:\n      type: object\n      additionalProperties:\n        type: integer\n        format: int64\n      x-schema-name: ResourceList\n    ProjectSummary_quota:\n      type: object\n      properties:\n        hard:\n          $ref: '#/components/schemas/ResourceList'\n        used:\n          $ref: '#/components/schemas/ResourceList'\n      example:\n        hard:\n          key: 9\n        used: null\n  responses:\n    \"200\":\n      description: Success\n      headers:\n        X-Request-Id:\n          description: The ID of the corresponding request for the response\n          style: simple\n          explode: false\n          schema:\n            type: string\n      content: {}\n    \"201\":\n      description: Created\n      headers:\n        X-Request-Id:\n          description: The ID of the corresponding request for the response\n          style: simple\n          explode: false\n          schema:\n            type: string\n        Location:\n          description: The location of the resource\n          style: simple\n          explode: false\n          schema:\n            type: string\n      content: {}\n    \"202\":\n      description: Accepted\n      headers:\n        X-Request-Id:\n          description: The ID of the corresponding request for the response\n          style: simple\n          explode: false\n          schema:\n            type: string\n      content: {}\n    \"400\":\n      description: Bad request\n      headers:\n        X-Request-Id:\n          description: The ID of the corresponding request for the response\n          style: simple\n          explode: false\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    \"401\":\n      description: Unauthorized\n      headers:\n        X-Request-Id:\n          description: The ID of the corresponding request for the response\n          style: simple\n          explode: false\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    \"403\":\n      description: Forbidden\n      headers:\n        X-Request-Id:\n          description: The ID of the corresponding request for the response\n          style: simple\n          explode: false\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    \"404\":\n      description: Not found\n      headers:\n        X-Request-Id:\n          description: The ID of the corresponding request for the response\n          style: simple\n          explode: false\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    \"405\":\n      description: Method not allowed\n      headers:\n        X-Request-Id:\n          description: The ID of the corresponding request for the response\n          style: simple\n          explode: false\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    \"409\":\n      description: Conflict\n      headers:\n        X-Request-Id:\n          description: The ID of the corresponding request for the response\n          style: simple\n          explode: false\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    \"412\":\n      description: Precondition failed\n      headers:\n        X-Request-Id:\n          description: The ID of the corresponding request for the response\n          style: simple\n          explode: false\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    \"500\":\n      description: Internal server error\n      headers:\n        X-Request-Id:\n          description: The ID of the corresponding request for the response\n          style: simple\n          explode: false\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n  parameters:\n    query:\n      name: q\n      in: query\n      description: Query string to query resources. Supported query patterns are \"exact\n        match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"list with union releationship(k={v1\n        v2 v3})\" and \"list with intersetion relationship(k=(v1 v2 v3))\". The value\n        of range and list can be string(enclosed by \" or '), integer or time(in format\n        \"2020-04-09 02:36:00\"). All of these query patterns should be put in the query\n        string \"q=xxx\" and splitted by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: string\n    requestId:\n      name: X-Request-Id\n      in: header\n      description: An unique ID for the request\n      required: false\n      style: simple\n      explode: false\n      schema:\n        minLength: 1\n        type: string\n    projectName:\n      name: project_name\n      in: path\n      description: The name of the project\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    projectId:\n      name: project_id\n      in: path\n      description: The ID of the project\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: integer\n        format: int64\n    repositoryName:\n      name: repository_name\n      in: path\n      description: The name of the repository. If it contains slash, encode it with\n        URL encoding. e.g. a/b -\u003e a%252Fb\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    reference:\n      name: reference\n      in: path\n      description: The reference of the artifact, can be digest or tag\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    digest:\n      name: digest\n      in: path\n      description: The digest of the resource\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    tagName:\n      name: tag_name\n      in: path\n      description: The name of the tag\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    page:\n      name: page\n      in: query\n      description: The page number\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: integer\n        format: int64\n        default: 1\n    pageSize:\n      name: page_size\n      in: query\n      description: The size of per page\n      required: false\n      style: form\n      explode: true\n      schema:\n        maximum: 100\n        type: integer\n        format: int64\n        default: 10\n    instanceName:\n      name: preheat_instance_name\n      in: path\n      description: Instance Name\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    preheatPolicyName:\n      name: preheat_policy_name\n      in: path\n      description: Preheat Policy Name\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    executionId:\n      name: execution_id\n      in: path\n      description: Execution ID\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: integer\n    taskId:\n      name: task_id\n      in: path\n      description: Task ID\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: integer\n  securitySchemes:\n    basic:\n      type: http\n      scheme: basic\nx-original-swagger-version: \"2.0\"\n",
			"canonicalURL": "/github.com/tkestack/tke@7a6737b78ec3c055d45964a449637f5f86028ba4/-/blob/pkg/registry/harbor/client/api/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/tkestack/tke/blob/7a6737b78ec3c055d45964a449637f5f86028ba4/pkg/registry/harbor/client/api/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan/{report_id}/log\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}