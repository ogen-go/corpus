{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CESNET/perun"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "perun-openapi/openapi.yml",
			"byteSize": 590294,
			"content": "openapi: 3.0.3\ninfo:\n  version: 0.0.0\n  title: Perun RPC API\n  description: Perun Remote Procedure Calls Application Programming Interface\n  contact:\n    url: https://perun-aai.org\n    email: perun@cesnet.cz\n\nservers:\n  - url: 'https://{server}/{authentication}/rpc'\n    description: Perun RPC server\n    variables:\n      server:\n        default: perun.cesnet.cz\n        description: DNS name of a Perun server\n      authentication:\n        default: krb\n        description: way of authentication\n        enum:\n          - krb\n          - cert\n          - oauth\n          - fed\n\nsecurity:\n  - BasicAuth: [ ]\n  - BearerAuth: [ ]\n\ncomponents:\n  #############################################\n  #                                           #\n  # SECURITY SCHEMES - ways of authentication #\n  #                                           #\n  #############################################\n  securitySchemes:\n    BasicAuth:\n      description: \"HTTP Basic authentication with username and password\"\n      type: http\n      scheme: basic\n    BearerAuth:\n      description: \"OAuth2 Resource Server authentication using access token in 'Authorization: Bearer' HTTP header\"\n      type: http\n      scheme: bearer\n\n  #############################################\n  #                                           #\n  # SCHEMAS - data objects definitions        #\n  #                                           #\n  #############################################\n  schemas:\n    PerunException:\n      type: object\n      properties:\n        errorId: { type: string }\n        name: { type: string }\n        message: { type: string }\n\n    PerunBean:\n      type: object\n      properties:\n        id: { type: integer }\n        beanName: { type: string }\n      required:\n        - id\n        - beanName\n      discriminator:\n        propertyName: beanName\n\n    Auditable:\n      allOf:\n        - $ref: '#/components/schemas/PerunBean'\n      properties:\n        createdAt: { type: string, nullable: true }\n        createdBy: { type: string, nullable: true }\n        modifiedAt: { type: string, nullable: true }\n        modifiedBy: { type: string, nullable: true }\n        createdByUid: { type: integer, nullable: true }\n        modifiedByUid: { type: integer, nullable: true }\n      discriminator:\n        propertyName: beanName\n\n    User:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        firstName: { type: string, nullable: true }\n        lastName: { type: string, nullable: true }\n        middleName: { type: string, nullable: true }\n        titleBefore: { type: string, nullable: true }\n        titleAfter: { type: string, nullable: true }\n        serviceUser: { type: boolean }\n        sponsoredUser: { type: boolean }\n        uuid: { type: string, format: uuid }\n        specificUser: { type: boolean }\n        majorSpecificType: { type: string }\n      discriminator:\n        propertyName: beanName\n\n    RichUser:\n      allOf:\n        - $ref: '#/components/schemas/User'\n      properties:\n        userExtSources: { type: array, items: { $ref: '#/components/schemas/UserExtSource' }, nullable: true }\n        userAttributes: { type: array, items: { $ref: '#/components/schemas/Attribute' }, nullable: true }\n      required:\n        - userExtSources\n        - userAttributes\n      discriminator:\n        propertyName: beanName\n\n    PaginatedRichUsers:\n      properties:\n        offset: { type: integer }\n        pageSize: { type: integer }\n        totalCount: { type: integer }\n        data: { type: array, items: { $ref: '#/components/schemas/RichUser' } }\n      required:\n        - offset\n        - pageSize\n        - totalCount\n        - data\n\n    Sponsor:\n      type: object\n      properties:\n        user: { $ref: '#/components/schemas/User' }\n        userExtSources: { type: array, items: { $ref: '#/components/schemas/UserExtSource' } }\n        userAttributes: { type: array, items: { $ref: '#/components/schemas/Attribute' } }\n        validityTo: { type: string, description: 'Date in format yyyy-MM-dd}' }\n        active: { type: boolean }\n      required:\n        - user\n        - userExtSources\n        - userAttributes\n        - validityTo\n        - active\n\n    Member:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        userId: { type: integer }\n        voId: { type: integer }\n        status: { type: string }\n        membershipType: { type: string }\n        sourceGroupId: { type: integer, nullable: true }\n        sponsored: { type: boolean }\n        groupStatus: { type: string }\n        groupStatuses: { type: object, additionalProperties: { type: string } }\n      discriminator:\n        propertyName: beanName\n\n    AssignedMember:\n      type: object\n      properties:\n        richMember: { $ref: '#/components/schemas/RichMember' }\n        status: { $ref: '#/components/schemas/GroupResourceStatus' }\n\n    RichMember:\n      allOf:\n        - $ref: '#/components/schemas/Member'\n      properties:\n        user: { $ref: '#/components/schemas/User' }\n        userExtSources: { type: array, items: { $ref: '#/components/schemas/UserExtSource' }, nullable: true }\n        userAttributes: { type: array, items: { $ref: '#/components/schemas/Attribute' }, nullable: true }\n        memberAttributes: { type: array, items: { $ref: '#/components/schemas/Attribute' }, nullable: true }\n      required:\n        - user\n        - userExtSources\n      discriminator:\n        propertyName: beanName\n\n    PaginatedRichMembers:\n      properties:\n        offset: { type: integer }\n        pageSize: { type: integer }\n        totalCount: { type: integer }\n        data: { type: array, items: { $ref: '#/components/schemas/RichMember' } }\n      required:\n        - offset\n        - pageSize\n        - totalCount\n        - data\n\n    GraphFileFormat:\n      type: string\n      enum:\n        - DOT\n        - TGF\n      description: \"currently supported formats are DOT and TGF\"\n\n    GraphDTO:\n      properties:\n        graph:\n          type: string\n        format:\n          $ref: '#/components/schemas/GraphFileFormat'\n\n    SortingOrder:\n      type: string\n      enum:\n        - ASCENDING\n        - DESCENDING\n\n    MembersOrderColumn:\n      type: string\n      enum:\n        - ID\n        - NAME\n\n    MemberGroupStatus:\n      type: string\n      description: 'statuses of a member in a group'\n      enum:\n        - VALID\n        - EXPIRED\n\n    MembersPageQuery:\n      properties:\n        pageSize: { type: integer }\n        offset: { type: integer }\n        order: { $ref: '#/components/schemas/SortingOrder' }\n        sortColumn: { $ref: '#/components/schemas/MembersOrderColumn' }\n        searchString: { type: string }\n        statuses: { type: array, items: { $ref: '#/components/schemas/VoMemberStatuses' } }\n        groupId: { type: integer }\n        groupStatuses: { type: array, items: { $ref: '#/components/schemas/MemberGroupStatus' } }\n      required:\n        - pageSize\n        - offset\n        - order\n        - sortColumn\n\n    UsersOrderColumn:\n      type: string\n      enum:\n        - ID\n        - NAME\n\n    UsersPageQuery:\n      properties:\n        pageSize: { type: integer }\n        offset: { type: integer }\n        order: { $ref: '#/components/schemas/SortingOrder' }\n        sortColumn: { $ref: '#/components/schemas/UsersOrderColumn' }\n        searchString: { type: string }\n        withoutVo: { type: boolean }\n        facilityId: { type: integer }\n        voId: { type: integer }\n        serviceId: { type: integer }\n        resourceId: { type: integer }\n        onlyAllowed: { type: boolean }\n      required:\n        - pageSize\n        - offset\n        - order\n        - sortColumn\n\n\n    UserExtSource:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        login: { type: string }\n        userId: { type: integer }\n        loa: { type: integer }\n        persistent: { type: boolean }\n        lastAccess: { type: string, format: timestamp, description: 'SQL timestamp', example: '2012-01-01 00:00:00.100000' }\n        extSource: { $ref: '#/components/schemas/ExtSource' }\n      required:\n        - login\n        - extSource\n      discriminator:\n        propertyName: beanName\n\n    ExtSource:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        name: { type: string }\n        type: { type: string }\n      discriminator:\n        propertyName: beanName\n\n    AttributeDefinition:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        friendlyName: { type: string }\n        namespace: { type: string }\n        description: { type: string, nullable: true }\n        type: { type: string }\n        displayName: { type: string }\n        writable: { type: boolean }\n        unique: { type: boolean }\n        friendlyNameParameter: { type: string, readOnly: true }\n        baseFriendlyName: { type: string, readOnly: true }\n        entity: { type: string, readOnly: true }\n      discriminator:\n        propertyName: beanName\n\n    Attribute:\n      allOf:\n        - $ref: '#/components/schemas/AttributeDefinition'\n      properties:\n        valueCreatedAt: { type: string, nullable: true }\n        valueCreatedBy: { type: string, nullable: true }\n        valueModifiedAt: { type: string, nullable: true }\n        valueModifiedBy: { type: string, nullable: true }\n        value: { nullable: true }\n      discriminator:\n        propertyName: beanName\n\n    AuditEvent:\n      type: object\n      properties:\n        attribute: { $ref: '#/components/schemas/AttributeDefinition' }\n        extSource: { $ref: '#/components/schemas/ExtSource' }\n        source: { $ref: '#/components/schemas/ExtSource' }\n        facility: { $ref: '#/components/schemas/Facility' }\n        group: { $ref: '#/components/schemas/Group' }\n        parentGroup: { $ref: '#/components/schemas/Group' }\n        member: { $ref: '#/components/schemas/Member' }\n        resource: { $ref: '#/components/schemas/Resource' }\n        service: { $ref: '#/components/schemas/Service' }\n        user: { $ref: '#/components/schemas/User' }\n        userExtSource: { $ref: '#/components/schemas/UserExtSource' }\n        vo: { $ref: '#/components/schemas/Vo' }\n        name: { type: string }\n        message: { type: string }\n\n    AuditMessage:\n      type: object\n      properties:\n        event: { $ref: '#/components/schemas/AuditEvent' }\n        id: { type: integer }\n        actor: { type: string }\n        createdAt: { type: string }\n        createdByUid: { type: integer }\n\n    PaginatedAuditMessages:\n      properties:\n        offset: { type: integer }\n        pageSize: { type: integer }\n        totalCount: { type: integer }\n        data: { type: array, items: { $ref: '#/components/schemas/AuditMessage' } }\n      required:\n        - offset\n        - pageSize\n        - totalCount\n        - data\n\n    AuditMessagesPageQuery:\n      properties:\n        pageSize: { type: integer }\n        offset: { type: integer }\n        order: { $ref: '#/components/schemas/SortingOrder' }\n      required:\n        - pageSize\n        - offset\n        - order\n\n    ActionType:\n      type: string\n      description: \"Action types for attributes.\"\n      enum:\n        - \"WRITE\"\n        - \"WRITE_VO\"\n        - \"WRITE_PUBLIC\"\n        - \"READ\"\n        - \"READ_VO\"\n        - \"READ_PUBLIC\"\n\n    AttributeRights:\n      type: object\n      required:\n        - attributeId\n        - rights\n        - role\n      properties:\n        attributeId: { type: integer }\n        role: { type: string }\n        rights:\n          type: array\n          items:\n            $ref: '#/components/schemas/ActionType'\n\n    AttributeAction:\n      type: string\n      description: \"Represents types of actions that users can perform upon attributes.\"\n      enum:\n        - \"WRITE\"\n        - \"READ\"\n\n    RoleObject:\n      type: string\n      description: \"Represents objects, upon which Perun roles can be set, e.g. role RESOURCEADMIN can be set upon Resource, Vo, Facility or no object (None).\"\n      enum:\n        - \"None\"\n        - \"Group\"\n        - \"Vo\"\n        - \"Facility\"\n        - \"Resource\"\n        - \"User\"\n        - \"Member\"\n\n    AttributePolicy:\n      type: object\n      required:\n        - id\n        - role\n        - object\n        - policyCollectionId\n      properties:\n        id: { type: integer }\n        role: { type: string }\n        object: { $ref: '#/components/schemas/RoleObject' }\n        policyCollectionId: { type: integer }\n\n    AttributePolicyCollection:\n      type: object\n      required:\n        - id\n        - attributeId\n        - action\n        - policies\n      properties:\n        id: { type: integer }\n        attributeId: { type: integer }\n        action: { $ref: '#/components/schemas/AttributeAction' }\n        policies:\n          type: array\n          items:\n            $ref: '#/components/schemas/AttributePolicy'\n\n    Facility:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        name: { type: string }\n        description: { type: string }\n      discriminator:\n        propertyName: beanName\n\n    RichFacility:\n      allOf:\n        - $ref: '#/components/schemas/Facility'\n      properties:\n        facilityOwners: { type: array, items: { $ref: '#/components/schemas/Owner' } }\n      required:\n        - facilityOwners\n      discriminator:\n        propertyName: beanName\n\n    Host:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        hostname: { type: string }\n      discriminator:\n        propertyName: beanName\n\n    EnrichedResource:\n      type: object\n      properties:\n        resource: { $ref: '#/components/schemas/Resource' }\n        attributes: { type: array, items: { $ref: '#/components/schemas/Attribute' } }\n\n    EnrichedGroup:\n      type: object\n      properties:\n        group: { $ref: '#/components/schemas/Group' }\n        attributes: { type: array, items: { $ref: '#/components/schemas/Attribute' } }\n\n    GroupResourceStatus:\n      type: string\n      description: 'status of the group-resource assignment'\n      enum:\n        - ACTIVE\n        - INACTIVE\n        - FAILED\n        - PROCESSING\n\n    AssignedResource:\n      type: object\n      properties:\n        enrichedResource: { $ref: '#/components/schemas/EnrichedResource' }\n        status: { $ref: '#/components/schemas/GroupResourceStatus' }\n        sourceGroupId: { type: integer }\n        failureCause: { type: string }\n        facility: { $ref: '#/components/schemas/Facility' }\n        resourceTags: { type: array, items: { $ref: '#/components/schemas/ResourceTag' } }\n        autoAssignSubgroups: { type: boolean }\n\n    AssignedGroup:\n      type: object\n      properties:\n        enrichedGroup: { $ref: '#/components/schemas/EnrichedGroup' }\n        status: { $ref: '#/components/schemas/GroupResourceStatus' }\n        sourceGroupId: { type: integer }\n        failureCause: { type: string }\n        autoAssignSubgroups: { type: boolean }\n\n    EnrichedHost:\n      type: object\n      properties:\n        host: { $ref: '#/components/schemas/Host' }\n        hostAttributes: { type: array, items: { $ref: '#/components/schemas/Attribute' } }\n\n    EnrichedFacility:\n      type: object\n      properties:\n        facility: { $ref: '#/components/schemas/Facility' }\n        owners: { type: array, items: { $ref: '#/components/schemas/Owner' } }\n        destinations: { type: array, items: { $ref: '#/components/schemas/Destination' } }\n        hosts: { type: array, items: { $ref: '#/components/schemas/Host' } }\n\n    EnrichedVo:\n      type: object\n      properties:\n        vo: { $ref: '#/components/schemas/Vo' }\n        memberVos: { type: array, items: { $ref: '#/components/schemas/Vo' } }\n        parentVos: { type: array, items: { $ref: '#/components/schemas/Vo' } }\n\n    ConsentHub:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        name: { type: string }\n        enforceConsents: { type: boolean }\n        facilities: { type: array, items: { $ref: '#/components/schemas/Facility' }, nullable: true }\n      required:\n        - name\n        - enforceConsents\n        - facilities\n      discriminator:\n        propertyName: beanName\n\n    PublicationSystem:\n      allOf:\n        - $ref: '#/components/schemas/PerunBean'\n      properties:\n        friendlyName: { type: string }\n        url: { type: string }\n        username: { type: string }\n        password: { type: string }\n        loginNamespace: { type: string }\n        type: { type: string }\n      discriminator:\n        propertyName: beanName\n\n    Publication:\n      allOf:\n        - $ref: '#/components/schemas/PerunBean'\n      properties:\n        authors: { type: array, items: { $ref: '#/components/schemas/Author' } }\n        externalId: { type: integer }\n        publicationSystemId: { type: integer }\n        title: { type: string }\n        year: { type: integer }\n        main: { type: string }\n        isbn: { type: string }\n        doi: { type: string }\n        categoryId: { type: integer }\n        rank: { type: number, format: double }\n        locked: { type: boolean }\n        createdBy: { type: string }\n        createdByUid: { type: integer }\n        createdDate: { type: string, format: date }\n      discriminator:\n        propertyName: beanName\n\n    PublicationForGUI:\n      allOf:\n        - $ref: '#/components/schemas/Publication'\n      properties:\n        pubSystemName: { type: string }\n        categoryName: { type: string }\n        thanks: { type: array, items: { $ref: '#/components/schemas/ThanksForGUI' } }\n      discriminator:\n        propertyName: beanName\n\n    Category:\n      allOf:\n        - $ref: '#/components/schemas/PerunBean'\n      properties:\n        name: { type: string }\n        rank: { type: number, format: double }\n      discriminator:\n        propertyName: beanName\n\n    Thanks:\n      allOf:\n        - $ref: '#/components/schemas/PerunBean'\n      properties:\n        publicationId: { type: integer }\n        ownerId: { type: integer }\n        createdBy: { type: string }\n        createdByUid: { type: integer }\n        createdDate: { type: string, format: date }\n      discriminator:\n        propertyName: beanName\n\n    ThanksForGUI:\n      allOf:\n        - $ref: '#/components/schemas/Thanks'\n      properties:\n        ownerName: { type: string }\n      discriminator:\n        propertyName: beanName\n\n    Authorship:\n      allOf:\n        - $ref: '#/components/schemas/PerunBean'\n      properties:\n        publicationId: { type: integer }\n        userId: { type: integer }\n        createdBy: { type: string }\n        createdDate: { type: string, format: date }\n        createdByUid: { type: integer }\n      discriminator:\n        propertyName: beanName\n\n    Author:\n      allOf:\n        - $ref: '#/components/schemas/PerunBean'\n      properties:\n        firstName: { type: string }\n        lastName: { type: string }\n        middleName: { type: string }\n        titleBefore: { type: string }\n        titleAfter: { type: string }\n        attributes: { type: array, items: { $ref: '#/components/schemas/Attribute' } }\n        authorships: { type: array, items: { $ref: '#/components/schemas/Authorship' } }\n      discriminator:\n        propertyName: beanName\n\n    OwnerType:\n      description: \"enumeration of types of Owners\"\n      type: string\n      enum:\n        - technical\n        - administrative\n\n    Owner:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        name: { type: string }\n        contact: { type: string }\n        type: { $ref: '#/components/schemas/OwnerType'}\n      discriminator:\n        propertyName: beanName\n\n    PerunPolicy:\n      type: object\n      properties:\n        policyName: { type: string }\n        includePolicies: { type: array, items: { type: string } }\n        perunRoles:\n          type: array\n          items:\n            type: object\n            additionalProperties:\n              type: string\n      required:\n        - policyName\n        - includePolicies\n        - perunRoles\n\n    RoleManagementRules:\n      type: object\n      properties:\n        roleName: { type: string }\n        primaryObject: { type: string, nullable: true }\n        privilegedRolesToManage:\n          type: array\n          items:\n            type: object\n            additionalProperties:\n              type: string\n        privilegedRolesToRead:\n          type: array\n          items:\n            type: object\n            additionalProperties:\n              type: string\n        entitiesToManage:\n          type: object\n          additionalProperties:\n            type: string\n        assignedObjects:\n          type: object\n          additionalProperties:\n            type: string\n      required:\n        - roleName\n        - primaryObject\n        - privilegedRolesToManage\n        - privilegedRolesToRead\n        - entitiesToManage\n        - assignedObjects\n\n    NamespaceRules:\n      type: object\n      properties:\n        defaultEmail: { type: string }\n        csvGenHeader: { type: string }\n        csvGenPlaceholder: { type: string }\n        csvGenHeaderDescription: { type: string }\n        namespaceName: { type: string }\n        requiredAttributes:\n          type: array\n          items:\n            type: string\n        optionalAttributes:\n          type: array\n          items:\n            type: string\n      required:\n        - namespaceName\n        - attributesRules\n\n    Group:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        name: { type: string }\n        shortName: { type: string }\n        description: { type: string, nullable: true }\n        voId: { type: integer }\n        parentGroupId: { type: integer, nullable: true }\n        uuid: { type: string, format: uuid }\n      discriminator:\n        propertyName: beanName\n\n    RichGroup:\n      allOf:\n        - $ref: '#/components/schemas/Group'\n      properties:\n        attributes: { type: array, items: { $ref: '#/components/schemas/Attribute' } }\n      discriminator:\n        propertyName: beanName\n\n    PaginatedRichGroups:\n      properties:\n        offset: { type: integer }\n        pageSize: { type: integer }\n        totalCount: { type: integer }\n        data: { type: array, items: { $ref: '#/components/schemas/RichGroup' } }\n      required:\n        - offset\n        - pageSize\n        - totalCount\n        - data\n\n    GroupsOrderColumn:\n      type: string\n      enum:\n        - ID\n        - NAME\n        - DESCRIPTION\n\n    GroupsPageQuery:\n      properties:\n        pageSize: { type: integer }\n        offset: { type: integer }\n        order: { $ref: '#/components/schemas/SortingOrder' }\n        sortColumn: { $ref: '#/components/schemas/GroupsOrderColumn' }\n        memberId: { type: integer }\n        searchString: { type: string }\n      required:\n        - pageSize\n        - offset\n        - order\n        - sortColumn\n\n    ConsentStatus:\n      type: string\n      description: 'statuses of consents'\n      enum:\n        - UNSIGNED\n        - GRANTED\n        - REVOKED\n\n    Consent:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        userId: { type: integer }\n        status: { $ref: '#/components/schemas/ConsentStatus' }\n        consentHub: { $ref: '#/components/schemas/ConsentHub' }\n        attributes: { type: array, items: { $ref: '#/components/schemas/AttributeDefinition' } }\n      discriminator:\n        propertyName: beanName\n\n    Resource:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        name: { type: string }\n        description: { type: string }\n        voId: { type: integer }\n        facilityId: { type: integer }\n        uuid: { type: string, format: uuid }\n      discriminator:\n        propertyName: beanName\n\n    RichResource:\n      allOf:\n        - $ref: '#/components/schemas/Resource'\n      properties:\n        vo: { $ref: '#/components/schemas/Vo' }\n        facility: { $ref: '#/components/schemas/Facility' }\n        resourceTags: { type: array, items: { $ref: '#/components/schemas/ResourceTag' } }\n      discriminator:\n        propertyName: beanName\n\n    ResourceTag:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        tagName: { type: string }\n        voId: { type: integer }\n      discriminator:\n        propertyName: beanName\n\n    Vo:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        name: { type: string }\n        shortName: { type: string }\n      discriminator:\n        propertyName: beanName\n\n    VoAdminRoles:\n      type: string\n      description: 'admin roles for a Vo'\n      enum:\n        - \"VOOBSERVER\"\n        - \"TOPGROUPCREATOR\"\n        - \"VOADMIN\"\n\n    VoMemberStatuses:\n      type: string\n      description: 'statuses of a member in a Vo'\n      enum:\n        - VALID\n        - INVALID\n        - EXPIRED\n        - DISABLED\n\n    Service:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        name: { type: string }\n        description: { type: string }\n        delay: { type: integer }\n        recurrence: { type: integer }\n        enabled: { type: boolean }\n        script: { type: string }\n        useExpiredMembers: { type: boolean }\n      discriminator:\n        propertyName: beanName\n\n    DestinationType:\n      type: string\n      description: 'type of destination, i.e. way of delivery of service settings'\n      enum:\n        - \"host\"\n        - \"email\"\n        - \"semail\"\n        - \"url\"\n        - \"user@host\"\n        - \"user@host:port\"\n        - \"service-specific\"\n        - \"user@host-windows\"\n        - \"host-windows-proxy\"\n\n    DestinationPropagationType:\n      type: string\n      description: 'type of propagation of service settings to a destination'\n      enum: [ 'PARALLEL', 'SERIAL', 'DUMMY' ]\n\n    Destination:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        destination: { type: string }\n        type: { $ref: '#/components/schemas/DestinationType' }\n        propagationType: { $ref: '#/components/schemas/DestinationPropagationType' }\n      discriminator:\n        propertyName: beanName\n\n    RichDestination:\n      allOf:\n        - $ref: '#/components/schemas/Destination'\n      properties:\n        blocked: { type: boolean }\n        service: { $ref: '#/components/schemas/Service' }\n        facility: { $ref: '#/components/schemas/Facility' }\n      discriminator:\n        propertyName: beanName\n\n    ApplicationForm:\n      type: object\n      properties:\n        id: { type: integer }\n        vo: { $ref: '#/components/schemas/Vo' }\n        group: { $ref: '#/components/schemas/Group' }\n        automaticApproval: { type: boolean }\n        automaticApprovalExtension: { type: boolean }\n        automaticApprovalEmbedded: { type: boolean }\n        moduleClassName: { type: string }\n\n    Type:\n      type: string\n      description: 'type of application form items'\n      enum:\n        - HTML_COMMENT\n        - SUBMIT_BUTTON\n        - AUTO_SUBMIT_BUTTON\n        - PASSWORD\n        - VALIDATED_EMAIL\n        - TEXTFIELD\n        - TEXTAREA\n        - CHECKBOX\n        - RADIO\n        - SELECTIONBOX\n        - COMBOBOX\n        - USERNAME\n        - HEADING\n        - TIMEZONE\n        - EMBEDDED_GROUP_APPLICATION\n        - LIST_INPUT_BOX\n        - MAP_INPUT_BOX\n\n    ItemTexts:\n      type: object\n      properties:\n        locale: { type: string }\n        label: { type: string }\n        options: { type: string }\n        help: { type: string }\n        errorMessage: { type: string }\n\n    ApplicationFormItem:\n      type: object\n      properties:\n        id: { type: integer }\n        shortname: { type: string }\n        required: { type: boolean }\n        updatable: { type: boolean }\n        type: { $ref: '#/components/schemas/Type' }\n        federationAttribute: { type: string }\n        perunSourceAttribute: { type: string }\n        perunDestinationAttribute: { type: string }\n        regex: { type: string }\n        applicationTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppType'\n        ordnum: { type: integer }\n        i18n:\n          type: object\n          additionalProperties: { $ref: '#/components/schemas/ItemTexts' }\n        hiddenDependencyItemId: { type: integer }\n        disabledDependencyItemId: { type: integer }\n        hidden: { type: string, enum: [ 'NEVER', 'ALWAYS', 'IF_PREFILLED', 'IF_EMPTY' ] }\n        disabled: { type: string, enum: [ 'NEVER', 'ALWAYS', 'IF_PREFILLED', 'IF_EMPTY' ] }\n        forDelete: { type: boolean }\n\n    ApplicationFormItemData:\n      type: object\n      properties:\n        id: { type: integer }\n        formItem: { $ref: '#/components/schemas/ApplicationFormItem' }\n        shortname: { type: string }\n        value: { type: string }\n        assuranceLevel: { type: string }\n        prefilledValue: { type: string }\n\n    AppType:\n      type: string\n      enum:\n        - INITIAL\n        - EXTENSION\n        - EMBEDDED\n\n    AppState:\n      type: string\n      enum:\n        - NEW\n        - VERIFIED\n        - APPROVED\n        - REJECTED\n\n    Application:\n      type: object\n      properties:\n        id: { type: integer }\n        vo: { $ref: '#/components/schemas/Vo' }\n        group: { $ref: '#/components/schemas/Group' }\n        type: { $ref: '#/components/schemas/AppType' }\n        fedInfo: { type: string }\n        state: { $ref: '#/components/schemas/AppState' }\n        extSourceName: { type: string }\n        extSourceType: { type: string }\n        extSourceLoa: { type: integer }\n        user: { $ref: '#/components/schemas/User' }\n        createdBy: { type: string }\n        createdAt: { type: string }\n        modifiedBy: { type: string }\n        modifiedAt: { type: string }\n\n    RichApplication:\n      allOf:\n        - $ref: '#/components/schemas/Application'\n      properties:\n        formData: { type: array, items: { $ref: '#/components/schemas/ApplicationFormItemData' } }\n      required:\n        - formData\n      discriminator:\n        propertyName: beanName\n\n    PaginatedRichApplications:\n      properties:\n        offset: { type: integer }\n        pageSize: { type: integer }\n        totalCount: { type: integer }\n        data: { type: array, items: { $ref: '#/components/schemas/RichApplication' } }\n      required:\n        - offset\n        - pageSize\n        - totalCount\n        - data\n\n    ApplicationsPageQuery:\n      properties:\n        pageSize: { type: integer }\n        offset: { type: integer }\n        order: { $ref: '#/components/schemas/SortingOrder' }\n        sortColumn: { $ref: '#/components/schemas/ApplicationsOrderColumn' }\n        searchString: { type: string }\n        includeGroupApplications: { type: boolean }\n        getDetails: { type: boolean }\n        states: { type: array, items: { $ref: '#/components/schemas/AppState'  } }\n        dateFrom: { type: string, format: date }\n        dateTo: { type: string, format: date }\n        userId: { type: integer }\n        groupId: { type: integer }\n      required:\n        - pageSize\n        - offset\n        - order\n        - sortColumn\n\n    ApplicationsOrderColumn:\n      type: string\n      enum:\n        - ID\n        - DATE_CREATED\n        - TYPE\n        - STATE\n        - SUBMITTER\n        - GROUP_NAME\n        - MODIFIED_BY\n\n    MailType:\n      type: string\n      enum:\n        - APP_CREATED_USER\n        - APPROVABLE_GROUP_APP_USER\n        - APP_CREATED_VO_ADMIN\n        - MAIL_VALIDATION\n        - APP_APPROVED_USER\n        - APP_REJECTED_USER\n        - APP_ERROR_VO_ADMIN\n        - USER_INVITE\n\n    PerunPrincipal:\n      type: object\n      required:\n        - userId\n        - user\n      properties:\n        actor: { type: string }\n        extSourceName: { type: string }\n        extSourceType: { type: string }\n        extSourceLoa: { type: integer }\n        user: { $ref: \"#/components/schemas/User\" }\n        authzInitialized: { type: boolean }\n        additionalInformations:\n          type: object\n          additionalProperties: { type: string }\n        userId: { type: integer }\n        # Map\u003cString, Map\u003cString, List\u003cInteger\u003e\u003e\u003e\n        roles:\n          type: object\n          additionalProperties:\n            type: object\n            additionalProperties:\n              type: array\n              items:\n                type: integer\n\n    SecurityTeam:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        name: { type: string }\n        description: { type: string }\n      discriminator:\n        propertyName: beanName\n\n    Ban:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        validityTo: { type: string }\n        description: { type: string }\n      discriminator:\n        propertyName: beanName\n\n    BanOnResource:\n      allOf:\n        - $ref: '#/components/schemas/Ban'\n      properties:\n        memberId: { type: integer }\n        resourceId: { type: integer }\n      discriminator:\n        propertyName: beanName\n\n    BanOnVo:\n      allOf:\n        - $ref: '#/components/schemas/Ban'\n      properties:\n        memberId: { type: integer }\n        voId: { type: integer }\n      discriminator:\n        propertyName: beanName\n\n    BanOnFacility:\n      allOf:\n        - $ref: '#/components/schemas/Ban'\n      properties:\n        userId: { type: integer }\n        facilityId: { type: integer }\n      discriminator:\n        propertyName: beanName\n\n    RichUserExtSource:\n      properties:\n        userExtSource: { $ref: '#/components/schemas/UserExtSource' }\n        attributes: { type: array, items: { $ref: '#/components/schemas/Attribute' }, nullable: false }\n      required:\n        - userExtSource\n        - attributes\n      discriminator:\n        propertyName: beanName\n\n    Candidate:\n      allOf:\n        - $ref: '#/components/schemas/User'\n      properties:\n        userExtSource: { $ref: '#/components/schemas/UserExtSource' }\n        additionalUserExtSources: { type: array, items: { $ref: '#/components/schemas/UserExtSource' } }\n        attributes: { type: object, additionalProperties: { type: string } }\n      discriminator:\n        propertyName: beanName\n\n    MemberCandidate:\n      type: object\n      properties:\n        candidate: { $ref: '#/components/schemas/Candidate' }\n        member: { $ref: '#/components/schemas/Member' }\n        richUser: { $ref: '#/components/schemas/RichUser' }\n\n    ServiceForGUI:\n      allOf:\n        - $ref: '#/components/schemas/Service'\n      properties:\n        allowedOnFacility: { type: boolean }\n      discriminator:\n        propertyName: beanName\n\n    ServiceAttributes:\n      type: object\n      properties:\n        attributes: { type: array, items: { $ref: '#/components/schemas/Attribute' } }\n        childElements: { type: array, items: { $ref: '#/components/schemas/ServiceAttributes' } }\n\n    GenDataNode:\n      type: object\n      properties:\n        h: { type: array, items: { type: string } }\n        c: { type: array, items: { $ref: '#/components/schemas/HashedGenData' } }\n        m: { type: array, items: { $ref: '#/components/schemas/GenMemberDataNode' } }\n\n    GenMemberDataNode:\n      type: object\n      properties:\n        h: { type: array, items: { type: string } }\n\n    HashedGenData:\n      type: object\n      properties:\n        attributes:\n          type: object\n          additionalProperties:\n            type: array\n            items: { $ref: '#/components/schemas/Attribute' }\n        hierarchy:\n          $ref: '#/components/schemas/GenDataNode'\n\n    ServicesPackage:\n      allOf:\n        - $ref: '#/components/schemas/Auditable'\n      properties:\n        description: { type: string }\n        name: { type: string }\n      discriminator:\n        propertyName: beanName\n\n    TaskStatus:\n      type: string\n      enum:\n        - WAITING\n        - PLANNED\n        - GENERATING\n        - GENERROR\n        - GENERATED\n        - SENDING\n        - DONE\n        - SENDERROR\n        - ERROR\n        - WARNING\n\n    Task:\n      type: object\n      properties:\n        id: { type: integer }\n        delay: { type: integer }\n        recurrence: { type: integer }\n        startTime: { type: string }\n        sentToEngine: { type: string }\n        sendStartTime: { type: string }\n        schedule: { type: string }\n        genStartTime: { type: string }\n        genEndTime: { type: string }\n        sendEndTime: { type: string }\n        endTime: { type: string }\n        service: { $ref: '#/components/schemas/Service' }\n        facility: { $ref: '#/components/schemas/Facility' }\n        destinations: { type: array, items: { $ref: '#/components/schemas/Destination' } }\n        status: { $ref: '#/components/schemas/TaskStatus' }\n        sourceUpdated: { type: boolean }\n        propagationForced: { type: boolean }\n\n    TaskResultStatus:\n      type: string\n      enum:\n        - DONE\n        - ERROR\n        - DENIED\n        - WARNING\n\n    TaskResult:\n      allOf:\n        - $ref: '#/components/schemas/PerunBean'\n      properties:\n        taskId: { type: integer }\n        destinationId: { type: integer }\n        errorMessage: { type: string }\n        standardMessage: { type: string }\n        returnCode: { type: integer }\n        timestamp: { type: string }\n        status: { $ref: '#/components/schemas/TaskResultStatus' }\n        destination: { $ref: '#/components/schemas/Destination' }\n        service: { $ref: '#/components/schemas/Service' }\n      discriminator:\n        propertyName: beanName\n\n    FacilityPropagationState:\n      type: string\n      enum:\n        - OK\n        - ERROR\n        - PROCESSING\n        - NOT_DETERMINED\n\n    FacilityState:\n      type: object\n      properties:\n        facility: { $ref: '#/components/schemas/Facility' }\n        state: { $ref: '#/components/schemas/FacilityPropagationState' }\n        results:\n          type: object\n          additionalProperties: { $ref: '#/components/schemas/FacilityPropagationState' }\n\n    ResourceState:\n      type: object\n      properties:\n        resource: { $ref: '#/components/schemas/Resource' }\n        taskList: { type: array, items: { $ref: '#/components/schemas/Task' } }\n\n    ServiceState:\n      type: object\n      properties:\n        service: { $ref: '#/components/schemas/Service' }\n        facility: { $ref: '#/components/schemas/Facility' }\n        task: { $ref: '#/components/schemas/Task' }\n        status: { type: string }\n        blockedOnFacility: { type: boolean }\n        blockedGlobally: { type: boolean, readOnly: true }\n        hasDestinations: { type: boolean }\n\n    MailText:\n      type: object\n      properties:\n        locale: { type: string }\n        subject: { type: string }\n        text: { type: string }\n\n    ApplicationMail:\n      type: object\n      properties:\n        id: { type: integer }\n        appType: { $ref: '#/components/schemas/AppType' }\n        formId: { type: integer }\n        mailType: { $ref: '#/components/schemas/MailType' }\n        send: { type: boolean }\n        message:\n          type: object\n          additionalProperties: { $ref: '#/components/schemas/MailText' }\n\n    #Map\u003cString, Map\u003cString, List\u003cInteger\u003e\u003e\u003e\n    AuthzRoles:\n      type: object\n      additionalProperties:\n        type: object\n        additionalProperties:\n          type: array\n          items:\n            type: integer\n\n    MemberWithSponsors:\n      type: object\n      properties:\n        member: { $ref: '#/components/schemas/RichMember' }\n        sponsors: { type: array, items: { $ref: '#/components/schemas/Sponsor' } }\n\n    RTMessage:\n      type: object\n      properties:\n        memberPreferredEmail: { type: string }\n        ticketNumber: { type: integer }\n\n    EntitylessAttributesByKeys:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/Attribute'\n\n    SponsoredUserData:\n      type: object\n      properties:\n        guestName: { type: string }\n        firstName: { type: string }\n        lastName: { type: string }\n        titleBefore: { type: string }\n        titleAfter: { type: string }\n        namespace: { type: string }\n        email: { type: string }\n        password: { type: string }\n        login: { type: string }\n\n    NewApps:\n      type: object\n      properties:\n        api: { type: string }\n        admin: { type: string }\n        profile: { type: string }\n        pwdReset: { type: string }\n        publications: { type: string }\n\n    Brand:\n      type: object\n      properties:\n        name: { type: string }\n        oldGuiDomain: { type: string }\n        newApps: { $ref: '#/components/schemas/NewApps' }\n\n    PerunAppsConfig:\n      type: object\n      properties:\n        brands: { type: array, items: { $ref: '#/components/schemas/Brand' } }\n\n    SimpleAttribute:\n      description: Attribute returned using the JsonSimple serializator\n      properties:\n        friendlyName: { type: string }\n        namespace: { type: string }\n        unique: { type: boolean }\n        value: { type: object }\n\n    GroupMemberRelation:\n      type: object\n      properties:\n        m: { type: integer, description: \"member id\" }\n        u: { type: integer, description: \"user_id\" }\n        g: { type: integer, description: \"group id\" }\n        sg: { type: integer, description: \"source group id\" }\n        gn: { type: string, description: \"group_name\" }\n        pg: { type: integer, description: \"parent_group_id\" }\n        s: { type: string, description: \"source group status\" }\n        t: { type: string, description: \"membership type\" }\n\n    GroupMemberData:\n      type: object\n      properties:\n        relations: { type: array, items: { $ref: '#/components/schemas/GroupMemberRelation' } }\n        groupMemberAttributes:\n          type: object\n          additionalProperties:\n            type: object\n            additionalProperties:\n              type: array\n              items: { $ref: '#/components/schemas/Attribute' }\n\n    Identity:\n      type: object\n      properties:\n        id: { type: integer }\n        name: { type: string }\n        organization: { type: string }\n        email: { type: string }\n        identities: { type: array, items: { $ref: '#/components/schemas/ExtSource' } }\n\n  #################################################\n  #                                               #\n  # RESPONSES - type definitions of return values #\n  #                                               #\n  #################################################\n  responses:\n    ExceptionResponse:\n      description: exception occured\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PerunException\"\n\n    VoidResponse:\n      description: \"returns nothing\"\n\n    IntegerResponse:\n      description: \"returns Integer\"\n      content:\n        application/json:\n          schema:\n            type: integer\n\n    DoubleResponse:\n      description: \"returns Double\"\n      content:\n        application/json:\n          schema:\n            type: number\n            format: double\n\n    LongResponse:\n      description: \"returns Long\"\n      content:\n        application/json:\n          schema:\n            type: integer\n            format: int64\n\n    BooleanResponse:\n      description: \"returns Boolean\"\n      content:\n        application/json:\n          schema:\n            type: boolean\n\n    StringResponse:\n      description: \"returns String\"\n      content:\n        application/json:\n          schema:\n            type: string\n\n    ListOfStringsResponse:\n      description: \"returns List\u003cString\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n\n    ListOfMemberWithSponsorsResponse:\n      description: \"returns List\u003cMemberWithSponsors\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/MemberWithSponsors\"\n\n    MapStringStringResponse:\n      description: \"returns Map\u003cString,String\u003e\"\n      content:\n        application/json:\n          schema:\n            type: object\n            additionalProperties:\n              type: string\n\n    MapStringIntegerResponse:\n      description: \"returns Map\u003cString,Integer\u003e\"\n      content:\n        application/json:\n          schema:\n            type: object\n            additionalProperties:\n              type: integer\n\n    MapStringMapStringStringResponse:\n      description: \"returns Map\u003cString,Map\u003cString,String\u003e\u003e\"\n      content:\n        application/json:\n          schema:\n            type: object\n            additionalProperties:\n              type: object\n              additionalProperties:\n                type: string\n\n    ListOfMapStringStringResponse:\n      description: \"returns List\u003cMap\u003cString,String\u003e\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: object\n              additionalProperties:\n                type: string\n\n    UserResponse:\n      description: returns User\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/User\"\n\n    ListOfUsersResponse:\n      description: \"returns List\u003cUser\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/User\"\n\n    RichUserResponse:\n      description: returns RichUser\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/RichUser\"\n\n    ListOfRichUsersResponse:\n      description: 'returns List\u003cRichUser\u003e'\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/RichUser\"\n\n    PaginatedRichUsersResponse:\n      description: \"returns Paginated\u003cRichUser\u003e\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PaginatedRichUsers\"\n\n    ListOfSponsorsResponse:\n      description: 'returns List\u003cSponsor\u003e'\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Sponsor\"\n\n    MemberResponse:\n      description: returns Member\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Member\"\n\n    ListOfMembersResponse:\n      description: \"returns List\u003cMember\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Member\"\n\n    ListOfRichMembersResponse:\n      description: \"returns List\u003cRichMember\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/RichMember\"\n\n    RichMemberResponse:\n      description: returns RichMember\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/RichMember\"\n\n    AssignedMemberResponse:\n      description: returns AssignedMember\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/AssignedMember\"\n\n    ListOfAssignedMembersResponse:\n      description: \"returns List\u003cAssignedMember\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/AssignedMember\"\n\n    FacilityResponse:\n      description: \"returns Facility\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Facility\"\n\n    ListOfFacilitiesResponse:\n      description: \"returns List\u003cFacility\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Facility\"\n\n    ListOfRichFacilitiesResponse:\n      description: \"returns List\u003cRichFacility\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/RichFacility\"\n\n    ListOfEnrichedFacilitiesResponse:\n      description: \"returns List\u003cEnrichedFacility\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/EnrichedFacility\"\n\n    OwnerResponse:\n      description: \"returns Owner\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Owner\"\n\n    ListOfOwnersResponse:\n      description: \"returns List\u003cOwner\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Owner\"\n\n    ListOfAuditMessagesResponse:\n      description: \"returns List\u003cAuditMessage\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/AuditMessage\"\n\n    PaginatedMessagesResponse:\n      description: \"returns Paginated\u003cAuditMessage\u003e\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PaginatedAuditMessages\"\n\n    PublicationSystemResponse:\n      description: \"returns PublicationSystem\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PublicationSystem\"\n\n    ListOfPublicationSystemsResponse:\n      description: \"returns List\u003cPublicationSystem\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/PublicationSystem\"\n\n    CategoryResponse:\n      description: \"returns Category\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Category\"\n\n    ListOfCategoryResponse:\n      description: \"returns List\u003cCategory\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Category'\n\n    ThanksResponse:\n      description: \"returns Thanks\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Thanks\"\n\n    ListOfThanksForGUIResponse:\n      description: \"returns List\u003cThanksForGUI\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/ThanksForGUI'\n\n    AuthorshipResponse:\n      description: \"returns Authorship\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Authorship\"\n\n    ListOfAuthorResponse:\n      description: \"returns List\u003cAuthor\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Author'\n\n    PublicationResponse:\n      description: \"return Publication\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Publication\"\n\n    ListOfPublicationResponse:\n      description: \"return List\u003cPublication\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Publication'\n\n    PublicationForGUIResponse:\n      description: \"return PublicationForGUI\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PublicationForGUI\"\n\n    ListOfPublicationForGUIResponse:\n      description: \"return List\u003cPublicationForGUI\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/PublicationForGUI\"\n\n    AttributeDefinitionResponse:\n      description: \"returns AttributeDefinition\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/AttributeDefinition\"\n\n    ListOfAttributeDefinitionsResponse:\n      description: \"returns List\u003cAttribute\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/AttributeDefinition\"\n\n    ListOfAttributeRightsResponse:\n      description: \"returns List\u003cAttributeRights\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/AttributeRights\"\n\n    ListOfAttributePolicyCollectionResponse:\n      description: \"returns List\u003cAttributePolicyCollection\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/AttributePolicyCollection\"\n\n    AttributeResponse:\n      description: \"returns Attribute\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Attribute\"\n\n    ListOfAttributesResponse:\n      description: \"returns List\u003cAttribute\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Attribute\"\n\n    EntitylessAttributesByKeysResponse:\n      description: \"Entityless attributes by keys\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/EntitylessAttributesByKeys\"\n\n    GroupResponse:\n      description: \"returns Group\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Group\"\n\n    RichGroupResponse:\n      description: \"returns RichGroup\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/RichGroup\"\n\n    ListOfGroupsResponse:\n      description: \"returns List\u003cGroup\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Group\"\n\n    ListOfListsOfGroupsResponse:\n      description: \"returns List\u003cList\u003cGroup\u003e\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Group\"\n\n    ListOfPerunPoliciesResponse:\n      description: \"returns List\u003cPerunPolicy\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/PerunPolicy\"\n\n    ListOfRolesManagementRulesResponse:\n      description: \"returns List\u003cRoleManagementRules\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/RoleManagementRules\"\n\n    ListOfNamespacesRulesResponse:\n      description: \"returns List\u003cNamespaceRules\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/NamespaceRules\"\n\n    ListOfRichGroupsResponse:\n      description: \"returns List\u003cRichGroup\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/RichGroup\"\n\n    PaginatedRichGroupsResponse:\n      description: \"returns Paginated\u003cRichGroup\u003e\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PaginatedRichGroups\"\n\n    PaginatedRichMembersResponse:\n      description: \"returns Paginated\u003cRichMember\u003e\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PaginatedRichMembers\"\n\n    PaginatedRichApplicationsResponse:\n      description: \"returns Paginated\u003cRichApplication\u003e\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PaginatedRichApplications\"\n\n    ResourceResponse:\n      description: \"returns Resource\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Resource\"\n\n    ListOfResourcesResponse:\n      description: \"returns List\u003cResource\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Resource\"\n\n    ResourceTagResponse:\n      description: \"returns ResourceTag\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ResourceTag\"\n\n    ListOfResourceTagsResponse:\n      description: \"returns List\u003cResourceTag\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/ResourceTag\"\n\n    RichResourceResponse:\n      description: \"returns RichResource\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/RichResource\"\n\n    EnrichedResourceResponse:\n      description: \"returns EnrichedResource\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/EnrichedResource\"\n\n    ListOfRichResourcesResponse:\n      description: \"returns List\u003cRichResource\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/RichResource\"\n\n    ListOfEnrichedResourcesResponse:\n      description: \"returns List\u003cEnrichedResource\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/EnrichedResource\"\n\n    ListOfAssignedResourcesResponse:\n      description: \"returns List\u003cAssignedResource\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/AssignedResource\"\n\n    ListOfAssignedGroupsResponse:\n      description: \"returns List\u003cAssignedGroup\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/AssignedGroup\"\n\n    VoResponse:\n      description: \"returns Vo\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Vo\"\n\n    EnrichedVoResponse:\n      description: \"returns enriched Vo\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/EnrichedVo\"\n\n    ListOfVosResponse:\n      description: \"returns List\u003cVo\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Vo\"\n\n    ListOfEnrichedVosResponse:\n      description: \"returns List\u003cEnrichedVo\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/EnrichedVo\"\n\n    ExtSourceResponse:\n      description: \"returns ExtSource\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ExtSource\"\n\n    ListOfExtSourcesResponse:\n      description: \"returns List\u003cExtSource\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/ExtSource\"\n\n    ListOfUserExtSourcesResponse:\n      description: \"returns List\u003cUserExtSource\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/UserExtSource\"\n\n    ListOfRichUserExtSourcesResponse:\n      description: \"returns List\u003cRichUserExtSource\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/RichUserExtSource\"\n\n    ApplicationFormResponse:\n      description: \"returns ApplicationForm\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ApplicationForm\"\n\n    ListOfApplicationFormItemsResponse:\n      description: \"returns List\u003cApplicationFormItem\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/ApplicationFormItem\"\n\n    ListOfApplicationFormItemDataResponse:\n      description: \"returns List\u003cApplicationFormItemData\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/ApplicationFormItemData\"\n\n    ApplicationResponse:\n      description: \"returns Application\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Application\"\n\n    ListOfApplicationsResponse:\n      description: \"returns List\u003cApplication\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Application\"\n\n    ServiceResponse:\n      description: \"returns Service\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Service\"\n\n    ListOfServicesResponse:\n      description: \"returns List\u003cService\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Service\"\n\n    HostResponse:\n      description: \"returns Host\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Host\"\n\n    ListOfHostsResponse:\n      description: \"returns List\u003cHost\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Host\"\n\n    ListOfEnrichedHostsResponse:\n      description: \" returns List\u003cEnrichedHost\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/EnrichedHost\"\n\n    DestinationResponse:\n      description: \"returns Destination\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Destination\"\n\n    ListOfDestinationsResponse:\n      description: \"returns List\u003cDestination\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Destination\"\n\n    ListOfRichDestinationsResponse:\n      description: \"returns List\u003cRichDestination\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/RichDestination\"\n\n    GraphDTOResponse:\n      description: \"returns GraphDTO\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GraphDTO\"\n\n    BanOnVoResponse:\n      description: \"returns banOnVo\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/BanOnVo\"\n\n    ListOfBanOnVoResponse:\n      description: \"return List\u003cBanOnVo\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/BanOnVo\"\n\n    BanOnResourceResponse:\n      description: \"returns banOnResource\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/BanOnResource\"\n\n    ListOfBanOnResourceResponse:\n      description: \"return List\u003cBanOnResource\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/BanOnResource\"\n\n    ListOfServiceForGUIResponse:\n      description: \"return List\u003cServiceForGUI\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/ServiceForGUI\"\n\n\n    SecurityTeamResponse:\n      description: \"returns SecurityTeam\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/SecurityTeam\"\n\n    ListOfSecurityTeamsResponse:\n      description: \"returns List\u003cSecurityTeam\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/SecurityTeam\"\n\n    ListOfCandidatesResponse:\n      description: \"return List\u003cCandidate\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Candidate\"\n\n    BanOnFacilityResponse:\n      description: \"returns banOnFacility\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/BanOnFacility\"\n\n    ListOfBanOnFacilitiesResponse:\n      description: \"return List\u003cBanOnFacility\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/BanOnFacility\"\n\n    ListOfMemberCandidatesResponse:\n      description: \"return List\u003cMemberCandidate\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/MemberCandidate\"\n\n    ServiceAttributesResponse:\n      description: \"return List\u003cServiceAttributes\u003e\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ServiceAttributes\"\n\n    HashedGenDataResponse:\n      description: \"return hashed gen data\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/HashedGenData\"\n\n    ServicesPackageResponse:\n      description: \"return ServicesPackage\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ServicesPackage\"\n\n    ListOfServicesPackageResponse:\n      description: \"return List\u003cServicesPackage\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/ServicesPackage\"\n\n    TaskResponse:\n      description: \"Task\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Task\"\n\n    ListOfTasksResponse:\n      description: \"List\u003cTask\u003e Tasks\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Task\"\n\n    ApplicationMailResponse:\n      description: \"ApplicationMail\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ApplicationMail\"\n\n    ListOfApplicationMailsResponse:\n      description: \"List\u003cApplicationMail\u003e Application mails\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/ApplicationMail\"\n\n    TaskResultResponse:\n      description: \"Task result\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/TaskResult\"\n\n    ListOfTaskResultsResponse:\n      description: \"List\u003cTaskResult\u003e Task results\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/TaskResult\"\n\n    FacilityStateResponse:\n      description: \"Facility state\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/FacilityState\"\n\n    ListOfFacilityStatesResponse:\n      description: \"List\u003cFacilityState\u003e Propagation status\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/FacilityState\"\n\n    ListOfResourceStatesResponse:\n      description: \"List\u003cResourceState\u003e Propagation status\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/ResourceState\"\n\n    ListOfServiceStatesResponse:\n      description: \"List\u003cServiceState\u003e serviceStates\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/ServiceState\"\n\n    AuthzRolesResponse:\n      description: AuthzRoles of user\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/AuthzRoles\"\n\n    RTMessageResponse:\n      description: Confirmation with e-mail address the ticket was created for\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/RTMessage\"\n\n    UserExtSourceResponse:\n      description: \"returns userExtSource\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UserExtSource\"\n\n    PerunAppsConfigResponse:\n      description: \"returns configuration of perun apps brandings and apps' domains\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PerunAppsConfig\"\n\n    GroupMemberDataResponse:\n      description: \"returns member-groups relations with attributes\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GroupMemberData\"\n\n    ListOfIdentityResponse:\n      description: \"List\u003cIdentity\u003e Identities\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Identity\"\n\n    ConsentHubResponse:\n      description: \"returns ConsentHub\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ConsentHub\"\n\n    ListOfConsentHubResponse:\n      description: \"returns List\u003cConsentHub\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/ConsentHub\"\n\n    ConsentResponse:\n      description: \"returns Consent\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Consent\"\n\n    ListOfConsentResponse:\n      description: \"returns List\u003cConsent\u003e\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Consent\"\n\n\n\n  #####################################################\n  #                                                   #\n  # PARAMETERS - definitions of often used parameters #\n  #                                                   #\n  #####################################################\n  parameters:\n    id:\n      name: id\n      description: numeric id\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    ids:\n      name: \"ids[]\"\n      description: \"list of ids List\u003cInteger\u003e\"\n      in: query\n      required: true\n      schema:\n        type: array\n        items:\n          type: integer\n\n    async:\n      name: async\n      description: \"asynchronous flag, if set to true, some operation will be performed asynchronously\"\n      schema:\n        type: boolean\n      in: query\n      required: false\n\n    assignInactive:\n      name: assignInactive\n      description: \"flag, if set to true, group-resource assignment will have status INACTIVE\"\n      schema:\n        type: boolean\n      in: query\n      required: false\n\n    autoAssignSubgroups:\n      name: autoAssignSubgroups\n      description: \"flag, if set to true, subgroups are assigned to resource as well\"\n      schema:\n        type: boolean\n      in: query\n      required: false\n\n    attributeId:\n      name: attributeId\n      description: \"id of AttributeDefinition\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    attributeInteger:\n      name: attribute\n      description: \"id of AttributeDefinition\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    attributeDefinitionId:\n      name: attributeDefinition\n      description: \"id of AttributeDefinition\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    attrDefId:\n      name: attributeDefinition\n      description: \"id of AttributeDefinition\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    attributes:\n      name: \"attributes[]\"\n      description: \"list of attribute ids List\u003cInteger\u003e\"\n      in: query\n      required: true\n      schema:\n        type: array\n        items:\n          type: integer\n\n    attributeName:\n      name: attributeName\n      description: \"full name of attribute definition (namespace + ':' + friendlyName)\"\n      schema:\n        type: string\n      in: query\n      required: true\n\n    attrName:\n      name: attrName\n      description: \"full name of attribute definition (namespace + ':' + friendlyName)\"\n      schema:\n        type: string\n      in: query\n      required: true\n\n    attrNames:\n      name: \"attrNames[]\"\n      description: \"list of attribute names List\u003cString\u003e\"\n      in: query\n      required: true\n      schema:\n        type: array\n        items:\n          type: string\n\n    attrsNames:\n      name: \"attrsNames[]\"\n      description: \"list of attribute names List\u003cString\u003e\"\n      in: query\n      required: true\n      schema:\n        type: array\n        items:\n          type: string\n\n    attrNamesOptional:\n      name: \"attrNames[]\"\n      description: \"list of attribute names List\u003cString\u003e or null\"\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n\n    attributeValue:\n      name: attributeValue\n      description: \"string value of Attribute\"\n      schema:\n        type: string\n      in: query\n      required: true\n\n    consentHubId:\n      name: consentHub\n      description: \"id of ConsentHub\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    consentId:\n      name: consent\n      description: \"id of Consent\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    facilityId:\n      name: facility\n      description: \"id of Facility\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    facilityName:\n      name: facility\n      description: \"name of Facility\"\n      schema:\n        type: string\n      in: query\n      required: true\n\n    optionalFacilityId:\n      name: facility\n      description: \"id of Facility\"\n      schema:\n        type: integer\n      in: query\n      required: false\n\n    userId:\n      name: user\n      description: \"id of User\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    specificUserId:\n      name: specificUser\n      description: \"id of specific User\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    publicationId:\n      name: publication\n      description: \"id of publication\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    isbn:\n      name: isbn\n      description: \"ISBN\"\n      schema:\n        type: string\n      in: query\n      required: false\n\n    doi:\n      name: doi\n      description: \"DOI\"\n      schema:\n        type: string\n      in: query\n      required: false\n\n    title:\n      name: title\n      description: \"Title\"\n      schema:\n        type: string\n      in: query\n      required: false\n\n    userIdLiterally:\n      name: userId\n      description: \"id of User\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    optionalUserId:\n      name: user\n      description: \"id of User\"\n      schema:\n        type: integer\n      in: query\n      required: false\n\n    memberId:\n      name: member\n      description: \"id of Member\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    memberIds:\n      name: \"members[]\"\n      description: \"id of Member\"\n      schema:\n        type: array\n        items:\n          type: integer\n      in: query\n      required: true\n\n    optionalMemberId:\n      name: member\n      description: \"id of Member\"\n      schema:\n        type: integer\n      in: query\n      required: false\n\n    voId:\n      name: vo\n      description: \"id of Vo\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    memberVoId:\n      name: memberVo\n      description: \"id of member Vo\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    banId:\n      name: banId\n      description: \"id of a ban\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    optionalVoId:\n      name: vo\n      description: \"id of Vo\"\n      schema:\n        type: integer\n      in: query\n      required: false\n\n    groupId:\n      name: group\n      description: \"id of Group\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    optionalGroupId:\n      name: group\n      description: \"id of Group\"\n      schema:\n        type: integer\n      in: query\n      required: false\n\n    groupIds:\n      name: \"groups[]\"\n      description: \"list of Group ids List\u003cInteger\u003e\"\n      in: query\n      required: true\n      schema:\n        type: array\n        items:\n          type: integer\n\n    groupDescription:\n      name: description\n      description: \"description of Group\"\n      schema:\n        type: string\n      in: query\n      required: true\n\n    groupName:\n      name: name\n      description: \"name of Group\"\n      schema:\n        type: string\n      in: query\n      required: true\n\n    resourceId:\n      name: resource\n      description: \"id of Resource\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    optionalResourceId:\n      name: resource\n      description: \"id of Resource\"\n      schema:\n        type: integer\n      in: query\n      required: false\n\n    resourceIds:\n      name: \"resources[]\"\n      description: \"list of Resource ids List\u003cInteger\u003e\"\n      in: query\n      required: true\n      schema:\n        type: array\n        items:\n          type: integer\n\n    userExtSourceId:\n      name: userExtSource\n      description: \"id of UserExtSource\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    optionalUserExtSourceId:\n      name: userExtSource\n      description: \"id of UserExtSource\"\n      schema:\n        type: integer\n      in: query\n      required: false\n\n    hostId:\n      name: host\n      description: \"id of Host\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    optionalHostId:\n      name: host\n      description: \"id of Host\"\n      schema:\n        type: integer\n      in: query\n      required: false\n\n    hostnames:\n      name: \"hostnames[]\"\n      description: \"list of host names List\u003cString\u003e\"\n      in: query\n      required: true\n      schema:\n        type: array\n        items:\n          type: string\n\n    listOfHostIds:\n      name: \"hosts[]\"\n      description: \"list of host ids List\u003cInteger\u003e\"\n      in: query\n      required: true\n      schema:\n        type: array\n        items:\n          type: integer\n\n    listOfAllowedStatuses:\n      name: \"allowedStatuses[]\"\n      description: \"list of allowed statuses List\u003cString\u003e\"\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n\n    listOfAllowedGroupStatuses:\n      name: \"allowedGroupStatuses[]\"\n      description: \"list of allowed group statuses List\u003cString\u003e\"\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - VALID\n            - EXPIRED\n\n    destinationId:\n      name: destination\n      description: \"id of Destination\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    destinationName:\n      name: destination\n      description: \"string name of destination\"\n      schema:\n        type: string\n      in: query\n      required: true\n\n    ownerId:\n      name: owner\n      description: \"id of Owner\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    ownerName:\n      name: owner\n      description: \"name of Owner\"\n      schema:\n        type: string\n      in: query\n      required: true\n\n    serviceId:\n      name: service\n      description: \"id of Service\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    serviceIds:\n      name: \"services[]\"\n      description: \"list of Service ids List\u003cInteger\u003e\"\n      in: query\n      required: true\n      schema:\n        type: array\n        items:\n          type: integer\n\n    servicesPackageId:\n      name: servicesPackage\n      description: \"id of ServicesPackage\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    workWithUserAttributes:\n      name: workWithUserAttributes\n      description: \"flag to work with user attributes\"\n      schema:\n        type: boolean\n      in: query\n      required: true\n\n    workWithUserAttributesOptional:\n      name: workWithUserAttributes\n      description: \"flag to work with user attributes\"\n      schema:\n        type: boolean\n      in: query\n      required: false\n\n    workWithGroupAttributes:\n      name: workWithGroupAttributes\n      description: \"flag to work with group attributes\"\n      schema:\n        type: boolean\n      in: query\n      required: true\n\n    extLogin:\n      name: extLogin\n      description: external login of user, e.g. john\n      schema:\n        type: string\n      in: query\n      required: true\n\n    sourceId:\n      name: source\n      description: external source id\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    extSourceName:\n      name: extSourceName\n      description: external source name, e.g. IdP entityId\n      schema:\n        type: string\n      in: query\n      required: true\n\n    resultGroupId:\n      name: resultGroup\n      description: \"id of Group to have removed 'operandGroup' from subgroups\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    operandGroupId:\n      name: operandGroup\n      description: \"id of Group to have removed 'resultGroup' from subgroups\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    key:\n      name: key\n      description: key of an entityless attribute\n      schema:\n        type: string\n      in: query\n      required: true\n\n    complementaryObjectId:\n      name: complementaryObjectId\n      description: \"Property id of complementaryObject to get managers for\"\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    complementaryObjectName:\n      name: complementaryObjectName\n      description: \"Property beanName of complementaryObject, meaning object type (Vo | Group | Facility | ... )\"\n      schema:\n        type: string\n      in: query\n      required: true\n\n    role:\n      name: role\n      schema:\n        type: string\n      in: query\n      required: true\n\n    ListOfRoles:\n      name: \"roles[]\"\n      description: \"list of role names List\u003cString\u003e\"\n      in: query\n      required: true\n      schema:\n        type: array\n        items:\n          type: string\n\n    consumerName:\n      name: consumerName\n      schema:\n        type: string\n      in: query\n      required: true\n\n    applicationId:\n      name: appId\n      description: id of application\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    authorizedGroup:\n      name: authorizedGroup\n      description: 'Group id'\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    listOfApplicationFormItems:\n      name: \"ApplicationFormItem[]\"\n      description: \"list of ApplicationFormItem List\u003cApplicationFormItem\u003e\"\n      in: query\n      required: true\n      schema:\n        type: array\n        items:\n          $ref: \"#/components/schemas/ApplicationFormItem\"\n\n    applicationForm:\n      name: applicationForm\n      description: application form\n      schema:\n        $ref: \"#/components/schemas/ApplicationForm\"\n      in: query\n      required: true\n\n    searchString:\n      name: searchString\n      description: 'Text to search by'\n      schema:\n        type: string\n      in: query\n      required: true\n\n    specificAttributes:\n      name: specificAttributes\n      description: 'list of specified attributes which are needed in object richUser'\n      schema:\n        type: array\n        items:\n          type: string\n      in: query\n      required: true\n\n    destinationType:\n      name: destinationType\n      description: \"Destination type (like host, user@host, user@host:port, email, service-specific, ...)\"\n      schema:\n        type: string\n      in: query\n      required: true\n\n    taskId:\n      name: task\n      description: \"Task id\"\n      schema:\n        type: integer\n      required: true\n      in: query\n\n    taskResultId:\n      name: taskResult\n      description: \"TaskResult id\"\n      schema:\n        type: integer\n      required: true\n      in: query\n\n    name:\n      name: name\n      description: name of entity\n      schema:\n        type: string\n      in: query\n      required: true\n\n    namespace:\n      name: namespace\n      description: \"namespace\"\n      schema:\n        type: string\n      in: query\n      required: true\n\n    password:\n      name: password\n      description: password\n      schema:\n        type: string\n      in: query\n      required: true\n\n    login:\n      name: login\n      description: \"login\"\n      schema:\n        type: string\n      in: query\n      required: true\n\n    sponsorId:\n      name: sponsor\n      description: id of sponsor\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    optionalValidityTo:\n      name: validityTo\n      description: date in format yyyy-mm-dd\n      schema:\n        type: string\n        nullable: true\n      in: query\n      required: false\n\n    onlySponsored:\n      name: onlySponsored\n      description: \"Boolean specifying if only sponsored members should be returned\"\n      schema:\n        type: boolean\n      in: query\n      required: true\n\n    lookingInParentGroup:\n      name: lookingInParentGroup\n      description: If true, look up in a parent group\n      schema:\n        type: boolean\n      in: query\n      required: true\n\n    sponsoredMemberId:\n      name: sponsoredMember\n      description: id of member to be sponsored\n      schema:\n        type: integer\n      in: query\n      required: true\n\n    forceDelete:\n      name: force\n      description: \"If true, delete entity forcefully.\"\n      schema:\n        type: boolean\n      in: query\n      required: false\n\n\n\n#################################################\n#                                               #\n# TAGS - documentation for groups of operations #\n#                                               #\n#################################################\n\ntags:\n  - name: AuthzResolver\n    description: AuthzResolver RPC API in Perun\n    externalDocs:\n      url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AuthzResolver.html\n  - name: AuditMessagesManager\n    description: AuditMessage RPC API in Perun\n    externalDocs:\n      url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AuditMessagesManager.html\n  - name: CabinetManager\n    description: CabinetManager RPC API in Perun\n    externalDocs:\n      url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-CabinetManager.html\n  - name: UsersManager\n    description: UsersManager RPC API in Perun\n    externalDocs:\n      url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-UsersManager.html\n  - name: MembersManager\n    description: MembersManager RPC API in Perun\n    externalDocs:\n      url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-MembersManager.html\n  - name: FacilitiesManager\n    description: FacilitiesManager RPC API in Perun\n    externalDocs:\n      url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-FacilitiesManager.html\n  - name: OwnersManager\n    description: OwnersManager RPC API in Perun\n    externalDocs:\n      url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-OwnersManager.html\n  - name: AttributesManager\n    description: AttributesManager RPC API in Perun\n    externalDocs:\n      url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html\n  - name: GroupsManager\n    description: GroupsManager RPC API in Perun\n    externalDocs:\n      url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-GroupsManager.html\n  - name: ResourcesManager\n    description: ResourcesManager RPC API in Perun\n    externalDocs:\n      url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-ResourcesManager.html\n  - name: VosManager\n    description: VosManager RPC API in Perun\n    externalDocs:\n      url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-VosManager.html\n  - name: TasksManager\n    description: TasksManager RPC API in Perun\n    externalDocs:\n      url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-TasksManager.html\n  - name: RTMessagesManager\n    description: RTMessagesManager RPC API in Perun\n    externalDocs:\n      url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-RTMessagesManager.html\n  - name: IntegrationManager\n    description: IntegrationManager RPC API in Perun\n    externalDocs:\n      url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-IntegrationManager.html\n  - name: Searcher\n    description: Searcher RPC API in Perun\n    externalDocs:\n      url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-Searcher.html\n  - name: ConsentsManager\n    description: ConsentsManager RPC API in Perun\n    externalDocs:\n      url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-ConsentsManager.html\n\n\n#################################################\n#                                               #\n# PATHS - URLs of RPC operations                #\n#                                               #\n#################################################\npaths:\n\n  #################################################\n  #                                               #\n  # Utils                                         #\n  #                                               #\n  #################################################\n\n  /:\n    get:\n      tags:\n        - Utils\n      operationId: getPerunRPCVersion\n      summary: Gets Perun runtime status\n      responses:\n        '200':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: \"OK! Version: 3.8.6, User: makub@META, extSource: META\"\n\n  /json/utils/getPerunStatus:\n    get:\n      tags:\n        - Utils\n      operationId: getPerunStatus\n      summary: Gets Perun runtime status\n      description: |\n        Returns list of strings which looks like this\n        \"Version of Perun: 3.8.6\",\n        \"Version of PerunDB: 3.1.55\",\n        \"Version of Servlet: Apache Tomcat/9.0.16 (Debian)\",\n        \"Version of DB-driver: PostgreSQL JDBC Driver-42.2.8\",\n        \"Version of DB: PostgreSQL-12.0 (Debian 12.0-2.pgdg100+1)\",\n        \"Version of Java platform: 11.0.5\",\n        \"AuditerConsumer: '127.0.0.1:6071' with last processed id='23463958'\",\n        \"AuditerConsumer: 'ldapcConsumer' with last processed id='23463958'\",\n        \"AuditerConsumer: 'notifications' with last processed id='23463952'\",\n        \"LastMessageId: 23463958\",\n        \"Timestamp: 2019-11-14 10:12:30.99\"\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfStringsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/utils/getPerunStatistics:\n    get:\n      tags:\n        - Utils\n      operationId: getPerunStatistics\n      summary: Gets Perun runtime statistics\n      description: |\n        Returns list of strings which looks like this\n        \"Timestamp: '2019-11-14 10:46:39.613'\",\n        \"USERS: '39927'\",\n        \"FACILITIES: '552'\",\n        \"DESTINATIONS: '2568'\",\n        \"VOS: '341'\",\n        \"RESOURCES: '2560'\",\n        \"GROUPS: '2300'\",\n        \"AUDITMESSAGES: '7333237'\"\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfStringsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/utils/getPerunSystemTimeInMillis:\n    get:\n      tags:\n        - Utils\n      operationId: getPerunSystemTimeInMillis\n      summary: Gets Perun system time in milliseconds since the epoch\n      responses:\n        '200':\n          $ref: '#/components/responses/LongResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/utils/getGuiConfiguration:\n    get:\n      tags:\n        - Utils\n      operationId: getGuiConfiguration\n      summary: Gets perun-web-gui.properties as Map\u003cString,String\u003e\n      responses:\n        '200':\n          $ref: '#/components/responses/MapStringStringResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/utils/getAppsConfig:\n    get:\n      tags:\n        - Utils\n      operationId: getAppsConfig\n      summary: Gets configuration of perun apps brandings and apps' domains\n      description: Returns object of type PerunAppsConfig\n      responses:\n        '200':\n          $ref: '#/components/responses/PerunAppsConfigResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #################################################\n  #                                               #\n  # AuthzResolver                                 #\n  #                                               #\n  #################################################\n\n  /json/authzResolver/getPrincipalRoleNames:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getPrincipalRoleNames\n      summary: |\n        Returns list of caller's role names. Perun system uses role names in the upper case format. However,\n        for now, they are converted to the lower case format because of the compatibility with external systems.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfStringsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/getPerunPrincipal:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getPerunPrincipal\n      summary: Gets current user\n      description: Returns object representing the currently authenticated user.\n      responses:\n        '200':\n          description: successfully returned authenticated user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PerunPrincipal\"\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/getRichAdmins:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getAuthzRichAdmins\n      summary: Gets all valid rich admins\n      description: Get all valid richUser administrators (for group-based rights, status must be VALID for both Vo and group) for complementary object and role with specified attributes.\n      parameters:\n        - $ref: '#/components/parameters/role'\n        - $ref: '#/components/parameters/complementaryObjectId'\n        - $ref: '#/components/parameters/complementaryObjectName'\n        - { name: specificAttributes,\n            description: \"list of specified attributes which are needed in object richUser\",\n            schema: {\n              type: array,\n              items: {\n                type: string\n              }\n            },\n            in: query,\n            required: true\n        }\n        - { name: allUserAttributes,\n            description: \"When true, do not specify attributes through list and return them all in objects richUser. Ignoring list of specific attributes\",\n            schema: {\n              type: boolean,\n              default: false\n            },\n            in: query,\n            required: false\n        }\n        - { name: onlyDirectAdmins,\n            description: \"When true, return only direct users of the complementary object for role with specific attributes\",\n            schema: {\n              type: boolean,\n              default: true\n            },\n            in: query,\n            required: false\n        }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/getAdminGroups:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getAuthzAdminGroups\n      summary: Get all groups of managers (authorizedGroups) for complementaryObject and role\n      parameters:\n        - $ref: '#/components/parameters/role'\n        - $ref: '#/components/parameters/complementaryObjectId'\n        - $ref: '#/components/parameters/complementaryObjectName'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/setRole/u-co:\n    post:\n      tags:\n        - AuthzResolver\n      operationId: setRoleWithUserComplementaryObject\n      summary: Set role for user and complementaryObject\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: setRoleWithUserComplementaryObject\n              description: \"input to setRoleWithUserComplementaryObject\"\n              type: object\n              required:\n                - role\n                - users\n              properties:\n                role: { type: string, nullable: false }\n                users:\n                  type: array\n                  description: \"List of user ids\"\n                  nullable: false\n                  items:\n                    type: integer\n                complementaryObject: { $ref: \"#/components/schemas/PerunBean\" }\n\n  /json/authzResolver/unsetRole/u-co:\n    post:\n      tags:\n        - AuthzResolver\n      operationId: unsetRoleWithUserComplementaryObject\n      summary: Unset role for user and complementaryObject\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: unsetRoleWithUserComplementaryObject\n              description: \"input to unsetRoleWithUserComplementaryObject\"\n              type: object\n              required:\n                - role\n                - users\n              properties:\n                role: { type: string, nullable: false }\n                users:\n                  type: array\n                  description: \"List of user ids\"\n                  nullable: false\n                  items:\n                    type: integer\n                complementaryObject: { $ref: \"#/components/schemas/PerunBean\" }\n\n\n  /json/authzResolver/setRole/g-co:\n    post:\n      tags:\n        - AuthzResolver\n      operationId: setRoleWithGroupComplementaryObject\n      summary: Set role for authorizedGroup and complementaryObject\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: setRoleWithGroupComplementaryObject\n              description: \"input to unsetRoleWithUserComplementaryObject\"\n              type: object\n              required:\n                - role\n                - authorizedGroups\n              properties:\n                role: { type: string, nullable: false }\n                authorizedGroups:\n                  type: array\n                  description: \"List of authorizedGroups ids\"\n                  nullable: false\n                  items:\n                    type: integer\n                complementaryObject: { $ref: \"#/components/schemas/PerunBean\" }\n\n  /json/authzResolver/unsetRole/g-co:\n    post:\n      tags:\n        - AuthzResolver\n      operationId: unsetRoleWithGroupComplementaryObject\n      summary: Unset role for authorizedGroup and complementaryObject\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: unsetRoleWithGroupComplementaryObject\n              description: \"input to unsetRoleWithUserComplementaryObject\"\n              type: object\n              required:\n                - role\n                - authorizedGroups\n              properties:\n                role: { type: string, nullable: false }\n                authorizedGroups:\n                  type: array\n                  description: \"List of authorizedGroups ids\"\n                  nullable: false\n                  items:\n                    type: integer\n                complementaryObject: { $ref: \"#/components/schemas/PerunBean\" }\n\n  /json/authzResolver/getUserRoles:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getUserRoles\n      summary: Returns all roles as an AuthzRoles object for a given user.\n      parameters:\n        - $ref: '#/components/parameters/userIdLiterally'\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthzRolesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/getUserRoleNames:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getUserRoleNames\n      summary: |\n        Returns list of user's role names. Perun system uses role names in the upper case format. However,\n        for now, they are converted to the lower case format because of the compatibility with external systems.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfStringsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/getGroupRoleNames:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getGroupRoleNames\n      summary: |\n        Returns list of group's role names. Perun system uses role names in the upper case format. However,\n        for now, they are converted to the lower case format because of the compatibility with external systems.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfStringsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/authzResolver/getGroupRoles:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getGroupRoles\n      summary: Returns all roles as an AuthzRoles object for a given group.\n      parameters:\n        - name: groupId\n          description: \"id of Group\"\n          schema:\n            type: integer\n          in: query\n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthzRolesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/authzResolver/isVoAdmin:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: isVoAdmin\n      summary: Returns 1 if User has VO manager role (VOADMIN) or for specific VO defined by id\n      parameters:\n        - name: vo\n          description: \"id of Vo\"\n          schema:\n            type: integer\n          in: query\n          required: false\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/authzResolver/isGroupAdmin:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: isGroupAdmin\n      summary: Returns 1 if User has Group manager role (GROUPADMIN) or for specific Group defined by id\n      parameters:\n        - $ref: '#/components/parameters/optionalGroupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/authzResolver/isFacilityAdmin:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: isFacilityAdmin\n      summary: Returns 1 if User has Facility manager role (FACILITYADMIN) or for specific Facility defined by id\n      parameters:\n        - $ref: '#/components/parameters/optionalFacilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/isPerunAdmin:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: isPerunAdmin\n      summary: Returns 1 if User has Perun admin role (perunadmin).\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/getLoggedUser:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getLoggedUser\n      summary: Returns User which is associated with credentials used to log-in to Perun.\n      responses:\n        '200':\n          $ref: '#/components/responses/UserResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/keepAlive:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: keepAlive\n      summary: Returns \"OK\" string. Helper method for GUI check if connection is alive.\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/getAllPolicies:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getAllPolicies\n      summary: Return all loaded perun policies.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfPerunPoliciesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/getAllRolesManagementRules:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getAllRolesManagementRules\n      summary: Return all loaded roles management rules.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRolesManagementRulesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/loadAuthorizationComponents:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: loadAuthorizationComponents\n      summary: Load perun roles and policies from the configuration file perun-roles.yml.\n        Roles are loaded to the database and policies are loaded to the PerunPoliciesContainer.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/getVosWhereUserIsInRoles:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getVosWhereUserIsInRoles\n      summary: Get all Vos where the given user (principal if user not sent) has set one of the given roles\n        or the given user is a member of an authorized group with such roles.\n      parameters:\n        - $ref: '#/components/parameters/optionalUserId'\n        - $ref: '#/components/parameters/ListOfRoles'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfVosResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/getFacilitiesWhereUserIsInRoles:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getFacilitiesWhereUserIsInRoles\n      summary: Get all Facilities where the given user (principal if user not sent) has set one of the given roles\n        or the given user is a member of an authorized group with such roles.\n      parameters:\n        - $ref: '#/components/parameters/optionalUserId'\n        - $ref: '#/components/parameters/ListOfRoles'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/getResourcesWhereUserIsInRoles:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getResourcesWhereUserIsInRoles\n      summary: Get all Resources where the given user (principal if user not sent) has set one of the given roles\n        or the given user is a member of an authorized group with such roles.\n      parameters:\n        - $ref: '#/components/parameters/optionalUserId'\n        - $ref: '#/components/parameters/ListOfRoles'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/getGroupsWhereUserIsInRoles:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getGroupsWhereUserIsInRoles\n      summary: Get all Groups where the given user (principal if user not sent) has set one of the given roles\n        or the given user is a member of an authorized group with such roles.\n      parameters:\n        - $ref: '#/components/parameters/optionalUserId'\n        - $ref: '#/components/parameters/ListOfRoles'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/getMembersWhereUserIsInRoles:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getMembersWhereUserIsInRoles\n      summary: Get all Members where the given user (principal if user not sent) has set one of the given roles\n        or the given user is a member of an authorized group with such roles.\n      parameters:\n        - $ref: '#/components/parameters/optionalUserId'\n        - $ref: '#/components/parameters/ListOfRoles'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/authzResolver/getSecurityTeamsWhereUserIsInRoles:\n    get:\n      tags:\n        - AuthzResolver\n      operationId: getSecurityTeamsWhereUserIsInRoles\n      summary: Get all SecurityTeams where the given user (principal if user not sent) has set one of the given roles\n        or the given user is a member of an authorized group with such roles.\n      parameters:\n        - $ref: '#/components/parameters/optionalUserId'\n        - $ref: '#/components/parameters/ListOfRoles'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfSecurityTeamsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #################################################\n  #                                               #\n  # AttributesManager                             #\n  #                                               #\n  #################################################\n\n\n  /json/attributesManager/getAttributes/f-r-u-m:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getFacilityResourceUserMemberAttributes\n      summary: Get all non-empty member, user, member-resource and user-facility attributes.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/f-u:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getFacilityUserAttributes\n      summary: Get all non-empty attributes associated with the user on the facility.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes1\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/f-names:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getFacilityAttributesByNames\n      summary: Returns all specified Facility attributes for selected Facility.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes3\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/f:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getFacilityAttributes\n      summary: Returns all non-empty Facility attributes for selected Facility.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes2\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/vo-names:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getVoAttributesByNames\n      summary: Get all attributes associated with the vo which have name in list attrNames (empty too).\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes5\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/vo:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getVoAttributes\n      summary: Get all attributes associated with the vo.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes4\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/m-r-names-wu:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getMemberResourceAndUserFacilityAttributesByNames\n      description: |\n        Gets selected non-empty attributes associated with the member and the resource.\n        It returns member and member-resource attributes and also user and user-facility attributes if\n        workWithUserAttributes is true.\n        Attributes are selected by list of attr_names. Empty list means all attributes.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes9\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attrNames'\n        - $ref: '#/components/parameters/workWithUserAttributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/m-r-wu:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getMemberResourceAndUserFacilityAttributes\n      description: |\n        Gets all non-empty attributes associated with the member on the resource and if workWithUserAttributes is\n        true, gets also all non-empty user, user-facility and member attributes.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes8\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/workWithUserAttributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/r-g-m-names:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getResourceGroupMemberAttributesByNames\n      description: |\n        Get all attributes by the list of attrNames if they are in one of these namespaces:\n        - member\n        - group\n        - member-group\n        - resource\n        - member-resource\n        - group-resource\n        - user (get from member object)\n        - facility (get from resource object)\n        - user-facility\n        Returns all attributes even if they are empty or virtual.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes11\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/m-r:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getMemberResourceAttributes\n      summary: Get all non-empty attributes associated with the member on the resource.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes10\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/r-g-names-wg:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getResourceGroupAndGroupAttributesByNames\n      description: |\n        Get all attributes associated with the group and the resource which have their name in list attrNames (empty too).\n        Virtual attributes too.\n        If workWithGroupAttributes is true, return also all group attributes in list of attrNames (with virtual attributes too).\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes14\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attrNames'\n        - $ref: '#/components/parameters/workWithGroupAttributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/r-g-wg:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getResourceGroupAndGroupAttributes\n      description: |\n        Get all non-empty attributes associated with the group and resource. Virtual attributes too.\n        If workWithGroupAttributes is true, return also all group attributes.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes13\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/workWithGroupAttributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/r-g:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getResourceGroupAttributes\n      summary: Get all non-empty attributes associated with the group on resource.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes12\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/r-names:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getResourceAttributesByNames\n      description: |\n        Get all attributes associated with the resource which have name in list attrNames (empty too).\n        Virtual attributes too.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes16\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/r:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getResourceAttributes\n      summary: Get all non-empty attributes associated with the resource.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes15\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/m-g-names-wu:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getMemberGroupAndUserAttributesByNames\n      description: |\n        Get all attributes associated with the member in the group which have name in list attrNames (empty too).\n        If workWithUserAttribute is true, return also all user attributes in list of attrNames (with virtual attributes too).\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes17\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attrNames'\n        - $ref: '#/components/parameters/workWithUserAttributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/m-names-wu:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getMemberAndUserAttributesByNames\n      description: |\n        Get all attributes associated with the member which have name in list attrNames (empty too).\n        Virtual attributes too.\n        If workWithUserAttribute is true, return also all user attributes in list of attrNames (with virtual attributes too).\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/attrNames'\n        - $ref: '#/components/parameters/workWithUserAttributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/m-wu:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getMemberAndUserAttributes\n      description: |\n        Get all non-empty attributes associated with the member and if workWithUserAttributes is\n        true, get all non-empty attributes associated with user, who is this member.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes19\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/workWithUserAttributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/m-g-names:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getMemberGroupAttributesByNames\n      description: |\n        Get all attributes (empty and virtual too)associated with the member in the group which have name in list attrNames.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes20\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/m-names:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getMemberAttributesByNames\n      description: |\n        Get all attributes associated with the member which have name in list attrNames (empty too).\n        Virtual attribute too.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes21\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/m-g:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getMemberGroupAttributes\n      description: |\n        Get all non-empty attributes associated with the member in the group.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes22\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/m:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getMemberAttributes\n      description: |\n        Get all non-empty attributes associated with the member.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes18\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/u-names:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getUserAttributesByNames\n      description: |\n        Get all attributes associated with the user which have name in list attrNames (empty too).\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes24\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/u:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getUserAttributes\n      description: |\n        Get all non-empty attributes associated with the user.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes23\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/g-names:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getGroupAttributesByNames\n      description: |\n        Get all attributes associated with the group which have name in list attrNames (empty too).\n        Virtual attribute too.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes26\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/g:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getGroupAttributes\n      description: |\n        Get all non-empty attributes associated with the group.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes25\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/h:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getHostAttributes\n      description: |\n        Get all non-empty attributes associated with the host.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes27\n      parameters:\n        - $ref: '#/components/parameters/hostId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/h-names:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getHostAttributesByNames\n      description: |\n        Get all non-empty attributes associated with the host which have name in list attrNames (empty too). Empty list attrNames will return no attributes.\n      parameters:\n        - $ref: '#/components/parameters/hostId'\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/key:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getEntitylessAttributesByKey\n      description: |\n        Get all entityless attributes with subject equaled String key.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes28\n      parameters:\n        - { name: key, description: \"key for entityless attributes\", schema: { type: string },  in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/ues-names:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getUserExtSourceAttributesByNames\n      description: |\n        Get all attributes associated with the userExtSource which have name in list attrNames (empty too).\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes7\n      parameters:\n        - $ref: '#/components/parameters/userExtSourceId'\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/ues:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getUserExtSourceAttributes\n      description: |\n        Get all non-empty attributes associated with the UserExtSource.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html#AttributesManagergetAttributes6\n      parameters:\n        - $ref: '#/components/parameters/userExtSourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getEntitylessAttributes:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getEntitylessAttributesByName\n      summary: Returns all entityless attributes with attrName.\n      parameters:\n        - $ref: '#/components/parameters/attrName'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getEntitylessKeys:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getEntitylessKeys\n      summary: Returns list of Keys which fits the attributeDefinition.\n      parameters:\n        - $ref: '#/components/parameters/attributeDefinitionId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfStringsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getEntitylessAttributesWithKeys:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getEntitylessAttributesWithKeys\n      summary: Get entityless attributes mapped by their keys.\n      parameters:\n        - $ref: '#/components/parameters/attrName'\n        - { name: \"keys[]\", description: \"key for entityless attribute\", schema: { type: array, items: { type: string } },  in: query, required: false }\n      responses:\n        '200':\n          $ref: '#/components/responses/EntitylessAttributesByKeysResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n\n  /json/attributesManager/setAttributes/f-r-g-u-m:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setFacilityResourceGroupUserMemberAttributes\n      description: |\n        Store the member, user, member-group, member-resource and user-facility attributes.\n        If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n        Group and group-resource attributes are not supported in this context.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetFacilityResourceGroupUserMemberAttributes\n              description: \"input to setFacilityResourceGroupUserMemberAttributes\"\n              type: object\n              required:\n                - facility\n                - resource\n                - group\n                - user\n                - member\n                - attributes\n              properties:\n                facility: { type: integer, description: \"facility id\", nullable: false }\n                resource: { type: integer, description: \"resource id\", nullable: false }\n                group: { type: integer, description: \"group id\", nullable: false }\n                user: { type: integer, description: \"user id\", nullable: false }\n                member: { type: integer, description: \"member id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n\n  /json/attributesManager/setAttributes/f-r-u-m:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setFacilityResourceUserMemberAttributes\n      description: |\n        Store the member, user, member-resource and user-facility attributes.\n        If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetFacilityResourceUserMemberAttributes\n              description: \"input to setFacilityResourceUserMemberAttributes\"\n              type: object\n              properties:\n                facility: { type: integer, description: \"facility id\", nullable: false }\n                resource: { type: integer, description: \"resource id\", nullable: false }\n                user: { type: integer, description: \"user id\", nullable: false }\n                member: { type: integer, description: \"member id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n\n  /json/attributesManager/setAttributes/f-u:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setFacilityUserAttributes\n      description: |\n        Store the attributes associated with the facility and user combination.\n        If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetFacilityUserAttributes\n              description: \"input to setFacilityUserAttributes\"\n              type: object\n              properties:\n                facility: { type: integer, description: \"facility id\", nullable: false }\n                user: { type: integer, description: \"user id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n\n  /json/attributesManager/setAttributes/f:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setFacilityAttributes\n      description: |\n        Store the attributes associated with the facility.\n        If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetFacilityAttributes\n              description: \"input to setFacilityAttributes\"\n              type: object\n              properties:\n                facility: { type: integer, description: \"facility id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n\n  /json/attributesManager/setAttributes/vo:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setVoAttributes\n      description: |\n        Store the attributes associated with the vo.\n        If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetVoAttributes\n              description: \"input to setVoAttributes\"\n              type: object\n              properties:\n                vo: { type: integer, description: \"vo id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n\n  /json/attributesManager/setAttributes/m-r-wu:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setMemberResourceAndUserAttributes\n      description: |\n        Store the attributes associated with the resource and member combination.\n        If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n        If workWithUserAttributes is true, the method stores also the attributes associated with user, user-facility and member.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetMemberResourceAndUserAttributes\n              description: \"input to setMemberResourceAndUserAttributes\"\n              type: object\n              required:\n                - member\n                - resource\n                - attributes\n                - workWithUserAttributes\n              properties:\n                member: { type: integer, description: \"member id\", nullable: false }\n                resource: { type: integer, description: \"resource id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n                workWithUserAttributes: { type: boolean }\n\n  /json/attributesManager/setAttributes/m-r:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setMemberResourceAttributes\n      description: |\n        Store the attributes associated with the resource and member combination.\n        If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetMemberResourceAttributes\n              description: \"input to setMemberResourceAttributes\"\n              type: object\n              required:\n                - member\n                - resource\n                - attributes\n              properties:\n                member: { type: integer, description: \"member id\", nullable: false }\n                resource: { type: integer, description: \"resource id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n\n  /json/attributesManager/setAttributes/r-g-wg:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setResourceGroupWithGroupAttributes\n      description: |\n        Store the attributes associated with group and resource, if workWithUserAttributes is true then also from group itself.\n        If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetResourceGroupWithGroupAttributes\n              description: \"input to setResourceGroupWithGroupAttributes\"\n              type: object\n              required:\n                - resource\n                - group\n                - attributes\n                - workWithGroupAttributes\n              properties:\n                resource: { type: integer, description: \"resource id\", nullable: false }\n                group: { type: integer, description: \"group id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n                workWithGroupAttributes: { type: boolean }\n\n  /json/attributesManager/setAttributes/r-g:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setResourceGroupAttributes\n      description: |\n        Store the attributes associated with the group on resource.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetResourceGroupAttributes\n              description: \"input to setResourceGroupAttributes\"\n              type: object\n              required:\n                - resource\n                - group\n                - attributes\n              properties:\n                resource: { type: integer, description: \"resource id\", nullable: false }\n                group: { type: integer, description: \"group id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n\n  /json/attributesManager/setAttributes/r:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setResourceAttributes\n      description: |\n        Store the attributes associated with the resource.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetResourceAttributes\n              description: \"input to setResourceAttributes\"\n              type: object\n              required:\n                - resource\n                - attributes\n              properties:\n                resource: { type: integer, description: \"resource id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n\n  /json/attributesManager/setAttributes/m-g-wu:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setMemberGroupWithUserAttributes\n      description: |\n        Store the attributes associated with the member and group combination.\n        If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n        If workWithUserAttributes is true, the method stores also the attributes associated with user and member.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetMemberGroupWithUserAttributes\n              description: \"input to setMemberGroupWithUserAttributes\"\n              type: object\n              required:\n                - member\n                - group\n                - attributes\n                - workWithUserAttributes\n              properties:\n                member: { type: integer, description: \"member id\", nullable: false }\n                group: { type: integer, description: \"group id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n                workWithUserAttributes: { type: boolean }\n\n  /json/attributesManager/setAttributes/m-wu:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setMemberWithUserAttributes\n      description: |\n        Store the attributes associated with member and user (which we get from this member) if workWithUserAttributes is true.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetMemberWithUserAttributes\n              description: \"input to setMemberWithUserAttributes\"\n              type: object\n              required:\n                - member\n                - attributes\n                - workWithUserAttributes\n              properties:\n                member: { type: integer, description: \"member id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n                workWithUserAttributes: { type: boolean }\n\n  /json/attributesManager/setAttributes/m-g:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setMemberGroupAttributes\n      description: |\n        Store the attributes associated with the member and group combination.\n        If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetMemberGroupAttributes\n              description: \"input to setMemberGroupAttributes\"\n              type: object\n              required:\n                - member\n                - group\n                - attributes\n              properties:\n                member: { type: integer, description: \"member id\", nullable: false }\n                group: { type: integer, description: \"group id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n\n  /json/attributesManager/setAttributes/m:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setMemberAttributes\n      description: |\n        Store the attributes associated with the member.\n        If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetMemberAttributes\n              description: \"input to setMemberAttributes\"\n              type: object\n              required:\n                - member\n                - attributes\n              properties:\n                member: { type: integer, description: \"member id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n\n  /json/attributesManager/setAttributes/u:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setUserAttributes\n      description: |\n        Store the attributes associated with the user.\n        If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetUserAttributes\n              description: \"input to setUserAttributes\"\n              type: object\n              required:\n                - user\n                - attributes\n              properties:\n                user: { type: integer, description: \"user id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n\n  /json/attributesManager/setAttributes/g:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setGroupAttributes\n      description: |\n        Store the attributes associated with the group.\n        If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetGroupAttributes\n              description: \"input to setGroupAttributes\"\n              type: object\n              required:\n                - group\n                - attributes\n              properties:\n                group: { type: integer, description: \"group id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n\n  /json/attributesManager/setAttributes/h:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setHostAttributes\n      description: |\n        Store the attributes associated with the host.\n        If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetHostAttributes\n              description: \"input to setHostAttributes\"\n              type: object\n              required:\n                - host\n                - attributes\n              properties:\n                host: { type: integer, description: \"host id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n\n  /json/attributesManager/setAttributes/ues:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setUserExtSourceAttributes\n      description: |\n        Store the attributes associated with the UserExtSource.\n        If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetUserExtSourceAttributes\n              description: \"input to setUserExtSourceAttributes\"\n              type: object\n              required:\n                - userExtSource\n                - attributes\n              properties:\n                userExtSource: { type: integer, description: \"userExtSource id\", nullable: false }\n                attributes:\n                  type: array\n                  nullable: false\n                  items:\n                    $ref: '#/components/schemas/Attribute'\n\n  /json/attributesManager/getAttribute/name-facility:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getFacilityAttributeByName\n      summary: Returns a facility Attribute by its name.\n      description: This is an overloaded method getAttribute, specialized for facility and attribute name.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/attributeName'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/id-facility:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getFacilityAttributeById\n      summary: Returns a facility Attribute by its id.\n      description: This is an overloaded method getAttribute, specialized for facility and attribute id.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/name-user:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getUserAttributeByName\n      summary: Returns a user Attribute by its name.\n      description: This is an overloaded method getAttribute, specialized for user and attribute name.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/attributeName'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/id-user:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getUserAttributeById\n      summary: Returns a user Attribute by its id.\n      description: This is an overloaded method getAttribute, specialized for user and attribute id.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/user-facility:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getUserFacilityAttributes\n      summary: Returns all non-empty User-Facility attributes for selected User and Facility.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/name-user_facility:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getUserFacilityAttributeByName\n      summary: Returns a user_facility Attribute by its name.\n      description: This is an overloaded method getAttribute, specialized for user, facility and attribute name.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/attributeName'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/id-user_facility:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getUserFacilityAttributeById\n      summary: Returns a user_facility Attribute by its id.\n      description: This is an overloaded method getAttribute, specialized for user, facility and attribute id.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/name-vo:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getVoAttributeByName\n      summary: Returns a Vo Attribute by its name.\n      description: This is an overloaded method getAttribute, specialized for virtual organization and attribute name.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/attributeName'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/id-vo:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getVoAttributeById\n      summary: Returns a Vo Attribute by its id.\n      description: This is an overloaded method getAttribute, specialized for virtual organization and attribute id.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/name-member:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getMemberAttributeByName\n      summary: Returns a member Attribute by its name.\n      description: This is an overloaded method getAttribute, specialized for member and attribute name.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/attributeName'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/id-member:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getMemberAttributeById\n      summary: Returns a member Attribute by its id.\n      description: This is an overloaded method getAttribute, specialized for member and attribute id.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/name-group:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getGroupAttributeByName\n      summary: Returns a group Attribute by its name.\n      description: This is an overloaded method getAttribute, specialized for group and attribute name.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attributeName'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/id-group:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getGroupAttributeById\n      summary: Returns a group Attribute by its id.\n      description: This is an overloaded method getAttribute, specialized for group and attribute id.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/name-resource:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getResourceAttributeByName\n      summary: Returns a resource Attribute by its name.\n      description: This is an overloaded method getAttribute, specialized for resource and attribute name.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attributeName'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/id-resource:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getResourceAttributeById\n      summary: Returns a resource Attribute by its id.\n      description: This is an overloaded method getAttribute, specialized for resource and attribute id.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/name-member-group:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getMemberGroupAttributeByName\n      summary: Returns a member_group Attribute by its name.\n      description: This is an overloaded method getAttribute, specialized for member, group and attribute name.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attributeName'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/id-member-group:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getMemberGroupAttributeById\n      summary: Returns a member_group Attribute by its id.\n      description: This is an overloaded method getAttribute, specialized for member, group and attribute id.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/name-member-resource:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getMemberResourceAttributeByName\n      summary: Returns a member_resource Attribute by its name.\n      description: This is an overloaded method getAttribute, specialized for member, resource and attribute name.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attributeName'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/id-member-resource:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getMemberResourceAttributeById\n      summary: Returns a member_resource Attribute by its id.\n      description: This is an overloaded method getAttribute, specialized for member, resource and attribute id.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributes/group-resource:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getGroupResourceAttributes\n      summary: Returns all non-empty Group-Resource attributes for selected Group and Resource.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/name-group-resource:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getGroupResourceAttributeByName\n      summary: Returns a group_resource Attribute by its name.\n      description: This is an overloaded method getAttribute, specialized for group, resource and attribute name.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attributeName'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/id-group-resource:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getGroupResourceAttributeById\n      summary: Returns a group_resource Attribute by its id.\n      description: This is an overloaded method getAttribute, specialized for group, resource and attribute id.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/name-ues:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getUserExtSourceAttributeByName\n      summary: Returns a UserExtSource Attribute by its name.\n      description: This is an overloaded method getAttribute, specialized for UserExtSource and attribute name.\n      parameters:\n        - $ref: '#/components/parameters/userExtSourceId'\n        - $ref: '#/components/parameters/attributeName'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/id-ues:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getUserExtSourceAttributeById\n      summary: Returns a UserExtSource Attribute by its id.\n      description: This is an overloaded method getAttribute, specialized for UserExtSource and attribute id.\n      parameters:\n        - $ref: '#/components/parameters/userExtSourceId'\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/name-host:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getHostAttributeByName\n      summary: Returns a host Attribute by its name.\n      description: This is an overloaded method getAttribute, specialized for host and attribute name.\n      parameters:\n        - $ref: '#/components/parameters/hostId'\n        - $ref: '#/components/parameters/attributeName'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/id-host:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getHostAttributeById\n      summary: Returns a host Attribute by its id.\n      description: This is an overloaded method getAttribute, specialized for host and attribute id.\n      parameters:\n        - $ref: '#/components/parameters/hostId'\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/name-entityless:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getEntitylessAttributeByName\n      summary: Returns an entityless Attribute by its name.\n      description: This is an overloaded method getAttribute, specialized for entityless key and attribute name.\n      parameters:\n        - { name: key, description: \"key for entityless attribute\", schema: { type: string },  in: query, required: true }\n        - $ref: '#/components/parameters/attributeName'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttribute/any:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getAttribute\n      summary: Returns an Attribute by its name or id.\n      description: |\n        This method cannot be fully described correctly in OpenID, because it cannot describe allowed combinations of parameters.\n        One of attributeName, attributeId is required.\n        The other parameters specify ids that can be combined in the following ways:\n         (facility), (user), (user,facility), (vo), (member), (group), (resource),\n         (member,group), (member,resource), (group,resource),(userExtSource), (host), (key)\n        Use the specialized methods getFacilityAttributeByName(), getMemberResourceAttributeById() etc.\n      externalDocs:\n        url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AttributesManager.html\n      parameters:\n        - { name: attributeName, description: \"full name of attribute (namespace + ':' + friendlyName)\", schema: { type: string },  in: query }\n        - { name: attributeId, description: \"id of attribute\", schema: { type: integer },  in: query }\n        - { name: facility, description: \"id of Facility\", schema: { type: integer },  in: query }\n        - { name: user, description: \"id of User\", schema: { type: integer },  in: query }\n        - { name: vo, description: \"id of Vo\", schema: { type: integer },  in: query }\n        - { name: resource, description: \"id of Resource\", schema: { type: integer },  in: query }\n        - { name: member, description: \"id of Member\", schema: { type: integer },  in: query }\n        - { name: group, description: \"id of Group\", schema: { type: integer },  in: query }\n        - { name: host, description: \"id of Host\", schema: { type: integer },  in: query }\n        - { name: userExtSource, description: \"id of UserExtSource\", schema: { type: integer },  in: query }\n        - { name: key, description: \"key for entityless attribute\", schema: { type: string },  in: query }\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributeDefinition:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getAttributeDefinitionByName\n      summary: Returns an AttributeDefinition by its name.\n      parameters:\n        - $ref: '#/components/parameters/attributeName'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeDefinitionResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributesDefinition:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getAllAttributeDefinitions\n      summary: Returns all AttributeDefinitions.\n      parameters: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributeDefinitionsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributeDefinitionById:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getAttributeDefinitionById\n      summary: Returns an AttributeDefinition by its id.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeDefinitionResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributesDefinitionByNamespace:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getAttributeDefinitionsByNamespace\n      summary: Returns all AttributeDefinitions in a namespace.\n      parameters:\n        - {\n          name: namespace,\n          description: \"name of namespace to obtain attribute definitions from\",\n          schema: { type: string },\n          in: query,\n          required: true\n        }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributeDefinitionsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/getAttributesDefinitionWithRights:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getAttributesDefinitionWithRights\n      summary: Returns all AttributeDefinitions for every entity and possible\n        combination of entities with rights. Only attribute definition of\n        attributes user can read (or write) you will get. Combination of entities\n        is based on provided parameters, which are optional (at least one must be present).\n      parameters:\n        - $ref: '#/components/parameters/optionalMemberId'\n        - $ref: '#/components/parameters/optionalUserId'\n        - $ref: '#/components/parameters/optionalVoId'\n        - $ref: '#/components/parameters/optionalGroupId'\n        - $ref: '#/components/parameters/optionalResourceId'\n        - $ref: '#/components/parameters/optionalFacilityId'\n        - $ref: '#/components/parameters/optionalHostId'\n        - $ref: '#/components/parameters/optionalUserExtSourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributeDefinitionsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  ##\n  # combinations:\n  #  (facility), (user), (user,facility), (vo), (member), (group), (resource),\n  #  (member,group), (member,resource), (group,resource),(userExtSource), (host), (key)\n\n  /json/attributesManager/setAttribute/facility:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setFacilityAttribute\n      summary: Sets Attribute for Facility.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetFacilityAttribute\n              description: \"input to setFacilityAttribute\"\n              type: object\n              required:\n                - facility\n                - attribute\n              properties:\n                facility: { type: integer, description: \"facility id\" }\n                attribute: { $ref: '#/components/schemas/Attribute' }\n\n  /json/attributesManager/setAttribute/user:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setUserAttribute\n      summary: Sets Attribute for User.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetUserAttribute\n              description: \"input to setUserAttribute\"\n              type: object\n              required:\n                - user\n                - attribute\n              properties:\n                user: { type: integer, description: \"user id\" }\n                attribute: { $ref: '#/components/schemas/Attribute' }\n\n  /json/attributesManager/setAttributes/facility-user:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setUserFacilityAttributes\n      summary: Sets Attributes for User and Facility.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetUserFacilityAttributes\n              description: \"input to setUserFacilityAttributes\"\n              type: object\n              required:\n                - user\n                - facility\n                - attributes\n              properties:\n                user: { type: integer, description: \"user id\" }\n                facility: { type: integer, description: \"facility id\" }\n                attributes: { type: array, items: { $ref: '#/components/schemas/Attribute' } }\n\n  /json/attributesManager/setAttribute/facility-user:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setUserFacilityAttribute\n      summary: Sets Attribute for User and Facility.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetUserFacilityAttribute\n              description: \"input to setUserFacilityAttribute\"\n              type: object\n              required:\n                - user\n                - facility\n                - attribute\n              properties:\n                user: { type: integer, description: \"user id\" }\n                facility: { type: integer, description: \"facility id\" }\n                attribute: { $ref: '#/components/schemas/Attribute' }\n\n  /json/attributesManager/setAttribute/vo:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setVoAttribute\n      summary: Sets Attribute for Vo.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetVoAttribute\n              description: \"input to setVoAttribute\"\n              type: object\n              required:\n                - vo\n                - attribute\n              properties:\n                vo: { type: integer, description: \"vo id\" }\n                attribute: { $ref: '#/components/schemas/Attribute' }\n\n  /json/attributesManager/setAttribute/member:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setMemberAttribute\n      summary: Sets Attribute for Member.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetMemberAttribute\n              description: \"input to setMemberAttribute\"\n              type: object\n              required:\n                - member\n                - attribute\n              properties:\n                member: { type: integer, description: \"member id\" }\n                attribute: { $ref: '#/components/schemas/Attribute' }\n\n  /json/attributesManager/setAttribute/group:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setGroupAttribute\n      summary: Sets Attribute for Group.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetGroupAttribute\n              description: \"input to setGroupAttribute\"\n              type: object\n              required:\n                - group\n                - attribute\n              properties:\n                group: { type: integer, description: \"group id\" }\n                attribute: { $ref: '#/components/schemas/Attribute' }\n\n  /json/attributesManager/setAttribute/resource:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setResourceAttribute\n      summary: Sets Attribute for Resource.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetResourceAttribute\n              description: \"input to setResourceAttribute\"\n              type: object\n              required:\n                - resource\n                - attribute\n              properties:\n                resource: { type: integer, description: \"resource id\" }\n                attribute: { $ref: '#/components/schemas/Attribute' }\n\n  /json/attributesManager/setAttribute/member-group:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setMemberGroupAttribute\n      summary: Sets Attribute for Member and Group.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetMemberGroupAttribute\n              description: \"input to setMemberGroupAttribute\"\n              type: object\n              required:\n                - member\n                - group\n                - attribute\n              properties:\n                member: { type: integer, description: \"member id\" }\n                group: { type: integer, description: \"group id\" }\n                attribute: { $ref: '#/components/schemas/Attribute' }\n\n  /json/attributesManager/setAttribute/member-resource:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setMemberResourceAttribute\n      summary: Sets Attribute for Member and Resource.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetMemberResourceAttribute\n              description: \"input to setMemberResourceAttribute\"\n              type: object\n              required:\n                - member\n                - resource\n                - attribute\n              properties:\n                member: { type: integer, description: \"member id\" }\n                resource: { type: integer, description: \"resource id\" }\n                attribute: { $ref: '#/components/schemas/Attribute' }\n\n  /json/attributesManager/setAttributes/group-resource:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setGroupResourceAttributes\n      summary: Sets Attributes for Group and Resource.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetGroupResourceAttributes\n              description: \"input to setGroupResourceAttributes\"\n              type: object\n              required:\n                - group\n                - resource\n                - attributes\n              properties:\n                group: { type: integer, description: \"group id\" }\n                resource: { type: integer, description: \"resource id\" }\n                attributes: { type: array, items: { $ref: '#/components/schemas/Attribute' } }\n\n  /json/attributesManager/setAttribute/group-resource:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setGroupResourceAttribute\n      summary: Sets Attribute for Group and Resource.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetGroupResourceAttribute\n              description: \"input to setGroupResourceAttribute\"\n              type: object\n              required:\n                - group\n                - resource\n                - attribute\n              properties:\n                group: { type: integer, description: \"group id\" }\n                resource: { type: integer, description: \"resource id\" }\n                attribute: { $ref: '#/components/schemas/Attribute' }\n\n  /json/attributesManager/setAttribute/userExtSource:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setUserExtSourceAttribute\n      summary: Sets Attribute for UserExtSource.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetUserExtSourceAttribute\n              description: \"input to setUserExtSourceAttribute\"\n              type: object\n              required:\n                - userExtSource\n                - attribute\n              properties:\n                userExtSource: { type: integer, description: \"userExtSource id\" }\n                attribute: { $ref: '#/components/schemas/Attribute' }\n\n  /json/attributesManager/setAttribute/host:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setHostAttribute\n      summary: Sets Attribute for Host.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetHostAttribute\n              description: \"input to setHostAttribute\"\n              type: object\n              required:\n                - host\n                - attribute\n              properties:\n                host: { type: integer, description: \"host id\" }\n                attribute: { $ref: '#/components/schemas/Attribute' }\n\n  /json/attributesManager/setAttribute/entityless:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setEntitylessAttribute\n      summary: Sets entityless Attribute.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputEntitylessAttribute\n              description: \"input to setEntitylessAttribute\"\n              type: object\n              required:\n                - key\n                - attribute\n              properties:\n                key: { type: string, description: \"key for entityless attribute\" }\n                attribute: { $ref: '#/components/schemas/Attribute' }\n\n  /json/attributesManager/createAttribute:\n    post:\n      tags:\n        - AttributesManager\n      operationId: createAttributeDefinition\n      summary: Creates AttributeDefinition.\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeDefinitionResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreateAttributeDefinition\n              description: \"input to createAttributeDefinition\"\n              type: object\n              required:\n                - attribute\n              properties:\n                attribute: { $ref: '#/components/schemas/AttributeDefinition' }\n\n  /urlinjsonout/attributesManager/deleteAttribute:\n    post:\n      tags:\n        - AttributesManager\n      operationId: deleteAttributeDefinition\n      summary: Deletes attribute definition from Perun including all values set for any entity.\n      parameters:\n        - $ref: '#/components/parameters/attributeInteger'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/deleteAttributes:\n    post:\n      tags:\n        - AttributesManager\n      operationId: deleteAttributeDefinitions\n      summary: Deletes attribute definitions from Perun including all values set for any entity.\n      parameters:\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/s-r-g-m:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesMemberGroupResourceService\n      summary: Returns member, member-group and member-resource attributes required by specified service.\n        If workWithUserAttributes == TRUE, then returns also user and user-facility attributes.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/workWithUserAttributesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/s-r-g:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesGroupResourceService\n      summary: Returns group-resource attributes required by specified service.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/s-r-m:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesMemberResourceService\n      summary: Returns member and member-resource attributes required by the specified service.\n        If workWithUserAttributes == TRUE, then returns also user attributes.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/workWithUserAttributesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/s-r:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesResourceService\n      summary: Returns resource attributes required by specified service.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/s-g-m:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesMemberGroupService\n      summary: Returns member-group attributes required by specified service.\n        If workWithUserAttributes == TRUE, then returns also member and user attributes.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/workWithUserAttributesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/s-f:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesFacilityService\n      summary: Returns facility attributes required by specified service.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/s-h:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesHostService\n      summary: Returns required host attributes.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/hostId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/s-v:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesVoService\n      summary: Returns required vo attributes.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/ss-f:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesFacilityServices\n      summary: Returns facility attributes required by specified list of services.\n      parameters:\n        - $ref: '#/components/parameters/serviceIds'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/ss-r:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesResourceServices\n      summary: Returns resource attributes required by specified list of services.\n      parameters:\n        - $ref: '#/components/parameters/serviceIds'\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/m-r:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesMemberResource\n      summary: Returns member-resource attributes required by specified list of services.\n        If workWithUserAttributes == TRUE, then returns also user attributes.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/workWithUserAttributesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/r:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesResource\n      summary: Returns required resource attributes.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/u-f:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesUserFacility\n      summary: Returns required user-facility attributes.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/f:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesFacility\n      summary: Returns required facility attributes.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/m-g:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesMemberGroup\n      summary: Returns required member-group attributes. If workWithUserAttributes == TRUE,\n        then returns also user attributes.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/workWithUserAttributesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/m:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesMember\n      summary: Returns required member attributes.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/workWithUserAttributesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributes/u:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesUser\n      summary: Returns required user attributes.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getRequiredAttributesDefinition:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getRequiredAttributesDefinition\n      summary: Returns required attributes definition for a Service.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributeDefinitionsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #TODO getResourceRequiredAttributes\n\n  #TODO fillAttribute\n\n  #TODO fillAttributes\n\n  #TODO checkAttributeSyntax\n\n  #TODO checkAttributeSemantics\n\n  #TODO checkAttributesSemantics\n\n  #TODO checkAttributesSyntax\n\n  /urlinjsonout/attributesManager/removeAttributes/m-workWithUserAttributes:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeMemberAttributesWorkWithUserAttributes\n      summary: Remove attributes of namespace member\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/attributes'\n        - $ref: '#/components/parameters/workWithUserAttributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttributes/m-g-workWithUserAttributes:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeMemberGroupAttributesWorkWithUserAttributes\n      summary: Remove attributes of namespace member-group\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attributes'\n        - $ref: '#/components/parameters/workWithUserAttributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttributes/g-r-workWithGroupAttributes:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeGroupResourceAttributesWorkWithGroupAttributes\n      summary: Remove attributes of namespace group-resource\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attributes'\n        - $ref: '#/components/parameters/workWithGroupAttributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttributes/m-g:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeMemberGroupAttributes\n      summary: Remove attributes of namespace member-group\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttributes/m-r:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeMemberResourceAttributes\n      summary: Remove attributes of namespace member-resource\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttributes/u-f:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeUserFacilityAttributes\n      summary: Remove attributes of namespace user-facility\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttributes/f-r-u-m:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeAttributesForFacilityResourceUserMember\n      summary: Remove attributes of namespace facility, resource, user and member\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttributes/f-r-g-u-m:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeAttributesForFacilityResourceGroupUserMember\n      summary: Remove attributes of namespace facility, resource, group, user and member\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttributes/g-r:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeGroupResourceAttributes\n      summary: Remove attributes of namespace group-resource\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttributes/r:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeResourceAttributes\n      summary: Remove attributes of namespace resource\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttributes/ues:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeUesAttributes\n      summary: Remove attributes of namespace userExtSource\n      parameters:\n        - $ref: '#/components/parameters/userExtSourceId'\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttributes/h:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeHostAttributes\n      summary: Remove attributes of namespace host\n      parameters:\n        - $ref: '#/components/parameters/hostId'\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttributes/f:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeFacilityAttributes\n      summary: Remove attributes of namespace facility\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttributes/m:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeMemberAttributes\n      summary: Remove attributes of namespace member\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttributes/u:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeUserAttributes\n      summary: Remove attributes of namespace user\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttributes/g:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeGroupAttributes\n      summary: Remove attributes of namespace group\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttributes/v:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeVoAttributes\n      summary: Remove attributes of namespace vo\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttribute/u-f:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeUserFacilityAttribute\n      summary: Remove user facility attribute\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/attributeInteger'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttribute/f:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeFacilityAttribute\n      summary: Remove facility attribute\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/attributeInteger'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttribute/v:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeVoAttribute\n      summary: Remove vo attribute\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/attributeInteger'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttribute/m-r:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeMemberResourceAttribute\n      summary: Remove member-resource attribute\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attributeInteger'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttribute/g-r:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeGroupResourceAttribute\n      summary: Remove group-resource attribute\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attributeInteger'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttribute/r:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeResourceAttribute\n      summary: Remove resource attribute\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attributeInteger'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttribute/m-g:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeMemberGroupAttribute\n      summary: Remove member-group attribute\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attributeInteger'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttribute/m:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeMemberAttribute\n      summary: Remove member attribute\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/attributeInteger'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttribute/u:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeUserAttribute\n      summary: Remove user attribute\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/attributeInteger'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttribute/g:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeGroupAttribute\n      summary: Remove group attribute\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attributeInteger'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttribute/h:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeHostAttribute\n      summary: Remove host attribute\n      parameters:\n        - $ref: '#/components/parameters/hostId'\n        - $ref: '#/components/parameters/attributeInteger'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/removeAttribute/ues:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeUserExtSourceAttribute\n      summary: Remove userExtSource attribute\n      parameters:\n        - $ref: '#/components/parameters/userExtSourceId'\n        - $ref: '#/components/parameters/attributeInteger'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n\n  /urlinjsonout/attributesManager/removeAttribute/e:\n    post:\n      tags:\n        - AttributesManager\n      operationId: removeEntitylessAttribute\n      summary: Remove entityless attribute\n      parameters:\n        - $ref: '#/components/parameters/key'\n        - $ref: '#/components/parameters/attributeInteger'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #TODO removeAllAttributes\n\n  /json/attributesManager/getLogins:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getLogins\n      summary: \"Get all users logins as Attributes. Meaning it returns all non-empty User attributes with URN starting with: \\\"urn:perun:user:attribute-def:def:login-namespace:\\\".\"\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/updateAttributeDefinition:\n    post:\n      tags:\n        - AttributesManager\n      operationId: updateAttributeDefinition\n      summary: Updates AttributeDefinition in Perun based on provided object.\n        Update is done on AttributeDefinition selected by its \u003ccode\u003eid\u003c/code\u003e.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              title: InputAttributeDefinition\n              description: Input to updateAttributeDefinition\n              required:\n                - attributeDefinition\n              properties:\n                attributeDefinition:\n                  $ref: '#/components/schemas/AttributeDefinition'\n      responses:\n        '200':\n          $ref: '#/components/responses/AttributeDefinitionResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #TODO doTheMagic\n\n  /json/attributesManager/getAttributeRights:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getAttributeRights\n      summary: \"Gets AttributeRights for specified Attribute. Rights specify which\n      Role can do particular actions (read / write) with Attribute. Method always\n      return rights for following roles: VOADMIN, GROUPADMIN, FACILITYADMIN, SELF.\"\n      parameters:\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributeRightsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/setAttributeRights:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setAttributeRights\n      summary: \"Sets all AttributeRights in the list given as a parameter. Allowed\n       Roles to set rights for are: VOADMIN, GROUPADMIN, FACILITYADMIN, SELF.\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputAttributeRights\n              description: Input to setAttributeRights\n              type: object\n              required:\n                - rights\n              properties:\n                rights:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/AttributeRights'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributePolicyCollections:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getAttributePolicyCollections\n      summary: \"Gets attribute policy collections for an attribute definition with given id.\"\n      parameters:\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAttributePolicyCollectionResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/setAttributePolicyCollections:\n    post:\n      tags:\n        - AttributesManager\n      operationId: setAttributePolicyCollections\n      summary: \"Deletes old attribute policy collections and sets attribute policy collections for an attribute definition provided in given policy collections.\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputAttributePolicyCollections\n              description: Input to setAttributePolicyCollections\n              type: object\n              required:\n                - policyCollections\n              properties:\n                policyCollections:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/AttributePolicyCollection'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/convertAttributeToUnique:\n    post:\n      tags:\n        - AttributesManager\n      operationId: convertAttributeToUnique\n      summary: \"Converts attribute to unique - marks its definition as unique and ensures that all its values are unique.\n      Entityless attributes cannot be converted to unique, only attributes attached to PerunBeans or pairs of PerunBeans.\"\n      parameters:\n        - $ref: '#/components/parameters/attrDefId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/attributesManager/convertAttributeToNonunique:\n    post:\n      tags:\n        - AttributesManager\n      operationId: convertAttributeToNonunique\n      summary: \"Converts attribute to nonunique - unmarks unique flag from attribute definition, and deletes all values\n      from a special table with unique constraint that ensures that all values remain unique.\"\n      parameters:\n        - $ref: '#/components/parameters/attrDefId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributeModulesDependenciesGraphText:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getAttributeModulesDependenciesGraphText\n      summary: |\n        Generates text file describing dependencies between attribute modules.\n        The format of text file can be specified by parameter. Modules that\n        has no dependency relations are omitted.\n      parameters:\n        - name: format\n          in: query\n          schema: { $ref: '#/components/schemas/GraphFileFormat' }\n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/GraphDTOResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/attributesManager/getAttributeModulesDependenciesGraphText/for-attribute:\n    get:\n      tags:\n        - AttributesManager\n      operationId: getAttributeModulesDependenciesForAttributeGraphText\n      summary: |\n        Generates text file describing dependencies between attribute modules.\n        The format of text file can be specified by parameter. Modules that\n        has no dependency relations are omitted.\n      parameters:\n        - name: format\n          in: query\n          schema: { $ref: '#/components/schemas/GraphFileFormat' }\n          required: true\n        - name: attrName\n          in: query\n          schema:\n            type: string\n          description: Attribute name which dependencies will be found.\n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/GraphDTOResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #################################################\n  #                                               #\n  # AuditMessagesManager                          #\n  #                                               #\n  #################################################\n\n  /json/auditMessagesManager/getMessages:\n    get:\n      tags:\n        - AuditMessagesManager\n      operationId: getMessages\n      summary: |\n        Returns 100 newest audit messages from audit log. If there is a less messages than 100,\n        then all of them are returned OR Returns exact number of newest audit messages defined by\n        'count' param (disregarding message IDs). If there is less messages present, then all of them are returned..\n      parameters:\n        - { name: count, in: query, schema: { type: integer },  description: \"Messages limit\",  required: false }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAuditMessagesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/auditMessagesManager/getMessagesByCount:\n    get:\n      tags:\n        - AuditMessagesManager\n      operationId: getMessagesByCount\n      summary: |\n        Returns all messages with IDs within the range from max(ID) to (max(ID)-count),\n        where number of returned messages is equal or less than 'count' param, because some\n        IDs could be skipped in the sequence.\n      parameters:\n        - { name: count, in: query, schema: { type: integer }, description: \"Number of IDs to subtract from max_id\", required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAuditMessagesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/auditMessagesManager/getMessagesPage:\n    post:\n      tags:\n        - AuditMessagesManager\n      operationId: getMessagesPage\n      summary: Get page of audit messages. Total count is only estimated.\n      responses:\n        '200':\n          $ref: '#/components/responses/PaginatedMessagesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputGetMessagesPage\n              description: \"input to get messages page\"\n              type: object\n              required:\n                - query\n              properties:\n                query: { $ref: '#/components/schemas/AuditMessagesPageQuery' }\n\n  /json/auditMessagesManager/pollConsumerMessages:\n    get:\n      tags:\n        - AuditMessagesManager\n      operationId: pollConsumerMessages\n      summary: |\n        Returns list of AuditMessages from audit log with IDs \u003e lastProcessedId for\n        registered auditer consumer specified by consumerName param.\n      parameters:\n        - $ref: '#/components/parameters/consumerName'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAuditMessagesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/auditMessagesManager/setLastProcessedId:\n    post:\n      tags:\n        - AuditMessagesManager\n      operationId: setLastProcessedId\n      summary: |\n        Set ID of last processed message for specified consumer.\n      parameters:\n        - $ref: '#/components/parameters/consumerName'\n        - { name: lastProcessedId, in: query, schema: { type: integer }, description: \"id of message to what consumer will be set\",  required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/auditMessagesManager/createAuditerConsumer:\n    post:\n      tags:\n        - AuditMessagesManager\n      operationId: createAuditerConsumer\n      summary: |\n        Creates new auditer consumer with last processed id which equals current auditer log max id.\n      parameters:\n        - $ref: '#/components/parameters/consumerName'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/auditMessagesManager/getAllAuditerConsumers:\n    get:\n      tags:\n        - AuditMessagesManager\n      operationId: getAllAuditerConsumers\n      summary: |\n        Get all auditer consumers as a map with key=value pairs like String(name)=Integer(lastProcessedId).\n      responses:\n        '200':\n          description: map with key=value pairs like String(name)=Integer(lastProcessedId)\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: integer\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/auditMessagesManager/getLastMessageId:\n    get:\n      tags:\n        - AuditMessagesManager\n      operationId: getLastMessageId\n      summary: |\n        Get ID of last (newest) message in auditer logs.\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/auditMessagesManager/getAuditerMessagesCount:\n    get:\n      tags:\n        - AuditMessagesManager\n      operationId: getAuditerMessagesCount\n      summary: |\n        Get count of all messages stored in auditer logs.\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/auditMessagesManager/log:\n    post:\n      tags:\n        - AuditMessagesManager\n      operationId: auditMessagesManagerLog\n      summary: |\n        Log arbitrary auditer message/event to the audit log.\n      parameters:\n        - { name: msg, in: query, schema: { type: string }, description: \"Message to be logged\", required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #################################################\n  #                                               #\n  # CabinetManager                                #\n  #                                               #\n  #################################################\n\n  /json/cabinetManager/getPublicationSystems:\n    get:\n      tags:\n        - CabinetManager\n      operationId: getPublicationSystems\n      summary: Get all PublicationSystems in Perun. If none, return empty list.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfPublicationSystemsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/cabinetManager/deletePublicationSystem:\n    post:\n      tags:\n        - CabinetManager\n      operationId: deletePublicationSystem\n      summary: Deletes PublicationSystem by its ID.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/cabinetManager/createPublicationSystem:\n    post:\n      tags:\n        - CabinetManager\n      operationId: createPublicationSystem\n      summary: Creates new PublicationSystem.\n      responses:\n        '200':\n          $ref: '#/components/responses/PublicationSystemResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreatePublicationSystem\n              description: 'input to createPublicationSystem'\n              type: object\n              required:\n                - pubsys\n              properties:\n                pubsys: { $ref: '#/components/schemas/PublicationSystem' }\n\n  /json/cabinetManager/updatePublicationSystem:\n    post:\n      tags:\n        - CabinetManager\n      operationId: updatePublicationSystem\n      summary: Updates PublicationSystem by its ID.\n      responses:\n        '200':\n          $ref: '#/components/responses/PublicationSystemResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdatePublicationSystem\n              description: 'input to updatePublicationSystem'\n              type: object\n              required:\n                - pubsys\n              properties:\n                pubsys: { $ref: '#/components/schemas/PublicationSystem' }\n\n  /json/cabinetManager/getCategories:\n    get:\n      tags:\n        - CabinetManager\n      operationId: getCategories\n      summary: Return list of all Categories in Perun or empty list of none present.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfCategoryResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/cabinetManager/createCategory/cat:\n    post:\n      tags:\n        - CabinetManager\n      operationId: createCategoryCat\n      summary: |\n        Creates new Category for Publications with specified name and rank.\n        Category object's parameter name must be non-empty, max 128 chars long and rank must be double\n        with single digit after decimal point. Other parameters are ignored.\n      responses:\n        '200':\n          $ref: '#/components/responses/CategoryResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreateCategory\n              description: 'input to createCategory'\n              type: object\n              required:\n                - category\n              properties:\n                category: { $ref: '#/components/schemas/Category' }\n\n  /json/cabinetManager/createCategory/n-r:\n    post:\n      tags:\n        - CabinetManager\n      operationId: createCategoryNR\n      summary: Creates new Category for Publications with specified name and rank.\n      responses:\n        '200':\n          $ref: '#/components/responses/CategoryResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreateCategoryNR\n              description: 'input to createCategory'\n              type: object\n              required:\n                - name\n                - rank\n              properties:\n                name: { type: string, description: 'name of the category' }\n                rank: { type: number, format: double, description: 'the rank of the category' }\n\n  /json/cabinetManager/updateCategory:\n    post:\n      tags:\n        - CabinetManager\n      operationId: updateCategory\n      summary: |\n        Updates publications category in Perun. Category to update is found by ID.\n        When category rank is changed, priorityCoefficient for all authors of books from this category,\n        is recalculated.\n      responses:\n        '200':\n          $ref: '#/components/responses/CategoryResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdateCategory\n              description: 'input to updateCategory'\n              type: object\n              required:\n                - category\n              properties:\n                category: { $ref: '#/components/schemas/Category' }\n\n  /urlinjsonout/cabinetManager/deleteCategory:\n    post:\n      tags:\n        - CabinetManager\n      operationId: deleteCategory\n      summary: Delete category by its ID. If category contains any publications, it can't be deleted.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/cabinetManager/createThanks:\n    post:\n      tags:\n        - CabinetManager\n      operationId: createThanks\n      summary: Creates new Thanks for Publication\n      responses:\n        '200':\n          $ref: '#/components/responses/ThanksResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreateThanks\n              description: 'input to createThanks'\n              type: object\n              required:\n                - category\n              properties:\n                thanks: { $ref: '#/components/schemas/Thanks' }\n\n  /urlinjsonout/cabinetManager/deleteThanks:\n    post:\n      tags:\n        - CabinetManager\n      operationId: deleteThanks\n      summary: Delete Thanks by its ID.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/cabinetManager/getRichThanksByPublicationId:\n    get:\n      tags:\n        - CabinetManager\n      operationId: getRichThanksByPublicationId\n      summary: Get ThanksForGUI of Publication specified by its ID or empty list.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfThanksForGUIResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/cabinetManager/createAuthorship:\n    post:\n      tags:\n        - CabinetManager\n      operationId: createAutorship\n      summary: |\n        Creates Authorship. Everything except current date must be already set in Authorship object.\n        Authorship is checked for existence before creation, if exists, existing object is returned.\n        When authorship is successfully created, users priority coefficient is updated.\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthorshipResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreateAuthorship\n              description: 'input to createAuthorship'\n              type: object\n              required:\n                - authorship\n              properties:\n                authorship: { $ref: '#/components/schemas/Authorship' }\n\n  /urlinjsonout/cabinetManager/deleteAuthorship:\n    post:\n      tags:\n        - CabinetManager\n      operationId: deleteAuthorship\n      summary: Delete Authorship by its userId and publicationId.\n      parameters:\n        - { name: publicationId, schema: { type: integer }, in: query, required: true, description: 'id of publication' }\n        - { name: userId, schema: { type: integer }, in: query, required: true, description: 'id of user' }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/cabinetManager/getRank:\n    get:\n      tags:\n        - CabinetManager\n      operationId: getRank\n      summary: Gets overall rank of given user as sum of all his publications Authorships.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/cabinetManager/findAuthorsByPublicationId:\n    get:\n      tags:\n        - CabinetManager\n      operationId: findAuthorsByPublicationId\n      summary: Return all Authors of Publication specified by its ID. Empty list of none found.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAuthorResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/cabinetManager/findAllAuthors:\n    get:\n      tags:\n        - CabinetManager\n      operationId: findAllAuthors\n      summary: Return all Authors of Publications. Empty list of none found.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAuthorResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/cabinetManager/findNewAuthors:\n    get:\n      tags:\n        - CabinetManager\n      operationId: findNewAuthors\n      summary: |\n        Find new Authors for Publication. Empty list of none found.\n        Used by users to search for colleagues to add them as co-authors.\n      parameters:\n        - $ref: '#/components/parameters/searchString'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAuthorResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/cabinetManager/createPublication:\n    post:\n      tags:\n        - CabinetManager\n      operationId: createPublication\n      summary: |\n        Create Publication. If exists by its ID or EXT_ID,PUB_SYS_ID then existing publication is returned.\n      responses:\n        '200':\n          $ref: '#/components/responses/PublicationResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreatePublication\n              description: 'input to createPublication'\n              type: object\n              required:\n                - publication\n              properties:\n                publication: { $ref: '#/components/schemas/Publication' }\n\n  /json/cabinetManager/updatePublication:\n    post:\n      tags:\n        - CabinetManager\n      operationId: updatePublication\n      summary: Update existing publication by its ID.\n      responses:\n        '200':\n          $ref: '#/components/responses/PublicationResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdatePublication\n              description: 'input to updatePublication'\n              type: object\n              required:\n                - publication\n              properties:\n                publication: { $ref: '#/components/schemas/Publication' }\n\n  /urlinjsonout/cabinetManager/deletePublication:\n    post:\n      tags:\n        - CabinetManager\n      operationId: deletePublication\n      summary: |\n        Delete publication by its ID. Only Author of the record or PerunAdmin can do this. -\n        Author deletes Authorships and Thanks from publication. - PerunAdmin also delete publication record.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/cabinetManager/findPublicationById:\n    get:\n      tags:\n        - CabinetManager\n      operationId: findPublicationById\n      summary: |\n        Return Publication by its ID.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/PublicationForGUIResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/cabinetManager/findPublicationsByGUIFilter:\n    get:\n      tags:\n        - CabinetManager\n      operationId: findPublicationsByGUIFilter\n      summary: |\n        Finds rich publications in Cabinet by GUI filter: id = exact match\n        (used when search for publication of authors) title = if \"like\" this substring year = exact match\n        isbn = if \"like\" this substring category = exact match yearSince = if year \u003e= yearSince\n        yearTill = if year \u003c= yearTill userId = exact match or 0 If you don't want to filter by publication params,\n        do not include the attribute in the query.\n      parameters:\n        - $ref: '#/components/parameters/title'\n        - $ref: '#/components/parameters/isbn'\n        - $ref: '#/components/parameters/doi'\n        - name: id\n          in: query\n          schema:\n            type: integer\n          description: Publication id\n          required: false\n        - name: year\n          in: query\n          schema:\n            type: integer\n          description: Year\n          required: false\n        - name: category\n          in: query\n          schema:\n            type: integer\n          description: Category\n          required: false\n        - name: yearSince\n          in: query\n          schema:\n            type: integer\n          description: Year since\n          required: false\n        - name: yearTill\n          in: query\n          schema:\n            type: integer\n          description: Year till\n          required: false\n        - name: userId\n          in: query\n          schema:\n            type: integer\n          description: User id\n          required: false\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfPublicationForGUIResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/cabinetManager/findPublicationsByFilter:\n    get:\n      tags:\n        - CabinetManager\n      operationId: findPublicationsByFilter\n      summary: Finds publications in Cabinet by filter.\n      parameters:\n        - name: yearSince\n          in: query\n          schema:\n            type: integer\n          description: Year since\n          required: false\n        - name: yearTill\n          in: query\n          schema:\n            type: integer\n          description: Year till\n          required: false\n        - name: userId\n          in: query\n          schema:\n            type: integer\n          description: User id\n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfPublicationResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/cabinetManager/lockPublications:\n    post:\n      tags:\n        - CabinetManager\n      operationId: lockPublications\n      summary: (Un)Lock passed Publications for changes.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputLockPublications\n              description: 'input to lockPublications'\n              type: object\n              required:\n                - lock\n                - publications\n              properties:\n                publications: { type: array, items: { $ref: '#/components/schemas/Publication' } }\n                lock: { type: boolean }\n\n  /json/cabinetManager/findExternalPublications:\n    get:\n      tags:\n        - CabinetManager\n      operationId: findExternalPublications\n      summary: |\n        Finds publications of perun's user specified in param\n        Search is done in external publication systems (MU, ZCU) All parameters are required.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - name: yearSince\n          in: query\n          schema:\n            type: integer\n          description: Year since\n          required: true\n        - name: yearTill\n          in: query\n          schema:\n            type: integer\n          description: Year till\n          required: true\n        - name: pubSysNamespace\n          in: query\n          schema:\n            type: string\n          description: (MU or ZCU)\n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfPublicationResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/cabinetManager/findSimilarPublications:\n    get:\n      tags:\n        - CabinetManager\n      operationId: findSimilarPublications\n      summary: Finds similar publications\n      parameters:\n        - $ref: '#/components/parameters/title'\n        - $ref: '#/components/parameters/doi'\n        - $ref: '#/components/parameters/isbn'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfPublicationForGUIResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n\n  #################################################\n  #                                               #\n  # DatabaseManager                               #\n  #                                               #\n  #################################################\n\n  /json/databaseManager/getCurrentDatabaseVersion:\n    get:\n      tags:\n        - DatabaseManager\n      operationId: getCurrentDatabaseVersion\n      summary: Returns current database version, e.g. \"3.1.55\"\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/databaseManager/getDatabaseDriverInformation:\n    get:\n      tags:\n        - DatabaseManager\n      operationId: getDatabaseDriverInformation\n      summary: Returns current database driver info, e.g. \"PostgreSQL JDBC Driver-42.2.8\"\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/databaseManager/getDatabaseInformation:\n    get:\n      tags:\n        - DatabaseManager\n      operationId: getDatabaseInformation\n      summary: Returns current database info, e.g. \"PostgreSQL-12.0 (Debian 12.0-2.pgdg100+1)\"\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/databaseManager/getTimeOfQueryPerformance:\n    get:\n      tags:\n        - DatabaseManager\n      operationId: getTimeOfQueryPerformance\n      summary: Get time in ns \"nanoseconds\" of calling 1 simple update query to DB\n      responses:\n        '200':\n          $ref: '#/components/responses/LongResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #################################################\n  #                                               #\n  # ExtSourcesManager                             #\n  #                                               #\n  #################################################\n\n  /json/extSourcesManager/createExtSource/es:\n    post:\n      tags:\n        - ExtSourcesManager\n      operationId: createExtSourceFromExtSourceObject\n      summary: \"Creates an external source. ExtSource object must contain: name, type. Other parameters are ignored.\"\n      responses:\n        '200':\n          $ref: '#/components/responses/ExtSourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ExtSourceObject\n              description: \"input to createExtSourceFromExtSourceObject\"\n              type: object\n              required:\n                - extSource\n              properties:\n                extSource: { $ref: '#/components/schemas/ExtSource' }\n\n  /urlinjsonout/extSourcesManager/createExtSource/n-t:\n    post:\n      tags:\n        - ExtSourcesManager\n      operationId: createExtSourceWithNameType\n      summary: \"Creates an external source.\"\n      parameters:\n        - $ref: '#/components/parameters/name'\n        - name: type\n          schema:\n            type: string\n          description: type of ExtSource\n          required: true\n          in: query\n      responses:\n        '200':\n          $ref: '#/components/responses/ExtSourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/extSourcesManager/deleteExtSource:\n    post:\n      tags:\n        - ExtSourcesManager\n      operationId: deleteExtSource\n      summary: \"Delete an external source.\"\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/extSourcesManager/getExtSourceById:\n    get:\n      tags:\n        - ExtSourcesManager\n      operationId: getExtSourceById\n      summary: Returns an external source by its id.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/ExtSourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/extSourcesManager/getExtSourceByName:\n    get:\n      tags:\n        - ExtSourcesManager\n      operationId: getExtSourceByName\n      summary: Returns an external source by its name.\n      parameters:\n        - $ref: '#/components/parameters/name'\n      responses:\n        '200':\n          $ref: '#/components/responses/ExtSourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/extSourcesManager/getVoExtSources:\n    get:\n      tags:\n        - ExtSourcesManager\n      operationId: getVoExtSources\n      summary: Returns the list of external sources associated with a VO.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfExtSourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/extSourcesManager/getGroupExtSources:\n    get:\n      tags:\n        - ExtSourcesManager\n      operationId: getGroupExtSources\n      summary: Returns the list of external sources associated with a GROUP.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfExtSourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/extSourcesManager/getExtSources:\n    get:\n      tags:\n        - ExtSourcesManager\n      operationId: getExtSources\n      summary: Returns the list of all external sources.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfExtSourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/extSourcesManager/addExtSource/v-s:\n    post:\n      tags:\n        - ExtSourcesManager\n      operationId: addExtSourceWithVoSource\n      summary: Associate an external source definition with a VO.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/sourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/extSourcesManager/addExtSource/g-s:\n    post:\n      tags:\n        - ExtSourcesManager\n      operationId: addExtSourceWithGroupSource\n      summary: Associate an external source definition with a GROUP.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/sourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/extSourcesManager/removeExtSource/v-s:\n    post:\n      tags:\n        - ExtSourcesManager\n      operationId: removeExtSourceWithVoSource\n      summary: Remove an association of an external source from a VO.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/sourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/extSourcesManager/removeExtSource/g-s:\n    post:\n      tags:\n        - ExtSourcesManager\n      operationId: removeExtSourceWithGroupSource\n      summary: Remove an association of an external source from a GROUP.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/sourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/extSourcesManager/loadExtSourcesDefinitions:\n    get:\n      tags:\n        - ExtSourcesManager\n      operationId: loadExtSourcesDefinitions\n      summary: Loads ext source definitions from the configuration file and updates entries stored in the DB.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #################################################\n  #                                               #\n  # UsersManager                                  #\n  #                                               #\n  #################################################\n\n  /json/usersManager/getUserById:\n    get:\n      tags:\n        - UsersManager\n      operationId: getUserById\n      summary: Returns user by its id\n      description: Returns object representing the User\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/UserResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getSponsorsForMember/member:\n    get:\n      tags:\n        - UsersManager\n      operationId: getSponsorsForMember\n      summary: Gets sponsors for given member with optional attribute names.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/attrNamesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfSponsorsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getSponsorsForMember/vo:\n    get:\n      tags:\n        - UsersManager\n      operationId: getSponsorsForMemberByVoAndLogin\n      summary: Gets sponsors for member specified by VO, extSourceName and extLogin with optional attribute names.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/extSourceName'\n        - $ref: '#/components/parameters/extLogin'\n        - $ref: '#/components/parameters/attrNamesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfSponsorsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getUserByExtSourceNameAndExtLogin:\n    get:\n      tags:\n        - UsersManager\n      operationId: getUserByExtSourceNameAndExtLogin\n      summary: Returns user by its ExtSourceName and ExtLogin.\n      description: Returns User found by its authentication data\n      parameters:\n        - $ref: '#/components/parameters/extLogin'\n        - $ref: '#/components/parameters/extSourceName'\n      responses:\n        '200':\n          $ref: '#/components/responses/UserResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getRichUserWithAttributes:\n    get:\n      tags:\n        - UsersManager\n      operationId: getRichUserWithAttributes\n      summary: Returns user with attributes\n      description: Returns object representing the User with attributes\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/RichUserResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getUsers:\n    get:\n      tags:\n        - UsersManager\n      operationId: getUsers\n      summary: Returns all users\n      description: Returns list of objects representing the User\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getAllRichUsersWithAttributes:\n    get:\n      tags:\n        - UsersManager\n      operationId: getAllRichUsersWithAttributes\n      summary: Returns users with attributes\n      description: Returns list of objects representing the User with attributes\n      parameters:\n        - { name: includedSpecificUsers,\n            description: \"if you want to or don't want to get specificUsers too\",\n            schema: {\n              type: boolean,\n            },\n            in: query,\n            required: true\n        }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getRichUsersByIds:\n    get:\n      tags:\n        - UsersManager\n      operationId: getRichUsersByIds\n      summary: Returns rich users without attributes by their IDs.\n      parameters:\n        - $ref: '#/components/parameters/ids'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getRichUsersWithAttributesByIds:\n    get:\n      tags:\n        - UsersManager\n      operationId: getRichUsersWithAttributesByIds\n      summary: Returns rich users with attributes by their IDs.\n      parameters:\n        - $ref: '#/components/parameters/ids'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getUserExtSources:\n    get:\n      tags:\n        - UsersManager\n      operationId: getUserExtSources\n      summary: Gets list of all user's external sources.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUserExtSourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/checkPasswordStrength:\n    get:\n      tags:\n        - UsersManager\n      operationId: checkPasswordStrength\n      summary: Check password strength for the given namespace.\n      description: If the check fails, the PasswordStrengthException error is returned.\n      parameters:\n        - $ref: '#/components/parameters/password'\n        - $ref: '#/components/parameters/namespace'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getGroupsWhereUserIsActive/facility:\n    get:\n      tags:\n        - UsersManager\n      operationId: getGroupsForFacilityWhereUserIsActive\n      summary: Get list of groups of user on specified facility where use is active.\n      description: |\n        That means User is a VALID in the VO and the Group and groups are assigned to the facility.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getGroupsWhereUserIsActive/resource:\n    get:\n      tags:\n        - UsersManager\n      operationId: getGroupsForResourceWhereUserIsActive\n      summary: Get list of groups of user on specified resource where use is active.\n      description: |\n        That means User is a VALID in the VO and the Group and groups are assigned to the resource.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/findUsers:\n    get:\n      tags:\n        - UsersManager\n      operationId: findUsers\n      summary: Returns list of Users with attributes who matches the searchString, searching name, email, logins.\n      parameters:\n        - $ref: '#/components/parameters/searchString'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/findRichUsers:\n    get:\n      tags:\n        - UsersManager\n      operationId: findRichUsers\n      summary: Returns list of RichUsers with attributes who matches the searchString, searching name, email, logins.\n      parameters:\n        - $ref: '#/components/parameters/searchString'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/findRichUsersWithAttributes:\n    get:\n      tags:\n        - UsersManager\n      operationId: findRichUsersWithAttributes\n      summary: Returns list of RichUsers with attributes who matches the searchString.\n      parameters:\n        - $ref: '#/components/parameters/searchString'\n        - name: \"attrsNames[]\"\n          description: \"list of attribute names List\u003cString\u003e or null\"\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getRichUsersWithoutVoWithAttributes:\n    get:\n      tags:\n        - UsersManager\n      operationId: getRichUsersWithoutVoWithAttributes\n      summary: Returns list of RichUsers which are not members of any VO with attributes.\n      parameters:\n        - name: \"attrsNames[]\"\n          description: \"list of attribute names List\u003cString\u003e or null\"\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getVosWhereUserIsMember:\n    get:\n      tags:\n        - UsersManager\n      operationId: getVosWhereUserIsMember\n      summary: Returns list of VOs, where the user is a Member.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfVosResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getVosWhereUserIsAdmin:\n    get:\n      tags:\n        - UsersManager\n      operationId: getVosWhereUserIsAdmin\n      summary: Returns list of VOs, where the user is an Administrator. If a group, of which the user is a valid member, is an administrator of a VO, include that VO as well.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfVosResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getGroupsWhereUserIsAdmin/u:\n    get:\n      tags:\n        - UsersManager\n      operationId: getGroupsWhereUserIsAdmin\n      summary: Returns list of Groups in Perun, where the User is a direct Administrator or he is a VALID member of any group which is Administrator of some of these Groups.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getGroupsWhereUserIsAdmin/u-v:\n    get:\n      tags:\n        - UsersManager\n      operationId: getGroupsInVoWhereUserIsAdmin\n      summary: Returns list of Groups in selected Vo, where the User is a direct Administrator or he is a VALID member of any group which is Administrator of some of these Groups.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getRichUserExtSources/u:\n    get:\n      tags:\n        - UsersManager\n      operationId: getRichUserExtSources\n      summary: Gets list of all user's external sources with attributes.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichUserExtSourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/createAlternativePassword:\n    post:\n      tags:\n        - UsersManager\n      operationId: createAlternativePassword\n      summary: Creates alternative password in external system.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - { name: description, schema: { type: string }, in: query, required: true }\n        - { name: loginNamespace, schema: { type: string }, in: query, required: true }\n        - { name: password, schema: { type: string }, in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/deleteAlternativePassword:\n    post:\n      tags:\n        - UsersManager\n      operationId: deleteAlternativePassword\n      summary: Deletes alternative password in external system.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - { name: loginNamespace, schema: { type: string }, in: query, required: true }\n        - { name: passwordId, schema: { type: string }, in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/updateUserExtSourceLastAccess:\n    post:\n      tags:\n        - UsersManager\n      operationId: updateUserExtSourceLastAccess\n      summary: Updates user's userExtSource last access time in DB. We can get information which userExtSource has been used as a last one.\n      parameters:\n        - $ref: '#/components/parameters/userExtSourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/removeUserExtSource:\n    post:\n      tags:\n        - UsersManager\n      operationId: removeUserExtSource\n      summary: Remove user's external source. Persistent UserExtSources are not removed unless force param is present and set to true.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/userExtSourceId'\n        - $ref: '#/components/parameters/forceDelete'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getUserExtSourceById:\n    get:\n      tags:\n        - UsersManager\n      operationId: getUserExtSourceById\n      summary: Returns user ext source by its id.\n      parameters:\n        - $ref: '#/components/parameters/userExtSourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/UserExtSourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getUserExtSourceByExtLoginAndExtSourceName:\n    get:\n      tags:\n        - UsersManager\n      operationId: getUserExtSourceByExtLoginAndExtSourceName\n      summary: Returns user's external source by the user's external login and external source name.\n      parameters:\n        - $ref: '#/components/parameters/extSourceName'\n        - { name: extSourceLogin, description: \"external source login\", schema: { type: string }, in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/UserExtSourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getUserExtSourcesByIds:\n    get:\n      tags:\n        - UsersManager\n      operationId: getUserExtSourcesByIds\n      summary: Returns list of user ext sources by their ids.\n      parameters:\n        - $ref: '#/components/parameters/ids'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUserExtSourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getUserExtSourceByUniqueAttributeValue/id:\n    get:\n      tags:\n        - UsersManager\n      operationId: getUserExtSourceByUniqueAttributeValueAndAttributeId\n      summary: Return userExtSource for specific attribute definition (specified by id) and unique value.\n      parameters:\n        - $ref: '#/components/parameters/attributeId'\n        - $ref: '#/components/parameters/attributeValue'\n      responses:\n        '200':\n          $ref: '#/components/responses/UserExtSourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getUserExtSourceByUniqueAttributeValue/name:\n    get:\n      tags:\n        - UsersManager\n      operationId: getUserExtSourceByUniqueAttributeValueAndAttributeName\n      summary: Return userExtSource for specific attribute definition (specified by name) and unique value.\n      parameters:\n        - $ref: '#/components/parameters/attributeName'\n        - $ref: '#/components/parameters/attributeValue'\n      responses:\n        '200':\n          $ref: '#/components/responses/UserExtSourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/requestPreferredEmailChange:\n    post:\n      tags:\n        - UsersManager\n      operationId: requestPreferredEmailChange\n      summary: Request to change preferred email address of user. Validation mail is sent on new address. Change is not saved until user validate new email address by calling validatePreferredEmailChange() method with proper set of parameters (sent in validation mail). Provide eiher linkPath (appended to referer) or whole custom url. Combination of linkPath and customUrl is not supported.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - { name: email, description: \"new email address to set\", schema: { type: string }, in: query, required: true }\n        - { name: lang, description: \"language to get confirmation mail in (optional)\", schema: { type: string }, in: query, required: false }\n        - { name: linkPath, description: \"path that is appended to the referer and creates the verification link (optional)\", schema: { type: string }, in: query, required: false }\n        - { name: customUrl, description: \"url to verification link containing path (optional)\", schema: { type: string }, in: query, required: false }\n        - { name: idpFilter, description: \"authentication method appended to query parameters of verification link (optional)\", schema: { type: string }, in: query, required: false }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/addUserExtSource:\n    post:\n      tags:\n        - UsersManager\n      operationId: addUserExtSource\n      summary: Adds user's external sources.\n      responses:\n        '200':\n          $ref: '#/components/responses/UserExtSourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: AddUserExtSourceInput\n              description: \"input to addUserExtSource\"\n              type: object\n              required:\n                - user\n                - userExtSource\n              properties:\n                user: { type: integer }\n                userExtSource: { $ref: '#/components/schemas/UserExtSource' }\n\n  /urlinjsonout/usersManager/validatePreferredEmailChange:\n    post:\n      tags:\n        - UsersManager\n      operationId: validatePreferredEmailChangeWithToken\n      summary: Validate new preferred email address. Request to validate is determined based on token parameter sent in email notice by requestPreferredEmailChange() method.\n      parameters:\n        - { name: token, description: \"token for the email change request\", schema: { type: string }, in: query, required: true }\n        - { name: u, description: \"id of user you want to validate preferred email request\", schema: { type: integer }, in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getPendingPreferredEmailChanges:\n    get:\n      tags:\n        - UsersManager\n      operationId: getPendingPreferredEmailChanges\n      summary: Return list of email addresses of user, which are awaiting validation and are inside time window for validation. If there is no preferred email change request pending or requests are outside time window for validation, returns empty list.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfStringsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getAssignedRichResources:\n    get:\n      tags:\n        - UsersManager\n      operationId: getAssignedRichResourcesForUser\n      summary: Get all rich resources which have the user assigned.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getUsersByIds:\n    get:\n      tags:\n        - UsersManager\n      operationId: getUsersByIds\n      summary: Returns list of Users by their ids.\n      parameters:\n        - $ref: '#/components/parameters/ids'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getSpecificUsersByUser:\n    get:\n      tags:\n        - UsersManager\n      operationId: getSpecificUsersByUser\n      summary: Get all specific users who are owned by the user.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/addSpecificUserOwner:\n    post:\n      tags:\n        - UsersManager\n      operationId: addSpecificUserOwner\n      summary: Add specific user owner.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/specificUserId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/removeSpecificUserOwner:\n    post:\n      tags:\n        - UsersManager\n      operationId: removeSpecificUserOwner\n      summary: Remove specific user owner.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/specificUserId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getUsersBySpecificUser:\n    get:\n      tags:\n        - UsersManager\n      operationId: getUsersBySpecificUser\n      summary: Return all users who owns the specific user.\n      parameters:\n        - $ref: '#/components/parameters/specificUserId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/updateUser:\n    post:\n      tags:\n        - UsersManager\n      operationId: updateUser\n      summary: Updates user\n      responses:\n        '200':\n          $ref: '#/components/responses/UserResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdateUser\n              description: \"input to updateUser\"\n              type: object\n              required:\n                - user\n              properties:\n                user: { $ref: '#/components/schemas/User' }\n\n  /json/usersManager/createServiceUser:\n    post:\n      tags:\n        - UsersManager\n      operationId: createServiceUser\n      summary: From given candidate, creates a service user and assign given owners to him.\n      description: |\n        This method also checks if some of given userExtSources do exist. If so,\n        this method throws a UserExtSourceExistsException.\n        This method can also set only user-def and user-opt attributes for the given candidate.\n      responses:\n        '200':\n          $ref: '#/components/responses/UserResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreateServiceUser\n              description: \"input to createServiceUser\"\n              type: object\n              required:\n                - candidate\n                - specificUserOwners\n              properties:\n                candidate: { $ref: '#/components/schemas/Candidate' }\n                specificUserOwners: { type: array, items: { $ref: \"#/components/schemas/User\" } }\n\n  /json/usersManager/checkPasswordResetRequestIsValid/token:\n    get:\n      tags:\n        - UsersManager\n      operationId: checkPasswordResetRequestByTokenIsValid\n      summary: Checks if the password reset request is valid.\n      description: |\n        This method throws PasswordResetLinkExpiredException when the password reset request expired.\n        This method throws PasswordResetLinkNotValidException when the password reset request was already\n        used or has never existed.\n      parameters:\n        - { name: token, description: \"token for the password reset request\", schema: { type: string }, in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/changeNonAuthzPassword/token:\n    post:\n      tags:\n        - UsersManager\n      operationId: changeNonAuthzPasswordByToken\n      summary: Changes user password in defined login-namespace based on token parameter.\n      description: |\n        This method throws PasswordResetLinkExpiredException when the password reset request expired.\n        This method throws PasswordResetLinkNotValidException when the password reset request was already\n        used or has never existed.\n      parameters:\n        - { name: token, description: \"token for the password reset request\", schema: { type: string }, in: query, required: true }\n        - $ref: '#/components/parameters/password'\n        - { name: lang, description: \"language to get notifications in (optional)\", schema: { type: string }, in: query, required: false }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/reservePassword/login:\n    post:\n      tags:\n        - UsersManager\n      operationId: reservePasswordForLogin\n      summary: Reserves password for a user in specified login-namespace.\n      parameters:\n        - $ref: '#/components/parameters/login'\n        - $ref: '#/components/parameters/namespace'\n        - $ref: '#/components/parameters/password'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/reservePassword/user:\n    post:\n      tags:\n        - UsersManager\n      operationId: reservePasswordForUser\n      summary: Reserves password for a user in specified login-namespace.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/namespace'\n        - $ref: '#/components/parameters/password'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/validatePassword/login:\n    post:\n      tags:\n        - UsersManager\n      operationId: validatePasswordForLogin\n      summary: Validate password for a user in specified login-namespace.\n      parameters:\n        - $ref: '#/components/parameters/login'\n        - $ref: '#/components/parameters/namespace'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/validatePassword/user:\n    post:\n      tags:\n        - UsersManager\n      operationId: validatePasswordForUser\n      summary: Validate password for a user in specified login-namespace.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/namespace'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/deletePassword/login:\n    post:\n      tags:\n        - UsersManager\n      operationId: deletePasswordForLogin\n      summary: Delete password for a user in specified login-namespace.\n      parameters:\n        - $ref: '#/components/parameters/login'\n        - $ref: '#/components/parameters/namespace'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/deletePassword/user:\n    post:\n      tags:\n        - UsersManager\n      operationId: deletePasswordForUser\n      summary: Delete password for a user in specified login-namespace.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/namespace'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/changePassword/login:\n    post:\n      tags:\n        - UsersManager\n      operationId: changePasswordForLogin\n      summary: Changes password for a user in specified login-namespace.\n      parameters:\n        - $ref: '#/components/parameters/login'\n        - $ref: '#/components/parameters/namespace'\n        - { name: newPassword, schema: { type: string }, in: query, required: true }\n        - { name: oldPassword, schema: { type: string }, in: query, required: false }\n        - { name: checkOldPassword, schema: { type: boolean }, in: query, required: false, description: \"True if the oldPassword has to be checked. When omitted it defaults to false.\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n\n  /urlinjsonout/usersManager/changePassword/user:\n    post:\n      tags:\n        - UsersManager\n      operationId: changePasswordForUser\n      summary: Changes password for a user in specified login-namespace.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/namespace'\n        - { name: newPassword, schema: { type: string }, in: query, required: true }\n        - { name: oldPassword, schema: { type: string }, in: query, required: false }\n        - { name: checkOldPassword, schema: { type: boolean }, in: query, required: false, description: \"True if the oldPassword has to be checked. When omitted it defaults to false.\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/loginExist:\n    post:\n      tags:\n        - UsersManager\n      operationId: loginExist\n      summary: Check wheter login exists in specified login-namespace. Only available for some namespaces.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/namespace'\n      responses:\n        '200':\n          $ref: '#/components/responses/BooleanResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/deleteUser:\n    post:\n      tags:\n        - UsersManager\n      operationId: deleteUser\n      summary: Deletes a user.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/forceDelete'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/anonymizeUser:\n    post:\n      tags:\n        - UsersManager\n      operationId: anonymizeUser\n      summary: Anonymizes user - according to configuration, each of user's attributes is either anonymized, kept untouched or deleted. Also deletes other user's related data, e.g. authorships of users publications, mail change and password reset requests, bans...\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - { name: force, schema: { type: boolean }, in: query, required: false, description: \"if true the user is removed from all groups and vos\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/isLoginAvailable:\n    post:\n      tags:\n        - UsersManager\n      operationId: isLoginAvailable\n      summary: Checks if the login is available in the namespace. Return 1 if yes, 0 if no.\n      parameters:\n        - { name: loginNamespace, schema: { type: string }, in: query, required: true }\n        - $ref: '#/components/parameters/login'\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/usersManager/reserveRandomPassword:\n    post:\n      tags:\n        - UsersManager\n      operationId: reserveRandomPassword\n      summary: Reserves a random password in external authz system. User shouldn't be able to log-in (account disabled, password unknown to him). This is usefull when manager create account for others and later send them password reset request.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/namespace'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/usersManager/getUsersPage:\n    post:\n      tags:\n        - UsersManager\n      operationId: getUsersPage\n      summary: Get page of users with the given attributes.\n      responses:\n        '200':\n          $ref: '#/components/responses/PaginatedRichUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputGetPaginatedUsers\n              description: \"input to getPaginatedUsers\"\n              type: object\n              required:\n                - query\n                - attrNames\n              properties:\n                attrNames: { type: array, items: { type: string } }\n                query: { $ref: '#/components/schemas/UsersPageQuery' }\n\n  /urlinjsonout/usersManager/generateAccount/name:\n    post:\n      tags:\n        - UsersManager\n      operationId: generateAccountForName\n      summary: Generates user account in a backend system associated with login-namespace in Perun. Parameters are implementation-dependent for each login-namespace. Returns map with 1) key=login-namespace attribute urn, value=generated login 2) rest of opt response attributes.\n      parameters:\n        - $ref: '#/components/parameters/namespace'\n        - { name: name, schema: { type: string }, in: query, required: false }\n      responses:\n        '200':\n          $ref: '#/components/responses/MapStringStringResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #################################################\n  #                                               #\n  # MembersManager                                #\n  #                                               #\n  #################################################\n\n  /json/membersManager/getMemberById:\n    get:\n      tags:\n        - MembersManager\n      operationId: getMemberById\n      summary: Returns Member by its id.\n      description: Gets Member\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/MemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getMembersByIds:\n    get:\n      tags:\n        - MembersManager\n      operationId: getMembersByIds\n      summary: Returns list of Members by their ids.\n      parameters:\n        - $ref: '#/components/parameters/ids'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getRichMembersByIds:\n    get:\n      tags:\n        - MembersManager\n      operationId: getRichMembersByIds\n      summary: Returns rich members by their IDs with specific attributes.\n        When the list of attribute names is null or empty then rich members will be returned without attributes.\n      parameters:\n        - $ref: '#/components/parameters/ids'\n        - $ref: '#/components/parameters/attrNamesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getRichMember:\n    get:\n      tags:\n        - MembersManager\n      operationId: getRichMember\n      summary: Returns RichMember by member id.\n      description: Get RichMember without attributes\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/RichMemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getRichMemberWithAttributes:\n    get:\n      tags:\n        - MembersManager\n      operationId: getRichMemberWithAttributes\n      summary: Returns Member by its id.\n      description: Get richMember with member/user attributes\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/RichMemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getRichMembersNoUserAttributes:\n    get:\n      tags:\n        - MembersManager\n      operationId: getRichMembersNoUserAttributes\n      summary: Returns list of all RichMembers for specified VO. User attributes aren't included in the returned\n          objects\n      description: Get richMembers for VO with member attributes (without user attributes).\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getMemberByUser:\n    get:\n      tags:\n        - MembersManager\n      operationId: getMemberByUser\n      summary: Returns a Member specified by VO id and User id.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/MemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getMembersByUser:\n    get:\n      tags:\n        - MembersManager\n      operationId: getMembersByUser\n      summary: Returns members for a user.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getAllMembers:\n    get:\n      tags:\n        - MembersManager\n      operationId: getAllMembers\n      summary: Get all members from all vos.\n      responses:\n        200:\n          $ref: '#/components/responses/ListOfMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getMembers:\n    get:\n      tags:\n        - MembersManager\n      operationId: getMembers\n      summary: Returns members of a VO.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - { name: status, in: query, required: false, schema: { $ref: '#/components/schemas/VoMemberStatuses' }, description: 'optional status' }\n      responses:\n        200:\n          $ref: '#/components/responses/ListOfMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/findMembersInVo:\n    get:\n      tags:\n        - MembersManager\n      operationId: findMembersInVo\n      summary: Searches for members in a VO.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/searchString'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getMemberByExtSourceNameAndExtLogin:\n    get:\n      tags:\n        - MembersManager\n      operationId: getMemberByExtSourceNameAndExtLogin\n      summary: Searches for members in a VO.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/extLogin'\n        - $ref: '#/components/parameters/extSourceName'\n      responses:\n        '200':\n          $ref: '#/components/responses/MemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/membersManager/validateMemberAsync:\n    post:\n      tags:\n        - MembersManager\n      operationId: validateMemberAsync\n      summary: Validate all attributes for member and set member's status to VALID. This method runs asynchronously.\n        It immediately return member with original status and after asynchronous validation successfully finishes it\n        switch member's status to VALID. If validation ends with error, member keeps his status.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/MemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/membersManager/extendMembership:\n    post:\n      tags:\n        - MembersManager\n      operationId: extendMembership\n      summary: Extend member membership using membershipExpirationRules attribute defined at VO.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/canExtendMembership:\n    get:\n      tags:\n        - MembersManager\n      operationId: canExtendMembership\n      summary: Return true if the membership can be extended or if no rules were set for the membershipExpiration, otherwise false.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/BooleanResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getMembersCount:\n    get:\n      tags:\n        - MembersManager\n      operationId: getMembersCount\n      summary: Returns count of all VO members.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getMembersCount/status:\n    get:\n      tags:\n        - MembersManager\n      operationId: getMembersWithStatusCount\n      summary: Returns count of VO members with specified status.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - name: status\n          description: status (VALID | INVALID | EXPIRED | DISABLED)\n          schema:\n            type: string\n          in: query\n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getSponsoredMembers/v:\n    get:\n      tags:\n        - MembersManager\n      operationId: getSponsoredMembers\n      summary: Gets members from VO who are sponsored.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getAllSponsoredMembers:\n    get:\n      tags:\n        - MembersManager\n      operationId: getAllSponsoredMembers\n      summary: Gets all sponsored members from VO.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getSponsors/member:\n    get:\n      tags:\n        - MembersManager\n      operationId: getSponsorsByMember\n      summary: Gets sponsors for given member with optional attribute names.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/attrNamesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getSponsors/vo:\n    get:\n      tags:\n        - MembersManager\n      operationId: getSponsorsByVo\n      summary: Gets sponsors for given VO, extSourceName and extLogin with optional attribute names.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/extSourceName'\n        - $ref: '#/components/parameters/extLogin'\n        - $ref: '#/components/parameters/attrNamesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getSponsoredMembersAndTheirSponsors:\n    get:\n      tags:\n        - MembersManager\n      operationId: getSponsoredMembersAndTheirSponsors\n      summary: Gets list of members with sponsors.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfMemberWithSponsorsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getAllSponsoredMembersAndTheirSponsors:\n    get:\n      tags:\n        - MembersManager\n      operationId: getAllSponsoredMembersAndTheirSponsors\n      summary: Gets list of VO's all sponsored members with sponsors.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfMemberWithSponsorsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/createSponsoredMember/withFullName:\n    post:\n      tags:\n        - MembersManager\n      operationId: createSponsoredMember\n      summary: Creates a new sponsored member in a given VO and namespace.\n      responses:\n        '200':\n          $ref: '#/components/responses/RichMemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreateSponsoredMember\n              description: \"input for createSponsoredMember\"\n              type: object\n              required:\n                - userData\n                - vo\n                - sponsor\n              properties:\n                vo: { type: integer }\n                validityTo: { type: string }\n                sponsor: { type: integer }\n                sendActivationLink: { type: boolean }\n                userData: { $ref: '#/components/schemas/SponsoredUserData' }\n\n  /json/membersManager/setSponsoredMember:\n    post:\n      tags:\n        - MembersManager\n      operationId: setSponsoredMember\n      summary: Creates a sponsored membership for the given user.\n      responses:\n        '200':\n          $ref: '#/components/responses/RichMemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetSponsoredMember\n              description: \"input for setSponsoredMember\"\n              type: object\n              required:\n                - userToBeSponsored\n                - password\n                - vo\n                - namespace\n              properties:\n                userToBeSponsored: { type: integer }\n                password: { type: string }\n                vo: { type: integer }\n                sponsor: { type: integer }\n                namespace: { type: string }\n                validityTo: { type: string }\n\n  /json/membersManager/createSponsoredMembersFromCSV:\n    post:\n      tags:\n        - MembersManager\n      operationId: createSponsoredMembersFromCSV\n      summary: Creates new sponsored members in a given VO and namespace.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfMapStringStringResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreateSponsoredMemberFromCSV\n              description: \"input for createSponsoredMembersFromCSV\"\n              type: object\n              required:\n                - vo\n                - sponsor\n                - namespace\n                - data\n                - header\n              properties:\n                data: { type: array, items: { type: string }, description: \"values separated with semicolons\" }\n                header: { type: string, description: \"csv header for the given data, values are also split with semicolons\" }\n                vo: { type: integer }\n                sponsor: { type: integer }\n                namespace: { type: string }\n                validityTo: { type: string }\n                sendActivationLinks: { type: boolean }\n                groups: { type: array, items: { type: integer }, description: \"groups to which should be the created users assigned\" }\n\n  /json/membersManager/createSponsoredMembers:\n    post:\n      tags:\n        - MembersManager\n      operationId: createSponsoredMembers\n      summary: Creates new sponsored members in a given VO and namespace.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfMapStringStringResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreateSponsoredMembers\n              description: \"input for createSponsoredMembers\"\n              type: object\n              required:\n                - guestNames\n                - vo\n                - sponsor\n                - namespace\n              properties:\n                guestNames: { type: array, items: { type: string }, description: \"names of members to create, single name should have the format {firstName};{lastName} to be parsed well\" }\n                vo: { type: integer }\n                sponsor: { type: integer }\n                namespace: { type: string }\n                validityTo: { type: string }\n                email: { type: string }\n                sendActivationLink: { type: boolean }\n\n  /json/membersManager/createSpecificMember:\n    post:\n      tags:\n        - MembersManager\n      operationId: createSpecificMember\n      summary: Creates a new member from candidate which is prepared for creating specificUser.\n      responses:\n        '200':\n          $ref: '#/components/responses/MemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSpecificMember\n              description: \"input to createSpecificMember\"\n              type: object\n              required:\n                - candidate\n                - vo\n                - specificUserType\n                - specificUserOwners\n              properties:\n                candidate: { $ref: '#/components/schemas/Candidate' }\n                vo: { type: integer }\n                specificUserType: { type: string }\n                specificUserOwners: { type: array, items: { $ref: '#/components/schemas/User' } }\n\n\n  /urlinjsonout/membersManager/removeSponsor:\n    post:\n      tags:\n        - MembersManager\n      operationId: removeSponsor\n      summary: Removes sponsor of existing member.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/sponsorId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/membersManager/updateSponsorshipValidity:\n    post:\n      tags:\n        - MembersManager\n      operationId: updateSponsorshipValidity\n      summary: Updates sponsorship validity. To change it to FOREVER, don't pass the validityTo param, or pass it as null.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/sponsorId'\n        - $ref: '#/components/parameters/optionalValidityTo'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/membersManager/deleteMember:\n    post:\n      tags:\n        - MembersManager\n      operationId: deleteMember\n      summary: Deletes only member data appropriated by member id.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/membersManager/deleteMembers:\n    post:\n      tags:\n        - MembersManager\n      operationId: deleteMembers\n      summary: Delete members with given ids. It is possible to delete members from multiple vos.\n      parameters:\n        - $ref: '#/components/parameters/memberIds'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/findCompleteRichMembers/v:\n    get:\n      tags:\n        - MembersManager\n      operationId: FindCompleteRichMembersForVo\n      summary: Return list of richMembers for specific vo by the searchString with attributes specific for list of attrsNames\n        and who have only status which is contain in list of statuses. If attrsNames is empty or null\n        return all attributes for specific richMembers. If listOfStatuses is empty or null, return all possible statuses.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/attrsNames'\n        - $ref: '#/components/parameters/listOfAllowedStatuses'\n        - $ref: '#/components/parameters/searchString'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n\n\n  /json/membersManager/findCompleteRichMembers/v-sponsored:\n    get:\n      tags:\n        - MembersManager\n      operationId: findSponsoredCompleteRichMembersForVo\n      summary: Returns list of RichMembers for vo, with reqested attributes, filterd by search string\n        and option to return only sponosred members.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/attrsNames'\n        - $ref: '#/components/parameters/searchString'\n        - $ref: '#/components/parameters/onlySponsored'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/findCompleteRichMembers/g:\n    get:\n      tags:\n        - MembersManager\n      operationId: FindCompleteRichMembersForGroup\n      summary: Return list of richMembers for specific group by the searchString with attributes specific for list of attrsNames\n        and who have only status which is contain in lists of statuses. If attrsNames is empty or null\n        return all attributes for specific richMembers. If listOfStatuses or listOfGroupStatuses is empty or null, return all possible statuses.\n        If lookingInParentGroup is true, find all these richMembers only for parentGroup of this group.\n        If this group is top level group, so find richMembers from members group.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attrsNames'\n        - $ref: '#/components/parameters/listOfAllowedStatuses'\n        - $ref: '#/components/parameters/listOfAllowedGroupStatuses'\n        - $ref: '#/components/parameters/searchString'\n        - $ref: '#/components/parameters/lookingInParentGroup'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/findCompleteRichMembers/attrs:\n    get:\n      tags:\n        - MembersManager\n      operationId: FindCompleteRichMembersByAttributes\n      summary: Return list of richMembers from perun by the searchString with attributes specific for list of attrsNames\n        and who have only status which is contain in list of statuses. If attrsNames is empty or null\n        return all attributes for specific richMembers. If listOfStatuses is empty or null, return all possible statuses.\n      parameters:\n        - $ref: '#/components/parameters/attrsNames'\n        - $ref: '#/components/parameters/searchString'\n        - $ref: '#/components/parameters/listOfAllowedStatuses'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/createMember/extSource:\n    post:\n      tags:\n        - MembersManager\n      operationId: createMemberFromExtSource\n      summary: Creates a new member and sets all member's attributes from the candidate.\n        Also stores the associated user if doesn't exist. This method is used by the registrar.\n        This method also add user to all groups in list.\n        Empty list of groups is ok, the behavior is then same like in the method without list of groups.\n      responses:\n        '200':\n          $ref: '#/components/responses/MemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreateMemberFromExtSource\n              description: \"input to create member from extSource\"\n              type: object\n              required:\n                - vo\n                - extSourceName\n                - extSourceType\n                - login\n                - candidate\n              properties:\n                vo: { type: integer }\n                extSourceName: { type: string }\n                extSourceType: { type: string }\n                login: { type: string }\n                candidate: { $ref: '#/components/schemas/Candidate' }\n                groups: { type: array, items: { $ref: '#/components/schemas/Group' } }\n\n\n  /json/membersManager/createMember/u:\n    post:\n      tags:\n        - MembersManager\n      operationId: CreateMemberForUser\n      summary: Creates a new member from user. This method also add user to all groups in list.\n        Empty list of groups is ok, the behavior is then same like in the method without list of groups.\n      responses:\n        '200':\n          $ref: '#/components/responses/MemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreateMemberForUser\n              description: \"input to create member for user\"\n              type: object\n              required:\n                - vo\n                - user\n              properties:\n                vo: { type: integer }\n                user: { type: integer }\n                groups: { type: array, items: { $ref: '#/components/schemas/Group' } }\n\n  /json/membersManager/createMember/c:\n    post:\n      tags:\n        - MembersManager\n      operationId: createMemberForCandidate\n      summary: Creates a new member from candidate returned by the method VosManager.findCandidates\n        which fills Candidate.userExtSource. This method also add user to all groups in list. Empty list of groups is ok,\n        the behavior is then same like in the method without list of groups. This method runs asynchronously\n      responses:\n        '200':\n          $ref: '#/components/responses/MemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreateMemberForCandidate\n              description: \"input to create member for candidate\"\n              type: object\n              required:\n                - vo\n                - candidate\n              properties:\n                vo: { type: integer }\n                candidate: { $ref: '#/components/schemas/Candidate' }\n                groups: { type: array, items: { $ref: '#/components/schemas/Group' } }\n\n  /json/membersManager/getCompleteRichMembers/v:\n    get:\n      tags:\n        - MembersManager\n      operationId: getCompleteRichMembersForVo\n      summary: Get all RichMembers with attributes specific for list of attrsNames from the vo and have only status\n        which is contain in list of statuses. If attrsNames is empty or null return all attributes for specific richMembers.\n        If listOfStatuses is empty or null, return all possible statuses.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/listOfAllowedStatuses'\n        - name: \"attrsNames[]\"\n          description: \"list of attributes names List\u003cString\u003e\"\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getCompleteRichMembers/g:\n    get:\n      tags:\n        - MembersManager\n      operationId: getCompleteRichMembersForGroup\n      summary: Get all RichMembers with attributes specific for list of attrsNames from the group and have only status\n        which is contain in lists of statuses. If attrsNames is empty or null return all attributes for specific richMembers.\n        If listOfStatuses or listOfGroupStatuses is empty or null, return all possible statuses. If lookingInParentGroup is true,\n        get all these richMembers only for parentGroup of this group. If this group is top level group,\n        so get richMembers from members group.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/listOfAllowedStatuses'\n        - $ref: '#/components/parameters/listOfAllowedGroupStatuses'\n        - $ref: '#/components/parameters/lookingInParentGroup'\n        - name: \"attrsNames[]\"\n          description: \"list of attributes names List\u003cString\u003e\"\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getCompleteRichMembers/g-r:\n    get:\n      tags:\n        - MembersManager\n      operationId: getCompleteRichMembersForGroupResource\n      summary: Get all RichMembers with attributes specific for list of attrsNames.\n        Attributes are defined by member (user) and resource (facility) objects.\n        It returns also user-facility (in userAttributes of RichMember) and member-resource (in memberAttributes of RichMember) attributes.\n        Members are defined by group and are filtered by list of allowed statuses.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attrsNames'\n        - name: \"allowedStatuses[]\"\n          description: \"list of allowed statuses List\u003cString\u003e\"\n          in: query\n          required: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/membersManager/setStatus:\n    post:\n      tags:\n        - MembersManager\n      operationId: setStatus\n      summary: Set membership status of a member.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - name: status\n          description: status (VALID | INVALID | EXPIRED | DISABLED)\n          schema:\n            type: string\n          in: query\n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/MemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/membersManager/sendPasswordResetLinkEmail:\n    post:\n      tags:\n        - MembersManager\n      operationId: sendPasswordResetLinkEmail\n      summary: Send mail to user's preferred email address with link for non-authz password reset. Correct authz information is stored in link's URL.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/namespace'\n        - { name: emailAttributeURN, schema: { type: string }, in: query, required: true, description: \"urn of the attribute with stored mail\" }\n        - { name: language, schema: { type: string }, in: query, required: true, description: \"language of the message\" }\n        - { name: baseUrl, schema: { type: string }, in: query, required: false, description: \"base url of Perun instance (optional)\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/membersManager/sendAccountActivationLinkEmail:\n    post:\n      tags:\n        - MembersManager\n      operationId: sendAccountActivationLinkEmail\n      summary: Send mail to user's preferred email address with link for non-authz account activation. Correct authz information is stored in link's URL.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/namespace'\n        - { name: emailAttributeURN, schema: { type: string }, in: query, required: true, description: \"urn of the attribute with stored mail\" }\n        - { name: language, schema: { type: string }, in: query, required: true, description: \"language of the message\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/membersManager/setSponsorshipForMember:\n    post:\n      tags:\n        - MembersManager\n      operationId: setSponsorshipForMember\n      summary: Transform non-sponsored member to sponsored one,\n        with defined sponsor and optional sponsorship validity expiration\n      parameters:\n        - $ref: '#/components/parameters/sponsoredMemberId'\n        - $ref: '#/components/parameters/sponsorId'\n        - $ref: '#/components/parameters/optionalValidityTo'\n      responses:\n        '200':\n          $ref: '#/components/responses/RichMemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/membersManager/sponsorMember:\n    post:\n      tags:\n        - MembersManager\n      operationId: sponsorMember\n      summary: For an existing member, assigns a new sponsor\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/sponsorId'\n        - $ref: '#/components/parameters/optionalValidityTo'\n      responses:\n        '200':\n          $ref: '#/components/responses/RichMemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/membersManager/moveMembership:\n    post:\n      tags:\n        - MembersManager\n      operationId: moveMembership\n      summary: Moves membership in VO from source user to target user - moves the source user's memberships in non-synchronized groups,\n        member related attributes, bans and sponsorships in the VO. Removes the source user's member object.\n        If VO is member of any hierarchical parent VO, user's membership is moved in parent VOs also.\n        If VO is parent of any hierarchical member VOs, user's membership is not moved in member VOs.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - { name: sourceUser, schema: { type: integer }, in: query, description: \"id of source user\", required: true }\n        - { name: targetUser, schema: { type: integer }, in: query, description: \"id of target user\", required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getAllNamespacesRules:\n    get:\n      tags:\n        - MembersManager\n      operationId: getAllNamespacesRules\n      summary: Return all loaded namespaces rules.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfNamespacesRulesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/membersManager/getMembersPage:\n    post:\n      tags:\n        - MembersManager\n      operationId: getMembersPage\n      summary: Get page of members from the given vo, with the given attributes.\n      responses:\n        '200':\n          $ref: '#/components/responses/PaginatedRichMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputGetPaginatedMembers\n              description: \"input to getPaginatedMembers\"\n              type: object\n              required:\n                - vo\n                - query\n                - attrNames\n              properties:\n                vo: { type: integer }\n                attrNames: { type: array, items: { type: string } }\n                query: { $ref: '#/components/schemas/MembersPageQuery' }\n\n  #################################################\n  #                                               #\n  # FacilitiesManager                             #\n  #                                               #\n  #################################################\n\n  /json/facilitiesManager/getFacilityById:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getFacilityById\n      summary: Returns Facility with specified id.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/FacilityResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getFacilityByName:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getFacilityByName\n      summary: Returns Facility with specified name.\n      parameters:\n        - $ref: '#/components/parameters/name'\n      responses:\n        '200':\n          $ref: '#/components/responses/FacilityResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getFacilitiesByIds:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getFacilitiesByIds\n      summary: Returns list of Facilities by their ids.\n      parameters:\n        - $ref: '#/components/parameters/ids'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAssignedUsers:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAssignedUsers\n      summary: Lists all users assigned to facility containing resources where service is assigned.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - name: service\n          description: \"id of Service\"\n          schema:\n            type: integer\n          in: query\n          required: false\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAssignedUsers/f-name:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAssignedUsersByFacilityName\n      summary: Lists all users assigned to facility containing resources where service is assigned.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - name: service\n          description: \"id of Service\"\n          schema:\n            type: integer\n          in: query\n          required: false\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getRichFacilities:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getRichFacilities\n      summary: Gets all possible rich facilities with all their owners.\n      parameters: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getFacilitiesByDestination:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getFacilitiesByDestination\n      summary: Searches for the Facilities by theirs destination.\n      parameters:\n        - $ref: '#/components/parameters/destinationName'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n\n  /json/facilitiesManager/getFacilitiesByAttribute:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getFacilitiesByAttribute\n      summary: Returns all facilities that have the attribute 'attributeName' with the string value 'attributeValue'.\n      description: Searching only def and opt attributes. Large attributes are not supported.\n      parameters:\n        - $ref: '#/components/parameters/attributeName'\n        - $ref: '#/components/parameters/attributeValue'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getFacilities:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAllFacilities\n      summary: Get all facilities.\n      parameters: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getFacilitiesCount:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getFacilitiesCount\n      summary: Gets count of all facilities.\n      parameters: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getEnrichedFacilities:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getEnrichedFacilities\n      summary: Gets all enriched facilities user has access rights to.\n      parameters: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfEnrichedFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getOwners:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getFacilityOwners\n      summary: Returns owners of a facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfOwnersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getOwners/f-name:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getFacilityOwnersByFacilityName\n      summary: Returns owners of a facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfOwnersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/addOwner:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: addFacilityOwner\n      summary: Adds owner of a facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/ownerId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/addOwner/f-o-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: addFacilityOwnerByFacilityNameOwnerName\n      summary: Adds owner of a facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - $ref: '#/components/parameters/ownerName'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/addOwner/f-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: addFacilityOwnerByFacilityName\n      summary: Adds owner of a facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - $ref: '#/components/parameters/ownerId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/addOwner/o-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: addFacilityOwnerByOwnerName\n      summary: Adds owner of a facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/ownerName'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/removeOwner:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: removeFacilityOwner\n      summary: Removes owner from a facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/ownerId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/removeOwner/f-o-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: removeFacilityOwnerByFacilityNameOwnerName\n      summary: Removes owner from a facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - $ref: '#/components/parameters/ownerName'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/removeOwner/f-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: removeFacilityOwnerByFacilityName\n      summary: Removes owner from a facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - $ref: '#/components/parameters/ownerId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/removeOwner/o-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: removeFacilityOwnerByOwnerName\n      summary: Removes owner from a facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/ownerName'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/getAllowedVos:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: getAllowedVos\n      summary: Return all VO which can use a facility. (VO must have the resource which belongs to this facility.)\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfVosResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/getAllowedVos/f-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: getAllowedVosByFacilityName\n      summary: Return all VO which can use a facility. (VO must have the resource which belongs to this facility.)\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfVosResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAllowedGroups:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAllowedGroups\n      summary: Get all assigned groups on Facility, optionally filtered by Vo or Service or both.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - { name: vo, description: \"id of Vo\", schema: { type: integer },  in: query, required: false }\n        - { name: service, description: \"id of Service\", schema: { type: integer },  in: query, required: false }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAllowedGroups/f-name:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAllowedGroupsByFacilityName\n      summary: Get all assigned groups on Facility, optionally filtered by Vo or Service or both.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - { name: vo, description: \"id of Vo\", schema: { type: integer },  in: query, required: false }\n        - { name: service, description: \"id of Service\", schema: { type: integer },  in: query, required: false }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAllowedRichGroupsWithAttributes:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAllowedRichGroupsWithAttributes\n      summary: Get all assigned RichGroups on Facility with specified set of attributes, optionally filtered by Vo or Service or both.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/attrNames'\n        - { name: vo, description: \"id of Vo\", schema: { type: integer },  in: query, required: false }\n        - { name: service, description: \"id of Service\", schema: { type: integer },  in: query, required: false }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAllowedRichGroupsWithAttributes/f-name:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAllowedRichGroupsWithAttributesByFacilityName\n      summary: Get all assigned RichGroups on Facility with specified set of attributes, optionally filtered by Vo or Service or both.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - $ref: '#/components/parameters/attrNames'\n        - { name: vo, description: \"id of Vo\", schema: { type: integer },  in: query, required: false }\n        - { name: service, description: \"id of Service\", schema: { type: integer },  in: query, required: false }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAssignedResources:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAssignedResourcesForFacility\n      summary: Returns all resources assigned to a facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAssignedResources/f-name:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAssignedResourcesForFacilityByFacilityName\n      summary: Returns all resources assigned to a facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAssignedResourcesByAssignedService:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAssignedResourcesByAssignedServiceForFacility\n      summary: Returns resources with specific service assigned to the facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/serviceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAssignedRichResources:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAssignedRichResourcesForFacility\n      summary: Returns all rich resources assigned to a facility with VO property filled.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAssignedRichResources/f-name:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAssignedRichResourcesForFacilityByFacilityName\n      summary: Returns all rich resources assigned to a facility with VO property filled.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/createFacility:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: createFacility\n      summary: Creates a facility. Caller is automatically set as facility manager.\n      parameters:\n        - $ref: '#/components/parameters/name'\n        - { name: description, required: false, in: query, schema: { type: string }, description: \"optional description of a facility\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/FacilityResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/deleteFacility:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: deleteFacility\n      summary: Deletes a facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/forceDelete'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/deleteFacility/f-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: deleteFacilityByFacilityName\n      summary: Deletes a facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/updateFacility:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: updateFacility\n      summary: Updates a facility.\n      responses:\n        '200':\n          $ref: '#/components/responses/FacilityResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdateFacility\n              description: \"input to updateFacility\"\n              type: object\n              required:\n                - facility\n              properties:\n                facility: { $ref: '#/components/schemas/Facility' }\n\n  /json/facilitiesManager/getOwnerFacilities:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getOwnerFacilities\n      summary: Returns list of all facilities owned by the owner.\n      parameters:\n        - $ref: '#/components/parameters/ownerId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getHosts:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getHosts\n      summary: Returns Hosts of a Facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfHostsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getHosts/f-name:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getHostsByFacilityName\n      summary: Returns Hosts of a Facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfHostsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getHostById:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getHostById\n      summary: Returns a host by its id.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/HostResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getHostsByHostname:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getHostsByHostname\n      summary: Returns hosts by hostname. (from all facilities)\n      parameters:\n        - { name: hostname, required: true, in: query, schema: { type: string }, description: \"name of a host\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/HostResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getEnrichedHosts:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getEnrichedHosts\n      summary: Return all enriched hosts of given facility. That is host with all its attributes.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfEnrichedHostsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getFacilityForHost:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getFacilityForHost\n      summary: Return facility which has the host.\n      parameters:\n        - $ref: '#/components/parameters/hostId'\n      responses:\n        '200':\n          $ref: '#/components/responses/FacilityResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getHostsCount:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getHostsCount\n      summary: Count hosts of Facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getHostsCount/f-name:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getHostsCountByFacilityName\n      summary: Count hosts of Facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/addHosts:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: addHosts\n      summary: Adds hosts to the Facility.\n      description: InvalidHostnameException is thrown when any host has invalid hostname.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/hostnames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfHostsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/addHosts/f-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: addHostsByFacilityName\n      summary: Adds hosts to the Facility.\n      description: InvalidHostnameException is thrown when any host has invalid hostname.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - $ref: '#/components/parameters/hostnames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfHostsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/removeHosts:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: removeHosts\n      summary: Remove hosts from a Facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/listOfHostIds'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/removeHosts/f-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: removeHostsByFacilityName\n      summary: Remove hosts from a Facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - $ref: '#/components/parameters/listOfHostIds'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/addHost:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: addHost\n      summary: Adds a host to the Facility.\n      description: InvalidHostnameException is thrown when host has invalid hostname.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - { name: hostname, description: \"DNS name of host\", schema: { type: string },  in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfHostsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/addHost/f-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: addHostByFacilityName\n      summary: Adds a host to the Facility.\n      description: InvalidHostnameException is thrown when host has invalid hostname.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - { name: hostname, description: \"DNS name of host\", schema: { type: string },  in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfHostsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/removeHost:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: removeHost\n      summary: Removes a host.\n      parameters:\n        - $ref: '#/components/parameters/hostId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/removeHostByHostname:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: removeHostByHostname\n      summary: Remove host from the Facility based on hostname. If there is ambiguity, method throws exception and no host is removed.\n      parameters:\n        - { name: hostname, schema: { type: string }, in: query, required: true, description: \"specific hostname\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAssignedFacilities/service:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAssignedFacilitiesByService\n      summary: Get facilities where the service is defined..\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAssignedFacilities/group:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAssignedFacilitiesByGroup\n      summary: Get facilities which are assigned to a Group (via resource).\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAssignedFacilities/member:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAssignedFacilitiesByMember\n      summary: Get facilities which have the member access on.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAssignedFacilities/user:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAssignedFacilitiesByUser\n      summary: et facilities which have the user access on.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/addAdmin/user:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: addFacilityAdminUser\n      summary: Adds a user as a Facility admin.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/addAdmin/user/f-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: addFacilityAdminUserByFacilityName\n      summary: Adds a user as a Facility admin.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/addAdmin/group:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: addFacilityAdminGroup\n      summary: Adds a group as a Facility admin.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/authorizedGroup'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/addAdmin/group/f-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: addFacilityAdminGroupByFacilityName\n      summary: Adds a group as a Facility admin.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - $ref: '#/components/parameters/authorizedGroup'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/removeAdmin/user:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: removeFacilityAdminUser\n      summary: Removes a user as a Facility admin.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/removeAdmin/user/f-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: removeFacilityAdminUserByFacilityName\n      summary: Removes a user as a Facility admin.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/removeAdmin/group:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: removeFacilityAdminGroup\n      summary: Removes a group as a Facility admin.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/authorizedGroup'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/removeAdmin/group/f-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: removeFacilityAdminGroupByFacilityName\n      summary: Removes a group as a Facility admin.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - $ref: '#/components/parameters/authorizedGroup'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n\n  /json/facilitiesManager/getAdmins:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getFacilityAdminUsers\n      description: |\n        Get list of all facility administrators for supported role and given facility.\n        If onlyDirectAdmins is true, return only direct admins of the group for supported role.\n        Includes users who are VALID members of administrator groups.\n        Supported roles: FacilityAdmin\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - { name: onlyDirectAdmins, schema: { type: boolean }, in: query, required: true, description: \"if true, get only direct facility administrators (if false, get both direct and indirect)\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAdmins/f-name:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getFacilityAdminUsersByFacilityName\n      description: |\n        Get list of all facility administrators for supported role and given facility.\n        If onlyDirectAdmins is true, return only direct admins of the group for supported role.\n        Includes users who are VALID members of administrator groups.\n        Supported roles: FacilityAdmin\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - { name: onlyDirectAdmins, schema: { type: boolean }, in: query, required: true, description: \"if true, get only direct facility administrators (if false, get both direct and indirect)\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAdminGroups:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getFacilityAdminGroups\n      summary: Get all Facility group admins.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAdminGroups/f-name:\n    get:\n      tags:\n        - FacilitiesManagerByFacilityName\n      operationId: getFacilityAdminGroupsByFacilityName\n      summary: Get all Facility group admins.\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getFacilitiesWhereUserIsAdmin:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getFacilitiesWhereUserIsAdmin\n      summary: Returns list of Facilities, where the user is a direct Administrator or a VALID member of an administrator group.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getFacilitiesByHostName:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getFacilitiesByHostName\n      summary: Return all facilities where exists host with the specific hostname\n      parameters:\n        - { name: hostname, schema: { type: string }, in: query, required: true, description: \"specific hostname\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAllowedUsers/v-f-s:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAllowedUsersOfFacility\n      summary: Return all users which can use this facility\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - { name: vo, schema: { type: integer }, in: query, description: \"VO id, if provided, filter out users who aren't in specific VO\" }\n        - { name: service, schema: { type: integer }, in: query, description: \"Service id, if provided, filter out users who aren't allowed to use the service on the facility\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAllowedUsers/v-f-s/f-name:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAllowedUsersOfFacilityByFacilityName\n      summary: Return all users which can use this facility\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - { name: vo, schema: { type: integer }, in: query, description: \"VO id, if provided, filter out users who aren't in specific VO\" }\n        - { name: service, schema: { type: integer }, in: query, description: \"Service id, if provided, filter out users who aren't allowed to use the service on the facility\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #TODO getAllowedUsers - another future versions\n\n  /urlinjsonout/facilitiesManager/copyOwners:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: copyOwners\n      summary: Copy owners from source facility to destination facility. You must be facility manager of both.\n      parameters:\n        - { name: srcFacility, schema: { type: integer }, in: query, required: true, description: \"source facility id\" }\n        - { name: destFacility, schema: { type: integer }, in: query, required: true, description: \"destination facility id\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/copyOwners/src-dest-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: copyOwnersBySourceDestinationNames\n      summary: Copy owners from source facility to destination facility. You must be facility manager of both.\n      parameters:\n        - { name: srcFacilityName, schema: { type: string }, in: query, required: true, description: \"source facility name\" }\n        - { name: destFacilityName, schema: { type: string }, in: query, required: true, description: \"destination facility name\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/copyOwners/src-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: copyOwnersBySourceName\n      summary: Copy owners from source facility to destination facility. You must be facility manager of both.\n      parameters:\n        - { name: srcFacilityName, schema: { type: string }, in: query, required: true, description: \"source facility name\" }\n        - { name: destFacility, schema: { type: integer }, in: query, required: true, description: \"destination facility id\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/copyOwners/dest-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: copyOwnersByDestinationName\n      summary: Copy owners from source facility to destination facility. You must be facility manager of both.\n      parameters:\n        - { name: srcFacility, schema: { type: integer }, in: query, required: true, description: \"source facility id\" }\n        - { name: destFacilityName, schema: { type: string }, in: query, required: true, description: \"destination facility name\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/copyManagers:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: copyManagers\n      summary: Copy managers from source facility to destination facility. You must be facility manager of both.\n      parameters:\n        - { name: srcFacility, schema: { type: integer }, in: query, required: true, description: \"source facility id\" }\n        - { name: destFacility, schema: { type: integer }, in: query, required: true, description: \"destination facility id\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/copyManagers/src-dest-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: copyManagersBySourceDestinationNames\n      summary: Copy managers from source facility to destination facility. You must be facility manager of both.\n      parameters:\n        - { name: srcFacilityName, schema: { type: string }, in: query, required: true, description: \"source facility name\" }\n        - { name: destFacilityName, schema: { type: string }, in: query, required: true, description: \"destination facility name\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/copyManagers/src-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: copyManagersBySourceName\n      summary: Copy managers from source facility to destination facility. You must be facility manager of both.\n      parameters:\n        - { name: srcFacilityName, schema: { type: string }, in: query, required: true, description: \"source facility name\" }\n        - { name: destFacility, schema: { type: integer }, in: query, required: true, description: \"destination facility id\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/copyManagers/dest-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: copyManagersByDestinationName\n      summary: Copy managers from source facility to destination facility. You must be facility manager of both.\n      parameters:\n        - { name: srcFacility, schema: { type: integer }, in: query, required: true, description: \"source facility id\" }\n        - { name: destFacilityName, schema: { type: string }, in: query, required: true, description: \"destination facility name\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/copyAttributes:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: copyAttributes\n      summary: Copy attributes (settings) from source facility to destination facility. You must be facility manager of both.\n      parameters:\n        - { name: srcFacility, schema: { type: integer }, in: query, required: true, description: \"source facility id\" }\n        - { name: destFacility, schema: { type: integer }, in: query, required: true, description: \"destination facility id\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/copyAttributes/src-dest-names:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: copyAttributesBySourceDestinationNames\n      summary: Copy attributes (settings) from source facility to destination facility. You must be facility manager of both.\n      parameters:\n        - { name: srcFacilityName, schema: { type: string }, in: query, required: true, description: \"source facility name\" }\n        - { name: destFacilityName, schema: { type: string }, in: query, required: true, description: \"destination facility name\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/copyAttributes/src-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: copyAttributesBySourceName\n      summary: Copy attributes (settings) from source facility to destination facility. You must be facility manager of both.\n      parameters:\n        - { name: srcFacilityName, schema: { type: string }, in: query, required: true, description: \"source facility name\" }\n        - { name: destFacility, schema: { type: integer }, in: query, required: true, description: \"destination facility id\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/copyAttributes/dest-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: copyAttributesByDestinationName\n      summary: Copy attributes (settings) from source facility to destination facility. You must be facility manager of both.\n      parameters:\n        - { name: srcFacility, schema: { type: integer }, in: query, required: true, description: \"source facility id\" }\n        - { name: destFacilityName, schema: { type: string }, in: query, required: true, description: \"destination facility name\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAssignedSecurityTeams:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAssignedSecurityTeams\n      summary: Return assigned security teams for specific facility\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfSecurityTeamsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getAssignedSecurityTeams/f-name:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getAssignedSecurityTeamsByFacilityName\n      summary: Return assigned security teams for specific facility\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfSecurityTeamsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/assignSecurityTeam:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: assignSecurityTeam\n      summary: Assign given security team to given facility (means the facility trusts the security team)\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - { name: securityTeam, schema: { type: integer }, in: query, required: true, description: \"SecurityTeam id\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/assignSecurityTeam/f-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: assignSecurityTeamByFacilityName\n      summary: Assign given security team to given facility (means the facility trusts the security team)\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - { name: securityTeam, schema: { type: integer }, in: query, required: true, description: \"SecurityTeam id\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/removeSecurityTeam:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: removeSecurityTeam\n      summary: Remove (Unassign) given security team from given facility\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - { name: securityTeam, schema: { type: integer }, in: query, required: true, description: \"SecurityTeam id\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/removeSecurityTeam/f-name:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: removeSecurityTeamByFacilityName\n      summary: Remove (Unassign) given security team from given facility\n      parameters:\n        - $ref: '#/components/parameters/facilityName'\n        - { name: securityTeam, schema: { type: integer }, in: query, required: true, description: \"SecurityTeam id\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/setBan:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: setFacilityBan\n      summary: Set ban for user on facility.\n      responses:\n        '200':\n          $ref: '#/components/responses/BanOnFacilityResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetBanForUserOnFacility\n              description: \"input to setBanForUserOnFacility\"\n              type: object\n              required:\n                - banOnFacility\n              properties:\n                banOnFacility: { $ref: '#/components/schemas/BanOnFacility' }\n\n  /json/facilitiesManager/getBanById:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getFacilityBanById\n      summary: Get Ban for user on facility by it's id.\n      parameters:\n        - { name: banId, schema: { type: integer }, in: query, required: true, description: \"BanOnFacility id\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/BanOnFacilityResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getBan:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getFacilityBan\n      summary: Get ban by userId and facilityId.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/BanOnFacilityResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getBansForUser:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getBansForUser\n      summary: Get all bans for user on any facility.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfBanOnFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/getBansForFacility:\n    get:\n      tags:\n        - FacilitiesManager\n      operationId: getBansForFacility\n      summary: Get all bans for user on the facility.\n      parameters:\n        - name: facilityId\n          description: \"id of Facility\"\n          schema:\n            type: integer\n          in: query\n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfBanOnFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/facilitiesManager/updateBan:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: updateFacilityBan\n      summary: Update existing ban (description, validation timestamp)\n      responses:\n        '200':\n          $ref: '#/components/responses/BanOnFacilityResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdateBanForFacility\n              description: \"input to updateBanForFacility\"\n              type: object\n              required:\n                - banOnFacility\n              properties:\n                banOnFacility: { $ref: '#/components/schemas/BanOnFacility' }\n\n  /urlinjsonout/facilitiesManager/removeBan/byId:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: removeFacilityBanById\n      summary: Remove specific ban by it's id.\n      parameters:\n        - { name: banId, schema: { type: integer }, in: query, required: true, description: \"BanOnFacility id\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/facilitiesManager/removeBan/byUserIdFacilityId:\n    post:\n      tags:\n        - FacilitiesManager\n      operationId: removeBanByUserIdFacilityId\n      summary: Remove specific ban by userId and facilityId.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #################################################\n  #                                               #\n  # OwnersManager                                 #\n  #  (completely described)                       #\n  #################################################\n\n  /json/ownersManager/createOwner:\n    post:\n      tags:\n        - OwnersManager\n      operationId: createOwner\n      summary: Creates a new owner.\n      responses:\n        '200':\n          $ref: '#/components/responses/OwnerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreateOwner\n              description: \"input to createOwner, no id, numeric ownerType instead of string type\"\n              type: object\n              required:\n                - name\n                - contact\n                - ownerType\n              properties:\n                name: { type: string, description: \"name of contact, e.g. John Doe or NSA\" }\n                contact: { type: string, description: \"email address\" }\n                ownerType:\n                  type: integer\n                  enum: [ 0, 1 ]\n                  description: \"0 - technical, 1 - administrative\"\n\n  /urlinjsonout/ownersManager/deleteOwner:\n    post:\n      tags:\n        - OwnersManager\n      operationId: deleteOwner\n      summary: Deletes Owner specified by id. Returns null.\n      responses:\n        '200':\n          $ref: '#/components/responses/OwnerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      parameters:\n        - $ref: '#/components/parameters/ownerId'\n        - $ref: '#/components/parameters/forceDelete'\n\n  /json/ownersManager/getOwnerById:\n    get:\n      tags:\n        - OwnersManager\n      operationId: getOwnerById\n      summary: Returns Owner by its id.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/OwnerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/ownersManager/getOwnerByName:\n    get:\n      tags:\n        - OwnersManager\n      operationId: getOwnerByName\n      summary: Returns Owner by its name.\n      parameters:\n        - $ref: '#/components/parameters/ownerName'\n      responses:\n        '200':\n          $ref: '#/components/responses/OwnerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/ownersManager/getOwners:\n    get:\n      tags:\n        - OwnersManager\n      operationId: getAllOwners\n      summary: Returns all owners.\n      parameters: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfOwnersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n\n  #################################################\n  #                                               #\n  # GroupsManager                                 #\n  #                                               #\n  #################################################\n\n  /json/groupsManager/getGroupById:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getGroupById\n      summary: Returns a group by id.\n      description: Throws GroupNotExistsException when the group doesn't exist.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/GroupResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getRichGroupByIdWithAttributesByNames:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getRichGroupByIdWithAttributesByNames\n      summary: Returns RichGroup selected by id containing selected attributes\n      description: Throws GroupNotExistsException when the group doesn't exist.\n      parameters:\n        - { name: groupId, description: \"id of Group\", schema: { type: integer }, in: query, required: true }\n        - $ref: '#/components/parameters/attrNamesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/RichGroupResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n\n  /json/groupsManager/getGroupByName:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getGroupByName\n      description: |\n        Returns a group by VO and Group name.\n        IMPORTANT: need to use full name of group (ex. 'toplevel:a:b', not the shortname which is in this example 'b')\n        Throws GroupNotExistsException when the group doesn't exist.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/name'\n      responses:\n        '200':\n          $ref: '#/components/responses/GroupResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getGroupsByIds:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getGroupsByIds\n      summary: Returns list of groups by their ids.\n      parameters:\n        - $ref: '#/components/parameters/ids'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getGroupMembers:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getGroupMembers\n      summary: Returns list of members of a group.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/isGroupMember:\n    get:\n      tags:\n        - GroupsManager\n      operationId: isGroupMember\n      summary: Return true if Member is member of the Group.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/BooleanResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getMemberGroups:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getMemberGroups\n      summary: Returns groups for a member.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getAllMemberGroups:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getAllMemberGroups\n      summary: Returns all groups for a member including group 'members'\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getAllGroups/all:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getAllGroupsFromAllVos\n      summary: Get all groups from all vos. Returned groups are filtered based on the principal rights.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getAllGroups:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getAllGroups\n      summary: Returns all groups in a VO.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getAllRichGroups:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getAllRichGroups\n      summary: Get all groups with their specified attributes. If the attrNames are null or empty, all group attributes are returned.\n      parameters:\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getAllRichGroupsWithAttributesByNames:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getAllRichGroupsWithAttributesByNames\n      summary: Returns full list of all RichGroups containing selected attributes.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getAllRichSubGroupsWithAttributesByNames:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getAllRichSubGroupsWithGroupAttributesByNames\n      summary: Returns all AllRichSubGroups from parent group containing selected attributes (all level subgroups).\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attrNamesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/groupsManager/createGroup/v-n-d:\n    post:\n      tags:\n        - GroupsManager\n      operationId: createGroupWithVoNameDescription\n      description: Creates a new group in the specific VO.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/groupName'\n        - $ref: '#/components/parameters/groupDescription'\n      responses:\n        '200':\n          $ref: '#/components/responses/GroupResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/groupsManager/createGroup/pg-n-d:\n    post:\n      tags:\n        - GroupsManager\n      operationId: createGroupWithParentGroupNameDescription\n      description: Creates a subgroup of a group.\n      parameters:\n        - { name: parentGroup,\n            description: \"Parent Group id\",\n            schema: {\n              type: integer\n            },\n            in: query,\n            required: true\n        }\n        - $ref: '#/components/parameters/groupName'\n        - $ref: '#/components/parameters/groupDescription'\n      responses:\n        '200':\n          $ref: '#/components/responses/GroupResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/groupsManager/deleteGroup:\n    post:\n      tags:\n        - GroupsManager\n      operationId: deleteGroup\n      summary: Deletes group with given id if it contains no members and group is not assigned to any resources. If force param is true, removes group forcefully.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/forceDelete'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/deleteGroups:\n    post:\n      tags:\n        - GroupsManager\n      operationId: deleteGroups\n      summary: Forcefully deletes a list of groups (remove all group members, remove group from resources).\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputDeleteGroups\n              description: \"input to deleteGroup\"\n              type: object\n              required:\n                - groups\n                - forceDelete\n              properties:\n                groups: { type: array, items: {type: integer} }\n                forceDelete: { type: boolean, description: \"boolean for force delete\"}\n\n  /urlinjsonout/groupsManager/moveGroup/dg-mg:\n    post:\n      tags:\n        - GroupsManager\n      operationId: moveGroupWithDestinationGroupMovingGroup\n      summary: Moves \"movingGroup\" (including subGroups) under \"destinationGroup\" as subGroup within same Vo. Indirect group members are also processed during move operation.\n      parameters:\n        - { name: destinationGroup,\n            description: \"id of Group to have 'movingGroup' as subGroup\",\n            schema: {\n              type: integer\n            },\n            in: query,\n            required: false\n        }\n        - { name: movingGroup,\n            description: \"id of Group to be moved under 'destinationGroup'\",\n            schema: {\n              type: integer\n            },\n            in: query,\n            required: true\n        }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/groupsManager/addMember:\n    post:\n      tags:\n        - GroupsManager\n      operationId: addMember\n      summary: Add member to groups. If already a member of a group, the group will be skipped.\n      parameters:\n        - $ref: '#/components/parameters/groupIds'\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/groupsManager/addMembers:\n    post:\n      tags:\n        - GroupsManager\n      operationId: addMembers\n      summary: Adds members to a group. If already a member of the group, the member will be skipped. Non-empty list of members expected, if empty, no member will be added.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/memberIds'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/groupsManager/removeMember:\n    post:\n      tags:\n        - GroupsManager\n      operationId: removeMember\n      summary: Removes member from a groups. If a member is not in the group or is indirect, it is skipped without a warning, but the rest of groups are processed.\n      parameters:\n        - $ref: '#/components/parameters/groupIds'\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/groupsManager/removeMembers:\n    post:\n      tags:\n        - GroupsManager\n      operationId: removeMembers\n      summary: Removes members from a group. Non-empty list of members expected. In case of empty list, no member is removed from the group. If member is not in the group or the membership is indirect, it is skipped without a warning but the rest of the members are processed.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/memberIds'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/groupsManager/createGroupUnion:\n    post:\n      tags:\n        - GroupsManager\n      operationId: createGroupUnion\n      summary: Create union of two groups, where \"operandGroup\" is technically set as subgroup of \"resultGroup\". Members from \"operandGroup\" are added to \"resultGroup\" as INDIRECT members. Union is honored also in all group member changing operations.\n      parameters:\n        - $ref: '#/components/parameters/resultGroupId'\n        - $ref: '#/components/parameters/operandGroupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getGroupUnions:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getGroupUnions\n      summary: Return all operand groups for specified result groups (all INCLUDED groups). If \"reverseDirection\" is TRUE than return all result groups for specified operand group (where group is INCLUDED).\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - { name: reverseDirection,\n            description: \"FALSE (default) return INCLUDED groups / TRUE = return groups where INCLUDED\",\n            schema: {\n              type: boolean\n            },\n            in: query,\n            required: true\n        }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/groupsManager/setGroupsMemberStatus:\n    post:\n      tags:\n        - GroupsManager\n      operationId: setGroupsMemberStatus\n      summary: Set membership status of a member in a group. Please note, that resulting Status after change is calculated from all members sub-groups and groups in relation sourcing this member. If in any of them is VALID, resulting status is still VALID.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/groupId'\n        - name: status\n          description: status (VALID | EXPIRED)\n          schema:\n            type: string\n          in: query\n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/MemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/groupsManager/extendMembershipInGroup:\n    post:\n      tags:\n        - GroupsManager\n      operationId: extendMembershipInGroup\n      summary: Extend member membership in given group using membershipExpirationRules attribute defined in Group.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/canExtendMembershipInGroup:\n    get:\n      tags:\n        - GroupsManager\n      operationId: canExtendMembershipInGroup\n      summary: Returns true if member in given group can extend membership or if no rules were set for the membershipExpiration, otherwise false.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/BooleanResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/groupsManager/removeGroupUnion:\n    post:\n      tags:\n        - GroupsManager\n      operationId: removeGroupUnion\n      summary: Removes union of two groups, when \"operandGroup\" is technically removed from subgroups of \"resultGroup\". Members from \"operandGroup\" are removed from \"resultGroup\" if they were INDIRECT members sourcing from this group only.\n      parameters:\n        - $ref: '#/components/parameters/resultGroupId'\n        - $ref: '#/components/parameters/operandGroupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/groupsManager/forceGroupSynchronization:\n    post:\n      tags:\n        - GroupsManager\n      operationId: forceGroupSynchronization\n      summary: Forces group synchronization.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/groupsManager/forceGroupStructureSynchronization:\n    post:\n      tags:\n        - GroupsManager\n      operationId: forceGroupStructureSynchronization\n      summary: Forces group structure synchronization.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/groupsManager/forceAllSubGroupsSynchronization:\n    post:\n      tags:\n        - GroupsManager\n      operationId: forceAllSubGroupsSynchronization\n      summary: Force synchronization for all subgroups (recursively - whole tree) of the group (useful for group structure).\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/updateGroup:\n    post:\n      tags:\n        - GroupsManager\n      operationId: updateGroup\n      summary: Updates a group.\n      responses:\n        '200':\n          $ref: '#/components/responses/GroupResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdateGroup\n              description: \"input to updateGroup\"\n              type: object\n              required:\n                - group\n              properties:\n                group: { $ref: '#/components/schemas/Group' }\n\n  /json/groupsManager/getGroupMembersCount:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getGroupMembersCount\n      summary: Returns count of group members.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getGroupMembersCountsByVoStatus:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getGroupMembersCountsByVoStatus\n      summary: Returns counts of group members by their status in VO.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/MapStringIntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getGroupMembersCountsByGroupStatus:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getGroupMembersCountsByGroupStatus\n      summary: Returns counts of group members by their group status.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/MapStringIntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getMemberRichGroupsWithAttributesByNames:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getMemberRichGroupsWithAttributesByNames\n      summary: \"Returns full list of member's RichGroups containing selected attributes. 'members' group is not included! Supported are attributes from these namespaces: - group - member-group\"\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getIndirectMembershipPaths:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getIndirectMembershipPaths\n      summary: Returns unique paths of groups as list of lists of groups [CURRENT GROUP -\u003e SUBGROUP -\u003e ... -\u003e MEMBER'S SOURCE GROUP] via which member is indirectly included to the group. Cuts off after first included group.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfListsOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getGroupMemberById:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getGroupMemberById\n      summary: Get member in context of group.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/MemberResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getGroupRichMembersByIds:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getGroupRichMembersByIds\n      summary: Returns list of RichMembers with requested attributes by their member IDs from given group. Skips invalid member IDs (unknown or not members of group). Supports member, member-group (stored in memberAttributes) and user attributes (stored in userAttributes).\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/memberIds'\n        - $ref: '#/components/parameters/attrNames'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getGroupsPage:\n    post:\n      tags:\n        - GroupsManager\n      operationId: getGroupsPage\n      summary: Get page of groups from the given vo.\n      responses:\n        '200':\n          $ref: '#/components/responses/PaginatedRichGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputGetPaginatedGroups\n              description: \"input to getPaginatedGroups\"\n              type: object\n              required:\n                - vo\n                - query\n                - attrNames\n              properties:\n                vo: { type: integer }\n                attrNames: { type: array, items: { type: string } }\n                query: { $ref: '#/components/schemas/GroupsPageQuery' }\n\n  /json/groupsManager/getSubgroupsPage:\n    post:\n      tags:\n        - GroupsManager\n      operationId: getSubgroupsPage\n      summary: Get page of subgroups from the given parent group.\n      responses:\n        '200':\n          $ref: '#/components/responses/PaginatedRichGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputGetPaginatedSubgroups\n              description: \"input to getSubgroupsPage\"\n              type: object\n              required:\n                - group\n                - query\n                - attrNames\n              properties:\n                group: { type: integer }\n                attrNames: { type: array, items: { type: string } }\n                query: { $ref: '#/components/schemas/GroupsPageQuery' }\n\n  /urlinjsonout/groupsManager/allowGroupToHierarchicalVo:\n    post:\n      tags:\n        - GroupsManager\n      operationId: allowGroupToHierarchicalVo\n      summary: Sets flag required for including group to parent vo in a vo hierarchy.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/groupsManager/disallowGroupToHierarchicalVo:\n    post:\n      tags:\n        - GroupsManager\n      operationId: disallowGroupToHierarchicalVo\n      summary: Unsets flag required for including group to parent vo in a vo hierarchy.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/isAllowedGroupToHierarchicalVo:\n    get:\n      tags:\n        - GroupsManager\n      operationId: isAllowedGroupToHierarchicalVo\n      summary: Returns flag representing if the group can be included in the (parent) vo's groups\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/BooleanResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getAllAllowedGroupsToHierarchicalVo/v:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getAllAllowedGroupsToHierarchicalVo\n      summary: Returns all groups which can be included to VO.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/groupsManager/getAllAllowedGroupsToHierarchicalVo/v-v:\n    get:\n      tags:\n        - GroupsManager\n      operationId: getVoAllAllowedGroupsToHierarchicalVo\n      summary: Returns all groups which can be included to VO from specific member VO.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/memberVoId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #################################################\n  #                                               #\n  # ResourceManager                               #\n  #                                               #\n  #################################################\n\n  /json/resourcesManager/getResourceById:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getResourceById\n      summary: Returns a resource by id.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/ResourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getResourcesByIds:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getResourcesByIds\n      summary: Returns list of Resources by their ids.\n      parameters:\n        - $ref: '#/components/parameters/ids'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getEnrichedResourceById:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getEnrichedResourceById\n      summary: Find resource for given id and returns it with given attributes. If attrNames are null or empty, all resource attributes are returned.\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/attrNamesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/EnrichedResourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getResourceByName:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getResourceByName\n      summary: Returns resource by its name, Vo id and Facility id.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/name'\n      responses:\n        '200':\n          $ref: '#/components/responses/ResourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getRichResourceById:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getRichResourceById\n      summary: Returns RichResource by id (also containing facility and VO inside).\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/RichResourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getRichResourcesByIds:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getRichResourcesByIds\n      summary: Returns list of RichResources by their ids.\n      parameters:\n        - $ref: '#/components/parameters/ids'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/createResource:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: createResource\n      summary: Creates a new resource.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/name'\n        - { name: description, schema: { type: string }, in: query, required: false, description: 'optional resource description' }\n      responses:\n        '200':\n          $ref: '#/components/responses/ResourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/copyResource:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: copyResource\n      summary: |\n        Copy \"template\" settings from user's another existing resource and create new resource with this template.\n        The settings are attributes, services, tags (if exists), groups and their members (if the resources are from the same VO and withGroups is true)\n        Template Resource can be from any of user's facilities.\n      responses:\n        '200':\n          $ref: '#/components/responses/ResourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCopyResource\n              description: \"input to copyResource\"\n              type: object\n              required:\n                - templateResource\n                - destinationResource\n                - withGroups\n              properties:\n                templateResource: { $ref: '#/components/schemas/Resource' }\n                destinationResource: { $ref: '#/components/schemas/Resource' }\n                withGroups: { type: boolean, description: 'if copy the resource with group' }\n\n  /json/resourcesManager/updateResource:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: updateResource\n      summary: Updates a resource.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdateResource\n              description: \"input to updateResource\"\n              type: object\n              required:\n                - resource\n              properties:\n                resource: { $ref: '#/components/schemas/Resource' }\n\n  /urlinjsonout/resourcesManager/deleteResource:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: deleteResource\n      summary: Deletes a resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getFacility:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getFacility\n      summary: Get facility which belongs to a specific resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/FacilityResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getVo:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getVo\n      summary: Returns Vo which is tied to a specific resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAllowedMembers:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAllowedMembers\n      summary: Returns all members assigned to the resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAllowedUsers:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAllowedUsersOfResource\n      summary: Returns all users assigned to the resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/assignGroupToResource:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: assignGroupToResource\n      summary: Assigns a group to a resource. Check if attributes for each member from group are valid. Fill members' attributes with missing value. Work in sync/async mode. Provide options for creating inactive or automatic subgroups group-resource assignments.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/async'\n        - $ref: '#/components/parameters/assignInactive'\n        - $ref: '#/components/parameters/autoAssignSubgroups'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/assignGroupsToResource:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: assignGroupsToResource\n      summary: Assigns groups to a resource. Check if attributes for each member from groups are valid. Fill members' attributes with missing values. Work in sync/async mode. Provide options for creating inactive or automatic subgroups group-resource assignments.\n      parameters:\n        - $ref: '#/components/parameters/groupIds'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/async'\n        - $ref: '#/components/parameters/assignInactive'\n        - $ref: '#/components/parameters/autoAssignSubgroups'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/assignGroupToResources:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: assignGroupToResources\n      summary: Assigns a group to resources. Check if attributes for each member from group are valid. Fill members' attributes with missing values. Work in sync/async mode. Provide options for creating inactive or automatic subgroups group-resource assignments.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/resourceIds'\n        - $ref: '#/components/parameters/async'\n        - $ref: '#/components/parameters/assignInactive'\n        - $ref: '#/components/parameters/autoAssignSubgroups'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/removeGroupFromResource:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: removeGroupFromResource\n      summary: Remove a group from a resource. After removing, check attributes and fix them if it is needed.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/removeGroupsFromResource:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: removeGroupsFromResource\n      summary: Remove groups from a resource. After removing, check attributes and fix them if it is needed.\n      parameters:\n        - $ref: '#/components/parameters/groupIds'\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/removeGroupFromResources:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: removeGroupFromResources\n      summary: Remove a group from resource. After removing, check attributes and fix them if it is needed.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/resourceIds'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAssignedGroups:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAssignedGroups\n      summary: List all groups associated with the resource and optionally a member.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - { name: member, required: false, schema: { type: integer }, in: query, description: 'optional member id' }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAssignedResources/g:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAssignedResourcesWithGroup\n      summary: List all resources to which the group is assigned.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAssignedResourcesWithStatus:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAssignedResourcesWithStatus\n      summary: Returns all assigned resources with statuses where member is assigned through the groups.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAssignedResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getResourceAssignments:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getResourceAssignments\n      summary: Lists all of the resource assignments for the given group. Also, returns specified attributes for the resources and resource tags.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attrNamesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAssignedResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getGroupAssignments:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getGroupAssignments\n      summary: Lists all of the assigned groups for the given resource. Also, returns specified attributes for the groups.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/attrNamesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAssignedGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/allowGroupsToResources:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: allowGroupsToResources\n      summary: Assigns given groups to all of the given resources. If async is set to false, check if attributes for each member from groups are valid and fill members' attributes with missing values.\n      parameters:\n        - $ref: '#/components/parameters/groupIds'\n        - $ref: '#/components/parameters/resourceIds'\n        - $ref: '#/components/parameters/async'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/unallowGroupsFromResources:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: unallowGroupsFromResources\n      summary: Unassigns given groups from the given resources.\n      parameters:\n        - $ref: '#/components/parameters/groupIds'\n        - $ref: '#/components/parameters/resourceIds'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/activateGroupResourceAssignment:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: activateGroupResourceAssignment\n      summary: Try to activate the group-resource status. If the async is set to false, the validation is performed\n        synchronously. The assignment will be either ACTIVE, in case of a sucessfull synchronous call, or it will be\n        PROCESSING in case of an asynchronous call. After the async validation, the state can be either ACTIVE or\n        FAILED.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/async'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/deactivateGroupResourceAssignment:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: deactivateGroupResourceAssignment\n      summary: Deactivates the group-resource assignment. The assignment will become INACTIVE and will not be used to\n        allow users from the given group to the resource.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAssignedResources/m:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAssignedResourcesWithMember\n      summary: List all resources associated with a member's group.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAssignedRichResources/s-m:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAssignedRichResourcesWithMemberService\n      summary: Get all rich resources where the service and the member are assigned with facility property filled.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/serviceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAssignedRichResources/m:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAssignedRichResourcesWithMember\n      summary: List all rich resources associated with a member's group.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAssignedRichResources/g:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAssignedRichResourcesWithGroup\n      summary: List all rich resources associated with a group.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAssignedMembers:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAssignedMembers\n      summary: Returns all members assigned to the resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAssignedMembersWithStatus:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAssignedMembersWithStatus\n      summary: Returns members of groups assigned to resource with status of group-resource assignment.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfAssignedMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAssignedRichMembers:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAssignedRichMembers\n      summary: Returns all members assigned to the resource as RichMembers.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/addAdmin/r-u:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: addAdminToUser\n      summary: Adds a Resource admin.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/addAdmin/r-g:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: addAdminToGroup\n      summary: Adds a group administrator to the Resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/authorizedGroup'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/removeAdmin/r-u:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: removeUserAdminResource\n      summary: Removes a Resource admin.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/removeAdmin/r-g:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: removeGroupAdminResource\n      summary: Removes a group administrator of the Resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/authorizedGroup'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAdmins:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAdmins\n      summary: Get list of all resource administrators for supported role and given resource.\n      description: If onlyDirectAdmins is == true, return only direct admins of the group for supported role. Otherwise include users who are VALID members of administrator groups.\n        Supported roles are ResourceAdmin, VOAdmin.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - { name: onlyDirectAdmins, required: true, schema: { type: boolean }, in: query, description: 'boolean if true, get only direct resource administrators (if false, get both direct and indirect)' }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAdminGroups:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAdminGroups\n      summary: Get all Resource group admins.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n\n  /json/resourcesManager/getRichAdmins:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getRichAdmins\n      summary: |\n        Get list of all richUser administrators for the resource and supported role with specific attributes.\n        If some group is administrator of the given group, all VALID members are included in the list.\n        Supported roles: ResourceAdmin, VOAdmin\n        If \"onlyDirectAdmins\" is true, return only direct admins of the resource for supported role with specific attributes.\n        If \"allUserAttributes\" is true, do not specify attributes through list and return them all in objects richUser. Ignoring list of specific attributes.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - name: specificAttributes\n          description: 'list of specified attributes which are needed in object richUser'\n          schema:\n            type: array\n            items:\n              type: string\n          in: query\n          required: true\n        - { name: allUserAttributes, required: true, schema: { type: boolean }, in: query, description: 'if == true, get all possible user attributes and ignore list of specificAttributes (if false, get only specific attributes)' }\n        - { name: onlyDirectAdmins, required: true, schema: { type: boolean }, in: query, description: 'if == true, get only direct resource administrators (if false, get both direct and indirect)' }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getResourcesWhereUserIsAdmin:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getResourcesWhereUserIsAdmin\n      summary: Returns list of Resources for specified VO and Facility, where the user is a direct Administrator or a VALID member of an administrator group.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getResourcesWhereUserIsAdmin/group:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getResourcesWhereGroupIsAdmin\n      summary: Returns list of Resources for specified VO and Facility, where the group is an Administrator.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getResourcesWhereUserIsAdmin/fromVo:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getResourcesFromVoWhereUserIsAdmin\n      summary: Returns list of Resources for specified VO, where the user is an Administrator.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getResourcesWhereUserIsAdmin/all:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAllResourcesWhereUserIsAdmin\n      summary: Returns list of Resources, where the user is an Administrator.\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/assignService:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: assignService\n      summary: Assigns service to resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/serviceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/assignServices:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: assignServices\n      summary: Assigns services to resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/serviceIds'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/assignServicesPackage:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: assignServicesPackage\n      summary: Assign all services from a services package to a resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/servicesPackageId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/removeService:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: removeService\n      summary: Removes a service from a resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/serviceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/removeServices:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: removeServices\n      summary: Removes services from a resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/serviceIds'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/removeServicesPackage:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: removeServicesPackage\n      summary: Remove from resource all services from services package.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/servicesPackageId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getResources:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getResources\n      summary: Get all VO resources.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getRichResources:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getRichResources\n      summary: Get all VO rich resources.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getEnrichedResourcesForVo:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getEnrichedResourcesForVo\n      summary: Find resources for given vo and attributes for given names. If the attrNames are empty or null, return all attributes.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/attrNamesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfEnrichedResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getEnrichedResourcesForFacility:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getEnrichedResourcesForFacility\n      summary: Find resources for given facility and attributes for given names. If the attrNames are empty or null, return all attributes.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/attrNamesOptional'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfEnrichedResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getResourcesCount/vo:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getResourcesCountForVo\n      summary: Returns number of VO resources\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getResourcesCount/all:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getResourcesCountForAll\n      summary: Gets count of all users.\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/deleteAllResources:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: deleteAllResources\n      summary: Deletes all VO resources\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAllowedResources:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAllowedResources\n      summary: Get all resources which have the member access on.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/createResourceTag/resourceTag:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: createResourceTagWithResourceTag\n      summary: Create new resource tag in VO\n      responses:\n        '200':\n          $ref: '#/components/responses/ResourceTagResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreateResourceTagWithResourceTag\n              description: \"input to createResourceTagWithResourceTag\"\n              type: object\n              required:\n                - resourceTag\n                - vo\n              properties:\n                resourceTag: { $ref: '#/components/schemas/ResourceTag' }\n                vo: { type: integer, description: 'vo id' }\n\n  /urlinjsonout/resourcesManager/createResourceTag/tagName:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: createResourceTagWithTagName\n      summary: Create new resource tag defined by tag name in VO\n      parameters:\n        - { name: tagName, required: true, description: \"tagName\", schema: { type: string },  in: query }\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ResourceTagResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/updateResourceTag:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: updateResourceTag\n      summary: Update resource tag name by it's id and VO_ID\n      responses:\n        '200':\n          $ref: '#/components/responses/ResourceTagResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdateResourceTag\n              description: \"input to updateResourceTag\"\n              type: object\n              required:\n                - resourceTag\n              properties:\n                resourceTag: { $ref: '#/components/schemas/ResourceTag' }\n\n  /json/resourcesManager/deleteResourceTag:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: deleteResourceTag\n      summary: Delete resource tag by it's id and VO_ID\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputDeleteResourceTag\n              description: \"input to deleteResourceTag\"\n              type: object\n              required:\n                - resourceTag\n              properties:\n                resourceTag: { $ref: '#/components/schemas/ResourceTag' }\n\n  /urlinjsonout/resourcesManager/deleteAllResourcesTagsForVo:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: deleteAllResourcesTagsForVo\n      summary: Delete all resources tags of VO\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/assignResourceTagToResource:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: assignResourceTagToResource\n      summary: Assigns ResourceRag to resource. The ResourceTag must contain its id, voId and tagName.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputAssignResourceTagToResource\n              description: \"input to assignResourceTagToResource\"\n              type: object\n              required:\n                - resource\n                - resourceTag\n              properties:\n                resource: { type: integer, description: 'resource id' }\n                resourceTag: { $ref: '#/components/schemas/ResourceTag' }\n\n  /json/resourcesManager/removeResourceTagFromResource:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: removeResourceTagFromResource\n      summary: Removes ResourceRag from a resource. The ResourceTag must contain its id, voId and tagName.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputRemoveResourceTagFromResource\n              description: \"input to removeResourceTagFromResource\"\n              type: object\n              required:\n                - resource\n                - resourceTag\n              properties:\n                resource: { type: integer, description: 'resource id' }\n                resourceTag: { $ref: '#/components/schemas/ResourceTag' }\n\n  /urlinjsonout/resourcesManager/removeAllResourcesTagFromResource:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: removeAllResourceTagsFromResource\n      summary: Removes all resources tags from a resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAllResourcesByResourceTag:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: getAllResourcesByResourceTag\n      summary: Get all resources with the specific tag assigned.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputGetAllResourcesByResourceTag\n              description: \"input to getAllResourcesByResourceTag\"\n              type: object\n              required:\n                - resourceTag\n              properties:\n                resource: { type: integer, description: 'resource id' }\n                resourceTag: { $ref: '#/components/schemas/ResourceTag' }\n\n  /json/resourcesManager/getAllResourcesTagsForVo:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAllResourcesTagsForVo\n      summary: Gets all resource tags of VO.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourceTagsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAllResourcesTagsForResource:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAllResourcesTagsForResource\n      summary: Gets all resource tags of Resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourceTagsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getAssignedServices:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getAssignedServicesToResource\n      summary: List all services associated with the resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfServicesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/setBan:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: setResourceBan\n      summary: Set ban for member on resource.\n      responses:\n        '200':\n          $ref: '#/components/responses/BanOnResourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetBan\n              description: \"input to setBan\"\n              type: object\n              required:\n                - banOnResource\n              properties:\n                banOnResource: { $ref: '#/components/schemas/BanOnResource' }\n\n  /json/resourcesManager/getBanById:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getResourceBanById\n      summary: Get Ban for member on resource by it's id.\n      parameters:\n        - { name: banId, required: true, description: \"BanOnResource id\", schema: { type: integer },  in: query }\n      responses:\n        '200':\n          $ref: '#/components/responses/BanOnResourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getBan:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getResourceBan\n      summary: Get ban by memberId and resource id.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/BanOnResourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getBansForMember:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getBansForMember\n      summary: Get all bans for member on any resource.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfBanOnResourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/getBansForResource:\n    get:\n      tags:\n        - ResourcesManager\n      operationId: getBansForResource\n      summary: Get all bans for members on the resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfBanOnResourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/resourcesManager/updateBan:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: updateResourceBan\n      summary: Update existing ban (description, validation timestamp)\n      responses:\n        '200':\n          $ref: '#/components/responses/BanOnResourceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdateBan\n              description: \"input to updateBan\"\n              type: object\n              required:\n                - banOnResource\n              properties:\n                banOnResource: { $ref: '#/components/schemas/BanOnResource' }\n\n  /urlinjsonout/resourcesManager/removeBan/id:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: removeResourceBanById\n      summary: Remove specific ban by it's id.\n      parameters:\n        - { name: banId, required: true, description: \"BanOnResource id\", schema: { type: integer },  in: query }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/removeBan/member-resource-id:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: removeBanByMemberAndResource\n      summary: Remove specific ban by memberId and resourceId.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/addResourceSelfServiceUser:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: addResourceSelfServiceUser\n      summary: Sets ResourceSelfService role to given user for given resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/addResourceSelfServiceGroup:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: addResourceSelfServiceGroup\n      summary: Sets ResourceSelfService role to given group for given resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/removeResourceSelfServiceUser:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: removeResourceSelfServiceUser\n      summary: Unset ResourceSelfService role to given user for given resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/resourcesManager/removeResourceSelfServiceGroup:\n    post:\n      tags:\n        - ResourcesManager\n      operationId: removeResourceSelfServiceGroup\n      summary: Unset ResourceSelfService role to given group for given resource.\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n\n  #################################################\n  #                                               #\n  # VosManager                                    #\n  #                                               #\n  #################################################\n\n  /json/vosManager/getVos:\n    get:\n      tags:\n        - VosManager\n      operationId: getMyVos\n      summary: Return list of all VOs the caller is associated with.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfVosResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getEnrichedVos:\n    get:\n      tags:\n        - VosManager\n      operationId: getMyEnrichedVos\n      summary: Return list of all EnrichedVos the caller is associated with.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfEnrichedVosResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getAllVos:\n    get:\n      tags:\n        - VosManager\n      operationId: getAllVos\n      summary: Return list of all VOs in Perun.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfVosResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/vosManager/deleteVo:\n    post:\n      tags:\n        - VosManager\n      operationId: deleteVo\n      summary: Deletes a VO. If force == true then VO is deleted including members, groups and resources.\n        If force == false or null only empty VO is deleted or exception is thrown.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/forceDelete'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/createVo/withVo:\n    post:\n      tags:\n        - VosManager\n      operationId: createVoWithVo\n      summary: |\n        Creates new VO. Caller is automatically set as VO manager.\n        Vo Object must contain:\n        name - lenght can be no more than 128 characters\n        shortName - can contain only a-z, A-Z, 0-9, '.', '-', '_' and cannot be longer than 32 characters.\n        Other parameters are ignored.\n        @exampleParam vo { \"name\" : \"My testing VO\" , \"shortName\" : \"test_vo\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreateVoWithVo\n              description: \"input to createVoWithVo\"\n              type: object\n              required:\n                - vo\n              properties:\n                vo: { $ref: '#/components/schemas/Vo' }\n\n  /urlinjsonout/vosManager/createVo/withName:\n    post:\n      tags:\n        - VosManager\n      operationId: createVoWithName\n      summary: Creates new VO. Caller is automatically set as VO manager.\n      parameters:\n        - { name: name, description: \"name - length can be no more than 128 characters\", schema: { type: string },  in: query, required: true }\n        - { name: shortName, description: \"shortName - can contain only a-z, A-Z, 0-9, '.', '-', '_' and cannot be longer than 32 characters\", schema: { type: string },  in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/updateVo:\n    post:\n      tags:\n        - VosManager\n      operationId: updateVo\n      summary: Updates a VO. Only name parameter is updated. VO to updated is determined by id parameter of passed VO object.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdateVo\n              description: \"input to updateVo\"\n              type: object\n              required:\n                - vo\n              properties:\n                vo: { $ref: '#/components/schemas/Vo' }\n\n  /json/vosManager/getVoByShortName:\n    get:\n      tags:\n        - VosManager\n      operationId: getVoByShortName\n      summary: Returns a VO by its short name.\n      parameters:\n        - { name: shortName, required: true, description: \"short name of Vo\", schema: { type: string },  in: query }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getVoById:\n    get:\n      tags:\n        - VosManager\n      operationId: getVoById\n      summary: Returns a virtual organization by id.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getEnrichedVoById:\n    get:\n      tags:\n        - VosManager\n      operationId: getEnrichedVoById\n      summary: Returns an enriched virtual organization by id.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/EnrichedVoResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getVosByIds:\n    get:\n      tags:\n        - VosManager\n      operationId: getVosByIds\n      summary: Return list of VOs by their ids.\n      parameters:\n        - $ref: '#/components/parameters/ids'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfVosResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/findCandidates:\n    get:\n      tags:\n        - VosManager\n      operationId: findCandidates\n      summary: |\n        Find candidates for VO. Candidates can be used to create new members. Candidates are searched\n        in VOs external sources (if available). Candidates, which are already members of VO are never\n        returned even if they match searchString. You can also specify maximum number of results.\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/searchString'\n        - { name: maxNumOfResults, schema: { type: integer }, in: query, required: false, description: 'Number of maximum results' }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfCandidatesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/findCandidates/forGroup:\n    get:\n      tags:\n        - VosManager\n      operationId: findCandidatesForGroup\n      summary: |\n        Find candidates for Group. Candidates can be used to create new VO and Group members. Candidates are searched\n        in Groups external sources (if available). Candidates, which are already members of VO are never\n        returned even if they match searchString.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/searchString'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfCandidatesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getCompleteCandidates/forVo:\n    get:\n      tags:\n        - VosManager\n      operationId: getCompleteCandidatesForVo\n      summary: |\n        Find MemberCandidates for VO. MemberCandidates can be used to create new members. They are made of Candidate,\n        RichUser and Member objects. Candidates are searched in VO's external sources (if available). RichUsers are\n        searched in given VO and are associated with appropriate candidate and member. RichUsers for MemberCandidates\n        may also be searched in the whole Perun.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/attrNames'\n        - $ref: '#/components/parameters/searchString'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfMemberCandidatesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getCompleteCandidates/forGroup:\n    get:\n      tags:\n        - VosManager\n      operationId: getCompleteCandidatesForGroup\n      summary: |\n        Find MemberCandidates for GROUP. MemberCandidates can be used to create new members. They are made of Candidate,\n        RichUser and Member objects. Candidates are searched in VO's or GROUP's (depends on privileges) external sources\n        (if available). RichUsers are searched in given VO and are associated with appropriate candidate and member.\n        RichUsers for appropriate Candidate are also searched in the whole Perun.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/attrNames'\n        - $ref: '#/components/parameters/searchString'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfMemberCandidatesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getVosCount:\n    get:\n      tags:\n        - VosManager\n      operationId: getVosCount\n      summary: Gets count of all vos.\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getVoMembersCountsByStatus:\n    get:\n      tags:\n        - VosManager\n      operationId: getVoMembersCountsByStatus\n      summary: Returns number of vo members by their status.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/MapStringIntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/vosManager/addAdmin/user:\n    post:\n      tags:\n        - VosManager\n      operationId: addVoAdminUser\n      summary: Adds a user as a Vo admin.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/vosManager/addAdmin/group:\n    post:\n      tags:\n        - VosManager\n      operationId: addVoAdminGroup\n      summary: Adds a group as a Vo admin.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/authorizedGroup'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/vosManager/addSponsorRole/user:\n    post:\n      tags:\n        - VosManager\n      operationId: addSponsorRoleToUser\n      summary: Add user as a sponsor for guest members of VO.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/vosManager/addSponsorRole/group:\n    post:\n      tags:\n        - VosManager\n      operationId: addSponsorRoleToGroup\n      summary: Add group as a sponsor of guest members of VO. All members of group will become sponsors.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/authorizedGroup'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/vosManager/removeAdmin/user:\n    post:\n      tags:\n        - VosManager\n      operationId: removeVoAdminUser\n      summary: Removes a user as a Vo admin.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/vosManager/removeAdmin/group:\n    post:\n      tags:\n        - VosManager\n      operationId: removeVoAdminGroup\n      summary: Removes a group as a Vo admin.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/authorizedGroup'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/vosManager/removeSponsorRole/user:\n    post:\n      tags:\n        - VosManager\n      operationId: removeSponsorRoleFromUser\n      summary: Removes user as a sponsor. His or her sponsored members will be set as expired if the user was their last sponsor.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/vosManager/removeSponsorRole/group:\n    post:\n      tags:\n        - VosManager\n      operationId: removeSponsorRoleFromGroup\n      summary: Removes group as a sponsor. All group members will cease to be sponsors, and their sponsored members will be set as expired if the group member was their last sponsor.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/authorizedGroup'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getAdmins:\n    get:\n      tags:\n        - VosManager\n      operationId: getVoAdminUsers\n      description: |\n        Get list of all vo administrators for supported role and specific vo.\n        If onlyDirectAdmins is true, return only direct admins of the vo for supported role.\n        Otherwise return direct admins and users who are VALID members of administrator groups\n        Supported roles: VOOBSERVER, TOPGROUPCREATOR, VOADMIN\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - { name: role, schema: { $ref: '#/components/schemas/VoAdminRoles' }, in: query, required: true, description: 'supported role name' }\n        - { name: onlyDirectAdmins, schema: { type: boolean }, in: query, required: true, description: \"get only direct administrators (if false, get both direct and indirect)\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getAdminGroups:\n    get:\n      tags:\n        - VosManager\n      operationId: getVoAdminGroups\n      description: |\n        Get list of administrator groups of the given VO.\n        Supported roles: VOOBSERVER, TOPGROUPCREATOR, VOADMIN\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - { name: role, schema: { $ref: '#/components/schemas/VoAdminRoles' }, in: query, required: true, description: 'supported role name' }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getRichAdmins:\n    get:\n      tags:\n        - VosManager\n      operationId: getRichAdminsForVo\n      description: |\n        Get list of all richUser administrators for the vo and supported role with specific attributes.\n        If some group is administrator of the given group, all VALID members are included in the list.\n        Supported roles: VOOBSERVER, TOPGROUPCREATOR, VOADMIN\n        If \"onlyDirectAdmins\" is == true, return only direct admins of the vo for supported role with specific attributes.\n        If \"allUserAttributes\" is == true, do not specify attributes through list and return them all in objects richUser. Ignoring list of specific attributes.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - { name: role, schema: { $ref: '#/components/schemas/VoAdminRoles' }, in: query, required: true, description: 'role name' }\n        - $ref: '#/components/parameters/specificAttributes'\n        - { name: allUserAttributes, schema: { type: boolean }, in: query, required: true, description: 'if == true, get all possible user attributes and ignore list of specificAttributes (if false, get only specific attributes)' }\n        - { name: onlyDirectAdmins, schema: { type: boolean }, in: query, required: true, description: 'if == true, get only direct vo administrators (if false, get both direct and indirect)' }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/setBan:\n    post:\n      tags:\n        - VosManager\n      operationId: setVoBan\n      description: |\n        Set ban for member on his vo. The member id is required,\n        validityTo and description are optional. voId is ignored.\n      responses:\n        '200':\n          $ref: '#/components/responses/BanOnVoResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetVoBan\n              description: \"input to set vo ban\"\n              type: object\n              required:\n                - banOnVo\n              properties:\n                banOnVo: { $ref: '#/components/schemas/BanOnVo' }\n\n  /urlinjsonout/vosManager/removeBan:\n    post:\n      tags:\n        - VosManager\n      operationId: removeVoBan\n      summary: Remove vo ban with given id.\n      parameters:\n        - $ref: '#/components/parameters/banId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/vosManager/removeBanForMember:\n    post:\n      tags:\n        - VosManager\n      operationId: removeVoBanForMember\n      summary: Remove vo ban for member with given id.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getBanById:\n    get:\n      tags:\n        - VosManager\n      operationId: getVoBanById\n      summary: Get vo ban with given id.\n      parameters:\n        - $ref: '#/components/parameters/banId'\n      responses:\n        '200':\n          $ref: '#/components/responses/BanOnVoResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getBanForMember:\n    get:\n      tags:\n        - VosManager\n      operationId: getVoBanForMember\n      summary: Get ban for given member, or null if he is not banned.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n      responses:\n        '200':\n          $ref: '#/components/responses/BanOnVoResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getBansForVo:\n    get:\n      tags:\n        - VosManager\n      operationId: getVoBansForVo\n      summary: Get list of all bans for vo with given id.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfBanOnVoResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/vosManager/addMemberVo:\n    post:\n      tags:\n        - VosManager\n      operationId: addMemberVo\n      summary: Add member vo to vo.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/memberVoId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/vosManager/removeMemberVo:\n    post:\n      tags:\n        - VosManager\n      operationId: removeMemberVo\n      summary: Remove member vo from vo.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/memberVoId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getMemberVos:\n    get:\n      tags:\n        - VosManager\n      operationId: getMemberVos\n      summary: Get list of all members organizations of a vo.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfVosResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/vosManager/getParentVos:\n    get:\n      tags:\n        - VosManager\n      operationId: getParentVos\n      summary: Get list of all parent organizations of a vo.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfVosResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #################################################\n  #                                               #\n  # RegistrarManager                              #\n  #                                               #\n  #################################################\n\n  /json/registrarManager/consolidateIdentityUsingToken:\n    get:\n      tags:\n        - RegistrarManager\n      operationId: consolidateIdentityUsingToken\n      summary: Joins current user identity with the one previously provided and referenced by the token.\n      parameters:\n        - { name: token, schema: { type: string }, in: query, required: true, description: \"token to be used for joining identities\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUserExtSourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/sendInvitation:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: sendInvitation\n      summary: Sends invitation email to user which is not member of VO\n      parameters:\n        - { name: voId, schema: { type: number }, in: query, description: \"id of VO to send invitation into\" }\n        - { name: name, schema: { type: string }, in: query, description: \"name of person used in invitation email (optional)\" }\n        - { name: email, schema: { type: string }, in: query, required: true, description: \"email address to send invitation to\" }\n        - { name: language, schema: { type: string }, in: query, required: true, description: \"preferred language to use\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/sendInvitation/g:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: sendInvitationForGroup\n      summary: Sends invitation email to user which is not member of VO and Group\n      description: |\n        Invitation link targets VO application form fist, after submission, Group application form is displayed.\n      parameters:\n        - { name: voId, schema: { type: number }, in: query, description: \"id of VO to send invitation into\" }\n        - { name: groupId, schema: { type: number }, in: query, description: \"id of Group to send invitation into\" }\n        - { name: name, schema: { type: string }, in: query, description: \"name of person used in invitation email (optional)\" }\n        - { name: email, schema: { type: string }, in: query, required: true, description: \"email address to send invitation to\" }\n        - { name: language, schema: { type: string }, in: query, required: true, description: \"preferred language to use\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/sendInvitation/u:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: sendInvitationToExistingUser\n      summary: Sends invitation email to user which is not member of VO\n      parameters:\n        - { name: userId, schema: { type: number }, in: query, description: \"id of user to send invitation to\" }\n        - { name: voId, schema: { type: number }, in: query, description: \"id of VO to send invitation into\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/sendInvitation/u-g:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: sendInvitationGroupToExistingUser\n      summary: Sends invitation email to user which is not member of Group\n      parameters:\n        - { name: userId, schema: { type: number }, in: query, description: \"id of user to send invitation to\" }\n        - { name: voId, schema: { type: number }, in: query, description: \"id of VO to send invitation into\" }\n        - { name: groupId, schema: { type: number }, in: query, description: \"id of Group to send invitation into\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/getApplicationsForVo:\n    get:\n      tags:\n        - RegistrarManager\n      operationId: getApplicationsForVo\n      summary: Gets all applications for a given VO.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - { name: \"state[]\", schema: { type: array, items: { type: string } }, in: query, description: \"list of states: NEW, VERIFIED, APPROVED, REJECTED\" }\n        - { name: \"dateFrom\", schema: { type: string, format: date }, in: query, required: false, description: \"return applications with the same date or newer than this date\" }\n        - { name: \"dateTo\", schema: { type: string, format: date }, in: query, required: false, description: \"return applications with the same date or older than this date\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfApplicationsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/getApplicationsPage:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: getApplicationsPage\n      summary: Get page of applications from the given vo, based on the query attributes.\n      responses:\n        '200':\n          $ref: '#/components/responses/PaginatedRichApplicationsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputGetPaginatedApplications\n              description: \"input to getPaginatedApplications\"\n              type: object\n              required:\n                - vo\n                - query\n              properties:\n                vo: { type: integer }\n                query: { $ref: '#/components/schemas/ApplicationsPageQuery' }\n\n  /json/registrarManager/getApplicationsForGroup:\n    get:\n      tags:\n        - RegistrarManager\n      operationId: getApplicationsForGroup\n      summary: Gets all applications for a given Group.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - { name: \"state[]\", schema: { type: array, items: { type: string } }, in: query, description: \"list of states: NEW, VERIFIED, APPROVED, REJECTED\" }\n        - { name: \"dateFrom\", schema: { type: string, format: date }, in: query, required: false, description: \"return with the same date or applications newer than this date\" }\n        - { name: \"dateTo\", schema: { type: string, format: date }, in: query, required: false, description: \"return applications with the same date or older than this date\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfApplicationsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/getApplicationsForMember:\n    get:\n      tags:\n        - RegistrarManager\n      operationId: getApplicationsForMember\n      summary: Gets all aplications for a given Member.\n      parameters:\n        - $ref: '#/components/parameters/memberId'\n        - $ref: '#/components/parameters/optionalGroupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfApplicationsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/getApplicationById:\n    get:\n      tags:\n        - RegistrarManager\n      operationId: getApplicationById\n      summary: Returns application object by its id.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/ApplicationResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/getApplicationDataById:\n    get:\n      tags:\n        - RegistrarManager\n      operationId: getApplicationDataById\n      summary: Returns data submitted by user in given application (by id).\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfApplicationFormItemDataResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/verifyApplication:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: verifyApplication\n      summary: Forcefully marks application as verified (only when application was in NEW state).\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/ApplicationResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/approveApplication:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: approveApplication\n      summary: Manually approves an application.\n      description: |\n        Expected to be called as a result of direct VO administrator action in the web UI.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/ApplicationResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/rejectApplication:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: rejectApplication\n      summary: Manually rejects an application.\n      description: |\n        Expected to be called as a result of direct VO administrator action in the web UI.\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - { name: reason, schema: { type: string }, in: query, description: \"description of reason\", required: false }\n      responses:\n        '200':\n          $ref: '#/components/responses/ApplicationResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/deleteApplication:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: deleteApplication\n      summary: Deletes an application.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/sendMessage:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: sendMessage\n      summary: Re-send mail notification for existing application.\n      description: |\n        Message of specified type is sent only, when application is in expected state related to the notification.\n        Note, that some data related to processing application are not available (e.g. list of exceptions during approval), since this method doesn't perform any action with Application itself.\n        Perun admin can send any notification except USER_INVITE type, see #sendInvitation() for this.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSendMessage\n              description: \"input to sendMessage\"\n              type: object\n              required:\n                - mailType\n                - appId\n              properties:\n                mailType: { $ref: '#/components/schemas/MailType' }\n                appId: { type: integer, description: \"application id\" }\n                reason: { type: string, description: \"you can specify reason for case: mailType == APP_REJECTED_USER\" }\n\n  /json/registrarManager/getApplicationForm/vo:\n    get:\n      tags:\n        - RegistrarManager\n      operationId: getVoApplicationForm\n      summary: Gets an application form for a given VO.\n      description: |\n        There is exactly one form for membership per VO, one form is used for both initial registration and annual account expansion,\n        just the form items are marked whether the should be present in one, the other, or both types of application.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ApplicationFormResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/getApplicationForm/group:\n    get:\n      tags:\n        - RegistrarManager\n      operationId: getGroupApplicationForm\n      summary: Gets an application form for a given Group.\n      description: |\n        There is exactly one form for membership per Group, one form is used for both initial registration and annual account expansion,\n        just the form items are marked whether the should be present in one, the other, or both types of application.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ApplicationFormResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/getFormItems/vo:\n    get:\n      tags:\n        - RegistrarManager\n      operationId: getFormItemsForVo\n      summary: Gets all items in VO application form.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfApplicationFormItemsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/getFormItems/vo-type:\n    get:\n      tags:\n        - RegistrarManager\n      operationId: getFormItemsForVoWithType\n      summary: Gets items of specified type in VO application form, for initital registration or extension of account.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - { name: type, schema: { type: string }, in: query, description: \"application type: INITIAL or EXTENSION\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfApplicationFormItemsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/getFormItems/group:\n    get:\n      tags:\n        - RegistrarManager\n      operationId: getFormItemsForGroup\n      summary: Gets all items in Group application form.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfApplicationFormItemsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/getFormItems/group-type:\n    get:\n      tags:\n        - RegistrarManager\n      operationId: getFormItemsForGroupWithType\n      summary: Gets items of specified type in Group application form, for initital registration or extension of account.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - { name: type, schema: { type: string }, in: query, description: \"application type: INITIAL, EXTENSION or EMBEDDED\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfApplicationFormItemsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/updateFormItems/vo:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: updateFormItemsForVo\n      summary: Updates form items sent in list.\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdateFormItemsForVo\n              description: \"input to updateFormItemsForVo\"\n              type: object\n              properties:\n                vo: { type: integer, description: \"vo id\" }\n                items:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ApplicationFormItem'\n\n  /json/registrarManager/updateFormItems/group:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: updateFormItemsForGroup\n      summary: Updates form items sent in list.\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdateFormItemsForGroup\n              description: \"input to updateFormItemsForGroup\"\n              type: object\n              properties:\n                group: { type: integer, description: \"group id\" }\n                items:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ApplicationFormItem'\n\n  /json/registrarManager/updateForm:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: updateForm\n      summary: Updates the form attributes, not the form items.\n      responses:\n        '200':\n          $ref: '#/components/responses/ApplicationFormResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdateForm\n              description: \"input to updateForm\"\n              type: object\n              properties:\n                form: { $ref: '#/components/schemas/ApplicationForm' }\n\n  /urlinjsonout/registrarManager/copyForm/voToVo:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: copyFormFromVoToVo\n      summary: Copy all form items from selected VO into another.\n      parameters:\n        - { name: fromVo, schema: { type: integer }, in: query, description: \"source VO\" }\n        - { name: toVo, schema: { type: integer }, in: query, description: \"destination VO\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/copyForm/groupToVo:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: copyFormFromGroupToVo\n      summary: Copy all form items from selected Group into VO.\n      parameters:\n        - { name: fromGroup, schema: { type: integer }, in: query, description: \"source group\" }\n        - { name: toVo, schema: { type: integer }, in: query, description: \"destination VO\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/copyForm/voToGroup:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: copyFormFromVoToGroup\n      summary: Copy all form items from selected VO into Group.\n      parameters:\n        - { name: fromVo, schema: { type: integer }, in: query, description: \"source VO\" }\n        - { name: toGroup, schema: { type: integer }, in: query, description: \"destination group\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/copyForm/groupToGroup:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: copyFormFromGroupToGroup\n      summary: Copy all form items from selected Group into another.\n      parameters:\n        - { name: fromGroup, schema: { type: integer }, in: query, description: \"source group\" }\n        - { name: toGroup, schema: { type: integer }, in: query, description: \"destination group\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/getApplicationMails/v:\n    get:\n      tags:\n        - RegistrarManager\n      operationId: getApplicationMailsForVo\n      summary: Returns all mail notifications related to specific app form.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfApplicationMailsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/getApplicationMails/g:\n    get:\n      tags:\n        - RegistrarManager\n      operationId: getApplicationMailsForGroup\n      summary: Returns all mail notifications related to specific app form.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfApplicationMailsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/setSendingEnabled:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: setSendingEnabled\n      summary: Enable or disable sending for list of mail definitions.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSetSendingEnabled\n              description: \"input to setSendingEnabled\"\n              type: object\n              required:\n                - mails\n                - enabled\n              properties:\n                mails:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ApplicationMail'\n                enabled: { type: boolean }\n\n  /urlinjsonout/registrarManager/copyMails/voToVo:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: copyMailsFromVoToVo\n      summary: Copy all e-mail notifications from selected VO into another.\n      parameters:\n        - { name: fromVo, schema: { type: integer }, in: query, description: \"source VO\" }\n        - { name: toVo, schema: { type: integer }, in: query, description: \"destination VO\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/copyMails/groupToVo:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: copyMailsFromGroupToVo\n      summary: Copy all e-mail notifications from selected Group into VO.\n      parameters:\n        - { name: fromGroup, schema: { type: integer }, in: query, description: \"source group\" }\n        - { name: toVo, schema: { type: integer }, in: query, description: \"destination VO\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/copyMails/voToGroup:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: copyMailsFromVoToGroup\n      summary: Copy all e-mail notifications from selected VO into Group.\n      parameters:\n        - { name: fromVo, schema: { type: integer }, in: query, description: \"source VO\" }\n        - { name: toGroup, schema: { type: integer }, in: query, description: \"destination group\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/copyMails/groupToGroup:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: copyMailsFromGroupToGroup\n      summary: Copy all e-mail notifications from selected Group into another.\n      parameters:\n        - { name: fromGroup, schema: { type: integer }, in: query, description: \"source group\" }\n        - { name: toGroup, schema: { type: integer }, in: query, description: \"destination group\" }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/deleteApplicationMail/v:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: deleteApplicationMailForVo\n      summary: Deletes an e-mail notification from DB based on id property.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/deleteApplicationMail/g:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: deleteApplicationMailForGroup\n      summary: Deletes an e-mail notification from DB based on id property.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/updateApplicationMail:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: updateApplicationMail\n      summary: Updates an e-mail notification.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdateApplicationMail\n              description: \"input to updateApplicationMail\"\n              type: object\n              required:\n                - mail\n              properties:\n                mail: { $ref: '#/components/schemas/ApplicationMail' }\n\n  /json/registrarManager/addApplicationMail/v:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: addApplicationMailForVo\n      summary: Add new mail notification.\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputAddApplicationMailForVo\n              description: \"input to addApplicationMailForVo\"\n              type: object\n              required:\n                - vo\n                - mail\n              properties:\n                vo: { type: integer }\n                mail: { $ref: '#/components/schemas/ApplicationMail' }\n\n  /json/registrarManager/addApplicationMail/g:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: addApplicationMailForGroup\n      summary: Add new mail notification.\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputAddApplicationMailForGroup\n              description: \"input to addApplicationMailForGroup\"\n              type: object\n              required:\n                - group\n                - mail\n              properties:\n                group: { type: integer }\n                mail: { $ref: '#/components/schemas/ApplicationMail' }\n\n  /urlinjsonout/registrarManager/createApplicationForm/vo:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: createApplicationFormInVo\n      summary: Create application form for a VO.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/createApplicationForm/group:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: createApplicationFormInGroup\n      summary: Create application form for a group.\n      parameters:\n        - $ref: '#/components/parameters/groupId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/checkForSimilarUsers/authInfo:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: checkForSimilarUsersWithAuthInfo\n      summary: Check for similar users by name and email in session (authz) information\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfIdentityResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/getConsolidatorToken:\n    get:\n      tags:\n        - RegistrarManager\n      operationId: getConsolidatorToken\n      summary: Get time-limited token proving user identity in external source (for now 3 minutes).\n      description: |\n        It can be used to join user identity with another by calling consolidateIdentityUsingToken() method and passing the token.\n        Please note, that different authz (identity) must be used to perform both calls.\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/updateFormItemData:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: updateFormItemData\n      summary: Update application form item data value, which was originally submitted by the User.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputFormItemData\n              description: \"input to updateFormItemData\"\n              type: object\n              required:\n                - appId\n                - data\n              properties:\n                appId: { type: integer, description: \"application id\" }\n                data: { $ref: '#/components/schemas/ApplicationFormItemData' }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/updateFormItemsData:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: updateFormItemsData\n      summary: Update application form items data, which was originally submitted by the User.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputFormItemsData\n              description: \"input to updateFormItemsData\"\n              type: object\n              required:\n                - appId\n                - data\n              properties:\n                appId: { type: integer, description: \"application id\" }\n                data: { type: array, items: { $ref: '#/components/schemas/ApplicationFormItemData' } }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/registrarManager/submitApplication:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: submitApplication\n      summary: Creates a new application and if succeeds, trigger validation and approval.\n        The method triggers approval for VOs with auto-approved applications.\n      responses:\n        '200':\n          $ref: '#/components/responses/ApplicationResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputSubmitApplication\n              description: \"input to submitApplication\"\n              type: object\n              required:\n                - app\n                - data\n              properties:\n                app: { $ref: '#/components/schemas/Application' }\n                data: { type: array, items: { $ref: '#/components/schemas/ApplicationFormItemData' } }\n\n  /json/registrarManager/getGroupsToAutoRegistration:\n    get:\n      tags:\n        - RegistrarManager\n      operationId: getGroupsToAutoRegistration\n      summary: Returns all groups which can be registered into during vo registration.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfGroupsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/deleteGroupsFromAutoRegistration:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: deleteGroupsFromAutoRegistration\n      summary: Deletes groups from a list of groups which can be registered into during vo registration.\n      parameters:\n        - $ref: '#/components/parameters/groupIds'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/registrarManager/addGroupsToAutoRegistration:\n    post:\n      tags:\n        - RegistrarManager\n      operationId: addGroupsToAutoRegistration\n      summary: Adds groups to a list of groups which can be registered into during vo registration.\n      parameters:\n        - $ref: '#/components/parameters/groupIds'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #################################################\n  #                                               #\n  # ServicesManager                               #\n  #                                               #\n  #################################################\n\n  /urlinjsonout/servicesManager/blockServiceOnFacility:\n    post:\n      tags:\n        - ServicesManager\n      operationId: blockServiceOnFacility\n      summary: Bans service on a facility.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/blockServiceOnDestination/s-d:\n    post:\n      tags:\n        - ServicesManager\n      operationId: blockServiceOnDestination\n      summary: Bans Service on a destination.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/destinationId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/blockServiceOnDestination/s-dname-dtype:\n    post:\n      tags:\n        - ServicesManager\n      operationId: blockServiceOnDestinationWithNameAndType\n      summary: Bans Service on a destination.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/destinationName'\n        - $ref: '#/components/parameters/destinationType'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/blockAllServicesOnFacility:\n    post:\n      tags:\n        - ServicesManager\n      operationId: blockAllServicesOnFacility\n      summary: Block all services currently assigned on this facility.\n        Newly assigned services are still allowed for propagation.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/blockAllServicesOnDestination/d:\n    post:\n      tags:\n        - ServicesManager\n      operationId: blockAllServicesOnDestinationById\n      summary: Block all services currently assigned on this destination.\n        Newly assigned services are still allowed for propagation.\n      parameters:\n        - $ref: '#/components/parameters/destinationId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/blockAllServicesOnDestination/dname-dtype:\n    post:\n      tags:\n        - ServicesManager\n      operationId: blockAllServicesOnDestinationByName\n      summary: Block all services currently assigned on this destination.\n        Newly assigned services are still allowed for propagation.\n      parameters:\n        - $ref: '#/components/parameters/destinationName'\n        - $ref: '#/components/parameters/destinationType'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getServicesBlockedOnFacility:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getServicesBlockedOnFacility\n      summary: Returns list of denials for a facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfServicesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getServicesBlockedOnDestination:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getServicesBlockedOnDestination\n      summary: Returns list of denials for a destination.\n      parameters:\n        - $ref: '#/components/parameters/destinationId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfServicesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/isServiceBlockedOnFacility:\n    get:\n      tags:\n        - ServicesManager\n      operationId: isServiceBlockedOnFacility\n      summary: Is this Service denied on the facility?\n        Return int 1 = true - the Service is denied on the facility, 0 = false - the Service is NOT denied on the facility\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/isServiceBlockedOnDestination:\n    get:\n      tags:\n        - ServicesManager\n      operationId: isServiceBlockedOnDestination\n      summary: Is this Service denied on the destination?\n        Return int 1 = true - the Service is denied on the destination, 0 = false - the Service is NOT denied on the destination\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/destinationId'\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/unblockAllServicesOnFacility:\n    post:\n      tags:\n        - ServicesManager\n      operationId: unblockAllServicesOnFacility\n      summary: Erase all the possible denials on this facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/unblockAllServicesOnDestination/d:\n    post:\n      tags:\n        - ServicesManager\n      operationId: unblockAllServicesOnDestinationById\n      summary: Erase all the possible denials on this destination.\n      parameters:\n        - $ref: '#/components/parameters/destinationId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/unblockAllServicesOnDestination/dname-dtype:\n    post:\n      tags:\n        - ServicesManager\n      operationId: unblockAllServicesOnDestinationByName\n      summary: Erase all the possible denials on this destination.\n      parameters:\n        - $ref: '#/components/parameters/destinationName'\n        - $ref: '#/components/parameters/destinationType'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/unblockServiceOnFacility:\n    post:\n      tags:\n        - ServicesManager\n      operationId: unblockServiceOnFacility\n      summary: Free the denial of the Service on this facility. If the Service was banned\n        on this facility, it will be freed. In case the Service was not banned on\n        this facility, nothing will happen.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/unblockServiceOnDestination/s-d:\n    post:\n      tags:\n        - ServicesManager\n      operationId: unblockServiceOnDestinationById\n      summary: Free the denial of the Service on this destination. If the Service was banned on\n        this destination, it will be freed. In case the Service was not banned on this\n        destination, nothing will happen.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/destinationId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/unblockServiceOnDestination/s-dname-dtype:\n    post:\n      tags:\n        - ServicesManager\n      operationId: unblockServiceOnDestinationByName\n      summary: Free the denial of the Service on this destination. If the Service was banned on\n        this destination, it will be freed. In case the Service was not banned on this\n        destination, nothing will happen.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/destinationName'\n        - $ref: '#/components/parameters/destinationType'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/forceServicePropagation:\n    post:\n      tags:\n        - ServicesManager\n      operationId: forceServicePropagation\n      summary: Forces service propagation on defined facility.\n        Return int 1 = true if it is possible, 0 = false if not\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/optionalFacilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/planServicePropagation:\n    post:\n      tags:\n        - ServicesManager\n      operationId: planServicePropagation\n      summary: Plans service propagation on defined facility.\n        Return int 1 = true if it is possible, 0 = false if not\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/optionalFacilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getFacilityAssignedServicesForGUI:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getFacilityAssignedServicesForGUI\n      summary: Return list of ServiceForGUI assigned on facility, (Service with \"allowedOnFacility\" property filled).\n        1 - allowed / 0 - service is service is denied.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfServiceForGUIResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/createService:\n    post:\n      tags:\n        - ServicesManager\n      operationId: createServiceWithService\n      summary: Creates a new service.\n        Service object must contain name. Parameters desctiption, script, delay, recurrence, enabled are optional. Other parameters ignored.\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputCreateService\n              description: \"input to createService\"\n              type: object\n              required:\n                - service\n              properties:\n                service: { $ref: '#/components/schemas/Service' }\n\n  /urlinjsonout/servicesManager/createService:\n    post:\n      tags:\n        - ServicesManager\n      operationId: createService\n      summary: Creates a new service.\n      parameters:\n        - { name: name, description: \"name\", schema: { type: string },  in: query, required: true }\n        - { name: description, description: \"description\", schema: { type: string },  in: query, required: true }\n        - { name: script, description: \"script which should be constructed like ./service_name (where anything else than [a-z,A-Z] is converted to _)\", schema: { type: string },  in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/deleteService:\n    post:\n      tags:\n        - ServicesManager\n      operationId: deleteService\n      summary: Deletes a service.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/forceDelete'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/updateService:\n    post:\n      tags:\n        - ServicesManager\n      operationId: updateService\n      summary: Updates a service.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdateService\n              description: \"input to updateService\"\n              type: object\n              required:\n                - service\n              properties:\n                service: { $ref: '#/components/schemas/Service' }\n\n  /json/servicesManager/getServiceById:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getServiceById\n      summary: Returns a service by its id.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getServiceByName:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getServiceByName\n      summary: Returns a service by its name.\n      parameters:\n        - $ref: '#/components/parameters/name'\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getServices:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getServices\n      summary: Returns all services.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfServicesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getServicesByAttributeDefinition:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getServicesByAttributeDefinition\n      summary: Get all services with given attribute.\n      parameters:\n        - $ref: '#/components/parameters/attributeDefinitionId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfServicesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getHierarchicalData:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getHierarchicalData\n      summary: Generates the list of attributes per each member associated with the resource.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getHashedHierarchicalData:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getHashedHierarchicalData\n      summary: Generates hashed hierarchical data structure for given service and facility.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n        - { name: consentEval, description: \"if true the method will run consent eval\", schema: { type: boolean },  in: query, required: false }\n      responses:\n        '200':\n          $ref: '#/components/responses/HashedGenDataResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getHashedDataWithGroups:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getHashedDataWithGroups\n      summary: Generates hashed group structure data for given service and facility.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n        - { name: consentEval, description: \"if true the method will run consent eval\", schema: { type: boolean },  in: query, required: false }\n      responses:\n        '200':\n          $ref: '#/components/responses/HashedGenDataResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getFlatData:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getFlatData\n      summary: Generates the list of attributes per each user and per each resource. Never return member or member-resource attribute.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getDataWithGroups:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getDataWithGroups\n      summary: Generates the list of attributes per each member associated with the resources and groups.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getDataWithVos:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getDataWithVos\n      summary: Generates the list of attributes per each member associated with the resources and groups in vos.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceAttributesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getServicesPackages:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getServicesPackages\n      summary: Returns packages.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfServicesPackageResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getServicesPackageById:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getServicesPackageById\n      summary: Gets package by id.\n      parameters:\n        - $ref: '#/components/parameters/servicesPackageId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ServicesPackageResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getServicesPackageByName:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getServicesPackageByName\n      summary: Gets package by name.\n      parameters:\n        - { name: name, description: \"ServicesPackage name\", schema: { type: string },  in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/ServicesPackageResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/createServicesPackage:\n    post:\n      tags:\n        - ServicesManager\n      operationId: createServicesPackage\n      summary: Creates a new services package.\n      responses:\n        '200':\n          $ref: '#/components/responses/ServicesPackageResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              title: InputCreateServicesPackage\n              description: Input to createServicesPackage\n              required:\n                - servicesPackage\n              properties:\n                servicesPackage:\n                  $ref: '#/components/schemas/ServicesPackage'\n\n  /urlinjsonout/servicesManager/createServicesPackage:\n    post:\n      tags:\n        - ServicesManager\n      operationId: createServicesPackageByNameAndDescription\n      summary: Creates a new services package.\n      parameters:\n        - { name: name, description: \"name\", schema: { type: string },  in: query, required: true }\n        - { name: description, description: \"description\", schema: { type: string },  in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/ServicesPackageResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/deleteServicesPackage:\n    post:\n      tags:\n        - ServicesManager\n      operationId: deleteServicesPackage\n      summary: Deletes a services package.\n      parameters:\n        - $ref: '#/components/parameters/servicesPackageId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/updateServicesPackage:\n    post:\n      tags:\n        - ServicesManager\n      operationId: updateServicesPackage\n      summary: Updates a service package.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              title: InputUpdateServicesPackage\n              description: Input to updateServicesPackage\n              required:\n                - servicesPackage\n              properties:\n                servicesPackage:\n                  $ref: '#/components/schemas/ServicesPackage'\n\n  /urlinjsonout/servicesManager/addServiceToServicesPackage:\n    post:\n      tags:\n        - ServicesManager\n      operationId: addServiceToServicesPackage\n      summary: Adds a Service to a Services Package.\n      parameters:\n        - $ref: '#/components/parameters/servicesPackageId'\n        - $ref: '#/components/parameters/serviceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/removeServiceFromServicesPackage:\n    post:\n      tags:\n        - ServicesManager\n      operationId: removeServiceFromServicesPackage\n      summary: Removes a Service from a Services Package.\n      parameters:\n        - $ref: '#/components/parameters/servicesPackageId'\n        - $ref: '#/components/parameters/serviceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getServicesFromServicesPackage:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getServicesFromServicesPackage\n      summary: Lists services stored in a package.\n      parameters:\n        - $ref: '#/components/parameters/servicesPackageId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfServicesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/addRequiredAttribute:\n    post:\n      tags:\n        - ServicesManager\n      operationId: addRequiredAttribute\n      summary: Mark the attribute as required for the service. Required attributes are requisite for Service to run.\n        If you add attribute which has a default attribute then this default attribute will be automatically add too.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/addRequiredAttributes:\n    post:\n      tags:\n        - ServicesManager\n      operationId: addRequiredAttributes\n      summary: Batch version of addRequiredAttribute.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/removeRequiredAttribute:\n    post:\n      tags:\n        - ServicesManager\n      operationId: removeRequiredAttribute\n      summary: Remove required attribute from service.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/removeRequiredAttributes:\n    post:\n      tags:\n        - ServicesManager\n      operationId: removeRequiredAttributes\n      summary: Remove required attributes from service.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/attributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/removeAllRequiredAttributes:\n    post:\n      tags:\n        - ServicesManager\n      operationId: removeAllRequiredAttributes\n      summary: Remove all required attributes from service.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getDestinationById:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getDestinationById\n      summary: Returns a destination by its id.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/DestinationResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getDestinations/s-f:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getDestinations\n      summary: Returns list of all destinations defined for the service and facility.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfDestinationsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getDestinations/all:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getAllDestinations\n      summary: Get list of all destinations.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfDestinationsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n\n  /json/servicesManager/getAllRichDestinations/s:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getAllRichDestinationsForService\n      summary: Returns list of all rich destinations defined for the service.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getAllRichDestinations/f:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getAllRichDestinationsForFacility\n      summary: Returns list of all rich destinations defined for the facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getRichDestinations:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getRichDestinations\n      summary: Returns list of all rich destinations defined for the service and facility.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/addDestination:\n    post:\n      tags:\n        - ServicesManager\n      operationId: addDestination\n      summary: Adds an destination for a facility and service. If destination doesn't exist it will be created.\n      description: InvalidDestinationException is thrown when destination value is invalid in given destination type.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n        - { name: destination, description: \"Destination's destination, usually a DNS name\", schema: { type: string },  in: query, required: true }\n        - { name: type, description: \"Destination's type\", schema: { $ref: '#/components/schemas/DestinationType' },  in: query, required: true }\n        - { name: propagationType, description: \"Destination's propagationType\", schema: { $ref: '#/components/schemas/DestinationPropagationType' },  in: query, required: false }\n      responses:\n        '200':\n          $ref: '#/components/responses/DestinationResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/addDestination:\n    post:\n      tags:\n        - ServicesManager\n      operationId: addDestinationToMultipleServices\n      description: Adds an destination for a facility and list of services. If destination doesn't exist it will be created.\n        InvalidDestinationException is thrown when destination value is invalid in given destination type.\n      responses:\n        '200':\n          $ref: '#/components/responses/DestinationResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputAddDestinationToMultipleServices\n              description: \"input to addDestinationToMultipleServices\"\n              type: object\n              required:\n                - services\n                - facility\n                - destination\n                - type\n              properties:\n                services:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Service'\n                facility: { type: integer }\n                destination: { type: string }\n                type: { $ref: '#/components/schemas/DestinationType' }\n                propagationType: { $ref: '#/components/schemas/DestinationPropagationType' }\n\n\n  /urlinjsonout/servicesManager/addDestinationsForAllServicesOnFacility:\n    post:\n      tags:\n        - ServicesManager\n      operationId: addDestinationsForAllServicesOnFacility\n      summary: Adds destination for all services defined on the facility.\n      description: InvalidDestinationException is thrown when destination value is invalid in given destination type.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n        - $ref: '#/components/parameters/destinationName'\n        - { name: type, description: \"Destination type (host,user@host,user@host:port,url,mail,service-specific)\", schema: { $ref: '#/components/schemas/DestinationType' },  in: query, required: true }\n        - { name: propagationType, description: \"propagation type (PARALLEL, DUMMY - doesn't send data)\", schema: { $ref: '#/components/schemas/DestinationPropagationType' },  in: query, required: false }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfDestinationsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/addDestinationsDefinedByHostsOnFacility/s-f:\n    post:\n      tags:\n        - ServicesManager\n      operationId: addDestinationsDefinedByHostsOnFacilityWithServiceAndFacility\n      summary: Add services destinations for all services currently available on facility\n        (assigned to all facility's resources). Destinations names are taken from\n        all facility's host hostnames.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfDestinationsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/addDestinationsDefinedByHostsOnFacility/lists-f:\n    post:\n      tags:\n        - ServicesManager\n      operationId: addDestinationsDefinedByHostsOnFacilityWithListOfServiceAndFacility\n      summary: Add services destinations for list of services. Destinations names are taken from\n        all facility's host hostnames.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfDestinationsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputAddDestinationsDefinedByHostsOnFacility\n              description: \"input to addDestinationsDefinedByHostsOnFacility\"\n              type: object\n              required:\n                - services\n                - facility\n              properties:\n                services:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Service'\n                facility: { type: integer }\n\n  /urlinjsonout/servicesManager/addDestinationsDefinedByHostsOnFacility/f:\n    post:\n      tags:\n        - ServicesManager\n      operationId: addDestinationsDefinedByHostsOnFacilityWithFacility\n      summary: Add services destinations for one service. Destinations names are taken from\n        all facility's host hostnames.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfDestinationsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/removeDestination:\n    post:\n      tags:\n        - ServicesManager\n      operationId: removeDestination\n      summary: Removes the specified destination from the facility and service.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n        - { name: destination, description: \"Destination's destination\", schema: { type: string },  in: query, required: true }\n        - { name: type, description: \"Destination's type\", schema: { $ref: '#/components/schemas/DestinationType' },  in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/servicesManager/removeAllDestinations:\n    post:\n      tags:\n        - ServicesManager\n      operationId: removeAllDestinations\n      summary: Removes all destinations from a facility and service.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getFacilitiesDestinations:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getFacilitiesDestinations\n      summary: List all destinations for all facilities which are joined by resources to the VO.\n      parameters:\n        - $ref: '#/components/parameters/voId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfDestinationsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getDestinationsCount:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getDestinationsCount\n      summary: Gets count of all destinations.\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getAssignedServices:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getAssignedServices\n      summary: List all services associated with the facility (via resource).\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfServicesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/servicesManager/getAssignedResourcesForService:\n    get:\n      tags:\n        - ServicesManager\n      operationId: getAssignedResources\n      summary: Lists resources assigned to service.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #################################################\n  #                                               #\n  # TasksManager                                  #\n  #                                               #\n  #################################################\n\n  /json/tasksManager/getTask:\n    get:\n      tags:\n        - TasksManager\n      operationId: getTask\n      summary: Returns a task.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/TaskResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/listAllTasks:\n    get:\n      tags:\n        - TasksManager\n      operationId: listAllTasks\n      summary: Returns all tasks.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfTasksResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/listAllTasksForFacility:\n    get:\n      tags:\n        - TasksManager\n      operationId: listAllTasksForFacility\n      summary: Returns all tasks associated with selected facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfTasksResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/isThereSuchTask:\n    get:\n      tags:\n        - TasksManager\n      operationId: isThereSuchTask\n      summary: Whether task exists.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/countTasks:\n    get:\n      tags:\n        - TasksManager\n      operationId: countTasks\n      summary: Returns the count of all tasks.\n      responses:\n        '200':\n          $ref: '#/components/responses/IntegerResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/getTaskResults:\n    get:\n      tags:\n        - TasksManager\n      operationId: getTaskResults\n      summary: Returns all task results.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfTaskResultsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/getTaskResultsByTask:\n    get:\n      tags:\n        - TasksManager\n      operationId: getTaskResultsByTask\n      summary: Return list of TaskResults by a Task.\n      parameters:\n        - $ref: '#/components/parameters/taskId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfTaskResultsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/getTaskResultsForGUIByTaskOnlyNewest:\n    get:\n      tags:\n        - TasksManager\n      operationId: getTaskResultsForGUIByTaskOnlyNewest\n      summary: Return list of only newest TaskResults by a Task for GUI.\n      parameters:\n        - $ref: '#/components/parameters/taskId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfTaskResultsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/getTaskResultsForGUIByTaskAndDestination:\n    get:\n      tags:\n        - TasksManager\n      operationId: getTaskResultsForGUIByTaskAndDestination\n      summary: Return list of TaskResults by a Task and destination for GUI.\n      parameters:\n        - $ref: '#/components/parameters/taskId'\n        - $ref: '#/components/parameters/destinationId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfTaskResultsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/getTaskResultsForGUIByTask:\n    get:\n      tags:\n        - TasksManager\n      operationId: getTaskResultsForGUIByTask\n      summary: Return list of TaskResults by a Task for GUI.\n      parameters:\n        - $ref: '#/components/parameters/taskId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfTaskResultsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/getTaskResultById:\n    get:\n      tags:\n        - TasksManager\n      operationId: getTaskResultById\n      summary: Returns TaskResult by its id.\n      parameters:\n        - $ref: '#/components/parameters/taskResultId'\n      responses:\n        '200':\n          $ref: '#/components/responses/TaskResultResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/getTaskById:\n    get:\n      tags:\n        - TasksManager\n      operationId: getTaskById\n      summary: Returns Task by its id\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/TaskResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/getFacilityState:\n    get:\n      tags:\n        - TasksManager\n      operationId: getFacilityState\n      summary: Return propagation status of facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/FacilityStateResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/getAllFacilitiesStates:\n    get:\n      tags:\n        - TasksManager\n      operationId: getAllFacilitiesStates\n      summary: Return propagation status of all facilities in Perun/Vo.\n      parameters:\n        - $ref: '#/components/parameters/optionalVoId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfFacilityStatesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/getAllResourcesState:\n    get:\n      tags:\n        - TasksManager\n      operationId: getAllResourcesState\n      summary: Return propagation status of all resources related to VO.\n      parameters:\n        - { name: voId, description: \"VO id\", schema: { type: integer },  in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourceStatesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/getTaskResultsForDestinations:\n    get:\n      tags:\n        - TasksManager\n      operationId: getTaskResultsForDestinations\n      summary: Returns task results for defined destinations.\n      parameters:\n        - name: destinations[]\n          in: query\n          schema:\n            type: array\n            items:\n              type: string\n          description: 'List\u003cString\u003e Destinations'\n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfTaskResultsResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/getFacilityServicesState:\n    get:\n      tags:\n        - TasksManager\n      operationId: getFacilityServicesState\n      summary: Returns service states for defined facility.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfServiceStatesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/tasksManager/deleteTask:\n    post:\n      tags:\n        - TasksManager\n      operationId: deleteTask\n      summary: Delete Task and TaskResults.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: taskIdObject\n              description: \"input to deleteTaskObject\"\n              type: object\n              required:\n                - task\n              properties:\n                task: { type: integer, description: \"task id\", nullable: false }\n\n  /json/tasksManager/deleteTaskResultById:\n    post:\n      tags:\n        - TasksManager\n      operationId: deleteTaskResultById\n      summary: Delete TaskResult by its ID.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: taskResultIdObject\n              description: \"input to deleteTaskResultObject\"\n              type: object\n              required:\n                - taskResultId\n              properties:\n                taskResultId: { type: integer, description: \"task result id\", nullable: false }\n\n  /json/tasksManager/deleteTaskResults/id:\n    post:\n      tags:\n        - TasksManager\n      operationId: deleteTaskResultsIds\n      summary: Delete all TaskResults for specified Task and Destination.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: taskAndDestinationIdObject\n              description: \"input to deleteTaskResultsIds\"\n              type: object\n              required:\n                - taskId\n                - destinationId\n              properties:\n                taskId: { type: integer, description: \"task id\", nullable: false }\n                destinationId: { type: integer, description: \"destination id\", nullable: false }\n\n  /json/tasksManager/deleteTaskResults/name:\n    post:\n      tags:\n        - TasksManager\n      operationId: deleteTaskResultsNames\n      summary: Delete all TaskResults for specified Task and Destination.\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: taskAndDestinationNameObject\n              description: \"input to deleteTaskResultsNames\"\n              type: object\n              required:\n                - taskId\n                - destinationName\n                - destinationType\n              properties:\n                taskId: { type: integer, description: \"task id\", nullable: false }\n                destinationName: { type: string, description: \"destination name\", nullable: false }\n                destinationType: { type: string, description: \"destination type\", nullable: false }\n\n  /json/tasksManager/suspendTasksPropagation:\n    post:\n      tags:\n        - TasksManager\n      operationId: suspendTasksPropagation\n      summary: Suspends waiting tasks propagation to the engine. Does not affect already propagated tasks.\n      parameters:\n        - { name: suspend, description: \"if true stops propagating waiting tasks to the engine, if false resumes propagation\", schema: { type: boolean }, in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #################################################\n  #                                               #\n  # RTMessagesManager                               #\n  #                                               #\n  #################################################\n\n  /urlinjsonout/rtMessagesManager/sentMessageToRT/q:\n    post:\n      tags:\n        - RTMessagesManager\n      operationId: sentMessageToRTWithQueue\n      summary: Sends a message to RT. Only text information is sent.\n      parameters:\n        - { name: queue, description: \"RT queue\", schema: { type: string },  in: query, required: true }\n        - { name: subject, description: \"Message subject\", schema: { type: string },  in: query, required: true }\n        - { name: text, description: \"Message text\", schema: { type: string },  in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/RTMessageResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/rtMessagesManager/sentMessageToRT/m-q:\n    post:\n      tags:\n        - RTMessagesManager\n      operationId: sentMessageToRTWithMemberQueue\n      summary: Sends a message to RT. Member id is sent.\n      parameters:\n        - { name: memberId, description: \"Member whose e-mail address will be user\", schema: { type: integer },  in: query, required: true }\n        - { name: queue, description: \"RT queue\", schema: { type: string },  in: query, required: true }\n        - { name: subject, description: \"Message subject\", schema: { type: string },  in: query, required: true }\n        - { name: text, description: \"Message text\", schema: { type: string },  in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/RTMessageResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/rtMessagesManager/sentMessageToRT/v-q:\n    post:\n      tags:\n        - RTMessagesManager\n      operationId: sentMessageToRTWithVoQueue\n      summary: Sends a message to RT. VO id is sent.\n      parameters:\n        - { name: voId, description: \"VO id\", schema: { type: integer },  in: query, required: true }\n        - { name: queue, description: \"RT queue\", schema: { type: string },  in: query, required: true }\n        - { name: subject, description: \"Message subject\", schema: { type: string },  in: query, required: true }\n        - { name: text, description: \"Message text\", schema: { type: string },  in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/RTMessageResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/rtMessagesManager/sentMessageToRT/v:\n    post:\n      tags:\n        - RTMessagesManager\n      operationId: sentMessageToRTWithVo\n      summary: Sends a message to RT. VO id is sent. Queue is not sent.\n      parameters:\n        - { name: voId, description: \"VO id\", schema: { type: integer },  in: query, required: true }\n        - { name: subject, description: \"Message subject\", schema: { type: string },  in: query, required: true }\n        - { name: text, description: \"Message text\", schema: { type: string },  in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/RTMessageResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #################################################\n  #                                               #\n  # IntegrationManager                            #\n  #                                               #\n  #################################################\n\n  /json/integrationManager/getGroupMemberData:\n    get:\n      tags:\n        - IntegrationManager\n      operationId: getGroupMemberData\n      summary: Get all member-group relations for all groups with all member-group attributes.\n      responses:\n        '200':\n          $ref: '#/components/responses/GroupMemberDataResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  #################################################\n  #                                               #\n  # Searcher                                      #\n  #                                               #\n  #################################################\n\n  /json/searcher/getUsers:\n    post:\n      tags:\n        - Searcher\n      operationId: getUsersSearcher\n      summary: Get list of users who have attributes with specific values.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfUsersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputGetUsers\n              description: \"Input to getUsers\"\n              type: object\n              required:\n                - attributesWithSearchingValues\n              properties:\n                attributesWithSearchingValues:\n                  type: object\n                  description: \"Map of attribute names with searching values Map\u003csting,string\u003e\"\n                  nullable: false\n                  additionalProperties:\n                    type: string\n\n  /json/searcher/getMembersByUserAttributes:\n    post:\n      tags:\n        - Searcher\n      operationId: getMembersByUserAttributes\n      summary: Get list of members who have attributes with specific values.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfMembersResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputGetMembersByUserAttributes\n              description: \"Input to getMembersByUserAttributes\"\n              type: object\n              required:\n                - vo\n                - userAttributesWithSearchingValues\n              properties:\n                vo: { type: integer, description: \"vo id\", nullable: false }\n                userAttributesWithSearchingValues:\n                  type: object\n                  description: \"Map of attribute names with searching values Map\u003csting,string\u003e\"\n                  nullable: false\n                  additionalProperties:\n                    type: string\n\n  /json/searcher/getFacilities:\n    post:\n      tags:\n        - Searcher\n      operationId: getFacilities\n      summary: Get list of facilities who have attributes with specific values.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfFacilitiesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputGetFacilities\n              description: \"Input to getFacilities\"\n              type: object\n              required:\n                - attributesWithSearchingValues\n              properties:\n                attributesWithSearchingValues:\n                  type: object\n                  description: \"Map of attribute names with searching values Map\u003csting,string\u003e\"\n                  nullable: false\n                  additionalProperties:\n                    type: string\n\n  /json/searcher/getResources/attributes:\n    post:\n      tags:\n        - Searcher\n      operationId: getAttributesResources\n      summary: Get list of resources who have attributes with specific values.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputGetResources\n              description: \"Input to getResources\"\n              type: object\n              required:\n                - attributesWithSearchingValues\n              properties:\n                attributesWithSearchingValues:\n                  type: object\n                  description: \"Map of attribute names with searching values Map\u003csting,string\u003e\"\n                  nullable: false\n                  additionalProperties:\n                    type: string\n\n  /json/searcher/getResources/attributes-match:\n    post:\n      tags:\n        - Searcher\n      operationId: getAttributesMatchResources\n      summary: Get list of resources that have attributes with partially matched values \n        if allowPartialMatchForString is set to true, else with exactly matched values.\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfResourcesResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputGetMatchResources\n              description: \"Input to getResources\"\n              type: object\n              required:\n                - allowPartialMatchForString\n                - attributesWithSearchingValues\n              properties:\n                allowPartialMatchForString: { type: boolean, description: \"True if partial match is allowed\", nullable: false }\n                attributesWithSearchingValues:\n                  type: object\n                  description: \"Map of attribute names with searching values Map\u003csting,string\u003e\"\n                  nullable: false\n                  additionalProperties:\n                    type: string\n\n  #################################################\n  #                                               #\n  # ConsentsManager                               #\n  #                                               #\n  #################################################\n\n  /json/consentsManager/getAllConsents:\n    get:\n      tags:\n        - ConsentsManager\n      operationId: getAllConsents\n      summary: Return list of all existing Consents\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfConsentResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/consentsManager/getConsentById:\n    get:\n      tags:\n        - ConsentsManager\n      operationId: getConsentById\n      summary: Return Consent object with corresponding id\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/ConsentResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/consentsManager/getConsentsForUser/id-s:\n    get:\n      tags:\n        - ConsentsManager\n      operationId: getConsentsForUserWithStatus\n      summary: Return Consents of certain status for user with corresponding id\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - { name: status, description: \"consent status\", schema: { $ref: '#/components/schemas/ConsentStatus' },  in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfConsentResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/consentsManager/getConsentsForUser/id:\n    get:\n      tags:\n        - ConsentsManager\n      operationId: getConsentsForUser\n      summary: Return Consents for user with corresponding id\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfConsentResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/consentsManager/getConsentsForConsentHub/id-s:\n    get:\n      tags:\n        - ConsentsManager\n      operationId: getConsentsForConsentHubWithStatus\n      summary: Return Consents of certain status for ConsentHub with corresponding id\n      parameters:\n        - $ref: '#/components/parameters/consentHubId'\n        - { name: status, description: \"consent status\", schema: { $ref: '#/components/schemas/ConsentStatus' },  in: query, required: true }\n\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfConsentResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/consentsManager/getConsentsForConsentHub/id:\n    get:\n      tags:\n        - ConsentsManager\n      operationId: getConsentsForConsentHub\n      summary: Return Consents for ConsentHub with corresponding id\n      parameters:\n        - $ref: '#/components/parameters/consentHubId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfConsentResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/consentsManager/getConsentsForUserAndConsentHub:\n    get:\n      tags:\n        - ConsentsManager\n      operationId: getConsentsForUserAndConsentHub\n      summary: Return Consents for specified user in specified consent hub\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/consentHubId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfConsentResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/consentsManager/getConsentForUserAndConsentHub:\n    get:\n      tags:\n        - ConsentsManager\n      operationId: getConsentForUserAndConsentHub\n      summary: Return Consent object for chosen user in specified consent hub with specified status\n      parameters:\n        - $ref: '#/components/parameters/userId'\n        - $ref: '#/components/parameters/consentHubId'\n        - { name: status, description: \"consent status\", schema: { $ref: '#/components/schemas/ConsentStatus' },  in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/ConsentResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n  /json/consentsManager/getAllConsentHubs:\n    get:\n      tags:\n        - ConsentsManager\n      operationId: getAllConsentHubs\n      summary: Return list of all Consent Hubs\n      responses:\n        '200':\n          $ref: '#/components/responses/ListOfConsentHubResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/consentsManager/getConsentHubById:\n    get:\n      tags:\n        - ConsentsManager\n      operationId: getConsentHubById\n      summary: Returns a Consent Hub by id.\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/ConsentHubResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/consentsManager/getConsentHubByName:\n    get:\n      tags:\n        - ConsentsManager\n      operationId: getConsentHubByName\n      summary: Returns a Consent Hub by name.\n      parameters:\n        - $ref: '#/components/parameters/name'\n      responses:\n        '200':\n          $ref: '#/components/responses/ConsentHubResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/consentsManager/getConsentHubByFacility:\n    get:\n      tags:\n        - ConsentsManager\n      operationId: getConsentHubByFacility\n      summary: Returns a Consent Hub by facility id.\n      parameters:\n        - $ref: '#/components/parameters/facilityId'\n      responses:\n        '200':\n          $ref: '#/components/responses/ConsentHubResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /json/consentsManager/updateConsentHub:\n    post:\n      tags:\n        - ConsentsManager\n      operationId: updateConsentHub\n      summary: Updates a consent hub. Ignores related facilities.\n      responses:\n        '200':\n          $ref: '#/components/responses/ConsentHubResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InputUpdateConsentHub\n              description: \"input to updateConsentHub\"\n              type: object\n              required:\n                - consentHub\n              properties:\n                consentHub: { $ref: '#/components/schemas/ConsentHub' }\n\n  /urlinjsonout/consentsManager/changeConsentStatus:\n    post:\n      tags:\n        - ConsentsManager\n      operationId: changeConsentStatus\n      summary: Changes value of consent status.\n      parameters:\n        - $ref: '#/components/parameters/consentId'\n        - { name: status, description: \"consent status\", schema: { $ref: '#/components/schemas/ConsentStatus' },  in: query, required: true }\n      responses:\n        '200':\n          $ref: '#/components/responses/ConsentResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/consentsManager/evaluateConsentsForConsentHub:\n    post:\n      tags:\n        - ConsentsManager\n      operationId: evaluateConsentsForConsentHub\n      summary: Evaluates consents for given consent hub.\n      parameters:\n        - $ref: '#/components/parameters/consentHubId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n\n  /urlinjsonout/consentsManager/evaluateConsentsForService:\n    post:\n      tags:\n        - ConsentsManager\n      operationId: evaluateConsentsForService\n      summary: Evaluates consents for all consent hubs with given service.\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/VoidResponse'\n        default:\n          $ref: '#/components/responses/ExceptionResponse'\n",
			"canonicalURL": "/github.com/CESNET/perun@568109ac0f85910fc7a1cf6e2f8f78f8ba2fdbde/-/blob/perun-openapi/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/CESNET/perun/blob/568109ac0f85910fc7a1cf6e2f8f78f8ba2fdbde/perun-openapi/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}