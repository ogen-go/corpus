{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/twitter.com/labs/2.13/openapi.yaml",
			"byteSize": 49311,
			"content": "openapi: 3.0.0\nservers:\n  - description: Twitter API\n    url: https://api.twitter.com\ninfo:\n  contact:\n    name: Twitter Developers\n    url: https://developer.twitter.com/\n    x-twitter: twitter\n  description: API Reference â€” Labs v2\n  license:\n    name: Twitter Developer Agreement and Policy\n    url: https://developer.twitter.com/en/developer-terms/agreement-and-policy.html\n  termsOfService: https://developer.twitter.com/en/developer-terms/agreement-and-policy.html\n  title: Tweets and Users\n  version: \"2.13\"\n  x-apisguru-categories:\n    - social\n  x-logo:\n    url: https://twitter.com/twitter/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://api.twitter.com/labs/2/openapi.json\n      version: \"3.0\"\n  x-preferred: true\n  x-providerName: twitter.com\n  x-serviceName: labs\n  x-tags:\n    - pii\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\ntags:\n  - description: Miscellaneous endpoints for general API functionality\n    externalDocs:\n      description: Find out more\n      url: https://developer.twitter.com/en/docs/labs\n    name: General\n  - description: APIs related to Tweets\n    externalDocs:\n      description: Find out more\n      url: https://developer.twitter.com/en/docs/labs/tweets-and-users/overview\n    name: Tweets\n  - description: APIs related to Users\n    externalDocs:\n      description: Find out more\n      url: https://developer.twitter.com/en/docs/labs/tweets-and-users/overview\n    name: Users\npaths:\n  /labs/2/openapi.json:\n    get:\n      description: Full open api spec in JSON format. (See https://github.com/OAI/OpenAPI-Specification/blob/master/README.md)\n      operationId: getOpenApiSpec\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: The request was successful\n      summary: Returns the open api spec document.\n      tags:\n        - General\n  /labs/2/tweets:\n    get:\n      description: Returns a variety of information about the Tweet specified by the requested ID\n      operationId: findTweetsById\n      parameters:\n        - description: A comma separated list of Tweet IDs. Up to 100 are allowed in a single request.\n          explode: false\n          in: query\n          name: ids\n          required: true\n          schema:\n            items:\n              $ref: \"#/components/schemas/TweetID\"\n            maxItems: 100\n            minItems: 1\n            type: array\n          style: form\n        - $ref: \"#/components/parameters/TweetExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n        - $ref: \"#/components/parameters/MediaFieldsParameter\"\n        - $ref: \"#/components/parameters/PlaceFieldsParameter\"\n        - $ref: \"#/components/parameters/PollFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TweetLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      summary: Returns hydrated Tweet objects\n      tags:\n        - Tweets\n  \"/labs/2/tweets/{id}\":\n    get:\n      description: Returns a variety of information about the Tweet specified by the requested ID\n      operationId: findTweetById\n      parameters:\n        - description: A single Tweet ID.\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/TweetID\"\n        - $ref: \"#/components/parameters/TweetExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n        - $ref: \"#/components/parameters/MediaFieldsParameter\"\n        - $ref: \"#/components/parameters/PlaceFieldsParameter\"\n        - $ref: \"#/components/parameters/PollFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SingleTweetLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      summary: Returns hydrated Tweet objects\n      tags:\n        - Tweets\n  /labs/2/users:\n    get:\n      description: This endpoint returns information about users. Specify users by their ID.\n      operationId: findUsersById\n      parameters:\n        - description: Required. A list of User IDs, comma-separated. You can specify up to 100 IDs.\n          explode: false\n          in: query\n          name: ids\n          required: true\n          schema:\n            items:\n              $ref: \"#/components/schemas/UserID\"\n            maxItems: 100\n            minItems: 1\n            type: array\n          style: form\n        - $ref: \"#/components/parameters/UserExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n        - $ref: \"#/components/parameters/MediaFieldsParameter\"\n        - $ref: \"#/components/parameters/PlaceFieldsParameter\"\n        - $ref: \"#/components/parameters/PollFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      summary: Return details for the specified users\n      tags:\n        - Users\n  /labs/2/users/by:\n    get:\n      description: This endpoint returns information about users. Specify users by their username.\n      operationId: findUsersByUsername\n      parameters:\n        - description: Required . A list of usernames, comma-separated. You can specify up to 100 usernames.\n          explode: false\n          in: query\n          name: usernames\n          required: true\n          schema:\n            items:\n              $ref: \"#/components/schemas/UserName\"\n            maxItems: 100\n            minItems: 1\n            type: array\n          style: form\n        - $ref: \"#/components/parameters/UserExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n        - $ref: \"#/components/parameters/MediaFieldsParameter\"\n        - $ref: \"#/components/parameters/PlaceFieldsParameter\"\n        - $ref: \"#/components/parameters/PollFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      summary: Return details for the specified users\n      tags:\n        - Users\n  \"/labs/2/users/by/username/{username}\":\n    get:\n      description: This endpoint returns information about a user. Specify user by username.\n      operationId: findUserByUsername\n      parameters:\n        - description: Required. A username.\n          in: path\n          name: username\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserName\"\n        - $ref: \"#/components/parameters/UserExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n        - $ref: \"#/components/parameters/MediaFieldsParameter\"\n        - $ref: \"#/components/parameters/PlaceFieldsParameter\"\n        - $ref: \"#/components/parameters/PollFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SingleUserLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      summary: Return details for the specified users\n      tags:\n        - Users\n  \"/labs/2/users/{id}\":\n    get:\n      description: This endpoint returns information about a user. Specify user by ID.\n      operationId: findUserById\n      parameters:\n        - description: Required. A User ID.\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n        - $ref: \"#/components/parameters/UserExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n        - $ref: \"#/components/parameters/MediaFieldsParameter\"\n        - $ref: \"#/components/parameters/PlaceFieldsParameter\"\n        - $ref: \"#/components/parameters/PollFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SingleUserLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      summary: Return details for the specified users\n      tags:\n        - Users\ncomponents:\n  parameters:\n    MediaFieldsParameter:\n      description: A comma separated list of Media fields to display.\n      explode: false\n      in: query\n      name: media.fields\n      required: false\n      schema:\n        description: The list of fields you can display for a Media object.\n        example: created_at\n        items:\n          enum:\n            - media_key\n            - duration_ms\n            - height\n            - preview_image_url\n            - type\n            - url\n            - width\n            - public_metrics\n            - non_public_metrics\n            - organic_metrics\n            - promoted_metrics\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n    PlaceFieldsParameter:\n      description: A comma separated list of Place fields to display.\n      explode: false\n      in: query\n      name: place.fields\n      required: false\n      schema:\n        description: The list of fields you can display for a Place object.\n        example: country_code\n        items:\n          enum:\n            - id\n            - name\n            - country_code\n            - place_type\n            - full_name\n            - country\n            - contained_within\n            - geo\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n    PollFieldsParameter:\n      description: A comma separated list of Poll fields to display.\n      explode: false\n      in: query\n      name: poll.fields\n      required: false\n      schema:\n        description: The list of fields you can display for a Poll object.\n        example: end_datetime\n        items:\n          enum:\n            - id\n            - options\n            - voting_status\n            - end_datetime\n            - duration_minutes\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n    TweetExpansionsParameter:\n      description: A comma separated list of fields to expand.\n      explode: false\n      in: query\n      name: expansions\n      schema:\n        description: The list of fields you can expand for a [Tweet](#Tweet) object. If the field has an ID, it can be expanded into a full object.\n        example: author_id\n        items:\n          enum:\n            - author_id\n            - referenced_tweets.id\n            - in_reply_to_user_id\n            - geo.place_id\n            - attachments.media_keys\n            - attachments.poll_ids\n            - entities.mentions.username\n            - referenced_tweets.id.author_id\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n    TweetFieldsParameter:\n      description: A comma separated list of Tweet fields to display.\n      explode: false\n      in: query\n      name: tweet.fields\n      required: false\n      schema:\n        description: The list of fields you can display for a [Tweet](#Tweet) object.\n        example: created_at\n        items:\n          enum:\n            - id\n            - created_at\n            - text\n            - author_id\n            - in_reply_to_user_id\n            - referenced_tweets\n            - attachments\n            - withheld\n            - geo\n            - entities\n            - public_metrics\n            - possibly_sensitive\n            - source\n            - lang\n            - context_annotations\n            - non_public_metrics\n            - promoted_metrics\n            - organic_metrics\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n    UserExpansionsParameter:\n      description: A comma separated list of fields to expand.\n      explode: false\n      in: query\n      name: expansions\n      schema:\n        description: The list of fields you can expand for a [User](#User) object. If the field has an ID, it can be expanded into a full object.\n        example: pinned_tweet_id\n        items:\n          enum:\n            - pinned_tweet_id\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n    UserFieldsParameter:\n      description: A comma separated list of User fields to display.\n      explode: false\n      in: query\n      name: user.fields\n      required: false\n      schema:\n        description: The list of fields you can display for a [User](#User) object.\n        example: created_at\n        items:\n          enum:\n            - id\n            - created_at\n            - name\n            - username\n            - protected\n            - verified\n            - withheld\n            - profile_image_url\n            - location\n            - url\n            - description\n            - entities\n            - pinned_tweet_id\n            - public_metrics\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n  responses:\n    HttpErrorResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n      description: The request has failed.\n  schemas:\n    AnimatedGif:\n      allOf:\n        - $ref: \"#/components/schemas/CommonMediaFields\"\n      properties:\n        preview_image_url:\n          format: uri\n          type: string\n        type:\n          enum:\n            - animated_gif\n          type: string\n      type: object\n    CashtagEntity:\n      allOf:\n        - $ref: \"#/components/schemas/EntityIndices\"\n        - $ref: \"#/components/schemas/CashtagFields\"\n    CashtagFields:\n      description: Represent the portion of text recognized as a Cashtag, and its start and end position within the text.\n      properties:\n        tag:\n          type: string\n      required:\n        - tag\n      type: object\n    ClientForbiddenProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A problem that indicates your client is forbidden from making this request.\n      properties:\n        reason:\n          enum:\n            - official-client-forbidden\n            - client-not-enrolled\n          type: string\n        registration_url:\n          format: uri\n          type: string\n        type:\n          enum:\n            - https://api.twitter.com/labs/2/problems/client-forbidden\n          type: string\n      type: object\n    CommonMediaFields:\n      description: This contains the list of the fields that are common to all media returned.\n      properties:\n        height:\n          $ref: \"#/components/schemas/MediaHeight\"\n        media_key:\n          $ref: \"#/components/schemas/MediaKey\"\n        width:\n          $ref: \"#/components/schemas/MediaWidth\"\n      type: object\n    ContextAnnotation:\n      description: Annotation inferred from the tweet text.\n      properties:\n        domain:\n          $ref: \"#/components/schemas/ContextAnnotationDomainFields\"\n        entity:\n          $ref: \"#/components/schemas/ContextAnnotationEntityFields\"\n      required:\n        - domain\n        - entity\n      type: object\n    ContextAnnotationDomainFields:\n      description: Represents the data for the context annotation domain.\n      properties:\n        description:\n          description: Description of the context annotation domain.\n          type: string\n        id:\n          description: The unique id for a context annotation domain.\n          pattern: ^[0-9]{1,19}$\n          type: string\n        name:\n          description: Name of the context annotation domain.\n          type: string\n      required:\n        - id\n      type: object\n    ContextAnnotationEntityFields:\n      description: Represents the data for the context annotation entity.\n      properties:\n        description:\n          description: Description of the context annotation entity.\n          type: string\n        id:\n          description: The unique id for a context annotation entity.\n          pattern: ^[0-9]{1,19}$\n          type: string\n        name:\n          description: Name of the context annotation entity.\n          type: string\n      required:\n        - id\n      type: object\n    CountryCode:\n      pattern: ^[A-Z]{2}$\n      type: string\n    DisallowedResourceProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A problem that indicates that the resource requested violates the precepts of this API.\n      properties:\n        resource_id:\n          type: string\n        resource_type:\n          enum:\n            - tweet\n            - media\n          type: string\n        section:\n          enum:\n            - data\n            - includes\n          type: string\n        type:\n          enum:\n            - https://api.twitter.com/labs/2/problems/disallowed-resource\n          type: string\n      required:\n        - resource_id\n        - resource_type\n        - section\n      type: object\n    EntityIndices:\n      description: Represent a boundary range (start and end index) for a recognized entity (for example a hashtag or a mention). `start` must be smaller than `end`.\n      properties:\n        end:\n          description: Index (zero-based) at which position this entity ends.\n          minimum: 0\n          type: integer\n        start:\n          description: Index (zero-based) at which position this entity starts.\n          minimum: 0\n          type: integer\n      required:\n        - start\n        - end\n      type: object\n    Error:\n      properties:\n        code:\n          format: int32\n          type: integer\n        message:\n          type: string\n      required:\n        - code\n        - message\n    Expansions:\n      properties:\n        media:\n          items:\n            $ref: \"#/components/schemas/Media\"\n          minItems: 1\n          type: array\n        places:\n          items:\n            $ref: \"#/components/schemas/Place\"\n          minItems: 1\n          type: array\n        polls:\n          items:\n            $ref: \"#/components/schemas/Poll\"\n          minItems: 1\n          type: array\n        tweets:\n          items:\n            $ref: \"#/components/schemas/Tweet\"\n          minItems: 1\n          type: array\n        users:\n          items:\n            $ref: \"#/components/schemas/User\"\n          minItems: 1\n          type: array\n      type: object\n    FullTextEntities:\n      properties:\n        cashtags:\n          items:\n            $ref: \"#/components/schemas/CashtagEntity\"\n          minItems: 1\n          type: array\n        hashtags:\n          items:\n            $ref: \"#/components/schemas/HashtagEntity\"\n          minItems: 1\n          type: array\n        mentions:\n          items:\n            $ref: \"#/components/schemas/MentionEntity\"\n          minItems: 1\n          type: array\n        urls:\n          items:\n            $ref: \"#/components/schemas/UrlEntity\"\n          minItems: 1\n          type: array\n      type: object\n    GenericProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A generic problem with no additional information beyond that provided by the HTTP status code.\n      properties:\n        status:\n          type: integer\n        type:\n          enum:\n            - about:blank\n          type: string\n      required:\n        - status\n    Geo:\n      properties:\n        bbox:\n          items:\n            format: double\n            maximum: 180\n            minimum: -180\n            type: number\n          maxItems: 4\n          minItems: 4\n          type: array\n        geometry:\n          $ref: \"#/components/schemas/Point\"\n        properties:\n          type: object\n        type:\n          enum:\n            - Feature\n          type: string\n      required:\n        - type\n        - bbox\n        - properties\n      type: object\n    HTTPStatusCode:\n      description: HTTP Status Code.\n      maximum: 599\n      minimum: 100\n      type: integer\n    HashtagEntity:\n      allOf:\n        - $ref: \"#/components/schemas/EntityIndices\"\n        - $ref: \"#/components/schemas/HashtagFields\"\n    HashtagFields:\n      description: Represent the portion of text recognized as a Hashtag, and its start and end position within the text.\n      properties:\n        tag:\n          description: The text of the Hashtag\n          type: string\n      required:\n        - tag\n      type: object\n    InvalidRequestProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A problem that indicates this request is invalid.\n      properties:\n        errors:\n          items:\n            properties:\n              message:\n                type: string\n              parameters:\n                additionalProperties:\n                  items:\n                    type: string\n                  type: array\n                type: object\n            type: object\n          type: array\n        type:\n          enum:\n            - https://api.twitter.com/labs/2/problems/invalid-request\n          type: string\n      type: object\n    Media:\n      discriminator:\n        mapping:\n          animated_gif: \"#/components/schemas/AnimatedGif\"\n          photo: \"#/components/schemas/Photo\"\n          video: \"#/components/schemas/Video\"\n        propertyName: type\n      oneOf:\n        - $ref: \"#/components/schemas/Photo\"\n        - $ref: \"#/components/schemas/Video\"\n        - $ref: \"#/components/schemas/AnimatedGif\"\n      required:\n        - type\n    MediaHeight:\n      description: The height of the media in pixels\n      minimum: 0\n      type: integer\n    MediaKey:\n      description: The Media Key identifier for this attachment.\n      pattern: ^([0-9]+)_([0-9]+)$\n      type: string\n    MediaWidth:\n      description: The width of the media in pixels\n      minimum: 0\n      type: integer\n    MentionEntity:\n      allOf:\n        - $ref: \"#/components/schemas/EntityIndices\"\n        - $ref: \"#/components/schemas/MentionFields\"\n    MentionFields:\n      description: Represent the portion of text recognized as a User mention, and its start and end position within the text.\n      properties:\n        id:\n          $ref: \"#/components/schemas/UserID\"\n        username:\n          $ref: \"#/components/schemas/UserName\"\n      required:\n        - username\n        - id\n      type: object\n    Photo:\n      allOf:\n        - $ref: \"#/components/schemas/CommonMediaFields\"\n      properties:\n        type:\n          enum:\n            - photo\n          type: string\n        url:\n          format: uri\n          type: string\n      type: object\n    Place:\n      properties:\n        contained_within:\n          items:\n            $ref: \"#/components/schemas/PlaceId\"\n          minItems: 1\n          type: array\n        country:\n          type: string\n        country_code:\n          $ref: \"#/components/schemas/CountryCode\"\n        full_name:\n          type: string\n        geo:\n          $ref: \"#/components/schemas/Geo\"\n        id:\n          $ref: \"#/components/schemas/PlaceId\"\n        name:\n          description: The human readable name of this place.\n          type: string\n        place_type:\n          $ref: \"#/components/schemas/PlaceType\"\n      required:\n        - id\n        - full_name\n    PlaceId:\n      description: The identifier for this place\n      type: string\n    PlaceType:\n      enum:\n        - poi\n        - neighborhood\n        - city\n        - admin\n        - country\n        - unknown\n      type: string\n    Point:\n      description: A [GeoJson Point](https://tools.ietf.org/html/rfc7946#section-3.1.2) geometry object.\n      properties:\n        coordinates:\n          $ref: \"#/components/schemas/Position\"\n        type:\n          enum:\n            - Point\n          type: string\n      required:\n        - type\n        - coordinates\n      type: object\n    Poll:\n      description: Represent a Poll attached to a Tweet\n      properties:\n        duration_minutes:\n          type: integer\n        end_datetime:\n          format: date-time\n          type: string\n        id:\n          $ref: \"#/components/schemas/PollId\"\n        options:\n          items:\n            $ref: \"#/components/schemas/PollOption\"\n          maxItems: 4\n          minItems: 2\n          type: array\n        voting_status:\n          enum:\n            - open\n            - closed\n          type: string\n      required:\n        - id\n        - options\n      type: object\n    PollId:\n      description: Unique identifier of this poll.\n      pattern: ^[0-9]{1,19}$\n      type: string\n    PollOption:\n      description: Describes a choice in a Poll object.\n      properties:\n        label:\n          description: The text of a poll choice.\n          type: string\n        position:\n          description: Position of this choice in the poll.\n          type: integer\n        votes:\n          description: Number of users who voted for this choice.\n          type: integer\n      required:\n        - position\n        - label\n        - votes\n      type: object\n    Position:\n      description: A [GeoJson Position](https://tools.ietf.org/html/rfc7946#section-3.1.1) in the format `[longitude,latitude]`.\n      items:\n        type: number\n      maxItems: 2\n      minItems: 2\n      type: array\n    Problem:\n      description: An HTTP Problem Details object, as defined in IETF RFC 7807 (https://tools.ietf.org/html/rfc7807).\n      discriminator:\n        mapping:\n          about:blank: \"#/components/schemas/GenericProblem\"\n          https://api.twitter.com/labs/2/problems/client-forbidden: \"#/components/schemas/ClientForbiddenProblem\"\n          https://api.twitter.com/labs/2/problems/disallowed-resource: \"#/components/schemas/DisallowedResourceProblem\"\n          https://api.twitter.com/labs/2/problems/invalid-request: \"#/components/schemas/InvalidRequestProblem\"\n          https://api.twitter.com/labs/2/problems/not-authorized-for-resource: \"#/components/schemas/ResourceUnauthorizedProblem\"\n          https://api.twitter.com/labs/2/problems/resource-not-found: \"#/components/schemas/ResourceNotFoundProblem\"\n          https://api.twitter.com/labs/2/problems/unsupported-authentication: \"#/components/schemas/UnsupportedAuthenticationProblem\"\n          https://api.twitter.com/labs/2/problems/usage-capped: \"#/components/schemas/UsageCapExceededProblem\"\n        propertyName: type\n      oneOf:\n        - $ref: \"#/components/schemas/GenericProblem\"\n        - $ref: \"#/components/schemas/InvalidRequestProblem\"\n        - $ref: \"#/components/schemas/ClientForbiddenProblem\"\n        - $ref: \"#/components/schemas/ResourceNotFoundProblem\"\n        - $ref: \"#/components/schemas/ResourceUnauthorizedProblem\"\n        - $ref: \"#/components/schemas/DisallowedResourceProblem\"\n        - $ref: \"#/components/schemas/UnsupportedAuthenticationProblem\"\n        - $ref: \"#/components/schemas/UsageCapExceededProblem\"\n    ProblemFields:\n      properties:\n        detail:\n          type: string\n        title:\n          type: string\n        type:\n          format: uri\n          type: string\n      required:\n        - type\n        - title\n        - detail\n      type: object\n    ResourceNotFoundProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A problem that indicates that a given Tweet, User, etc. does not exist.\n      properties:\n        parameter:\n          minLength: 1\n          type: string\n        resource_id:\n          type: string\n        resource_type:\n          enum:\n            - user\n            - tweet\n            - media\n          type: string\n        type:\n          enum:\n            - https://api.twitter.com/labs/2/problems/resource-not-found\n          type: string\n        value:\n          description: Value will match the schema of the field.\n      required:\n        - parameter\n        - value\n        - resource_id\n        - resource_type\n      type: object\n    ResourceUnauthorizedProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A problem that indicates you are not allowed to see a particular Tweet, User, etc.\n      properties:\n        resource_id:\n          type: string\n        resource_type:\n          enum:\n            - tweet\n            - user\n            - media\n          type: string\n        section:\n          enum:\n            - data\n            - includes\n          type: string\n        type:\n          enum:\n            - https://api.twitter.com/labs/2/problems/not-authorized-for-resource\n          type: string\n      required:\n        - resource_id\n        - resource_type\n        - section\n      type: object\n    SingleTweetLookupResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Tweet\"\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n      type: object\n    SingleUserLookupResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/User\"\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n      type: object\n    Tweet:\n      example:\n        author_id: \"712089797812\"\n        created_at: Wed Jun 20 16:53:49 +0000 2018\n        id: \"12234\"\n        text: Some great insight into the human condition.\n      properties:\n        attachments:\n          description: Specifies the type of attachments (if any) present in this Tweet.\n          properties:\n            media_keys:\n              description: A list of Media Keys for each one of the media attachments (if media are attached).\n              items:\n                $ref: \"#/components/schemas/MediaKey\"\n              minItems: 1\n              type: array\n            poll_ids:\n              description: A list of poll IDs (if polls are attached).\n              items:\n                $ref: \"#/components/schemas/PollId\"\n              minItems: 1\n              type: array\n          type: object\n        author_id:\n          $ref: \"#/components/schemas/UserID\"\n        context_annotations:\n          items:\n            $ref: \"#/components/schemas/ContextAnnotation\"\n          minItems: 1\n          type: array\n        created_at:\n          description: Creation time of the Tweet.\n          format: date-time\n          type: string\n        entities:\n          $ref: \"#/components/schemas/FullTextEntities\"\n        geo:\n          description: The location tagged on the Tweet, if the user provided one.\n          properties:\n            coordinates:\n              $ref: \"#/components/schemas/Point\"\n            place_id:\n              $ref: \"#/components/schemas/PlaceId\"\n          type: object\n        id:\n          $ref: \"#/components/schemas/TweetID\"\n        in_reply_to_user_id:\n          $ref: \"#/components/schemas/UserID\"\n        lang:\n          description: Language of the Tweet, if detected by Twitter. Returned as a BCP47 language tag.\n          type: string\n        non_public_metrics:\n          description: Nonpublic engagement metrics for the Tweet at the time of the request.\n          properties:\n            impression_count:\n              description: Number of times this Tweet has been viewed.\n              format: int32\n              type: integer\n            url_link_clicks:\n              description: Number of times links in this Tweet have been clicked.\n              type: integer\n            user_profile_clicks:\n              description: Number of times the user's profile from this Tweet has been clicked.\n              type: integer\n          type: object\n        organic_metrics:\n          description: Organic nonpublic engagement metrics for the Tweet at the time of the request.\n          properties:\n            impression_count:\n              description: Number of times this Tweet has been viewed.\n              type: integer\n            like_count:\n              description: Number of times this Tweet has been liked.\n              type: integer\n            reply_count:\n              description: Number of times this Tweet has been replied to.\n              type: integer\n            retweet_count:\n              description: Number of times this Tweet has been Retweeted.\n              type: integer\n            url_link_clicks:\n              description: Number of times links in this Tweet have been clicked.\n              type: integer\n            user_profile_clicks:\n              description: Number of times the user's profile from this Tweet has been clicked.\n              type: integer\n          required:\n            - impression_count\n            - retweet_count\n            - reply_count\n            - like_count\n            - user_profile_clicks\n          type: object\n        possibly_sensitive:\n          description: Indicates if this Tweet contains URLs marked as sensitive, for example content suitable for mature audiences.\n          type: boolean\n        promoted_metrics:\n          description: Promoted nonpublic engagement metrics for the Tweet at the time of the request.\n          properties:\n            impression_count:\n              description: Number of times this Tweet has been viewed.\n              format: int32\n              type: integer\n            like_count:\n              description: Number of times this Tweet has been liked.\n              format: int32\n              type: integer\n            reply_count:\n              description: Number of times this Tweet has been replied to.\n              format: int32\n              type: integer\n            retweet_count:\n              description: Number of times this Tweet has been Retweeted.\n              format: int32\n              type: integer\n            url_link_clicks:\n              description: Number of times links in this Tweet have been clicked.\n              type: integer\n            user_profile_clicks:\n              description: Number of times the user's profile from this Tweet has been clicked.\n              type: integer\n          type: object\n        public_metrics:\n          description: Engagement metrics for the Tweet at the time of the request.\n          properties:\n            like_count:\n              description: Number of times this Tweet has been liked.\n              type: integer\n            quote_count:\n              description: Number of times this Tweet has been quoted.\n              type: integer\n            reply_count:\n              description: Number of times this Tweet has been replied to.\n              type: integer\n            retweet_count:\n              description: Number of times this Tweet has been Retweeted.\n              type: integer\n          required:\n            - retweet_count\n            - reply_count\n            - like_count\n          type: object\n        referenced_tweets:\n          description: A list of Tweets this Tweet refers to. For example, if the parent Tweet is a Retweet, a Quoted Tweet or a Reply, it will include the related Tweet referenced to by its parent.\n          items:\n            properties:\n              id:\n                $ref: \"#/components/schemas/TweetID\"\n              type:\n                enum:\n                  - retweeted\n                  - quoted\n                  - replied_to\n                type: string\n            required:\n              - type\n              - id\n            type: object\n          minItems: 1\n          type: array\n        source:\n          description: The name of the app the user Tweeted from.\n          type: string\n        text:\n          description: The content of the Tweet.\n          type: string\n        withheld:\n          $ref: \"#/components/schemas/TweetWithheld\"\n      required:\n        - id\n        - text\n    TweetID:\n      description: Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.\n      example: \"120897978112909812\"\n      pattern: ^[0-9]{1,19}$\n      type: string\n    TweetLookupResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Tweet\"\n          minItems: 1\n          type: array\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n      type: object\n    TweetWithheld:\n      description: Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).\n      properties:\n        copyright:\n          description: Indicates if the content is being withheld for on the basis of copyright infringement.\n          type: boolean\n        country_codes:\n          description: Provides a list of countries where this content is not available.\n          items:\n            $ref: \"#/components/schemas/CountryCode\"\n          minItems: 1\n          type: array\n          uniqueItems: true\n        scope:\n          description: Indicates whether the content being withheld is the `tweet` or a `user`.\n          enum:\n            - tweet\n            - user\n          type: string\n      required:\n        - copyright\n        - country_codes\n      type: object\n    URL:\n      description: A validly formatted URL.\n      example: https://example.com\n      format: uri\n      type: string\n    URLFields:\n      description: Represent the portion of text recognized as a URL.\n      properties:\n        description:\n          description: Description of the URL landing page.\n          type: string\n        display_url:\n          description: The URL as displayed in the Twitter client.\n          type: string\n        expanded_url:\n          $ref: \"#/components/schemas/URL\"\n        images:\n          items:\n            $ref: \"#/components/schemas/URLImage\"\n          minItems: 1\n          type: array\n        status:\n          $ref: \"#/components/schemas/HTTPStatusCode\"\n        title:\n          description: Title of the page the URL points to.\n          type: string\n        unwound_url:\n          description: Fully resolved url\n          format: uri\n          type: string\n        url:\n          $ref: \"#/components/schemas/URL\"\n      required:\n        - url\n      type: object\n    URLImage:\n      description: Represent the information for the URL image\n      properties:\n        height:\n          $ref: \"#/components/schemas/MediaHeight\"\n        url:\n          $ref: \"#/components/schemas/URL\"\n        width:\n          $ref: \"#/components/schemas/MediaWidth\"\n      type: object\n    UnsupportedAuthenticationProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A problem that indicates that the authentication used is not supported.\n      properties:\n        type:\n          enum:\n            - https://api.twitter.com/labs/2/problems/unsupported-authentication\n          type: string\n      type: object\n    UrlEntity:\n      allOf:\n        - $ref: \"#/components/schemas/EntityIndices\"\n        - $ref: \"#/components/schemas/URLFields\"\n      description: Represent the portion of text recognized as a URL, and its start and end position within the text.\n    UsageCapExceededProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A problem that indicates that a usage cap has been exceeded.\n      properties:\n        period:\n          enum:\n            - Daily\n            - Monthly\n          type: string\n        scope:\n          enum:\n            - Account\n            - Product\n          type: string\n        type:\n          enum:\n            - https://api.twitter.com/labs/2/problems/usage-capped\n          type: string\n      type: object\n    User:\n      description: The Twitter User object\n      example:\n        created_at: 2017-10-09T17:16:24Z\n        id: \"1234\"\n        name: Twitter API\n        protected: false\n        username: twitterapi\n      properties:\n        created_at:\n          description: Creation time of this user.\n          format: date-time\n          type: string\n        description:\n          description: The text of this user's profile description (also known as bio), if the user provided one.\n          type: string\n        entities:\n          description: A list of metadata found in the user's profile description.\n          properties:\n            description:\n              $ref: \"#/components/schemas/FullTextEntities\"\n            url:\n              description: Expanded details for the URL specified in the user's profile, with start and end indices.\n              properties:\n                urls:\n                  items:\n                    $ref: \"#/components/schemas/UrlEntity\"\n                  minItems: 1\n                  type: array\n              type: object\n          type: object\n        id:\n          $ref: \"#/components/schemas/UserID\"\n        location:\n          description: The location specified in the user's profile, if the user provided one. As this is a freeform value, it may not indicate a valid location, but it may be fuzzily evaluated when performing searches with location queries.\n          type: string\n        name:\n          description: The friendly name of this user, as shown on their profile.\n          type: string\n        pinned_tweet_id:\n          $ref: \"#/components/schemas/TweetID\"\n        profile_image_url:\n          description: The URL to the profile image for this user.\n          format: uri\n          type: string\n        protected:\n          description: Indicates if this user has chosen to protect their Tweets (in other words, if this user's Tweets are private).\n          type: boolean\n        public_metrics:\n          description: A list of metrics for this user\n          properties:\n            followers_count:\n              description: Number of users who are following this user.\n              type: integer\n            following_count:\n              description: Number of users this user is following.\n              type: integer\n            listed_count:\n              description: The number of lists that include this user.\n              type: integer\n            tweet_count:\n              description: The number of Tweets (including Retweets) posted by this user.\n              type: integer\n          required:\n            - followers_count\n            - following_count\n            - tweet_count\n            - listed_count\n          type: object\n        url:\n          description: The URL specified in the user's profile.\n          type: string\n        username:\n          $ref: \"#/components/schemas/UserName\"\n        verified:\n          description: Indicate if this user is a verified Twitter User.\n          type: boolean\n        withheld:\n          $ref: \"#/components/schemas/UserWithheld\"\n      required:\n        - id\n        - name\n        - username\n    UserID:\n      description: Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.\n      example: \"712089797812\"\n      pattern: ^[0-9]{1,19}$\n      type: string\n    UserLookupResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/User\"\n          minItems: 1\n          type: array\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n      type: object\n    UserName:\n      description: The Twitter handle (screen name) of this user.\n      pattern: ^[A-Za-z0-9_]{1,15}$\n      type: string\n    UserWithheld:\n      description: Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).\n      properties:\n        country_codes:\n          description: Provides a list of countries where this content is not available.\n          items:\n            $ref: \"#/components/schemas/CountryCode\"\n          minItems: 1\n          type: array\n          uniqueItems: true\n        scope:\n          description: Indicates that the content being withheld is a `user`.\n          enum:\n            - user\n          type: string\n      required:\n        - country_codes\n      type: object\n    Video:\n      allOf:\n        - $ref: \"#/components/schemas/CommonMediaFields\"\n      properties:\n        duration_ms:\n          type: integer\n        non_public_metrics:\n          description: Nonpublic engagement metrics for the Media at the time of the request.\n          properties:\n            playback_0_count:\n              description: Number of users who made it through 0% of the video.\n              format: int32\n              type: integer\n            playback_100_count:\n              description: Number of users who made it through 100% of the video.\n              format: int32\n              type: integer\n            playback_25_count:\n              description: Number of users who made it through 25% of the video.\n              format: int32\n              type: integer\n            playback_50_count:\n              description: Number of users who made it through 50% of the video.\n              format: int32\n              type: integer\n            playback_75_count:\n              description: Number of users who made it through 75% of the video.\n              format: int32\n              type: integer\n          type: object\n        organic_metrics:\n          description: Organic nonpublic engagement metrics for the Media at the time of the request.\n          properties:\n            playback_0_count:\n              description: Number of users who made it through 0% of the video.\n              format: int32\n              type: integer\n            playback_100_count:\n              description: Number of users who made it through 100% of the video.\n              format: int32\n              type: integer\n            playback_25_count:\n              description: Number of users who made it through 25% of the video.\n              format: int32\n              type: integer\n            playback_50_count:\n              description: Number of users who made it through 50% of the video.\n              format: int32\n              type: integer\n            playback_75_count:\n              description: Number of users who made it through 75% of the video.\n              format: int32\n              type: integer\n            view_count:\n              description: Number of times this video has been viewed.\n              format: int32\n              type: integer\n          type: object\n        preview_image_url:\n          format: uri\n          type: string\n        promoted_metrics:\n          description: Promoted nonpublic engagement metrics for the Media at the time of the request.\n          properties:\n            playback_0_count:\n              description: Number of users who made it through 0% of the video.\n              format: int32\n              type: integer\n            playback_100_count:\n              description: Number of users who made it through 100% of the video.\n              format: int32\n              type: integer\n            playback_25_count:\n              description: Number of users who made it through 25% of the video.\n              format: int32\n              type: integer\n            playback_50_count:\n              description: Number of users who made it through 50% of the video.\n              format: int32\n              type: integer\n            playback_75_count:\n              description: Number of users who made it through 75% of the video.\n              format: int32\n              type: integer\n            view_count:\n              description: Number of times this video has been viewed.\n              format: int32\n              type: integer\n          type: object\n        public_metrics:\n          description: Engagement metrics for the Media at the time of the request.\n          properties:\n            view_count:\n              description: Number of times this video has been viewed.\n              format: int32\n              type: integer\n          type: object\n        type:\n          enum:\n            - video\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/twitter.com/labs/2.13/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/twitter.com/labs/2.13/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/labs/2/tweets\": get: responses: 200: contents: application/json: generate schema: field errors: item: oneOf: collect variants: Problem: sum types with same names not implemented",
	"NotImplemented": [
		"sum types with same names"
	]
}