{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/qiudaoke/flowable-userguide"
		},
		"file": {
			"name": "flowable-oas-decision.yaml",
			"size": 0,
			"path": "V6.5.0/docs/public-api/references/openapi/decision/flowable-oas-decision.yaml",
			"byteSize": 31386,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'http://localhost:8080/flowable-rest/dmn-api'\n  - url: 'https://localhost:8080/flowable-rest/dmn-api'\ninfo:\n  description: \u003e-\n    # flowable / flow??b(??)l /\n\n\n    - a compact and highly efficient workflow and Business Process Management\n    (BPM) platform for developers, system admins and business users.\n\n    - a lightning fast, tried and tested BPMN 2 process engine written in Java.\n    It is Apache 2.0 licensed open source, with a committed community.\n\n    - can run embedded in a Java application, or as a service on a server, a\n    cluster, and in the cloud. It integrates perfectly with Spring. With a rich\n    Java and REST API, it is the ideal engine for orchestrating human or system\n    activities.\n  version: v1\n  title: Flowable Decision REST API\n  contact:\n    name: Flowable\n    url: 'http://www.flowable.org/'\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: DMN Rule Service\n  - name: Decision Tables\n  - name: Deployment\n  - name: Engine\n  - name: Historic Decision Executions\npaths:\n  /dmn-history/historic-decision-executions:\n    get:\n      tags:\n        - Historic Decision Executions\n      summary: List of historic decision executions\n      description: ''\n      operationId: listHistoricDecisionExecutions\n      parameters:\n        - name: id\n          in: query\n          description: Only return historic decision executions with the given id.\n          required: false\n          schema:\n            type: string\n        - name: decisionDefinitionId\n          in: query\n          description: \u003e-\n            Only return historic decision executions with the given definition\n            id.\n          required: false\n          schema:\n            type: string\n        - name: deploymentId\n          in: query\n          description: \u003e-\n            Only return historic decision executions with the given deployment\n            id.\n          required: false\n          schema:\n            type: string\n        - name: decisionKey\n          in: query\n          description: \u003e-\n            Only return historic decision executions with the given decision\n            key.\n          required: false\n          schema:\n            type: string\n        - name: activityId\n          in: query\n          description: Only return historic decision executions with the given activity id.\n          required: false\n          schema:\n            type: string\n        - name: executionId\n          in: query\n          description: \u003e-\n            Only return historic decision executions with the given execution\n            id.\n          required: false\n          schema:\n            type: string\n        - name: instanceId\n          in: query\n          description: Only return historic decision executions with the given instance id.\n          required: false\n          schema:\n            type: string\n        - name: failed\n          in: query\n          description: Only return historic decision executions with the failed state.\n          required: false\n          schema:\n            type: string\n        - name: tenantId\n          in: query\n          description: Only return historic decision executions with the given tenant id.\n          required: false\n          schema:\n            type: string\n        - name: tenantIdLike\n          in: query\n          description: Only return historic decision executions like the given tenant id.\n          required: false\n          schema:\n            type: string\n        - name: sort\n          in: query\n          description: 'Property to sort on, to be used together with the order.'\n          required: false\n          schema:\n            type: string\n            enum:\n              - startTime\n              - endTime\n              - tenantId\n      responses:\n        '200':\n          description: \u003e-\n            Indicates request was successful and the historic decision\n            executions are returned\n          content:\n            application/json:\n              schema:\n                $ref: \u003e-\n                  #/components/schemas/DataResponseHistoricDecisionExecutionResponse\n        '400':\n          description: \u003e-\n            Indicates a parameter was passed in the wrong format. The\n            status-message contains additional information.\n      security:\n        - basicAuth: []\n  '/dmn-history/historic-decision-executions/{historicDecisionExecutionId}':\n    get:\n      tags:\n        - Historic Decision Executions\n      summary: Get a historic decision execution\n      description: ''\n      operationId: getHistoricDecisionExecution\n      parameters:\n        - name: historicDecisionExecutionId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Indicates request was successful and the historic decision execution\n            is returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HistoricDecisionExecutionResponse'\n        '404':\n          description: Indicates the requested historic decision execution was not found.\n      security:\n        - basicAuth: []\n  '/dmn-history/historic-decision-executions/{historicDecisionExecutionId}/auditdata':\n    get:\n      tags:\n        - Historic Decision Executions\n      summary: Get a historic decision execution audit content\n      description: ''\n      operationId: getHistoricDecisionExecutionAuditData\n      parameters:\n        - name: historicDecisionExecutionId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Indicates the historic decision execution has been found and the\n            audit data has been returned.\n          content:\n            application/json:\n              schema:\n                type: string\n        '404':\n          description: \u003e-\n            Indicates the requested historic decision execution was not found.\n            The status-description contains additional information.\n      security:\n        - basicAuth: []\n  /dmn-management/engine:\n    get:\n      tags:\n        - Engine\n      summary: Get DMN engine info\n      description: \u003e-\n        Returns a read-only view of the DMN engine that is used in this\n        REST-service.\n      operationId: getEngineInfo\n      responses:\n        '200':\n          description: Indicates the engine info is returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DmnEngineInfoResponse'\n      security:\n        - basicAuth: []\n  /dmn-repository/decision-tables:\n    get:\n      tags:\n        - Decision Tables\n      summary: List of decision tables\n      description: ''\n      operationId: listDecisionTables\n      parameters:\n        - name: category\n          in: query\n          description: Only return decision tables with the given category.\n          required: false\n          schema:\n            type: string\n        - name: categoryLike\n          in: query\n          description: Only return decision tables with a category like the given name.\n          required: false\n          schema:\n            type: string\n        - name: categoryNotEquals\n          in: query\n          description: Only return decision tables which don?t have the given category.\n          required: false\n          schema:\n            type: string\n        - name: key\n          in: query\n          description: Only return decision tables with the given key.\n          required: false\n          schema:\n            type: string\n        - name: keyLike\n          in: query\n          description: Only return decision tables with a name like the given key.\n          required: false\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: Only return decision tables with the given name.\n          required: false\n          schema:\n            type: string\n        - name: nameLike\n          in: query\n          description: Only return decision tables with a name like the given name.\n          required: false\n          schema:\n            type: string\n        - name: resourceName\n          in: query\n          description: Only return decision tables with the given resource name.\n          required: false\n          schema:\n            type: string\n        - name: resourceNameLike\n          in: query\n          description: \u003e-\n            Only return decision tables with a name like the given resource\n            name.\n          required: false\n          schema:\n            type: string\n        - name: version\n          in: query\n          description: Only return decision tables with the given version.\n          required: false\n          schema:\n            type: integer\n        - name: latest\n          in: query\n          description: \u003e-\n            Only return the latest decision tables versions. Can only be used\n            together with key and keyLike parameters, using any other parameter\n            will result in a 400-response.\n          required: false\n          schema:\n            type: boolean\n        - name: deploymentId\n          in: query\n          description: Only return decision tables with the given category.\n          required: false\n          schema:\n            type: string\n        - name: tenantId\n          in: query\n          description: Only return decision tables with the given tenant ID.\n          required: false\n          schema:\n            type: string\n        - name: sort\n          in: query\n          description: 'Property to sort on, to be used together with the order.'\n          required: false\n          schema:\n            type: string\n            enum:\n              - name\n              - id\n              - key\n              - category\n              - deploymentId\n              - version\n      responses:\n        '200':\n          description: \u003e-\n            Indicates request was successful and the process-definitions are\n            returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataResponseDecisionTableResponse'\n        '400':\n          description: \u003e-\n            Indicates a parameter was passed in the wrong format or that latest\n            is used with other parameters other than key and keyLike. The\n            status-message contains additional information.\n      security:\n        - basicAuth: []\n  '/dmn-repository/decision-tables/{decisionTableId}':\n    get:\n      tags:\n        - Decision Tables\n      summary: Get a decision table\n      description: ''\n      operationId: getDecisionTable\n      parameters:\n        - name: decisionTableId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Indicates request was successful and the decision table is returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DecisionTableResponse'\n        '404':\n          description: Indicates the requested decision table was not found.\n      security:\n        - basicAuth: []\n  '/dmn-repository/decision-tables/{decisionTableId}/model':\n    get:\n      tags:\n        - Decision Tables\n      summary: Get a decision table DMN (definition) model\n      description: ''\n      operationId: getDecisionTableModel\n      parameters:\n        - name: decisionTableId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Indicates the decision table was found and the model is returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DmnDefinition'\n        '404':\n          description: Indicates the requested decision table was not found.\n      security:\n        - basicAuth: []\n  '/dmn-repository/decision-tables/{decisionTableId}/resourcedata':\n    get:\n      tags:\n        - Decision Tables\n      summary: Get a decision table resource content\n      description: ''\n      operationId: getDecisionTableResource\n      parameters:\n        - name: decisionTableId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Indicates both decision table and resource have been found and the\n            resource data has been returned.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                  format: byte\n        '404':\n          description: \u003e-\n            Indicates the requested decision table was not found or there is no\n            resource with the given id present in the decision table. The\n            status-description contains additional information.\n      security:\n        - basicAuth: []\n  /dmn-repository/deployments:\n    get:\n      tags:\n        - Deployment\n      summary: List of decision table deployments\n      description: ''\n      operationId: listDecisionTableDeployments\n      parameters:\n        - name: name\n          in: query\n          description: Only return decision table deployments with the given name.\n          required: false\n          schema:\n            type: string\n        - name: nameLike\n          in: query\n          description: \u003e-\n            Only return decision table deployments with a name like the given\n            name.\n          required: false\n          schema:\n            type: string\n        - name: category\n          in: query\n          description: Only return decision table deployments with the given category.\n          required: false\n          schema:\n            type: string\n        - name: categoryNotEquals\n          in: query\n          description: \u003e-\n            Only return decision table deployments which don?t have the given\n            category.\n          required: false\n          schema:\n            type: string\n        - name: tenantId\n          in: query\n          description: Only return decision table deployments with the given tenantId.\n          required: false\n          schema:\n            type: string\n        - name: tenantIdLike\n          in: query\n          description: \u003e-\n            Only return decision table deployments with a tenantId like the\n            given value.\n          required: false\n          schema:\n            type: string\n        - name: withoutTenantId\n          in: query\n          description: \u003e-\n            If true, only returns decision table deployments without a tenantId\n            set. If false, the withoutTenantId parameter is ignored.\n          required: false\n          schema:\n            type: boolean\n        - name: sort\n          in: query\n          description: 'Property to sort on, to be used together with the order.'\n          required: false\n          schema:\n            type: string\n            enum:\n              - id\n              - name\n              - deployTime\n              - tenantId\n      responses:\n        '200':\n          description: Indicates the request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataResponseDmnDeploymentResponse'\n      security:\n        - basicAuth: []\n    post:\n      tags:\n        - Deployment\n      summary: Create a new decision table deployment\n      description: \u003e-\n        The request body should contain data of type multipart/form-data. There\n        should be exactly one file in the request, any additional files will be\n        ignored. The deployment name is the name of the file-field passed in. If\n        multiple resources need to be deployed in a single deployment, compress\n        the resources in a zip and make sure the file-name ends with .bar or\n        .zip.\n\n\n        An additional parameter (form-field) can be passed in the request body\n        with name tenantId. The value of this field will be used as the id of\n        the tenant this deployment is done in.\n      operationId: uploadDecisionTableDeployment\n      parameters:\n        - name: tenantId\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DmnDeploymentResponse'\n        '201':\n          description: Indicates the deployment was created.\n        '400':\n          description: \u003e-\n            Indicates there was no content present in the request body or the\n            content mime-type is not supported for deployment. The\n            status-description contains additional information.\n      security:\n        - basicAuth: []\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n  '/dmn-repository/deployments/{deploymentId}':\n    get:\n      tags:\n        - Deployment\n      summary: Get a decision table deployment\n      description: ''\n      operationId: getDecisionTableDeployment\n      parameters:\n        - name: deploymentId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Indicates the deployment was found and returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DmnDeploymentResponse'\n        '404':\n          description: Indicates the requested deployment was not found.\n      security:\n        - basicAuth: []\n    delete:\n      tags:\n        - Deployment\n      summary: Delete a decision table deployment\n      description: ''\n      operationId: deleteDecisionTableDeployment\n      parameters:\n        - name: deploymentId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: \u003e-\n            Indicates the deployment was found and has been deleted.\n            Response-body is intentionally empty.\n        '404':\n          description: Indicates the requested deployment was not found.\n      security:\n        - basicAuth: []\n  '/dmn-repository/deployments/{deploymentId}/resourcedata/{resourceName}':\n    get:\n      tags:\n        - Deployment\n      summary: Get a decision table deployment resource content\n      description: \u003e-\n        The response body will contain the binary resource-content for the\n        requested resource. The response content-type will be the same as the\n        type returned in the resources mimeType property. Also, a\n        content-disposition header is set, allowing browsers to download the\n        file instead of displaying it.\n      operationId: getDecisionTableDeploymentResource\n      parameters:\n        - name: deploymentId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: resourceName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Indicates both deployment and resource have been found and the\n            resource data has been returned.\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  type: string\n                  format: byte\n        '404':\n          description: \u003e-\n            Indicates the requested deployment was not found or there is no\n            resource with the given id present in the deployment. The\n            status-description contains additional information.\n      security:\n        - basicAuth: []\n  /dmn-rule/execute:\n    post:\n      tags:\n        - DMN Rule Service\n      summary: Execute a Decision\n      description: ''\n      operationId: executeDecision\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DmnRuleServiceResponse'\n        '201':\n          description: Indicates the Decision has been executed\n      security:\n        - basicAuth: []\n      requestBody:\n        $ref: '#/components/requestBodies/DmnRuleServiceRequest'\n  /dmn-rule/execute/single-result:\n    post:\n      tags:\n        - DMN Rule Service\n      summary: Execute a Decision expecting a single result\n      description: ''\n      operationId: executeDecisionByKeySingleResult\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DmnRuleServiceSingleResponse'\n        '201':\n          description: Indicates the Decision has been executed\n        '500':\n          description: Indicates the Decision returned multiple results\n      security:\n        - basicAuth: []\n      requestBody:\n        $ref: '#/components/requestBodies/DmnRuleServiceRequest'\ncomponents:\n  schemas:\n    DataResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n        total:\n          type: integer\n          format: int64\n        start:\n          type: integer\n          format: int32\n        sort:\n          type: string\n        order:\n          type: string\n        size:\n          type: integer\n          format: int32\n    DataResponseDecisionTableResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/DecisionTableResponse'\n        total:\n          type: integer\n          format: int64\n        start:\n          type: integer\n          format: int32\n        sort:\n          type: string\n        order:\n          type: string\n        size:\n          type: integer\n          format: int32\n    DataResponseDmnDeploymentResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/DmnDeploymentResponse'\n        total:\n          type: integer\n          format: int64\n        start:\n          type: integer\n          format: int32\n        sort:\n          type: string\n        order:\n          type: string\n        size:\n          type: integer\n          format: int32\n    DataResponseHistoricDecisionExecutionResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/HistoricDecisionExecutionResponse'\n        total:\n          type: integer\n          format: int64\n        start:\n          type: integer\n          format: int32\n        sort:\n          type: string\n        order:\n          type: string\n        size:\n          type: integer\n          format: int32\n    Decision:\n      type: object\n      properties:\n        id:\n          type: string\n        label:\n          type: string\n        description:\n          type: string\n        extensionElements:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/DmnExtensionElement'\n        attributes:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/DmnExtensionAttribute'\n        name:\n          type: string\n        question:\n          type: string\n        allowedAnswers:\n          type: string\n        expression:\n          $ref: '#/components/schemas/Expression'\n    DecisionTableResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: 46b0379c-c0a1-11e6-bc93-6ab56fad108a\n        url:\n          type: string\n          example: \u003e-\n            http://localhost:8080/flowable-rest/dmn-api/dmn-repository/decision-tables/46b0379c-c0a1-11e6-bc93-6ab56fad108a\n        category:\n          type: string\n          example: dmnTest\n        name:\n          type: string\n          example: Decision Table One\n        key:\n          type: string\n          example: DecisionTableOne\n        description:\n          type: string\n          example: This is a simple description\n        version:\n          type: integer\n          format: int32\n          example: 3\n        resourceName:\n          type: string\n          example: dmn-DecisionTableOne.dmn\n        deploymentId:\n          type: string\n          example: 46aa6b3a-c0a1-11e6-bc93-6ab56fad108a\n        parentDeploymentId:\n          type: string\n          example: '5001'\n        tenantId:\n          type: string\n          example: 'null'\n    DmnDefinition:\n      type: object\n      properties:\n        id:\n          type: string\n        label:\n          type: string\n        description:\n          type: string\n        extensionElements:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/DmnExtensionElement'\n        attributes:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/DmnExtensionAttribute'\n        name:\n          type: string\n        expressionLanguage:\n          type: string\n        typeLanguage:\n          type: string\n        namespace:\n          type: string\n        itemDefinitions:\n          type: array\n          items:\n            $ref: '#/components/schemas/ItemDefinition'\n        decisions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Decision'\n    DmnDeploymentResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: 03ab310d-c1de-11e6-a4f4-62ce84ef239e\n        name:\n          type: string\n          example: dmnTest\n        deploymentTime:\n          type: string\n          format: date-time\n          example: '2016-12-14T10:16:37.000+01:00'\n        category:\n          type: string\n          example: dmnExamples\n        url:\n          type: string\n          example: \u003e-\n            http://localhost:8080/flowable-rest/dmn-api/dmn-repository/deployments/03ab310d-c1de-11e6-a4f4-62ce84ef239e\n        parentDeploymentId:\n          type: string\n          example: '17510'\n        tenantId:\n          type: string\n          example: 'null'\n    DmnEngineInfoResponse:\n      type: object\n      properties:\n        name:\n          type: string\n          example: default\n        resourceUrl:\n          type: string\n          example: 'file://flowable-dmn/flowable.dmn.cfg.xml'\n        exception:\n          type: string\n          example: 'null'\n        version:\n          type: string\n          example: 6.2.0\n    DmnExtensionAttribute:\n      type: object\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n        namespacePrefix:\n          type: string\n        namespace:\n          type: string\n    DmnExtensionElement:\n      type: object\n      properties:\n        id:\n          type: string\n        label:\n          type: string\n        description:\n          type: string\n        extensionElements:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/DmnExtensionElement'\n        attributes:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/DmnExtensionAttribute'\n        name:\n          type: string\n        namespacePrefix:\n          type: string\n        namespace:\n          type: string\n        elementText:\n          type: string\n        childElements:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/DmnExtensionElement'\n    DmnRuleServiceRequest:\n      type: object\n      properties:\n        decisionKey:\n          type: string\n        tenantId:\n          type: string\n        parentDeploymentId:\n          type: string\n        inputVariables:\n          type: array\n          items:\n            $ref: '#/components/schemas/EngineRestVariable'\n    DmnRuleServiceResponse:\n      type: object\n      properties:\n        resultVariables:\n          type: array\n          items:\n            type: array\n            items:\n              $ref: '#/components/schemas/EngineRestVariable'\n        url:\n          type: string\n    DmnRuleServiceSingleResponse:\n      type: object\n      properties:\n        resultVariables:\n          type: array\n          items:\n            $ref: '#/components/schemas/EngineRestVariable'\n        url:\n          type: string\n    EngineRestVariable:\n      type: object\n      properties:\n        name:\n          type: string\n          example: myVariable\n          description: Name of the variable\n        type:\n          type: string\n          example: string\n          description: Type of the variable.\n        value:\n          type: object\n          example: test\n          description: Value of the variable.\n        valueUrl:\n          type: string\n          example: 'http://....'\n    Expression:\n      type: object\n      properties:\n        id:\n          type: string\n        label:\n          type: string\n        description:\n          type: string\n        extensionElements:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/DmnExtensionElement'\n        attributes:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/DmnExtensionAttribute'\n        typeRef:\n          type: string\n    HistoricDecisionExecutionResponse:\n      type: object\n      properties:\n        id:\n          type: string\n        url:\n          type: string\n        decisionDefinitionId:\n          type: string\n        deploymentId:\n          type: string\n        activityId:\n          type: string\n        executionId:\n          type: string\n        instanceId:\n          type: string\n        failed:\n          type: boolean\n        startTime:\n          type: string\n          format: date-time\n        endTime:\n          type: string\n          format: date-time\n        tenantId:\n          type: string\n    ItemDefinition:\n      type: object\n      properties:\n        id:\n          type: string\n        label:\n          type: string\n        description:\n          type: string\n        extensionElements:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/DmnExtensionElement'\n        attributes:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/DmnExtensionAttribute'\n        name:\n          type: string\n        typeDefinition:\n          type: string\n  requestBodies:\n    DmnRuleServiceRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DmnRuleServiceRequest'\n      description: request\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n",
			"canonicalURL": "/github.com/qiudaoke/flowable-userguide@f9269440e64eab847fd9235a5cc63216797d082f/-/blob/V6.5.0/docs/public-api/references/openapi/decision/flowable-oas-decision.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/qiudaoke/flowable-userguide/blob/f9269440e64eab847fd9235a5cc63216797d082f/V6.5.0/docs/public-api/references/openapi/decision/flowable-oas-decision.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/dmn-repository/deployments/{deploymentId}/resourcedata/{resourceName}\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}