{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/pangaea-data-publisher/fuji"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "fuji_server/yaml/swagger.yaml",
			"byteSize": 20982,
			"content": "openapi: 3.0.1\ninfo:\n  title: F-UJI\n  description: A Service for Evaluating Research Data Objects Based on \u003ca href ='https://doi.org/10.5281/zenodo.3775793'\u003eFAIRsFAIR\n    Metrics\u003c/a\u003e. \u003cp\u003e This work was supported by the \u003ca href='https://www.fairsfair.eu/'\u003eFAIRsFAIR\u003c/a\u003e\n    project (H2020-INFRAEOSC-2018-2020 Grant Agreement 831558).\n  contact:\n    email: anusuriya.devaraju@googlemail.com\n    x-additional-email: rhuber@marum.de\n  license:\n    name: MIT License\n    url: https://opensource.org/licenses/MIT\n  version: 1.2.0\nexternalDocs:\n  description: Find out more about F-UJI\n  url: https://github.com/pangaea-data-publisher/fuji\nservers:\n- url: http://localhost:1071/fuji/api/v1\n  description: Development Server\ntags:\n- name: FAIR object\n  description: FAIRness assessment of a data object\n- name: FAIR metric\n  description: FAIRsFAIR assessment metrics\npaths:\n  /evaluate:\n    post:\n      tags:\n      - FAIR object\n      security:\n        - basicAuth: []\n      description: Evaluate FAIRness of a data object based on its identifier\n      operationId: assess_by_id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/body'\n            example:\n              object_identifier: https://doi.org/10.1594/PANGAEA.908011\n              test_debug: true\n              metadata_service_endpoint: http://ws.pangaea.de/oai/provider\n              metadata_service_type: oai_pmh\n              use_datacite: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FAIRResults'\n        \"400\":\n          description: Invalid identifier supplied\n        \"401\":\n          description: Authentication information is missing or invalid\n          headers:\n            WWW_Authenticate:\n              style: simple\n              explode: false\n              schema:\n                type: string\n        \"404\":\n          description: Object not found\n      x-openapi-router-controller: fuji_server.controllers.fair_object_controller\n  /metrics:\n    get:\n      tags:\n      - FAIR metric\n      summary: Return all metrics and their definitions\n      operationId: get_metrics\n      responses:\n        \"200\":\n          description: Metrics are successfully retrieved\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Metrics'\n        \"400\":\n          description: Invalid request supplied\n        \"401\":\n          description: Authentication information is missing or invalid\n          headers:\n            WWW_Authenticate:\n              style: simple\n              explode: false\n              schema:\n                type: string\n        \"404\":\n          description: Object not found\n      x-openapi-router-controller: fuji_server.controllers.fair_metric_controller\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n      x-basicInfoFunc: fuji_server.controllers.authorization_controller.checkUser\n  schemas:\n    FAIRResults:\n      type: object\n      properties:\n        test_id:\n          type: string\n        request:\n          type: object\n          additionalProperties: true\n        timestamp:\n          type: string\n          format: date-time\n        expiry_timestamp:\n          type: string\n          format: date-time\n        metric_specification:\n          type: string\n          format: uri\n        metric_version:\n          type: string\n        software_version:\n          type: string\n        total_metrics:\n          type: integer\n        summary:\n          type: object\n          additionalProperties: true\n        results:\n          type: array\n          items:\n            anyOf:\n            - $ref: '#/components/schemas/Uniqueness'\n            - $ref: '#/components/schemas/Persistence'\n            - $ref: '#/components/schemas/CoreMetadata'\n            - $ref: '#/components/schemas/IdentifierIncluded'\n            - $ref: '#/components/schemas/Searchable'\n            - $ref: '#/components/schemas/DataAccessLevel'\n            - $ref: '#/components/schemas/FormalMetadata'\n            - $ref: '#/components/schemas/SemanticVocabulary'\n            - $ref: '#/components/schemas/RelatedResource'\n            - $ref: '#/components/schemas/DataContentMetadata'\n            - $ref: '#/components/schemas/License'\n            - $ref: '#/components/schemas/DataProvenance'\n            - $ref: '#/components/schemas/CommunityEndorsedStandard'\n            - $ref: '#/components/schemas/DataFileFormat'\n            - $ref: '#/components/schemas/MetadataPreserved'\n            - $ref: '#/components/schemas/StandardisedProtocolData'\n            - $ref: '#/components/schemas/StandardisedProtocolMetadata'\n    FAIRResultCommon:\n      required:\n      - id\n      - metric_identifier\n      - metric_name\n      - score\n      - test_status\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n        metric_identifier:\n          type: string\n        metric_name:\n          type: string\n        metric_tests:\n          type: object\n          additionalProperties:\n           $ref: '#/components/schemas/FAIRResultEvaluationCriterium'\n        test_status:\n          type: string\n          default: fail\n          enum:\n          - pass\n          - fail\n          - indeterminate\n        score:\n          $ref: '#/components/schemas/FAIRResultCommon_score'\n        maturity:\n          type: integer\n          default: 0\n    Uniqueness:\n      allOf:\n      - $ref: '#/components/schemas/FAIRResultCommon'\n      - type: object\n        properties:\n          output:\n            $ref: '#/components/schemas/Uniqueness_output'\n          test_debug:\n            $ref: '#/components/schemas/Debug'\n    Persistence:\n      allOf:\n      - $ref: '#/components/schemas/FAIRResultCommon'\n      - type: object\n        properties:\n          output:\n            $ref: '#/components/schemas/Persistence_output'\n          test_debug:\n            $ref: '#/components/schemas/Debug'\n    CoreMetadata:\n      allOf:\n      - $ref: '#/components/schemas/FAIRResultCommon'\n      - type: object\n        properties:\n          output:\n            $ref: '#/components/schemas/CoreMetadata_output'\n          test_debug:\n            $ref: '#/components/schemas/Debug'\n    IdentifierIncluded:\n      allOf:\n      - $ref: '#/components/schemas/FAIRResultCommon'\n      - type: object\n        properties:\n          output:\n            $ref: '#/components/schemas/IdentifierIncluded_output'\n          test_debug:\n            $ref: '#/components/schemas/Debug'\n    Searchable:\n      allOf:\n      - $ref: '#/components/schemas/FAIRResultCommon'\n      - type: object\n        properties:\n          output:\n            $ref: '#/components/schemas/Searchable_output'\n          test_debug:\n            $ref: '#/components/schemas/Debug'\n    License:\n      allOf:\n      - $ref: '#/components/schemas/FAIRResultCommon'\n      - type: object\n        properties:\n          output:\n            $ref: '#/components/schemas/License_output'\n          test_debug:\n            $ref: '#/components/schemas/Debug'\n    DataAccessLevel:\n      allOf:\n      - $ref: '#/components/schemas/FAIRResultCommon'\n      - type: object\n        properties:\n          output:\n            $ref: '#/components/schemas/DataAccess_output'\n          test_debug:\n            $ref: '#/components/schemas/Debug'\n    RelatedResource:\n      allOf:\n      - $ref: '#/components/schemas/FAIRResultCommon'\n      - type: object\n        properties:\n          output:\n            $ref: '#/components/schemas/RelatedResource_output'\n          test_debug:\n            $ref: '#/components/schemas/Debug'\n    CommunityEndorsedStandard:\n      allOf:\n      - $ref: '#/components/schemas/FAIRResultCommon'\n      - type: object\n        properties:\n          output:\n            $ref: '#/components/schemas/CommunityEndorsedStandard_output'\n          test_debug:\n            $ref: '#/components/schemas/Debug'\n    DataFileFormat:\n      allOf:\n      - $ref: '#/components/schemas/FAIRResultCommon'\n      - type: object\n        properties:\n          output:\n            $ref: '#/components/schemas/DataFileFormat_output'\n          test_debug:\n            $ref: '#/components/schemas/Debug'\n    DataProvenance:\n      allOf:\n      - $ref: '#/components/schemas/FAIRResultCommon'\n      - type: object\n        properties:\n          output:\n            $ref: '#/components/schemas/DataProvenance_output'\n          test_debug:\n            $ref: '#/components/schemas/Debug'\n    DataContentMetadata:\n      allOf:\n      - $ref: '#/components/schemas/FAIRResultCommon'\n      - type: object\n        properties:\n          output:\n            $ref: '#/components/schemas/DataContentMetadata_output'\n          test_debug:\n            $ref: '#/components/schemas/Debug'\n    FormalMetadata:\n      allOf:\n      - $ref: '#/components/schemas/FAIRResultCommon'\n      - type: object\n        properties:\n          output:\n            $ref: '#/components/schemas/FormalMetadata_output'\n          test_debug:\n            $ref: '#/components/schemas/Debug'\n    SemanticVocabulary:\n      allOf:\n      - $ref: '#/components/schemas/FAIRResultCommon'\n      - type: object\n        properties:\n          output:\n            $ref: '#/components/schemas/SemanticVocabulary_output'\n          test_debug:\n            $ref: '#/components/schemas/Debug'\n    MetadataPreserved:\n      allOf:\n        - $ref: '#/components/schemas/FAIRResultCommon'\n        - type: object\n          properties:\n            output:\n              $ref: '#/components/schemas/MetadataPreserved_output'\n            test_debug:\n              $ref: '#/components/schemas/Debug'\n    StandardisedProtocolData:\n      allOf:\n        - $ref: '#/components/schemas/FAIRResultCommon'\n        - type: object\n          properties:\n            output:\n              $ref: '#/components/schemas/StandardisedProtocolData_output'\n            test_debug:\n              $ref: '#/components/schemas/Debug'\n    StandardisedProtocolMetadata:\n      allOf:\n        - $ref: '#/components/schemas/FAIRResultCommon'\n        - type: object\n          properties:\n            output:\n              $ref: '#/components/schemas/StandardisedProtocolMetadata_output'\n            test_debug:\n              $ref: '#/components/schemas/Debug'\n    FAIRResultEvaluationCriterium:\n      type: object\n      properties:\n        metric_test_name:\n          type: string\n        metric_test_score:\n          type: number\n          nullable: true\n        metric_test_maturity:\n          type: integer\n          nullable: true\n        metric_test_status:\n          type: string\n          default: fail\n          enum:\n          - pass\n          - fail\n    FAIRResultCommon_score:\n      type: object\n      properties:\n        earned:\n          type: number\n          default: 0\n        total:\n          type: integer\n          format: int32\n          default: 0\n    Uniqueness_output:\n      type: object\n      properties:\n        guid:\n          type: string\n        guid_scheme:\n          type: string\n    Persistence_output:\n      type: object\n      properties:\n        pid:\n          type: string\n        pid_scheme:\n          type: string\n        resolvable_status:\n          type: boolean\n          default: false\n        resolved_url:\n          type: string\n    output_core_metadata_found:\n      required:\n      - creator\n      - keywords\n      - object_identifier\n      - publication_date\n      - publisher\n      - summary\n      - title\n      type: object\n      properties:\n        creator:\n          type: array\n          items:\n            type: string\n        title:\n          type: string\n        publisher:\n          type: string\n        publication_date:\n          type: string\n          format: date\n        summary:\n          type: string\n        keywords:\n          type: string\n        object_identifier:\n          type: string\n    CoreMetadata_output:\n      type: object\n      properties:\n        core_metadata_status:\n          type: string\n          enum:\n          - insufficent metadata\n          - partial metadata\n          - all metadata\n        core_metadata_found:\n          $ref: '#/components/schemas/output_core_metadata_found'\n        core_metadata_source:\n          type: array\n          items:\n            type: string\n    IdentifierIncluded_output:\n      type: object\n      properties:\n        object_identifier_included:\n          type: string\n        object_content_identifier_included:\n          type: array\n          items:\n            $ref: '#/components/schemas/IdentifierIncluded_output_inner'\n    output_search_mechanisms:\n      type: object\n      properties:\n        mechanism:\n          type: string\n          enum:\n          - metadata registry\n          - structured data\n        mechanism_info:\n          type: array\n          items:\n            type: string\n    Searchable_output:\n      type: object\n      properties:\n        search_mechanisms:\n          type: array\n          items:\n            $ref: '#/components/schemas/output_search_mechanisms'\n    License_output:\n      type: array\n      items:\n        $ref: '#/components/schemas/License_output_inner'\n    DataAccess_output:\n      type: object\n      properties:\n        access_level:\n          type: string\n          enum:\n          - public\n          - embargoed\n          - restricted\n          - closed\n          - metadataonly\n        access_details:\n          type: object\n    RelatedResource_output:\n      type: array\n      items:\n        $ref: '#/components/schemas/RelatedResource_output_inner'\n    DataFileFormat_output:\n      type: array\n      items:\n        $ref: '#/components/schemas/DataFileFormat_output_inner'\n    CommunityEndorsedStandard_output:\n      type: array\n      items:\n        $ref: '#/components/schemas/CommunityEndorsedStandard_output_inner'\n    DataProvenance_output:\n      type: object\n      properties:\n        provenance_metadata_included:\n          $ref: '#/components/schemas/DataProvenance_output_inner'\n        structured_provenance_available:\n          $ref: '#/components/schemas/DataProvenance_output_inner'\n    DataContentMetadata_output:\n      type: object\n      properties:\n        object_type:\n          type: string\n        data_content_descriptor:\n          type: array\n          items:\n            $ref: '#/components/schemas/DataContentMetadata_output_inner'\n    FormalMetadata_output:\n      type: array\n      items:\n        $ref: '#/components/schemas/FormalMetadata_output_inner'\n    SemanticVocabulary_output:\n      type: array\n      items:\n        $ref: '#/components/schemas/SemanticVocabulary_output_inner'\n    MetadataPreserved_output:\n      type: object\n      properties:\n        metadata_preservation_method:\n          type: array\n          items:\n            type: string\n            enum:\n              - datacite\n              - tombstone\n    Metrics:\n      type: object\n      properties:\n        total:\n          type: integer\n        metrics:\n          type: array\n          items:\n            $ref: '#/components/schemas/Metric'\n      example:\n        total: 0\n        metrics:\n          metric_identifier: FsF-F1-01D\n          metric_short_name: Globally Unique Identifier\n          metric_name: Data is assigned with a globally unique identifier.\n          description: A data object may be assigned with a globally unique identifier such that it can be referenced unambiguously by humans or machines. Globally unique means an identifier should be associated with only one resource at any time. Examples of unique identifiers of data are Internationalized Resource Identifier (IRI), Uniform Resource Identifier (URI) such as URL and URN, Digital Object Identifier (DOI), the Handle System, identifiers.org, w3id.org and Archival Resource Key (ARK). A data repository may assign a globally unique identifier to your data or metadata when you publish and make it available through their services.\n          fair_principle: F1\n          evaluation_mechanism: Identifier is considered unique if it is successfully validated through https://pythonhosted.org/IDUtils/. Supported schemes are ISBN10, ISBN13, ISSN, ISTC, DOI, Handle, EAN8, EAN13, ISNI ORCID, ARK, PURL, LSID, URN, Bibcode, arXiv, PubMed ID, PubMed Central ID, GND.\n          created_by: FAIRsFAIR\n          date_created: 2020-07-08\n          date_updated: 2020-07-08\n          version: 0.3\n          total_score: 1\n    Metric:\n      type: object\n      properties:\n        metric_identifier:\n          type: string\n        metric_name:\n          type: string\n        description:\n          type: string\n        fair_principle:\n          type: string\n        evaluation_mechanism:\n          type: string\n        date_created:\n          type: string\n          format: date\n        date_updated:\n          type: string\n          format: date\n        created_by:\n          type: string\n        version:\n          type: number\n          format: double\n        total_score:\n          type: integer\n          format: int32\n    Debug:\n      type: array\n      items:\n        type: string\n    body:\n      required:\n      - object_identifier\n      type: object\n      properties:\n        object_identifier:\n          type: string\n          description: The full identifier of data object that needs to be evaluated\n        test_debug:\n          type: boolean\n          description: Indicate if the detailed evaluation procedure of the metrics\n            should to be included in the response\n          default: false\n        metadata_service_endpoint:\n          type: string\n          description: The URL of the catalogue endpoint (e.g. OAI-PMH data-provider)\n        metadata_service_type:\n          type: string\n        use_datacite:\n          type: boolean\n          description: Indicates if DataCite content negotiation (using the DOI) shall be used to collect metadata\n        oaipmh_endpoint:\n          deprecated: true\n          type: string\n          description: (Deprecated) The URL of the OAI-PMH data-provider\n    IdentifierIncluded_output_inner:\n      type: object\n      properties:\n        content_identifier_included:\n          type: string\n        content_identifier_active:\n          type: boolean\n          default: false\n    License_output_inner:\n      type: object\n      properties:\n        license:\n          type: string\n        OSI_approved:\n          type: boolean\n          default: false\n        details_url:\n          type: string\n    RelatedResource_output_inner:\n      type: object\n      properties:\n        related_resource:\n          type: string\n        relation_type:\n          type: string\n    CommunityEndorsedStandard_output_inner:\n      type: object\n      properties:\n        metadata_standard:\n          type: string\n        urls:\n          type: array\n          items:\n            type: string\n        subject_areas:\n          type: array\n          items:\n            type: string\n    DataFileFormat_output_inner:\n      type: object\n      properties:\n        file_uri:\n          type: string\n        mime_type:\n          type: string\n        is_preferred_format:\n          type: boolean\n          default: false\n        preference_reason:\n          type: array\n          items:\n            type: string\n        subject_areas:\n          type: array\n          items:\n            type: string\n    DataProvenance_output_inner:\n      type: object\n      properties:\n        is_available:\n          type: boolean\n          default: true\n        provenance_metadata:\n          type: array\n          items:\n            type: object\n            additionalProperties:\n              type: string\n    DataContentMetadata_output_inner:\n      type: object\n      properties:\n        descriptor:\n          type: string\n        descriptor_value:\n          type: string\n        matches_content:\n          type: boolean\n          default: false\n    FormalMetadata_output_inner:\n      type: object\n      properties:\n        serialization_format:\n          type: string\n        source:\n          type: string\n          enum:\n          - typed_link\n          - content_negotiate\n          - structured_data\n          - sparql_endpoint\n        is_metadata_found:\n          type: boolean\n          default: false\n    SemanticVocabulary_output_inner:\n      type: object\n      properties:\n        namespace:\n          type: string\n        is_namespace_active:\n          type: boolean\n          default: false\n    StandardisedProtocolData_output:\n      type: object\n      properties:\n        standard_data_protocol:\n          type: string\n    StandardisedProtocolMetadata_output:\n      type: object\n      properties:\n        standard_metadata_protocol:\n          type: string\n  responses:\n    UnauthorizedError:\n      description: Authentication information is missing or invalid\n      headers:\n        WWW_Authenticate:\n          style: simple\n          explode: false\n          schema:\n            type: string\n",
			"canonicalURL": "/github.com/pangaea-data-publisher/fuji@9b252acee95f854b8278bd7bf22e1f612577ebb9/-/blob/fuji_server/yaml/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/pangaea-data-publisher/fuji/blob/9b252acee95f854b8278bd7bf22e1f612577ebb9/fuji_server/yaml/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/evaluate\": post: responses: 200: contents: application/json: generate schema: field results: item: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}