{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/shortcut/openapi.yml",
			"byteSize": 306828,
			"content": "openapi: 3.0.1\ninfo:\n  title: Shortcut API\n  description: |\n    This is a generated connector for [Shortcut API v3.0](https://shortcut.com/api/rest/v3) OpenAPI specification.\n    The Shortcut API bring the flow to your software team's workflow. Plan, collaborate, build, and measure success with Shortcut.\n    The Shortcut API provides a greater amount of control over your organization’s Shortcut data than what is possible using the Shortcut web app. \n    You can use this API to build custom integrations or automate even more of your organization’s workflow.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n  \n    Create a [Shortcut account](https://shortcut.com) and obtain tokens by following [this guide](https://shortcut.com/api/rest/v3#Authentication).\n  x-ballerina-display:\n    label: Shortcut\n    iconPath: \"icon.png\"\n  version: \"3.0\"\nservers:\n- url: https://api.app.shortcut.com/\nsecurity:\n- api_token: []\npaths:\n  /api/v3/categories:\n    get:\n      summary: List Categories\n      description: List Categories returns a list of all Categories and their attributes.\n      operationId: listCategories\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Category'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    post:\n      summary: Create Category\n      description: Create Category allows you to create a new Category in Shortcut.\n      operationId: createCategory\n      requestBody:\n        description: Create category data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCategory'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Category'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateCategory\n  /api/v3/categories/{category-public-id}:\n    get:\n      summary: Get Category\n      description: Get Category returns information about the selected Category.\n      operationId: getCategory\n      parameters:\n      - name: category-public-id\n        in: path\n        description: The unique ID of the Category.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Category'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    put:\n      summary: Update Category\n      description: Update Category allows you to replace a Category name with another\n        name. If you try to name a Category something that already exists, you will\n        receive a 422 response.\n      operationId: updateCategory\n      parameters:\n      - name: category-public-id\n        in: path\n        description: The unique ID of the Category you wish to update.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Update category data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCategory'\n        required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Category'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: UpdateCategory\n    delete:\n      summary: Delete Category\n      description: Delete Category can be used to delete any Category.\n      operationId: deleteCategory\n      parameters:\n      - name: category-public-id\n        in: path\n        description: The unique ID of the Category.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/categories/{category-public-id}/milestones:\n    get:\n      summary: List Category Milestones\n      description: List Category Milestones returns a list of all Milestones with\n        the Category.\n      operationId: listCategoryMilestones\n      parameters:\n      - name: category-public-id\n        in: path\n        description: The unique ID of the Category.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Milestone'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/entity-templates:\n    get:\n      summary: List Entity Templates\n      description: List all the entity templates for an organization.\n      operationId: listEntityTemplates\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/EntityTemplate'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    post:\n      summary: Create Entity Template\n      description: Create a new entity template for your organization.\n      operationId: createEntityTemplate\n      requestBody:\n        description: Request paramaters for creating an entirely new entity template.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateEntityTemplate'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityTemplate'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateEntityTemplate\n  /api/v3/entity-templates/disable:\n    put:\n      summary: Disable Story Templates\n      description: Disables the Story Template feature for the given Organization.\n      operationId: disableStoryTemplates\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/entity-templates/enable:\n    put:\n      summary: Enable Story Templates\n      description: Enables the Story Template feature for the given Organization.\n      operationId: enableStoryTemplates\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/entity-templates/{entity-template-public-id}:\n    get:\n      summary: Get Entity Template\n      description: Get Entity Template returns information about a given entity template.\n      operationId: getEntityTemplate\n      parameters:\n      - name: entity-template-public-id\n        in: path\n        description: The unique ID of the entity template.\n        required: true\n        schema:\n          type: string\n          format: uuid\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityTemplate'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    put:\n      summary: Update Entity Template\n      description: Update an entity template's name or its contents.\n      operationId: updateEntityTemplate\n      parameters:\n      - name: entity-template-public-id\n        in: path\n        description: The unique ID of the template to be updated.\n        required: true\n        schema:\n          type: string\n          format: uuid\n      requestBody:\n        description: |-\n          Request parameters for changing either a template's name or any of\n            the attributes it is designed to pre-populate.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateEntityTemplate'\n        required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityTemplate'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: UpdateEntityTemplate\n    delete:\n      summary: Delete Entity Template\n      operationId: deleteEntityTemplate\n      parameters:\n      - name: entity-template-public-id\n        in: path\n        description: The unique ID of the entity template.\n        required: true\n        schema:\n          type: string\n          format: uuid\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/epic-workflow:\n    get:\n      summary: Get Epic Workflow\n      description: Get Epic Workflow returns the Epic Workflow for the organization.\n      operationId: getEpicWorkflow\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EpicWorkflow'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/epics:\n    get:\n      summary: List Epics\n      description: List Epics returns a list of all Epics and their attributes.\n      operationId: listEpics\n      # requestBody:\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/ListEpics'\n      #   required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/EpicSlim'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: ListEpics\n    post:\n      summary: Create Epic\n      description: Create Epic allows you to create a new Epic in Shortcut.\n      operationId: createEpic\n      requestBody:\n        description: Create epic data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateEpic'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Epic'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateEpic\n  /api/v3/epics/{epic-public-id}:\n    get:\n      summary: Get Epic\n      description: Get Epic returns information about the selected Epic.\n      operationId: getEpic\n      parameters:\n      - name: epic-public-id\n        in: path\n        description: The unique ID of the Epic.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Epic'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    put:\n      summary: Update Epic\n      description: Update Epic can be used to update numerous fields in the Epic.\n        The only required parameter is Epic ID, which can be found in the Shortcut\n        UI.\n      operationId: updateEpic\n      parameters:\n      - name: epic-public-id\n        in: path\n        description: The unique ID of the Epic.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Update epic data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateEpic'\n        required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Epic'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: UpdateEpic\n    delete:\n      summary: Delete Epic\n      description: Delete Epic can be used to delete the Epic. The only required parameter\n        is Epic ID.\n      operationId: deleteEpic\n      parameters:\n      - name: epic-public-id\n        in: path\n        description: The unique ID of the Epic.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/epics/{epic-public-id}/comments:\n    get:\n      summary: List Epic Comments\n      description: Get a list of all Comments on an Epic.\n      operationId: listEpicComments\n      parameters:\n      - name: epic-public-id\n        in: path\n        description: The unique ID of the Epic.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ThreadedComment'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    post:\n      summary: Create Epic Comment\n      description: This endpoint allows you to create a threaded Comment on an Epic.\n      operationId: createEpicComment\n      parameters:\n      - name: epic-public-id\n        in: path\n        description: The ID of the associated Epic.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Create epic comment data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateEpicComment'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThreadedComment'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateEpicComment\n  /api/v3/epics/{epic-public-id}/comments/{comment-public-id}:\n    get:\n      summary: Get Epic Comment\n      description: This endpoint returns information about the selected Epic Comment.\n      operationId: getEpicComment\n      parameters:\n      - name: epic-public-id\n        in: path\n        description: The ID of the associated Epic.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: comment-public-id\n        in: path\n        description: The ID of the Comment.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThreadedComment'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    put:\n      summary: Update Epic Comment\n      description: This endpoint allows you to update a threaded Comment on an Epic.\n      operationId: updateEpicComment\n      parameters:\n      - name: epic-public-id\n        in: path\n        description: The ID of the associated Epic.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: comment-public-id\n        in: path\n        description: The ID of the Comment.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Update epic comment data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateComment'\n        required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThreadedComment'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: UpdateComment\n    post:\n      summary: Create Epic Comment Comment\n      description: This endpoint allows you to create a nested Comment reply to an\n        existing Epic Comment.\n      operationId: createEpicCommentComment\n      parameters:\n      - name: epic-public-id\n        in: path\n        description: The ID of the associated Epic.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: comment-public-id\n        in: path\n        description: The ID of the parent Epic Comment.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Create epic comment comment data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCommentComment'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThreadedComment'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateCommentComment\n    delete:\n      summary: Delete Epic Comment\n      description: This endpoint allows you to delete a Comment from an Epic.\n      operationId: deleteEpicComment\n      parameters:\n      - name: epic-public-id\n        in: path\n        description: The ID of the associated Epic.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: comment-public-id\n        in: path\n        description: The ID of the Comment.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/epics/{epic-public-id}/stories:\n    get:\n      summary: List Epic Stories\n      description: Get a list of all Stories in an Epic.\n      operationId: listEpicStories\n      parameters:\n      - name: epic-public-id\n        in: path\n        description: The unique ID of the Epic.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      # requestBody:\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/GetEpicStories'\n      #   required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StorySlim'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: GetEpicStories\n  /api/v3/epics/{epic-public-id}/unlink-productboard:\n    post:\n      summary: Unlink Productboard from Epic\n      description: This endpoint allows you to unlink a productboard epic.\n      operationId: unlinkProductboardFromEpic\n      parameters:\n      - name: epic-public-id\n        in: path\n        description: The unique ID of the Epic.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/external-link/stories:\n    get:\n      summary: Get External Link Stories\n      description: Get Stories which have a given External Link associated with them.\n      operationId: getExternalLinkStories\n      # requestBody:\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/GetExternalLinkStoriesParams'\n      #   required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StorySlim'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: GetExternalLinkStoriesParams\n  /api/v3/files:\n    get:\n      summary: List Files\n      description: List Files returns a list of all UploadedFiles in the workspace.\n      operationId: listFiles\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UploadedFile'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    # post:\n    #   summary: Upload Files\n    #   description: |-\n    #     Upload Files uploads one or many files and optionally associates them with a story.\n    #        Use the multipart/form-data content-type to upload.\n    #        Each `file` key should contain a separate file.\n    #        Each UploadedFile's name comes from the Content-Disposition header \"filename\" directive for that field.\n    #   operationId: uploadFiles\n    #   requestBody:\n    #     content:\n    #       multipart/form-data:\n    #         schema:\n    #           required:\n    #           - file0\n    #           properties:\n    #             story_id:\n    #               type: integer\n    #               description: The story ID that these files will be associated with.\n    #               format: int64\n    #             file0:\n    #               type: string\n    #               description: A file upload. At least one is required.\n    #               format: binary\n    #             file1:\n    #               type: string\n    #               description: Optional additional files.\n    #               format: binary\n    #             file2:\n    #               type: string\n    #               description: Optional additional files.\n    #               format: binary\n    #             file3:\n    #               type: string\n    #               description: Optional additional files.\n    #               format: binary\n    #     required: true\n    #   responses:\n    #     201:\n    #       description: Resource\n    #       content:\n    #         application/json:\n    #           schema:\n    #             type: array\n    #             items:\n    #               $ref: '#/components/schemas/UploadedFile'\n    #     400:\n    #       description: Schema mismatch\n    #       content: {}\n    #     404:\n    #       description: Resource does not exist\n    #       content: {}\n    #     422:\n    #       description: Unprocessable\n    #       content: {}\n  /api/v3/files/{file-public-id}:\n    get:\n      summary: Get File\n      description: Get File returns information about the selected UploadedFile.\n      operationId: getFile\n      parameters:\n      - name: file-public-id\n        in: path\n        description: The File’s unique ID.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UploadedFile'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    put:\n      summary: Update File\n      description: Update File updates the properties of an UploadedFile (but not\n        its content).\n      operationId: updateFile\n      parameters:\n      - name: file-public-id\n        in: path\n        description: The unique ID assigned to the file in Shortcut.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Update file data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateFile'\n        required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UploadedFile'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: UpdateFile\n    delete:\n      summary: Delete File\n      description: Delete File deletes a previously uploaded file.\n      operationId: deleteFile\n      parameters:\n      - name: file-public-id\n        in: path\n        description: The File’s unique ID.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/groups:\n    get:\n      summary: List Groups\n      description: A group in our API maps to a \"Team\" within the Shortcut Product.\n        A Team is a collection of Users that can be associated to Stories, Epics,\n        and Iterations within Shortcut.\n      operationId: listGroups\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Group'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    post:\n      summary: Create Group\n      operationId: createGroup\n      requestBody:\n        description: Create group data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateGroup'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n        400:\n          description: Schema mismatch\n          content: {}\n        403:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnusableEntitlementError'\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateGroup\n  /api/v3/groups/disable:\n    put:\n      summary: Disable Groups\n      description: Disables Groups for the current workspace2\n      operationId: disableGroups\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/groups/enable:\n    put:\n      summary: Enable Groups\n      description: Enables Groups for the current workspace2\n      operationId: enableGroups\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/groups/{group-public-id}:\n    get:\n      summary: Get Group\n      operationId: getGroup\n      parameters:\n      - name: group-public-id\n        in: path\n        description: The unique ID of the Group.\n        required: true\n        schema:\n          type: string\n          format: uuid\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    put:\n      summary: Update Group\n      operationId: updateGroup\n      parameters:\n      - name: group-public-id\n        in: path\n        description: The unique ID of the Group.\n        required: true\n        schema:\n          type: string\n          format: uuid\n      requestBody:\n        description: Update group data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateGroup'\n        required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n        400:\n          description: Schema mismatch\n          content: {}\n        403:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnusableEntitlementError'\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: UpdateGroup\n  /api/v3/groups/{group-public-id}/stories:\n    get:\n      summary: List Group Stories\n      description: List the Stories assigned to the Group. (By default, limited to\n        1,000).\n      operationId: listGroupStories\n      parameters:\n      - name: group-public-id\n        in: path\n        description: The unique ID of the Group.\n        required: true\n        schema:\n          type: string\n          format: uuid\n      # requestBody:\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/ListGroupStories'\n      #   required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StorySlim'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: ListGroupStories\n  /api/v3/iterations:\n    get:\n      summary: List Iterations\n      operationId: listIterations\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/IterationSlim'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    post:\n      summary: Create Iteration\n      operationId: createIteration\n      requestBody:\n        description: Create iteration data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateIteration'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Iteration'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateIteration\n  /api/v3/iterations/disable:\n    put:\n      summary: Disable Iterations\n      description: Disables Iterations for the current workspace\n      operationId: disableIterations\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/iterations/enable:\n    put:\n      summary: Enable Iterations\n      description: Enables Iterations for the current workspace\n      operationId: enableIterations\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/iterations/{iteration-public-id}:\n    get:\n      summary: Get Iteration\n      operationId: getIteration\n      parameters:\n      - name: iteration-public-id\n        in: path\n        description: The unique ID of the Iteration.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Iteration'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    put:\n      summary: Update Iteration\n      operationId: updateIteration\n      parameters:\n      - name: iteration-public-id\n        in: path\n        description: The unique ID of the Iteration.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Update iteration data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateIteration'\n        required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Iteration'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: UpdateIteration\n    delete:\n      summary: Delete Iteration\n      operationId: deleteIteration\n      parameters:\n      - name: iteration-public-id\n        in: path\n        description: The unique ID of the Iteration.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/iterations/{iteration-public-id}/stories:\n    get:\n      summary: List Iteration Stories\n      description: Get a list of all Stories in an Iteration.\n      operationId: listIterationStories\n      parameters:\n      - name: iteration-public-id\n        in: path\n        description: The unique ID of the Iteration.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      # requestBody:\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/GetIterationStories'\n      #   required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StorySlim'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: GetIterationStories\n  /api/v3/labels:\n    get:\n      summary: List Labels\n      description: List Labels returns a list of all Labels and their attributes.\n      operationId: listLabels\n      # requestBody:\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/ListLabels'\n      #   required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Label'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: ListLabels\n    post:\n      summary: Create Label\n      description: Create Label allows you to create a new Label in Shortcut.\n      operationId: createLabel\n      requestBody:\n        description: Request parameters for creating a Label on a Shortcut Story.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateLabelParams'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateLabelParams\n  /api/v3/labels/{label-public-id}:\n    get:\n      summary: Get Label\n      description: Get Label returns information about the selected Label.\n      operationId: getLabel\n      parameters:\n      - name: label-public-id\n        in: path\n        description: The unique ID of the Label.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    put:\n      summary: Update Label\n      description: Update Label allows you to replace a Label name with another name.\n        If you try to name a Label something that already exists, you will receive\n        a 422 response.\n      operationId: updateLabel\n      parameters:\n      - name: label-public-id\n        in: path\n        description: The unique ID of the Label you wish to update.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Update label data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateLabel'\n        required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: UpdateLabel\n    delete:\n      summary: Delete Label\n      description: Delete Label can be used to delete any Label.\n      operationId: deleteLabel\n      parameters:\n      - name: label-public-id\n        in: path\n        description: The unique ID of the Label.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/labels/{label-public-id}/epics:\n    get:\n      summary: List Label Epics\n      description: List all of the Epics with the Label.\n      operationId: listLabelEpics\n      parameters:\n      - name: label-public-id\n        in: path\n        description: The unique ID of the Label.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/EpicSlim'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/labels/{label-public-id}/stories:\n    get:\n      summary: List Label Stories\n      description: List all of the Stories with the Label.\n      operationId: listLabelStories\n      parameters:\n      - name: label-public-id\n        in: path\n        description: The unique ID of the Label.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      # requestBody:\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/GetLabelStories'\n      #   required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StorySlim'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: GetLabelStories\n  /api/v3/linked-files:\n    get:\n      summary: List Linked Files\n      description: List Linked Files returns a list of all Linked-Files and their\n        attributes.\n      operationId: listLinkedFiles\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LinkedFile'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    post:\n      summary: Create Linked File\n      description: Create Linked File allows you to create a new Linked File in Shortcut.\n      operationId: createLinkedFile\n      requestBody:\n        description: Create linked file data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateLinkedFile'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkedFile'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateLinkedFile\n  /api/v3/linked-files/{linked-file-public-id}:\n    get:\n      summary: Get Linked File\n      description: Get File returns information about the selected Linked File.\n      operationId: getLinkedFile\n      parameters:\n      - name: linked-file-public-id\n        in: path\n        description: The unique identifier of the linked file.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkedFile'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    put:\n      summary: Update Linked File\n      description: Updated Linked File allows you to update properties of a previously\n        attached Linked-File.\n      operationId: updateLinkedFile\n      parameters:\n      - name: linked-file-public-id\n        in: path\n        description: The unique identifier of the linked file.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Update linked file data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateLinkedFile'\n        required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkedFile'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: UpdateLinkedFile\n    delete:\n      summary: Delete Linked File\n      description: Delete Linked File can be used to delete any previously attached\n        Linked-File.\n      operationId: deleteLinkedFile\n      parameters:\n      - name: linked-file-public-id\n        in: path\n        description: The unique identifier of the linked file.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/member:\n    get:\n      summary: Get Current Member Info\n      description: Returns information about the authenticated member.\n      operationId: getCurrentMemberInfo\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MemberInfo'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/members:\n    get:\n      summary: List Members\n      description: List Members returns information about members of the organization.\n      operationId: listMembers\n      # requestBody:\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/ListMembers'\n      #   required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Member'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: ListMembers\n  /api/v3/members/{member-public-id}:\n    get:\n      summary: Get Member\n      description: Returns information about a Member.\n      operationId: getMember\n      parameters:\n      - name: member-public-id\n        in: path\n        description: The Member's unique ID.\n        required: true\n        schema:\n          type: string\n          format: uuid\n      # requestBody:\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/GetMember'\n      #   required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Member'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: GetMember\n  /api/v3/milestones:\n    get:\n      summary: List Milestones\n      description: List Milestones returns a list of all Milestones and their attributes.\n      operationId: listMilestones\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Milestone'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    post:\n      summary: Create Milestone\n      description: Create Milestone allows you to create a new Milestone in Shortcut.\n      operationId: createMilestone\n      requestBody:\n        description: Create milestone data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMilestone'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Milestone'\n        400:\n          description: Schema mismatch\n          content: {}\n        403:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnusableEntitlementError'\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateMilestone\n  /api/v3/milestones/{milestone-public-id}:\n    get:\n      summary: Get Milestone\n      description: Get Milestone returns information about a chosen Milestone.\n      operationId: getMilestone\n      parameters:\n      - name: milestone-public-id\n        in: path\n        description: The ID of the Milestone.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Milestone'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    put:\n      summary: Update Milestone\n      description: Update Milestone can be used to update Milestone properties.\n      operationId: updateMilestone\n      parameters:\n      - name: milestone-public-id\n        in: path\n        description: The ID of the Milestone.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Update milestone data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateMilestone'\n        required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Milestone'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: UpdateMilestone\n    delete:\n      summary: Delete Milestone\n      description: Delete Milestone can be used to delete any Milestone.\n      operationId: deleteMilestone\n      parameters:\n      - name: milestone-public-id\n        in: path\n        description: The ID of the Milestone.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/milestones/{milestone-public-id}/epics:\n    get:\n      summary: List Milestone Epics\n      description: List all of the Epics within the Milestone.\n      operationId: listMilestoneEpics\n      parameters:\n      - name: milestone-public-id\n        in: path\n        description: The ID of the Milestone.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/EpicSlim'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/projects:\n    get:\n      summary: List Projects\n      description: List Projects returns a list of all Projects and their attributes.\n      operationId: listProjects\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Project'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    post:\n      summary: Create Project\n      description: Create Project is used to create a new Shortcut Project.\n      operationId: createProject\n      requestBody:\n        description: Create project data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateProject'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateProject\n  /api/v3/projects/{project-public-id}:\n    get:\n      summary: Get Project\n      description: Get Project returns information about the selected Project.\n      operationId: getProject\n      parameters:\n      - name: project-public-id\n        in: path\n        description: The unique ID of the Project.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    put:\n      summary: Update Project\n      description: Update Project can be used to change properties of a Project.\n      operationId: updateProject\n      parameters:\n      - name: project-public-id\n        in: path\n        description: The unique ID of the Project.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Update project data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateProject'\n        required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: UpdateProject\n    delete:\n      summary: Delete Project\n      description: Delete Project can be used to delete a Project. Projects can only\n        be deleted if all associated Stories are moved or deleted. In the case that\n        the Project cannot be deleted, you will receive a 422 response.\n      operationId: deleteProject\n      parameters:\n      - name: project-public-id\n        in: path\n        description: The unique ID of the Project.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/projects/{project-public-id}/stories:\n    get:\n      summary: List Stories\n      description: List Stories returns a list of all Stories in a selected Project\n        and their attributes.\n      operationId: listStories\n      parameters:\n      - name: project-public-id\n        in: path\n        description: The unique ID of the Project.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      # requestBody:\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/GetProjectStories'\n      #   required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StorySlim'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: GetProjectStories\n  /api/v3/repositories:\n    get:\n      summary: List Repositories\n      description: List Repositories returns a list of all Repositories and their\n        attributes.\n      operationId: listRepositories\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Repository'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/repositories/{repo-public-id}:\n    get:\n      summary: Get Repository\n      description: Get Repository returns information about the selected Repository.\n      operationId: getRepository\n      parameters:\n      - name: repo-public-id\n        in: path\n        description: The unique ID of the Repository.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Repository'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/search:\n    get:\n      summary: Search\n      description: Search lets you search Epics and Stories based on desired parameters.\n        Since ordering of the results can change over time (due to search ranking\n        decay, new Epics and Stories being created), the `next` value from the previous\n        response can be used as the path and query string for the next page to ensure\n        stable ordering.\n      operationId: search\n      # requestBody:\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/Search'\n      #   required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchResults'\n        400:\n          description: '**Either:** (1) Schema mismatch **or** (2) Maximum of 1000\n            search results exceeded '\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MaxSearchResultsExceededError'\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: Search\n  /api/v3/search/epics:\n    get:\n      summary: Search Epics\n      description: Search Epics lets you search Epics based on desired parameters.\n        Since ordering of stories can change over time (due to search ranking decay,\n        new Epics being created), the `next` value from the previous response can\n        be used as the path and query string for the next page to ensure stable ordering.\n      operationId: searchEpics\n      # requestBody:\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/Search'\n      #   required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EpicSearchResults'\n        400:\n          description: '**Either:** (1) Schema mismatch **or** (2) Maximum of 1000\n            search results exceeded '\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MaxSearchResultsExceededError'\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: Search\n  /api/v3/search/stories:\n    get:\n      summary: Search Stories\n      description: Search Stories lets you search Stories based on desired parameters.\n        Since ordering of stories can change over time (due to search ranking decay,\n        new stories being created), the `next` value from the previous response can\n        be used as the path and query string for the next page to ensure stable ordering.\n      operationId: searchStories\n      # requestBody:\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/Search'\n      #   required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StorySearchResults'\n        400:\n          description: '**Either:** (1) Schema mismatch **or** (2) Maximum of 1000\n            search results exceeded '\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MaxSearchResultsExceededError'\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: Search\n  /api/v3/stories:\n    post:\n      summary: Create Story\n      description: Create Story is used to add a new story to your Shortcut.\n      operationId: createStory\n      requestBody:\n        description: Request parameters for creating a story.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateStoryParams'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Story'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateStoryParams\n  /api/v3/stories/bulk:\n    put:\n      summary: Update Multiple Stories\n      description: Update Multiple Stories allows you to make changes to numerous\n        stories at once.\n      operationId: updateMultipleStories\n      requestBody:\n        description: Update multiple stories data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateStories'\n        required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StorySlim'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: UpdateStories\n    post:\n      summary: Create Multiple Stories\n      description: Create Multiple Stories allows you to create multiple stories in\n        a single request using the same syntax as [Create Story](https://shortcut.com/api/#create-story).\n      operationId: createMultipleStories\n      requestBody:\n        description: Create multiple stories\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateStories'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StorySlim'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateStories\n    delete:\n      summary: Delete Multiple Stories\n      description: Delete Multiple Stories allows you to delete multiple archived\n        stories at once.\n      operationId: deleteMultipleStories\n      # requestBody:\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/DeleteStories'\n      #   required: true\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: DeleteStories\n  /api/v3/stories/search:\n    post:\n      summary: Search Stories (Old)\n      description: Search Stories lets you search Stories based on desired parameters.\n      operationId: searchStoriesOld\n      requestBody:\n        description:  Search stories (old) data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchStories'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StorySlim'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: SearchStories\n  /api/v3/stories/{story-public-id}:\n    get:\n      summary: Get Story\n      description: Get Story returns information about a chosen Story.\n      operationId: getStory\n      parameters:\n      - name: story-public-id\n        in: path\n        description: The ID of the Story.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Story'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    put:\n      summary: Update Story\n      description: Update Story can be used to update Story properties.\n      operationId: updateStory\n      parameters:\n      - name: story-public-id\n        in: path\n        description: The unique identifier of this story.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Update story data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateStory'\n        required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Story'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: UpdateStory\n    delete:\n      summary: Delete Story\n      description: Delete Story can be used to delete any Story.\n      operationId: deleteStory\n      parameters:\n      - name: story-public-id\n        in: path\n        description: The ID of the Story.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/stories/{story-public-id}/comments:\n    post:\n      summary: Create Story Comment\n      description: Create Comment allows you to create a Comment on any Story.\n      operationId: createStoryComment\n      parameters:\n      - name: story-public-id\n        in: path\n        description: The ID of the Story that the Comment is in.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Create story comment data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateStoryComment'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StoryComment'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateStoryComment\n  /api/v3/stories/{story-public-id}/comments/{comment-public-id}:\n    get:\n      summary: Get Story Comment\n      description: Get Comment is used to get Comment information.\n      operationId: getStoryComment\n      parameters:\n      - name: story-public-id\n        in: path\n        description: The ID of the Story that the Comment is in.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: comment-public-id\n        in: path\n        description: The ID of the Comment.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StoryComment'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    put:\n      summary: Update Story Comment\n      description: Update Comment replaces the text of the existing Comment.\n      operationId: updateStoryComment\n      parameters:\n      - name: story-public-id\n        in: path\n        description: The ID of the Story that the Comment is in.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: comment-public-id\n        in: path\n        description: The ID of the Comment\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Update story comment data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateStoryComment'\n        required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StoryComment'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: UpdateStoryComment\n    delete:\n      summary: Delete Story Comment\n      description: Delete a Comment from any story.\n      operationId: deleteStoryComment\n      parameters:\n      - name: story-public-id\n        in: path\n        description: The ID of the Story that the Comment is in.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: comment-public-id\n        in: path\n        description: The ID of the Comment.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/stories/{story-public-id}/comments/{comment-public-id}/reactions:\n    post:\n      summary: Create Story Reaction\n      description: Create a reaction to a story comment.\n      operationId: createStoryReaction\n      parameters:\n      - name: story-public-id\n        in: path\n        description: The ID of the Story that the Comment is in.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: comment-public-id\n        in: path\n        description: The ID of the Comment.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Create story reaction data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrDeleteStoryReaction'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StoryReaction'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateOrDeleteStoryReaction\n    delete:\n      summary: Delete Story Reaction\n      description: Delete a reaction from any story comment.\n      operationId: deleteStoryReaction\n      parameters:\n      - name: story-public-id\n        in: path\n        description: The ID of the Story that the Comment is in.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: comment-public-id\n        in: path\n        description: The ID of the Comment.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      # requestBody:\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/CreateOrDeleteStoryReaction'\n      #   required: true\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateOrDeleteStoryReaction\n  /api/v3/stories/{story-public-id}/history:\n    get:\n      summary: Story History\n      operationId: storyHistory\n      parameters:\n      - name: story-public-id\n        in: path\n        description: The ID of the Story.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/History'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/stories/{story-public-id}/tasks:\n    post:\n      summary: Create Task\n      description: Create Task is used to create a new task in a Story.\n      operationId: createTask\n      parameters:\n      - name: story-public-id\n        in: path\n        description: The ID of the Story that the Task will be in.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Create task data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTask'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateTask\n  /api/v3/stories/{story-public-id}/tasks/{task-public-id}:\n    get:\n      summary: Get Task\n      description: Returns information about a chosen Task.\n      operationId: getTask\n      parameters:\n      - name: story-public-id\n        in: path\n        description: The unique ID of the Story this Task is associated with.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: task-public-id\n        in: path\n        description: The unique ID of the Task.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    put:\n      summary: Update Task\n      description: Update Task can be used to update Task properties.\n      operationId: updateTask\n      parameters:\n      - name: story-public-id\n        in: path\n        description: The unique identifier of the parent Story.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: task-public-id\n        in: path\n        description: The unique identifier of the Task you wish to update.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Update task data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTask'\n        required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: UpdateTask\n    delete:\n      summary: Delete Task\n      description: Delete Task can be used to delete any previously created Task on\n        a Story.\n      operationId: deleteTask\n      parameters:\n      - name: story-public-id\n        in: path\n        description: The unique ID of the Story this Task is associated with.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: task-public-id\n        in: path\n        description: The unique ID of the Task.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/story-links:\n    post:\n      summary: Create Story Link\n      description: |-\n        Story Links (called Story Relationships in the UI) allow you create semantic relationships between two stories. The parameters read like an active voice grammatical sentence:  subject -\u003e verb -\u003e object.\n\n        The subject story acts on the object Story; the object story is the direct object of the sentence.\n\n        The subject story \"blocks\", \"duplicates\", or \"relates to\" the object story.  Examples:\n        - \"story 5 blocks story 6” -- story 6 is now \"blocked\" until story 5 is moved to a Done workflow state.\n        - \"story 2 duplicates story 1” -- Story 2 represents the same body of work as Story 1 (and should probably be archived).\n        - \"story 7 relates to story 3”\n      operationId: createStoryLink\n      requestBody:\n        description: Create story link data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateStoryLink'\n        required: true\n      responses:\n        201:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StoryLink'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: CreateStoryLink\n  /api/v3/story-links/{story-link-public-id}:\n    get:\n      summary: Get Story Link\n      description: Returns the stories and their relationship for the given Story\n        Link.\n      operationId: getStoryLink\n      parameters:\n      - name: story-link-public-id\n        in: path\n        description: The unique ID of the Story Link.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StoryLink'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n    put:\n      summary: Update Story Link\n      description: Updates the stories and/or the relationship for the given Story\n        Link.\n      operationId: updateStoryLink\n      parameters:\n      - name: story-link-public-id\n        in: path\n        description: The unique ID of the Story Link.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Update story link data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateStoryLink'\n        required: true\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StoryLink'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n      x-codegen-request-body-name: UpdateStoryLink\n    delete:\n      summary: Delete Story Link\n      description: Removes the relationship between the stories for the given Story\n        Link.\n      operationId: deleteStoryLink\n      parameters:\n      - name: story-link-public-id\n        in: path\n        description: The unique ID of the Story Link.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/workflows:\n    get:\n      summary: List Workflows\n      description: List Workflows returns a list of all Workflows in the organization.\n      operationId: listWorkflows\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Workflow'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\n  /api/v3/workflows/{workflow-public-id}:\n    get:\n      summary: Get Workflow\n      description: Get Workflow returns information about a chosen Workflow.\n      operationId: getWorkflow\n      parameters:\n      - name: workflow-public-id\n        in: path\n        description: The ID of the Workflow.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Workflow'\n        400:\n          description: Schema mismatch\n          content: {}\n        404:\n          description: Resource does not exist\n          content: {}\n        422:\n          description: Unprocessable\n          content: {}\ncomponents:\n  schemas:\n    BasicWorkspaceInfo:\n      required:\n      - estimate_scale\n      - url_slug\n      type: object\n      properties:\n        url_slug:\n          type: string\n        estimate_scale:\n          type: array\n          items:\n            type: integer\n            format: int64\n    Branch:\n      required:\n      - created_at\n      - deleted\n      - entity_type\n      - id\n      - merged_branch_ids\n      - name\n      - persistent\n      - pull_requests\n      - repository_id\n      - updated_at\n      - url\n      type: object\n      properties:\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        deleted:\n          type: boolean\n          description: A true/false boolean indicating if the Branch has been deleted.\n        name:\n          type: string\n          description: The name of the Branch.\n        persistent:\n          type: boolean\n          description: A true/false boolean indicating if the Branch is persistent;\n            e.g. master.\n        updated_at:\n          type: string\n          description: The time/date the Branch was updated.\n          format: date-time\n          nullable: true\n        pull_requests:\n          type: array\n          description: An array of PullRequests attached to the Branch (there is usually\n            only one).\n          items:\n            $ref: '#/components/schemas/PullRequest'\n        merged_branch_ids:\n          type: array\n          description: The IDs of the Branches the Branch has been merged into.\n          items:\n            type: integer\n            format: int64\n        id:\n          type: integer\n          description: The unique ID of the Branch.\n          format: int64\n          nullable: true\n        url:\n          type: string\n          description: The URL of the Branch.\n        repository_id:\n          type: integer\n          description: The ID of the Repository that contains the Branch.\n          format: int64\n          nullable: true\n        created_at:\n          type: string\n          description: The time/date the Branch was created.\n          format: date-time\n          nullable: true\n      description: Branch refers to a VCS branch. Branches are feature branches associated\n        with Shortcut Stories.\n    Category:\n      required:\n      - archived\n      - color\n      - created_at\n      - entity_type\n      - external_id\n      - id\n      - name\n      - type\n      - updated_at\n      type: object\n      properties:\n        archived:\n          type: boolean\n          description: A true/false boolean indicating if the Category has been archived.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The hex color to be displayed with the Category (for example,\n            \"#ff0000\").\n          format: css-color\n          nullable: true\n        name:\n          type: string\n          description: The name of the Category.\n        type:\n          type: string\n          description: The type of entity this Category is associated with; currently\n            Milestone is the only type of Category.\n        updated_at:\n          type: string\n          description: The time/date that the Category was updated.\n          format: date-time\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Category has been imported from another tool, the ID in the other\n            tool can be indicated here.\n          nullable: true\n        id:\n          type: integer\n          description: The unique ID of the Category.\n          format: int64\n        created_at:\n          type: string\n          description: The time/date that the Category was created.\n          format: date-time\n      description: A Category can be used to associate Milestones.\n    Commit:\n      required:\n      - author_email\n      - author_id\n      - author_identity\n      - created_at\n      - entity_type\n      - hash\n      - id\n      - merged_branch_ids\n      - message\n      - repository_id\n      - timestamp\n      - updated_at\n      - url\n      type: object\n      properties:\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        author_id:\n          type: string\n          description: The ID of the Member that authored the Commit, if known.\n          format: uuid\n          nullable: true\n        hash:\n          type: string\n          description: The Commit hash.\n        updated_at:\n          type: string\n          description: The time/date the Commit was updated.\n          format: date-time\n          nullable: true\n        merged_branch_ids:\n          type: array\n          description: The IDs of the Branches the Commit has been merged into.\n          items:\n            type: integer\n            format: int64\n        id:\n          type: integer\n          description: The unique ID of the Commit.\n          format: int64\n          nullable: true\n        url:\n          type: string\n          description: The URL of the Commit.\n        author_email:\n          type: string\n          description: The email address of the VCS user that authored the Commit.\n        timestamp:\n          type: string\n          description: The time/date the Commit was pushed.\n          format: date-time\n        author_identity:\n          $ref: '#/components/schemas/Identity'\n        repository_id:\n          type: integer\n          description: The ID of the Repository that contains the Commit.\n          format: int64\n          nullable: true\n        created_at:\n          type: string\n          description: The time/date the Commit was created.\n          format: date-time\n        message:\n          type: string\n          description: The Commit message.\n      description: Commit refers to a VCS commit and all associated details.\n    CreateCategory:\n      required:\n      - name\n      - type\n      type: object\n      properties:\n        name:\n          minLength: 1\n          type: string\n          description: The name of the new Category.\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The hex color to be displayed with the Category (for example,\n            \"#ff0000\").\n          format: css-color\n        external_id:\n          minLength: 1\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Category has been imported from another tool, the ID in the other\n            tool can be indicated here.\n        type:\n          type: string\n          description: The type of entity this Category is associated with; currently\n            Milestone is the only type of Category.\n          enum:\n          - milestone\n      x-doc-skip: true\n    CreateCategoryParams:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          minLength: 1\n          type: string\n          description: The name of the new Category.\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The hex color to be displayed with the Category (for example,\n            \"#ff0000\").\n          format: css-color\n        external_id:\n          minLength: 1\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Category has been imported from another tool, the ID in the other\n            tool can be indicated here.\n      description: Request parameters for creating a Category with a Milestone.\n    CreateCommentComment:\n      required:\n      - text\n      type: object\n      properties:\n        text:\n          maxLength: 100000\n          minLength: 1\n          type: string\n          description: The comment text.\n        author_id:\n          type: string\n          description: The Member ID of the Comment's author. Defaults to the user\n            identified by the API token.\n          format: uuid\n        created_at:\n          type: string\n          description: Defaults to the time/date the comment is created, but can be\n            set to reflect another date.\n          format: date-time\n        updated_at:\n          type: string\n          description: Defaults to the time/date the comment is last updated, but\n            can be set to reflect another date.\n          format: date-time\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the comment has been imported from another tool, the ID in the other tool\n            can be indicated here.\n      x-doc-skip: true\n    CreateEntityTemplate:\n      required:\n      - name\n      - story_contents\n      type: object\n      properties:\n        name:\n          minLength: 1\n          type: string\n          description: The name of the new entity template\n        author_id:\n          type: string\n          description: The id of the user creating this template.\n          format: uuid\n        story_contents:\n          $ref: '#/components/schemas/CreateStoryContents'\n      description: Request paramaters for creating an entirely new entity template.\n    CreateEpic:\n      required:\n      - name\n      type: object\n      properties:\n        description:\n          maxLength: 100000\n          type: string\n          description: The Epic's description.\n        labels:\n          type: array\n          description: An array of Labels attached to the Epic.\n          items:\n            $ref: '#/components/schemas/CreateLabelParams'\n        completed_at_override:\n          type: string\n          description: A manual override for the time/date the Epic was completed.\n          format: date-time\n        name:\n          maxLength: 256\n          minLength: 1\n          type: string\n          description: The Epic's name.\n        planned_start_date:\n          type: string\n          description: The Epic's planned start date.\n          format: date-time\n          nullable: true\n        state:\n          type: string\n          description: '`Deprecated` The Epic''s state (to do, in progress, or done);\n            will be ignored when `epic_state_id` is set.'\n          enum:\n          - in progress\n          - to do\n          - done\n        milestone_id:\n          type: integer\n          description: The ID of the Milestone this Epic is related to.\n          format: int64\n          nullable: true\n        requested_by_id:\n          type: string\n          description: The ID of the member that requested the epic.\n          format: uuid\n        epic_state_id:\n          type: integer\n          description: The ID of the Epic State.\n          format: int64\n        started_at_override:\n          type: string\n          description: A manual override for the time/date the Epic was started.\n          format: date-time\n        group_id:\n          type: string\n          description: The ID of the group to associate with the epic.\n          format: uuid\n          nullable: true\n        updated_at:\n          type: string\n          description: Defaults to the time/date it is created but can be set to reflect\n            another date.\n          format: date-time\n        follower_ids:\n          type: array\n          description: An array of UUIDs for any Members you want to add as Followers\n            on this new Epic.\n          items:\n            type: string\n            format: uuid\n        owner_ids:\n          type: array\n          description: An array of UUIDs for any members you want to add as Owners\n            on this new Epic.\n          items:\n            type: string\n            format: uuid\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Epic has been imported from another tool, the ID in the other tool\n            can be indicated here.\n        deadline:\n          type: string\n          description: The Epic's deadline.\n          format: date-time\n          nullable: true\n        created_at:\n          type: string\n          description: Defaults to the time/date it is created but can be set to reflect\n            another date.\n          format: date-time\n      x-doc-skip: true\n    CreateEpicComment:\n      required:\n      - text\n      type: object\n      properties:\n        text:\n          maxLength: 100000\n          minLength: 1\n          type: string\n          description: The comment text.\n        author_id:\n          type: string\n          description: The Member ID of the Comment's author. Defaults to the user\n            identified by the API token.\n          format: uuid\n        created_at:\n          type: string\n          description: Defaults to the time/date the comment is created, but can be\n            set to reflect another date.\n          format: date-time\n        updated_at:\n          type: string\n          description: Defaults to the time/date the comment is last updated, but\n            can be set to reflect another date.\n          format: date-time\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the comment has been imported from another tool, the ID in the other tool\n            can be indicated here.\n      x-doc-skip: true\n    CreateGroup:\n      required:\n      - mention_name\n      - name\n      type: object\n      properties:\n        description:\n          type: string\n          description: The description of the Group.\n        member_ids:\n          uniqueItems: true\n          type: array\n          description: The Member ids to add to this Group.\n          items:\n            type: string\n            format: uuid\n        workflow_ids:\n          type: array\n          description: The Workflow ids to add to the Group.\n          items:\n            type: integer\n            format: int64\n        name:\n          minLength: 1\n          type: string\n          description: The name of this Group.\n        mention_name:\n          minLength: 1\n          type: string\n          description: The mention name of this Group.\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The color you wish to use for the Group in the system.\n          format: css-color\n        color_key:\n          type: string\n          description: The color key you wish to use for the Group in the system.\n          enum:\n          - blue\n          - purple\n          - midnight-blue\n          - orange\n          - yellow-green\n          - brass\n          - gray\n          - fuchsia\n          - yellow\n          - pink\n          - sky-blue\n          - green\n          - red\n          - black\n          - slate\n          - turquoise\n        display_icon_id:\n          type: string\n          description: The Icon id for the avatar of this Group.\n          format: uuid\n    CreateIteration:\n      required:\n      - end_date\n      - name\n      - start_date\n      type: object\n      properties:\n        follower_ids:\n          type: array\n          description: An array of UUIDs for any Members you want to add as Followers.\n          items:\n            type: string\n            format: uuid\n        group_ids:\n          type: array\n          description: An array of UUIDs for any Groups you want to add as Followers.\n            Currently, only one Group association is presented in our web UI.\n          items:\n            type: string\n            format: uuid\n        labels:\n          type: array\n          description: An array of Labels attached to the Iteration.\n          items:\n            $ref: '#/components/schemas/CreateLabelParams'\n        description:\n          maxLength: 100000\n          type: string\n          description: The description of the Iteration.\n        name:\n          minLength: 1\n          type: string\n          description: The name of this Iteration.\n        start_date:\n          minLength: 1\n          type: string\n          description: The date this Iteration begins, e.g. 2019-07-01.\n        end_date:\n          minLength: 1\n          type: string\n          description: The date this Iteration ends, e.g. 2019-07-01.\n    CreateLabelParams:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: The name of the new Label.\n        description:\n          type: string\n          description: The description of the new Label.\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The hex color to be displayed with the Label (for example,\n            \"#ff0000\").\n          format: css-color\n        external_id:\n          minLength: 1\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Label has been imported from another tool, the ID in the other tool\n            can be indicated here.\n      description: Request parameters for creating a Label on a Shortcut Story.\n    CreateLinkedFile:\n      required:\n      - name\n      - type\n      - url\n      type: object\n      properties:\n        description:\n          type: string\n          description: The description of the file.\n        story_id:\n          type: integer\n          description: The ID of the linked story.\n          format: int64\n        name:\n          minLength: 1\n          type: string\n          description: The name of the file.\n        thumbnail_url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The URL of the thumbnail, if the integration provided it.\n        type:\n          type: string\n          description: The integration type of the file (e.g. google, dropbox, box).\n          enum:\n          - google\n          - url\n          - dropbox\n          - box\n          - onedrive\n        size:\n          type: integer\n          description: The filesize, if the integration provided it.\n          format: int64\n        uploader_id:\n          type: string\n          description: The UUID of the member that uploaded the file.\n          format: uuid\n        content_type:\n          type: string\n          description: The content type of the image (e.g. txt/plain).\n        url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The URL of linked file.\n      x-doc-skip: true\n    CreateMilestone:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          maxLength: 256\n          minLength: 1\n          type: string\n          description: The name of the Milestone.\n        description:\n          maxLength: 100000\n          type: string\n          description: The Milestone's description.\n        state:\n          type: string\n          description: The workflow state that the Milestone is in.\n          enum:\n          - in progress\n          - to do\n          - done\n        started_at_override:\n          type: string\n          description: A manual override for the time/date the Milestone was started.\n          format: date-time\n        completed_at_override:\n          type: string\n          description: A manual override for the time/date the Milestone was completed.\n          format: date-time\n        categories:\n          type: array\n          description: An array of IDs of Categories attached to the Milestone.\n          items:\n            $ref: '#/components/schemas/CreateCategoryParams'\n      x-doc-skip: true\n    CreateOrDeleteStoryReaction:\n      required:\n      - emoji\n      type: object\n      properties:\n        emoji:\n          type: string\n          description: The emoji short-code to add / remove. E.g. `:thumbsup::skin-tone-4:`.\n      x-doc-skip: true\n    CreateProject:\n      required:\n      - name\n      - team_id\n      type: object\n      properties:\n        description:\n          maxLength: 100000\n          type: string\n          description: The Project description.\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The color you wish to use for the Project in the system.\n          format: css-color\n        name:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: The name of the Project.\n        start_time:\n          type: string\n          description: The date at which the Project was started.\n          format: date-time\n        updated_at:\n          type: string\n          description: Defaults to the time/date it is created but can be set to reflect\n            another date.\n          format: date-time\n        follower_ids:\n          type: array\n          description: An array of UUIDs for any members you want to add as Owners\n            on this new Epic.\n          items:\n            type: string\n            format: uuid\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Project has been imported from another tool, the ID in the other tool\n            can be indicated here.\n        team_id:\n          type: integer\n          description: The ID of the team the project belongs to.\n          format: int64\n        iteration_length:\n          type: integer\n          description: The number of weeks per iteration in this Project.\n          format: int64\n        abbreviation:\n          type: string\n          description: The Project abbreviation used in Story summaries. Should be\n            kept to 3 characters at most.\n        created_at:\n          type: string\n          description: Defaults to the time/date it is created but can be set to reflect\n            another date.\n          format: date-time\n      x-doc-skip: true\n    CreateStories:\n      required:\n      - stories\n      type: object\n      properties:\n        stories:\n          type: array\n          description: An array of stories to be created.\n          items:\n            $ref: '#/components/schemas/CreateStoryParams'\n      x-doc-skip: true\n    CreateStoryComment:\n      required:\n      - text\n      type: object\n      properties:\n        text:\n          maxLength: 100000\n          type: string\n          description: The comment text.\n        author_id:\n          type: string\n          description: The Member ID of the Comment's author. Defaults to the user\n            identified by the API token.\n          format: uuid\n        created_at:\n          type: string\n          description: Defaults to the time/date the comment is created, but can be\n            set to reflect another date.\n          format: date-time\n        updated_at:\n          type: string\n          description: Defaults to the time/date the comment is last updated, but\n            can be set to reflect another date.\n          format: date-time\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the comment has been imported from another tool, the ID in the other tool\n            can be indicated here.\n      x-doc-skip: true\n    CreateStoryCommentParams:\n      required:\n      - text\n      type: object\n      properties:\n        text:\n          maxLength: 100000\n          type: string\n          description: The comment text.\n        author_id:\n          type: string\n          description: The Member ID of the Comment's author. Defaults to the user\n            identified by the API token.\n          format: uuid\n        created_at:\n          type: string\n          description: Defaults to the time/date the comment is created, but can be\n            set to reflect another date.\n          format: date-time\n        updated_at:\n          type: string\n          description: Defaults to the time/date the comment is last updated, but\n            can be set to reflect another date.\n          format: date-time\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the comment has been imported from another tool, the ID in the other tool\n            can be indicated here.\n      description: Request parameters for creating a Comment on a Shortcut Story.\n    CreateStoryContents:\n      type: object\n      properties:\n        description:\n          type: string\n          description: The description of the story.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        labels:\n          type: array\n          description: An array of labels to be populated by the template.\n          items:\n            $ref: '#/components/schemas/CreateLabelParams'\n        story_type:\n          type: string\n          description: The type of story (feature, bug, chore).\n        linked_files:\n          type: array\n          description: An array of linked files attached to the story.\n          items:\n            $ref: '#/components/schemas/LinkedFile'\n        file_ids:\n          uniqueItems: true\n          type: array\n          description: An array of the attached file IDs to be populated.\n          items:\n            type: integer\n            format: int64\n        name:\n          type: string\n          description: The name of the story.\n        epic_id:\n          type: integer\n          description: The ID of the epic the to be populated.\n          format: int64\n          nullable: true\n        external_links:\n          type: array\n          description: An array of external links to be populated.\n          items:\n            type: string\n        iteration_id:\n          type: integer\n          description: The ID of the iteration the to be populated.\n          format: int64\n          nullable: true\n        tasks:\n          type: array\n          description: An array of tasks to be populated by the template.\n          items:\n            $ref: '#/components/schemas/EntityTemplateTask'\n        label_ids:\n          type: array\n          description: An array of label ids attached to the story.\n          items:\n            type: integer\n            format: int64\n        group_id:\n          type: string\n          description: The ID of the group to be populated.\n          format: uuid\n          nullable: true\n        workflow_state_id:\n          type: integer\n          description: The ID of the workflow state the story is currently in.\n          format: int64\n        follower_ids:\n          type: array\n          description: An array of UUIDs for any Members listed as Followers.\n          items:\n            type: string\n            format: uuid\n        owner_ids:\n          type: array\n          description: An array of UUIDs of the owners of this story.\n          items:\n            type: string\n            format: uuid\n        estimate:\n          type: integer\n          description: The numeric point estimate to be populated.\n          format: int64\n          nullable: true\n        files:\n          type: array\n          description: An array of files attached to the story.\n          items:\n            $ref: '#/components/schemas/UploadedFile'\n        project_id:\n          type: integer\n          description: The ID of the project the story belongs to.\n          format: int64\n        linked_file_ids:\n          uniqueItems: true\n          type: array\n          description: An array of the linked file IDs to be populated.\n          items:\n            type: integer\n            format: int64\n        deadline:\n          type: string\n          description: The due date of the story.\n          format: date-time\n          nullable: true\n      description: A map of story attributes this template populates.\n    CreateStoryLink:\n      required:\n      - object_id\n      - subject_id\n      - verb\n      type: object\n      properties:\n        verb:\n          type: string\n          description: The type of link.\n          enum:\n          - blocks\n          - duplicates\n          - relates to\n        subject_id:\n          type: integer\n          description: The ID of the subject Story.\n          format: int64\n        object_id:\n          type: integer\n          description: The ID of the object Story.\n          format: int64\n      x-doc-skip: true\n    CreateStoryLinkParams:\n      required:\n      - verb\n      type: object\n      properties:\n        subject_id:\n          type: integer\n          description: The unique ID of the Story defined as subject.\n          format: int64\n        verb:\n          type: string\n          description: How the subject Story acts on the object Story. This can be\n            \"blocks\", \"duplicates\", or \"relates to\".\n          enum:\n          - blocks\n          - duplicates\n          - relates to\n        object_id:\n          type: integer\n          description: The unique ID of the Story defined as object.\n          format: int64\n      description: Request parameters for creating a Story Link within a Story.\n    CreateStoryParams:\n      required:\n      - name\n      type: object\n      properties:\n        description:\n          maxLength: 100000\n          type: string\n          description: The description of the story.\n        archived:\n          type: boolean\n          description: Controls the story's archived state.\n        story_links:\n          type: array\n          description: An array of story links attached to the story.\n          items:\n            $ref: '#/components/schemas/CreateStoryLinkParams'\n        labels:\n          type: array\n          description: An array of labels attached to the story.\n          items:\n            $ref: '#/components/schemas/CreateLabelParams'\n        story_type:\n          type: string\n          description: The type of story (feature, bug, chore).\n          enum:\n          - feature\n          - chore\n          - bug\n        file_ids:\n          uniqueItems: true\n          type: array\n          description: An array of IDs of files attached to the story.\n          items:\n            type: integer\n            format: int64\n        completed_at_override:\n          type: string\n          description: A manual override for the time/date the Story was completed.\n          format: date-time\n        name:\n          maxLength: 512\n          minLength: 1\n          type: string\n          description: The name of the story.\n        comments:\n          type: array\n          description: An array of comments to add to the story.\n          items:\n            $ref: '#/components/schemas/CreateStoryCommentParams'\n        epic_id:\n          type: integer\n          description: The ID of the epic the story belongs to.\n          format: int64\n          nullable: true\n        story_template_id:\n          type: string\n          description: The id of the story template used to create this story, if\n            applicable.\n          format: uuid\n          nullable: true\n        external_links:\n          type: array\n          description: An array of External Links associated with this story.\n          items:\n            type: string\n        requested_by_id:\n          type: string\n          description: The ID of the member that requested the story.\n          format: uuid\n        iteration_id:\n          type: integer\n          description: The ID of the iteration the story belongs to.\n          format: int64\n          nullable: true\n        tasks:\n          type: array\n          description: An array of tasks connected to the story.\n          items:\n            $ref: '#/components/schemas/CreateTaskParams'\n        started_at_override:\n          type: string\n          description: A manual override for the time/date the Story was started.\n          format: date-time\n        group_id:\n          type: string\n          description: The id of the group to associate with this story.\n          format: uuid\n          nullable: true\n        workflow_state_id:\n          type: integer\n          description: The ID of the workflow state the story will be in.\n          format: int64\n        updated_at:\n          type: string\n          description: The time/date the Story was updated.\n          format: date-time\n        follower_ids:\n          uniqueItems: true\n          type: array\n          description: An array of UUIDs of the followers of this story.\n          items:\n            type: string\n            format: uuid\n        owner_ids:\n          uniqueItems: true\n          type: array\n          description: An array of UUIDs of the owners of this story.\n          items:\n            type: string\n            format: uuid\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Story has been imported from another tool, the ID in the other tool\n            can be indicated here.\n        estimate:\n          type: integer\n          description: The numeric point estimate of the story. Can also be null,\n            which means unestimated.\n          format: int64\n          nullable: true\n        project_id:\n          type: integer\n          description: The ID of the project the story belongs to.\n          format: int64\n          nullable: true\n        linked_file_ids:\n          uniqueItems: true\n          type: array\n          description: An array of IDs of linked files attached to the story.\n          items:\n            type: integer\n            format: int64\n        deadline:\n          type: string\n          description: The due date of the story.\n          format: date-time\n          nullable: true\n        created_at:\n          type: string\n          description: The time/date the Story was created.\n          format: date-time\n      description: Request parameters for creating a story.\n    CreateTask:\n      required:\n      - description\n      type: object\n      properties:\n        description:\n          type: string\n          description: The Task description.\n        complete:\n          type: boolean\n          description: True/false boolean indicating whether the Task is completed.\n            Defaults to false.\n        owner_ids:\n          type: array\n          description: An array of UUIDs for any members you want to add as Owners\n            on this new Task.\n          items:\n            type: string\n            format: uuid\n        created_at:\n          type: string\n          description: Defaults to the time/date the Task is created but can be set\n            to reflect another creation time/date.\n          format: date-time\n        updated_at:\n          type: string\n          description: Defaults to the time/date the Task is created in Shortcut but\n            can be set to reflect another time/date.\n          format: date-time\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Task has been imported from another tool, the ID in the other tool\n            can be indicated here.\n      x-doc-skip: true\n    CreateTaskParams:\n      required:\n      - description\n      type: object\n      properties:\n        description:\n          type: string\n          description: The Task description.\n        complete:\n          type: boolean\n          description: True/false boolean indicating whether the Task is completed.\n            Defaults to false.\n        owner_ids:\n          type: array\n          description: An array of UUIDs for any members you want to add as Owners\n            on this new Task.\n          items:\n            type: string\n            format: uuid\n        created_at:\n          type: string\n          description: Defaults to the time/date the Task is created but can be set\n            to reflect another creation time/date.\n          format: date-time\n        updated_at:\n          type: string\n          description: Defaults to the time/date the Task is created in Shortcut but\n            can be set to reflect another time/date.\n          format: date-time\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Task has been imported from another tool, the ID in the other tool\n            can be indicated here.\n      description: Request parameters for creating a Task on a Story.\n    DeleteStories:\n      required:\n      - story_ids\n      type: object\n      properties:\n        story_ids:\n          uniqueItems: true\n          type: array\n          description: An array of IDs of Stories to delete.\n          items:\n            type: integer\n            format: int64\n      x-doc-skip: true\n    EntityTemplate:\n      required:\n      - author_id\n      - created_at\n      - entity_type\n      - id\n      - last_used_at\n      - name\n      - story_contents\n      - updated_at\n      type: object\n      properties:\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        id:\n          type: string\n          description: The unique identifier for the entity template.\n          format: uuid\n        created_at:\n          type: string\n          description: The time/date when the entity template was created.\n          format: date-time\n        updated_at:\n          type: string\n          description: The time/date when the entity template was last updated.\n          format: date-time\n        name:\n          type: string\n          description: The template's name.\n        author_id:\n          type: string\n          description: The unique ID of the member who created the template.\n          format: uuid\n        last_used_at:\n          type: string\n          description: The last time that someone created an entity using this template.\n          format: date-time\n        story_contents:\n          $ref: '#/components/schemas/StoryContents'\n      description: An entity template can be used to prefill various fields when creating\n        new stories.\n    EntityTemplateTask:\n      required:\n      - description\n      type: object\n      properties:\n        description:\n          type: string\n          description: The Task description.\n        complete:\n          type: boolean\n          description: True/false boolean indicating whether the Task is completed.\n            Defaults to false.\n        owner_ids:\n          type: array\n          description: An array of UUIDs for any members you want to add as Owners\n            on this new Task.\n          items:\n            type: string\n            format: uuid\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Task has been imported from another tool, the ID in the other tool\n            can be indicated here.\n      description: Request parameters for specifying how to pre-populate a task through\n        a template.\n    Epic:\n      required:\n      - app_url\n      - archived\n      - comments\n      - completed\n      - completed_at\n      - completed_at_override\n      - created_at\n      - deadline\n      - description\n      - entity_type\n      - epic_state_id\n      - external_id\n      - follower_ids\n      - group_id\n      - group_mention_ids\n      - id\n      - label_ids\n      - labels\n      - member_mention_ids\n      - mention_ids\n      - milestone_id\n      - name\n      - owner_ids\n      - planned_start_date\n      - position\n      - productboard_id\n      - productboard_name\n      - productboard_plugin_id\n      - productboard_url\n      - project_ids\n      - requested_by_id\n      - started\n      - started_at\n      - started_at_override\n      - state\n      - stats\n      - stories_without_projects\n      - updated_at\n      type: object\n      properties:\n        app_url:\n          type: string\n          description: The Shortcut application url for the Epic.\n        description:\n          type: string\n          description: The Epic's description.\n        archived:\n          type: boolean\n          description: True/false boolean that indicates whether the Epic is archived\n            or not.\n        started:\n          type: boolean\n          description: A true/false boolean indicating if the Epic has been started.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        labels:\n          type: array\n          description: An array of Labels attached to the Epic.\n          items:\n            $ref: '#/components/schemas/LabelSlim'\n        mention_ids:\n          type: array\n          description: 'Deprecated: use member_mention_ids.'\n          items:\n            type: string\n            format: uuid\n        member_mention_ids:\n          type: array\n          description: An array of Member IDs that have been mentioned in the Epic\n            description.\n          items:\n            type: string\n            format: uuid\n        project_ids:\n          type: array\n          description: The IDs of Projects related to this Epic.\n          items:\n            type: integer\n            format: int64\n        stories_without_projects:\n          type: integer\n          description: The number of stories in this epic which are not associated\n            with a project.\n          format: int64\n        completed_at_override:\n          type: string\n          description: A manual override for the time/date the Epic was completed.\n          format: date-time\n          nullable: true\n        productboard_plugin_id:\n          type: string\n          description: The ID of the associated productboard integration.\n          format: uuid\n          nullable: true\n        started_at:\n          type: string\n          description: The time/date the Epic was started.\n          format: date-time\n          nullable: true\n        completed_at:\n          type: string\n          description: The time/date the Epic was completed.\n          format: date-time\n          nullable: true\n        name:\n          type: string\n          description: The name of the Epic.\n        completed:\n          type: boolean\n          description: A true/false boolean indicating if the Epic has been completed.\n        comments:\n          type: array\n          description: A nested array of threaded comments.\n          items:\n            $ref: '#/components/schemas/ThreadedComment'\n        productboard_url:\n          type: string\n          description: The URL of the associated productboard feature.\n          nullable: true\n        planned_start_date:\n          type: string\n          description: The Epic's planned start date.\n          format: date-time\n          nullable: true\n        state:\n          type: string\n          description: '`Deprecated` The workflow state that the Epic is in.'\n        milestone_id:\n          type: integer\n          description: The ID of the Milestone this Epic is related to.\n          format: int64\n          nullable: true\n        requested_by_id:\n          type: string\n          description: The ID of the Member that requested the epic.\n          format: uuid\n        epic_state_id:\n          type: integer\n          description: The ID of the Epic State.\n          format: int64\n        label_ids:\n          type: array\n          description: An array of Label ids attached to the Epic.\n          items:\n            type: integer\n            format: int64\n        started_at_override:\n          type: string\n          description: A manual override for the time/date the Epic was started.\n          format: date-time\n          nullable: true\n        group_id:\n          type: string\n          description: Group ID\n          format: uuid\n          nullable: true\n        updated_at:\n          type: string\n          description: The time/date the Epic was updated.\n          format: date-time\n          nullable: true\n        group_mention_ids:\n          type: array\n          description: An array of Group IDs that have been mentioned in the Epic\n            description.\n          items:\n            type: string\n            format: uuid\n        productboard_id:\n          type: string\n          description: The ID of the associated productboard feature.\n          format: uuid\n          nullable: true\n        follower_ids:\n          type: array\n          description: An array of UUIDs for any Members you want to add as Followers\n            on this Epic.\n          items:\n            type: string\n            format: uuid\n        owner_ids:\n          type: array\n          description: An array of UUIDs for any members you want to add as Owners\n            on this new Epic.\n          items:\n            type: string\n            format: uuid\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Epic has been imported from another tool, the ID in the other tool\n            can be indicated here.\n          nullable: true\n        id:\n          type: integer\n          description: The unique ID of the Epic.\n          format: int64\n        position:\n          type: integer\n          description: The Epic's relative position in the Epic workflow state.\n          format: int64\n        productboard_name:\n          type: string\n          description: The name of the associated productboard feature.\n          nullable: true\n        deadline:\n          type: string\n          description: The Epic's deadline.\n          format: date-time\n          nullable: true\n        stats:\n          $ref: '#/components/schemas/EpicStats'\n        created_at:\n          type: string\n          description: The time/date the Epic was created.\n          format: date-time\n          nullable: true\n      description: An Epic is a collection of stories that together might make up\n        a release, a milestone, or some other large initiative that your organization\n        is working on.\n    EpicSearchResults:\n      required:\n      - data\n      - next\n      - total\n      type: object\n      properties:\n        total:\n          type: integer\n          description: The total number of matches for the search query. The first\n            1000 matches can be paged through via the API.\n          format: int64\n        data:\n          type: array\n          description: A list of search results.\n          items:\n            $ref: '#/components/schemas/Epic'\n        next:\n          type: string\n          description: The URL path and query string for the next page of search results.\n          nullable: true\n        cursors:\n          type: array\n          description: Cursors\n          items:\n            type: string\n      description: The results of the Epic search query.\n    EpicSlim:\n      required:\n      - app_url\n      - archived\n      - completed\n      - completed_at\n      - completed_at_override\n      - created_at\n      - deadline\n      - entity_type\n      - epic_state_id\n      - external_id\n      - follower_ids\n      - group_id\n      - group_mention_ids\n      - id\n      - label_ids\n      - labels\n      - member_mention_ids\n      - mention_ids\n      - milestone_id\n      - name\n      - owner_ids\n      - planned_start_date\n      - position\n      - productboard_id\n      - productboard_name\n      - productboard_plugin_id\n      - productboard_url\n      - project_ids\n      - requested_by_id\n      - started\n      - started_at\n      - started_at_override\n      - state\n      - stats\n      - stories_without_projects\n      - updated_at\n      type: object\n      properties:\n        app_url:\n          type: string\n          description: The Shortcut application url for the Epic.\n        description:\n          type: string\n          description: The Epic's description.\n        archived:\n          type: boolean\n          description: True/false boolean that indicates whether the Epic is archived\n            or not.\n        started:\n          type: boolean\n          description: A true/false boolean indicating if the Epic has been started.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        labels:\n          type: array\n          description: An array of Labels attached to the Epic.\n          items:\n            $ref: '#/components/schemas/LabelSlim'\n        mention_ids:\n          type: array\n          description: 'Deprecated: use member_mention_ids.'\n          items:\n            type: string\n            format: uuid\n        member_mention_ids:\n          type: array\n          description: An array of Member IDs that have been mentioned in the Epic\n            description.\n          items:\n            type: string\n            format: uuid\n        project_ids:\n          type: array\n          description: The IDs of Projects related to this Epic.\n          items:\n            type: integer\n            format: int64\n        stories_without_projects:\n          type: integer\n          description: The number of stories in this epic which are not associated\n            with a project.\n          format: int64\n        completed_at_override:\n          type: string\n          description: A manual override for the time/date the Epic was completed.\n          format: date-time\n          nullable: true\n        productboard_plugin_id:\n          type: string\n          description: The ID of the associated productboard integration.\n          format: uuid\n          nullable: true\n        started_at:\n          type: string\n          description: The time/date the Epic was started.\n          format: date-time\n          nullable: true\n        completed_at:\n          type: string\n          description: The time/date the Epic was completed.\n          format: date-time\n          nullable: true\n        name:\n          type: string\n          description: The name of the Epic.\n        completed:\n          type: boolean\n          description: A true/false boolean indicating if the Epic has been completed.\n        productboard_url:\n          type: string\n          description: The URL of the associated productboard feature.\n          nullable: true\n        planned_start_date:\n          type: string\n          description: The Epic's planned start date.\n          format: date-time\n          nullable: true\n        state:\n          type: string\n          description: '`Deprecated` The workflow state that the Epic is in.'\n        milestone_id:\n          type: integer\n          description: The ID of the Milestone this Epic is related to.\n          format: int64\n          nullable: true\n        requested_by_id:\n          type: string\n          description: The ID of the Member that requested the epic.\n          format: uuid\n        epic_state_id:\n          type: integer\n          description: The ID of the Epic State.\n          format: int64\n        label_ids:\n          type: array\n          description: An array of Label ids attached to the Epic.\n          items:\n            type: integer\n            format: int64\n        started_at_override:\n          type: string\n          description: A manual override for the time/date the Epic was started.\n          format: date-time\n          nullable: true\n        group_id:\n          type: string\n          description: Group ID\n          format: uuid\n          nullable: true\n        updated_at:\n          type: string\n          description: The time/date the Epic was updated.\n          format: date-time\n          nullable: true\n        group_mention_ids:\n          type: array\n          description: An array of Group IDs that have been mentioned in the Epic\n            description.\n          items:\n            type: string\n            format: uuid\n        productboard_id:\n          type: string\n          description: The ID of the associated productboard feature.\n          format: uuid\n          nullable: true\n        follower_ids:\n          type: array\n          description: An array of UUIDs for any Members you want to add as Followers\n            on this Epic.\n          items:\n            type: string\n            format: uuid\n        owner_ids:\n          type: array\n          description: An array of UUIDs for any members you want to add as Owners\n            on this new Epic.\n          items:\n            type: string\n            format: uuid\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Epic has been imported from another tool, the ID in the other tool\n            can be indicated here.\n          nullable: true\n        id:\n          type: integer\n          description: The unique ID of the Epic.\n          format: int64\n        position:\n          type: integer\n          description: The Epic's relative position in the Epic workflow state.\n          format: int64\n        productboard_name:\n          type: string\n          description: The name of the associated productboard feature.\n          nullable: true\n        deadline:\n          type: string\n          description: The Epic's deadline.\n          format: date-time\n          nullable: true\n        stats:\n          $ref: '#/components/schemas/EpicStats'\n        created_at:\n          type: string\n          description: The time/date the Epic was created.\n          format: date-time\n          nullable: true\n      description: EpicSlim represents the same resource as an Epic but is more light-weight,\n        including all Epic fields except the comments array. The description string\n        can be optionally included. Use the [Get Epic](#Get-Epic) endpoint to fetch\n        the unabridged payload for an Epic.\n    EpicState:\n      required:\n      - created_at\n      - description\n      - entity_type\n      - id\n      - name\n      - position\n      - type\n      - updated_at\n      type: object\n      properties:\n        description:\n          type: string\n          description: The description of what sort of Epics belong in that Epic State.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The hex color for this Epic State.\n          format: css-color\n        name:\n          type: string\n          description: The Epic State's name.\n        type:\n          type: string\n          description: The type of Epic State (Unstarted, Started, or Done)\n        updated_at:\n          type: string\n          description: When the Epic State was last updated.\n          format: date-time\n        id:\n          type: integer\n          description: The unique ID of the Epic State.\n          format: int64\n        position:\n          type: integer\n          description: The position that the Epic State is in, starting with 0 at\n            the left.\n          format: int64\n        created_at:\n          type: string\n          description: The time/date the Epic State was created.\n          format: date-time\n      description: 'Epic State is any of the at least 3 columns. Epic States correspond\n        to one of 3 types: Unstarted, Started, or Done.'\n    EpicStats:\n      required:\n      - last_story_update\n      - num_points\n      - num_points_done\n      - num_points_started\n      - num_points_unstarted\n      - num_related_documents\n      - num_stories_done\n      - num_stories_started\n      - num_stories_total\n      - num_stories_unestimated\n      - num_stories_unstarted\n      type: object\n      properties:\n        num_points_done:\n          type: integer\n          description: The total number of completed points in this Epic.\n          format: int64\n        num_related_documents:\n          type: integer\n          description: The total number of documents associated with this Epic.\n          format: int64\n        average_cycle_time:\n          type: integer\n          description: The average cycle time (in seconds) of completed stories in\n            this Epic.\n          format: int64\n        num_stories_unstarted:\n          type: integer\n          description: The total number of unstarted Stories in this Epic.\n          format: int64\n        num_stories_total:\n          type: integer\n          description: The total number of Stories in this Epic.\n          format: int64\n        last_story_update:\n          type: string\n          description: The date of the last update of a Story in this Epic.\n          format: date-time\n          nullable: true\n        num_points_started:\n          type: integer\n          description: The total number of started points in this Epic.\n          format: int64\n        num_points_unstarted:\n          type: integer\n          description: The total number of unstarted points in this Epic.\n          format: int64\n        num_stories_started:\n          type: integer\n          description: The total number of started Stories in this Epic.\n          format: int64\n        num_stories_unestimated:\n          type: integer\n          description: The total number of Stories with no point estimate.\n          format: int64\n        average_lead_time:\n          type: integer\n          description: The average lead time (in seconds) of completed stories in\n            this Epic.\n          format: int64\n        num_points:\n          type: integer\n          description: The total number of points in this Epic.\n          format: int64\n        num_stories_done:\n          type: integer\n          description: The total number of done Stories in this Epic.\n          format: int64\n      description: A group of calculated values for this Epic.\n    EpicWorkflow:\n      required:\n      - created_at\n      - default_epic_state_id\n      - entity_type\n      - epic_states\n      - id\n      - updated_at\n      type: object\n      properties:\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        id:\n          type: integer\n          description: The unique ID of the Epic Workflow.\n          format: int64\n        created_at:\n          type: string\n          description: The date the Epic Workflow was created.\n          format: date-time\n        updated_at:\n          type: string\n          description: The date the Epic Workflow was updated.\n          format: date-time\n        default_epic_state_id:\n          type: integer\n          description: The unique ID of the default Epic State that new Epics are\n            assigned by default.\n          format: int64\n        epic_states:\n          type: array\n          description: A map of the Epic States in this Epic Workflow.\n          items:\n            $ref: '#/components/schemas/EpicState'\n      description: 'Epic Workflow is the array of defined Epic States. Epic Workflow\n        can be queried using the API but must be updated in the Shortcut UI. '\n    GetEpicStories:\n      type: object\n      properties:\n        includes_description:\n          type: boolean\n          description: A true/false boolean indicating whether to return Stories with\n            their descriptions.\n      x-doc-skip: true\n    GetExternalLinkStoriesParams:\n      required:\n      - external_link\n      type: object\n      properties:\n        external_link:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The external link associated with one or more stories.\n    GetIterationStories:\n      type: object\n      properties:\n        includes_description:\n          type: boolean\n          description: A true/false boolean indicating whether to return Stories with\n            their descriptions.\n    GetLabelStories:\n      type: object\n      properties:\n        includes_description:\n          type: boolean\n          description: A true/false boolean indicating whether to return Stories with\n            their descriptions.\n      x-doc-skip: true\n    GetMember:\n      type: object\n      properties:\n        org-public-id:\n          type: string\n          description: The unique ID of the Organization to limit the lookup to.\n          format: uuid\n      x-doc-skip: true\n    GetProjectStories:\n      type: object\n      properties:\n        includes_description:\n          type: boolean\n          description: A true/false boolean indicating whether to return Stories with\n            their descriptions.\n      x-doc-skip: true\n    Group:\n      required:\n      - app_url\n      - archived\n      - color\n      - color_key\n      - description\n      - display_icon\n      - entity_type\n      - id\n      - member_ids\n      - mention_name\n      - name\n      - num_epics_started\n      - num_stories\n      - num_stories_started\n      - story_workflow_ids\n      - workflow_ids\n      type: object\n      properties:\n        app_url:\n          type: string\n          description: The Shortcut application url for the Group.\n        description:\n          type: string\n          description: The description of the Group.\n        archived:\n          type: boolean\n          description: Whether or not the Group is archived.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The hex color to be displayed with the Group (for example,\n            \"#ff0000\").\n          format: css-color\n          nullable: true\n        num_stories_started:\n          type: integer\n          description: The number of stories assigned to the group which are in a\n            started workflow state.\n          format: int64\n        mention_name:\n          minLength: 1\n          pattern: ^[a-z0-9\\-\\_\\.]+$\n          type: string\n          description: The mention name of the Group.\n        name:\n          type: string\n          description: The name of the Group.\n        color_key:\n          type: string\n          description: The color key to be displayed with the Group.\n          nullable: true\n          enum:\n          - blue\n          - purple\n          - midnight-blue\n          - orange\n          - yellow-green\n          - brass\n          - gray\n          - fuchsia\n          - yellow\n          - pink\n          - sky-blue\n          - green\n          - red\n          - black\n          - slate\n          - turquoise\n        num_stories:\n          type: integer\n          description: The total number of stories assigned ot the group.\n          format: int64\n        num_epics_started:\n          type: integer\n          description: The number of epics assigned to the group which are in the\n            started workflow state.\n          format: int64\n        id:\n          type: string\n          description: The id of the Group.\n          format: uuid\n        display_icon:\n          $ref: '#/components/schemas/Icon'\n        member_ids:\n          type: array\n          description: The Member IDs contain within the Group.\n          items:\n            type: string\n            format: uuid\n        story_workflow_ids:\n          type: array\n          description: The Workflow IDs which have stories assigned to the group.\n          items:\n            type: integer\n            format: int64\n        workflow_ids:\n          type: array\n          description: The Workflow IDs contained within the Group.\n          items:\n            type: integer\n            format: int64\n      description: A Group.\n    History:\n      required:\n      - actions\n      - changed_at\n      - id\n      - version\n      type: object\n      properties:\n        changed_at:\n          type: string\n          description: The date when the change occurred.\n        primary_id:\n          type: integer\n          description: The ID of the primary entity that has changed, if applicable.\n          format: int64\n        references:\n          type: array\n          description: An array of objects affected by the change. Reference objects\n            provide basic information for the entities reference in the history actions.\n            Some have specific fields, but they always contain an id, entity_type,\n            and a name.\n          items:\n            type: object\n            oneOf:\n            - $ref: '#/components/schemas/HistoryReferenceBranch'\n            - $ref: '#/components/schemas/HistoryReferenceCommit'\n            - $ref: '#/components/schemas/HistoryReferenceEpic'\n            - $ref: '#/components/schemas/HistoryReferenceGroup'\n            - $ref: '#/components/schemas/HistoryReferenceIteration'\n            - $ref: '#/components/schemas/HistoryReferenceLabel'\n            - $ref: '#/components/schemas/HistoryReferenceProject'\n            - $ref: '#/components/schemas/HistoryReferenceStory'\n            - $ref: '#/components/schemas/HistoryReferenceStoryTask'\n            - $ref: '#/components/schemas/HistoryReferenceWorkflowState'\n            - $ref: '#/components/schemas/HistoryReferenceGeneral'\n        actions:\n          type: array\n          description: An array of actions that were performed for the change.\n          items:\n            type: object\n            x-oneOf:\n            - $ref: '#/components/schemas/HistoryActionBranchCreate'\n            - $ref: '#/components/schemas/HistoryActionBranchMerge'\n            - $ref: '#/components/schemas/HistoryActionBranchPush'\n            - $ref: '#/components/schemas/HistoryActionLabelCreate'\n            - $ref: '#/components/schemas/HistoryActionLabelUpdate'\n            - $ref: '#/components/schemas/HistoryActionLabelDelete'\n            - $ref: '#/components/schemas/HistoryActionProjectUpdate'\n            - $ref: '#/components/schemas/HistoryActionPullRequest'\n            - $ref: '#/components/schemas/HistoryActionStoryCreate'\n            - $ref: '#/components/schemas/HistoryActionStoryUpdate'\n            - $ref: '#/components/schemas/HistoryActionStoryDelete'\n            - $ref: '#/components/schemas/HistoryActionStoryCommentCreate'\n            - $ref: '#/components/schemas/HistoryActionStoryLinkCreate'\n            - $ref: '#/components/schemas/HistoryActionStoryLinkUpdate'\n            - $ref: '#/components/schemas/HistoryActionStoryLinkDelete'\n            - $ref: '#/components/schemas/HistoryActionTaskCreate'\n            - $ref: '#/components/schemas/HistoryActionTaskUpdate'\n            - $ref: '#/components/schemas/HistoryActionTaskDelete'\n        member_id:\n          type: string\n          description: The ID of the member who performed the change.\n          format: uuid\n        external_id:\n          type: string\n          description: The ID of the webhook that handled the change.\n        id:\n          type: string\n          description: The ID representing the change for the story.\n          format: uuid\n        version:\n          type: string\n          description: The version of the change format.\n          enum:\n          - v1\n        webhook_id:\n          type: string\n          description: The ID of the webhook that handled the change.\n          nullable: true\n      description: A history item is a group of actions that represent a transactional\n        change to a Story.\n    HistoryActionBranchCreate:\n      required:\n      - action\n      - entity_type\n      - id\n      - name\n      - url\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        name:\n          type: string\n          description: The name of the VCS Branch that was pushed\n        url:\n          type: string\n          description: The URL from the provider of the VCS Branch that was pushed\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - create\n      description: An action representing a VCS Branch being created.\n    HistoryActionBranchMerge:\n      required:\n      - action\n      - entity_type\n      - id\n      - name\n      - url\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        name:\n          type: string\n          description: The name of the VCS Branch that was pushed\n        url:\n          type: string\n          description: The URL from the provider of the VCS Branch that was pushed\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - merge\n      description: An action representing a VCS Branch being merged.\n    HistoryActionBranchPush:\n      required:\n      - action\n      - entity_type\n      - id\n      - name\n      - url\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        name:\n          type: string\n          description: The name of the VCS Branch that was pushed\n        url:\n          type: string\n          description: The URL from the provider of the VCS Branch that was pushed\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - push\n      description: An action representing a VCS Branch being pushed.\n    HistoryActionLabelCreate:\n      required:\n      - action\n      - app_url\n      - entity_type\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - create\n        app_url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The application URL of the Label.\n        name:\n          type: string\n          description: The name of the Label.\n      description: An action representing a Label being created.\n    HistoryActionLabelDelete:\n      required:\n      - action\n      - entity_type\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - delete\n        name:\n          type: string\n          description: The name of the Label.\n      description: An action representing a Label being deleted.\n    HistoryActionLabelUpdate:\n      required:\n      - action\n      - entity_type\n      - id\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - update\n      description: An action representing a Label being updated.\n    HistoryActionProjectUpdate:\n      required:\n      - action\n      - app_url\n      - entity_type\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - update\n        app_url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The application URL of the Project.\n        name:\n          type: string\n          description: The name of the Project.\n      description: An action representing a Project being updated.\n    HistoryActionPullRequest:\n      required:\n      - action\n      - entity_type\n      - id\n      - number\n      - title\n      - url\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - open\n          - update\n          - reopen\n          - close\n          - sync\n          - comment\n        number:\n          type: integer\n          description: The VCS Repository-specific ID for the Pull Request.\n          format: int64\n        title:\n          type: string\n          description: The title of the Pull Request.\n        url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The URL from the provider of the VCS Pull Request.\n      description: An action representing various operations for a Pull Request.\n    HistoryActionStoryCommentCreate:\n      required:\n      - action\n      - app_url\n      - author_id\n      - entity_type\n      - id\n      - text\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - create\n        app_url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The application URL of the Story Comment.\n        text:\n          type: string\n          description: The text of the Story Comment.\n        author_id:\n          type: string\n          description: The Member ID of who created the Story Comment.\n          format: uuid\n      description: An action representing a Story Comment being created.\n    HistoryActionStoryCreate:\n      required:\n      - action\n      - app_url\n      - entity_type\n      - id\n      - name\n      - story_type\n      type: object\n      properties:\n        app_url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The application URL of the Story.\n        description:\n          type: string\n          description: The description of the Story.\n        started:\n          type: boolean\n          description: Whether or not the Story has been started.\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        task_ids:\n          type: array\n          description: An array of Task IDs on this Story.\n          items:\n            type: integer\n            format: int64\n        story_type:\n          type: string\n          description: The type of Story; either feature, bug, or chore.\n          enum:\n          - feature\n          - chore\n          - bug\n        name:\n          type: string\n          description: The name of the Story.\n        completed:\n          type: boolean\n          description: Whether or not the Story is completed.\n        blocker:\n          type: boolean\n          description: Whether or not the Story is blocking another Story.\n        epic_id:\n          type: integer\n          description: The Epic ID for this Story.\n          format: int64\n        requested_by_id:\n          type: string\n          description: The ID of the Member that requested the Story.\n          format: uuid\n        iteration_id:\n          type: integer\n          description: The Iteration ID the Story is in.\n          format: int64\n          nullable: true\n        label_ids:\n          type: array\n          description: An array of Labels IDs attached to the Story.\n          items:\n            type: integer\n            format: int64\n        workflow_state_id:\n          type: integer\n          description: An array of Workflow State IDs attached to the Story.\n          format: int64\n        object_story_link_ids:\n          type: array\n          description: An array of Story IDs that are the object of a Story Link relationship.\n          items:\n            type: integer\n            format: int64\n        follower_ids:\n          type: array\n          description: An array of Member IDs for the followers of the Story.\n          items:\n            type: string\n            format: uuid\n        owner_ids:\n          type: array\n          description: An array of Member IDs that are the owners of the Story.\n          items:\n            type: string\n            format: uuid\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        estimate:\n          type: integer\n          description: The estimate (or point value) for the Story.\n          format: int64\n        subject_story_link_ids:\n          type: array\n          description: An array of Story IDs that are the subject of a Story Link\n            relationship.\n          items:\n            type: integer\n            format: int64\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - create\n        blocked:\n          type: boolean\n          description: Whether or not the Story is blocked by another Story.\n        project_id:\n          type: integer\n          description: The Project ID of the Story is in.\n          format: int64\n        deadline:\n          type: string\n          description: The timestamp representing the Story's deadline.\n      description: An action representing a Story being created.\n    HistoryActionStoryDelete:\n      required:\n      - action\n      - entity_type\n      - id\n      - name\n      - story_type\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - delete\n        name:\n          type: string\n          description: The name of the Story.\n        story_type:\n          type: string\n          description: The type of Story; either feature, bug, or chore.\n          enum:\n          - feature\n          - chore\n          - bug\n      description: An action representing a Story being deleted.\n    HistoryActionStoryLinkCreate:\n      required:\n      - action\n      - entity_type\n      - id\n      - object_id\n      - subject_id\n      - verb\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - create\n        verb:\n          type: string\n          description: The verb describing the link's relationship.\n          enum:\n          - blocks\n          - duplicates\n          - relates to\n        subject_id:\n          type: integer\n          description: The Story ID of the subject Story.\n          format: int64\n        object_id:\n          type: integer\n          description: The Story ID of the object Story.\n          format: int64\n      description: An action representing a Story Link being created.\n    HistoryActionStoryLinkDelete:\n      required:\n      - action\n      - entity_type\n      - id\n      - object_id\n      - subject_id\n      - verb\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - delete\n        verb:\n          type: string\n          description: The verb describing the link's relationship.\n          enum:\n          - blocks\n          - duplicates\n          - relates to\n        subject_id:\n          type: integer\n          description: The Story ID of the subject Story.\n          format: int64\n          nullable: true\n        object_id:\n          type: integer\n          description: The Story ID of the object Story.\n          format: int64\n          nullable: true\n      description: An action representing a Story Link being deleted.\n    HistoryActionStoryLinkUpdate:\n      required:\n      - action\n      - changes\n      - entity_type\n      - id\n      - object_id\n      - subject_id\n      - verb\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - update\n        verb:\n          type: string\n          description: The verb describing the link's relationship.\n          enum:\n          - blocks\n          - duplicates\n          - relates to\n        subject_id:\n          type: integer\n          description: The Story ID of the subject Story.\n          format: int64\n        object_id:\n          type: integer\n          description: The Story ID of the object Story.\n          format: int64\n        changes:\n          $ref: '#/components/schemas/HistoryChangesStoryLink'\n      description: An action representing a Story Link being updated.\n    HistoryActionStoryUpdate:\n      required:\n      - action\n      - app_url\n      - entity_type\n      - id\n      - name\n      - story_type\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - update\n        app_url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The application URL of the Story.\n        changes:\n          $ref: '#/components/schemas/HistoryChangesStory'\n        name:\n          type: string\n          description: The name of the Story.\n        story_type:\n          type: string\n          description: The type of Story; either feature, bug, or chore.\n          enum:\n          - feature\n          - chore\n          - bug\n      description: An action representing a Story being updated.\n    HistoryActionTaskCreate:\n      required:\n      - action\n      - complete\n      - description\n      - entity_type\n      - id\n      type: object\n      properties:\n        description:\n          type: string\n          description: The description of the Task.\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        mention_ids:\n          type: array\n          description: An array of Member IDs that represent who has been mentioned\n            in the Task.\n          items:\n            type: string\n            format: uuid\n        group_mention_ids:\n          type: array\n          description: An array of Groups IDs that represent which have been mentioned\n            in the Task.\n          items:\n            type: string\n            format: uuid\n        owner_ids:\n          type: array\n          description: An array of Member IDs that represent the Task's owners.\n          items:\n            type: string\n            format: uuid\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - create\n        complete:\n          type: boolean\n          description: Whether or not the Task is complete.\n        deadline:\n          type: string\n          description: A timestamp that represent's the Task's deadline.\n      description: An action representing a Task being created.\n    HistoryActionTaskDelete:\n      required:\n      - action\n      - description\n      - entity_type\n      - id\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - delete\n        description:\n          type: string\n          description: The description of the Task being deleted.\n      description: An action representing a Task being deleted.\n    HistoryActionTaskUpdate:\n      required:\n      - action\n      - changes\n      - description\n      - entity_type\n      - id\n      - story_id\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        action:\n          type: string\n          description: The action of the entity referenced.\n          enum:\n          - update\n        changes:\n          $ref: '#/components/schemas/HistoryChangesTask'\n        complete:\n          type: boolean\n          description: Whether or not the Task is complete.\n        description:\n          type: string\n          description: The description of the Task.\n        story_id:\n          type: integer\n          description: The Story ID that contains the Task.\n          format: int64\n      description: An action representing a Task being updated.\n    HistoryChangesStory:\n      type: object\n      properties:\n        description:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewStr'\n        archived:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewBool'\n        started:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewBool'\n        task_ids:\n          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesInt'\n        mention_ids:\n          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesUuid'\n        story_type:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewStr'\n        name:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewStr'\n        completed:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewBool'\n        blocker:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewBool'\n        epic_id:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewInt'\n        branch_ids:\n          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesInt'\n        commit_ids:\n          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesInt'\n        requested_by_id:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewUuid'\n        iteration_id:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewInt'\n        label_ids:\n          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesInt'\n        workflow_state_id:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewInt'\n        object_story_link_ids:\n          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesInt'\n        follower_ids:\n          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesUuid'\n        owner_ids:\n          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesUuid'\n        estimate:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewInt'\n        subject_story_link_ids:\n          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesInt'\n        blocked:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewBool'\n        project_id:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewInt'\n        deadline:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewStr'\n      description: The changes that have occurred as a result of the action.\n    HistoryChangesStoryLink:\n      type: object\n      properties:\n        verb:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewStr'\n        object_id:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewInt'\n        subject_id:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewInt'\n      description: The changes that have occurred as a result of the action.\n    HistoryChangesTask:\n      type: object\n      properties:\n        complete:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewBool'\n        description:\n          $ref: '#/components/schemas/StoryHistoryChangeOldNewStr'\n        mention_ids:\n          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesUuid'\n        owner_ids:\n          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesUuid'\n      description: The changes that have occurred as a result of the action.\n    HistoryReferenceBranch:\n      required:\n      - entity_type\n      - id\n      - name\n      - url\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        name:\n          type: string\n          description: The name of the entity referenced.\n        url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The external URL for the Branch.\n      description: A reference to a VCS Branch.\n    HistoryReferenceCommit:\n      required:\n      - entity_type\n      - id\n      - message\n      - url\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        message:\n          type: string\n          description: The message from the Commit.\n        url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The external URL for the Branch.\n      description: A reference to a VCS Commit.\n    HistoryReferenceEpic:\n      required:\n      - app_url\n      - entity_type\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        app_url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The application URL of the Epic.\n        name:\n          type: string\n          description: The name of the entity referenced.\n      description: A reference to an Epic.\n    HistoryReferenceGeneral:\n      required:\n      - entity_type\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        name:\n          type: string\n          description: The name of the entity referenced.\n      description: A default reference for entity types that don't have extra fields.\n    HistoryReferenceGroup:\n      required:\n      - entity_type\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: string\n          description: The ID of the entity referenced.\n          format: uuid\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        name:\n          type: string\n          description: The name of the entity referenced.\n      description: A reference to a Group.\n    HistoryReferenceIteration:\n      required:\n      - app_url\n      - entity_type\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        app_url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The application URL of the Iteration.\n        name:\n          type: string\n          description: The name of the entity referenced.\n      description: A reference to an Iteration.\n    HistoryReferenceLabel:\n      required:\n      - app_url\n      - entity_type\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        app_url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The application URL of the Label.\n        name:\n          type: string\n          description: The name of the entity referenced.\n      description: A reference to an Label.\n    HistoryReferenceProject:\n      required:\n      - app_url\n      - entity_type\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        app_url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The application URL of the Project.\n        name:\n          type: string\n          description: The name of the entity referenced.\n      description: A reference to an Project.\n    HistoryReferenceStory:\n      required:\n      - app_url\n      - entity_type\n      - id\n      - name\n      - story_type\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        app_url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The application URL of the Story.\n        name:\n          type: string\n          description: The name of the entity referenced.\n        story_type:\n          type: string\n          description: If the referenced entity is a Story, either \"bug\", \"chore\",\n            or \"feature\".\n          enum:\n          - feature\n          - chore\n          - bug\n      description: A reference to a Story.\n    HistoryReferenceStoryTask:\n      required:\n      - description\n      - entity_type\n      - id\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        description:\n          type: string\n          description: The description of the Story Task.\n      description: A reference to a Story Task.\n    HistoryReferenceWorkflowState:\n      required:\n      - entity_type\n      - id\n      - name\n      - type\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the entity referenced.\n          format: int64\n        entity_type:\n          type: string\n          description: The type of entity referenced.\n        type:\n          type: string\n          description: Either \"unstarted\", \"started\", or \"done\".\n          enum:\n          - started\n          - unstarted\n          - done\n        name:\n          type: string\n          description: The name of the entity referenced.\n      description: A references to a Story Workflow State.\n    Icon:\n      required:\n      - created_at\n      - entity_type\n      - id\n      - updated_at\n      - url\n      type: object\n      properties:\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        id:\n          type: string\n          description: The unique ID of the Icon.\n          format: uuid\n        created_at:\n          type: string\n          description: The time/date that the Icon was created.\n          format: date-time\n        updated_at:\n          type: string\n          description: The time/date that the Icon was updated.\n          format: date-time\n        url:\n          type: string\n          description: The URL of the Icon.\n      description: Icons are used to attach images to Organizations, Members, and\n        Loading screens in the Shortcut web application.\n    Identity:\n      required:\n      - entity_type\n      - name\n      - type\n      type: object\n      properties:\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        name:\n          type: string\n          description: This is your login in VCS.\n          nullable: true\n        type:\n          type: string\n          description: The type of Identity; currently only type is github.\n          nullable: true\n      description: The Identity of the VCS user that authored the Commit.\n    Iteration:\n      required:\n      - app_url\n      - created_at\n      - description\n      - end_date\n      - entity_type\n      - follower_ids\n      - group_ids\n      - group_mention_ids\n      - id\n      - label_ids\n      - labels\n      - member_mention_ids\n      - mention_ids\n      - name\n      - start_date\n      - stats\n      - status\n      - updated_at\n      type: object\n      properties:\n        app_url:\n          type: string\n          description: The Shortcut application url for the Iteration.\n        description:\n          type: string\n          description: The description of the iteration.\n        entity_type:\n          type: string\n          description: A string description of this resource\n        labels:\n          type: array\n          description: An array of labels attached to the iteration.\n          items:\n            $ref: '#/components/schemas/Label'\n        mention_ids:\n          type: array\n          description: 'Deprecated: use member_mention_ids.'\n          items:\n            type: string\n            format: uuid\n        member_mention_ids:\n          type: array\n          description: An array of Member IDs that have been mentioned in the Story\n            description.\n          items:\n            type: string\n            format: uuid\n        name:\n          type: string\n          description: The name of the iteration.\n        label_ids:\n          type: array\n          description: An array of label ids attached to the iteration.\n          items:\n            type: integer\n            format: int64\n        updated_at:\n          type: string\n          description: The instant when this iteration was last updated.\n          format: date-time\n        group_mention_ids:\n          type: array\n          description: An array of Group IDs that have been mentioned in the Story\n            description.\n          items:\n            type: string\n            format: uuid\n        end_date:\n          type: string\n          description: The date this iteration begins.\n          format: date-time\n        follower_ids:\n          type: array\n          description: An array of UUIDs for any Members listed as Followers.\n          items:\n            type: string\n            format: uuid\n        group_ids:\n          type: array\n          description: An array of UUIDs for any Groups you want to add as Followers.\n            Currently, only one Group association is presented in our web UI.\n          items:\n            type: string\n            format: uuid\n        start_date:\n          type: string\n          description: The date this iteration begins.\n          format: date-time\n        status:\n          type: string\n          description: The status of the iteration. Values are either \"unstarted\",\n            \"started\", or \"done\".\n        id:\n          type: integer\n          description: The ID of the iteration.\n          format: int64\n        stats:\n          $ref: '#/components/schemas/IterationStats'\n        created_at:\n          type: string\n          description: The instant when this iteration was created.\n          format: date-time\n      description: An Iteration is a defined, time-boxed period of development for\n        a collection of Stories. See https://help.shortcut.com/hc/en-us/articles/360028953452-Iterations-Overview\n        for more information.\n    IterationSlim:\n      required:\n      - app_url\n      - created_at\n      - end_date\n      - entity_type\n      - follower_ids\n      - group_ids\n      - group_mention_ids\n      - id\n      - label_ids\n      - labels\n      - member_mention_ids\n      - mention_ids\n      - name\n      - start_date\n      - stats\n      - status\n      - updated_at\n      type: object\n      properties:\n        app_url:\n          type: string\n          description: The Shortcut application url for the Iteration.\n        entity_type:\n          type: string\n          description: A string description of this resource\n        labels:\n          type: array\n          description: An array of labels attached to the iteration.\n          items:\n            $ref: '#/components/schemas/Label'\n        mention_ids:\n          type: array\n          description: 'Deprecated: use member_mention_ids.'\n          items:\n            type: string\n            format: uuid\n        member_mention_ids:\n          type: array\n          description: An array of Member IDs that have been mentioned in the Story\n            description.\n          items:\n            type: string\n            format: uuid\n        name:\n          type: string\n          description: The name of the iteration.\n        label_ids:\n          type: array\n          description: An array of label ids attached to the iteration.\n          items:\n            type: integer\n            format: int64\n        updated_at:\n          type: string\n          description: The instant when this iteration was last updated.\n          format: date-time\n        group_mention_ids:\n          type: array\n          description: An array of Group IDs that have been mentioned in the Story\n            description.\n          items:\n            type: string\n            format: uuid\n        end_date:\n          type: string\n          description: The date this iteration begins.\n          format: date-time\n        follower_ids:\n          type: array\n          description: An array of UUIDs for any Members listed as Followers.\n          items:\n            type: string\n            format: uuid\n        group_ids:\n          type: array\n          description: An array of UUIDs for any Groups you want to add as Followers.\n            Currently, only one Group association is presented in our web UI.\n          items:\n            type: string\n            format: uuid\n        start_date:\n          type: string\n          description: The date this iteration begins.\n          format: date-time\n        status:\n          type: string\n          description: The status of the iteration. Values are either \"unstarted\",\n            \"started\", or \"done\".\n        id:\n          type: integer\n          description: The ID of the iteration.\n          format: int64\n        stats:\n          $ref: '#/components/schemas/IterationStats'\n        created_at:\n          type: string\n          description: The instant when this iteration was created.\n          format: date-time\n      description: 'IterationSlim represents the same resource as an Iteration, but\n        is more light-weight. Use the [Get Iteration](#Get-Iteration) endpoint to\n        fetch the unabridged payload for an Iteration. '\n    IterationStats:\n      required:\n      - num_points\n      - num_points_done\n      - num_points_started\n      - num_points_unstarted\n      - num_related_documents\n      - num_stories_done\n      - num_stories_started\n      - num_stories_unestimated\n      - num_stories_unstarted\n      type: object\n      properties:\n        num_points_done:\n          type: integer\n          description: The total number of completed points in this Iteration.\n          format: int64\n        num_related_documents:\n          type: integer\n          description: The total number of documents related to an Iteration\n          format: int64\n        average_cycle_time:\n          type: integer\n          description: The average cycle time (in seconds) of completed stories in\n            this Iteration.\n          format: int64\n        num_stories_unstarted:\n          type: integer\n          description: The total number of unstarted Stories in this Iteration.\n          format: int64\n        num_points_started:\n          type: integer\n          description: The total number of started points in this Iteration.\n          format: int64\n        num_points_unstarted:\n          type: integer\n          description: The total number of unstarted points in this Iteration.\n          format: int64\n        num_stories_started:\n          type: integer\n          description: The total number of started Stories in this Iteration.\n          format: int64\n        num_stories_unestimated:\n          type: integer\n          description: The total number of Stories with no point estimate.\n          format: int64\n        average_lead_time:\n          type: integer\n          description: The average lead time (in seconds) of completed stories in\n            this Iteration.\n          format: int64\n        num_points:\n          type: integer\n          description: The total number of points in this Iteration.\n          format: int64\n        num_stories_done:\n          type: integer\n          description: The total number of done Stories in this Iteration.\n          format: int64\n      description: A group of calculated values for this Iteration.\n    Label:\n      required:\n      - app_url\n      - archived\n      - color\n      - created_at\n      - description\n      - entity_type\n      - external_id\n      - id\n      - name\n      - updated_at\n      type: object\n      properties:\n        app_url:\n          type: string\n          description: The Shortcut application url for the Label.\n        description:\n          type: string\n          description: The description of the Label.\n          nullable: true\n        archived:\n          type: boolean\n          description: A true/false boolean indicating if the Label has been archived.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The hex color to be displayed with the Label (for example,\n            \"#ff0000\").\n          format: css-color\n          nullable: true\n        name:\n          type: string\n          description: The name of the Label.\n        updated_at:\n          type: string\n          description: The time/date that the Label was updated.\n          format: date-time\n          nullable: true\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Label has been imported from another tool, the ID in the other tool\n            can be indicated here.\n          nullable: true\n        id:\n          type: integer\n          description: The unique ID of the Label.\n          format: int64\n        stats:\n          $ref: '#/components/schemas/LabelStats'\n        created_at:\n          type: string\n          description: The time/date that the Label was created.\n          format: date-time\n          nullable: true\n      description: A Label can be used to associate and filter Stories and Epics,\n        and also create new Workspaces.\n    LabelSlim:\n      required:\n      - app_url\n      - archived\n      - color\n      - created_at\n      - description\n      - entity_type\n      - external_id\n      - id\n      - name\n      - updated_at\n      type: object\n      properties:\n        app_url:\n          type: string\n          description: The Shortcut application url for the Label.\n        description:\n          type: string\n          description: The description of the Label.\n          nullable: true\n        archived:\n          type: boolean\n          description: A true/false boolean indicating if the Label has been archived.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The hex color to be displayed with the Label (for example,\n            \"#ff0000\").\n          format: css-color\n          nullable: true\n        name:\n          type: string\n          description: The name of the Label.\n        updated_at:\n          type: string\n          description: The time/date that the Label was updated.\n          format: date-time\n          nullable: true\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Label has been imported from another tool, the ID in the other tool\n            can be indicated here.\n          nullable: true\n        id:\n          type: integer\n          description: The unique ID of the Label.\n          format: int64\n        created_at:\n          type: string\n          description: The time/date that the Label was created.\n          format: date-time\n          nullable: true\n      description: A Label can be used to associate and filter Stories and Epics,\n        and also create new Workspaces. A slim Label does not include aggregate stats.\n        Fetch the Label using the labels endpoint to retrieve them.\n    LabelStats:\n      required:\n      - num_epics\n      - num_epics_completed\n      - num_epics_in_progress\n      - num_epics_total\n      - num_epics_unstarted\n      - num_points_completed\n      - num_points_in_progress\n      - num_points_total\n      - num_points_unstarted\n      - num_related_documents\n      - num_stories_completed\n      - num_stories_in_progress\n      - num_stories_total\n      - num_stories_unestimated\n      - num_stories_unstarted\n      type: object\n      properties:\n        num_related_documents:\n          type: integer\n          description: The total number of Documents associated this Label.\n          format: int64\n        num_epics:\n          type: integer\n          description: The total number of Epics with this Label.\n          format: int64\n        num_stories_unstarted:\n          type: integer\n          description: The total number of stories unstarted Stories with this Label.\n          format: int64\n        num_stories_total:\n          type: integer\n          description: The total number of Stories with this Label.\n          format: int64\n        num_epics_unstarted:\n          type: integer\n          description: The number of unstarted epics assoicated with this label.\n          format: int64\n        num_epics_in_progress:\n          type: integer\n          description: The number of in progress epics assoicated with this label.\n          format: int64\n        num_points_unstarted:\n          type: integer\n          description: The total number of unstarted points with this Label.\n          format: int64\n        num_stories_unestimated:\n          type: integer\n          description: The total number of Stories with no point estimate with this\n            Label.\n          format: int64\n        num_points_in_progress:\n          type: integer\n          description: The total number of in-progress points with this Label.\n          format: int64\n        num_epics_total:\n          type: integer\n          description: The total number of Epics assoicated with this Label.\n          format: int64\n        num_stories_completed:\n          type: integer\n          description: The total number of completed Stories with this Label.\n          format: int64\n        num_points_completed:\n          type: integer\n          description: The total number of completed points with this Label.\n          format: int64\n        num_points_total:\n          type: integer\n          description: The total number of points with this Label.\n          format: int64\n        num_stories_in_progress:\n          type: integer\n          description: The total number of in-progress Stories with this Label.\n          format: int64\n        num_epics_completed:\n          type: integer\n          description: The number of completed Epics assoicated with this Label.\n          format: int64\n      description: A group of calculated values for this Label. This is not included\n        if the slim? flag is set to true for the List Labels endpoint.\n    LinkedFile:\n      required:\n      - content_type\n      - created_at\n      - description\n      - entity_type\n      - group_mention_ids\n      - id\n      - member_mention_ids\n      - mention_ids\n      - name\n      - size\n      - story_ids\n      - thumbnail_url\n      - type\n      - updated_at\n      - uploader_id\n      - url\n      type: object\n      properties:\n        description:\n          type: string\n          description: The description of the file.\n          nullable: true\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        story_ids:\n          type: array\n          description: The IDs of the stories this file is attached to.\n          items:\n            type: integer\n            format: int64\n        mention_ids:\n          type: array\n          description: 'Deprecated: use member_mention_ids.'\n          items:\n            type: string\n            format: uuid\n        member_mention_ids:\n          type: array\n          description: The members that are mentioned in the description of the file.\n          items:\n            type: string\n            format: uuid\n        name:\n          type: string\n          description: The name of the linked file.\n        thumbnail_url:\n          type: string\n          description: The URL of the file thumbnail, if the integration provided\n            it.\n          nullable: true\n        type:\n          type: string\n          description: The integration type (e.g. google, dropbox, box).\n        size:\n          type: integer\n          description: The filesize, if the integration provided it.\n          format: int64\n          nullable: true\n        uploader_id:\n          type: string\n          description: The UUID of the member that uploaded the file.\n          format: uuid\n        content_type:\n          type: string\n          description: The content type of the image (e.g. txt/plain).\n          nullable: true\n        updated_at:\n          type: string\n          description: The time/date the LinkedFile was updated.\n          format: date-time\n        group_mention_ids:\n          type: array\n          description: The groups that are mentioned in the description of the file.\n          items:\n            type: string\n            format: uuid\n        id:\n          type: integer\n          description: The unique identifier for the file.\n          format: int64\n        url:\n          type: string\n          description: The URL of the file.\n        created_at:\n          type: string\n          description: The time/date the LinkedFile was created.\n          format: date-time\n      description: Linked files are stored on a third-party website and linked to\n        one or more Stories. Shortcut currently supports linking files from Google\n        Drive, Dropbox, Box, and by URL.\n    ListEpics:\n      type: object\n      properties:\n        includes_description:\n          type: boolean\n          description: A true/false boolean indicating whether to return Epics with\n            their descriptions.\n      x-doc-skip: true\n    ListGroupStories:\n      type: object\n      properties:\n        limit:\n          type: integer\n          description: The maximum number of results to return. (Defaults to 1000,\n            max 1000)\n          format: int64\n        offset:\n          type: integer\n          description: The offset at which to begin returning results. (Defaults to\n            0)\n          format: int64\n    ListLabels:\n      type: object\n      properties:\n        slim:\n          type: boolean\n          description: A true/false boolean indicating if the slim versions of the\n            Label should be returned.\n      x-doc-skip: true\n    ListMembers:\n      type: object\n      properties:\n        org-public-id:\n          type: string\n          description: The unique ID of the Organization to limit the list to.\n          format: uuid\n      x-doc-skip: true\n    MaxSearchResultsExceededError:\n      required:\n      - error\n      - maximum-results\n      - message\n      type: object\n      properties:\n        error:\n          type: string\n          description: The name for this type of error, `maximum-results-exceeded`\n          enum:\n          - maximum-results-exceeded\n        message:\n          type: string\n          description: 'An explanatory message: \"A maximum of 1000 search results\n            are supported.\"'\n        maximum-results:\n          type: integer\n          description: The maximum number of search results supported, `1000`\n          format: int64\n          enum:\n          - 1000\n      description: Error returned when total maximum supported results have been reached.\n    Member:\n      required:\n      - created_at\n      - created_without_invite\n      - disabled\n      - entity_type\n      - group_ids\n      - id\n      - profile\n      - role\n      - state\n      - updated_at\n      type: object\n      properties:\n        role:\n          type: string\n          description: The Member's role in the Shortcut organization.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        disabled:\n          type: boolean\n          description: True/false boolean indicating whether the Member has been disabled\n            within this Organization.\n        state:\n          type: string\n          description: |-\n            The user state, one of partial, full, disabled, or imported.  A partial\n                       user is disabled, has no means to log in, and is not an import user.  A full\n                       user is enabled and has a means to log in.  A disabled user is disabled and has\n                       a means to log in.  An import user is disabled, has no means to log in, and is\n                       marked as an import user.\n          enum:\n          - partial\n          - full\n          - disabled\n          - imported\n        updated_at:\n          type: string\n          description: The time/date the Member was last updated.\n          format: date-time\n          nullable: true\n        created_without_invite:\n          type: boolean\n          description: Whether this member was created as a placeholder entity.\n          x-doc-skip: true\n        group_ids:\n          type: array\n          description: The Member's group ids\n          items:\n            type: string\n            format: uuid\n        id:\n          type: string\n          description: The Member's ID in Shortcut.\n          format: uuid\n        profile:\n          $ref: '#/components/schemas/Profile'\n        created_at:\n          type: string\n          description: The time/date the Member was created.\n          format: date-time\n          nullable: true\n        replaced_by:\n          type: string\n          description: The id of the member that replaces this one when merged.\n          format: uuid\n          x-doc-skip: true\n      description: Details about individual Shortcut user within the Shortcut organization\n        that has issued the token.\n    MemberInfo:\n      required:\n      - id\n      - mention_name\n      - name\n      - workspace2\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        mention_name:\n          type: string\n        workspace2:\n          $ref: '#/components/schemas/BasicWorkspaceInfo'\n    Milestone:\n      required:\n      - app_url\n      - categories\n      - completed\n      - completed_at\n      - completed_at_override\n      - created_at\n      - description\n      - entity_type\n      - id\n      - name\n      - position\n      - started\n      - started_at\n      - started_at_override\n      - state\n      - updated_at\n      type: object\n      properties:\n        app_url:\n          type: string\n          description: The Shortcut application url for the Milestone.\n        description:\n          type: string\n          description: The Milestone's description.\n        started:\n          type: boolean\n          description: A true/false boolean indicating if the Milestone has been started.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        completed_at_override:\n          type: string\n          description: A manual override for the time/date the Milestone was completed.\n          format: date-time\n          nullable: true\n        started_at:\n          type: string\n          description: The time/date the Milestone was started.\n          format: date-time\n          nullable: true\n        completed_at:\n          type: string\n          description: The time/date the Milestone was completed.\n          format: date-time\n          nullable: true\n        name:\n          type: string\n          description: The name of the Milestone.\n        completed:\n          type: boolean\n          description: A true/false boolean indicating if the Milestone has been completed.\n        state:\n          type: string\n          description: The workflow state that the Milestone is in.\n        started_at_override:\n          type: string\n          description: A manual override for the time/date the Milestone was started.\n          format: date-time\n          nullable: true\n        updated_at:\n          type: string\n          description: The time/date the Milestone was updated.\n          format: date-time\n        categories:\n          type: array\n          description: An array of Categories attached to the Milestone.\n          items:\n            $ref: '#/components/schemas/Category'\n        id:\n          type: integer\n          description: The unique ID of the Milestone.\n          format: int64\n        position:\n          type: integer\n          description: A number representing the position of the Milestone in relation\n            to every other Milestone within the Organization.\n          format: int64\n        stats:\n          $ref: '#/components/schemas/MilestoneStats'\n        created_at:\n          type: string\n          description: The time/date the Milestone was created.\n          format: date-time\n      description: A Milestone is a collection of Epics that represent a release or\n        some other large initiative that your organization is working on.\n    MilestoneStats:\n      required:\n      - num_related_documents\n      type: object\n      properties:\n        average_cycle_time:\n          type: integer\n          description: The average cycle time (in seconds) of completed stories in\n            this Milestone.\n          format: int64\n        average_lead_time:\n          type: integer\n          description: The average lead time (in seconds) of completed stories in\n            this Milestone.\n          format: int64\n        num_related_documents:\n          type: integer\n          description: The number of related documents tp this Milestone.\n          format: int64\n      description: A group of calculated values for this Milestone.\n    Profile:\n      required:\n      - deactivated\n      - display_icon\n      - email_address\n      - entity_type\n      - gravatar_hash\n      - id\n      - mention_name\n      - name\n      type: object\n      properties:\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        deactivated:\n          type: boolean\n          description: A true/false boolean indicating whether the Member has been\n            deactivated within Shortcut.\n        two_factor_auth_activated:\n          type: boolean\n          description: If Two Factor Authentication is activated for this User.\n        mention_name:\n          type: string\n          description: The Member's username within the Organization.\n        name:\n          type: string\n          description: The Member's name within the Organization.\n          nullable: true\n        gravatar_hash:\n          type: string\n          description: This is the gravatar hash associated with email_address.\n          nullable: true\n        id:\n          type: string\n          description: The unique identifier of the profile.\n          format: uuid\n        display_icon:\n          $ref: '#/components/schemas/Icon'\n        email_address:\n          type: string\n          description: The primary email address of the Member with the Organization.\n          nullable: true\n      description: A group of Member profile details.\n    Project:\n      required:\n      - abbreviation\n      - app_url\n      - archived\n      - color\n      - created_at\n      - days_to_thermometer\n      - description\n      - entity_type\n      - external_id\n      - follower_ids\n      - id\n      - iteration_length\n      - name\n      - show_thermometer\n      - start_time\n      - stats\n      - team_id\n      - updated_at\n      - workflow_id\n      type: object\n      properties:\n        app_url:\n          type: string\n          description: The Shortcut application url for the Project.\n        description:\n          type: string\n          description: The description of the Project.\n          nullable: true\n        archived:\n          type: boolean\n          description: True/false boolean indicating whether the Project is in an\n            Archived state.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        days_to_thermometer:\n          type: integer\n          description: The number of days before the thermometer appears in the Story\n            summary.\n          format: int64\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The color associated with the Project in the Shortcut member\n            interface.\n          format: css-color\n          nullable: true\n        workflow_id:\n          type: integer\n          description: The ID of the workflow the project belongs to.\n          format: int64\n        name:\n          type: string\n          description: The name of the Project\n        start_time:\n          type: string\n          description: The date at which the Project was started.\n          format: date-time\n        updated_at:\n          type: string\n          description: The time/date that the Project was last updated.\n          format: date-time\n          nullable: true\n        follower_ids:\n          type: array\n          description: An array of UUIDs for any Members listed as Followers.\n          items:\n            type: string\n            format: uuid\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Project has been imported from another tool, the ID in the other tool\n            can be indicated here.\n          nullable: true\n        id:\n          type: integer\n          description: The unique ID of the Project.\n          format: int64\n        show_thermometer:\n          type: boolean\n          description: Configuration to enable or disable thermometers in the Story\n            summary.\n        team_id:\n          type: integer\n          description: The ID of the team the project belongs to.\n          format: int64\n        iteration_length:\n          type: integer\n          description: The number of weeks per iteration in this Project.\n          format: int64\n        abbreviation:\n          type: string\n          description: The Project abbreviation used in Story summaries. Should be\n            kept to 3 characters at most.\n          nullable: true\n        stats:\n          $ref: '#/components/schemas/ProjectStats'\n        created_at:\n          type: string\n          description: The time/date that the Project was created.\n          format: date-time\n          nullable: true\n      description: Projects typically map to teams (such as Frontend, Backend, Mobile,\n        Devops, etc) but can represent any open-ended product, component, or initiative.\n    ProjectStats:\n      required:\n      - num_points\n      - num_related_documents\n      - num_stories\n      type: object\n      properties:\n        num_stories:\n          type: integer\n          description: The total number of stories in this Project.\n          format: int64\n        num_points:\n          type: integer\n          description: The total number of points in this Project.\n          format: int64\n        num_related_documents:\n          type: integer\n          description: The total number of documents related to this Project\n          format: int64\n      description: A group of calculated values for this Project.\n    PullRequest:\n      required:\n      - branch_id\n      - branch_name\n      - closed\n      - created_at\n      - draft\n      - entity_type\n      - id\n      - merged\n      - num_added\n      - num_commits\n      - num_modified\n      - num_removed\n      - number\n      - repository_id\n      - target_branch_id\n      - target_branch_name\n      - title\n      - updated_at\n      - url\n      type: object\n      properties:\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        closed:\n          type: boolean\n          description: True/False boolean indicating whether the VCS pull request\n            has been closed.\n        merged:\n          type: boolean\n          description: True/False boolean indicating whether the VCS pull request\n            has been merged.\n        num_added:\n          type: integer\n          description: Number of lines added in the pull request, according to VCS.\n          format: int64\n        branch_id:\n          type: integer\n          description: The ID of the branch for the particular pull request.\n          format: int64\n        number:\n          type: integer\n          description: The pull request's unique number ID in VCS.\n          format: int64\n        branch_name:\n          type: string\n          description: The name of the branch for the particular pull request.\n        target_branch_name:\n          type: string\n          description: The name of the target branch for the particular pull request.\n        num_commits:\n          type: integer\n          description: The number of commits on the pull request.\n          format: int64\n          nullable: true\n        title:\n          type: string\n          description: The title of the pull request.\n        updated_at:\n          type: string\n          description: The time/date the pull request was created.\n          format: date-time\n        draft:\n          type: boolean\n          description: True/False boolean indicating whether the VCS pull request\n            is in the draft state.\n        id:\n          type: integer\n          description: The unique ID associated with the pull request in Shortcut.\n          format: int64\n        vcs_labels:\n          type: array\n          description: An array of PullRequestLabels attached to the PullRequest.\n          nullable: true\n          items:\n            $ref: '#/components/schemas/PullRequestLabel'\n        url:\n          type: string\n          description: The URL for the pull request.\n        num_removed:\n          type: integer\n          description: Number of lines removed in the pull request, according to VCS.\n          format: int64\n        review_status:\n          type: string\n          description: The status of the review for the pull request.\n        num_modified:\n          type: integer\n          description: Number of lines modified in the pull request, according to\n            VCS.\n          format: int64\n          nullable: true\n        build_status:\n          type: string\n          description: The status of the Continuous Integration workflow for the pull\n            request.\n        target_branch_id:\n          type: integer\n          description: The ID of the target branch for the particular pull request.\n          format: int64\n        repository_id:\n          type: integer\n          description: The ID of the repository for the particular pull request.\n          format: int64\n        created_at:\n          type: string\n          description: The time/date the pull request was created.\n          format: date-time\n      description: Corresponds to a VCS Pull Request attached to a Shortcut story.\n    PullRequestLabel:\n      required:\n      - color\n      - entity_type\n      - id\n      - name\n      type: object\n      properties:\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        id:\n          type: integer\n          description: The unique ID of the VCS Label.\n          format: int64\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The color of the VCS label.\n          format: css-color\n        description:\n          type: string\n          description: The description of the VCS label.\n          nullable: true\n        name:\n          type: string\n          description: The name of the VCS label.\n      description: Corresponds to a VCS Label associated with a Pull Request.\n    Repository:\n      required:\n      - created_at\n      - entity_type\n      - external_id\n      - full_name\n      - id\n      - name\n      - type\n      - updated_at\n      - url\n      type: object\n      properties:\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        name:\n          type: string\n          description: The shorthand name of the VCS repository.\n          nullable: true\n        type:\n          type: string\n          description: The type of Repository. Currently this can only be \"github\".\n        updated_at:\n          type: string\n          description: The time/date the Repository was updated.\n          format: date-time\n          nullable: true\n        external_id:\n          type: string\n          description: The VCS unique identifier for the Repository.\n          nullable: true\n        id:\n          type: integer\n          description: The ID associated to the VCS repository in Shortcut.\n          format: int64\n          nullable: true\n        url:\n          type: string\n          description: The URL of the Repository.\n          nullable: true\n        full_name:\n          type: string\n          description: The full name of the VCS repository.\n          nullable: true\n        created_at:\n          type: string\n          description: The time/date the Repository was created.\n          format: date-time\n          nullable: true\n      description: Repository refers to a VCS repository.\n    Search:\n      required:\n      - query\n      type: object\n      properties:\n        query:\n          minLength: 1\n          type: string\n          description: See our help center article on [search operators](https://help.shortcut.com/hc/en-us/articles/360000046646-Search-Operators)\n        page_size:\n          type: integer\n          description: The number of search results to include in a page. Minimum\n            of 1 and maximum of 25.\n          format: int64\n        next:\n          type: string\n          description: The next page token.\n          x-doc-skip: true\n        include:\n          type: string\n          enum:\n          - cursors\n          x-doc-skip: true\n      x-doc-skip: true\n    SearchResults:\n      required:\n      - epics\n      - stories\n      type: object\n      properties:\n        epics:\n          $ref: '#/components/schemas/EpicSearchResults'\n        stories:\n          $ref: '#/components/schemas/StorySearchResults'\n      description: The results of the multi-entity search query.\n    SearchStories:\n      type: object\n      properties:\n        archived:\n          type: boolean\n          description: A true/false boolean indicating whether the Story is in archived\n            state.\n        owner_id:\n          type: string\n          description: An array of UUIDs for any Users who may be Owners of the Stories.\n          format: uuid\n          nullable: true\n        story_type:\n          type: string\n          description: The type of Stories that you want returned.\n          enum:\n          - feature\n          - chore\n          - bug\n        epic_ids:\n          uniqueItems: true\n          type: array\n          description: The Epic IDs that may be associated with the Stories.\n          items:\n            type: integer\n            format: int64\n        project_ids:\n          uniqueItems: true\n          type: array\n          description: The IDs for the Projects the Stories may be assigned to.\n          items:\n            type: integer\n            format: int64\n        updated_at_end:\n          type: string\n          description: Stories should have been updated before this date.\n          format: date-time\n        completed_at_end:\n          type: string\n          description: Stories should have been completed before this date.\n          format: date-time\n        workflow_state_types:\n          type: array\n          description: The type of Workflow State the Stories may be in.\n          items:\n            type: string\n            enum:\n            - started\n            - unstarted\n            - done\n        deadline_end:\n          type: string\n          description: Stories should have a deadline before this date.\n          format: date-time\n        created_at_start:\n          type: string\n          description: Stories should have been created after this date.\n          format: date-time\n        epic_id:\n          type: integer\n          description: The Epic IDs that may be associated with the Stories.\n          format: int64\n          nullable: true\n        label_name:\n          minLength: 1\n          type: string\n          description: The name of any associated Labels.\n        requested_by_id:\n          type: string\n          description: The UUID of any Users who may have requested the Stories.\n          format: uuid\n        iteration_id:\n          type: integer\n          description: The Iteration ID that may be associated with the Stories.\n          format: int64\n          nullable: true\n        label_ids:\n          uniqueItems: true\n          type: array\n          description: The Label IDs that may be associated with the Stories.\n          items:\n            type: integer\n            format: int64\n        group_id:\n          type: string\n          description: The Group ID that is associated with the Stories\n          format: uuid\n          nullable: true\n        workflow_state_id:\n          type: integer\n          description: The unique IDs of the specific Workflow States that the Stories\n            should be in.\n          format: int64\n        iteration_ids:\n          uniqueItems: true\n          type: array\n          description: The Iteration IDs that may be associated with the Stories.\n          items:\n            type: integer\n            format: int64\n        created_at_end:\n          type: string\n          description: Stories should have been created before this date.\n          format: date-time\n        deadline_start:\n          type: string\n          description: Stories should have a deadline after this date.\n          format: date-time\n        group_ids:\n          uniqueItems: true\n          type: array\n          description: The Group IDs that are associated with the Stories\n          items:\n            type: string\n            format: uuid\n        owner_ids:\n          uniqueItems: true\n          type: array\n          description: An array of UUIDs for any Users who may be Owners of the Stories.\n          items:\n            type: string\n            format: uuid\n        external_id:\n          type: string\n          description: An ID or URL that references an external resource. Useful during\n            imports.\n        includes_description:\n          type: boolean\n          description: Whether to include the story description in the response.\n        estimate:\n          type: integer\n          description: The number of estimate points associate with the Stories.\n          format: int64\n        project_id:\n          type: integer\n          description: The IDs for the Projects the Stories may be assigned to.\n          format: int64\n        completed_at_start:\n          type: string\n          description: Stories should have been competed after this date.\n          format: date-time\n        updated_at_start:\n          type: string\n          description: Stories should have been updated after this date.\n          format: date-time\n      x-doc-skip: true\n    Story:\n      required:\n      - app_url\n      - archived\n      - blocked\n      - blocker\n      - branches\n      - comments\n      - commits\n      - completed\n      - completed_at\n      - completed_at_override\n      - created_at\n      - deadline\n      - description\n      - entity_type\n      - epic_id\n      - estimate\n      - external_id\n      - external_links\n      - files\n      - follower_ids\n      - group_id\n      - group_mention_ids\n      - id\n      - iteration_id\n      - label_ids\n      - labels\n      - linked_files\n      - member_mention_ids\n      - mention_ids\n      - moved_at\n      - name\n      - owner_ids\n      - position\n      - previous_iteration_ids\n      - project_id\n      - pull_requests\n      - requested_by_id\n      - started\n      - started_at\n      - started_at_override\n      - stats\n      - story_links\n      - story_template_id\n      - story_type\n      - tasks\n      - updated_at\n      - workflow_id\n      - workflow_state_id\n      type: object\n      properties:\n        app_url:\n          type: string\n          description: The Shortcut application url for the Story.\n        description:\n          type: string\n          description: The description of the story.\n        archived:\n          type: boolean\n          description: True if the story has been archived or not.\n        started:\n          type: boolean\n          description: A true/false boolean indicating if the Story has been started.\n        story_links:\n          type: array\n          description: An array of story links attached to the Story.\n          items:\n            $ref: '#/components/schemas/TypedStoryLink'\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        labels:\n          type: array\n          description: An array of labels attached to the story.\n          items:\n            $ref: '#/components/schemas/LabelSlim'\n        mention_ids:\n          type: array\n          description: 'Deprecated: use member_mention_ids.'\n          items:\n            type: string\n            format: uuid\n        member_mention_ids:\n          type: array\n          description: An array of Member IDs that have been mentioned in the Story\n            description.\n          items:\n            type: string\n            format: uuid\n        story_type:\n          type: string\n          description: The type of story (feature, bug, chore).\n        linked_files:\n          type: array\n          description: An array of linked files attached to the story.\n          items:\n            $ref: '#/components/schemas/LinkedFile'\n        workflow_id:\n          type: integer\n          description: The ID of the workflow the story belongs to.\n          format: int64\n        completed_at_override:\n          type: string\n          description: A manual override for the time/date the Story was completed.\n          format: date-time\n          nullable: true\n        started_at:\n          type: string\n          description: The time/date the Story was started.\n          format: date-time\n          nullable: true\n        completed_at:\n          type: string\n          description: The time/date the Story was completed.\n          format: date-time\n          nullable: true\n        name:\n          type: string\n          description: The name of the story.\n        completed:\n          type: boolean\n          description: A true/false boolean indicating if the Story has been completed.\n        comments:\n          type: array\n          description: An array of comments attached to the story.\n          items:\n            $ref: '#/components/schemas/StoryComment'\n        blocker:\n          type: boolean\n          description: A true/false boolean indicating if the Story is currently a\n            blocker of another story.\n        branches:\n          type: array\n          description: An array of Git branches attached to the story.\n          items:\n            $ref: '#/components/schemas/Branch'\n        epic_id:\n          type: integer\n          description: The ID of the epic the story belongs to.\n          format: int64\n          nullable: true\n        story_template_id:\n          type: string\n          description: The ID of the story template used to create this story, or\n            null if not created using a template.\n          format: uuid\n          nullable: true\n        external_links:\n          type: array\n          description: An array of external links (strings) associated with a Story\n          items:\n            type: string\n        previous_iteration_ids:\n          type: array\n          description: The IDs of the iteration the story belongs to.\n          items:\n            type: integer\n            format: int64\n        requested_by_id:\n          type: string\n          description: The ID of the Member that requested the story.\n          format: uuid\n        iteration_id:\n          type: integer\n          description: The ID of the iteration the story belongs to.\n          format: int64\n          nullable: true\n        tasks:\n          type: array\n          description: An array of tasks connected to the story.\n          items:\n            $ref: '#/components/schemas/Task'\n        label_ids:\n          type: array\n          description: An array of label ids attached to the story.\n          items:\n            type: integer\n            format: int64\n        started_at_override:\n          type: string\n          description: A manual override for the time/date the Story was started.\n          format: date-time\n          nullable: true\n        group_id:\n          type: string\n          description: The ID of the group associated with the story.\n          format: uuid\n          nullable: true\n        workflow_state_id:\n          type: integer\n          description: The ID of the workflow state the story is currently in.\n          format: int64\n        updated_at:\n          type: string\n          description: The time/date the Story was updated.\n          format: date-time\n          nullable: true\n        pull_requests:\n          type: array\n          description: An array of Pull/Merge Requests attached to the story.\n          items:\n            $ref: '#/components/schemas/PullRequest'\n        group_mention_ids:\n          type: array\n          description: An array of Group IDs that have been mentioned in the Story\n            description.\n          items:\n            type: string\n            format: uuid\n        follower_ids:\n          type: array\n          description: An array of UUIDs for any Members listed as Followers.\n          items:\n            type: string\n            format: uuid\n        owner_ids:\n          type: array\n          description: An array of UUIDs of the owners of this story.\n          items:\n            type: string\n            format: uuid\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Story has been imported from another tool, the ID in the other tool\n            can be indicated here.\n          nullable: true\n        id:\n          type: integer\n          description: The unique ID of the Story.\n          format: int64\n        lead_time:\n          type: integer\n          description: The lead time (in seconds) of this story when complete.\n          format: int64\n        estimate:\n          type: integer\n          description: The numeric point estimate of the story. Can also be null,\n            which means unestimated.\n          format: int64\n          nullable: true\n        commits:\n          type: array\n          description: An array of commits attached to the story.\n          items:\n            $ref: '#/components/schemas/Commit'\n        files:\n          type: array\n          description: An array of files attached to the story.\n          items:\n            $ref: '#/components/schemas/UploadedFile'\n        position:\n          type: integer\n          description: A number representing the position of the story in relation\n            to every other story in the current project.\n          format: int64\n        blocked:\n          type: boolean\n          description: A true/false boolean indicating if the Story is currently blocked.\n        project_id:\n          type: integer\n          description: The ID of the project the story belongs to.\n          format: int64\n          nullable: true\n        deadline:\n          type: string\n          description: The due date of the story.\n          format: date-time\n          nullable: true\n        stats:\n          $ref: '#/components/schemas/StoryStats'\n        cycle_time:\n          type: integer\n          description: The cycle time (in seconds) of this story when complete.\n          format: int64\n        created_at:\n          type: string\n          description: The time/date the Story was created.\n          format: date-time\n        moved_at:\n          type: string\n          description: The time/date the Story was last changed workflow-state.\n          format: date-time\n          nullable: true\n      description: Stories are the standard unit of work in Shortcut and represent\n        individual features, bugs, and chores.\n    StoryComment:\n      required:\n      - app_url\n      - author_id\n      - created_at\n      - entity_type\n      - external_id\n      - group_mention_ids\n      - id\n      - member_mention_ids\n      - mention_ids\n      - position\n      - reactions\n      - story_id\n      - text\n      - updated_at\n      type: object\n      properties:\n        app_url:\n          type: string\n          description: The Shortcut application url for the Comment.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        story_id:\n          type: integer\n          description: The ID of the Story on which the Comment appears.\n          format: int64\n        mention_ids:\n          type: array\n          description: 'Deprecated: use member_mention_ids.'\n          items:\n            type: string\n            format: uuid\n        author_id:\n          type: string\n          description: The unique ID of the Member who is the Comment's author.\n          format: uuid\n          nullable: true\n        member_mention_ids:\n          type: array\n          description: The unique IDs of the Member who are mentioned in the Comment.\n          items:\n            type: string\n            format: uuid\n        updated_at:\n          type: string\n          description: The time/date when the Comment was updated.\n          format: date-time\n          nullable: true\n        group_mention_ids:\n          type: array\n          description: The unique IDs of the Group who are mentioned in the Comment.\n          items:\n            type: string\n            format: uuid\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Comment has been imported from another tool, the ID in the other tool\n            can be indicated here.\n          nullable: true\n        id:\n          type: integer\n          description: The unique ID of the Comment.\n          format: int64\n        position:\n          type: integer\n          description: The Comments numerical position in the list from oldest to\n            newest.\n          format: int64\n        reactions:\n          type: array\n          description: A set of Reactions to this Comment.\n          items:\n            $ref: '#/components/schemas/StoryReaction'\n          x-doc-skip: true\n        created_at:\n          type: string\n          description: The time/date when the Comment was created.\n          format: date-time\n        text:\n          type: string\n          description: The text of the Comment.\n      description: A Comment is any note added within the Comment field of a Story.\n    StoryContents:\n      type: object\n      properties:\n        description:\n          type: string\n          description: The description of the story.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        labels:\n          type: array\n          description: An array of labels attached to the story.\n          items:\n            $ref: '#/components/schemas/LabelSlim'\n        story_type:\n          type: string\n          description: The type of story (feature, bug, chore).\n        linked_files:\n          type: array\n          description: An array of linked files attached to the story.\n          items:\n            $ref: '#/components/schemas/LinkedFile'\n        name:\n          type: string\n          description: The name of the story.\n        epic_id:\n          type: integer\n          description: The ID of the epic the story belongs to.\n          format: int64\n        external_links:\n          type: array\n          description: An array of external links connected to the story.\n          items:\n            type: string\n        iteration_id:\n          type: integer\n          description: The ID of the iteration the story belongs to.\n          format: int64\n        tasks:\n          type: array\n          description: An array of tasks connected to the story.\n          items:\n            $ref: '#/components/schemas/StoryContentsTask'\n        label_ids:\n          type: array\n          description: An array of label ids attached to the story.\n          items:\n            type: integer\n            format: int64\n        group_id:\n          type: string\n          description: The ID of the group to which the story is assigned.\n          format: uuid\n        workflow_state_id:\n          type: integer\n          description: The ID of the workflow state the story is currently in.\n          format: int64\n        follower_ids:\n          type: array\n          description: An array of UUIDs for any Members listed as Followers.\n          items:\n            type: string\n            format: uuid\n        owner_ids:\n          type: array\n          description: An array of UUIDs of the owners of this story.\n          items:\n            type: string\n            format: uuid\n        estimate:\n          type: integer\n          description: The numeric point estimate of the story. Can also be null,\n            which means unestimated.\n          format: int64\n        files:\n          type: array\n          description: An array of files attached to the story.\n          items:\n            $ref: '#/components/schemas/UploadedFile'\n        project_id:\n          type: integer\n          description: The ID of the project the story belongs to.\n          format: int64\n        deadline:\n          type: string\n          description: The due date of the story.\n          format: date-time\n      description: A container entity for the attributes this template should populate.\n    StoryContentsTask:\n      required:\n      - description\n      type: object\n      properties:\n        description:\n          type: string\n          description: Full text of the Task.\n        position:\n          type: integer\n          description: The number corresponding to the Task's position within a list\n            of Tasks on a Story.\n          format: int64\n        complete:\n          type: boolean\n          description: True/false boolean indicating whether the Task has been completed.\n        owner_ids:\n          type: array\n          description: An array of UUIDs of the Owners of this Task.\n          items:\n            type: string\n            format: uuid\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Task has been imported from another tool, the ID in the other tool\n            can be indicated here.\n          nullable: true\n    StoryHistoryChangeAddsRemovesInt:\n      type: object\n      properties:\n        adds:\n          type: array\n          description: The values that have been added.\n          items:\n            type: integer\n            format: int64\n        removes:\n          type: array\n          description: The values that have been removed\n          items:\n            type: integer\n            format: int64\n      description: Task IDs that have been added or removed from the Story.\n    StoryHistoryChangeAddsRemovesUuid:\n      type: object\n      properties:\n        adds:\n          type: array\n          description: The values that have been added.\n          items:\n            type: string\n            format: uuid\n        removes:\n          type: array\n          description: The values that have been removed\n          items:\n            type: string\n            format: uuid\n      description: Member IDs that have been added or removed as a owner of the Story.\n    StoryHistoryChangeOldNewBool:\n      type: object\n      properties:\n        old:\n          type: boolean\n          description: The old value.\n        new:\n          type: boolean\n          description: The new value.\n      description: True if the Story has archived, otherwise false.\n    StoryHistoryChangeOldNewInt:\n      type: object\n      properties:\n        old:\n          type: integer\n          description: The old value.\n          format: int64\n        new:\n          type: integer\n          description: The new value.\n          format: int64\n      description: The estimate value for the Story\n    StoryHistoryChangeOldNewStr:\n      type: object\n      properties:\n        old:\n          type: string\n          description: The old value.\n        new:\n          type: string\n          description: The new value.\n      description: A timestamp that represents the Story's deadline.\n    StoryHistoryChangeOldNewUuid:\n      type: object\n      properties:\n        old:\n          type: string\n          description: The old value.\n          format: uuid\n        new:\n          type: string\n          description: The new value.\n          format: uuid\n      description: The Member ID of the preson who requested the Story.\n    StoryLink:\n      required:\n      - created_at\n      - entity_type\n      - id\n      - object_id\n      - subject_id\n      - subject_workflow_state_id\n      - updated_at\n      - verb\n      type: object\n      properties:\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        id:\n          type: integer\n          description: The unique identifier of the Story Link.\n          format: int64\n        subject_id:\n          type: integer\n          description: The ID of the subject Story.\n          format: int64\n        subject_workflow_state_id:\n          type: integer\n          description: The workflow state of the \"subject\" story.\n          format: int64\n          x-doc-skip: true\n        verb:\n          type: string\n          description: How the subject Story acts on the object Story. This can be\n            \"blocks\", \"duplicates\", or \"relates to\".\n        object_id:\n          type: integer\n          description: The ID of the object Story.\n          format: int64\n        created_at:\n          type: string\n          description: The time/date when the Story Link was created.\n          format: date-time\n        updated_at:\n          type: string\n          description: The time/date when the Story Link was last updated.\n          format: date-time\n      description: Story links allow you create semantic relationships between two\n        stories. Relationship types are relates to, blocks / blocked by, and duplicates\n        / is duplicated by. The format is `subject -\u003e link -\u003e object`, or for example\n        \"story 5 blocks story 6\".\n    StoryReaction:\n      required:\n      - emoji\n      - permission_ids\n      type: object\n      properties:\n        emoji:\n          type: string\n          description: Emoji text of the reaction.\n        permission_ids:\n          type: array\n          description: Permissions who have reacted with this.\n          items:\n            type: string\n            format: uuid\n      description: Emoji reaction on a comment.\n      x-doc-skip: true\n    StorySearchResults:\n      required:\n      - data\n      - next\n      - total\n      type: object\n      properties:\n        total:\n          type: integer\n          description: The total number of matches for the search query. The first\n            1000 matches can be paged through via the API.\n          format: int64\n        data:\n          type: array\n          description: A list of search results.\n          items:\n            $ref: '#/components/schemas/Story'\n        next:\n          type: string\n          description: The URL path and query string for the next page of search results.\n          nullable: true\n        cursors:\n          type: array\n          description: Cursors\n          items:\n            type: string\n      description: The results of the Story search query.\n    StorySlim:\n      required:\n      - app_url\n      - archived\n      - blocked\n      - blocker\n      - comment_ids\n      - completed\n      - completed_at\n      - completed_at_override\n      - created_at\n      - deadline\n      - entity_type\n      - epic_id\n      - estimate\n      - external_id\n      - external_links\n      - file_ids\n      - follower_ids\n      - group_id\n      - group_mention_ids\n      - id\n      - iteration_id\n      - label_ids\n      - labels\n      - linked_file_ids\n      - member_mention_ids\n      - mention_ids\n      - moved_at\n      - name\n      - num_tasks_completed\n      - owner_ids\n      - position\n      - previous_iteration_ids\n      - project_id\n      - requested_by_id\n      - started\n      - started_at\n      - started_at_override\n      - stats\n      - story_links\n      - story_template_id\n      - story_type\n      - task_ids\n      - updated_at\n      - workflow_id\n      - workflow_state_id\n      type: object\n      properties:\n        app_url:\n          type: string\n          description: The Shortcut application url for the Story.\n        description:\n          type: string\n          description: The description of the Story.\n        archived:\n          type: boolean\n          description: True if the story has been archived or not.\n        started:\n          type: boolean\n          description: A true/false boolean indicating if the Story has been started.\n        story_links:\n          type: array\n          description: An array of story links attached to the Story.\n          items:\n            $ref: '#/components/schemas/TypedStoryLink'\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        labels:\n          type: array\n          description: An array of labels attached to the story.\n          items:\n            $ref: '#/components/schemas/LabelSlim'\n        task_ids:\n          type: array\n          description: An array of IDs of Tasks attached to the story.\n          items:\n            type: integer\n            format: int64\n        mention_ids:\n          type: array\n          description: 'Deprecated: use member_mention_ids.'\n          items:\n            type: string\n            format: uuid\n        member_mention_ids:\n          type: array\n          description: An array of Member IDs that have been mentioned in the Story\n            description.\n          items:\n            type: string\n            format: uuid\n        story_type:\n          type: string\n          description: The type of story (feature, bug, chore).\n        file_ids:\n          type: array\n          description: An array of IDs of Files attached to the story.\n          items:\n            type: integer\n            format: int64\n        num_tasks_completed:\n          type: integer\n          description: The number of tasks on the story which are complete.\n          format: int64\n        workflow_id:\n          type: integer\n          description: The ID of the workflow the story belongs to.\n          format: int64\n        completed_at_override:\n          type: string\n          description: A manual override for the time/date the Story was completed.\n          format: date-time\n          nullable: true\n        started_at:\n          type: string\n          description: The time/date the Story was started.\n          format: date-time\n          nullable: true\n        completed_at:\n          type: string\n          description: The time/date the Story was completed.\n          format: date-time\n          nullable: true\n        name:\n          type: string\n          description: The name of the story.\n        completed:\n          type: boolean\n          description: A true/false boolean indicating if the Story has been completed.\n        blocker:\n          type: boolean\n          description: A true/false boolean indicating if the Story is currently a\n            blocker of another story.\n        epic_id:\n          type: integer\n          description: The ID of the epic the story belongs to.\n          format: int64\n          nullable: true\n        story_template_id:\n          type: string\n          description: The ID of the story template used to create this story, or\n            null if not created using a template.\n          format: uuid\n          nullable: true\n        external_links:\n          type: array\n          description: An array of external links (strings) associated with a Story\n          items:\n            type: string\n        previous_iteration_ids:\n          type: array\n          description: The IDs of the iteration the story belongs to.\n          items:\n            type: integer\n            format: int64\n        requested_by_id:\n          type: string\n          description: The ID of the Member that requested the story.\n          format: uuid\n        iteration_id:\n          type: integer\n          description: The ID of the iteration the story belongs to.\n          format: int64\n          nullable: true\n        label_ids:\n          type: array\n          description: An array of label ids attached to the story.\n          items:\n            type: integer\n            format: int64\n        started_at_override:\n          type: string\n          description: A manual override for the time/date the Story was started.\n          format: date-time\n          nullable: true\n        group_id:\n          type: string\n          description: The ID of the group associated with the story.\n          format: uuid\n          nullable: true\n        workflow_state_id:\n          type: integer\n          description: The ID of the workflow state the story is currently in.\n          format: int64\n        updated_at:\n          type: string\n          description: The time/date the Story was updated.\n          format: date-time\n          nullable: true\n        group_mention_ids:\n          type: array\n          description: An array of Group IDs that have been mentioned in the Story\n            description.\n          items:\n            type: string\n            format: uuid\n        follower_ids:\n          type: array\n          description: An array of UUIDs for any Members listed as Followers.\n          items:\n            type: string\n            format: uuid\n        owner_ids:\n          type: array\n          description: An array of UUIDs of the owners of this story.\n          items:\n            type: string\n            format: uuid\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Story has been imported from another tool, the ID in the other tool\n            can be indicated here.\n          nullable: true\n        id:\n          type: integer\n          description: The unique ID of the Story.\n          format: int64\n        lead_time:\n          type: integer\n          description: The lead time (in seconds) of this story when complete.\n          format: int64\n        estimate:\n          type: integer\n          description: The numeric point estimate of the story. Can also be null,\n            which means unestimated.\n          format: int64\n          nullable: true\n        position:\n          type: integer\n          description: A number representing the position of the story in relation\n            to every other story in the current project.\n          format: int64\n        blocked:\n          type: boolean\n          description: A true/false boolean indicating if the Story is currently blocked.\n        project_id:\n          type: integer\n          description: The ID of the project the story belongs to.\n          format: int64\n          nullable: true\n        linked_file_ids:\n          type: array\n          description: An array of IDs of LinkedFiles attached to the story.\n          items:\n            type: integer\n            format: int64\n        deadline:\n          type: string\n          description: The due date of the story.\n          format: date-time\n          nullable: true\n        stats:\n          $ref: '#/components/schemas/StoryStats'\n        comment_ids:\n          type: array\n          description: An array of IDs of Comments attached to the story.\n          items:\n            type: integer\n            format: int64\n        cycle_time:\n          type: integer\n          description: The cycle time (in seconds) of this story when complete.\n          format: int64\n        created_at:\n          type: string\n          description: The time/date the Story was created.\n          format: date-time\n        moved_at:\n          type: string\n          description: The time/date the Story was last changed workflow-state.\n          format: date-time\n          nullable: true\n      description: StorySlim represents the same resource as a Story, but is more\n        light-weight. For certain fields it provides ids rather than full resources\n        (e.g., `comment_ids` and `file_ids`) and it also excludes certain aggregate\n        values (e.g., `cycle_time`). The `description` field can be optionally included.\n        Use the [Get Story](#Get-Story) endpoint to fetch the unabridged payload for\n        a Story.\n    StoryStats:\n      required:\n      - num_related_documents\n      type: object\n      properties:\n        num_related_documents:\n          type: integer\n          description: The number of documents related to this Story.\n          format: int64\n      description: The stats object for Stories\n      x-doc-skip: true\n    Task:\n      required:\n      - complete\n      - completed_at\n      - created_at\n      - description\n      - entity_type\n      - external_id\n      - group_mention_ids\n      - id\n      - member_mention_ids\n      - mention_ids\n      - owner_ids\n      - position\n      - story_id\n      - updated_at\n      type: object\n      properties:\n        description:\n          type: string\n          description: Full text of the Task.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        story_id:\n          type: integer\n          description: The unique identifier of the parent Story.\n          format: int64\n        mention_ids:\n          type: array\n          description: 'Deprecated: use member_mention_ids.'\n          items:\n            type: string\n            format: uuid\n        member_mention_ids:\n          type: array\n          description: An array of UUIDs of Members mentioned in this Task.\n          items:\n            type: string\n            format: uuid\n        completed_at:\n          type: string\n          description: The time/date the Task was completed.\n          format: date-time\n          nullable: true\n        updated_at:\n          type: string\n          description: The time/date the Task was updated.\n          format: date-time\n          nullable: true\n        group_mention_ids:\n          type: array\n          description: An array of UUIDs of Groups mentioned in this Task.\n          items:\n            type: string\n            format: uuid\n        owner_ids:\n          type: array\n          description: An array of UUIDs of the Owners of this Task.\n          items:\n            type: string\n            format: uuid\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Task has been imported from another tool, the ID in the other tool\n            can be indicated here.\n          nullable: true\n        id:\n          type: integer\n          description: The unique ID of the Task.\n          format: int64\n        position:\n          type: integer\n          description: The number corresponding to the Task's position within a list\n            of Tasks on a Story.\n          format: int64\n        complete:\n          type: boolean\n          description: True/false boolean indicating whether the Task has been completed.\n        created_at:\n          type: string\n          description: The time/date the Task was created.\n          format: date-time\n    ThreadedComment:\n      required:\n      - app_url\n      - author_id\n      - comments\n      - created_at\n      - deleted\n      - entity_type\n      - external_id\n      - group_mention_ids\n      - id\n      - member_mention_ids\n      - mention_ids\n      - text\n      - updated_at\n      type: object\n      properties:\n        app_url:\n          type: string\n          description: The Shortcut application url for the Comment.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        deleted:\n          type: boolean\n          description: True/false boolean indicating whether the Comment is deleted.\n        mention_ids:\n          type: array\n          description: 'Deprecated: use member_mention_ids.'\n          items:\n            type: string\n            format: uuid\n        author_id:\n          type: string\n          description: The unique ID of the Member that authored the Comment.\n          format: uuid\n        member_mention_ids:\n          type: array\n          description: An array of Member IDs that have been mentioned in this Comment.\n          items:\n            type: string\n            format: uuid\n        comments:\n          type: array\n          description: A nested array of threaded comments.\n          items:\n            $ref: '#/components/schemas/ThreadedComment'\n        updated_at:\n          type: string\n          description: The time/date the Comment was updated.\n          format: date-time\n        group_mention_ids:\n          type: array\n          description: An array of Group IDs that have been mentioned in this Comment.\n          items:\n            type: string\n            format: uuid\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the Comment has been imported from another tool, the ID in the other tool\n            can be indicated here.\n          nullable: true\n        id:\n          type: integer\n          description: The unique ID of the Comment.\n          format: int64\n        created_at:\n          type: string\n          description: The time/date the Comment was created.\n          format: date-time\n        text:\n          type: string\n          description: The text of the Comment.\n      description: Comments associated with Epic Discussions.\n    TypedStoryLink:\n      required:\n      - created_at\n      - entity_type\n      - id\n      - object_id\n      - subject_id\n      - subject_workflow_state_id\n      - type\n      - updated_at\n      - verb\n      type: object\n      properties:\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        object_id:\n          type: integer\n          description: The ID of the object Story.\n          format: int64\n        verb:\n          type: string\n          description: How the subject Story acts on the object Story. This can be\n            \"blocks\", \"duplicates\", or \"relates to\".\n        type:\n          type: string\n          description: This indicates whether the Story is the subject or object in\n            the Story Link.\n        updated_at:\n          type: string\n          description: The time/date when the Story Link was last updated.\n          format: date-time\n        id:\n          type: integer\n          description: The unique identifier of the Story Link.\n          format: int64\n        subject_id:\n          type: integer\n          description: The ID of the subject Story.\n          format: int64\n        subject_workflow_state_id:\n          type: integer\n          description: The workflow state of the \"subject\" story.\n          format: int64\n          x-doc-skip: true\n        created_at:\n          type: string\n          description: The time/date when the Story Link was created.\n          format: date-time\n      description: 'The type of Story Link. The string can be subject or object. '\n    UnusableEntitlementError:\n      required:\n      - entitlement_tag\n      - message\n      - reason_tag\n      type: object\n      properties:\n        reason_tag:\n          type: string\n          description: The tag for violating an entitlement action.\n          enum:\n          - entitlement-violation\n        entitlement_tag:\n          maxLength: 63\n          minLength: 1\n          type: string\n          description: Short tag describing the unusable entitlement action taken\n            by the user.\n        message:\n          maxLength: 256\n          minLength: 1\n          type: string\n          description: Message displayed to the user on why their action failed.\n      x-doc-skip: true\n    UpdateCategory:\n      type: object\n      properties:\n        name:\n          minLength: 1\n          type: string\n          description: The new name of the Category.\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The hex color to be displayed with the Category (for example,\n            \"#ff0000\").\n          format: css-color\n          nullable: true\n        archived:\n          type: boolean\n          description: A true/false boolean indicating if the Category has been archived.\n      x-doc-skip: true\n    UpdateComment:\n      required:\n      - text\n      type: object\n      properties:\n        text:\n          type: string\n          description: The updated comment text.\n      x-doc-skip: true\n    UpdateEntityTemplate:\n      type: object\n      properties:\n        name:\n          minLength: 1\n          type: string\n          description: The updated template name.\n        story_contents:\n          $ref: '#/components/schemas/UpdateStoryContents'\n      description: |-\n        Request parameters for changing either a template's name or any of\n          the attributes it is designed to pre-populate.\n    UpdateEpic:\n      type: object\n      properties:\n        description:\n          maxLength: 100000\n          type: string\n          description: The Epic's description.\n        archived:\n          type: boolean\n          description: A true/false boolean indicating whether the Epic is in archived\n            state.\n        labels:\n          type: array\n          description: An array of Labels attached to the Epic.\n          items:\n            $ref: '#/components/schemas/CreateLabelParams'\n        completed_at_override:\n          type: string\n          description: A manual override for the time/date the Epic was completed.\n          format: date-time\n          nullable: true\n        name:\n          maxLength: 256\n          minLength: 1\n          type: string\n          description: The Epic's name.\n        planned_start_date:\n          type: string\n          description: The Epic's planned start date.\n          format: date-time\n          nullable: true\n        state:\n          type: string\n          description: '`Deprecated` The Epic''s state (to do, in progress, or done);\n            will be ignored when `epic_state_id` is set.'\n          enum:\n          - in progress\n          - to do\n          - done\n        milestone_id:\n          type: integer\n          description: The ID of the Milestone this Epic is related to.\n          format: int64\n          nullable: true\n        requested_by_id:\n          type: string\n          description: The ID of the member that requested the epic.\n          format: uuid\n        epic_state_id:\n          type: integer\n          description: The ID of the Epic State.\n          format: int64\n        started_at_override:\n          type: string\n          description: A manual override for the time/date the Epic was started.\n          format: date-time\n          nullable: true\n        group_id:\n          type: string\n          description: The ID of the group to associate with the epic.\n          format: uuid\n          nullable: true\n        follower_ids:\n          type: array\n          description: An array of UUIDs for any Members you want to add as Followers\n            on this Epic.\n          items:\n            type: string\n            format: uuid\n        owner_ids:\n          type: array\n          description: An array of UUIDs for any members you want to add as Owners\n            on this Epic.\n          items:\n            type: string\n            format: uuid\n        before_id:\n          type: integer\n          description: The ID of the Epic we want to move this Epic before.\n          format: int64\n        after_id:\n          type: integer\n          description: The ID of the Epic we want to move this Epic after.\n          format: int64\n        deadline:\n          type: string\n          description: The Epic's deadline.\n          format: date-time\n          nullable: true\n      x-doc-skip: true\n    UpdateFile:\n      type: object\n      properties:\n        description:\n          type: string\n          description: The description of the file.\n        created_at:\n          type: string\n          description: The time/date that the file was uploaded.\n          format: date-time\n        updated_at:\n          type: string\n          description: The time/date that the file was last updated.\n          format: date-time\n        name:\n          maxLength: 1024\n          minLength: 1\n          type: string\n          description: The name of the file.\n        uploader_id:\n          type: string\n          description: The unique ID assigned to the Member who uploaded the file\n            to Shortcut.\n          format: uuid\n        external_id:\n          type: string\n          description: An additional ID that you may wish to assign to the file.\n      x-doc-skip: true\n    UpdateGroup:\n      type: object\n      properties:\n        description:\n          type: string\n          description: The description of this Group.\n        archived:\n          type: boolean\n          description: Whether or not this Group is archived.\n          nullable: true\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The color you wish to use for the Group in the system.\n          format: css-color\n          nullable: true\n        display_icon_id:\n          type: string\n          description: The Icon id for the avatar of this Group.\n          format: uuid\n          nullable: true\n        mention_name:\n          minLength: 1\n          type: string\n          description: The mention name of this Group.\n        name:\n          minLength: 1\n          type: string\n          description: The name of this Group.\n        color_key:\n          type: string\n          description: The color key you wish to use for the Group in the system.\n          enum:\n          - blue\n          - purple\n          - midnight-blue\n          - orange\n          - yellow-green\n          - brass\n          - gray\n          - fuchsia\n          - yellow\n          - pink\n          - sky-blue\n          - green\n          - red\n          - black\n          - slate\n          - turquoise\n        member_ids:\n          uniqueItems: true\n          type: array\n          description: The Member ids to add to this Group.\n          items:\n            type: string\n            format: uuid\n        workflow_ids:\n          type: array\n          description: The Workflow ids to add to the Group.\n          items:\n            type: integer\n            format: int64\n    UpdateIteration:\n      type: object\n      properties:\n        follower_ids:\n          type: array\n          description: An array of UUIDs for any Members you want to add as Followers.\n          items:\n            type: string\n            format: uuid\n        group_ids:\n          type: array\n          description: An array of UUIDs for any Groups you want to add as Followers.\n            Currently, only one Group association is presented in our web UI.\n          items:\n            type: string\n            format: uuid\n        labels:\n          type: array\n          description: An array of Labels attached to the Iteration.\n          items:\n            $ref: '#/components/schemas/CreateLabelParams'\n        description:\n          maxLength: 100000\n          type: string\n          description: The description of the Iteration.\n        name:\n          minLength: 1\n          type: string\n          description: The name of this Iteration\n        start_date:\n          minLength: 1\n          type: string\n          description: The date this Iteration begins, e.g. 2019-07-01\n        end_date:\n          minLength: 1\n          type: string\n          description: The date this Iteration ends, e.g. 2019-07-05.\n    UpdateLabel:\n      type: object\n      properties:\n        name:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: The new name of the label.\n        description:\n          type: string\n          description: The new description of the label.\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The hex color to be displayed with the Label (for example,\n            \"#ff0000\").\n          format: css-color\n          nullable: true\n        archived:\n          type: boolean\n          description: A true/false boolean indicating if the Label has been archived.\n      x-doc-skip: true\n    UpdateLinkedFile:\n      type: object\n      properties:\n        description:\n          type: string\n          description: The description of the file.\n        story_id:\n          type: integer\n          description: The ID of the linked story.\n          format: int64\n        name:\n          minLength: 1\n          type: string\n          description: The name of the file.\n        thumbnail_url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The URL of the thumbnail, if the integration provided it.\n        type:\n          type: string\n          description: The integration type of the file (e.g. google, dropbox, box).\n          enum:\n          - google\n          - url\n          - dropbox\n          - box\n          - onedrive\n        size:\n          type: integer\n          description: The filesize, if the integration provided it.\n          format: int64\n        uploader_id:\n          type: string\n          description: The UUID of the member that uploaded the file.\n          format: uuid\n        url:\n          maxLength: 2048\n          pattern: ^https?://.+$\n          type: string\n          description: The URL of linked file.\n      x-doc-skip: true\n    UpdateMilestone:\n      type: object\n      properties:\n        description:\n          maxLength: 100000\n          type: string\n          description: The Milestone's description.\n        completed_at_override:\n          type: string\n          description: A manual override for the time/date the Milestone was completed.\n          format: date-time\n          nullable: true\n        name:\n          maxLength: 256\n          minLength: 1\n          type: string\n          description: The name of the Milestone.\n        state:\n          type: string\n          description: The workflow state that the Milestone is in.\n          enum:\n          - in progress\n          - to do\n          - done\n        started_at_override:\n          type: string\n          description: A manual override for the time/date the Milestone was started.\n          format: date-time\n          nullable: true\n        categories:\n          type: array\n          description: An array of IDs of Categories attached to the Milestone.\n          items:\n            $ref: '#/components/schemas/CreateCategoryParams'\n        before_id:\n          type: integer\n          description: The ID of the Milestone we want to move this Milestone before.\n          format: int64\n        after_id:\n          type: integer\n          description: The ID of the Milestone we want to move this Milestone after.\n          format: int64\n      x-doc-skip: true\n    UpdateProject:\n      type: object\n      properties:\n        description:\n          maxLength: 100000\n          type: string\n          description: The Project's description.\n        archived:\n          type: boolean\n          description: A true/false boolean indicating whether the Story is in archived\n            state.\n        days_to_thermometer:\n          type: integer\n          description: The number of days before the thermometer appears in the Story\n            summary.\n          format: int64\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The color that represents the Project in the UI.\n          format: css-color\n        name:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: The Project's name.\n        follower_ids:\n          type: array\n          description: An array of UUIDs for any Members you want to add as Followers.\n          items:\n            type: string\n            format: uuid\n        show_thermometer:\n          type: boolean\n          description: Configuration to enable or disable thermometers in the Story\n            summary.\n        team_id:\n          type: integer\n          description: The ID of the team the project belongs to.\n          format: int64\n        abbreviation:\n          type: string\n          description: The Project abbreviation used in Story summaries. Should be\n            kept to 3 characters at most.\n      x-doc-skip: true\n    UpdateStories:\n      required:\n      - story_ids\n      type: object\n      properties:\n        archived:\n          type: boolean\n          description: If the Stories should be archived or not.\n        story_ids:\n          uniqueItems: true\n          type: array\n          description: The Ids of the Stories you wish to update.\n          items:\n            type: integer\n            format: int64\n        story_type:\n          type: string\n          description: The type of story (feature, bug, chore).\n          enum:\n          - feature\n          - chore\n          - bug\n        move_to:\n          type: string\n          description: One of \"first\" or \"last\". This can be used to move the given\n            story to the first or last position in the workflow state.\n          enum:\n          - last\n          - first\n        follower_ids_add:\n          uniqueItems: true\n          type: array\n          description: The UUIDs of the new followers to be added.\n          items:\n            type: string\n            format: uuid\n        epic_id:\n          type: integer\n          description: The ID of the epic the story belongs to.\n          format: int64\n          nullable: true\n        external_links:\n          type: array\n          description: An array of External Links associated with this story.\n          items:\n            type: string\n        follower_ids_remove:\n          uniqueItems: true\n          type: array\n          description: The UUIDs of the followers to be removed.\n          items:\n            type: string\n            format: uuid\n        requested_by_id:\n          type: string\n          description: The ID of the member that requested the story.\n          format: uuid\n        iteration_id:\n          type: integer\n          description: The ID of the iteration the story belongs to.\n          format: int64\n          nullable: true\n        labels_add:\n          type: array\n          description: An array of labels to be added.\n          items:\n            $ref: '#/components/schemas/CreateLabelParams'\n        group_id:\n          type: string\n          description: The Id of the Group the Stories should belong to.\n          format: uuid\n          nullable: true\n        workflow_state_id:\n          type: integer\n          description: The ID of the workflow state to put the stories in.\n          format: int64\n        before_id:\n          type: integer\n          description: The ID of the story that the stories are to be moved before.\n          format: int64\n        estimate:\n          type: integer\n          description: The numeric point estimate of the story. Can also be null,\n            which means unestimated.\n          format: int64\n          nullable: true\n        after_id:\n          type: integer\n          description: The ID of the story that the stories are to be moved below.\n          format: int64\n        owner_ids_remove:\n          uniqueItems: true\n          type: array\n          description: The UUIDs of the owners to be removed.\n          items:\n            type: string\n            format: uuid\n        project_id:\n          type: integer\n          description: The ID of the Project the Stories should belong to.\n          format: int64\n          nullable: true\n        labels_remove:\n          type: array\n          description: An array of labels to be removed.\n          items:\n            $ref: '#/components/schemas/CreateLabelParams'\n        deadline:\n          type: string\n          description: The due date of the story.\n          format: date-time\n          nullable: true\n        owner_ids_add:\n          uniqueItems: true\n          type: array\n          description: The UUIDs of the new owners to be added.\n          items:\n            type: string\n            format: uuid\n      x-doc-skip: true\n    UpdateStory:\n      type: object\n      properties:\n        description:\n          maxLength: 100000\n          type: string\n          description: The description of the story.\n        archived:\n          type: boolean\n          description: True if the story is archived, otherwise false.\n        labels:\n          type: array\n          description: An array of labels attached to the story.\n          items:\n            $ref: '#/components/schemas/CreateLabelParams'\n        pull_request_ids:\n          uniqueItems: true\n          type: array\n          description: An array of IDs of Pull/Merge Requests attached to the story.\n          items:\n            type: integer\n            format: int64\n        story_type:\n          type: string\n          description: The type of story (feature, bug, chore).\n          enum:\n          - feature\n          - chore\n          - bug\n        move_to:\n          type: string\n          description: One of \"first\" or \"last\". This can be used to move the given\n            story to the first or last position in the workflow state.\n          enum:\n          - last\n          - first\n        file_ids:\n          uniqueItems: true\n          type: array\n          description: An array of IDs of files attached to the story.\n          items:\n            type: integer\n            format: int64\n        completed_at_override:\n          type: string\n          description: A manual override for the time/date the Story was completed.\n          format: date-time\n          nullable: true\n        name:\n          maxLength: 512\n          minLength: 1\n          type: string\n          description: The title of the story.\n        epic_id:\n          type: integer\n          description: The ID of the epic the story belongs to.\n          format: int64\n          nullable: true\n        external_links:\n          type: array\n          description: An array of External Links associated with this story.\n          items:\n            type: string\n        branch_ids:\n          uniqueItems: true\n          type: array\n          description: An array of IDs of Branches attached to the story.\n          items:\n            type: integer\n            format: int64\n        commit_ids:\n          uniqueItems: true\n          type: array\n          description: An array of IDs of Commits attached to the story.\n          items:\n            type: integer\n            format: int64\n        requested_by_id:\n          type: string\n          description: The ID of the member that requested the story.\n          format: uuid\n        iteration_id:\n          type: integer\n          description: The ID of the iteration the story belongs to.\n          format: int64\n          nullable: true\n        started_at_override:\n          type: string\n          description: A manual override for the time/date the Story was started.\n          format: date-time\n          nullable: true\n        group_id:\n          type: string\n          description: The ID of the group to associate with this story\n          format: uuid\n          nullable: true\n        workflow_state_id:\n          type: integer\n          description: The ID of the workflow state to put the story in.\n          format: int64\n        follower_ids:\n          uniqueItems: true\n          type: array\n          description: An array of UUIDs of the followers of this story.\n          items:\n            type: string\n            format: uuid\n        owner_ids:\n          uniqueItems: true\n          type: array\n          description: An array of UUIDs of the owners of this story.\n          items:\n            type: string\n            format: uuid\n        before_id:\n          type: integer\n          description: The ID of the story we want to move this story before.\n          format: int64\n        estimate:\n          type: integer\n          description: The numeric point estimate of the story. Can also be null,\n            which means unestimated.\n          format: int64\n          nullable: true\n        after_id:\n          type: integer\n          description: The ID of the story we want to move this story after.\n          format: int64\n        project_id:\n          type: integer\n          description: The ID of the project the story belongs to.\n          format: int64\n          nullable: true\n        linked_file_ids:\n          uniqueItems: true\n          type: array\n          description: An array of IDs of linked files attached to the story.\n          items:\n            type: integer\n            format: int64\n        deadline:\n          type: string\n          description: The due date of the story.\n          format: date-time\n          nullable: true\n      x-doc-skip: true\n    UpdateStoryComment:\n      required:\n      - text\n      type: object\n      properties:\n        text:\n          maxLength: 100000\n          type: string\n          description: The updated comment text.\n      x-doc-skip: true\n    UpdateStoryContents:\n      type: object\n      properties:\n        description:\n          type: string\n          description: The description of the story.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        labels:\n          type: array\n          description: An array of labels to be populated by the template.\n          items:\n            $ref: '#/components/schemas/CreateLabelParams'\n        story_type:\n          type: string\n          description: The type of story (feature, bug, chore).\n        linked_files:\n          type: array\n          description: An array of linked files attached to the story.\n          items:\n            $ref: '#/components/schemas/LinkedFile'\n        file_ids:\n          uniqueItems: true\n          type: array\n          description: An array of the attached file IDs to be populated.\n          items:\n            type: integer\n            format: int64\n        name:\n          type: string\n          description: The name of the story.\n        epic_id:\n          type: integer\n          description: The ID of the epic the to be populated.\n          format: int64\n          nullable: true\n        external_links:\n          type: array\n          description: An array of external links to be populated.\n          items:\n            type: string\n        iteration_id:\n          type: integer\n          description: The ID of the iteration the to be populated.\n          format: int64\n          nullable: true\n        tasks:\n          type: array\n          description: An array of tasks to be populated by the template.\n          items:\n            $ref: '#/components/schemas/EntityTemplateTask'\n        label_ids:\n          type: array\n          description: An array of label ids attached to the story.\n          items:\n            type: integer\n            format: int64\n        group_id:\n          type: string\n          description: The ID of the group to be populated.\n          format: uuid\n          nullable: true\n        workflow_state_id:\n          type: integer\n          description: The ID of the workflow state the story is currently in.\n          format: int64\n        follower_ids:\n          type: array\n          description: An array of UUIDs for any Members listed as Followers.\n          items:\n            type: string\n            format: uuid\n        owner_ids:\n          type: array\n          description: An array of UUIDs of the owners of this story.\n          items:\n            type: string\n            format: uuid\n        estimate:\n          type: integer\n          description: The numeric point estimate to be populated.\n          format: int64\n          nullable: true\n        files:\n          type: array\n          description: An array of files attached to the story.\n          items:\n            $ref: '#/components/schemas/UploadedFile'\n        project_id:\n          type: integer\n          description: The ID of the project the story belongs to.\n          format: int64\n          nullable: true\n        linked_file_ids:\n          uniqueItems: true\n          type: array\n          description: An array of the linked file IDs to be populated.\n          items:\n            type: integer\n            format: int64\n        deadline:\n          type: string\n          description: The due date of the story.\n          format: date-time\n          nullable: true\n      description: Updated attributes for the template to populate.\n    UpdateStoryLink:\n      type: object\n      properties:\n        verb:\n          type: string\n          description: The type of link.\n          enum:\n          - blocks\n          - duplicates\n          - relates to\n        subject_id:\n          type: integer\n          description: The ID of the subject Story.\n          format: int64\n        object_id:\n          type: integer\n          description: The ID of the object Story.\n          format: int64\n      x-doc-skip: true\n    UpdateTask:\n      type: object\n      properties:\n        description:\n          type: string\n          description: The Task's description.\n        owner_ids:\n          type: array\n          description: An array of UUIDs of the owners of this story.\n          items:\n            type: string\n            format: uuid\n        complete:\n          type: boolean\n          description: A true/false boolean indicating whether the task is complete.\n        before_id:\n          type: integer\n          description: Move task before this task ID.\n          format: int64\n        after_id:\n          type: integer\n          description: Move task after this task ID.\n          format: int64\n      x-doc-skip: true\n    UploadedFile:\n      required:\n      - content_type\n      - created_at\n      - description\n      - entity_type\n      - external_id\n      - filename\n      - group_mention_ids\n      - id\n      - member_mention_ids\n      - mention_ids\n      - name\n      - size\n      - story_ids\n      - thumbnail_url\n      - updated_at\n      - uploader_id\n      - url\n      type: object\n      properties:\n        description:\n          type: string\n          description: The description of the file.\n          nullable: true\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        story_ids:\n          type: array\n          description: The unique IDs of the Stories associated with this file.\n          items:\n            type: integer\n            format: int64\n        mention_ids:\n          type: array\n          description: 'Deprecated: use member_mention_ids.'\n          items:\n            type: string\n            format: uuid\n        member_mention_ids:\n          type: array\n          description: The unique IDs of the Members who are mentioned in the file\n            description.\n          items:\n            type: string\n            format: uuid\n        name:\n          type: string\n          description: The optional User-specified name of the file.\n        thumbnail_url:\n          type: string\n          description: The url where the thumbnail of the file can be found in Shortcut.\n          nullable: true\n        size:\n          type: integer\n          description: The size of the file.\n          format: int64\n        uploader_id:\n          type: string\n          description: The unique ID of the Member who uploaded the file.\n          format: uuid\n        content_type:\n          type: string\n          description: Free form string corresponding to a text or image file.\n        updated_at:\n          type: string\n          description: The time/date that the file was updated.\n          format: date-time\n          nullable: true\n        filename:\n          type: string\n          description: The name assigned to the file in Shortcut upon upload.\n        group_mention_ids:\n          type: array\n          description: The unique IDs of the Groups who are mentioned in the file\n            description.\n          items:\n            type: string\n            format: uuid\n        external_id:\n          type: string\n          description: This field can be set to another unique ID. In the case that\n            the File has been imported from another tool, the ID in the other tool\n            can be indicated here.\n          nullable: true\n        id:\n          type: integer\n          description: The unique ID for the file.\n          format: int64\n        url:\n          type: string\n          description: The URL for the file.\n          nullable: true\n        created_at:\n          type: string\n          description: The time/date that the file was created.\n          format: date-time\n      description: 'An UploadedFile is any document uploaded to your Shortcut Workspace.\n        Files attached from a third-party service are different: see the Linked Files\n        endpoint.'\n    Workflow:\n      required:\n      - auto_assign_owner\n      - created_at\n      - default_state_id\n      - description\n      - entity_type\n      - id\n      - name\n      - project_ids\n      - states\n      - team_id\n      - updated_at\n      type: object\n      properties:\n        description:\n          type: string\n          description: A description of the workflow.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        project_ids:\n          type: array\n          description: An array of IDs of projects within the Workflow.\n          items:\n            type: number\n            format: double\n        states:\n          type: array\n          description: A map of the states in this Workflow.\n          items:\n            $ref: '#/components/schemas/WorkflowState'\n        name:\n          type: string\n          description: The name of the workflow.\n        updated_at:\n          type: string\n          description: The date the Workflow was updated.\n          format: date-time\n        auto_assign_owner:\n          type: boolean\n          description: Indicates if an owner is automatically assigned when an unowned\n            story is started.\n        id:\n          type: integer\n          description: The unique ID of the Workflow.\n          format: int64\n        team_id:\n          type: integer\n          description: The ID of the team the workflow belongs to.\n          format: int64\n        created_at:\n          type: string\n          description: The date the Workflow was created.\n          format: date-time\n        default_state_id:\n          type: integer\n          description: The unique ID of the default state that new Stories are entered\n            into.\n          format: int64\n      description: 'Workflow is the array of defined Workflow States. Workflow can\n        be queried using the API but must be updated in the Shortcut UI. '\n    WorkflowState:\n      required:\n      - created_at\n      - description\n      - entity_type\n      - id\n      - name\n      - num_stories\n      - num_story_templates\n      - position\n      - type\n      - updated_at\n      - verb\n      type: object\n      properties:\n        description:\n          type: string\n          description: The description of what sort of Stories belong in that Workflow\n            state.\n        entity_type:\n          type: string\n          description: A string description of this resource.\n        color:\n          minLength: 1\n          pattern: ^#[a-fA-F0-9]{6}$\n          type: string\n          description: The hex color for this Workflow State.\n          format: css-color\n        verb:\n          type: string\n          description: The verb that triggers a move to that Workflow State when making\n            VCS commits.\n          nullable: true\n        name:\n          type: string\n          description: The Workflow State's name.\n        num_stories:\n          type: integer\n          description: The number of Stories currently in that Workflow State.\n          format: int64\n        type:\n          type: string\n          description: The type of Workflow State (Unstarted, Started, or Finished)\n        updated_at:\n          type: string\n          description: When the Workflow State was last updated.\n          format: date-time\n        id:\n          type: integer\n          description: The unique ID of the Workflow State.\n          format: int64\n        num_story_templates:\n          type: integer\n          description: The number of Story Templates associated with that Workflow\n            State.\n          format: int64\n        position:\n          type: integer\n          description: The position that the Workflow State is in, starting with 0\n            at the left.\n          format: int64\n        created_at:\n          type: string\n          description: The time/date the Workflow State was created.\n          format: date-time\n      description: 'Workflow State is any of the at least 3 columns. Workflow States\n        correspond to one of 3 types: Unstarted, Started, or Done.'\n  securitySchemes:\n    api_token:\n      type: apiKey\n      name: Shortcut-Token\n      in: header\n      description: Represents API Key `Shortcut-Token`\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/shortcut/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/shortcut/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/v3/stories/{story-public-id}/history\": get: responses: 200: contents: application/json: generate schema: item: field references: item: oneOf: oneOf HistoryReferencesItem: variant HistoryReferenceEpic: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}