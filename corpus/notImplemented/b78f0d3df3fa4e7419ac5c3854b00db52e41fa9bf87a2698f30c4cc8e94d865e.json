{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/izettle.com/products/1.0.0/openapi.yaml",
			"byteSize": 54067,
			"content": "openapi: 3.0.1\nservers:\n  - description: Production\n    url: https://products.izettle.com\n    variables: {}\ninfo:\n  contact:\n    email: product-library-team-iz@izettle.com\n    name: Product Library Team\n  description: |-\n    A product library is a representation of all the items that can be\n    displayed, put in a shopping cart and sold to a customer. Items may be\n    either producs or discounts.\n\n    A product is a synthetic construct, wrapping one or more variants (which is\n    the actual item being sold) Variants expresses different variations of\n    properties such as for example price, size or color. A discount will reduce\n    the total amount charged in a shopping cart. It can be used per item line,\n    or on the whole cart. It may reduce the affected amount by a percentage, or\n    by a fixed amount.\n\n    Together, the above types of entities makes up a complete library. The\n    library can be fetched as a whole through the library endpoint, where each\n    consecutive change applied to the library is available. Once the full\n    library is retrieved, only later events needs to be fetched to keep the\n    client up to date with the server\n\n    All path patterns \"/organizations/{organizationUuid}/\" can be replaced\n    with \"/organizations/self/\" for convenience as all endpoints are for\n    authorized users.\n  title: Zettle Product Library API\n  version: 1.0.0\n  x-apisguru-categories:\n    - ecommerce\n  x-logo:\n    url: https://cdn.izettle.com/favicons/favicon-32x32.png\n  x-origin:\n    - format: openapi\n      url: https://products.izettle.com/openapi.json\n      version: \"3.0\"\n  x-providerName: izettle.com\n  x-serviceName: products\nexternalDocs:\n  url: https://github.com/iZettle/api-documentation\npaths:\n  \"/organizations/{organizationUuid}/categories/v2\":\n    get:\n      operationId: getProductTypes\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CategoryResponse\"\n          description: List of all categories\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - READ:PRODUCT\n      summary: Retrieves all categories\n      tags:\n        - categories\n    post:\n      operationId: createCategories\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CategoryRequest\"\n        required: true\n      responses:\n        \"201\":\n          description: Category created\n        \"404\":\n          description: Organization not found\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - WRITE:PRODUCT\n      summary: Creates a new category\n      tags:\n        - categories\n  \"/organizations/{organizationUuid}/discounts\":\n    get:\n      operationId: getAllDiscounts\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiscountResponse\"\n                type: array\n          description: List of all discounts\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - READ:PRODUCT\n      summary: Retrieves all discounts\n      tags:\n        - discounts\n    post:\n      description: Creates a single discount entity. The location of the newly created discount will be available in the successful response as a HttpHeaders.LOCATION header\n      operationId: createDiscount\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DiscountRequest\"\n      responses:\n        \"201\":\n          description: Discount created\n          headers:\n            ETag:\n              description: ETag value\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: Location of newly created Discount\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Invalid request body\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - WRITE:PRODUCT\n      summary: Creates a discount\n      tags:\n        - discounts\n  \"/organizations/{organizationUuid}/discounts/{discountUuid}\":\n    delete:\n      operationId: deleteDiscount\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - in: path\n          name: discountUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: Discount deleted\n        \"404\":\n          description: Organization or Discount not found\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - WRITE:PRODUCT\n      summary: \"Deletes a single discount \"\n      tags:\n        - discounts\n    get:\n      description: \"Get the full discount with the provided UUID. The method supports conditional GET through providing a HttpHeaders.IF_NONE_MATCH header. If the conditional prerequisite is fullfilled, the full discount is returned: otherwise a 304 not modified will be returned with an empty body.\"\n      operationId: getDiscount\n      parameters:\n        - in: header\n          name: If-None-Match\n          schema:\n            type: string\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - in: path\n          name: discountUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DiscountResponse\"\n          description: Discount\n          headers:\n            ETag:\n              description: ETag value\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          description: Not modified\n        \"404\":\n          description: Organization or Discount not found\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - READ:PRODUCT\n      summary: Retrieves a single discount\n      tags:\n        - discounts\n    put:\n      description: \"Updates a discount entity using JSON merge patch (https://tools.ietf.org/html/rfc7386). This means that only included fields will be changed: null values removes the field on the target entity, and other values updates the field. Conditional updates are supported through the HttpHeaders.IF_MATCH header. If the conditional prerequisite is fullfilled, the discount is updated: otherwise a 412 precondition failed will be returned with an empty body.\"\n      operationId: updateDiscount\n      parameters:\n        - in: header\n          name: If-Match\n          schema:\n            type: string\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - in: path\n          name: discountUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DiscountRequest\"\n        required: true\n      responses:\n        \"204\":\n          description: Discount updated\n          headers:\n            ETag:\n              description: ETag value\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: Location of updated Discount\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Invalid request body\n        \"412\":\n          description: \"Precondition failed: ETag did not match the expected value\"\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - WRITE:PRODUCT\n      summary: Updates a single discount\n      tags:\n        - discounts\n  \"/organizations/{organizationUuid}/images\":\n    get:\n      description: Retrieves all library items images used by the organization, sorted by updated date\n      operationId: getAllImageUrls\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LibraryImagesResponse\"\n          description: List of all image urls\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - READ:PRODUCT\n      summary: Retrieves all library item images\n      tags:\n        - images\n  \"/organizations/{organizationUuid}/import/status\":\n    get:\n      operationId: getLatestImportStatus\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImportResponse\"\n          description: Import status\n        \"404\":\n          description: Organization or import not found\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - READ:PRODUCT\n      summary: Gets status for latest import\n      tags:\n        - import\n  \"/organizations/{organizationUuid}/import/status/{importUuid}\":\n    get:\n      operationId: getStatusByUuid\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - in: path\n          name: importUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImportResponse\"\n          description: Import status\n        \"404\":\n          description: Organization or import not found\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - READ:PRODUCT\n      summary: Gets status for an import\n      tags:\n        - import\n  \"/organizations/{organizationUuid}/import/v2\":\n    post:\n      operationId: importLibraryV2\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BulkImportRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImportResponse\"\n          description: Import status\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Invalid request body\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - WRITE:PRODUCT\n      summary: Bulk import library items\n      tags:\n        - import\n  \"/organizations/{organizationUuid}/library\":\n    get:\n      description: |\n        Will return the entire library for the authenticated user. If size of the library exceeds server preferences (normally 500) or the value of the optional limit parameter, the result will be paginated. Paginated responses return a Link header, indicating the next URI to fetch. The resulting header value will look something like:\n\n        \u003chttps://products.izettle.com/organizations/self/library?limit=X\u0026offset=Y\u003e; rel=\"next\"\n\n        where limit is number of items in response, and offset is the current position in pagination. The rel-part in the header is the links relation to the data previously recieved. The idea is that as long as this header is present there are still items remaining to be fetched. When either the header is not present or it's value doesn't contain any \"next\" value, all items have been sent to the client.\n\n        Note: The client should NOT try to extract query parameters from the URI, but rather use it as-is for the next request. Also, clients should be perpared that one Link header might contain multiple other IRIs that are not \"next\" (there will never be more than one \"next\" though). See more at:\n\n            IETF: https://tools.ietf.org/html/rfc5988\n            GitHub: https://developer.github.com/guides/traversing-with-pagination/\n\n        If eventLogUuid is provided, the response will only include events affecting the library since that event. Such responses are normally quite small and would be a preferred method for most fat clients after retrieving the initial full library.\n      operationId: getLibrary\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - in: query\n          name: eventLogUuid\n          schema:\n            format: uuid\n            type: string\n        - in: query\n          name: limit\n          schema:\n            default: 500\n            format: int32\n            maximum: 500\n            minimum: 1\n            type: integer\n        - in: query\n          name: offset\n          schema:\n            type: string\n        - in: query\n          name: all\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LibraryResponse\"\n          description: List of library items\n          headers:\n            Link:\n              description: \"If the response is paginated this header will contain the URI for the next page. See more at: https://tools.ietf.org/html/rfc5988\"\n              schema:\n                type: string\n              style: simple\n        \"412\":\n          description: |-\n            Invalid event log uuid. If the eventLogUuid query parameter was provided a 412 response indicates that the number of changes in the product exceeds the limit since that particular event (currently 500 changes). \n            When this happens, the client should remove the eventLogUuid query parameters and try again.\n      security:\n        - ZettleOauth:\n            - READ:PRODUCT\n        - ZettleApiKey: []\n      summary: Retrieves the entire library\n      tags:\n        - library\n  \"/organizations/{organizationUuid}/products\":\n    delete:\n      operationId: deleteProducts\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: List of product UUIDs to be deleted\n          in: query\n          name: uuid\n          required: true\n          schema:\n            items:\n              format: uuid\n              type: string\n            type: array\n      responses:\n        \"204\":\n          description: Products deleted\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - WRITE:PRODUCT\n      summary: Deletes a list of products\n      tags:\n        - products\n    get:\n      operationId: getAllProductsInPos\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductResponse\"\n                type: array\n          description: A list of products\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - READ:PRODUCT\n      summary: Retrieves all products visible in POS\n      tags:\n        - products\n    post:\n      operationId: createProduct\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - in: query\n          name: returnEntity\n          schema:\n            default: false\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductCreateRequest\"\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductResponse\"\n          description: Product created. It will include the Product in the response only if 'returnEntity' is true\n          headers:\n            ETag:\n              description: ETag value\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: Location of newly created Product\n              schema:\n                type: string\n              style: simple\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - WRITE:PRODUCT\n      summary: Creates a new product\n      tags:\n        - products\n  \"/organizations/{organizationUuid}/products/online/slug\":\n    post:\n      description: Creates a unique slug (identifier) for a product. The slug is used to create a product URL\n      operationId: createProductSlug\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateSlugRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SlugResponse\"\n          description: Product slug\n      security:\n        - ZettleOauth:\n            - READ:PRODUCT\n        - ZettleApiKey: []\n      summary: Creates a product identifier\n      tags:\n        - products/online\n  \"/organizations/{organizationUuid}/products/options\":\n    get:\n      operationId: getAllOptions\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/VariantOptionsResponse\"\n                type: array\n          description: List of Options\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - READ:PRODUCT\n      summary: Retrieves an aggregate of active Options in the library\n      tags:\n        - products\n  \"/organizations/{organizationUuid}/products/v2\":\n    get:\n      operationId: getAllProductsV2\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: If true, sorts response by created date\n          in: query\n          name: sort\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductResponse\"\n                type: array\n          description: A list of products\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - READ:PRODUCT\n      summary: Retrieves all products visible in POS – v2\n      tags:\n        - products\n  \"/organizations/{organizationUuid}/products/v2/count\":\n    get:\n      operationId: countAllProducts\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductCountResponse\"\n                type: array\n          description: Count of existing products\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - READ:PRODUCT\n      summary: Retrieves the count of existing products\n      tags:\n        - products\n  \"/organizations/{organizationUuid}/products/v2/{productUuid}\":\n    put:\n      description: \"Updates a product entity using JSON merge patch (https://tools.ietf.org/html/rfc7386). This means that only included fields will be changed: null values removes the field on the target entity, and other values updates the field. Conditional updates are supported through the HttpHeaders.IF_MATCH header. If the conditional prerequisite is fullfilled, the product is updated: otherwise a 412 (precondition failed) will be returned with an empty body.\"\n      operationId: updateProduct\n      parameters:\n        - in: header\n          name: If-Match\n          schema:\n            type: string\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - in: path\n          name: productUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductUpdateRequest\"\n        required: true\n      responses:\n        \"204\":\n          description: Product updated\n          headers:\n            ETag:\n              description: ETag value\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: Location of updated product\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Invalid request body\n        \"412\":\n          description: \"Precondition failed: ETag did not match the expected value\"\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - WRITE:PRODUCT\n      summary: Updates a single product\n      tags:\n        - products\n  \"/organizations/{organizationUuid}/products/{productUuid}\":\n    delete:\n      operationId: deleteProduct\n      parameters:\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - in: path\n          name: productUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: Product deleted\n        \"404\":\n          description: Organization or Product not found\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - WRITE:PRODUCT\n      summary: Deletes a single product\n      tags:\n        - products\n    get:\n      description: Get the full product with the provided UUID. The method supports conditional GET through providing a HttpHeaders.IF_NONE_MATCH header. If the conditional prerequisite is fullfilled, the full product is returned, otherwise a 304 not modified will be returned with an empty body.\n      operationId: getProduct\n      parameters:\n        - in: header\n          name: If-None-Match\n          schema:\n            type: string\n        - in: path\n          name: organizationUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - in: path\n          name: productUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductResponse\"\n          description: Product\n          headers:\n            ETag:\n              description: ETag value\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          description: Not modified\n        \"400\":\n          description: Malformed ETag\n        \"404\":\n          description: Organization or Product not found\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - READ:PRODUCT\n      summary: Retrieves a single product\n      tags:\n        - products\n  /v1/taxes:\n    get:\n      operationId: getTaxRates\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TaxRatesResponse\"\n                type: array\n          description: List of tax rates\n        \"403\":\n          description: Not a sales tax user\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - READ:PRODUCT\n      summary: Gets all tax rates available\n      tags:\n        - taxes\n    post:\n      operationId: createTaxRates\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TaxRatesCreateRequest\"\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaxRatesResponse\"\n          description: Tax rates created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Invalid request body\n        \"403\":\n          description: Not a sales tax user\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - WRITE:PRODUCT\n      summary: Creates new tax rates\n      tags:\n        - taxes\n  /v1/taxes/count:\n    get:\n      operationId: getProductCountForAllTaxes\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaxRateProductCountResponse\"\n          description: Count of products for each tax rate\n        \"403\":\n          description: Not a sales tax user\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - READ:PRODUCT\n      summary: Gets all tax rates and a count of products associated with each\n      tags:\n        - taxes\n  /v1/taxes/settings:\n    get:\n      operationId: getTaxSettings\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaxSettingsResponse\"\n          description: Tax settings\n        \"403\":\n          description: Not a sales tax user\n      security:\n        - ZettleOauth:\n            - READ:PRODUCT\n        - ZettleApiKey: []\n      summary: \"Gets the organization tax settings \"\n      tags:\n        - taxes\n    put:\n      operationId: setTaxationMode\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TaxSettingsUpdateRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaxSettingsResponse\"\n          description: Updated tax settings\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Invalid request body\n        \"403\":\n          description: Not a sales tax user\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - WRITE:PRODUCT\n      summary: Updates the organization tax settings\n      tags:\n        - taxes\n  \"/v1/taxes/{taxRateUuid}\":\n    delete:\n      operationId: deleteTaxRate\n      parameters:\n        - in: path\n          name: taxRateUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: Tax rate deleted\n        \"403\":\n          description: Not a sales tax user\n        \"404\":\n          description: Tax rate not found\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - WRITE:PRODUCT\n      summary: Deletes a single tax rate\n      tags:\n        - taxes\n    get:\n      operationId: getTaxRate\n      parameters:\n        - in: path\n          name: taxRateUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaxRate\"\n          description: Single tax rate\n        \"403\":\n          description: Not a sales tax user\n        \"404\":\n          description: Tax rate not found\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - READ:PRODUCT\n      summary: Gets a single tax rate\n      tags:\n        - taxes\n    put:\n      operationId: updateTaxRate\n      parameters:\n        - in: path\n          name: taxRateUuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TaxRateUpdateRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaxRate\"\n          description: Updated tax rate\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Invalid request body\n        \"403\":\n          description: Not a sales tax user\n        \"404\":\n          description: Tax rate not found\n      security:\n        - ZettleApiKey: []\n        - ZettleOauth:\n            - WRITE:PRODUCT\n      summary: Updates a single tax rate\n      tags:\n        - taxes\ncomponents:\n  schemas:\n    BulkImportRequest:\n      properties:\n        products:\n          items:\n            $ref: \"#/components/schemas/FullProductUpdateRequest\"\n          type: array\n      required:\n        - products\n      type: object\n    CategoryDTO:\n      properties:\n        name:\n          type: string\n        uuid:\n          format: uuid\n          type: string\n      required:\n        - name\n        - uuid\n      type: object\n    CategoryRequest:\n      properties:\n        categories:\n          items:\n            $ref: \"#/components/schemas/CategoryDTO\"\n          type: array\n      required:\n        - categories\n      type: object\n    CategoryResponse:\n      properties:\n        categories:\n          items:\n            $ref: \"#/components/schemas/CategoryDTO\"\n          type: array\n      required:\n        - categories\n      type: object\n    ConstraintViolation:\n      properties:\n        constraintType:\n          enum:\n            - MUST_BE_FALSE\n            - MUST_BE_TRUE\n            - MUST_BE_LESS_THAN\n            - MUST_BE_GREATER_THAN\n            - DIGIT_OUT_OF_BOUNDS\n            - DATE_MUST_BE_IN_THE_FUTURE\n            - MUST_BE_LESS_OR_EQUAL_THAN\n            - MUST_BE_GREATER_OR_EQUAL_TO\n            - MUST_NOT_BE_NULL\n            - MUST_BE_NULL\n            - DATE_MUST_BE_IN_THE_PAST\n            - MUST_MATCH_PATTERN\n            - INVALID_SIZE\n            - INVALID_EMAIL\n            - MUST_NOT_BE_EMPTY\n            - INVALID_RANGE\n            - UNKNOWN\n          type: string\n        developerMessage:\n          type: string\n        expected:\n          type: string\n        propertyName:\n          type: string\n        value:\n          type: string\n      type: object\n    CreateSlugRequest:\n      properties:\n        productName:\n          maxLength: 256\n          minLength: 1\n          type: string\n      required:\n        - productName\n      type: object\n    DiscountRequest:\n      properties:\n        amount:\n          $ref: \"#/components/schemas/Price\"\n        description:\n          maxLength: 128\n          minLength: 0\n          type: string\n        externalReference:\n          maxLength: 128\n          minLength: 0\n          type: string\n        imageLookupKeys:\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n        name:\n          maxLength: 64\n          minLength: 0\n          type: string\n        percentage:\n          maximum: 100\n          minimum: 0\n          type: number\n        uuid:\n          format: uuid\n          type: string\n      required:\n        - uuid\n      type: object\n    DiscountResponse:\n      properties:\n        amount:\n          $ref: \"#/components/schemas/Price\"\n        created:\n          format: date-time\n          type: string\n        description:\n          type: string\n        etag:\n          type: string\n        externalReference:\n          type: string\n        imageLookupKeys:\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n        name:\n          type: string\n        percentage:\n          type: number\n        updated:\n          format: date-time\n          type: string\n        updatedBy:\n          format: uuid\n          type: string\n        uuid:\n          format: uuid\n          type: string\n      required:\n        - created\n        - etag\n        - name\n        - updated\n        - uuid\n      type: object\n    ErrorResponse:\n      properties:\n        developerMessage:\n          type: string\n        errorType:\n          type: string\n        violations:\n          items:\n            $ref: \"#/components/schemas/ConstraintViolation\"\n          type: array\n          uniqueItems: true\n      type: object\n    FullProductUpdateRequest:\n      properties:\n        categories:\n          items:\n            type: string\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        category:\n          $ref: \"#/components/schemas/CategoryDTO\"\n        description:\n          maxLength: 1024\n          minLength: 0\n          type: string\n        externalReference:\n          type: string\n        imageLookupKeys:\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n        metadata:\n          $ref: \"#/components/schemas/MetadataDTO\"\n        name:\n          maxLength: 256\n          minLength: 1\n          type: string\n        online:\n          $ref: \"#/components/schemas/OnlineProperties\"\n        presentation:\n          $ref: \"#/components/schemas/PresentationDTO\"\n        taxCode:\n          type: string\n        taxExempt:\n          type: boolean\n        taxRates:\n          items:\n            format: uuid\n            type: string\n          type: array\n          uniqueItems: true\n        unitName:\n          type: string\n        uuid:\n          format: uuid\n          type: string\n        variantOptionDefinitions:\n          $ref: \"#/components/schemas/VariantOptionDefinitions\"\n        variants:\n          items:\n            $ref: \"#/components/schemas/VariantDTO\"\n          type: array\n        vatPercentage:\n          maximum: 100\n          minimum: 0\n          type: number\n      required:\n        - name\n        - uuid\n      type: object\n    ImportResponse:\n      properties:\n        created:\n          format: date-time\n          type: string\n        errorMessage:\n          type: string\n        finished:\n          format: date-time\n          type: string\n        items:\n          format: int64\n          type: integer\n        state:\n          enum:\n            - IMPORTING\n            - FINISHED_SUCCESS\n            - FINISHED_FAILED\n          type: string\n        uuid:\n          format: uuid\n          type: string\n      type: object\n    LibraryImagesResponse:\n      properties:\n        imageUrls:\n          items:\n            type: string\n          type: array\n      type: object\n    LibraryResponse:\n      properties:\n        deletedDiscounts:\n          items:\n            format: uuid\n            type: string\n          type: array\n          uniqueItems: true\n        deletedProducts:\n          items:\n            format: uuid\n            type: string\n          type: array\n          uniqueItems: true\n        discounts:\n          items:\n            $ref: \"#/components/schemas/DiscountResponse\"\n          type: array\n          uniqueItems: true\n        fromEventLogUuid:\n          format: uuid\n          type: string\n        products:\n          items:\n            $ref: \"#/components/schemas/ProductResponse\"\n          type: array\n          uniqueItems: true\n        untilEventLogUuid:\n          format: uuid\n          type: string\n      type: object\n    MetadataDTO:\n      properties:\n        inPos:\n          type: boolean\n        source:\n          $ref: \"#/components/schemas/SourceDTO\"\n      required:\n        - inPos\n      type: object\n    OnlineProperties:\n      properties:\n        description:\n          maxLength: 3500\n          minLength: 0\n          type: string\n        presentation:\n          $ref: \"#/components/schemas/Presentation\"\n        seo:\n          $ref: \"#/components/schemas/SearchEngineOptimization\"\n        shipping:\n          $ref: \"#/components/schemas/Shipping\"\n        status:\n          enum:\n            - ACTIVE\n            - HIDDEN\n          type: string\n        title:\n          maxLength: 256\n          minLength: 0\n          type: string\n      required:\n        - status\n      type: object\n    Option:\n      properties:\n        name:\n          type: string\n        values:\n          items:\n            type: string\n          type: array\n      type: object\n    Presentation:\n      properties:\n        additionalImageUrls:\n          items:\n            format: url\n            type: string\n          maxItems: 25\n          minItems: 0\n          type: array\n        displayImageUrl:\n          format: url\n          type: string\n        mediaUrls:\n          items:\n            format: url\n            type: string\n          maxItems: 8\n          minItems: 0\n          type: array\n      type: object\n    PresentationDTO:\n      properties:\n        backgroundColor:\n          type: string\n        imageUrl:\n          type: string\n        textColor:\n          type: string\n      type: object\n    Price:\n      properties:\n        amount:\n          format: int64\n          minimum: 0\n          type: integer\n        currencyId:\n          enum:\n            - AED\n            - AFA\n            - AFN\n            - ALL\n            - AMD\n            - ANG\n            - AOA\n            - ARS\n            - AUD\n            - AWG\n            - AZM\n            - AZN\n            - BAM\n            - BBD\n            - BDT\n            - BGN\n            - BHD\n            - BIF\n            - BMD\n            - BND\n            - BOB\n            - BRL\n            - BSD\n            - BTN\n            - BWP\n            - BYR\n            - BZD\n            - CAD\n            - CDF\n            - CHF\n            - CLP\n            - CNY\n            - COP\n            - CRC\n            - CSD\n            - CUC\n            - CUP\n            - CVE\n            - CYP\n            - CZK\n            - DJF\n            - DKK\n            - DOP\n            - DZD\n            - EEK\n            - EGP\n            - ERN\n            - ETB\n            - EUR\n            - FJD\n            - FKP\n            - GBP\n            - GEL\n            - GGP\n            - GHC\n            - GHS\n            - GIP\n            - GMD\n            - GNF\n            - GTQ\n            - GYD\n            - HKD\n            - HNL\n            - HRK\n            - HTG\n            - HUF\n            - IDR\n            - ILS\n            - IMP\n            - INR\n            - IQD\n            - IRR\n            - ISK\n            - JEP\n            - JMD\n            - JOD\n            - JPY\n            - KES\n            - KGS\n            - KHR\n            - KMF\n            - KPW\n            - KRW\n            - KWD\n            - KYD\n            - KZT\n            - LAK\n            - LBP\n            - LKR\n            - LRD\n            - LSL\n            - LTL\n            - LVL\n            - LYD\n            - MAD\n            - MDL\n            - MGA\n            - MKD\n            - MMK\n            - MNT\n            - MOP\n            - MRO\n            - MTL\n            - MUR\n            - MVR\n            - MWK\n            - MXN\n            - MYR\n            - MZM\n            - MZN\n            - NAD\n            - NGN\n            - NIO\n            - NOK\n            - NPR\n            - NZD\n            - OMR\n            - PAB\n            - PEN\n            - PGK\n            - PHP\n            - PKR\n            - PLN\n            - PYG\n            - QAR\n            - RON\n            - RSD\n            - RUB\n            - RWF\n            - SAR\n            - SBD\n            - SCR\n            - SDD\n            - SDG\n            - SEK\n            - SGD\n            - SHP\n            - SIT\n            - SKK\n            - SLL\n            - SOS\n            - SPL\n            - SRD\n            - SSP\n            - STD\n            - SVC\n            - SYP\n            - SZL\n            - THB\n            - TJS\n            - TMM\n            - TMT\n            - TND\n            - TOP\n            - TRL\n            - TRY\n            - TTD\n            - TVD\n            - TWD\n            - TZS\n            - UAH\n            - UGX\n            - USD\n            - UYU\n            - UZS\n            - VEB\n            - VEF\n            - VND\n            - VUV\n            - WST\n            - XAF\n            - XAG\n            - XAU\n            - XCD\n            - XDR\n            - XOF\n            - XPD\n            - XPF\n            - XPT\n            - YER\n            - ZAR\n            - ZMK\n            - ZMW\n            - ZWD\n            - ZWL\n          type: string\n      required:\n        - amount\n        - currencyId\n      type: object\n    ProductCountResponse:\n      properties:\n        productCount:\n          format: int32\n          type: integer\n      required:\n        - productCount\n      type: object\n    ProductCreateRequest:\n      properties:\n        categories:\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n        category:\n          $ref: \"#/components/schemas/CategoryDTO\"\n        createWithDefaultTax:\n          type: boolean\n        description:\n          maxLength: 1024\n          minLength: 0\n          type: string\n        externalReference:\n          maxLength: 128\n          minLength: 0\n          type: string\n        imageLookupKeys:\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n        metadata:\n          $ref: \"#/components/schemas/MetadataDTO\"\n        name:\n          maxLength: 256\n          minLength: 1\n          type: string\n        online:\n          $ref: \"#/components/schemas/OnlineProperties\"\n        presentation:\n          $ref: \"#/components/schemas/PresentationDTO\"\n        taxCode:\n          type: string\n        taxExempt:\n          type: boolean\n        taxRates:\n          items:\n            format: uuid\n            type: string\n          type: array\n          uniqueItems: true\n        unitName:\n          maxLength: 32\n          minLength: 0\n          type: string\n        uuid:\n          format: uuid\n          type: string\n        variantOptionDefinitions:\n          $ref: \"#/components/schemas/VariantOptionDefinitions\"\n        variants:\n          items:\n            $ref: \"#/components/schemas/VariantDTO\"\n          type: array\n        vatPercentage:\n          maximum: 100\n          minimum: 0\n          type: number\n      required:\n        - name\n        - uuid\n      type: object\n    ProductResponse:\n      properties:\n        categories:\n          items:\n            type: string\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        category:\n          $ref: \"#/components/schemas/CategoryDTO\"\n        created:\n          format: date-time\n          type: string\n        description:\n          type: string\n        etag:\n          type: string\n        externalReference:\n          type: string\n        imageLookupKeys:\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n        metadata:\n          $ref: \"#/components/schemas/MetadataDTO\"\n        name:\n          type: string\n        online:\n          $ref: \"#/components/schemas/OnlineProperties\"\n        presentation:\n          $ref: \"#/components/schemas/PresentationDTO\"\n        taxCode:\n          type: string\n        taxExempt:\n          type: boolean\n        taxRates:\n          items:\n            format: uuid\n            type: string\n          type: array\n          uniqueItems: true\n        unitName:\n          type: string\n        updated:\n          format: date-time\n          type: string\n        updatedBy:\n          format: uuid\n          type: string\n        uuid:\n          format: uuid\n          type: string\n        variantOptionDefinitions:\n          $ref: \"#/components/schemas/VariantOptionDefinitions\"\n        variants:\n          items:\n            $ref: \"#/components/schemas/VariantDTO\"\n          maxItems: 99\n          minItems: 1\n          type: array\n        vatPercentage:\n          type: number\n      required:\n        - created\n        - etag\n        - name\n        - updated\n        - uuid\n        - variants\n      type: object\n    ProductUpdateRequest:\n      properties:\n        categories:\n          items:\n            type: string\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        category:\n          $ref: \"#/components/schemas/CategoryDTO\"\n        description:\n          type: string\n        externalReference:\n          type: string\n        imageLookupKeys:\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n        metadata:\n          $ref: \"#/components/schemas/MetadataDTO\"\n        name:\n          type: string\n        presentation:\n          $ref: \"#/components/schemas/PresentationDTO\"\n        taxCode:\n          type: string\n        taxExempt:\n          type: boolean\n        taxRates:\n          items:\n            format: uuid\n            type: string\n          type: array\n          uniqueItems: true\n        unitName:\n          type: string\n        uuid:\n          format: uuid\n          type: string\n        variantUuids:\n          items:\n            format: uuid\n            type: string\n          maxItems: 2147483647\n          minItems: 1\n          type: array\n        vatPercentage:\n          maximum: 100\n          minimum: 0\n          type: number\n      required:\n        - name\n        - uuid\n        - variantUuids\n      type: object\n    SearchEngineOptimization:\n      properties:\n        metaDescription:\n          maxLength: 320\n          minLength: 0\n          type: string\n        slug:\n          maxLength: 256\n          minLength: 1\n          type: string\n        title:\n          maxLength: 256\n          minLength: 0\n          type: string\n      type: object\n    Shipping:\n      properties:\n        shippingPricingModel:\n          enum:\n            - FREE\n            - STANDARD\n          type: string\n        weight:\n          $ref: \"#/components/schemas/Weight\"\n        weightInGrams:\n          format: int64\n          maximum: 2147483647\n          minimum: 0\n          type: integer\n      type: object\n    SlugResponse:\n      properties:\n        productName:\n          type: string\n        slug:\n          type: string\n      type: object\n    SourceDTO:\n      properties:\n        external:\n          type: boolean\n        name:\n          type: string\n      type: object\n    TaxRate:\n      properties:\n        default:\n          type: boolean\n        label:\n          maxLength: 512\n          minLength: 0\n          type: string\n        percentage:\n          maximum: 100\n          type: number\n        uuid:\n          format: uuid\n          type: string\n      required:\n        - label\n        - uuid\n      type: object\n    TaxRateProductCount:\n      properties:\n        count:\n          format: int32\n          type: integer\n        taxRateUuid:\n          format: uuid\n          type: string\n      type: object\n    TaxRateProductCountResponse:\n      properties:\n        counts:\n          items:\n            $ref: \"#/components/schemas/TaxRateProductCount\"\n          type: array\n      type: object\n    TaxRateUpdateRequest:\n      properties:\n        default:\n          type: boolean\n        label:\n          maxLength: 512\n          minLength: 0\n          type: string\n        percentage:\n          maximum: 100\n          type: number\n      type: object\n    TaxRatesCreateRequest:\n      properties:\n        taxRates:\n          items:\n            $ref: \"#/components/schemas/TaxRate\"\n          maxItems: 15\n          minItems: 0\n          type: array\n      required:\n        - taxRates\n      type: object\n    TaxRatesResponse:\n      properties:\n        taxRates:\n          items:\n            $ref: \"#/components/schemas/TaxRate\"\n          type: array\n      type: object\n    TaxSettingsResponse:\n      properties:\n        organizationUuid:\n          format: uuid\n          type: string\n        taxationMode:\n          enum:\n            - EXCLUSIVE\n            - INCLUSIVE\n          type: string\n        taxationType:\n          enum:\n            - NONE\n            - SALES_TAX\n            - VAT\n          type: string\n      type: object\n    TaxSettingsUpdateRequest:\n      properties:\n        taxationMode:\n          enum:\n            - EXCLUSIVE\n            - INCLUSIVE\n          type: string\n      required:\n        - taxationMode\n      type: object\n    VariantDTO:\n      properties:\n        barcode:\n          maxLength: 128\n          minLength: 0\n          type: string\n        costPrice:\n          $ref: \"#/components/schemas/Price\"\n        description:\n          maxLength: 1024\n          minLength: 0\n          type: string\n        name:\n          maxLength: 256\n          minLength: 0\n          type: string\n        options:\n          items:\n            $ref: \"#/components/schemas/VariantOption\"\n          maxItems: 99\n          minItems: 1\n          type: array\n        presentation:\n          $ref: \"#/components/schemas/PresentationDTO\"\n        price:\n          $ref: \"#/components/schemas/Price\"\n        sku:\n          maxLength: 64\n          minLength: 0\n          type: string\n        uuid:\n          format: uuid\n          type: string\n        vatPercentage:\n          maximum: 100\n          minimum: 0\n          type: number\n      required:\n        - uuid\n      type: object\n    VariantOption:\n      properties:\n        name:\n          maxLength: 30\n          minLength: 1\n          type: string\n        value:\n          maxLength: 256\n          minLength: 1\n          type: string\n      required:\n        - name\n        - value\n      type: object\n    VariantOptionDefinition:\n      properties:\n        name:\n          maxLength: 30\n          minLength: 1\n          type: string\n        properties:\n          items:\n            $ref: \"#/components/schemas/VariantOptionProperties\"\n          maxItems: 99\n          minItems: 1\n          type: array\n      required:\n        - name\n        - properties\n      type: object\n    VariantOptionDefinitions:\n      properties:\n        definitions:\n          items:\n            $ref: \"#/components/schemas/VariantOptionDefinition\"\n          maxItems: 3\n          minItems: 1\n          type: array\n      required:\n        - definitions\n      type: object\n    VariantOptionProperties:\n      properties:\n        imageUrl:\n          maxLength: 256\n          minLength: 1\n          type: string\n        value:\n          maxLength: 256\n          minLength: 1\n          type: string\n      required:\n        - value\n      type: object\n    VariantOptionsResponse:\n      properties:\n        options:\n          items:\n            $ref: \"#/components/schemas/Option\"\n          type: array\n      type: object\n    Weight:\n      properties:\n        unit:\n          enum:\n            - kg\n            - g\n            - oz\n            - lb\n          type: string\n        weight:\n          exclusiveMinimum: false\n          minimum: 0\n          type: number\n      required:\n        - unit\n        - weight\n      type: object\n  securitySchemes:\n    ZettleApiKey:\n      description: \"For more information about authorization API visit: https://github.com/iZettle/api-documentation\"\n      in: header\n      name: Authorization\n      type: apiKey\n    ZettleOauth:\n      description: \"For more information about authorization API visit: https://github.com/iZettle/api-documentation\"\n      flows:\n        implicit:\n          authorizationUrl: https://oauth.izettle.com/authorize\n          scopes:\n            READ:PRODUCT: Access to read product library data\n            WRITE:PRODUCT: Access to write product library data\n        password:\n          scopes:\n            READ:PRODUCT: Access to read product library data\n            WRITE:PRODUCT: Access to write product library data\n          tokenUrl: https://oauth.izettle.com/token\n      type: oauth2\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/izettle.com/products/1.0.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/izettle.com/products/1.0.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/organizations/{organizationUuid}/products/v2\": get: security: security \"ZettleOauth\" (index 1): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}