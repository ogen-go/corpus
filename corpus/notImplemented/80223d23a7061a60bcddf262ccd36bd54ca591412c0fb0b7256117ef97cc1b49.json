{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Nexmo/oas_parser"
		},
		"file": {
			"name": "petstore-oneof.yml",
			"size": 0,
			"path": "spec/fixtures/petstore-oneof.yml",
			"byteSize": 2199,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification\n  termsOfService: http://swagger.io/terms/\n  contact:\n    name: Swagger API Team\n    email: foo@example.com\n    url: http://madskristensen.net\n  license:\n    name: MIT\n    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT\nservers:\n  - url: http://petstore.swagger.io/api\npaths:\n  /random:\n    get:\n      description: Returns a random pet. Example of OneOf.\n      operationId: random\n      parameters:\n        - name: tags\n          in: query\n          description: tags to filter by\n          required: false\n          style: form\n          schema:\n            type: array\n            items:\n              type: string\n        - name: limit\n          in: query\n          description: maximum number of results to return\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: pet response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Random'\ncomponents:\n  schemas:\n    Random:\n      oneOf:\n        - $ref: '#/components/schemas/Dog'\n        - $ref: '#/components/schemas/Cat'\n    Dog:\n      allOf:\n        - $ref: '#/components/schemas/NewPet'\n        - required:\n          - id\n          properties:\n            id:\n              type: integer\n              format: int64\n            name:\n              type: string\n              example: 'Rex'\n\n    Cat:\n      allOf:\n        - $ref: '#/components/schemas/NewPet'\n        - required:\n          - id\n          properties:\n            id:\n              type: integer\n              format: int64\n            name:\n              type: string\n              example: 'Felix'\n\n    NewPet:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        tag:\n          type: string\n\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n",
			"canonicalURL": "/github.com/Nexmo/oas_parser@2d3f445a16daf42ff5c27566406de10794808893/-/blob/spec/fixtures/petstore-oneof.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Nexmo/oas_parser/blob/2d3f445a16daf42ff5c27566406de10794808893/spec/fixtures/petstore-oneof.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/random\": get: responses: 200: contents: application/json: generate schema: oneOf: oneOf Random: variant Cat: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}