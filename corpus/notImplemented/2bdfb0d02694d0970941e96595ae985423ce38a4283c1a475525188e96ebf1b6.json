{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/FraunhoferISST/diva"
		},
		"file": {
			"name": "openapiTemplate.json",
			"size": 0,
			"path": "core/services/entity-management/apiDoc/openapiTemplate.json",
			"byteSize": 17813,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"description\": \"Entity Management Service is responsible for all CRUD operations on entities\",\n    \"version\": \"1.0.0\",\n    \"title\": \"Entity Management API\"\n  },\n  \"tags\": [\n    {\n      \"name\": \"edges\",\n      \"description\": \"Data Network requests\"\n    },\n    {\n      \"name\": \"nodes\",\n      \"description\": \"Data Network requests\"\n    }\n  ],\n  \"paths\": {\n    \"/api\": {\n      \"get\": {\n        \"tags\": [\n          \"api\"\n        ],\n        \"summary\": \"API documentation\",\n        \"description\": \"In development mode this documentations is served on this route\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/html\": {\n              }\n            },\n            \"description\": \"\"\n          }\n        }\n      }\n    },\n    \"/resolvedSchemata/{name}\": {\n      \"parameters\": [\n        {\n          \"$ref\": \"#/components/parameters/actoridParam\"\n        },\n        {\n          \"$ref\": \"#/components/parameters/divaHeader\"\n        }\n      ],\n      \"get\": {\n        \"tags\": [\n          \"schemata\"\n        ],\n        \"summary\": \"Get resolved schema by name\",\n        \"description\": \"Returns the resolved schema. Currently only root entity schema can be resolved\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"Name of the schema to resolve\",\n            \"required\": true,\n            \"explode\": true,\n            \"allowReserved\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"entity\",\n              \"enum\": [\n                \"entity\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Resolved schema response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Resolved schema\",\n                  \"description\": \"Schema definition\",\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"4XX\": {\n            \"$ref\": \"#/components/responses/BadRequestError\"\n          },\n          \"5XX\": {\n            \"$ref\": \"#/components/responses/UnexpectedError\"\n          }\n        }\n      }\n    },\n    \"/scopedSchemata\": {\n      \"parameters\": [\n        {\n          \"$ref\": \"#/components/parameters/actoridParam\"\n        },\n        {\n          \"$ref\": \"#/components/parameters/divaHeader\"\n        }\n      ],\n      \"post\": {\n        \"parameters\": [\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"Coma separated projection fields\",\n            \"example\": \"title,entityType,description\",\n            \"required\": false,\n            \"explode\": true,\n            \"allowReserved\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"cursor\",\n            \"in\": \"query\",\n            \"description\": \"Pagination cursor\",\n            \"required\": false,\n            \"explode\": true,\n            \"allowReserved\": true,\n            \"example\": \"aHVpXzYwMTkzZmJlZTM0NmZhODVkNTE4YzJlYg==\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pageSize\",\n            \"in\": \"query\",\n            \"description\": \"Page size\",\n            \"required\": false,\n            \"explode\": true,\n            \"example\": 10,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"email\",\n            \"in\": \"query\",\n            \"description\": \"Email of the user to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"example\": \"example@email.con\",\n            \"allowReserved\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"email\"\n            }\n          },\n          {\n            \"name\": \"schemaName\",\n            \"in\": \"query\",\n            \"description\": \"Name of the system entity\",\n            \"required\": false,\n            \"explode\": true,\n            \"example\": \"asyncapi\",\n            \"allowReserved\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"specName\",\n            \"in\": \"query\",\n            \"description\": \"Name of the system entity\",\n            \"required\": false,\n            \"explode\": true,\n            \"example\": \"asyncapi\",\n            \"allowReserved\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"systemEntityType\",\n            \"in\": \"query\",\n            \"description\": \"Type of the system entity\",\n            \"required\": false,\n            \"explode\": true,\n            \"example\": \"schema\",\n            \"allowReserved\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"attributedTo\",\n            \"in\": \"query\",\n            \"description\": \"Filter by attributedTo attribute\",\n            \"required\": false,\n            \"explode\": true,\n            \"allowReserved\": true,\n            \"example\": \"resource:uuid:ad0016df-6b85-0465-0e85-9e3784d342e8\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/EntityId\"\n            }\n          },\n          {\n            \"name\": \"creatorId\",\n            \"in\": \"query\",\n            \"description\": \"Filter by creatorId attribute\",\n            \"required\": false,\n            \"explode\": true,\n            \"allowReserved\": true,\n            \"example\": \"user:uuid:ad0016df-6b85-0465-0e85-9e3784d342e8\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"user:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$\"\n            }\n          }\n        ],\n        \"tags\": [\n          \"schemata\"\n        ],\n        \"summary\": \"Get schemata by scope\",\n        \"description\": \"Returns that matches given scope. The scoped must be supplied as body object\",\n        \"requestBody\": {\n          \"required\": false,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\"scope\"],\n                \"properties\": {\n                  \"scope\": {\n                    \"type\": \"object\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"collectionSize\": {\n                      \"type\": \"integer\"\n                    },\n                    \"collection\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Entity\"\n                      }\n                    },\n                    \"cursor\": {\n                      \"type\": \"string\"\n                    },\n                    \"total\": {\n                      \"type\": \"number\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"4XX\": {\n            \"$ref\": \"#/components/responses/BadRequestError\"\n          },\n          \"5XX\": {\n            \"$ref\": \"#/components/responses/UnexpectedError\"\n          }\n        }\n      }\n    },\n    \"/asyncapis/byName/{name}\": {\n      \"parameters\": [\n        {\n          \"$ref\": \"#/components/parameters/actoridParam\"\n        },\n        {\n          \"$ref\": \"#/components/parameters/divaHeader\"\n        }\n      ],\n      \"get\": {\n        \"tags\": [\n          \"asyncapis\"\n        ],\n        \"summary\": \"Get specification by name\",\n        \"description\": \"Returns AsyncAPI specification by name. The result contains the specification itself as string, not the entity object!\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"Name of the specification\",\n            \"required\": true,\n            \"explode\": true,\n            \"allowReserved\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"asyncapi\",\n              \"enum\": [\n                \"asyncapi\",\n                \"datanetwork-api\",\n                \"event-emitter-api\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Success\"\n          },\n          \"4XX\": {\n            \"$ref\": \"#/components/responses/BadRequestError\"\n          },\n          \"5XX\": {\n            \"$ref\": \"#/components/responses/UnexpectedError\"\n          }\n        }\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000\"\n    }\n  ],\n  \"components\": {\n    \"requestBodies\": {\n      \"EntityCreate\": {\n        \"required\": true,\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/EntityCreate\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/EntityCreateBulk\"\n                }\n              ]\n            }\n          }\n        }\n      },\n      \"EntityUpdate\": {\n        \"required\": true,\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/EntityCreate\"\n            }\n          }\n        }\n      },\n      \"EntityPatch\": {\n        \"required\": true,\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"title\": \"Patch body\",\n              \"description\": \"The body can be any attribute defined in the corresponding entity JSON schema. The supplied attributes overwrite the existing\",\n              \"type\": \"object\",\n              \"minProperties\": 1\n            }\n          }\n        }\n      },\n      \"Image\": {\n        \"required\": true,\n        \"content\": {\n          \"multipart/form-data\": {\n            \"schema\": {\n              \"title\": \"Patch body\",\n              \"additionalProperties\": false,\n              \"description\": \"The body can be any attribute defined in the corresponding entity JSON schema. The supplied attributes overwrite the existing\",\n              \"type\": \"object\",\n              \"properties\": {\n                \"image\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            },\n            \"encoding\": {\n              \"image\": {\n                \"contentType\": \"image/png, image/jpeg\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"schemas\": {\n      \"EntityCreate\": {\n        \"description\": \"Minimal required attributes for entity creation\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"entityType\": {\n            \"type\": \"string\",\n            \"title\": \"Entity Type\",\n            \"description\": \"The general type of the entity\",\n            \"minLength\": 1\n          }\n        }\n      },\n      \"EntityCreateBulk\": {\n        \"type\": \"array\",\n        \"title\": \"Entity create bulk request\",\n        \"description\": \"Array of entities to create multiple entities in one bulk request\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/EntityCreate\"\n        }\n      },\n      \"Entity\": {\n        \"title\": \"General Entity Data\",\n        \"type\": \"object\",\n        \"description\": \"The representation of an entity. For more details please refer to the corresponding JSON schema\",\n        \"required\": [\n          \"entityType\",\n          \"id\"\n        ],\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"id\": {\n            \"$ref\": \"#/components/schemas/EntityId\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"title\": \"Operation error\",\n        \"description\": \"Error that can occur on request processing\",\n        \"required\": [\n          \"type\",\n          \"message\",\n          \"code\"\n        ],\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Error type\",\n            \"description\": \"Futher error type information\",\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"title\": \"Error message\",\n            \"description\": \"Details about error\",\n            \"type\": \"string\"\n          },\n          \"code\": {\n            \"title\": \"Error code\",\n            \"description\": \"HTTP error code\",\n            \"type\": \"number\",\n            \"format\": \"int32\",\n            \"example\": 409\n          },\n          \"errors\": {\n            \"title\": \"Errors\",\n            \"description\": \"More error details that are reference in most case specification or schema validation errors\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          }\n        }\n      },\n      \"ActorId\": {\n        \"title\": \"Actor id\",\n        \"description\": \"Unique actor identifier. Actor is represented by a user or a internal service\",\n        \"type\": \"string\",\n        \"example\": \"user:uuid:asdsad4d1fcb08-b894-4bdf-b662-0f105d597189\",\n        \"pattern\": \"^(user|service):uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$\"\n      },\n      \"EntityId\": {\n        \"title\": \"Entity id\",\n        \"description\": \"Unique entity identifier\",\n        \"type\": \"string\",\n        \"example\": \"resource:uuid:asdsad4d1fcb08-b894-4bdf-b662-0f105d597189\",\n        \"pattern\": \"^.+:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$\"\n      },\n      \"ImageId\": {\n        \"title\": \"Image id\",\n        \"description\": \"Unique image identifier\",\n        \"type\": \"string\",\n        \"example\": \"image:uuid:asdsad4d1fcb08-b894-4bdf-b662-0f105d597189\",\n        \"pattern\": \"image:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$\"\n      }\n    },\n    \"responses\": {\n      \"Success\": {\n        \"description\": \"Successful\",\n        \"content\": {\n          \"text/html\": {\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"SuccessEmpty\": {\n        \"description\": \"Successful operation\"\n      },\n      \"Multi\": {\n        \"description\": \"Multi-status response in case of a bulk request\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"title\": \"Multi-status response\",\n              \"description\": \"Indicates the status for operation for each entity in a bulk request\",\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"statusCode\",\n                  \"uniqueFingerprint\"\n                ],\n                \"properties\": {\n                  \"statusCode\": {\n                    \"title\": \"Status Code\",\n                    \"description\": \"Status Code for single entity operation. Can be one of the codes that is returned for opeartion on a single entity\",\n                    \"type\": \"integer\",\n                    \"example\": 201\n                  },\n                  \"data\": {\n                    \"title\": \"Operation data\",\n                    \"description\": \"Data as a result of a single entity operation\",\n                    \"oneOf\": [\n                      {\n                        \"type\": \"string\"\n                      },\n                      {\n                        \"type\": \"object\"\n                      }\n                    ]\n                  },\n                  \"error\": {\n                    \"$ref\": \"#/components/schemas/Error\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"EntityCreateSuccess\": {\n        \"description\": \"Successful entity creation reruns created entity id\",\n        \"content\": {\n          \"text/html\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/EntityId\"\n            }\n          }\n        }\n      },\n      \"EntityResponse\": {\n        \"description\": \"Entity data response\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Entity\"\n            }\n          }\n        }\n      },\n      \"UnexpectedError\": {\n        \"description\": \"Internal service error\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Error\"\n            }\n          }\n        }\n      },\n      \"BadRequestError\": {\n        \"description\": \"Error with status code 4XX indicating a wrong supplied parameters or violation of the JSOn schema\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Error\"\n            }\n          }\n        }\n      }\n    },\n    \"parameters\": {\n      \"divaHeader\": {\n        \"in\": \"header\",\n        \"description\": \"The system specific stringified object whit relevant data like actorId, token etc.\",\n        \"name\": \"x-diva\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\",\n          \"properties\": {\n            \"actorId\": {\n              \"$ref\": \"#/components/schemas/ActorId\"\n            }\n          }\n        }\n      },\n      \"actoridParam\": {\n        \"in\": \"header\",\n        \"description\": \"The id of the origin that produces action/message. Can be an user or a service (deprecated)\",\n        \"name\": \"x-actorid\",\n        \"required\": false,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/ActorId\"\n        }\n      },\n      \"entityIdParam\": {\n        \"in\": \"path\",\n        \"description\": \"The id of the entity\",\n        \"name\": \"id\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/EntityId\"\n        },\n        \"required\": true\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/FraunhoferISST/diva@67fac716105e2a805c392529c3b5b14d59dd3773/-/blob/core/services/entity-management/apiDoc/openapiTemplate.json",
			"externalURLs": [
				{
					"url": "https://github.com/FraunhoferISST/diva/blob/67fac716105e2a805c392529c3b5b14d59dd3773/core/services/entity-management/apiDoc/openapiTemplate.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/scopedSchemata\": post: responses: HTTP code pattern not implemented",
	"NotImplemented": [
		"HTTP code pattern",
		"unsupported content types"
	]
}