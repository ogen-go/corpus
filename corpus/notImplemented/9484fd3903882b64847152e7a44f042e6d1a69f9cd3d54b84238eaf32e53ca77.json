{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/azure.timeseries/openapi.yaml",
			"byteSize": 94672,
			"content": "openapi: 3.0.1\ninfo:\n  x-ballerina-display:\n    label: Azure Time Series\n    iconPath: \"icon.png\"\n  title: TimeSeriesInsightsClient\n  description: \u003e\n    This is a generated connector from [Azure Time Series Insights API 2020-07-31 version](https://azure.microsoft.com/en-us/services/time-series-insights/) OpenAPI specification.\n\n    Time Series Insights environment data plane client for Gen2 (GA L1 SKU) environments.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n\n    Create an [Azure  Time Series Insights account](https://azure.microsoft.com/en-us/services/time-series-insights/) and obtain OAuth tokens following [this guide](https://docs.microsoft.com/en-us/azure/time-series-insights/time-series-insights-authentication-and-authorization).\n  version: '2020-07-31'\nservers:\n- url: /\nsecurity:\n- azure_auth:\n  - user_impersonation\npaths:\n  /availability:\n    get:\n      tags:\n      - Query\n      description: Returns the time range and distribution of event count over the\n        event timestamp ($ts). This API can be used to provide landing experience\n        of navigating to the environment.\n      operationId: Query_GetAvailability\n      parameters:\n      - name: api-version\n        in: query\n        description: Version of the API to be used with the client request. Currently\n          supported version is \"2020-07-31\".\n        required: true\n        schema:\n          type: string\n          default: 2020-07-31\n      - name: storeType\n        in: query\n        description: For the environments with warm store enabled, the query can be\n          executed either on the 'WarmStore' or 'ColdStore'. This parameter in the\n          query defines which store the query should be executed on. If not defined,\n          the query will be executed on the cold store.\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: x-ms-client-request-id\n        in: header\n        description: Optional client request ID. Service records this value. Allows\n          the service to trace operation across services, and allows the customer\n          to contact support regarding a particular request.\n        schema:\n          type: string\n          x-ms-client-name: clientRequestId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientRequestId\n        x-ms-parameter-location: method\n      - name: x-ms-client-session-id\n        in: header\n        description: Optional client session ID. Service records this value. Allows\n          the service to trace a group of related operations across services, and\n          allows the customer to contact support regarding a particular group of requests.\n        schema:\n          type: string\n          x-ms-client-name: clientSessionId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientSessionId\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Successful operation.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AvailabilityResponse'\n        default:\n          description: Unexpected error.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TsiError'\n  /eventSchema:\n    post:\n      tags:\n      - Query\n      description: Returns environment event schema for a given search span. Event\n        schema is a set of property definitions. Event schema may not be contain all\n        persisted properties when there are too many properties.\n      operationId: Query_GetEventSchema\n      parameters:\n      - name: api-version\n        in: query\n        description: Version of the API to be used with the client request. Currently\n          supported version is \"2020-07-31\".\n        required: true\n        schema:\n          type: string\n          default: 2020-07-31\n      - name: storeType\n        in: query\n        description: For the environments with warm store enabled, the query can be\n          executed either on the 'WarmStore' or 'ColdStore'. This parameter in the\n          query defines which store the query should be executed on. If not defined,\n          the query will be executed on the cold store.\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: x-ms-client-request-id\n        in: header\n        description: Optional client request ID. Service records this value. Allows\n          the service to trace operation across services, and allows the customer\n          to contact support regarding a particular request.\n        schema:\n          type: string\n          x-ms-client-name: clientRequestId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientRequestId\n        x-ms-parameter-location: method\n      - name: x-ms-client-session-id\n        in: header\n        description: Optional client session ID. Service records this value. Allows\n          the service to trace a group of related operations across services, and\n          allows the customer to contact support regarding a particular group of requests.\n        schema:\n          type: string\n          x-ms-client-name: clientSessionId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientSessionId\n        x-ms-parameter-location: method\n      requestBody:\n        description: Parameters to get event schema.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetEventSchemaRequest'\n        required: true\n      responses:\n        200:\n          description: Successful operation.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventSchema'\n        default:\n          description: Unexpected error.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TsiError'\n      x-codegen-request-body-name: parameters\n  /timeseries/modelSettings:\n    get:\n      tags:\n      - ModelSettings\n      description: Returns the model settings which includes model display name, Time\n        Series ID properties and default type ID. Every Gen2 environment has a model\n        that is automatically created.\n      operationId: ModelSettings_Get\n      parameters:\n      - name: api-version\n        in: query\n        description: Version of the API to be used with the client request. Currently\n          supported version is \"2020-07-31\".\n        required: true\n        schema:\n          type: string\n          default: 2020-07-31\n      - name: x-ms-client-request-id\n        in: header\n        description: Optional client request ID. Service records this value. Allows\n          the service to trace operation across services, and allows the customer\n          to contact support regarding a particular request.\n        schema:\n          type: string\n          x-ms-client-name: clientRequestId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientRequestId\n        x-ms-parameter-location: method\n      - name: x-ms-client-session-id\n        in: header\n        description: Optional client session ID. Service records this value. Allows\n          the service to trace a group of related operations across services, and\n          allows the customer to contact support regarding a particular group of requests.\n        schema:\n          type: string\n          x-ms-client-name: clientSessionId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientSessionId\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Successful operation.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ModelSettingsResponse'\n        default:\n          description: Unexpected error.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TsiError'\n    patch:\n      tags:\n      - ModelSettings\n      description: Updates time series model settings - either the model name or default\n        type ID.\n      operationId: ModelSettings_Update\n      parameters:\n      - name: api-version\n        in: query\n        description: Version of the API to be used with the client request. Currently\n          supported version is \"2020-07-31\".\n        required: true\n        schema:\n          type: string\n          default: 2020-07-31\n      - name: x-ms-client-request-id\n        in: header\n        description: Optional client request ID. Service records this value. Allows\n          the service to trace operation across services, and allows the customer\n          to contact support regarding a particular request.\n        schema:\n          type: string\n          x-ms-client-name: clientRequestId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientRequestId\n        x-ms-parameter-location: method\n      - name: x-ms-client-session-id\n        in: header\n        description: Optional client session ID. Service records this value. Allows\n          the service to trace a group of related operations across services, and\n          allows the customer to contact support regarding a particular group of requests.\n        schema:\n          type: string\n          x-ms-client-name: clientSessionId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientSessionId\n        x-ms-parameter-location: method\n      requestBody:\n        description: Model settings update request body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateModelSettingsRequest'\n        required: true\n      responses:\n        200:\n          description: Successful operation returns new full model settings.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ModelSettingsResponse'\n        default:\n          description: Unexpected error.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TsiError'\n      x-codegen-request-body-name: parameters\n  /timeseries/query:\n    post:\n      tags:\n      - Query\n      description: Executes Time Series Query in pages of results - Get Events, Get\n        Series or Aggregate Series.\n      operationId: Query_Execute\n      parameters:\n      - name: api-version\n        in: query\n        description: Version of the API to be used with the client request. Currently\n          supported version is \"2020-07-31\".\n        required: true\n        schema:\n          type: string\n          default: 2020-07-31\n      - name: storeType\n        in: query\n        description: For the environments with warm store enabled, the query can be\n          executed either on the 'WarmStore' or 'ColdStore'. This parameter in the\n          query defines which store the query should be executed on. If not defined,\n          the query will be executed on the cold store.\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: x-ms-continuation\n        in: header\n        description: Continuation token from previous page of results to retrieve\n          the next page of the results in calls that support pagination. To get the\n          first page results, specify null continuation token as parameter value.\n          Returned continuation token is null if all results have been returned, and\n          there is no next page of results.\n        schema:\n          type: string\n          x-ms-client-name: continuationToken\n          x-ms-parameter-location: method\n        x-ms-client-name: continuationToken\n        x-ms-parameter-location: method\n      - name: x-ms-client-request-id\n        in: header\n        description: Optional client request ID. Service records this value. Allows\n          the service to trace operation across services, and allows the customer\n          to contact support regarding a particular request.\n        schema:\n          type: string\n          x-ms-client-name: clientRequestId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientRequestId\n        x-ms-parameter-location: method\n      - name: x-ms-client-session-id\n        in: header\n        description: Optional client session ID. Service records this value. Allows\n          the service to trace a group of related operations across services, and\n          allows the customer to contact support regarding a particular group of requests.\n        schema:\n          type: string\n          x-ms-client-name: clientSessionId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientSessionId\n        x-ms-parameter-location: method\n      requestBody:\n        description: Time series query request body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QueryRequest'\n        required: true\n      responses:\n        200:\n          description: Successful query.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryResultPage'\n        default:\n          description: Unexpected error.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TsiError'\n      x-codegen-request-body-name: parameters\n  /timeseries/instances:\n    get:\n      tags:\n      - TimeSeriesInstances\n      description: Gets time series instances in pages.\n      operationId: TimeSeriesInstances_List\n      parameters:\n      - name: api-version\n        in: query\n        description: Version of the API to be used with the client request. Currently\n          supported version is \"2020-07-31\".\n        required: true\n        schema:\n          type: string\n          default: 2020-07-31\n      - name: x-ms-continuation\n        in: header\n        description: Continuation token from previous page of results to retrieve\n          the next page of the results in calls that support pagination. To get the\n          first page results, specify null continuation token as parameter value.\n          Returned continuation token is null if all results have been returned, and\n          there is no next page of results.\n        schema:\n          type: string\n          x-ms-client-name: continuationToken\n          x-ms-parameter-location: method\n        x-ms-client-name: continuationToken\n        x-ms-parameter-location: method\n      - name: x-ms-client-request-id\n        in: header\n        description: Optional client request ID. Service records this value. Allows\n          the service to trace operation across services, and allows the customer\n          to contact support regarding a particular request.\n        schema:\n          type: string\n          x-ms-client-name: clientRequestId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientRequestId\n        x-ms-parameter-location: method\n      - name: x-ms-client-session-id\n        in: header\n        description: Optional client session ID. Service records this value. Allows\n          the service to trace a group of related operations across services, and\n          allows the customer to contact support regarding a particular group of requests.\n        schema:\n          type: string\n          x-ms-client-name: clientSessionId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientSessionId\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Successful operation.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetInstancesPage'\n        default:\n          description: Unexpected error.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TsiError'\n  /timeseries/instances/$batch:\n    post:\n      tags:\n      - TimeSeriesInstances\n      description: Executes a batch get, create, update, delete operation on multiple\n        time series instances.\n      operationId: TimeSeriesInstances_ExecuteBatch\n      parameters:\n      - name: api-version\n        in: query\n        description: Version of the API to be used with the client request. Currently\n          supported version is \"2020-07-31\".\n        required: true\n        schema:\n          type: string\n          default: 2020-07-31\n      - name: x-ms-client-request-id\n        in: header\n        description: Optional client request ID. Service records this value. Allows\n          the service to trace operation across services, and allows the customer\n          to contact support regarding a particular request.\n        schema:\n          type: string\n          x-ms-client-name: clientRequestId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientRequestId\n        x-ms-parameter-location: method\n      - name: x-ms-client-session-id\n        in: header\n        description: Optional client session ID. Service records this value. Allows\n          the service to trace a group of related operations across services, and\n          allows the customer to contact support regarding a particular group of requests.\n        schema:\n          type: string\n          x-ms-client-name: clientSessionId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientSessionId\n        x-ms-parameter-location: method\n      requestBody:\n        description: Time series instances suggest request body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InstancesBatchRequest'\n        required: true\n      responses:\n        200:\n          description: Successful operation.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstancesBatchResponse'\n        default:\n          description: Unexpected error.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TsiError'\n      x-codegen-request-body-name: parameters\n  /timeseries/instances/suggest:\n    post:\n      tags:\n      - TimeSeriesInstances\n      description: Suggests keywords based on time series instance attributes to be\n        later used in Search Instances.\n      operationId: TimeSeriesInstances_Suggest\n      parameters:\n      - name: api-version\n        in: query\n        description: Version of the API to be used with the client request. Currently\n          supported version is \"2020-07-31\".\n        required: true\n        schema:\n          type: string\n          default: 2020-07-31\n      - name: x-ms-client-request-id\n        in: header\n        description: Optional client request ID. Service records this value. Allows\n          the service to trace operation across services, and allows the customer\n          to contact support regarding a particular request.\n        schema:\n          type: string\n          x-ms-client-name: clientRequestId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientRequestId\n        x-ms-parameter-location: method\n      - name: x-ms-client-session-id\n        in: header\n        description: Optional client session ID. Service records this value. Allows\n          the service to trace a group of related operations across services, and\n          allows the customer to contact support regarding a particular group of requests.\n        schema:\n          type: string\n          x-ms-client-name: clientSessionId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientSessionId\n        x-ms-parameter-location: method\n      requestBody:\n        description: Time series instances suggest request body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InstancesSuggestRequest'\n        required: true\n      responses:\n        200:\n          description: Successful operation.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstancesSuggestResponse'\n        default:\n          description: Unexpected error.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TsiError'\n      x-codegen-request-body-name: parameters\n  /timeseries/instances/search:\n    post:\n      tags:\n      - TimeSeriesInstances\n      description: Partial list of hits on search for time series instances based\n        on instance attributes.\n      operationId: TimeSeriesInstances_Search\n      parameters:\n      - name: api-version\n        in: query\n        description: Version of the API to be used with the client request. Currently\n          supported version is \"2020-07-31\".\n        required: true\n        schema:\n          type: string\n          default: 2020-07-31\n      - name: x-ms-continuation\n        in: header\n        description: Continuation token from previous page of results to retrieve\n          the next page of the results in calls that support pagination. To get the\n          first page results, specify null continuation token as parameter value.\n          Returned continuation token is null if all results have been returned, and\n          there is no next page of results.\n        schema:\n          type: string\n          x-ms-client-name: continuationToken\n          x-ms-parameter-location: method\n        x-ms-client-name: continuationToken\n        x-ms-parameter-location: method\n      - name: x-ms-client-request-id\n        in: header\n        description: Optional client request ID. Service records this value. Allows\n          the service to trace operation across services, and allows the customer\n          to contact support regarding a particular request.\n        schema:\n          type: string\n          x-ms-client-name: clientRequestId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientRequestId\n        x-ms-parameter-location: method\n      - name: x-ms-client-session-id\n        in: header\n        description: Optional client session ID. Service records this value. Allows\n          the service to trace a group of related operations across services, and\n          allows the customer to contact support regarding a particular group of requests.\n        schema:\n          type: string\n          x-ms-client-name: clientSessionId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientSessionId\n        x-ms-parameter-location: method\n      requestBody:\n        description: Time series instances search request body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchInstancesRequest'\n        required: true\n      responses:\n        200:\n          description: Successful search response.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchInstancesResponsePage'\n        default:\n          description: Unexpected error.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TsiError'\n      x-codegen-request-body-name: parameters\n  /timeseries/types:\n    get:\n      tags:\n      - TimeSeriesTypes\n      description: Gets time series types in pages.\n      operationId: TimeSeriesTypes_List\n      parameters:\n      - name: api-version\n        in: query\n        description: Version of the API to be used with the client request. Currently\n          supported version is \"2020-07-31\".\n        required: true\n        schema:\n          type: string\n          default: 2020-07-31\n      - name: x-ms-continuation\n        in: header\n        description: Continuation token from previous page of results to retrieve\n          the next page of the results in calls that support pagination. To get the\n          first page results, specify null continuation token as parameter value.\n          Returned continuation token is null if all results have been returned, and\n          there is no next page of results.\n        schema:\n          type: string\n          x-ms-client-name: continuationToken\n          x-ms-parameter-location: method\n        x-ms-client-name: continuationToken\n        x-ms-parameter-location: method\n      - name: x-ms-client-request-id\n        in: header\n        description: Optional client request ID. Service records this value. Allows\n          the service to trace operation across services, and allows the customer\n          to contact support regarding a particular request.\n        schema:\n          type: string\n          x-ms-client-name: clientRequestId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientRequestId\n        x-ms-parameter-location: method\n      - name: x-ms-client-session-id\n        in: header\n        description: Optional client session ID. Service records this value. Allows\n          the service to trace a group of related operations across services, and\n          allows the customer to contact support regarding a particular group of requests.\n        schema:\n          type: string\n          x-ms-client-name: clientSessionId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientSessionId\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Successful operation.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTypesPage'\n        default:\n          description: Unexpected error.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TsiError'\n  /timeseries/types/$batch:\n    post:\n      tags:\n      - TimeSeriesTypes\n      description: Executes a batch get, create, update, delete operation on multiple\n        time series types.\n      operationId: TimeSeriesTypes_ExecuteBatch\n      parameters:\n      - name: api-version\n        in: query\n        description: Version of the API to be used with the client request. Currently\n          supported version is \"2020-07-31\".\n        required: true\n        schema:\n          type: string\n          default: 2020-07-31\n      - name: x-ms-client-request-id\n        in: header\n        description: Optional client request ID. Service records this value. Allows\n          the service to trace operation across services, and allows the customer\n          to contact support regarding a particular request.\n        schema:\n          type: string\n          x-ms-client-name: clientRequestId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientRequestId\n        x-ms-parameter-location: method\n      - name: x-ms-client-session-id\n        in: header\n        description: Optional client session ID. Service records this value. Allows\n          the service to trace a group of related operations across services, and\n          allows the customer to contact support regarding a particular group of requests.\n        schema:\n          type: string\n          x-ms-client-name: clientSessionId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientSessionId\n        x-ms-parameter-location: method\n      requestBody:\n        description: Time series types batch request body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TypesBatchRequest'\n        required: true\n      responses:\n        200:\n          description: Successful operation.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TypesBatchResponse'\n        default:\n          description: Unexpected error.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TsiError'\n      x-codegen-request-body-name: parameters\n  /timeseries/hierarchies:\n    get:\n      tags:\n      - TimeSeriesHierarchies\n      description: Returns time series hierarchies definitions in pages.\n      operationId: TimeSeriesHierarchies_List\n      parameters:\n      - name: api-version\n        in: query\n        description: Version of the API to be used with the client request. Currently\n          supported version is \"2020-07-31\".\n        required: true\n        schema:\n          type: string\n          default: 2020-07-31\n      - name: x-ms-continuation\n        in: header\n        description: Continuation token from previous page of results to retrieve\n          the next page of the results in calls that support pagination. To get the\n          first page results, specify null continuation token as parameter value.\n          Returned continuation token is null if all results have been returned, and\n          there is no next page of results.\n        schema:\n          type: string\n          x-ms-client-name: continuationToken\n          x-ms-parameter-location: method\n        x-ms-client-name: continuationToken\n        x-ms-parameter-location: method\n      - name: x-ms-client-request-id\n        in: header\n        description: Optional client request ID. Service records this value. Allows\n          the service to trace operation across services, and allows the customer\n          to contact support regarding a particular request.\n        schema:\n          type: string\n          x-ms-client-name: clientRequestId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientRequestId\n        x-ms-parameter-location: method\n      - name: x-ms-client-session-id\n        in: header\n        description: Optional client session ID. Service records this value. Allows\n          the service to trace a group of related operations across services, and\n          allows the customer to contact support regarding a particular group of requests.\n        schema:\n          type: string\n          x-ms-client-name: clientSessionId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientSessionId\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Successful operation.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetHierarchiesPage'\n        default:\n          description: Unexpected error.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TsiError'\n  /timeseries/hierarchies/$batch:\n    post:\n      tags:\n      - TimeSeriesHierarchies\n      description: Executes a batch get, create, update, delete operation on multiple\n        time series hierarchy definitions.\n      operationId: TimeSeriesHierarchies_ExecuteBatch\n      parameters:\n      - name: api-version\n        in: query\n        description: Version of the API to be used with the client request. Currently\n          supported version is \"2020-07-31\".\n        required: true\n        schema:\n          type: string\n          default: 2020-07-31\n      - name: x-ms-client-request-id\n        in: header\n        description: Optional client request ID. Service records this value. Allows\n          the service to trace operation across services, and allows the customer\n          to contact support regarding a particular request.\n        schema:\n          type: string\n          x-ms-client-name: clientRequestId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientRequestId\n        x-ms-parameter-location: method\n      - name: x-ms-client-session-id\n        in: header\n        description: Optional client session ID. Service records this value. Allows\n          the service to trace a group of related operations across services, and\n          allows the customer to contact support regarding a particular group of requests.\n        schema:\n          type: string\n          x-ms-client-name: clientSessionId\n          x-ms-parameter-location: method\n        x-ms-client-name: clientSessionId\n        x-ms-parameter-location: method\n      requestBody:\n        description: Time series hierarchies batch request body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HierarchiesBatchRequest'\n        required: true\n      responses:\n        200:\n          description: Successful operation.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HierarchiesBatchResponse'\n        default:\n          description: Unexpected error.\n          headers:\n            x-ms-request-id:\n              description: Server-generated request ID. Can be used to contact support\n                to investigate a request.\n              schema:\n                type: string\n                x-ms-client-name: serverRequestId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TsiError'\n      x-codegen-request-body-name: parameters\ncomponents:\n  schemas:\n    AvailabilityResponse:\n      type: object\n      properties:\n        availability:\n          $ref: '#/components/schemas/Availability'\n      description: Response of Get Availability operation. When environment has no\n        data, availability property is null.\n    Availability:\n      type: object\n      properties:\n        range:\n          $ref: '#/components/schemas/DateTimeRange'\n        intervalSize:\n          type: string\n          description: 'Interval size for the returned distribution of the events.\n            Returned interval is selected to return a reasonable number of points.\n            All intervals are the same size. On the wire interval is specified in\n            ISO-8601 duration format. One month is always converted to 30 days, and\n            one year is always 365 days. Examples: 1 minute is \"PT1M\", 1 millisecond\n            is \"PT0.001S\". For more information, see https://www.w3.org/TR/xmlschema-2/#duration'\n          format: duration\n          readOnly: true\n        distribution:\n          type: object\n          description: Approximate distribution of events over time.\n      description: Event availability information when environment contains events.\n        Contains time range of events and approximate distribution of events over\n        time.\n    GetEventSchemaRequest:\n      required:\n      - searchSpan\n      type: object\n      properties:\n        searchSpan:\n          $ref: '#/components/schemas/DateTimeRange'\n      description: Request to get the event schema of all events within a given search\n        span.\n    EventSchema:\n      type: object\n      properties:\n        properties:\n          type: array\n          description: A set of property definitions. When environment has no data,\n            the returned array is empty.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/EventProperty'\n      description: Event schema of all events within a given search span. Event schema\n        is a set of property definitions. Properties are identified by both name and\n        type. Different events can have properties with same name, but different type.\n        Event schema may not be contain all persisted properties when there are too\n        many properties.\n    QueryRequest:\n      type: object\n      properties:\n        getEvents:\n          $ref: '#/components/schemas/GetEvents'\n        getSeries:\n          $ref: '#/components/schemas/GetSeries'\n        aggregateSeries:\n          $ref: '#/components/schemas/AggregateSeries'\n      description: Request to execute a time series query over events. Exactly one\n        of \"getEvents\", \"getSeries\" or \"aggregateSeries\" must be set.\n    GetEvents:\n      required:\n      - searchSpan\n      - timeSeriesId\n      type: object\n      properties:\n        timeSeriesId:\n          $ref: '#/components/schemas/TimeSeriesId'\n        searchSpan:\n          $ref: '#/components/schemas/DateTimeRange'\n        filter:\n          $ref: '#/components/schemas/Tsx'\n        projectedProperties:\n          type: array\n          description: Projected properties is an array of properties which you want\n            to project. These properties must appear in the events; otherwise, they\n            are not returned.\n          items:\n            $ref: '#/components/schemas/EventProperty'\n        take:\n          type: integer\n          description: Maximum number of property values in the whole response set,\n            not the maximum number of property values per page. Defaults to 10,000\n            when not set. Maximum value of take can be 250,000.\n          format: int32\n      description: Get Events query. Allows to retrieve raw events for a given Time\n        Series ID and search span.\n    GetSeries:\n      required:\n      - searchSpan\n      - timeSeriesId\n      type: object\n      properties:\n        timeSeriesId:\n          $ref: '#/components/schemas/TimeSeriesId'\n        searchSpan:\n          $ref: '#/components/schemas/DateTimeRange'\n        filter:\n          $ref: '#/components/schemas/Tsx'\n        projectedVariables:\n          type: array\n          description: Selected variables that needs to be projected in the query\n            result. When it is null or not set, all the variables from inlineVariables\n            and time series type in the model are returned. Can be null.\n          items:\n            type: string\n        inlineVariables:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/Variable'\n          description: Optional inline variables apart from the ones already defined\n            in the time series type in the model. When the inline variable name is\n            the same name as in the model, the inline variable definition takes precedence.\n            Can be null.\n        take:\n          type: integer\n          description: Maximum number of property values in the whole response set,\n            not the maximum number of property values per page. Defaults to 10,000\n            when not set. Maximum value of take can be 250,000.\n          format: int32\n      description: Get Series query. Allows to retrieve time series of calculated\n        variable values from events for a given Time Series ID and search span.\n    AggregateSeries:\n      required:\n      - interval\n      - searchSpan\n      - timeSeriesId\n      type: object\n      properties:\n        timeSeriesId:\n          $ref: '#/components/schemas/TimeSeriesId'\n        searchSpan:\n          $ref: '#/components/schemas/DateTimeRange'\n        filter:\n          $ref: '#/components/schemas/Tsx'\n        interval:\n          type: string\n          description: 'Interval size is specified in ISO-8601 duration format. All\n            intervals are the same size. One month is always converted to 30 days,\n            and one year is always 365 days. Examples: 1 minute is \"PT1M\", 1 millisecond\n            is \"PT0.001S\". For more information, see https://www.w3.org/TR/xmlschema-2/#duration'\n          format: duration\n        projectedVariables:\n          type: array\n          description: This allows the user to optionally select the variables that\n            needs to be projected. When it is null or not set, all the variables from\n            inlineVariables and model are returned. Can be null.\n          items:\n            type: string\n        inlineVariables:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/Variable'\n          description: This allows the user the optionally define inline-variables\n            apart from the ones already defined in the model. When the inline variable\n            names have the same name as the model, the inline variable definition\n            takes precedence. Can be null.\n      description: Aggregate Series query. Allows to calculate an aggregated time\n        series from events for a given Time Series ID and search span.\n    TimeSeriesId:\n      minItems: 1\n      type: array\n      description: A single Time Series ID value that is an array of primitive values\n        that uniquely identifies a time series instance (e.g. a single device). Note\n        that a single Time Series ID can be composite if multiple properties are specified\n        as Time Series ID at environment creation time. The position and type of values\n        must match Time Series ID properties specified on the environment and returned\n        by Get Model Setting API. Cannot be empty.\n      items:\n        type: object\n        description: A single Time Series ID value that is an array of primitive values\n          that uniquely identifies a time series instance (e.g. a single device).\n          Note that a single Time Series ID can be composite if multiple properties\n          are specified as Time Series ID at environment creation time. The position\n          and type of values must match Time Series ID properties specified on the\n          environment and returned by Get Model Setting API. Cannot be empty.\n    Tsx:\n      required:\n      - tsx\n      type: object\n      properties:\n        tsx:\n          type: string\n          description: 'Time series expression (TSX) written as a single string. Examples:\n            \"$event.Status.String=''Good''\", \"avg($event.Temperature)\". Refer to the\n            documentation on how to write time series expressions.'\n      description: 'Time series expression (TSX) written as a single string. Examples:\n        \"$event.Status.String=''Good''\", \"avg($event.Temperature)\". Refer to the documentation\n        on how to write time series expressions.'\n    Interpolation:\n      type: object\n      properties:\n        kind:\n          type: string\n          description: 'The type of interpolation technique : \"Linear\" or \"Step\".'\n          enum:\n          - Linear\n          - Step\n          x-ms-enum:\n            name: InterpolationKind\n            modelAsString: true\n        boundary:\n          type: object\n          properties:\n            span:\n              type: string\n              description: Search span.\n              format: duration\n          description: The time range to the left and right of the search span to\n            be used for Interpolation. This is helpful in scenarios where the data\n            points are missing close to the start or end of the input search span.\n            Can be null.\n      description: 'The interpolation operation to be performed on the raw data points.\n        Currently, only sampling of interpolated time series is allowed. Allowed aggregate\n        function - eg: left($value). Can be null if no interpolation needs to be applied.'\n    DateTimeRange:\n      required:\n      - from\n      - to\n      type: object\n      properties:\n        from:\n          type: string\n          description: Start timestamp of the time range. Start timestamp is inclusive\n            when used in time series query requests. Events that have this timestamp\n            are included.\n          format: date-time\n        to:\n          type: string\n          description: End timestamp of the time range. End timestamp is exclusive\n            when used in time series query requests. Events that match this timestamp\n            are excluded. Note that end timestamp is inclusive when returned by Get\n            Availability (meaning that there is an event with this exact \"to\" timestamp).\n          format: date-time\n      description: The range of time. Cannot be null or negative.\n    NumericVariable:\n      description: Numeric variable represents a single continuous numeric signal\n        that can be reconstructed using interpolation.\n      allOf:\n      - $ref: '#/components/schemas/Variable'\n      - type: object\n        properties:\n          value:\n            $ref: '#/components/schemas/Tsx'\n          interpolation:\n            $ref: '#/components/schemas/Interpolation'\n          aggregation:\n            $ref: '#/components/schemas/Tsx'\n      x-ms-discriminator-value: numeric\n    AggregateVariable:\n      description: Aggregate variable represents any aggregation calculation. Aggregate\n        Variables does not support interpolation.\n      allOf:\n      - $ref: '#/components/schemas/Variable'\n      - type: object\n        properties:\n          aggregation:\n            $ref: '#/components/schemas/Tsx'\n      x-ms-discriminator-value: aggregate\n    CategoricalVariable:\n      description: Categorical variable represents signal that needs to be analyzed\n        based on the count or duration of occurrence of limited set of defined values.\n      allOf:\n      - $ref: '#/components/schemas/Variable'\n      - type: object\n        properties:\n          value:\n            $ref: '#/components/schemas/Tsx'\n          interpolation:\n            $ref: '#/components/schemas/Interpolation'\n          categories:\n            type: array\n            description: Aggregation category types.\n            items:\n              $ref: '#/components/schemas/TimeSeriesAggregateCategory'\n          defaultCategory:\n            $ref: '#/components/schemas/TimeSeriesDefaultCategory'\n      x-ms-discriminator-value: categorical\n    TimeSeriesAggregateCategory:\n      required:\n      - label\n      - values\n      type: object\n      properties:\n        label:\n          type: string\n          description: The name of the category which will be used in constructing\n            the output variable names.\n        values:\n          type: array\n          description: The list of values that a category maps to. Can be either a\n            unique list of string or list of long.\n          items:\n            type: object\n            properties: {}\n      description: Category used in categorical variables. A category is defined by\n        'label' and the 'values' that are assigned this label.\n    TimeSeriesDefaultCategory:\n      required:\n      - label\n      type: object\n      properties:\n        label:\n          type: string\n          description: The name of the default category which will be assigned to\n            the values that does not match any of those that are defined in the 'categories'.\n      description: Represents the default category.\n    Variable:\n      required:\n      - kind\n      type: object\n      properties:\n        kind:\n          type: string\n          description: Allowed \"kind\" values are - \"numeric\" or \"aggregate\". While\n            \"numeric\" allows you to specify value of the reconstructed signal and\n            the expression to aggregate them, the \"aggregate\" kind lets you directly\n            aggregate on the event properties without specifying value.\n        filter:\n          $ref: '#/components/schemas/Tsx'\n      description: Variables are named calculations over values from the events. Time\n        Series Insights variable definitions contain formula and computation rules.\n        Variables are stored in the type definition in Time Series Model and can be\n        provided inline via Query APIs to override the stored definition.\n      discriminator:\n        propertyName: kind\n    QueryResultPage:\n      description: A single page of query results. If query has not finished yet,\n        a page will have continuation token set. In this case, to get the next page\n        of results, send the same request again with continuation token parameter.\n        If query has completed, the continuation token is null. It is also possible\n        to get an empty page with only continuation token set when no query results\n        have been computed yet. If paging has completed (continuation token is null),\n        then timestamps and properties may be empty if there is no data to return.\n      allOf:\n      - $ref: '#/components/schemas/PagedResponse'\n      - type: object\n        properties:\n          timestamps:\n            type: array\n            description: The timestamps of the values of the time series. If an aggregation\n              over intervals is used, timestamps represent the start of corresponding\n              intervals. If events are retrieved, timestamps are values of timestamp\n              $ts property of events. Can be null if server was unable to fill the\n              page in this request, or can be empty if there are no more objects when\n              continuation token is null.\n            readOnly: true\n            items:\n              type: string\n              format: date-time\n          properties:\n            type: array\n            description: Collection of time series properties and values for each\n              of the timestamps.  Can be null if server was unable to fill the page\n              in this request, or can be empty if there are no more objects when continuation\n              token is null.\n            readOnly: true\n            items:\n              $ref: '#/components/schemas/PropertyValues'\n          progress:\n            type: number\n            description: Approximate progress of the query in percentage. It can be\n              between 0 and 100. When the continuation token in the response is null,\n              the progress is expected to be 100.\n            format: double\n            readOnly: true\n    PropertyValues:\n      description: Values of a single property corresponding to the timestamps. May\n        contain nulls. Type of values matches the type of property.\n      allOf:\n      - $ref: '#/components/schemas/EventProperty'\n      - type: object\n        properties:\n          values:\n            type: array\n            description: Values of a single property corresponding to the timestamps.\n              May contain nulls. Type of values matches the type of property.\n            items:\n              type: object\n    GetInstancesPage:\n      description: Partial list of time series instances returned in a single request.\n      allOf:\n      - $ref: '#/components/schemas/PagedResponse'\n      - type: object\n        properties:\n          instances:\n            type: array\n            description: Partial list of time series instances returned in a single\n              request. Can be empty if server was unable to fill the page in this\n              request, or there is no more objects when continuation token is null.\n            readOnly: true\n            items:\n              $ref: '#/components/schemas/TimeSeriesInstance'\n    TimeSeriesInstance:\n      required:\n      - timeSeriesId\n      - typeId\n      type: object\n      properties:\n        timeSeriesId:\n          $ref: '#/components/schemas/TimeSeriesId'\n        typeId:\n          type: string\n          description: This represents the type that this instance belongs to. Never\n            null.\n        name:\n          type: string\n          description: Optional name of the instance which is unique in an environment.\n            Names acts as a mutable alias or display name of the time series instance.\n            Mutable, may be null.\n        description:\n          type: string\n          description: This optional field contains description about the instance.\n        hierarchyIds:\n          type: array\n          description: Set of time series hierarchy IDs that the instance belong to.\n            May be null.\n          items:\n            type: string\n        instanceFields:\n          type: object\n          additionalProperties:\n            type: object\n          description: 'Set of key-value pairs that contain user-defined instance\n            properties. It may be null. Supported property value types are: bool,\n            string, long, double and it cannot be nested or null.'\n      description: Time series instances are the time series themselves. In most cases,\n        the deviceId or assetId is the unique identifier of the asset in the environment.\n        Instances have descriptive information associated with them called instance\n        fields. At a minimum, instance fields include hierarchy information. They\n        can also include useful, descriptive data like the manufacturer, operator,\n        or the last service date.\n    InstancesBatchRequest:\n      type: object\n      properties:\n        get:\n          $ref: '#/components/schemas/InstancesRequestBatchGetOrDelete'\n        put:\n          type: array\n          description: Time series instances to be created or updated.\n          items:\n            $ref: '#/components/schemas/TimeSeriesInstance'\n        update:\n          type: array\n          description: Time series instance to be updated. If instance does not exist,\n            an error is returned.\n          items:\n            $ref: '#/components/schemas/TimeSeriesInstance'\n        delete:\n          $ref: '#/components/schemas/InstancesRequestBatchGetOrDelete'\n      description: Request to perform a single operation on a batch of instances.\n        Exactly one of \"get\", \"put\", \"update\" or \"delete\" must be set.\n    InstancesRequestBatchGetOrDelete:\n      type: object\n      properties:\n        timeSeriesIds:\n          type: array\n          description: List of time series IDs of the time series instances to return\n            or delete.\n          items:\n            $ref: '#/components/schemas/TimeSeriesId'\n        names:\n          type: array\n          description: List of names of the time series instances to return or delete.\n          items:\n            type: string\n      description: Request to get or delete instances by time series IDs or time series\n        names. Exactly one of \"timeSeriesIds\" or \"names\" must be set.\n    InstancesBatchResponse:\n      type: object\n      properties:\n        get:\n          type: array\n          description: List of instance or error objects corresponding by position\n            to the \"get\" array in the request. Instance object is set when operation\n            is successful and error object is set when operation is unsuccessful.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/InstanceOrError'\n        put:\n          type: array\n          description: List of error objects corresponding by position to the \"put\"\n            array in the request. Error object is set when operation is unsuccessful.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/InstanceOrError'\n        update:\n          type: array\n          description: List of error objects corresponding by position to the \"update\"\n            array in the request. Instance object is set when operation is successful\n            and error object is set when operation is unsuccessful.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/InstanceOrError'\n        delete:\n          type: array\n          description: List of error objects corresponding by position to the \"delete\"\n            array in the request. Null means the instance has been deleted, or did\n            not exist. Error object is set when operation is unsuccessful (e.g. when\n            there are events associated with this time series instance).\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/TsiErrorBody'\n      description: Response of a single operation on a batch of instances. Only one\n        of \"get\", \"put\", \"update\" or \"delete\" will be set based on the request.\n    InstanceOrError:\n      type: object\n      properties:\n        instance:\n          $ref: '#/components/schemas/TimeSeriesInstance'\n        error:\n          $ref: '#/components/schemas/TsiErrorBody'\n      description: Result of a batch operation on a particular time series instance.\n        Instance object is set when operation is successful (except put operation)\n        and error object is set when operation is unsuccessful.\n    GetTypesPage:\n      description: Partial list of time series types returned in a single request.\n      allOf:\n      - $ref: '#/components/schemas/PagedResponse'\n      - type: object\n        properties:\n          types:\n            type: array\n            description: Partial list of time series types returned in a single request.\n              Can be empty if server was unable to fill the page with more types in\n              this request, or there is no more types when continuation token is null.\n            readOnly: true\n            items:\n              $ref: '#/components/schemas/TimeSeriesType'\n    TimeSeriesType:\n      required:\n      - name\n      - variables\n      type: object\n      properties:\n        id:\n          type: string\n          description: Case-sensitive unique type identifier that is immutable. Can\n            be null on create or update requests, and then server generates the ID.\n            Not null on get and delete operations.\n        name:\n          type: string\n          description: User-given unique name for the type. Mutable, not null.\n        description:\n          type: string\n          description: Description of the type. May be null.\n        variables:\n          type: object\n          description: Different variables associated with the type. Not empty, not\n            null.\n      description: Time series type defines variables or formulas for doing computation\n        on events associated with time series instances. Each time series instance\n        is associated with exactly one type. A type can have one or more variables.\n        For example, a time series instance might be of type Temperature Sensor, which\n        consists of the variables avg temperature, min temperature, and max temperature.\n    TypesBatchRequest:\n      type: object\n      properties:\n        get:\n          $ref: '#/components/schemas/TypesRequestBatchGetOrDelete'\n        put:\n          type: array\n          description: Definition of what time series types to update or create.\n          items:\n            $ref: '#/components/schemas/TimeSeriesType'\n        delete:\n          $ref: '#/components/schemas/TypesRequestBatchGetOrDelete'\n      description: Request to perform a single operation on a batch of time series\n        types. Exactly one of \"get\", \"put\" or \"delete\" must be set.\n    TypesRequestBatchGetOrDelete:\n      type: object\n      properties:\n        typeIds:\n          type: array\n          description: List of IDs of time series types to return or delete.\n          items:\n            type: string\n        names:\n          type: array\n          description: List of names of time series types to return or delete.\n          items:\n            type: string\n      description: Request to get or delete time series types by IDs or type names.\n        Exactly one of \"typeIds\" or \"names\" must be set.\n    TypesBatchResponse:\n      type: object\n      properties:\n        get:\n          type: array\n          description: List of types or error objects corresponding by position to\n            the \"get\" array in the request. Type object is set when operation is successful\n            and error object is set when operation is unsuccessful.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/TimeSeriesTypeOrError'\n        put:\n          type: array\n          description: List of types or error objects corresponding by position to\n            the \"put\" array in the request. Type object is set when operation is successful\n            and error object is set when operation is unsuccessful.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/TimeSeriesTypeOrError'\n        delete:\n          type: array\n          description: List of error objects corresponding by position to the \"delete\"\n            array in the request - null when the operation is successful.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/TsiErrorBody'\n      description: Response of a single operation on a batch of time series types.\n        Exactly one of \"get\", \"put\" or \"delete\" will be set.\n    TimeSeriesTypeOrError:\n      type: object\n      properties:\n        timeSeriesType:\n          $ref: '#/components/schemas/TimeSeriesType'\n        error:\n          $ref: '#/components/schemas/TsiErrorBody'\n      description: Result of a batch operation on a particular time series type. Type\n        object is set when operation is successful and error object is set when operation\n        is unsuccessful.\n    GetHierarchiesPage:\n      description: Partial list of time series hierarchies returned in a single request.\n      allOf:\n      - $ref: '#/components/schemas/PagedResponse'\n      - type: object\n        properties:\n          hierarchies:\n            type: array\n            description: Partial list of time series hierarchies returned in a single\n              request. Can be empty if server was unable to fill the page in this\n              request, or there is no more objects when continuation token is null.\n            readOnly: true\n            items:\n              $ref: '#/components/schemas/TimeSeriesHierarchy'\n    TimeSeriesHierarchy:\n      required:\n      - name\n      - source\n      type: object\n      properties:\n        id:\n          type: string\n          description: Case-sensitive unique hierarchy identifier. Can be null while\n            creating hierarchy objects and then server generates the id, not null\n            on get and delete operations.\n        name:\n          type: string\n          description: User-given unique name for the type. It is mutable and not\n            null.\n        source:\n          type: object\n          properties:\n            instanceFieldNames:\n              type: array\n              description: List of instance field names that must be set in all time\n                series instances that belong to this hierarchy. The order of the instance\n                fields defines the levels in the hierarchy.\n              items:\n                type: string\n          description: Definition of how time series hierarchy tree levels are created.\n      description: Time series hierarchy organizes time series instances into a tree.\n    HierarchiesBatchRequest:\n      type: object\n      properties:\n        get:\n          $ref: '#/components/schemas/HierarchiesRequestBatchGetDelete'\n        put:\n          type: array\n          description: '\"put\" should be set while creating or updating hierarchies.'\n          items:\n            $ref: '#/components/schemas/TimeSeriesHierarchy'\n        delete:\n          $ref: '#/components/schemas/HierarchiesRequestBatchGetDelete'\n      description: Request to perform a single operation on a batch of hierarchies.\n        Exactly one of \"get\", \"put\" or \"delete\" must be set.\n    HierarchiesRequestBatchGetDelete:\n      type: object\n      properties:\n        hierarchyIds:\n          type: array\n          description: List of hierarchy IDs.\n          items:\n            type: string\n        names:\n          type: array\n          description: List of hierarchy names.\n          items:\n            type: string\n      description: Request to get or delete multiple time series hierarchies. Exactly\n        one of \"hierarchyIds\" or \"names\" must be set.\n    HierarchiesBatchResponse:\n      type: object\n      properties:\n        get:\n          type: array\n          description: List of hierarchy or error objects corresponding by position\n            to the \"get\" array in the request. Hierarchy object is set when operation\n            is successful and error object is set when operation is unsuccessful.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/TimeSeriesHierarchyOrError'\n        put:\n          type: array\n          description: List of hierarchy or error object corresponding by position\n            to the \"put\" array in the request. Hierarchy object is set when operation\n            is successful and error object is set when operation is unsuccessful.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/TimeSeriesHierarchyOrError'\n        delete:\n          type: array\n          description: List of error objects corresponding by position to the \"delete\"\n            array in the request - null when the operation is successful.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/TsiErrorBody'\n      description: Response of a single operation on a batch of time series hierarchies.\n        Only one of \"get\", \"put\" or \"delete\" will be set.\n    TimeSeriesHierarchyOrError:\n      type: object\n      properties:\n        hierarchy:\n          $ref: '#/components/schemas/TimeSeriesHierarchy'\n        error:\n          $ref: '#/components/schemas/TsiErrorBody'\n      description: Result of a batch operation on a particular time series hierarchy.\n        Hierarchy is set when operation is successful and error object is set when\n        operation is unsuccessful.\n    ModelSettingsResponse:\n      type: object\n      properties:\n        modelSettings:\n          $ref: '#/components/schemas/TimeSeriesModelSettings'\n      description: Response containing full time series model settings which include\n        model name, Time Series ID properties and default type ID.\n    TimeSeriesModelSettings:\n      type: object\n      properties:\n        name:\n          type: string\n          description: 'Time series model display name which is shown in the UX. Examples:\n            \"Temperature Sensors\", \"MyDevices\".'\n          readOnly: true\n        timeSeriesIdProperties:\n          $ref: '#/components/schemas/TimeSeriesIdProperties'\n        defaultTypeId:\n          type: string\n          description: Default type ID of the model that new time series instances\n            will automatically belong to.\n          readOnly: true\n      description: Time series model settings including model name, Time Series ID\n        properties and default type ID.\n    TimeSeriesIdProperties:\n      minItems: 1\n      type: array\n      description: Time series ID properties defined during environment creation.\n      items:\n        $ref: '#/components/schemas/TimeSeriesIdProperty'\n    TimeSeriesIdProperty:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the property.\n          readOnly: true\n        type:\n          type: string\n          description: The type of the property. Currently, only \"String\" is supported.\n          readOnly: true\n          enum:\n          - String\n          x-ms-enum:\n            name: TimeSeriesIdPropertyTypes\n            modelAsString: true\n      description: A definition of a single property that can be used in time series\n        ID properties defined during environment creation.\n    UpdateModelSettingsRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Model display name which is shown in the UX and mutable by\n            the user. Initial value is \"DefaultModel\".\n        defaultTypeId:\n          type: string\n          description: Default type id of the model that new instances will automatically\n            belong to.\n      description: Request to update model settings. One of \"name\" or \"defaultTypeId\"\n        must be set.\n    SearchInstancesRequest:\n      required:\n      - searchString\n      type: object\n      properties:\n        searchString:\n          type: string\n          description: 'Query search string that will be matched to the attributes\n            of time series instances. Example: \"floor 100\". Case-insensitive, must\n            be present, but can be empty string.'\n        path:\n          type: array\n          description: 'Filter on hierarchy path of time series instances. Path is\n            represented as array of string path segments. First element should be\n            hierarchy name. Example: [\"Location\", \"California\"]. Optional, case sensitive,\n            never empty and can be null.'\n          items:\n            type: string\n        instances:\n          $ref: '#/components/schemas/SearchInstancesParameters'\n        hierarchies:\n          $ref: '#/components/schemas/SearchInstancesHierarchiesParameters'\n      description: Request to execute a search query against time series instances\n        and return matching time series instances.\n    SearchInstancesParameters:\n      type: object\n      properties:\n        recursive:\n          type: boolean\n          description: Definition of which instances are returned. When recursive\n            is set to 'true', all instances that have the path that starts with path\n            the path parameter are returned. When recursive is set to 'false', only\n            instances that have the path that exactly matches the path parameter are\n            returned. Using recursive search allows to implement search user experience,\n            while using non-recursive search allows to implement navigation experience.\n            Optional, default is 'true'.\n        sort:\n          $ref: '#/components/schemas/InstancesSortParameter'\n        highlights:\n          type: boolean\n          description: Definition of highlighted search results or not. When it is\n            set to 'true', the highlighted search results are returned. When it is\n            set to 'false', the highlighted search results are not returned. Default\n            is 'true'.\n        pageSize:\n          type: integer\n          description: Maximum number of instances expected in each page of the result.\n            Defaults to 10 when not set. Ranges from 1 to 100. If there are results\n            beyond the page size, the user can use the continuation token to fetch\n            the next page.\n          format: int32\n      description: Parameters of how to return time series instances by search instances\n        call.\n    InstancesSortParameter:\n      type: object\n      properties:\n        by:\n          type: string\n          description: Value to use for sorting of the time series instances before\n            being returned by search instances call. When it is set to 'Rank', the\n            returned instances are sorted based on the relevance. When it is set to\n            'DisplayName', the returned results are sorted based on the display name.\n            Display name is the name of the instance if it exists, otherwise, display\n            name is the time series ID. Default is 'Rank'.\n          enum:\n          - Rank\n          - DisplayName\n          x-ms-enum:\n            name: InstancesSortBy\n            modelAsString: true\n      description: Definition of how time series instances are sorted before being\n        returned by search instances call.\n    SearchInstancesHierarchiesParameters:\n      type: object\n      properties:\n        expand:\n          $ref: '#/components/schemas/HierarchiesExpandParameter'\n        sort:\n          $ref: '#/components/schemas/HierarchiesSortParameter'\n        pageSize:\n          type: integer\n          description: Maximum number of hierarchies in the same level to return in\n            the same page. Optional, default is 10 when not set. Range is from 1 to\n            100. If there are results beyond the page size, the continuation token\n            can be used to fetch the next page.\n          format: int32\n      description: Parameter of how to return time series instance hierarchies by\n        search instances call.\n    HierarchiesExpandParameter:\n      type: object\n      properties:\n        kind:\n          type: string\n          description: Kind of the expansion of hierarchy nodes. When it is set to\n            'UntilChildren', the hierarchy nodes are expanded recursively until there\n            is more than one child. When it is set to 'OneLevel', the hierarchies\n            are expanded only at the single level matching path search instances parameter.\n            Optional, default is 'UntilChildren'.\n          enum:\n          - UntilChildren\n          - OneLevel\n          x-ms-enum:\n            name: HierarchiesExpandKind\n            modelAsString: true\n      description: Definition of whether to expand hierarchy nodes in the same search\n        instances call.\n    HierarchiesSortParameter:\n      type: object\n      properties:\n        by:\n          type: string\n          description: Value to use for hierarchy node sorting. When it is set to\n            'CumulativeInstanceCount', the returned hierarchies are sorted based on\n            the total instances belonging to the hierarchy node and its child hierarchy\n            nodes. When it is set to 'Name', the returned hierarchies are sorted based\n            on the hierarchy name. Optional, default is 'CumulativeInstanceCount'.\n          enum:\n          - CumulativeInstanceCount\n          - Name\n          x-ms-enum:\n            name: HierarchiesSortBy\n            modelAsString: true\n      description: Definition of sorting of hierarchy nodes.\n    SearchInstancesResponsePage:\n      type: object\n      properties:\n        instances:\n          $ref: '#/components/schemas/SearchInstancesResponse'\n        hierarchyNodes:\n          $ref: '#/components/schemas/SearchHierarchyNodesResponse'\n      description: Single page of the search results.\n    SearchInstancesResponse:\n      type: object\n      properties:\n        hits:\n          type: array\n          description: The list of instances matching the query based on the input.\n            May be empty.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/InstanceHit'\n        hitCount:\n          type: integer\n          description: Total number of instances matching the query based on the input.\n          format: int32\n          readOnly: true\n        continuationToken:\n          type: string\n          description: If returned, this means that current results represent a partial\n            result. Continuation token allows to get the next page of results. To\n            get the next page of query results, send the same request with continuation\n            token parameter in \"x-ms-continuation\" HTTP header.\n          readOnly: true\n      description: The instances matching the query based on the input. May be empty\n        or null.\n    SearchHierarchyNodesResponse:\n      type: object\n      properties:\n        hits:\n          type: array\n          description: The list of hierarchy nodes which contains the instances matching\n            the query based on the input. May be empty.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/HierarchyHit'\n        hitCount:\n          type: integer\n          description: Total number of hierarchy nodes which contains the instances\n            matching the query based on the input.\n          format: int32\n          readOnly: true\n        continuationToken:\n          type: string\n          description: If returned, this means that current results represent a partial\n            result. Continuation token allows to get the next page of results. To\n            get the next page of query results, send the same request with continuation\n            token parameter in \"x-ms-continuation\" HTTP header.\n          readOnly: true\n      description: The hierarchy nodes which contains the instances matching the query\n        based on the input. May be empty or null.\n    InstanceHit:\n      type: object\n      properties:\n        timeSeriesId:\n          $ref: '#/components/schemas/TimeSeriesId'\n        name:\n          type: string\n          description: Name of the time series instance that matched the search request.\n            May be null.\n          readOnly: true\n        typeId:\n          type: string\n          description: Represents the type that time series instance which matched\n            the search request belongs to. Never null.\n          readOnly: true\n        hierarchyIds:\n          type: array\n          description: List of time series hierarchy IDs that time series instance\n            which matched the search request belongs to. Cannot be used to lookup\n            hierarchies. May be null.\n          readOnly: true\n          items:\n            type: string\n        highlights:\n          type: object\n          properties:\n            timeSeriesId:\n              type: array\n              description: List of highlighted string values of Time Series ID for\n                displaying. Cannot be used to lookup instance.\n              readOnly: true\n              items:\n                type: string\n            typeName:\n              type: string\n              description: Highlighted time series type name that this instance belongs\n                to.\n              readOnly: true\n            name:\n              type: string\n              description: Highlighted name of time series instance. May be null.\n              readOnly: true\n            description:\n              type: string\n              description: Highlighted description of time series instance. May be\n                null.\n              readOnly: true\n            hierarchyIds:\n              type: array\n              description: List of highlighted time series hierarchy IDs that time\n                series instance belongs to. Cannot be used to lookup hierarchies.\n                May be null.\n              readOnly: true\n              items:\n                type: string\n            hierarchyNames:\n              type: array\n              description: List of highlighted time series hierarchy names that time\n                series instance belongs to. Cannot be used to lookup hierarchies.\n                May be null.\n              readOnly: true\n              items:\n                type: string\n            instanceFieldNames:\n              type: array\n              description: List of highlighted time series instance field names. May\n                be null.\n              readOnly: true\n              items:\n                type: string\n            instanceFieldValues:\n              type: array\n              description: List of highlighted time series instance field values.\n                May be null.\n              readOnly: true\n              items:\n                type: string\n          description: Highlighted text of time series instance to be displayed to\n            the user. Highlighting inserts \u003chit\u003e and \u003c/hit\u003e tags in the portions of\n            text that matched the search string. Do not use any of the highlighted\n            properties to do further API calls.\n          readOnly: true\n      description: Time series instance that is returned by instances search call.\n        Returned instance matched the search request and contains highlighted text\n        to be displayed to the user if it is set to 'true'.\n    HierarchyHit:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the hierarchy node. May be empty, cannot be null.\n          readOnly: true\n        cumulativeInstanceCount:\n          type: integer\n          description: Total number of instances that belong to this node and it's\n            subtrees matching the query.\n          format: int32\n          readOnly: true\n        hierarchyNodes:\n          $ref: '#/components/schemas/SearchHierarchyNodesResponse'\n      description: The hierarchy node which contains the instances matching the query\n        based on the input. May be empty or null.\n    InstancesSuggestRequest:\n      required:\n      - searchString\n      type: object\n      properties:\n        searchString:\n          type: string\n          description: Search string for which suggestions are required. Empty is\n            allowed, but not null.\n        take:\n          type: integer\n          description: Maximum number of suggestions expected in the result. Defaults\n            to 10 when not set.\n          format: int32\n      description: Request to get search string suggestions for time series instances\n        search based on prefix text.\n    InstancesSuggestResponse:\n      type: object\n      properties:\n        suggestions:\n          type: array\n          description: List of instance suggestions for searching time series models.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/InstancesSearchStringSuggestion'\n      description: Response of getting suggestions for search for time series instances.\n    InstancesSearchStringSuggestion:\n      type: object\n      properties:\n        searchString:\n          type: string\n          description: Suggested search string. Can be used for further search for\n            time series instances.\n          readOnly: true\n        highlightedSearchString:\n          type: string\n          description: Highlighted suggested search string to be displayed to the\n            user. Highlighting inserts \u003chit\u003e and \u003c/hit\u003e tags in the portions of text\n            that matched the search string. Do not use highlighted search string to\n            do further search calls.\n          readOnly: true\n      description: Suggested search string to be used for further search for time\n        series instances.\n    PagedResponse:\n      type: object\n      properties:\n        continuationToken:\n          type: string\n          description: If returned, this means that current results represent a partial\n            result. Continuation token allows to get the next page of results. To\n            get the next page of query results, send the same request with continuation\n            token parameter in \"x-ms-continuation\" HTTP header.\n          readOnly: true\n      description: Partial result that has continuation token to fetch the next partial\n        result.\n    EventProperty:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the property.\n        type:\n          $ref: '#/components/schemas/PropertyType'\n      description: Property of an event that is either stored or computed. Properties\n        are identified by both name and type. Different events can have properties\n        with same name, but different type.\n    PropertyType:\n      type: string\n      description: The type of the property that is either stored in events or computed\n        by a calculation.\n      enum:\n      - Bool\n      - DateTime\n      - Double\n      - String\n      - TimeSpan\n      - Long\n      x-ms-enum:\n        name: PropertyTypes\n        modelAsString: true\n    TsiError:\n      type: object\n      properties:\n        error:\n          $ref: '#/components/schemas/TsiErrorBody'\n      description: Information about an API error.\n      x-ms-external: false\n    TsiErrorBody:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Language-independent, human-readable string that defines a\n            service-specific error code. This code serves as a more specific indicator\n            for the HTTP error code specified in the response. Can be used to programmatically\n            handle specific error cases.\n          readOnly: true\n        message:\n          type: string\n          description: Human-readable, language-independent representation of the\n            error. It is intended as an aid to developers and is not suitable for\n            exposure to end users.\n          readOnly: true\n        target:\n          type: string\n          description: Target of the particular error (for example, the name of the\n            property in error). May be null.\n          readOnly: true\n        innerError:\n          $ref: '#/components/schemas/TsiErrorBody'\n        details:\n          type: array\n          description: Contains additional error information. May be null.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/TsiErrorDetails'\n      description: A particular API error with an error code and a message.\n      x-ms-external: false\n    TsiErrorDetails:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Language-independent, human-readable string that defines a\n            service-specific error code. This code serves as a more specific indicator\n            for the HTTP error code specified in the response. Can be used to programmatically\n            handle specific error cases.\n          readOnly: true\n        message:\n          type: string\n          description: Human-readable, language-independent representation of the\n            error. It is intended as an aid to developers and is not suitable for\n            exposure to end users.\n          readOnly: true\n      description: Additional error information.\n      x-ms-external: false\n  parameters:\n    ApiVersion:\n      name: api-version\n      in: query\n      description: Version of the API to be used with the client request. Currently\n        supported version is \"2020-07-31\".\n      required: true\n      schema:\n        type: string\n        default: 2020-07-31\n    StoreType:\n      name: storeType\n      in: query\n      description: For the environments with warm store enabled, the query can be\n        executed either on the 'WarmStore' or 'ColdStore'. This parameter in the query\n        defines which store the query should be executed on. If not defined, the query\n        will be executed on the cold store.\n      schema:\n        type: string\n        x-ms-parameter-location: method\n      x-ms-parameter-location: method\n    EnvironmentFqdn:\n      name: environmentFqdn\n      in: path\n      description: Per environment FQDN, for example 10000000-0000-0000-0000-100000000109.env.timeseries.azure.com.\n        You can obtain this domain name from the response of the Get Environments\n        API, Azure portal, or Azure Resource Manager.\n      required: true\n      schema:\n        type: string\n        x-ms-skip-url-encoding: true\n        x-ms-parameter-location: client\n      x-ms-skip-url-encoding: true\n      x-ms-parameter-location: client\n    ContinuationToken:\n      name: x-ms-continuation\n      in: header\n      description: Continuation token from previous page of results to retrieve the\n        next page of the results in calls that support pagination. To get the first\n        page results, specify null continuation token as parameter value. Returned\n        continuation token is null if all results have been returned, and there is\n        no next page of results.\n      schema:\n        type: string\n        x-ms-client-name: continuationToken\n        x-ms-parameter-location: method\n      x-ms-client-name: continuationToken\n      x-ms-parameter-location: method\n    ClientRequestId:\n      name: x-ms-client-request-id\n      in: header\n      description: Optional client request ID. Service records this value. Allows\n        the service to trace operation across services, and allows the customer to\n        contact support regarding a particular request.\n      schema:\n        type: string\n        x-ms-client-name: clientRequestId\n        x-ms-parameter-location: method\n      x-ms-client-name: clientRequestId\n      x-ms-parameter-location: method\n    ClientSessionId:\n      name: x-ms-client-session-id\n      in: header\n      description: Optional client session ID. Service records this value. Allows\n        the service to trace a group of related operations across services, and allows\n        the customer to contact support regarding a particular group of requests.\n      schema:\n        type: string\n        x-ms-client-name: clientSessionId\n        x-ms-parameter-location: method\n      x-ms-client-name: clientSessionId\n      x-ms-parameter-location: method\n  securitySchemes:\n    azure_auth:\n      type: oauth2\n      description: Azure Active Directory OAuth2 Flow\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n# x-ms-parameterized-host:\n#   hostTemplate: '{environmentFqdn}'\n#   useSchemePrefix: true\n#   positionInOperation: first\n#   parameters:\n#   - $ref: '#/parameters/EnvironmentFqdn'\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/azure.timeseries/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/azure.timeseries/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/timeseries/types\": get: security: security \"azure_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}