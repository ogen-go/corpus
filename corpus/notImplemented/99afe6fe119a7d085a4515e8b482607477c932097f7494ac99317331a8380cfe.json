{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/FraunhoferISST/diva"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "core/services/search-assistant/apiDoc/openapi.yml",
			"byteSize": 5966,
			"content": "openapi: 3.0.0\ninfo:\n  description: \"Search Assistant is responsible for providing predefined search APIs against an Elasticsearch instance\"\n  version: 1.0.0\n  title: Search Assistant API\nservers:\n  - url: http://localhost:3005\ntags:\n  - name: search\n    description: Search requests\n\npaths:\n  /search:\n    parameters:\n      - $ref: \"#/components/parameters/actoridParam\"\n    get:\n      tags:\n        - search\n      summary: Global search over all Elasticsearch Indices\n      description: Send a query term in URL parameter `q` and get a result set in return. The search response contains\n        a `collection` array that can contain any known entity like resource, asset or user. To fetch the next page you can use a `cursor`\n        that is included in the response if there is a next page.\n      operationId: searchAll\n      parameters:\n        - name: q\n          in: query\n          description: Search term\n          example: \"Cancer Data\"\n          required: false\n          explode: false\n          allowReserved: true\n          schema:\n            type: string\n            minLength: 0\n        - name: pageSize\n          in: query\n          description: Number of results to be returned\n          example: 30\n          required: false\n          explode: false\n          allowReserved: true\n          schema:\n            type: integer   \n        - name: cursor\n          in: query\n          description: Cursor for next result set\n          example: \"eyJxdWVyeSI6InJlc291cmNlOnV1aWQ6NTc1NjlkMDUtZmM3YS00NTc0LWFkZTAtYmQ1ZTNiMTk0N2M4IiwiZnJvbSI6MzAsInNpemUiOjMwfQ==\"\n          required: false\n          explode: false\n          allowReserved: true\n          schema:\n            type: string\n        - name: facets\n          in: query\n          description: Facets for current query\n          example: \"entityType,keywords\"\n          required: false\n          explode: true\n          allowReserved: true\n          schema:\n            type: string\n        - name: facetsOperator\n          in: query\n          description: Facets Operator for current query (default \"and\")\n          example: \"and\"\n          required: false\n          explode: false\n          allowReserved: true\n          schema:\n            type: string\n            enum:\n              - \"must\"\n              - \"should\"\n              - \"mustNot\"\n        - name: sortBy\n          in: query\n          description: Defines the field to sort by\n          example: \"modifiedAt\"\n          required: false\n          explode: false\n          allowReserved: true\n          schema:\n            type: string\n            enum:\n              - \"modifiedAt\"\n              - \"createdAt\"\n              - \"_score\"\n        # required undocumented filter parameters (entityType=resource...)\n        - in: query\n          name: filters\n          schema:\n            type: object\n            additionalProperties:\n              type: string\n          style: form\n          explode: true\n      responses:\n        \"200\":\n          description: Search result\n          content:\n            application/json:\n              schema:\n                type: object\n                title: Searh result\n                description: Search result contains the collection of fond items and cursor for the next page\n                properties:\n                  collection:\n                    description: Results array\n                    type: array\n                    items:\n                      type: object\n                      required:\n                        - doc\n                      properties:\n                        doc:\n                          title: Matching Document\n                          description: A matching document that represents found entity\n                          type: object\n                        highlight:\n                          title: Highlight\n                          description: Highlight properties that qualifies the resources for the search query\n                          type: object\n                  cursor:\n                    description: Cursor for the next page\n                    type: string\n                    example: \"eyJxdWVyeSI6InJlc291cmNlOnV1aWQ6NTc1NjlkMDUtZmM3YS00NTc0LWFkZTAtYmQ1ZTNiMTk0N2M4IiwiZnJvbSI6MzAsInNpemUiOjMwfQ==\"\n\n        \"4XX\":\n          $ref: \"#/components/responses/UnexpectedError\"\n        \"5XX\":\n          $ref: \"#/components/responses/UnexpectedError\"\n    \ncomponents:\n\n  schemas:\n    Error:\n      type: object\n      title: Operation error\n      description: Error that can occure on request processing\n      required:\n        - type\n        - message\n        - code\n      properties:\n        type:\n          title: Error type\n          description: Futher error type information\n          type: string\n        message:\n          title: Error message\n          description: Details about error\n          type: string\n        code:\n          title: Error code\n          description: HTTP error code\n          type: number\n          format: int32\n          example: 409\n        errors:\n          title: Errors\n          description: More error details that are reference in most case specification or schema validation errors\n          type: array\n          items:\n            type: object\n\n  responses:\n    Success:\n      description: Succesful\n    UnexpectedError:\n      description: Internal error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    InvalidDataError:\n      description: Invalid data supplied\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    \n  parameters:\n    actoridParam:\n      in: header\n      description: The id of the origin that requests the API. Can be a user or service.\n      name: x-actorid\n      schema:\n        type: string\n        minLength: 1\n        pattern: \"^(user|service):uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$\"\n      required: true\n",
			"canonicalURL": "/github.com/FraunhoferISST/diva@67fac716105e2a805c392529c3b5b14d59dd3773/-/blob/core/services/search-assistant/apiDoc/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/FraunhoferISST/diva/blob/67fac716105e2a805c392529c3b5b14d59dd3773/core/services/search-assistant/apiDoc/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: \"filters\": object with additionalProperties not implemented",
	"NotImplemented": [
		"HTTP code pattern",
		"object with additionalProperties"
	]
}