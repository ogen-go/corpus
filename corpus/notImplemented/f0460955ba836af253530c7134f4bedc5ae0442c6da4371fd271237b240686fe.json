{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/portfoliooptimizer.io/1.0.9/openapi.yaml",
			"byteSize": 214963,
			"content": "openapi: 3.0.1\nservers:\n  - url: https://api.portfoliooptimizer.io/v1\n  - url: https://eu-west-1.api.portfoliooptimizer.io/v1\ninfo:\n  contact:\n    email: contact@portfoliooptimizer.io\n    name: Support\n    url: https://portfoliooptimizer.io/\n  description: |\n    Portfolio Optimizer is a [Web API](https://en.wikipedia.org/wiki/Web_API) to optimize the composition of investment portfolios (collection of financial assets such as stocks, bonds, ETFs, crypto-currencies) using modern portfolio theory-like algorithms (mean-variance, etc.).\n\n    # API General Information\n\n    Portfolio Optimizer is based on [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) for easy integration, uses [JSON](https://en.wikipedia.org/wiki/JSON) for the exchange of data and uses the two most common [HTTP verbs](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods) (`GET`, `POST`) to represent the actions.\n\n    Portfolio Optimizer is also as secured as a Web API could be: \n    * [256-bit HTTPS Encryption](https://en.wikipedia.org/wiki/HTTPS)\n    * No usage of cookies\n    * No usage of personal data  \n\n    ## API Headers \n    The following HTTP header(s) are required when calling Portfolio Optimizer endpoints:\n    * `Content-type: application/json`  \n      This header specifies that the data provided in input to the endpoint is in JSON format\n\n    The following HTTP header(s) are optional when calling Portfolio Optimizer endpoints:\n    * `X-API-Key: \u003cprivate API key\u003e`  \n      This header enables [authenticated users](#auth) to provide their private [API key](#overview--api-key) in order to [benefit from higher API limits](#overview--api-limits)\n\n    ## API Key\n    Portfolio Optimizer is free to use, but not free to run.\n\n    In order to obtain an API key and benefit from [higher API limits](#overview--api-limits), a *small* participation to Portfolio Optimizer running costs is required.\n\n    This participation takes the form of coffee(s), with one coffee = one month of usage.\n\n    \u003cp\u003e\u003ca href=\"https://www.buymeacoffee.com/portfolioopt\"\u003e\u003cimg alt='Buy a Coffee at buymeacoffee.com' src=\"https://img.buymeacoffee.com/button-api/?text=Buymeacoffee.com\u0026emoji=\u0026slug=portfolioopt\u0026button_colour=000000\u0026font_colour=ffffff\u0026font_family=Cookie\u0026outline_colour=ffffff\u0026coffee_colour=FFDD00\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\n    \u003e **Notes:** \n    \u003e * Please make sure not to expose your API key publicly!\n\n    ## API Limits \n\n    Portfolio Optimizer comes with *fairly reasonable* API limits.\n\n    For anonymous users:  \n    * The API requests are restricted to a subset of all the available endpoints and/or endpoints features  \n    * The API requests are limited to 1 request per second for all the anonymous users combined, with concurrent requests rejected \n    * The API requests are limited to 1 second of execution time\n    * The API requests are limited to 20 assets, 100 portfolios, 500 series data points and 5 factors\n\n    For authenticated users with an [API key](#overview--api-key):  \n    * The API requests have access to all the available endpoints and endpoints features\n    * The API requests are limited to 10000 requests per 24 hour per API key, with concurrent requests queued\n    * The API requests are limited to 2.5 seconds of execution time\n    * The API requests are limited to 100 assets, 500 portfolios, 2500 series data points and 25 factors\n\n    \u003e **Notes:** \n    \u003e * It is possible to further relax the API limits, or to disable the API limits alltogether; please [contact the support](https://portfoliooptimizer.io/contact/) for more details.\n    \u003e * Information on the API rate limits are provided in response messages HTTP headers `x-ratelimit-*`:  \n    \u003e   * `x-ratelimit-limit-second`, the limit on the number of API requests per second\n    \u003e   * `x-ratelimit-remaining-second`, the number of remaining API requests in the current second    \n    \u003e   * `x-ratelimit-limit-minute`, the limit on the number of API requests per minute\n    \u003e   * ...\n\n    ## API Regions\n    Portfolio Optimizer servers are located in Western Europe.\n\n    \u003e **Notes:** \n    \u003e * It is possible to deploy Portfolio Optimizer in other geographical regions, for example to improve the API latency; please [contact the support](https://portfoliooptimizer.io/contact/) for more details. \n\n    ## API Response Codes       \n\n    Standard [HTTP response codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) are used by Portfolio Optimizer to provide details on the status of API requests.\n\n    | HTTP Code | Description | Notes |\n    | --------- | ----------- | ----- |\n    | 200 | Request successfully processed | - |\n    | 400 | Request failed to be processed because of incorrect content | The response message body contains information on the incorrect content |\n    | 401 | Request failed to be processed because of invalid API key | - |\n    | 404 | Request failed to be processed because of non existing endpoint | The requested endpoint might exist, but needs to be accessed with another HTTP method (e.g., `POST` instead of `GET`) |\n    | 429 | Request failed to be processed because of API limits violated | The response message HTTP headers `x-ratelimit-*` contain information on the [API limits](#overview--api-limits) |\n    | 500 | Request failed to be processed because of an internal error | Something went wrong on Portfolio Optimizer side, do not hesitate to [report the issue](#overview--support) |\n    | 502 | Request failed to be processed because of a temporary connectivity error | Something went wrong on Portfolio Optimizer side, please check the [API status](#overview--api-status) and do not hesitate to [report the issue](#overview--support) |\n\n    ## API Status  \n\n    Portfolio Optimizer is monitored 24/7 by [UptimeRobot](https://stats.uptimerobot.com/wgW71SL1AW).\n\n    # Support\n\n    For any issue or question about Portfolio Optimizer, please do not hesitate to [contact the support](https://portfoliooptimizer.io/contact/).\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  termsOfService: https://portfoliooptimizer.io/terms-of-service\n  title: Portfolio Optimizer\n  version: 1.0.9\n  x-apisguru-categories:\n    - financial\n  x-logo:\n    url: https://portfoliooptimizer.io/assets/images/88x88.png\n  x-origin:\n    - format: openapi\n      url: https://docs.portfoliooptimizer.io/openapi/portfoliooptimizer.yaml\n      version: \"3.0\"\n  x-providerName: portfoliooptimizer.io\nexternalDocs:\n  description: External documentation\n  url: https://docs.portfoliooptimizer.io/\nsecurity:\n  - ApiKeyAuth: []\ntags:\n  - name: Assets Correlation Matrix\n  - name: Assets Covariance Matrix\n  - name: Assets Returns\n  - name: Assets Variance\n  - name: Assets Volatility\n  - name: Factors\n  - name: Portfolio Analysis\n  - name: Portfolio Construction\n  - name: Portfolio Generation\n  - name: Portfolio Optimization\npaths:\n  /assets/correlation/matrix:\n    post:\n      description: |\n        Compute the Pearson correlation matrix of assets from either:  \n        * The assets returns\n        * The assets covariance matrix\n\n        References\n        * [Wikipedia, Correlation and Dependence](https://en.wikipedia.org/wiki/Correlation_and_dependence#Correlation_matrices)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              From covariance matrix:\n                description: Computes the correlation matrix of 2 assets based on their covariance matrix\n                value:\n                  assets: 2\n                  assetsCovarianceMatrix:\n                    - - 0.01\n                      - -0.0025\n                    - - -0.0025\n                      - 0.0025\n              From returns:\n                description: Computes the correlation matrix of 2 assets based on 4 returns per asset\n                value:\n                  assets:\n                    - assetReturns:\n                        - 0.01\n                        - 0\n                        - 0.02\n                        - -0.03\n                    - assetReturns:\n                        - 0.01\n                        - 0\n                        - 0.02\n                        - -0.03\n            schema:\n              oneOf:\n                - properties:\n                    assets:\n                      items:\n                        properties:\n                          assetReturns:\n                            description: assetReturns[t] is the return of the asset at the time t, in percentage; all the assetReturns arrays must have the same length\n                            items:\n                              type: number\n                            minItems: 2\n                            type: array\n                        required:\n                          - assetReturns\n                        type: object\n                      minItems: 2\n                      type: array\n                  required:\n                    - assets\n                  type: object\n                - properties:\n                    assets:\n                      description: The number of assets\n                      minimum: 2\n                      type: integer\n                    assetsCovarianceMatrix:\n                      description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 2\n                      type: array\n                  required:\n                    - assets\n                    - assetsCovarianceMatrix\n                  type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed correlation matrix\n                  value:\n                    assetsCorrelationMatrix:\n                      - - 1\n                        - 0.5\n                      - - 0.5\n                        - 1\n              schema:\n                properties:\n                  assetsCorrelationMatrix:\n                    description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j\n                    items:\n                      items:\n                        type: number\n                      minItems: 2\n                      type: array\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsCorrelationMatrix\n                type: object\n          description: OK\n      summary: Correlation Matrix\n      tags:\n        - Assets Correlation Matrix\n      x-codegen-request-body-name: body\n  /assets/correlation/matrix/nearest:\n    post:\n      description: |\n        Compute the _closest_ correlation matrix to an approximate assets correlation matrix, optionally keeping a selected number of correlations fixed, _closest_ being defined in terms of [the Frobenius norm](https://en.wikipedia.org/wiki/Matrix_norm#Frobenius_norm).\n\n        References\n        * [Nicholas J. Higham, Computing the Nearest Correlation Matrix—A Problem from Finance, IMA J. Numer. Anal. 22, 329–343, 2002.](http://www.maths.manchester.ac.uk/~higham/narep/narep369.pdf)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Nearest correlation matrix:\n                description: Compute the nearest correlation matrix to an approximate correlation matrix\n                value:\n                  assets: 3\n                  assetsApproximateCorrelationMatrix:\n                    - - 1\n                      - 1\n                      - 0\n                    - - 1\n                      - 1\n                      - 1\n                    - - 0\n                      - 1\n                      - 1\n              Nearest correlation matrix with fixed a correlation:\n                description: Compute the nearest correlation matrix to an approximate correlation matrix, keeping one correlation coefficient fixed\n                value:\n                  assets: 3\n                  assetsApproximateCorrelationMatrix:\n                    - - 1\n                      - 0.5\n                      - 0.9\n                    - - 0.5\n                      - 1\n                      - -0.2\n                    - - 0.9\n                      - -0.2\n                      - 1\n                  assetsFixedCorrelations:\n                    - - 2\n                      - 3\n            schema:\n              properties:\n                assets:\n                  minimum: 2\n                  type: integer\n                assetsApproximateCorrelationMatrix:\n                  description: assetsApproximateCorrelationMatrix[i][i] is the approximate correlation between the asset i and the asset j\n                  items:\n                    items:\n                      type: number\n                    minItems: 2\n                    type: array\n                  minItems: 2\n                  type: array\n                assetsFixedCorrelations:\n                  description: assetsFixedCorrelations[k] is the couple of indices (i,j) of the assets i and j for which to keep the approximate correlation assetsApproximateCorrelationMatrix[i][j] fixed\n                  items:\n                    items:\n                      type: integer\n                    maxItems: 2\n                    minItems: 2\n                    type: array\n                  type: array\n              required:\n                - assets\n                - assetsApproximateCorrelationMatrix\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Nearest correlation matrix:\n                  description: Computed nearest correlation matrix\n                  value:\n                    assetsCorrelationMatrix:\n                      - - 1\n                        - 0.7606306078350177\n                        - 0.15733356650676536\n                      - - 0.7606306078350177\n                        - 1\n                        - 0.7606306078350177\n                      - - 0.15733356650676536\n                        - 0.7606306078350177\n                        - 1\n                Nearest correlation matrix with fixed a correlation:\n                  description: Computed nearest correlation matrix keeping one correlation coefficient fixed\n                  value:\n                    assetsCorrelationMatrix:\n                      - - 1\n                        - 0.4314569968899409\n                        - 0.7974943959465133\n                      - - 0.4314569968899409\n                        - 1\n                        - -0.2\n                      - - 0.7974943959465133\n                        - -0.2\n                        - 1\n              schema:\n                properties:\n                  assetsCorrelationMatrix:\n                    description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j\n                    items:\n                      items:\n                        type: number\n                      minItems: 2\n                      type: array\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsCorrelationMatrix\n                type: object\n          description: OK\n      summary: Nearest Correlation Matrix\n      tags:\n        - Assets Correlation Matrix\n      x-codegen-request-body-name: body\n  /assets/correlation/matrix/shrinkage:\n    post:\n      description: |\n        Compute a correlation matrix as a weighted average of an assets correlation matrix and a target correlation matrix, the target correlation matrix being either:  \n        * An equicorrelation matrix made of 1\n        * An equicorrelation matrix made of 0\n        * An equicorrelation matrix made of -1/(n-1), with n the number of assets\n        * A provided correlation matrix\n\n        References\n        * [Steiner, Andreas, Manipulating Valid Correlation Matrices](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1878165)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Shrinkage toward a provided correlation matrix:\n                description: Shrinkage toward a provided correlation matrix, here the identity matrix\n                value:\n                  assets: 3\n                  assetsCorrelationMatrix:\n                    - - 1\n                      - 0.5\n                      - 0.9\n                    - - 0.5\n                      - 1\n                      - 0.7\n                    - - 0.9\n                      - 0.7\n                      - 1\n                  shrinkageFactor: 0.5\n                  shrinkageTargetCorrelationMatrix:\n                    - - 1\n                      - 0\n                      - 0\n                    - - 0\n                      - 1\n                      - 0\n                    - - 0\n                      - 0\n                      - 1\n              Shrinkage toward an equicorrelation matrix:\n                description: Shrinkage toward the equicorrelation matrix made of 1\n                value:\n                  assets: 3\n                  assetsCorrelationMatrix:\n                    - - 1\n                      - 0.5\n                      - 0.9\n                    - - 0.5\n                      - 1\n                      - 0.7\n                    - - 0.9\n                      - 0.7\n                      - 1\n                  shrinkageFactor: 0.5\n                  shrinkageTarget: maximumEquicorrelationMatrix\n            schema:\n              oneOf:\n                - properties:\n                    assets:\n                      minimum: 2\n                      type: integer\n                    assetsCorrelationMatrix:\n                      description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 2\n                      type: array\n                    shrinkageFactor:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    shrinkageTarget:\n                      enum:\n                        - minimumEquicorrelationMatrix\n                        - zeroEquicorrelationMatrix\n                        - maximumEquicorrelationMatrix\n                      type: string\n                  required:\n                    - assets\n                    - assetsCorrelationMatrix\n                    - shrinkageTarget\n                    - shrinkageFactor\n                  type: object\n                - properties:\n                    assets:\n                      minimum: 2\n                      type: integer\n                    assetsCorrelationMatrix:\n                      description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 2\n                      type: array\n                    shrinkageFactor:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    shrinkageTargetCorrelationMatrix:\n                      description: shrinkageTargetCorrelationMatrix[i][j] is the target correlation between the asset i and the asset j\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 2\n                      type: array\n                  required:\n                    - assets\n                    - assetsCorrelationMatrix\n                    - shrinkageTargetCorrelationMatrix\n                    - shrinkageFactor\n                  type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Shrinkage:\n                  description: Shrunk correlation matrix\n                  value:\n                    assetsCorrelationMatrix:\n                      - - 1\n                        - 0.75\n                        - 0.95\n                      - - 0.75\n                        - 1\n                        - 0.85\n                      - - 0.95\n                        - 0.85\n                        - 1\n              schema:\n                properties:\n                  assetsCorrelationMatrix:\n                    description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j\n                    items:\n                      items:\n                        type: number\n                      minItems: 2\n                      type: array\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsCorrelationMatrix\n                type: object\n          description: OK\n      summary: Correlation Matrix Shrinkage\n      tags:\n        - Assets Correlation Matrix\n      x-codegen-request-body-name: body\n  /assets/correlation/matrix/validation:\n    post:\n      description: |\n        Validate whether a matrix is a correlation matrix.\n\n        References\n        * [Wikipedia, Correlation and Dependence](https://en.wikipedia.org/wiki/Correlation_and_dependence#Correlation_matrices)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Validate whether the provided matrix is a correlation matrix\n                value:\n                  assets: 2\n                  assetsCorrelationMatrix:\n                    - - 1\n                      - -0.00035\n                    - - -0.00035\n                      - 1\n            schema:\n              properties:\n                assets:\n                  minimum: 2\n                  type: integer\n                assetsCorrelationMatrix:\n                  description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j\n                  items:\n                    items:\n                      type: number\n                    minItems: 2\n                    type: array\n                  minItems: 2\n                  type: array\n              required:\n                - assets\n                - assetsCorrelationMatrix\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Valid correlation matrix\n                  value:\n                    message: valid correlation matrix\n              schema:\n                properties:\n                  message:\n                    description: Indicates whether the matrix is a valid correlation matrix\n                    enum:\n                      - valid correlation matrix\n                      - invalid correlation matrix - non symmetric matrix\n                      - invalid correlation matrix - non positive diagonal elements\n                      - invalid correlation matrix - non positive semi-definite matrix\n                    type: string\n                required:\n                  - message\n                type: object\n          description: OK\n      summary: Correlation Matrix Validation\n      tags:\n        - Assets Correlation Matrix\n      x-codegen-request-body-name: body\n  /assets/covariance/matrix:\n    post:\n      description: |\n        Compute the covariance matrix of assets from either:  \n        * The assets correlation matrix and their volatilities (i.e., standard deviations)\n        * The assets correlation matrix and their variances\n        * The assets returns\n\n        References\n        * [Wikipedia, Covariance Matrix](https://en.wikipedia.org/wiki/Covariance_matrix)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              From assets correlation matrix and standard deviations:\n                description: Compute the covariance matrix of 2 assets based on their correlation matrix and their standard deviations\n                value:\n                  assets: 2\n                  assetsCorrelationMatrix:\n                    - - 1\n                      - -0.5\n                    - - -0.5\n                      - 1\n                  assetsVolatilities:\n                    - 0.1\n                    - 0.05\n              From assets correlation matrix and variances:\n                description: Compute the covariance matrix of 2 assets based on their correlation matrix and their variances\n                value:\n                  assets: 2\n                  assetsCorrelationMatrix:\n                    - - 1\n                      - -0.5\n                    - - -0.5\n                      - 1\n                  assetsVariances:\n                    - 0.01\n                    - 0.0025\n              From assets returns:\n                description: Compute the covariance matrix of 2 assets based on 4 returns per asset\n                value:\n                  assets:\n                    - assetReturns:\n                        - 0.01\n                        - 0\n                        - 0.02\n                        - -0.03\n                    - assetReturns:\n                        - 0.01\n                        - 0\n                        - 0.02\n                        - -0.03\n            schema:\n              oneOf:\n                - properties:\n                    assets:\n                      items:\n                        properties:\n                          assetReturns:\n                            description: assetReturns[t] is the return of the asset at the time t, in percentage; all the assetReturns arrays must have the same length\n                            items:\n                              type: number\n                            minItems: 2\n                            type: array\n                        required:\n                          - assetReturns\n                        type: object\n                      minItems: 2\n                      type: array\n                  required:\n                    - assets\n                  type: object\n                - properties:\n                    assets:\n                      description: The number of assets\n                      minimum: 2\n                      type: integer\n                    assetsCorrelationMatrix:\n                      description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 2\n                      type: array\n                    assetsVariances:\n                      description: assetsVariances[i] is the variance of the asset i\n                      items:\n                        minimum: 0\n                        type: number\n                      minItems: 2\n                      type: array\n                  required:\n                    - assets\n                    - assetsCorrelationMatrix\n                    - assetsVariances\n                  type: object\n                - properties:\n                    assets:\n                      description: The number of assets\n                      minimum: 2\n                      type: integer\n                    assetsCorrelationMatrix:\n                      description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 2\n                      type: array\n                    assetsVolatilities:\n                      description: assetsVolatilities[i] is the volatility of the asset i\n                      items:\n                        minimum: 0\n                        type: number\n                      minItems: 2\n                      type: array\n                  required:\n                    - assets\n                    - assetsCorrelationMatrix\n                    - assetsVolatilities\n                  type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                From correlation matrix and standard deviations:\n                  description: Computed covariance matrix\n                  value:\n                    assetsCovarianceMatrix:\n                      - - 0.010000000000000002\n                        - -0.0025000000000000005\n                      - - -0.0025000000000000005\n                        - 0.0025000000000000005\n                From correlation matrix and variances:\n                  description: Computed covariance matrix\n                  value:\n                    assetsCovarianceMatrix:\n                      - - 0.010000000000000002\n                        - -0.0025000000000000005\n                      - - -0.0025000000000000005\n                        - 0.0025000000000000005\n                From returns:\n                  description: Computed covariance matrix\n                  value:\n                    assetsCovarianceMatrix:\n                      - - 0.00035\n                        - 0.00035\n                      - - 0.00035\n                        - 0.00035\n              schema:\n                properties:\n                  assetsCovarianceMatrix:\n                    description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                    items:\n                      items:\n                        type: number\n                      minItems: 2\n                      type: array\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsCovarianceMatrix\n                type: object\n          description: OK\n      summary: Covariance Matrix\n      tags:\n        - Assets Covariance Matrix\n      x-codegen-request-body-name: body\n  /assets/covariance/matrix/sample:\n    post:\n      description: |\n        Compute the sample covariance matrix of assets returns.\n\n        \u003e This endpoint is similar to the endpoint [`/assets/covariance/matrix`](#post-/assets/covariance/matrix), but uses [Bessel's correction](https://en.wikipedia.org/wiki/Bessel%27s_correction) to compute the covariance matrix.\n\n        References\n        * [Wikipedia, Sample Mean and Covariance](https://en.wikipedia.org/wiki/Sample_mean_and_covariance)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Computes the sample covariance matrix of 2 assets based on 4 returns per asset\n                value:\n                  assets:\n                    - assetReturns:\n                        - 0.01\n                        - 0.01\n                        - 0.02\n                        - 0.01\n                    - assetReturns:\n                        - -0.02\n                        - -0.02\n                        - -0.04\n                        - -0.02\n            schema:\n              properties:\n                assets:\n                  items:\n                    properties:\n                      assetReturns:\n                        description: assetReturns[t] is the return of the asset at the time t, in percentage; all the assetReturns arrays must have the same length\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                    required:\n                      - assetReturns\n                    type: object\n                  minItems: 2\n                  type: array\n              required:\n                - assets\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed sample covariance matrix\n                  value:\n                    assetsCovarianceMatrix:\n                      - - 0.000025\n                        - -0.00005\n                      - - -0.00005\n                        - 0.0001\n              schema:\n                properties:\n                  assetsCovarianceMatrix:\n                    description: assetsCovarianceMatrix[i][j] is the sample covariance between the asset i returns and the asset j returns\n                    items:\n                      items:\n                        type: number\n                      minItems: 2\n                      type: array\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsCovarianceMatrix\n                type: object\n          description: OK\n      summary: Sample Covariance Matrix\n      tags:\n        - Assets Covariance Matrix\n      x-codegen-request-body-name: body\n  /assets/covariance/matrix/validation:\n    post:\n      description: |\n        Validate whether a matrix is a covariance matrix.\n\n        References\n        * [Wikipedia, Covariance Matrix](https://en.wikipedia.org/wiki/Covariance_matrix)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Validate whether the provided matrix is a covariance matrix\n                value:\n                  assets: 2\n                  assetsCovarianceMatrix:\n                    - - 0.00035\n                      - -0.00035\n                    - - -0.00035\n                      - 0.00035\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n                assetsCovarianceMatrix:\n                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                  items:\n                    items:\n                      type: number\n                    minItems: 2\n                    type: array\n                  minItems: 2\n                  type: array\n              required:\n                - assets\n                - assetsCovarianceMatrix\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Valid covariance matrix\n                  value:\n                    message: valid covariance matrix\n              schema:\n                properties:\n                  message:\n                    description: Indicates whether the matrix is a valid covariance matrix\n                    enum:\n                      - valid covariance matrix\n                      - invalid covariance matrix - non symmetric matrix\n                      - invalid covariance matrix - non positive diagonal elements\n                      - invalid covariance matrix - non positive semi-definite matrix\n                    type: string\n                required:\n                  - message\n                type: object\n          description: OK\n      summary: Covariance Matrix Validation\n      tags:\n        - Assets Covariance Matrix\n      x-codegen-request-body-name: body\n  /assets/returns:\n    post:\n      description: |\n        Compute the arithmetic return(s) of one or several asset(s) for one or several time period(s).\n\n        References\n        * [Wikipedia, Rate of Return](https://en.wikipedia.org/wiki/Rate_of_return#Return)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the arithmetic returns of 2 assets, one with prices 1,2 and the other with prices 2,3,6\n                value:\n                  assets:\n                    - assetPrices:\n                        - 1\n                        - 2\n                    - assetPrices:\n                        - 2\n                        - 3\n                        - 6\n            schema:\n              properties:\n                assets:\n                  items:\n                    properties:\n                      assetPrices:\n                        description: assetPrices[t] is the price of the asset at the time t\n                        items:\n                          exclusiveMinimum: true\n                          minimum: 0\n                          type: number\n                        minItems: 2\n                        type: array\n                    required:\n                      - assetPrices\n                    type: object\n                  minItems: 1\n                  type: array\n              required:\n                - assets\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed an arithmetic return of 100% for the first asset and arithmetic returns of respectively 50% and 100% for the second asset\n                  value:\n                    assets:\n                      - assetReturns:\n                          - 1\n                      - assetReturns:\n                          - 0.5\n                          - 1\n              schema:\n                properties:\n                  assets:\n                    items:\n                      properties:\n                        assetReturns:\n                          description: assetReturns[t] is the arithmetic return of the asset from the time t-1 to the time t, in percentage\n                          items:\n                            type: number\n                          type: array\n                      required:\n                        - assetReturns\n                      type: object\n                    type: array\n                required:\n                  - assets\n                type: object\n          description: OK\n      summary: Arithmetic Returns\n      tags:\n        - Assets Returns\n      x-codegen-request-body-name: body\n  /assets/returns/average:\n    post:\n      description: |\n        Compute the arithmetic average of the return(s) of one or several asset(s).\n\n        References\n        * [Wikipedia, Arithmetic Average Rate of Return](https://en.wikipedia.org/wiki/Rate_of_return#Arithmetic_average_rate_of_return)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the arithmetic average return of 2 assets, one with returns 10%, -5% and the other with returns 0%,-1%,1%\n                value:\n                  assets:\n                    - assetReturns:\n                        - 0.1\n                        - -0.05\n                    - assetReturns:\n                        - 0\n                        - -0.01\n                        - 0.01\n            schema:\n              properties:\n                assets:\n                  items:\n                    properties:\n                      assetReturns:\n                        description: assetReturns[t] is the return of the asset at the time t, in percentage\n                        items:\n                          type: number\n                        minItems: 1\n                        type: array\n                    required:\n                      - assetReturns\n                    type: object\n                  minItems: 1\n                  type: array\n              required:\n                - assets\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed average arithmetic return of 2.5% for the first asset, and average arithmetic return of 0% for the second asset\n                  value:\n                    assets:\n                      - assetAverageReturn: 0.025\n                      - assetAverageReturn: 0\n              schema:\n                properties:\n                  assets:\n                    items:\n                      properties:\n                        assetAverageReturn:\n                          description: The arithmetic average return of the asset\n                          type: number\n                      required:\n                        - assetAverageReturn\n                      type: object\n                    type: array\n                required:\n                  - assets\n                type: object\n          description: OK\n      summary: Arithmetic Average Return\n      tags:\n        - Assets Returns\n      x-codegen-request-body-name: body\n  /assets/variance:\n    post:\n      description: |\n        Compute the variance of one or several asset(s) from either:  \n        * The asset(s) returns\n        * The assets covariance matrix\n        * The asset(s) volatility\n\n        References\n        * [Wikipedia, Variance](https://en.wikipedia.org/wiki/Variance)        \n      requestBody:\n        content:\n          application/json:\n            examples:\n              From assets covariance matrix:\n                description: Compute the variance of 2 assets based on their covariance matrix\n                value:\n                  assets: 2\n                  assetsCovarianceMatrix:\n                    - - 0.01\n                      - -0.0025\n                    - - -0.0025\n                      - 0.0025\n              From assets returns:\n                description: Compute the variance of 2 assets based on 4 returns per asset\n                value:\n                  assets:\n                    - assetReturns:\n                        - 0.01\n                        - 0\n                        - 0.02\n                        - -0.03\n                    - assetReturns:\n                        - 0.01\n                        - 0\n                        - 0.02\n                        - -0.03\n              From assets volatility:\n                description: Compute the variance of 2 assets based on their volatility\n                value:\n                  assets:\n                    - assetVolatility: 1\n                    - assetVolatility: 0.05\n            schema:\n              oneOf:\n                - properties:\n                    assets:\n                      items:\n                        properties:\n                          assetReturns:\n                            description: assetReturns[t] is the return of the asset at the time t, in percentage\n                            items:\n                              type: number\n                            minItems: 2\n                            type: array\n                        required:\n                          - assetReturns\n                        type: object\n                      minItems: 1\n                      type: array\n                  required:\n                    - assets\n                  type: object\n                - properties:\n                    assets:\n                      description: The number of assets\n                      minimum: 2\n                      type: integer\n                    assetsCovarianceMatrix:\n                      description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 2\n                      type: array\n                  required:\n                    - assets\n                    - assetsCovarianceMatrix\n                  type: object\n                - properties:\n                    assets:\n                      items:\n                        properties:\n                          assetVolatility:\n                            description: The asset volatility\n                            minimum: 0\n                            type: number\n                        required:\n                          - assetVolatility\n                        type: object\n                      minItems: 1\n                      type: array\n                  required:\n                    - assets\n                  type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                From covariance matrix:\n                  description: Computed variance of 2 assets\n                  value:\n                    assets:\n                      - assetVariance: 0.01\n                      - assetVariance: 0.0025\n                From returns:\n                  description: Computed variance of 2 assets\n                  value:\n                    assets:\n                      - assetVariance: 0.00035\n                      - assetVariance: 0.00035\n                From volatilities:\n                  description: Computed variance of 2 assets\n                  value:\n                    assets:\n                      - assetVariance: 0.010000000000000002\n                      - assetVariance: 0.0025000000000000005\n              schema:\n                properties:\n                  assets:\n                    items:\n                      properties:\n                        assetVariance:\n                          description: The variance of the asset\n                          minimum: 0\n                          type: number\n                      required:\n                        - assetVariance\n                      type: object\n                    type: array\n                required:\n                  - assets\n                type: object\n          description: OK\n      summary: Variance\n      tags:\n        - Assets Variance\n      x-codegen-request-body-name: body\n  /assets/variance/sample:\n    post:\n      description: |\n        Compute the sample variance of one or several asset(s) from the asset(s) returns.\n                \n        \u003e This endpoint is similar to the endpoint [`/assets/variance`](#post-/assets/variance), but uses [Bessel's correction](https://en.wikipedia.org/wiki/Bessel%27s_correction) to compute the variance.\n\n        References\n        * [Wikipedia, Variance](https://en.wikipedia.org/wiki/Variance)        \n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the sample variance of 2 assets based on 4 and 3 returns\n                value:\n                  assets:\n                    - assetReturns:\n                        - 0.01\n                        - 0.01\n                        - 0.02\n                        - 0.01\n                    - assetReturns:\n                        - -0.02\n                        - -0.02\n                        - -0.04\n            schema:\n              properties:\n                assets:\n                  items:\n                    properties:\n                      assetReturns:\n                        description: assetReturns[t] is the return of the asset at the time t, in percentage\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                    required:\n                      - assetReturns\n                    type: object\n                  minItems: 1\n                  type: array\n              required:\n                - assets\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed sample variances of 2 assets\n                  value:\n                    assets:\n                      - assetVariance: 0.000025\n                      - assetVariance: 0.0001\n              schema:\n                properties:\n                  assets:\n                    items:\n                      properties:\n                        assetVariance:\n                          description: The sample variance of the asset\n                          minimum: 0\n                          type: number\n                      required:\n                        - assetVariance\n                      type: object\n                    type: array\n                required:\n                  - assets\n                type: object\n          description: OK\n      summary: Sample variance\n      tags:\n        - Assets Variance\n      x-codegen-request-body-name: body\n  /assets/volatility:\n    post:\n      description: |\n        Compute the volatility (i.e., standard deviation) of one or several asset(s) from either:  \n        * The asset(s) returns\n        * The assets covariance matrix\n        * The asset(s) variance\n\n        References\n        * [Wikipedia, Standard Deviation](https://en.wikipedia.org/wiki/Standard_deviation)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              From assets covariance matrix:\n                description: Compute the volatility of 2 assets based on their covariance matrix\n                value:\n                  assets: 2\n                  assetsCovarianceMatrix:\n                    - - 0.01\n                      - -0.0025\n                    - - -0.0025\n                      - 0.0025\n              From assets variance:\n                description: Compute the volatility of 2 assets based on their variance\n                value:\n                  assets:\n                    - assetVariance: 0.01\n                    - assetVariance: 0.0025\n              From returns:\n                description: Compute the volatility of 2 assets based on 4 returns per asset\n                value:\n                  assets:\n                    - assetReturns:\n                        - 0.01\n                        - 0\n                        - 0.02\n                        - -0.03\n                    - assetReturns:\n                        - 0.01\n                        - 0\n                        - 0.02\n                        - -0.03\n            schema:\n              oneOf:\n                - properties:\n                    assets:\n                      items:\n                        properties:\n                          assetReturns:\n                            description: assetReturns[t] is the return of the asset at the time t, in percentage\n                            items:\n                              type: number\n                            minItems: 2\n                            type: array\n                        required:\n                          - assetReturns\n                        type: object\n                      minItems: 1\n                      type: array\n                  required:\n                    - assets\n                  type: object\n                - properties:\n                    assets:\n                      description: The number of assets\n                      minimum: 2\n                      type: integer\n                    assetsCovarianceMatrix:\n                      description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 2\n                      type: array\n                  required:\n                    - assets\n                    - assetsCovarianceMatrix\n                  type: object\n                - properties:\n                    assets:\n                      items:\n                        properties:\n                          assetVariance:\n                            description: The asset variance\n                            minimum: 0\n                            type: number\n                        required:\n                          - assetVariance\n                        type: object\n                      minItems: 1\n                      type: array\n                  required:\n                    - assets\n                  type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                From covariance matrix:\n                  description: Computed volatility of 2 assets\n                  value:\n                    assets:\n                      - assetVolatility: 0.1\n                      - assetVolatility: 0.05\n                From returns:\n                  description: Computed volatility of 2 assets\n                  value:\n                    assets:\n                      - assetVolatility: 0.01870828693386971\n                      - assetVolatility: 0.01870828693386971\n                From variances:\n                  description: Computed volatility of 2 assets\n                  value:\n                    assets:\n                      - assetVolatility: 0.1\n                      - assetVolatility: 0.05\n              schema:\n                properties:\n                  assets:\n                    items:\n                      properties:\n                        assetVolatility:\n                          description: The volatility of the asset\n                          minimum: 0\n                          type: number\n                      required:\n                        - assetVolatility\n                      type: object\n                    type: array\n                required:\n                  - assets\n                type: object\n          description: OK\n      summary: Volatility\n      tags:\n        - Assets Volatility\n      x-codegen-request-body-name: body\n  /assets/volatility/sample:\n    post:\n      description: |\n        Compute the sample volatility (i.e., sample standard deviation) of one or several asset(s) from the asset(s) returns.\n\n        \u003e This endpoint is similar to the endpoint [`/assets/volatility`](#post-/assets/volatility), but uses [Bessel's correction](https://en.wikipedia.org/wiki/Bessel%27s_correction) to compute the volatility.\n\n        References\n        * [Wikipedia, Standard Deviation](https://en.wikipedia.org/wiki/Standard_deviation)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the sample volatility of 2 assets based on 4 and 3 returns\n                value:\n                  assets:\n                    - assetReturns:\n                        - 0.01\n                        - 0.01\n                        - 0.02\n                        - 0.01\n                    - assetReturns:\n                        - -0.02\n                        - -0.02\n                        - -0.04\n            schema:\n              properties:\n                assets:\n                  items:\n                    properties:\n                      assetReturns:\n                        description: assetReturns[t] is the return of the asset at the time t, in percentage\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                    required:\n                      - assetReturns\n                    type: object\n                  minItems: 2\n                  type: array\n              required:\n                - assets\n                - assetsReturns\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed sample volatility of 2 assets\n                  value:\n                    assets:\n                      - assetVolatility: 0.005\n                      - assetVolatility: 0.01\n              schema:\n                properties:\n                  assets:\n                    items:\n                      properties:\n                        assetVolatility:\n                          description: The sample volatility of the asset\n                          minimum: 0\n                          type: number\n                      required:\n                        - assetVolatility\n                      type: object\n                    type: array\n                required:\n                  - assets\n                type: object\n          description: OK\n      summary: Sample volatility\n      tags:\n        - Assets Volatility\n      x-codegen-request-body-name: body\n  /factors/residualization:\n    post:\n      description: |\n        Compute the residuals of a factor against a set of factors, using a returns-based linear regression analysis.\n\n        References\n        * [Factor Research, Factor Exposure Analysis: Exploring Residualization](https://insights.factorresearch.com/research-factor-exposure-analysis-exploring-residualization/)\n        * [Catalina B. Garcia, Román Salmeron, Claudia Garcia \u0026 Jose Garcia (2019): Residualization: justification, properties and application, Journal of Applied Statistics](https://doi.org/10.1080/02664763.2019.1701638)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Residualize the returns of the first factor among a set of 2 factors, observed during 3 time periods\n                value:\n                  factors:\n                    - factorReturns:\n                        - 0.01\n                        - 0.02\n                        - -0.01\n                    - factorReturns:\n                        - 0.025\n                        - 0.005\n                        - -0.02\n                  residualizedFactor: 1\n            schema:\n              properties:\n                factors:\n                  items:\n                    properties:\n                      factorReturns:\n                        description: factorReturns[t] is the return of the factor at the time t; all the factorReturns arrays must have the same length\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                    required:\n                      - factorReturns\n                    type: object\n                  minItems: 2\n                  type: array\n                residualizedFactor:\n                  description: The index of the factor to residualize\n                  minimum: 1\n                  type: integer\n              required:\n                - factors\n                - residualizedFactor\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed returns of a residualized factor, observed during 3 time periods\n                  value:\n                    residualizedFactorReturns:\n                      - -0.001885245901639342\n                      - 0.017622950819672134\n                      - -0.0004918032786885261\n              schema:\n                properties:\n                  residualizedFactorReturns:\n                    description: residualizedFactorReturns[t] is the return of the residualized factor at the time t\n                    items:\n                      type: number\n                    type: array\n                required:\n                  - residualizedFactorReturns\n                type: object\n          description: OK\n      summary: Residualization\n      tags:\n        - Factors\n      x-codegen-request-body-name: body\n  /portfolio/analysis/alpha:\n    post:\n      description: |\n        Compute the Jensen’s alpha of one or several portfolio(s) in the Capital Asset Pricing Model (CAPM).\n\n        References\n        * Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution  \n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the Jensen’s alpha of one portfolio\n                value:\n                  benchmarkReturns:\n                    - 0.002\n                    - 0.025\n                    - 0.018\n                    - -0.011\n                    - 0.014\n                  portfolios:\n                    - portfolioReturns:\n                        - 0.003\n                        - 0.026\n                        - 0.011\n                        - -0.01\n                        - 0.015\n                  riskFreeRate: 0.01\n            schema:\n              oneOf:\n                - properties:\n                    benchmarkReturns:\n                      description: benchmarkReturns[t] is the return of the benchmark at the time t; the benchmarkReturns array must have the same length as all the portfolioReturns arrays\n                      items:\n                        type: number\n                      minItems: 2\n                      type: array\n                    portfolios:\n                      items:\n                        properties:\n                          portfolioReturns:\n                            description: portfolioReturns[t] is the return of the portfolio at the time t, all the portfolioReturns arrays must have the same length, equal to the length of the benchmarkReturns array\n                            items:\n                              type: number\n                            minItems: 2\n                            type: array\n                        required:\n                          - portfolioReturns\n                        type: object\n                      minItems: 1\n                      type: array\n                    riskFreeRate:\n                      description: The risk free rate, assumed to be constant for any time t\n                      type: number\n                  required:\n                    - benchmarkReturns\n                    - portfolios\n                  type: object\n                - properties:\n                    benchmarkReturns:\n                      description: benchmarkReturns[t] is the return of the benchmark at the time t; the benchmarkReturns array must have the same length as all the portfolioReturns arrays\n                      items:\n                        type: number\n                      minItems: 2\n                      type: array\n                    portfolios:\n                      items:\n                        properties:\n                          portfolioReturns:\n                            description: portfolioReturns[t] is the return of the portfolio at the time t, all the portfolioReturns arrays must have the same length, equal to the length of the benchmarkReturns array\n                            items:\n                              type: number\n                            minItems: 2\n                            type: array\n                        required:\n                          - portfolioReturns\n                        type: object\n                      minItems: 1\n                      type: array\n                    riskFreeReturns:\n                      description: riskFreeReturns[t] is the risk free return at the time t; the riskFreeReturns array must have the same length as all the portfolioReturns arrays\n                      items:\n                        type: number\n                      minItems: 2\n                      type: array\n                  required:\n                    - benchmarkReturns\n                    - portfolios\n                  type: object\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed Jensen's alpha of one portfolio\n                  value:\n                    portfolios:\n                      - portfolioAlpha: -0.0006332179930795853\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        portfolioAlpha:\n                          description: The portfolio Jensen's alpha, which correponds to the portfolio excess return adjusted for the systematic risk in the Capital Asset Pricing Model (CAPM)\n                          type: number\n                      required:\n                        - portfolioAlpha\n                      type: object\n                    minItems: 1\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Alpha\n      tags:\n        - Portfolio Analysis\n      x-codegen-request-body-name: body\n  /portfolio/analysis/beta:\n    post:\n      description: |\n        Compute the beta of one or several portfolio(s) in the Capital Asset Pricing Model (CAPM)..\n\n        References\n        * Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution  \n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the beta of one portfolio\n                value:\n                  benchmarkReturns:\n                    - 0.002\n                    - 0.025\n                    - 0.018\n                    - -0.011\n                    - 0.014\n                  portfolios:\n                    - portfolioReturns:\n                        - 0.003\n                        - 0.026\n                        - 0.011\n                        - -0.01\n                        - 0.015\n                  riskFreeRate: 0.01\n            schema:\n              oneOf:\n                - properties:\n                    benchmarkReturns:\n                      description: benchmarkReturns[t] is the return of the benchmark at the time t; the benchmarkReturns array must have the same length as all the portfolioReturns arrays\n                      items:\n                        type: number\n                      minItems: 2\n                      type: array\n                    portfolios:\n                      items:\n                        properties:\n                          portfolioReturns:\n                            description: portfolioReturns[t] is the return of the portfolio at the time t, all the portfolioReturns arrays must have the same length, equal to the length of the benchmarkReturns array\n                            items:\n                              type: number\n                            minItems: 2\n                            type: array\n                        required:\n                          - portfolioReturns\n                        type: object\n                      minItems: 1\n                      type: array\n                    riskFreeRate:\n                      description: The risk free rate, assumed to be constant for any time t\n                      type: number\n                  required:\n                    - benchmarkReturns\n                    - portfolios\n                  type: object\n                - properties:\n                    benchmarkReturns:\n                      description: benchmarkReturns[t] is the return of the benchmark at the time t; the benchmarkReturns array must have the same length as all the portfolioReturns arrays\n                      items:\n                        type: number\n                      minItems: 2\n                      type: array\n                    portfolios:\n                      items:\n                        properties:\n                          portfolioReturns:\n                            description: portfolioReturns[t] is the return of the portfolio at the time t, all the portfolioReturns arrays must have the same length, equal to the length of the benchmarkReturns array\n                            items:\n                              type: number\n                            minItems: 2\n                            type: array\n                        required:\n                          - portfolioReturns\n                        type: object\n                      minItems: 1\n                      type: array\n                    riskFreeReturns:\n                      description: riskFreeReturns[t] is the risk free return at the time t; the riskFreeReturns array must have the same length as all the portfolioReturns arrays\n                      items:\n                        type: number\n                      minItems: 2\n                      type: array\n                  required:\n                    - benchmarkReturns\n                    - portfolios\n                  type: object\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed beta of one portfolio\n                  value:\n                    portfolios:\n                      - portfolioBeta: 0.9169550173010382\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        portfolioBeta:\n                          description: The portfolio beta, which correponds to the portfolio systematic risk in the Capital Asset Pricing Model (CAPM)\n                          type: number\n                      required:\n                        - portfolioBeta\n                      type: object\n                    minItems: 1\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Beta\n      tags:\n        - Portfolio Analysis\n      x-codegen-request-body-name: body\n  /portfolio/analysis/contributions/return:\n    post:\n      description: |\n        Perform a return contribution analysis of one or several portfolio(s), optionally using groups of assets.\n\n        References\n        * Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Perform a return contributions analysis of a portfolio made of 3 assets with the first 2 assets grouped together\n                value:\n                  assets: 3\n                  assetsGroups:\n                    - - 1\n                      - 2\n                  assetsReturns:\n                    - 0.01\n                    - -0.01\n                    - 0.025\n                  portfolios:\n                    - assetsWeights:\n                        - 0.5\n                        - 0.25\n                        - 0.25\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 1\n                  type: integer\n                assetsGroups:\n                  items:\n                    description: assetsGroups[k] is the indexes of the assets belonging to the assets group k\n                    items:\n                      minimum: 1\n                      type: integer\n                    minItems: 2\n                    type: array\n                    uniqueItems: true\n                  minItems: 1\n                  type: array\n                assetsReturns:\n                  description: assetsReturns[i] is the arithmetic return of asset i\n                  items:\n                    type: number\n                  minItems: 1\n                  type: array\n                portfolios:\n                  items:\n                    properties:\n                      assetsWeights:\n                        description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                        items:\n                          maximum: 1\n                          minimum: 0\n                          type: number\n                        minItems: 1\n                        type: array\n                    required:\n                      - assetsWeights\n                    type: object\n                  minItems: 1\n                  type: array\n              required:\n                - assets\n                - assetsReturns\n                - portfolios\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed the return contributions of 3 assets and 2 groups of assets\n                  value:\n                    portfolios:\n                      - assetsGroupsReturnContributions:\n                          - 0.0025\n                          - 0.00625\n                        assetsReturnContributions:\n                          - 0.005\n                          - -0.0025\n                          - 0.00625\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        assetsGroupsReturnContributions:\n                          description: assetsGroupsReturnContributions[k] is the return contribution of the group of assets k to the return of the portfolio\n                          items:\n                            type: number\n                          minItems: 1\n                          type: array\n                        assetsReturnContributions:\n                          description: assetsReturnContributions[i] is the return contribution of the asset i to the return of the portfolio\n                          items:\n                            type: number\n                          minItems: 1\n                          type: array\n                      required:\n                        - assetsReturnContributions\n                      type: object\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Return Contributions\n      tags:\n        - Portfolio Analysis\n      x-codegen-request-body-name: body\n  /portfolio/analysis/contributions/risk:\n    post:\n      description: |\n        Perform a risk contribution analysis of one or several portfolio(s), optionally using groups of assets.\n\n        References\n        * Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Perform a risk contributions analysis of a portfolio made of 3 assets\n                value:\n                  assets: 3\n                  assetsCovarianceMatrix:\n                    - - 0.0001\n                      - 0\n                      - 0\n                    - - 0\n                      - 0.0001\n                      - 0\n                    - - 0\n                      - 0\n                      - 0.04\n                  portfolios:\n                    - assetsWeights:\n                        - 0.5\n                        - 0.25\n                        - 0.25\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 1\n                  type: integer\n                assetsCovarianceMatrix:\n                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                  items:\n                    items:\n                      type: number\n                    minItems: 2\n                    type: array\n                  minItems: 2\n                  type: array\n                assetsGroups:\n                  items:\n                    description: assetsGroups[k] is the indexes of the assets belonging to the assets group k\n                    items:\n                      minimum: 1\n                      type: integer\n                    minItems: 2\n                    type: array\n                    uniqueItems: true\n                  minItems: 1\n                  type: array\n                portfolios:\n                  items:\n                    properties:\n                      assetsWeights:\n                        description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                        items:\n                          maximum: 1\n                          minimum: 0\n                          type: number\n                        minItems: 1\n                        type: array\n                    required:\n                      - assetsWeights\n                    type: object\n                  minItems: 1\n                  type: array\n              required:\n                - assets\n                - assetsCovarianceMatrix\n                - portfolios\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed the risk contributions of 3 assets\n                  value:\n                    portfolios:\n                      - assetsRiskContributions:\n                          - 0.0004969039949999533\n                          - 0.00012422599874998834\n                          - 0.049690399499995326\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        assetsGroupsRiskContributions:\n                          description: assetsGroupsRiskContributions[k] is the risk contribution of the group of assets k to the risk of the portfolio\n                          items:\n                            type: number\n                          minItems: 1\n                          type: array\n                        assetsRiskContributions:\n                          description: assetsRiskContributions[i] is the risk contribution of the asset i to the risk of the portfolio\n                          items:\n                            type: number\n                          minItems: 1\n                          type: array\n                      required:\n                        - assetsRiskContributions\n                      type: object\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Risk Contributions\n      tags:\n        - Portfolio Analysis\n      x-codegen-request-body-name: body\n  /portfolio/analysis/diversification-ratio:\n    post:\n      description: |\n        Compute the diversification ratio of one or several portfolio(s).\n\n        References\n        * [Yves Choueifaty and Yves Coignard, Toward Maximum Diversification, The Journal of Portfolio Management Fall 2008, 35 (1) 40-51](https://doi.org/10.3905/JPM.2008.35.1.40)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the diversification ratio of 1 portfolio\n                value:\n                  assets: 2\n                  assetsCovarianceMatrix:\n                    - - 0.0025\n                      - 0.0005\n                    - - 0.0005\n                      - 0.01\n                  portfolios:\n                    - assetsWeights:\n                        - 0.5\n                        - 0.5\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n                assetsCovarianceMatrix:\n                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                  items:\n                    items:\n                      type: number\n                    minItems: 2\n                    type: array\n                  minItems: 2\n                  type: array\n                portfolios:\n                  items:\n                    properties:\n                      assetsWeights:\n                        description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                        items:\n                          maximum: 1\n                          minimum: 0\n                          type: number\n                        minItems: 1\n                        type: array\n                    required:\n                      - assetsWeights\n                    type: object\n                  minItems: 1\n                  type: array\n              required:\n                - assets\n                - assetsCovarianceMatrix\n                - portfolios\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed diversification ratio of 1 portfolio\n                  value:\n                    portfolios:\n                      - portfolioDiversificationRatio: 1.2909944487358058\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        portfolioDiversificationRatio:\n                          description: The diversification ratio of the portfolio\n                          minimum: 0\n                          type: number\n                      required:\n                        - portfolioDiversificationRatio\n                      type: object\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Diversification Ratio\n      tags:\n        - Portfolio Analysis\n      x-codegen-request-body-name: body\n  /portfolio/analysis/drawdowns:\n    post:\n      description: |\n        Compute the drawdown function - also called the underwater equity curve -, as well as the worst 10 drawdowns of one or several portfolio(s).\n\n        References\n        * [Wikipedia, Drawdown](https://en.wikipedia.org/wiki/Drawdown_(economics))        \n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Computes the drawdown (underwater) curve and the worst 10 drawdowns of 1 portfolio\n                value:\n                  portfolios:\n                    - portfolioValues:\n                        - 100\n                        - 95\n                        - 100\n                        - 90\n                        - 85\n                        - 70\n            schema:\n              properties:\n                portfolios:\n                  items:\n                    properties:\n                      portfolioValues:\n                        description: portfolioValues[t] is the value of the portfolio at the time t\n                        items:\n                          exclusiveMinimum: true\n                          minimum: 0\n                          type: number\n                        type: array\n                    required:\n                      - portfolioValues\n                    type: object\n                  minItems: 1\n                  type: array\n              required:\n                - portfolios\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed a maximum drawdown of 30%, which began in the third period, which reached its bottom in the sixth period, and which is not ended yet\n                  value:\n                    portfolios:\n                      - portfolioDrawdowns:\n                          - 0\n                          - 0.05\n                          - 0\n                          - 0.1\n                          - 0.15\n                          - 0.3\n                        portfolioWorstDrawdowns:\n                          - drawdownBottom: 6\n                            drawdownDepth: 0.3\n                            drawdownEnd: 0\n                            drawdownStart: 3\n                          - drawdownBottom: 2\n                            drawdownDepth: 0.05\n                            drawdownEnd: 3\n                            drawdownStart: 1\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        portfolioDrawdowns:\n                          description: portfolioDrawdowns[t] is the value of the drawdown function at the time t\n                          items:\n                            minimum: 0\n                            type: number\n                          minItems: 1\n                          type: array\n                        portfolioWorstDrawdowns:\n                          items:\n                            properties:\n                              drawdownBottom:\n                                minimum: 0\n                                type: integer\n                              drawdownDepth:\n                                minimum: 0\n                                type: number\n                              drawdownEnd:\n                                minimum: 0\n                                type: integer\n                              drawdownStart:\n                                minimum: 0\n                                type: integer\n                            required:\n                              - drawdownDepth\n                              - drawdownStart\n                              - drawdownBottom\n                              - drawdownEnd\n                            type: object\n                          minItems: 1\n                          type: array\n                      required:\n                        - portfolioDrawdowns\n                        - portfolioWorstDrawdowns\n                      type: object\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Drawdowns\n      tags:\n        - Portfolio Analysis\n      x-codegen-request-body-name: body\n  /portfolio/analysis/factor/exposures:\n    post:\n      description: |\n        Compute the exposures of one or several portfolio(s) to a set of factors, using a returns-based linear regression analysis.\n\n        References\n        * [Measuring Factor Exposures: Uses and Abuses, Ronen Israel and Adrienne Ross, The Journal of Alternative Investments Summer 2017, 20 (1) 10-25](https://jai.pm-research.com/content/20/1/10.short) \n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the exposures of one portfolio to two factors\n                value:\n                  factors:\n                    - factorReturns:\n                        - -0.00414169934\n                        - 0.01201656108\n                        - 0.0087181369\n                    - factorReturns:\n                        - -0.01387258782\n                        - -0.01097961581\n                        - 0.01742002062\n                  portfolios:\n                    - portfolioReturns:\n                        - -0.04302\n                        - 0.01310372213\n                        - 0.06482589323\n            schema:\n              properties:\n                factors:\n                  items:\n                    properties:\n                      factorReturns:\n                        description: factorReturns[t] is the return of the factor at the time t; all the factorReturns arrays must have the same length, equal to the common length of the portfolioReturns arrays\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                    required:\n                      - factorReturns\n                    type: object\n                  minItems: 1\n                  type: array\n                portfolios:\n                  items:\n                    properties:\n                      portfolioReturns:\n                        description: portfolioReturns[t] is the return of the portfolio at the time t, all the portfolioReturns arrays must have the same length, equal to the common length of the factorReturns arrays\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                    required:\n                      - portfolioReturns\n                    type: object\n                  minItems: 1\n                  type: array\n              required:\n                - factorReturns\n                - portfolios\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed exposures of one portfolio to two factors\n                  value:\n                    portfolios:\n                      - portfolioAlpha: -0.000017563172006410804\n                        portfolioBetas:\n                          - 3.083191766752847\n                          - 2.17931822921701\n                        portfolioRSquared: 1\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        portfolioAlpha:\n                          description: The portfolio alpha, which correponds to the portion of the portfolio returns that cannot be explained by the portfolio factor exposures\n                          type: number\n                        portfolioBetas:\n                          description: The portfolio betas, which correspond to the portfolio factor exposures\n                          items:\n                            type: number\n                          minItems: 1\n                          type: array\n                        portfolioRSquared:\n                          description: The portfolio R^2, which indicates how much of the variability in the portfolio returns can be explained by the portfolio factor exposures; generally, the higher the R^2 the better the portfolio factor exposures explain the portfolio returns\n                          type: number\n                      required:\n                        - portfolioAlpha\n                        - portfolioBetas\n                        - portfolioRSquared\n                      type: object\n                    minItems: 1\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Factor Exposures\n      tags:\n        - Portfolio Analysis\n      x-codegen-request-body-name: body\n  /portfolio/analysis/mean-variance/efficient-frontier:\n    post:\n      description: |\n        Compute the discretized mean-variance efficient frontier associated to a list of assets, optionally subject to:\n        * Minimum and maximum weights constraints\n        * Maximum group weights constraints\n        * Minimum and maximum portfolio exposure constraint\n\n        References\n         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute 3 portfolios belonging to the mean-variance efficient frontier\n                value:\n                  assets: 2\n                  assetsCovarianceMatrix:\n                    - - 0.0025\n                      - 0.0005\n                    - - 0.0005\n                      - 0.01\n                  assetsReturns:\n                    - 0.01\n                    - 0.05\n                  constraints:\n                    minimumAssetsWeights:\n                      - 0.2\n                      - 0\n                  portfolios: 3\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n                assetsCovarianceMatrix:\n                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                  items:\n                    items:\n                      type: number\n                    minItems: 2\n                    type: array\n                  minItems: 2\n                  type: array\n                assetsReturns:\n                  description: assetsReturns[i] is the arithmetic return of asset i\n                  items:\n                    type: number\n                  minItems: 1\n                  type: array\n                constraints:\n                  properties:\n                    assetsGroups:\n                      items:\n                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix\n                        items:\n                          minimum: 1\n                          type: integer\n                        minItems: 2\n                        type: array\n                        uniqueItems: true\n                      minItems: 1\n                      type: array\n                    assetsGroupsMatrix:\n                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 1\n                      type: array\n                    maximumAssetsGroupsWeights:\n                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided\n                      items:\n                        type: number\n                      type: array\n                    maximumAssetsWeights:\n                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    maximumPortfolioExposure:\n                      default: 1\n                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minimumAssetsWeights:\n                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    minimumPortfolioExposure:\n                      default: 1\n                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                  type: object\n                portfolios:\n                  default: 25\n                  description: The number of portfolios to compute on the mean-variance efficient frontier\n                  minimum: 2\n                  type: integer\n              required:\n                - assets\n                - assetsReturns\n                - assetsCovarianceMatrix\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed 3 mean-variance efficient portfolios\n                  value:\n                    portfolios:\n                      - assetsWeights:\n                          - 0.8260869565217391\n                          - 0.17391304347826086\n                        portfolioReturn: 0.016956521739130433\n                        portfolioVolatility: 0.0463915284620315\n                      - assetsWeights:\n                          - 0.5130434782608696\n                          - 0.48695652173913045\n                        portfolioReturn: 0.02947826086956522\n                        portfolioVolatility: 0.05726369211623199\n                      - assetsWeights:\n                          - 0.2\n                          - 0.8\n                        portfolioReturn: 0.04200000000000001\n                        portfolioVolatility: 0.08160882305241265\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        assetsWeights:\n                          description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                          items:\n                            maximum: 1\n                            minimum: 0\n                            type: number\n                          minItems: 2\n                          type: array\n                        portfolioReturn:\n                          description: The arithmetic return of the portfolio\n                          type: number\n                        portfolioVolatility:\n                          description: The volatility of the portfolio\n                          minimum: 0\n                          type: number\n                      required:\n                        - assetsWeights\n                        - portfolioReturn\n                        - portfolioVolatility\n                      type: object\n                    minItems: 1\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Mean-Variance Efficient Frontier\n      tags:\n        - Portfolio Analysis\n      x-codegen-request-body-name: body\n  /portfolio/analysis/mean-variance/minimum-variance-frontier:\n    post:\n      description: |\n        Compute the discretized mean-variance minimum variance frontier associated to a list of assets, optionally subject to:\n        * Minimum and maximum weights constraints\n        * Maximum group weights constraints\n        * Minimum and maximum portfolio exposure constraint\n\n        \u003e This endpoint is similar to the endpoint [`/portfolio/analysis/mean-variance/efficient-frontier`](#post-/portfolio/analysis/mean-variance/efficient-frontier), because the mean-variance efficient frontier is the \"top\" portion of the mean-variance minimum variance frontier.\n\n        References\n         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute 4 portfolios belonging to the mean-variance minimum variance frontier\n                value:\n                  assets: 2\n                  assetsCovarianceMatrix:\n                    - - 0.0025\n                      - 0.0005\n                    - - 0.0005\n                      - 0.01\n                  assetsReturns:\n                    - 0.01\n                    - 0.05\n                  constraints:\n                    minimumAssetsWeights:\n                      - 0.2\n                      - 0\n                  portfolios: 4\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n                assetsCovarianceMatrix:\n                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                  items:\n                    items:\n                      type: number\n                    minItems: 2\n                    type: array\n                  minItems: 2\n                  type: array\n                assetsReturns:\n                  description: assetsReturns[i] is the arithmetic return of asset i\n                  items:\n                    type: number\n                  minItems: 1\n                  type: array\n                constraints:\n                  properties:\n                    assetsGroups:\n                      items:\n                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix\n                        items:\n                          minimum: 1\n                          type: integer\n                        minItems: 2\n                        type: array\n                        uniqueItems: true\n                      minItems: 1\n                      type: array\n                    assetsGroupsMatrix:\n                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 1\n                      type: array\n                    maximumAssetsGroupsWeights:\n                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided\n                      items:\n                        type: number\n                      type: array\n                    maximumAssetsWeights:\n                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    maximumPortfolioExposure:\n                      default: 1\n                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minimumAssetsWeights:\n                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    minimumPortfolioExposure:\n                      default: 1\n                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                  type: object\n                portfolios:\n                  default: 25\n                  description: The number of portfolios to compute on the mean-variance minimum variance frontier\n                  minimum: 2\n                  type: integer\n              required:\n                - assets\n                - assetsReturns\n                - assetsCovarianceMatrix\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed 4 mean-variance minimum variance portfolios\n                  value:\n                    portfolios:\n                      - assetsWeights:\n                          - 1\n                          - 0\n                        portfolioReturn: 0.01\n                        portfolioVolatility: 0.05\n                      - assetsWeights:\n                          - 0.7333333333333333\n                          - 0.2666666666666667\n                        portfolioReturn: 0.02066666666666667\n                        portfolioVolatility: 0.04744587559642156\n                      - assetsWeights:\n                          - 0.4666666666666667\n                          - 0.5333333333333333\n                        portfolioReturn: 0.03133333333333334\n                        portfolioVolatility: 0.06031399321697891\n                      - assetsWeights:\n                          - 0.2\n                          - 0.8\n                        portfolioReturn: 0.04200000000000001\n                        portfolioVolatility: 0.08160882305241265\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        assetsWeights:\n                          description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                          items:\n                            maximum: 1\n                            minimum: 0\n                            type: number\n                          minItems: 2\n                          type: array\n                        portfolioReturn:\n                          description: The arithmetic return of the portfolio\n                          type: number\n                        portfolioVolatility:\n                          description: The volatility of the portfolio\n                          minimum: 0\n                          type: number\n                      required:\n                        - assetsWeights\n                        - portfolioReturn\n                        - portfolioVolatility\n                      type: object\n                    minItems: 1\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Mean-Variance Minimum Variance Frontier\n      tags:\n        - Portfolio Analysis\n      x-codegen-request-body-name: body\n  /portfolio/analysis/return:\n    post:\n      description: |\n        Compute the arithmetic return of one or several portfolio(s) from either:  \n        * Portfolio assets arithmetic returns\n        * Portfolio values\n\n        References\n        * [Wikipedia, Rate of Return](https://en.wikipedia.org/wiki/Rate_of_return#Return)\n        * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n      requestBody:\n        content:\n          application/json:\n            examples:\n              From assets arithmetic returns:\n                description: Compute the arithmetic return of 2 portfolios based on the assets arithmetic returns\n                value:\n                  assets: 2\n                  assetsReturns:\n                    - 0.01\n                    - 0.05\n                  portfolios:\n                    - assetsWeights:\n                        - 1\n                        - 0\n                    - assetsWeights:\n                        - 0\n                        - 1\n              From portfolio values:\n                description: Compute the arithmetic return of 1 portfolio based on portfolio values\n                value:\n                  portfolios:\n                    - portfolioValues:\n                        - 100\n                        - 95\n                        - 100\n                        - 90\n                        - 85\n                        - 70\n            schema:\n              oneOf:\n                - properties:\n                    assets:\n                      description: The number of assets\n                      minimum: 1\n                      type: integer\n                    assetsReturns:\n                      description: assetsReturns[i] is the arithmetic return of asset i\n                      items:\n                        type: number\n                      minItems: 1\n                      type: array\n                    portfolios:\n                      items:\n                        properties:\n                          assetsWeights:\n                            description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                            items:\n                              maximum: 1\n                              minimum: 0\n                              type: number\n                            minItems: 1\n                            type: array\n                        required:\n                          - assetsWeights\n                        type: object\n                      minItems: 1\n                      type: array\n                  required:\n                    - portfolios\n                    - assets\n                    - assetsReturns\n                  type: object\n                - properties:\n                    portfolios:\n                      items:\n                        properties:\n                          portfolioValues:\n                            description: portfolioValues[t] is the value of the portfolio at the time t\n                            items:\n                              exclusiveMinimum: true\n                              minimum: 0\n                              type: number\n                            minItems: 2\n                            type: array\n                        required:\n                          - portfolioValues\n                        type: object\n                      minItems: 1\n                      type: array\n                  required:\n                    - portfolios\n                  type: object\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed arithmetic return of 2 portfolios\n                  value:\n                    portfolios:\n                      - portfolioReturn: 0.01\n                      - portfolioReturn: 0.05\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        portfolioReturn:\n                          description: The arithmetic return of the portfolio\n                          type: number\n                      required:\n                        - portfolioReturn\n                      type: object\n                    minItems: 1\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Arithmetic Return\n      tags:\n        - Portfolio Analysis\n      x-codegen-request-body-name: body\n  /portfolio/analysis/returns/average:\n    post:\n      description: |\n        Compute the arithmetic average of the arithmetic return(s) of one or several portfolio(s).\n\n        References\n        * [Wikipedia, Arithmetic Average Rate of Return](https://en.wikipedia.org/wiki/Rate_of_return#Arithmetic_average_rate_of_return)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              From portfolio values:\n                description: Compute the arithmetic average return of 1 portfolio\n                value:\n                  portfolios:\n                    - portfolioValues:\n                        - 100\n                        - 95\n                        - 100\n                        - 90\n                        - 85\n                        - 70\n            schema:\n              properties:\n                portfolios:\n                  items:\n                    properties:\n                      portfolioValues:\n                        description: portfolioValues[t] is the value of the portfolio at the time t\n                        items:\n                          exclusiveMinimum: true\n                          minimum: 0\n                          type: number\n                        type: array\n                    required:\n                      - portfolioValues\n                    type: object\n                  minItems: 1\n                  type: array\n              required:\n                - portfolios\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed average arithmetic return of 1% for the first portfolio\n                  value:\n                    portfolios:\n                      - portfolioAverageReturn: 0.01\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        portfolioAverageReturn:\n                          description: The arithmetic average return of the portfolio\n                          type: number\n                      required:\n                        - portfolioAverageReturn\n                      type: object\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Arithmetic Average Return\n      tags:\n        - Portfolio Analysis\n      x-codegen-request-body-name: body\n  /portfolio/analysis/sharpe-ratio:\n    post:\n      description: |\n        Compute the Sharpe ratio of one or several portfolio(s) from either:\n        * Portfolio assets arithmetic returns and assets covariance matrix\n        * Portfolio values\n\n        References\n        * Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution\n        * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n      requestBody:\n        content:\n          application/json:\n            examples:\n              From assets arithmetic returns and assets covariance matrix:\n                description: Compute the Sharpe ratio of 2 portfolios based on the assets arithmetic returns and covariance matrix\n                value:\n                  assets: 2\n                  assetsCovarianceMatrix:\n                    - - 0.0025\n                      - 0.0005\n                    - - 0.0005\n                      - 0.01\n                  assetsReturns:\n                    - 0.01\n                    - 0.05\n                  portfolios:\n                    - assetsWeights:\n                        - 1\n                        - 0\n                    - assetsWeights:\n                        - 0\n                        - 1\n                  riskFreeRate: 0\n              From portfolio values:\n                description: Compute the Sharpe ratio of 1 portfolio based on portfolio values\n                value:\n                  portfolios:\n                    - portfolioValues:\n                        - 100\n                        - 95\n                        - 100\n                        - 90\n                        - 85\n                        - 70\n                  riskFreeRate: 0\n            schema:\n              oneOf:\n                - properties:\n                    assets:\n                      description: The number of assets\n                      minimum: 2\n                      type: integer\n                    assetsCovarianceMatrix:\n                      description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 2\n                      type: array\n                    assetsReturns:\n                      description: assetsReturns[i] is the arithmetic return of asset i\n                      items:\n                        type: number\n                      minItems: 2\n                      type: array\n                    portfolios:\n                      items:\n                        properties:\n                          assetsWeights:\n                            description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                            items:\n                              maximum: 1\n                              minimum: 0\n                              type: number\n                            minItems: 2\n                            type: array\n                        required:\n                          - assetsWeights\n                        type: object\n                      minItems: 1\n                      type: array\n                    riskFreeRate:\n                      description: The risk free rate\n                      type: number\n                  required:\n                    - portfolios\n                    - riskFreeRate\n                    - assets\n                    - assetsReturns\n                    - assetsCovarianceMatrix\n                  type: object\n                - properties:\n                    portfolios:\n                      items:\n                        properties:\n                          portfolioValues:\n                            description: portfolioValues[t] is the value of the portfolio at the time t\n                            items:\n                              exclusiveMinimum: true\n                              minimum: 0\n                              type: number\n                            minItems: 2\n                            type: array\n                        required:\n                          - portfolioValues\n                        type: object\n                      minItems: 1\n                      type: array\n                    riskFreeRate:\n                      description: The risk free rate\n                      type: number\n                  required:\n                    - portfolios\n                    - riskFreeRate\n                  type: object\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed Sharpe ratio of 1 portfolio\n                  value:\n                    portfolios:\n                      - portfolioSharpeRatio: -0.8835333925060923\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        portfolioSharpeRatio:\n                          description: The Sharpe ratio of the portfolio\n                          type: number\n                      required:\n                        - portfolioSharpeRatio\n                      type: object\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Sharpe Ratio\n      tags:\n        - Portfolio Analysis\n      x-codegen-request-body-name: body\n  /portfolio/analysis/tracking-error:\n    post:\n      description: |\n        Compute the tracking error between a benchmark and one or several portfolio(s).\n\n        References\n        * [Wikipedia, Tracking error](https://en.wikipedia.org/wiki/Tracking_error) \n        * Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution \n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Computes the tracking error using the example in Bacon's book\n                value:\n                  benchmarkReturns:\n                    - 0.002\n                    - 0.025\n                    - 0.018\n                    - -0.011\n                    - 0.014\n                    - 0.018\n                    - 0.014\n                    - 0.065\n                    - -0.015\n                    - 0.042\n                    - -0.006\n                    - 0.083\n                    - 0.039\n                    - -0.038\n                    - -0.062\n                    - 0.015\n                    - -0.048\n                    - 0.021\n                    - 0.06\n                    - 0.056\n                    - -0.067\n                    - 0.019\n                    - -0.003\n                    - 0\n                  portfolios:\n                    - portfolioReturns:\n                        - 0.003\n                        - 0.026\n                        - 0.011\n                        - -0.01\n                        - 0.015\n                        - 0.025\n                        - 0.016\n                        - 0.067\n                        - -0.014\n                        - 0.04\n                        - -0.005\n                        - 0.081\n                        - 0.04\n                        - -0.037\n                        - -0.061\n                        - 0.017\n                        - -0.049\n                        - -0.022\n                        - 0.07\n                        - 0.058\n                        - -0.065\n                        - 0.024\n                        - -0.005\n                        - -0.009\n            schema:\n              properties:\n                benchmarkReturns:\n                  description: benchmarkReturns[t] is the return of the benchmark at the time t; the benchmarkReturns array must have the same length as all the portfolioReturns arrays\n                  items:\n                    type: number\n                  minItems: 2\n                  type: array\n                portfolios:\n                  items:\n                    properties:\n                      portfolioReturns:\n                        description: portfolioReturns[t] is the return of the portfolio at the time t, the portfolioReturns must have the same length as the benchmarkReturns array\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                    required:\n                      - portfolioReturns\n                    type: object\n                  minItems: 1\n                  type: array\n              required:\n                - benchmarkReturns\n                - portfolios\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: The computed tracking error using the example in Bacon's book\n                  value:\n                    portfolios:\n                      - portfolioTrackingError: 0.00950648535942116\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        portfolioTrackingError:\n                          description: The tracking error of the portfolio\n                          minimum: 0\n                          type: number\n                      required:\n                        - portfolioTrackingError\n                      type: object\n                    minItems: 1\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Tracking Error\n      tags:\n        - Portfolio Analysis\n      x-codegen-request-body-name: body\n  /portfolio/analysis/volatility:\n    post:\n      description: |\n        Compute the volatility (i.e., standard deviation) of one or several portfolio(s) from either:  \n        * Portfolio assets covariance matrix\n        * Portfolio values\n\n        References\n        * [Wikipedia, Standard Deviation](https://en.wikipedia.org/wiki/Standard_deviation#Finance)\n        * Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution\n        * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n      requestBody:\n        content:\n          application/json:\n            examples:\n              From assets covariance matrix:\n                description: Compute the volatility of 2 portfolios based on the assets covariance matrix\n                value:\n                  assets: 2\n                  assetsCovarianceMatrix:\n                    - - 0.0025\n                      - 0.0005\n                    - - 0.0005\n                      - 0.01\n                  portfolios:\n                    - assetsWeights:\n                        - 1\n                        - 0\n                    - assetsWeights:\n                        - 0\n                        - 1\n              From portfolio values:\n                description: Compute the volatility of 1 portfolio based on portfolio values\n                value:\n                  portfolios:\n                    - portfolioValues:\n                        - 100\n                        - 95\n                        - 100\n                        - 90\n                        - 85\n                        - 70\n            schema:\n              oneOf:\n                - properties:\n                    assets:\n                      description: The number of assets\n                      minimum: 2\n                      type: integer\n                    assetsCovarianceMatrix:\n                      description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 2\n                      type: array\n                    portfolios:\n                      items:\n                        properties:\n                          assetsWeights:\n                            description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                            items:\n                              maximum: 1\n                              minimum: 0\n                              type: number\n                            minItems: 2\n                            type: array\n                        required:\n                          - assetsWeights\n                        type: object\n                      minItems: 1\n                      type: array\n                  required:\n                    - portfolios\n                    - assets\n                    - assetsCovarianceMatrix\n                  type: object\n                - properties:\n                    portfolios:\n                      items:\n                        properties:\n                          portfolioValues:\n                            description: portfolioValues[t] is the value of the portfolio at the time t\n                            items:\n                              exclusiveMinimum: true\n                              minimum: 0\n                              type: number\n                            minItems: 2\n                            type: array\n                        required:\n                          - portfolioValues\n                        type: object\n                      minItems: 1\n                      type: array\n                  required:\n                    - portfolios\n                  type: object\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed volatility of 2 portfolios\n                  value:\n                    portfolios:\n                      - portfolioVolatility: 0.05\n                      - portfolioVolatility: 0.1\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        portfolioVolatility:\n                          description: The volatility of the portfolio\n                          minimum: 0\n                          type: number\n                      required:\n                        - portfolioVolatility\n                      type: object\n                    minItems: 1\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Volatility\n      tags:\n        - Portfolio Analysis\n      x-codegen-request-body-name: body\n  /portfolio/construction/investable:\n    post:\n      description: |\n        Compute an investable portfolio as close as possible, in terms of assets weights, to a desired portfolio, taking into account:\n        * The desired assets weights\n        * The desired assets groups weights\n        * The desired maximum assets groups weights\n        * The prices of the assets\n        * The portfolio value\n        * The requirement to purchase some assets by round lots or by odd lots\n        * The possibility to purchase some assets by a fractional quantity of shares\n        * The requirement to purchase a minimum number of shares, or a minimum monetary value, for some assets\n\n        References\n        * [Steiner, Andreas, Accuracy and Rounding in Portfolio Construction](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2261131)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example (groups weights):\n                description: Construct an investable portfolio of 10,000$ made of 4 assets with assets groups weights\n                value:\n                  assets: 4\n                  assetsGroups:\n                    - - 1\n                      - 2\n                    - - 3\n                      - 4\n                  assetsGroupsWeights:\n                    - 0.4\n                    - 0.4\n                  assetsPrices:\n                    - 10\n                    - 25\n                    - 100\n                    - 500\n                  assetsWeights:\n                    - 0.2\n                    - null\n                    - null\n                    - null\n                  portfolioValue: 10000\n              Example (no groups weights):\n                description: Construct an investable portfolio of 10,000$ made of 3 assets\n                value:\n                  assets: 3\n                  assetsPrices:\n                    - 10\n                    - 25\n                    - 500\n                  assetsWeights:\n                    - 0.05\n                    - 0.6\n                    - 0.35\n                  portfolioValue: 10000\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n                assetsGroups:\n                  items:\n                    description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; requires either assetsGroupsWeights or maximumAssetsGroupsWeights to be present\n                    items:\n                      minimum: 1\n                      type: integer\n                    minItems: 2\n                    type: array\n                    uniqueItems: true\n                  minItems: 1\n                  type: array\n                assetsGroupsWeights:\n                  description: assetsGroupsWeights[i] is the desired weight of the assets group k in the portfolio, in percentage (can be null to indicate no specific desire); requires assetsGroups to be present\n                  items:\n                    maximum: 1\n                    minimum: 0\n                    type: number\n                  minItems: 1\n                  type: array\n                assetsMinimumNotionalValues:\n                  description: assetsMinimumNotionalValues[i] is the minimum monetary value that the position in the asset i is required to represent when the asset i is included in the portfolio\n                  items:\n                    default: 0\n                    minimum: 0\n                    type: number\n                  minItems: 2\n                  type: array\n                assetsMinimumPositions:\n                  description: assetsMinimumPositions[i] is the minimum number of shares of the asset i that is required to purchase when the asset i is included in the portfolio (usual values are the same as for assetsSizeLots)\n                  items:\n                    default: 1\n                    exclusiveMinimum: true\n                    minimum: 0\n                    type: number\n                  minItems: 2\n                  type: array\n                assetsPrices:\n                  description: assetsPrices[i] is the price of the asset i\n                  items:\n                    exclusiveMinimum: true\n                    minimum: 0\n                    type: number\n                  minItems: 2\n                  type: array\n                assetsSizeLots:\n                  description: assetsSizeLots[i] is the number of shares by which it is required to purchase the asset i (usual values are 1 if the asset needs to be purchased share by share, 100 if the asset needs to be purchased by an integer multiple of 100 shares, and 1/1000000 - e.g. for Robinhood broker - if the asset can be purchased by fractional shares)\n                  items:\n                    default: 1\n                    exclusiveMinimum: true\n                    minimum: 0\n                    type: number\n                  minItems: 2\n                  type: array\n                assetsWeights:\n                  description: assetsWeights[i] is the desired weight of the asset i in the portfolio, in percentage (can be null to indicate no specific desire)\n                  items:\n                    maximum: 1\n                    minimum: 0\n                    type: number\n                  minItems: 2\n                  type: array\n                maximumAssetsGroupsWeights:\n                  description: maximumAssetsGroupsWeights[k] is the maximum desired weight of the assets group k in the portfolio, in percentage (can be null to indicate no specific desire); requires assetsGroups to be present\n                  items:\n                    maximum: 1\n                    minimum: 0\n                    type: number\n                  minItems: 1\n                  type: array\n                portfolioValue:\n                  description: The monetary value of the portfolio\n                  exclusiveMinimum: true\n                  minimum: 0\n                  type: number\n              required:\n                - assets\n                - assetsPrices\n                - portfolioValue\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example (groups weights):\n                  description: Computed investable portfolio with 4 assets not fully invested\n                  value:\n                    assetsPositions:\n                      - 200\n                      - 80\n                      - 20\n                      - 4\n                    assetsWeights:\n                      - 0.2\n                      - 0.2\n                      - 0.2\n                      - 0.2\n                Example (no groups weights):\n                  description: Computed investable portfolio with 3 assets fully invested\n                  value:\n                    assetsPositions:\n                      - 50\n                      - 240\n                      - 7\n                    assetsWeights:\n                      - 0.05\n                      - 0.6\n                      - 0.35\n              schema:\n                properties:\n                  assetsPositions:\n                    description: assetsPositions[i] is the number of shares of the asset i in the portfolio\n                    items:\n                      minimum: 0\n                      type: number\n                    minItems: 2\n                    type: array\n                  assetsWeights:\n                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                    items:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsPositions\n                  - assetsWeights\n                type: object\n          description: OK\n      summary: Investable Portfolio\n      tags:\n        - Portfolio Construction\n      x-codegen-request-body-name: body\n  /portfolio/construction/mimicking:\n    post:\n      description: |\n        Construct a portfolio as close as possible, in terms of returns, to a benchmark, optionally subject to:\n        * Minimum and maximum weights constraints\n        * Maximum group weights constraints\n        * Minimum and maximum portfolio exposure constraints\n\n        References \n        * Konstantinos Benidis, Yiyong Feng, Daniel P. Palomar, Optimization Methods for Financial Index Tracking: From Theory to Practice, now publishers Inc (7 juin 2018)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Construct a portfolio mimicking a benchmark with null returns, using 2 assets with opposite returns\n                value:\n                  assets:\n                    - assetReturns:\n                        - 0.01\n                        - 0.02\n                        - 0.03\n                    - assetReturns:\n                        - -0.01\n                        - -0.02\n                        - -0.03\n                  benchmarkReturns:\n                    - 0\n                    - 0\n                    - 0\n              Example with group constraints:\n                description: Construct a portfolio mimicking a benchmark using 3 assets and the constraint that the first two assets taken together cannot represent more than 35% of the portfolio\n                value:\n                  assets:\n                    - assetReturns:\n                        - 0.01\n                        - 0.02\n                        - 0.03\n                    - assetReturns:\n                        - -0.01\n                        - 0.04\n                        - 0.01\n                    - assetReturns:\n                        - 0.05\n                        - -0.01\n                        - 0\n                  benchmarkReturns:\n                    - 0.02\n                    - 0.01\n                    - 0.06\n                  constraints:\n                    assetsGroups:\n                      - - 1\n                        - 2\n                    maximumAssetsGroupsWeights:\n                      - 0.35\n            schema:\n              properties:\n                assets:\n                  items:\n                    properties:\n                      assetReturns:\n                        description: assetReturns[t] is the return of the asset at the time t, in percentage; all the assetReturns arrays must have the same length\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                    required:\n                      - assetReturns\n                    type: object\n                  minItems: 2\n                  type: array\n                benchmarkReturns:\n                  description: benchmarkReturns[t] is the return of the benchmark at the time t; the benchmarkReturns array must have the same length as all the assetReturns arrays\n                  items:\n                    type: number\n                  minItems: 2\n                  type: array\n                constraints:\n                  properties:\n                    assetsGroups:\n                      items:\n                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix\n                        items:\n                          minimum: 1\n                          type: integer\n                        minItems: 2\n                        type: array\n                        uniqueItems: true\n                      minItems: 1\n                      type: array\n                    assetsGroupsMatrix:\n                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 1\n                      type: array\n                    maximumAssetsGroupsWeights:\n                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided\n                      items:\n                        type: number\n                      type: array\n                    maximumAssetsWeights:\n                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    maximumPortfolioExposure:\n                      default: 1\n                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minimumAssetsWeights:\n                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    minimumPortfolioExposure:\n                      default: 1\n                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                  type: object\n              required:\n                - assets\n                - benchmarkReturns\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Constructed mimicking portfolio is invested equally in the 2 assets\n                  value:\n                    assetsWeights:\n                      - 0.5\n                      - 0.5\n              schema:\n                properties:\n                  assetsWeights:\n                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                    items:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsWeights\n                type: object\n          description: OK\n      summary: Mimicking Portfolio\n      tags:\n        - Portfolio Construction\n      x-codegen-request-body-name: body\n  /portfolio/construction/random:\n    post:\n      description: |\n        Construct one or several random portfolio(s), optionally subject to:       \n        * Minimum and maximum weights constraints\n        * Minimum and maximum portfolio exposure constraints\n\n        \u003e Because of the nature of the endpoint, subsequent calls with the same input data will result in different output data.\n\n        References\n        * [William Thornton Shaw, Monte Carlo Portfolio Optimization for General Investor Risk-Return Objectives and Arbitrary Return Distributions: A Solution for Long-Only Portfolios](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1680224)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Construct 2 random portfolios, each made of 3 assets\n                value:\n                  assets: 3\n                  portfolios: 2\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 1\n                  type: integer\n                constraints:\n                  properties:\n                    maximumAssetsWeights:\n                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    maximumPortfolioExposure:\n                      default: 1\n                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minimumAssetsWeights:\n                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    minimumPortfolioExposure:\n                      default: 1\n                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                  type: object\n                portfolios:\n                  default: 25\n                  description: The number of portfolios to construct\n                  minimum: 1\n                  type: integer\n              required:\n                - assets\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Constructed 2 random portfolios, each made of 3 assets\n                  value:\n                    portfolios:\n                      - assetsWeights:\n                          - 0.11429744284625785\n                          - 0.0038592674702259393\n                          - 0.8818432896835162\n                      - assetsWeights:\n                          - 0.546026607601722\n                          - 0.07707923859010406\n                          - 0.376894153808174\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        assetsWeights:\n                          description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                          items:\n                            maximum: 1\n                            minimum: 0\n                            type: number\n                          minItems: 1\n                          type: array\n                      required:\n                        - assetsWeights\n                      type: object\n                    minItems: 1\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Random Portfolio\n      tags:\n        - Portfolio Construction\n      x-codegen-request-body-name: body\n  /portfolio/optimization/equal-risk-contributions:\n    post:\n      description: |\n        Compute the assets weights of the equal risk contributions portfolio, optionally subject to:  \n        * Minimum and maximum weights constraints  \n\n        References\n         * [Richard, Jean-Charles and Roncalli, Thierry, Constrained Risk Budgeting Portfolios: Theory, Algorithms, Applications \u0026 Puzzles](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3331184)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the portfolio weights for 2 assets, with maximum assets weights constraints\n                value:\n                  assets: 2\n                  assetsCovarianceMatrix:\n                    - - 0.0025\n                      - 0.0005\n                    - - 0.0005\n                      - 0.01\n                  constraints:\n                    maximumAssetsWeights:\n                      - 0.4\n                      - 1\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n                assetsCovarianceMatrix:\n                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                  items:\n                    items:\n                      type: number\n                    minItems: 2\n                    type: array\n                  minItems: 2\n                  type: array\n                constraints:\n                  properties:\n                    maximumAssetsWeights:\n                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    minimumAssetsWeights:\n                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                  type: object\n              required:\n                - assets\n                - assetsCovarianceMatrix\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed equal risk contributions portfolio of 2 assets\n                  value:\n                    assetsWeights:\n                      - 0.4\n                      - 0.5999975015091795\n              schema:\n                properties:\n                  assetsWeights:\n                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                    items:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsWeights\n                type: object\n          description: OK\n      summary: Equal Risk Contributions Portfolio\n      tags:\n        - Portfolio Optimization\n      x-codegen-request-body-name: body\n  /portfolio/optimization/equal-sharpe-ratio-contributions:\n    post:\n      description: |\n        Compute the assets weights of the equal Sharpe Ratio contributions portfolio.\n\n        References\n         * [Andreas Steiner, Sharpe Ratio Contribution and Attribution Analysis](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1839166\")\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the portfolio weights for 2 assets\n                value:\n                  assets: 2\n                  assetsCovarianceMatrix:\n                    - - 0.05\n                      - 0.02\n                    - - 0.02\n                      - 0.07\n                  assetsReturns:\n                    - 0.05\n                    - 0.1\n                  riskFreeRate: 0\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n                assetsCovarianceMatrix:\n                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                  items:\n                    items:\n                      type: number\n                    minItems: 2\n                    type: array\n                  minItems: 2\n                  type: array\n                assetsReturns:\n                  description: assetsReturns[i] is the arithmetic return of asset i\n                  items:\n                    type: number\n                  minItems: 2\n                  type: array\n                riskFreeRate:\n                  description: The risk free rate\n                  type: number\n              required:\n                - assets\n                - assetsReturns\n                - riskFreeRate\n                - assetsCovarianceMatrix\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed portfolio weights for 2 assets\n                  value:\n                    assetsWeights:\n                      - 0.6666666666666666\n                      - 0.3333333333333333\n              schema:\n                properties:\n                  assetsWeights:\n                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                    items:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsWeights\n                type: object\n          description: OK\n      summary: Equal Sharpe Ratio Contributions Portfolio\n      tags:\n        - Portfolio Optimization\n      x-codegen-request-body-name: body\n  /portfolio/optimization/equal-weighted:\n    post:\n      description: |\n        Compute the assets weights of the equal-weighted portfolio.\n\n        References\n         * [Victor DeMiguel and al., Optimal Versus Naive Diversification: How Inefficient is the 1/N Portfolio Strategy?](https://academic.oup.com/rfs/article-abstract/22/5/1915/1592901?redirectedFrom=fulltext)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the portfolio weights for 2 assets\n                value:\n                  assets: 2\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n              required:\n                - assets\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed equal-weighted portfolio of 2 assets\n                  value:\n                    assetsWeights:\n                      - 0.5\n                      - 0.5\n              schema:\n                properties:\n                  assetsWeights:\n                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                    items:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsWeights\n                type: object\n          description: OK\n      summary: Equal Weighted Portfolio\n      tags:\n        - Portfolio Optimization\n      x-codegen-request-body-name: body\n  /portfolio/optimization/inverse-variance-weighted:\n    post:\n      description: |\n        Compute the assets weights of the inverse variance-weighted portfolio.\n\n        References\n         * [Raul Leote de Carvalho and al., Demystifying Equity Risk-Based Strategies: A Simple Alpha Plus Beta Description](https://doi.org/10.3905/jpm.2012.38.3.056)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the portfolio weights for 2 assets with variances equal to 1 and 0.5\n                value:\n                  assets: 2\n                  assetsVariances:\n                    - 1\n                    - 0.5\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n                assetsVariances:\n                  description: assetsVariances[i] is the variance of the asset i\n                  items:\n                    minimum: 0\n                    type: number\n                  minItems: 2\n                  type: array\n              required:\n                - assets\n                - assetsVariances\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed inverse variance-weighted portfolio of 2 assets\n                  value:\n                    assetsWeights:\n                      - 0.3333333333333333\n                      - 0.6666666666666666\n              schema:\n                properties:\n                  assetsWeights:\n                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                    items:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsWeights\n                type: object\n          description: OK\n      summary: Inverse Variance Weighted Portfolio\n      tags:\n        - Portfolio Optimization\n      x-codegen-request-body-name: body\n  /portfolio/optimization/inverse-volatility-weighted:\n    post:\n      description: |\n        Compute the assets weights of the inverse volatility-weighted portfolio, also known as the naive-risk parity portfolio.\n\n        References\n         * [Raul Leote de Carvalho and al., Demystifying Equity Risk-Based Strategies: A Simple Alpha Plus Beta Description](https://doi.org/10.3905/jpm.2012.38.3.056)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the portfolio weights for 2 assets with volatilities equal to 0.05 and 0.1\n                value:\n                  assets: 2\n                  assetsVolatilities:\n                    - 0.05\n                    - 0.1\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n                assetsVolatilities:\n                  description: assetsVolatilities[i] is the volatility of the asset i\n                  items:\n                    minimum: 0\n                    type: number\n                  minItems: 2\n                  type: array\n              required:\n                - assets\n                - assetsVolatilities\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed inverse volatility-weighted portfolio of 2 assets\n                  value:\n                    assetsWeights:\n                      - 0.6666666666666666\n                      - 0.3333333333333333\n              schema:\n                properties:\n                  assetsWeights:\n                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                    items:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsWeights\n                type: object\n          description: OK\n      summary: Inverse Volatility Weighted Portfolio\n      tags:\n        - Portfolio Optimization\n      x-codegen-request-body-name: body\n  /portfolio/optimization/market-capitalization-weighted:\n    post:\n      description: |\n        Compute the assets weights of the market capitalization-weighted portfolio.\n\n        References\n         * [Wikipedia, Capitalization-weighted Index](https://en.wikipedia.org/wiki/Capitalization-weighted_index)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the portfolio weights for 2 assets with market capitalizations equal to 1 and 2\n                value:\n                  assets: 2\n                  assetsMarketCapitalizations:\n                    - 1\n                    - 2\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n                assetsMarketCapitalizations:\n                  description: assetsMarketCapitalizations[i] is the market capitalization of the asset i\n                  items:\n                    minimum: 0\n                    type: number\n                  minItems: 2\n                  type: array\n              required:\n                - assets\n                - assetsMarketCapitalizations\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed market capitalization-weighted portfolio of 2 assets\n                  value:\n                    assetsWeights:\n                      - 0.3333333333333333\n                      - 0.6666666666666666\n              schema:\n                properties:\n                  assetsWeights:\n                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                    items:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsWeights\n                type: object\n          description: OK\n      summary: Market Capitalization Weighted Portfolio\n      tags:\n        - Portfolio Optimization\n      x-codegen-request-body-name: body\n  /portfolio/optimization/maximum-decorrelation:\n    post:\n      description: |\n        Compute the assets weights of the maximum decorrelation portfolio, optionally subject to:  \n        * Minimum and maximum weights constraints\n        * Maximum group weights constraints\n        * Minimum and maximum portfolio exposure constraints\n\n        References\n         * [F. Goltz, S. Sivasubramanian, Scientific Beta Maximum Decorrelation Indices](http://www.scientificbeta.com/download/file/scientific-beta-max-decorrelation-indices)\n      externalDocs:\n        url: https://docs.portfoliooptimizer.io/#maximum-decorrelation-portfolio\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the portfolio weights for 3 assets\n                value:\n                  assets: 3\n                  assetsCorrelationMatrix:\n                    - - 1\n                      - 0.9\n                      - 0.85\n                    - - 0.9\n                      - 1\n                      - 0.7\n                    - - 0.85\n                      - 0.7\n                      - 1\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n                assetsCorrelationMatrix:\n                  description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j\n                  items:\n                    items:\n                      type: number\n                    minItems: 2\n                    type: array\n                  minItems: 2\n                  type: array\n                assetsReturns:\n                  description: assetsReturns[i] is the arithmetic return of asset i\n                  items:\n                    type: number\n                  minItems: 1\n                  type: array\n                constraints:\n                  properties:\n                    assetsGroups:\n                      items:\n                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix\n                        items:\n                          minimum: 1\n                          type: integer\n                        minItems: 2\n                        type: array\n                        uniqueItems: true\n                      minItems: 1\n                      type: array\n                    assetsGroupsMatrix:\n                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 1\n                      type: array\n                    maximumAssetsGroupsWeights:\n                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided\n                      items:\n                        type: number\n                      type: array\n                    maximumAssetsWeights:\n                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    maximumPortfolioExposure:\n                      default: 1\n                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minimumAssetsWeights:\n                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    minimumPortfolioExposure:\n                      default: 1\n                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                  type: object\n              required:\n                - assets\n                - assetsCorrelationMatrix\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed maximum decorrelation portfolio of 3 assets\n                  value:\n                    assetsWeights:\n                      - 0\n                      - 0.5\n                      - 0.5\n              schema:\n                properties:\n                  assetsWeights:\n                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                    items:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsWeights\n                type: object\n          description: OK\n      summary: Maximum Decorrelation Portfolio\n      tags:\n        - Portfolio Optimization\n      x-codegen-request-body-name: body\n  /portfolio/optimization/maximum-return:\n    post:\n      description: |\n        Compute the assets weights of the maximum return portfolio, optionally subject to:  \n        * Minimum and maximum weights constraints\n        * Maximum group weights constraints\n        * Minimum and maximum portfolio exposure constraints\n\n        References\n         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the portfolio weights for 2 assets, with maximum assets weights constraints\n                value:\n                  assets: 2\n                  assetsReturns:\n                    - 0.02\n                    - 0.01\n                  constraints:\n                    maximumAssetsWeights:\n                      - 0.4\n                      - 1\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n                assetsCovarianceMatrix:\n                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                  items:\n                    items:\n                      type: number\n                    minItems: 2\n                    type: array\n                  minItems: 2\n                  type: array\n                assetsReturns:\n                  description: assetsReturns[i] is the arithmetic return of asset i\n                  items:\n                    type: number\n                  minItems: 1\n                  type: array\n                constraints:\n                  properties:\n                    assetsGroups:\n                      items:\n                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix\n                        items:\n                          minimum: 1\n                          type: integer\n                        minItems: 2\n                        type: array\n                        uniqueItems: true\n                      minItems: 1\n                      type: array\n                    assetsGroupsMatrix:\n                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 1\n                      type: array\n                    maximumAssetsGroupsWeights:\n                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided\n                      items:\n                        type: number\n                      type: array\n                    maximumAssetsWeights:\n                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    maximumPortfolioExposure:\n                      default: 1\n                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minimumAssetsWeights:\n                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    minimumPortfolioExposure:\n                      default: 1\n                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                  type: object\n              required:\n                - assets\n                - assetsReturns\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed maximum return portfolio of 2 assets\n                  value:\n                    assetsWeights:\n                      - 0.4\n                      - 0.6\n              schema:\n                properties:\n                  assetsWeights:\n                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                    items:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsWeights\n                type: object\n          description: OK\n      summary: Maximum Return Portfolio\n      tags:\n        - Portfolio Optimization\n      x-codegen-request-body-name: body\n  /portfolio/optimization/maximum-sharpe-ratio:\n    post:\n      description: |\n        Compute the assets weights of the maximum Sharpe ratio portfolio, optionally subject to:  \n        * Minimum and maximum weights constraints\n        * Maximum group weights constraints\n        * Minimum and maximum portfolio exposure constraints\n\n        References\n         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the portfolio weights for 2 assets with a risk free rate of 0%\n                value:\n                  assets: 2\n                  assetsCovarianceMatrix:\n                    - - 0.05\n                      - 0.02\n                    - - 0.02\n                      - 0.07\n                  assetsReturns:\n                    - 0.05\n                    - 0.1\n                  riskFreeRate: 0\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n                assetsCovarianceMatrix:\n                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                  items:\n                    items:\n                      type: number\n                    minItems: 2\n                    type: array\n                  minItems: 2\n                  type: array\n                assetsReturns:\n                  description: assetsReturns[i] is the arithmetic return of asset i\n                  items:\n                    type: number\n                  minItems: 1\n                  type: array\n                constraints:\n                  properties:\n                    assetsGroups:\n                      items:\n                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix\n                        items:\n                          minimum: 1\n                          type: integer\n                        minItems: 2\n                        type: array\n                        uniqueItems: true\n                      minItems: 1\n                      type: array\n                    assetsGroupsMatrix:\n                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 1\n                      type: array\n                    maximumAssetsGroupsWeights:\n                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided\n                      items:\n                        type: number\n                      type: array\n                    maximumAssetsWeights:\n                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    maximumPortfolioExposure:\n                      default: 1\n                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minimumAssetsWeights:\n                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    minimumPortfolioExposure:\n                      default: 1\n                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                  type: object\n                riskFreeRate:\n                  description: The risk free rate\n                  type: number\n              required:\n                - assets\n                - assetsReturns\n                - assetsCovarianceMatrix\n                - riskFreeRate\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed portfolio weights for 2 assets\n                  value:\n                    assetsWeights:\n                      - 0.27272727272727276\n                      - 0.7272727272727273\n              schema:\n                properties:\n                  assetsWeights:\n                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                    items:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsWeights\n                type: object\n          description: OK\n      summary: Maximum Sharpe Ratio Portfolio\n      tags:\n        - Portfolio Optimization\n      x-codegen-request-body-name: body\n  /portfolio/optimization/mean-variance-efficient:\n    post:\n      description: |\n        Compute the assets weights of a mean-variance efficient portfolio, optionally subject to:  \n        * Minimum and maximum weights constraints\n        * Maximum group weights constraints\n        * Minimum and maximum portfolio exposure constraints\n\n        \u003e A mean-variance efficient portfolio is a portfolio belonging to [the mean-variance efficient frontier](#post-/portfolio/analysis/mean-variance/efficient-frontier).\n\n        References\n         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the portfolio weights for 2 assets with a portfolio return constraint of 15%\n                value:\n                  assets: 2\n                  assetsCovarianceMatrix:\n                    - - 1\n                      - 0.3\n                    - - 0.3\n                      - 1\n                  assetsReturns:\n                    - 0.1\n                    - 0.2\n                  constraints:\n                    portfolioReturn: 0.15\n              Example with group constraints:\n                description: Compute the portfolio weights for 3 assets with a maximum group weights constraint and a portfolio return constraint of 15%\n                value:\n                  assets: 3\n                  assetsCovarianceMatrix:\n                    - - 1\n                      - 0.3\n                      - -0.2\n                    - - 0.3\n                      - 1\n                      - 0.2\n                    - - -0.2\n                      - 0.2\n                      - 1\n                  assetsReturns:\n                    - 0.1\n                    - 0.2\n                    - 0.15\n                  constraints:\n                    assetsGroups:\n                      - - 1\n                        - 2\n                    maximumAssetsGroupsWeights:\n                      - 0.5\n                    portfolioReturn: 0.15\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n                assetsCovarianceMatrix:\n                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                  items:\n                    items:\n                      type: number\n                    minItems: 2\n                    type: array\n                  minItems: 2\n                  type: array\n                assetsReturns:\n                  description: assetsReturns[i] is the arithmetic return of asset i\n                  items:\n                    type: number\n                  minItems: 1\n                  type: array\n                constraints:\n                  properties:\n                    assetsGroups:\n                      items:\n                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix\n                        items:\n                          minimum: 1\n                          type: integer\n                        minItems: 2\n                        type: array\n                        uniqueItems: true\n                      minItems: 1\n                      type: array\n                    assetsGroupsMatrix:\n                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 1\n                      type: array\n                    maximumAssetsGroupsWeights:\n                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided\n                      items:\n                        type: number\n                      type: array\n                    maximumAssetsWeights:\n                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    maximumPortfolioExposure:\n                      default: 1\n                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minimumAssetsWeights:\n                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    minimumPortfolioExposure:\n                      default: 1\n                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    portfolioReturn:\n                      description: The portfolio return; exclusive with portfolioVolatility and riskTolerance\n                      type: number\n                    portfolioVolatility:\n                      description: The portfolio volatility; exclusive with portfolioReturn and riskTolerance\n                      minimum: 0\n                      type: number\n                    riskTolerance:\n                      description: The portfolio risk tolerance; exclusive with portfolioReturn and portfolioVolatility\n                      minimum: 0\n                      type: number\n                  type: object\n              required:\n                - assets\n                - assetsReturns\n                - assetsCovarianceMatrix\n                - constraints\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed mean-variance efficient portfolio of 2 assets\n                  value:\n                    assetsWeights:\n                      - 0.5\n                      - 0.5\n              schema:\n                properties:\n                  assetsWeights:\n                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                    items:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsWeights\n                type: object\n          description: OK\n      summary: Mean-Variance Efficient Portfolio\n      tags:\n        - Portfolio Optimization\n      x-codegen-request-body-name: body\n  /portfolio/optimization/minimum-correlation:\n    post:\n      description: |\n        Compute the assets weights of the (heuristic) minimum correlation portfolio, which is a portfolio built using the Minimum Correlation Algorithm discovered by [David Varadi](https://cssanalytics.wordpress.com/).\n\n        References\n         * [CSSA, Minimum Correlation Algorithm Paper Release](https://cssanalytics.wordpress.com/2012/09/21/minimum-correlation-algorithm-paper-release/)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the portfolio weights for 3 assets\n                value:\n                  assets: 3\n                  assetsCorrelationMatrix:\n                    - - 1\n                      - 0.9\n                      - 0.85\n                    - - 0.9\n                      - 1\n                      - 0.7\n                    - - 0.85\n                      - 0.7\n                      - 1\n                  assetsVolatilities:\n                    - 0.14\n                    - 0.18\n                    - 0.22\n            schema:\n              properties:\n                assets:\n                  minimum: 2\n                  type: integer\n                assetsCorrelationMatrix:\n                  description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j; required if assetsReturns is not provided\n                  items:\n                    items:\n                      type: number\n                    minItems: 2\n                    type: array\n                  minItems: 2\n                  type: array\n                assetsVolatilities:\n                  description: assetsVariances[i] is the volatility of the asset i; required if assetsCorrelationMatrix is provided and assetsVariances is not provided\n                  items:\n                    minimum: 0\n                    type: number\n                  minItems: 2\n                  type: array\n              required:\n                - assets\n                - assetsCorrelationMatrix\n                - assetsVolatilities\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed minimum correlation portfolio portfolio of 3 assets\n                  value:\n                    assetsWeights:\n                      - 0.21059806981924115\n                      - 0.3087866303991204\n                      - 0.48061529978163836\n              schema:\n                properties:\n                  assetsWeights:\n                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                    items:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsWeights\n                type: object\n          description: OK\n      summary: Minimum Correlation Portfolio\n      tags:\n        - Portfolio Optimization\n      x-codegen-request-body-name: body\n  /portfolio/optimization/minimum-variance:\n    post:\n      description: |\n        Compute the assets weights of the minimum variance portfolio, optionally subject to:  \n        * Minimum and maximum weights constraints\n        * Maximum group weights constraints\n        * Minimum and maximum portfolio exposure constraints\n\n        References\n         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the portfolio weights for 2 assets, with maximum assets weights and portfolio exposure constraints\n                value:\n                  assets: 2\n                  assetsCovarianceMatrix:\n                    - - 0.0025\n                      - 0.0005\n                    - - 0.0005\n                      - 0.01\n                  constraints:\n                    maximumAssetsWeights:\n                      - 0.4\n                      - 1\n                    maximumPortfolioExposure: 0.5\n                    minimumPortfolioExposure: 0.5\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n                assetsCovarianceMatrix:\n                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                  items:\n                    items:\n                      type: number\n                    minItems: 2\n                    type: array\n                  minItems: 2\n                  type: array\n                assetsReturns:\n                  description: assetsReturns[i] is the arithmetic return of asset i\n                  items:\n                    type: number\n                  minItems: 1\n                  type: array\n                constraints:\n                  properties:\n                    assetsGroups:\n                      items:\n                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix\n                        items:\n                          minimum: 1\n                          type: integer\n                        minItems: 2\n                        type: array\n                        uniqueItems: true\n                      minItems: 1\n                      type: array\n                    assetsGroupsMatrix:\n                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 1\n                      type: array\n                    maximumAssetsGroupsWeights:\n                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided\n                      items:\n                        type: number\n                      type: array\n                    maximumAssetsWeights:\n                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    maximumPortfolioExposure:\n                      default: 1\n                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minimumAssetsWeights:\n                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    minimumPortfolioExposure:\n                      default: 1\n                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                  type: object\n              required:\n                - assets\n                - assetsCovarianceMatrix\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed minimum variance portfolio of 2 assets\n                  value:\n                    assetsWeights:\n                      - 0.4\n                      - 0.09999999999998999\n              schema:\n                properties:\n                  assetsWeights:\n                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                    items:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsWeights\n                type: object\n          description: OK\n      summary: Minimum Variance Portfolio\n      tags:\n        - Portfolio Optimization\n      x-codegen-request-body-name: body\n  /portfolio/optimization/most-diversified:\n    post:\n      description: |\n        Compute the assets weights of the most diversified portfolio, optionally subject to:  \n        * Minimum and maximum weights constraints\n        * Maximum group weights constraints\n        * Minimum and maximum portfolio exposure constraints\n\n        References\n         * [Yves Choueifaty and Yves Coignard, Toward Maximum Diversification, The Journal of Portfolio Management Fall 2008, 35 (1) 40-51](https://doi.org/10.3905/JPM.2008.35.1.40)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Compute the portfolio weights for 2 assets\n                value:\n                  assets: 2\n                  assetsCovarianceMatrix:\n                    - - 0.04\n                      - 0.01\n                    - - 0.01\n                      - 0.01\n            schema:\n              properties:\n                assets:\n                  description: The number of assets\n                  minimum: 2\n                  type: integer\n                assetsCovarianceMatrix:\n                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j\n                  items:\n                    items:\n                      type: number\n                    minItems: 2\n                    type: array\n                  minItems: 2\n                  type: array\n                constraints:\n                  properties:\n                    assetsGroups:\n                      items:\n                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix\n                        items:\n                          minimum: 1\n                          type: integer\n                        minItems: 2\n                        type: array\n                        uniqueItems: true\n                      minItems: 1\n                      type: array\n                    assetsGroupsMatrix:\n                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups\n                      items:\n                        items:\n                          type: number\n                        minItems: 2\n                        type: array\n                      minItems: 1\n                      type: array\n                    maximumAssetsGroupsWeights:\n                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided\n                      items:\n                        type: number\n                      type: array\n                    maximumAssetsWeights:\n                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    maximumPortfolioExposure:\n                      default: 1\n                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minimumAssetsWeights:\n                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage\n                      items:\n                        maximum: 1\n                        minimum: 0\n                        type: number\n                      type: array\n                    minimumPortfolioExposure:\n                      default: 1\n                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                  type: object\n              required:\n                - assets\n                - assetsCovarianceMatrix\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Computed most diversified portfolio of 2 assets\n                  value:\n                    assetsWeights:\n                      - 0.33333333333333337\n                      - 0.6666666666666666\n              schema:\n                properties:\n                  assetsWeights:\n                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                    items:\n                      maximum: 1\n                      minimum: 0\n                      type: number\n                    minItems: 2\n                    type: array\n                required:\n                  - assetsWeights\n                type: object\n          description: OK\n      summary: Most Diversified Portfolio\n      tags:\n        - Portfolio Optimization\n      x-codegen-request-body-name: body\n  /portfolio/simulation/rebalancing/drift-weight:\n    post:\n      description: |\n        Simulate the evolution of one or several portfolio(s) over one or several time period(s), the portfolio(s) being never rebalanced (a.k.a. buy and hold).\n\n        References\n        * [Hillion, Pierre, The Ex-Ante Rebalancing Premium (March 11, 2016). INSEAD Working Paper No. 2016/15/FIN](https://ssrn.com/abstract=2746471)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Simulate 3 buy and hold portfolios, each made of 3 assets with only one asset invested\n                value:\n                  assets:\n                    - assetPrices:\n                        - 100\n                        - 105\n                        - 110\n                    - assetPrices:\n                        - 15\n                        - 12.5\n                        - 11.25\n                    - assetPrices:\n                        - 0.5\n                        - 0.51\n                        - 0.49\n                  portfolios:\n                    - assetsWeights:\n                        - 1\n                        - 0\n                        - 0\n                    - assetsWeights:\n                        - 0\n                        - 1\n                        - 0\n                    - assetsWeights:\n                        - 0\n                        - 0\n                        - 1\n            schema:\n              properties:\n                assets:\n                  items:\n                    properties:\n                      assetPrices:\n                        description: assetPrices[t] is the price of the asset at the time t\n                        items:\n                          exclusiveMinimum: true\n                          minimum: 0\n                          type: number\n                        minItems: 2\n                        type: array\n                    required:\n                      - assetPrices\n                    type: object\n                  minItems: 1\n                  type: array\n                portfolios:\n                  items:\n                    properties:\n                      assetsWeights:\n                        description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                        items:\n                          maximum: 1\n                          minimum: 0\n                          type: number\n                        minItems: 1\n                        type: array\n                    required:\n                      - assetsWeights\n                    type: object\n                  minItems: 1\n                  type: array\n              required:\n                - assets\n                - assetsPrices\n                - portfolios\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Simulated portfolios over 2 time periods\n                  value:\n                    portfolios:\n                      - portfolioValues:\n                          - 100\n                          - 105\n                          - 110\n                      - portfolioValues:\n                          - 100\n                          - 83.33333333333334\n                          - 75\n                      - portfolioValues:\n                          - 100\n                          - 102\n                          - 98\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        portfolioValues:\n                          description: portfolioValues[t] is the value of the portfolio at the time t\n                          items:\n                            minimum: 0\n                            type: number\n                          type: array\n                      required:\n                        - portfolioValues\n                      type: object\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Drift-weight Portfolio Rebalancing\n      tags:\n        - Portfolio Simulation\n      x-codegen-request-body-name: body\n  /portfolio/simulation/rebalancing/fixed-weight:\n    post:\n      description: |\n        Simulate the evolution of one or several portfolio(s) over one or several time period(s), the portfolio(s) being rebalanced toward fixed weights at the beginning of each time period.\n\n        References\n        * [Hillion, Pierre, The Ex-Ante Rebalancing Premium (March 11, 2016). INSEAD Working Paper No. 2016/15/FIN](https://ssrn.com/abstract=2746471)        \n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Simulate 3 portfolios, each rebalanced toward the provided assets weights at the beginning of each of the 2 time periods\n                value:\n                  assets:\n                    - assetPrices:\n                        - 100\n                        - 105\n                        - 110\n                    - assetPrices:\n                        - 15\n                        - 12.5\n                        - 11.25\n                    - assetPrices:\n                        - 0.5\n                        - 0.51\n                        - 0.49\n                  portfolios:\n                    - assetsWeights:\n                        - 0.5\n                        - 0.5\n                        - 0\n                    - assetsWeights:\n                        - 0\n                        - 0.5\n                        - 0.5\n                    - assetsWeights:\n                        - 0.5\n                        - 0\n                        - 0.5\n            schema:\n              properties:\n                assets:\n                  items:\n                    properties:\n                      assetPrices:\n                        description: assetPrices[t] is the price of the asset at the time t\n                        items:\n                          exclusiveMinimum: true\n                          minimum: 0\n                          type: number\n                        minItems: 2\n                        type: array\n                    required:\n                      - assetPrices\n                    type: object\n                  minItems: 1\n                  type: array\n                portfolios:\n                  items:\n                    properties:\n                      assetsWeights:\n                        description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage\n                        items:\n                          maximum: 1\n                          minimum: 0\n                          type: number\n                        minItems: 1\n                        type: array\n                    required:\n                      - assetsWeights\n                    type: object\n                  minItems: 1\n                  type: array\n              required:\n                - assets\n                - assetsPrices\n                - portfolios\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Simulated portfolios over 2 time periods\n                  value:\n                    portfolios:\n                      - portfolioValues:\n                          - 100\n                          - 94.16666666666667\n                          - 91.70039682539684\n                      - portfolioValues:\n                          - 100\n                          - 92.66666666666667\n                          - 86.21633986928106\n                      - portfolioValues:\n                          - 100\n                          - 103.5\n                          - 103.93487394957984\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        portfolioValues:\n                          description: portfolioValues[t] is the value of the portfolio at the time t\n                          items:\n                            minimum: 0\n                            type: number\n                          type: array\n                      required:\n                        - portfolioValues\n                      type: object\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Fixed-weight Portfolio Rebalancing\n      tags:\n        - Portfolio Simulation\n      x-codegen-request-body-name: body\n  /portfolio/simulation/rebalancing/random-weight:\n    post:\n      description: |\n        Simulate the evolution of one or several portfolio(s) over one or several time period(s), the portfolio(s) being rebalanced toward random weights at the beginning of each time period.\n\n        References\n        * [R Stein, Not fooled by randomness: Using random portfolios to analyse investment funds, Investment Analysts Journal, 43:79, 1-15, DOI: 10.1080/10293523.2014.11082564](https://www.tandfonline.com/doi/abs/10.1080/10293523.2014.11082564)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                description: Simulate 2 portfolios each rebalanced toward random assets weights at the beginning of each of the 2 time periods\n                value:\n                  assets:\n                    - assetPrices:\n                        - 100\n                        - 105\n                        - 110\n                    - assetPrices:\n                        - 15\n                        - 12.5\n                        - 11.25\n                    - assetPrices:\n                        - 0.5\n                        - 0.51\n                        - 0.49\n                  portfolios: 2\n            schema:\n              properties:\n                assets:\n                  items:\n                    properties:\n                      assetPrices:\n                        description: assetPrices[t] is the price of the asset at the time t\n                        items:\n                          exclusiveMinimum: true\n                          minimum: 0\n                          type: number\n                        minItems: 2\n                        type: array\n                    required:\n                      - assetPrices\n                    type: object\n                  minItems: 1\n                  type: array\n                portfolios:\n                  default: 25\n                  description: The number of portfolios to simulate\n                  minimum: 1\n                  type: integer\n              required:\n                - assets\n                - assetsPrices\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Example:\n                  description: Simulated portfolios over 2 time periods\n                  value:\n                    portfolios:\n                      - portfolioValues:\n                          - 100\n                          - 90.8178403620342\n                          - 84.65407625993741\n                      - portfolioValues:\n                          - 100\n                          - 102.43258698946813\n                          - 101.32419718013273\n              schema:\n                properties:\n                  portfolios:\n                    items:\n                      properties:\n                        portfolioValues:\n                          description: portfolioValues[t] is the value of the portfolio at the time t\n                          items:\n                            minimum: 0\n                            type: number\n                          type: array\n                      required:\n                        - portfolioValues\n                      type: object\n                    type: array\n                required:\n                  - portfolios\n                type: object\n          description: OK\n      summary: Random-weight Portfolio Rebalancing\n      tags:\n        - Portfolio Simulation\n      x-codegen-request-body-name: body\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      description: |\n        An [API key](#overview--api-key) is required to benefit from [higher API limits](#overview--api-limits).\n      in: header\n      name: X-API-Key\n      type: apiKey\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/portfoliooptimizer.io/1.0.9/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/portfoliooptimizer.io/1.0.9/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/assets/volatility\": post: requestBody: contents: application/json: generate schema: oneOf: oneOf AssetsVolatilityPostReq: variant AssetsVolatilityPostReq2: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}