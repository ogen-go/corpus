{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/galasa-dev/framework"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 19122,
			"content": "#\n# Licensed Materials - Property of IBM\n# \n# (c) Copyright IBM Corp. 2021.\n#\nopenapi: 3.0.3\ninfo:\n  title: Galasa Ecosystem API\n  version: 0.17.0\n\nservers:\n  - url: '/'\n  - url: 'http://{server}:{port}'\n    variables:\n      server:\n        default: localhost\n      port:\n        default: \"8080\"\n\npaths:\n##################################################################################\n# CPS API\n##################################################################################\n  /cps/namespace:\n    get:\n      operationId: getCpsNamespaces\n      summary: Get CPS Namespaces\n      tags: \n      - Configuration Property Store API\n      responses:\n        '200':\n          description: Array of CPS Namespaces\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonError'\n  /cps/namespace/{namespace}:\n    get:\n      operationId: getCpsNamespaceProperties\n      summary: Get all properties for a namepace\n      tags: \n      - Configuration Property Store API\n      parameters:\n        - name: namespace\n          in: path\n          description: Property Namespace\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Array of CPS Properties\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CpsProperty'\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonError'\n  /cps/namespace/{namespace}/prefix/{prefix}/suffix/{suffix}:\n    get:\n      operationId: getCpsNamespaceCascadeProperty\n      summary: Get cascade CPS property\n      tags: \n      - Configuration Property Store API\n      parameters:\n      - name: namespace\n        in: path\n        description: Property Namespace\n        required: true\n        schema:\n          type: string\n      - name: prefix\n        in: path\n        description: Property Prefix\n        required: true\n        schema:\n          type: string\n      - name: suffix\n        in: path\n        description: Property Suffix\n        required: true\n        schema:\n          type: string\n      - name: infixes\n        in: query\n        description: Property Infixes\n        schema:\n          type: array\n          items:\n            type: string\n      responses:\n        '200':\n          description: CPS Property\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CpsProperty'\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonError'\n  /cps/namespace/{namespace}/property/{property}:\n    put:\n      operationId: putCpsNamespaceProperty\n      summary: Put new CPS Property\n      tags: \n      - Configuration Property Store API\n      parameters:\n      - name: namespace\n        in: path\n        description: Property Namespace\n        required: true\n        schema:\n          type: string\n      - name: property\n        in: path\n        description: Property Name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CpsProperty'\n      responses:\n        '200':\n          description: CPS Property\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CpsProperty'\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonError'\n##################################################################################\n# RAS API\n##################################################################################\n  /ras/requestors:\n    get:\n      operationId: getRasRequestors\n      summary: Get all known requestors\n      tags: \n      - Result Archive Store API\n      parameters:\n        - name: sort\n          in: query\n          description: provides sorting, requestor:asc or requestor:desc\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Requestors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Requestors'\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonError'\n  /ras/runname/{runname}:\n    get:\n      operationId: getRasRunIDsByName\n      summary: Get all Run Ids from a Run Name\n      tags: \n      - Result Archive Store API\n      parameters:\n        - name: runname\n          in: path\n          description: Run Name\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Array of Run Ids\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonError'\n  /ras/run/{runid}:\n    get:\n      operationId: getRasRunById\n      summary: Get Run by ID\n      tags: \n      - Result Archive Store API\n      parameters:\n        - name: runid\n          in: path\n          description: Run Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Run Data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Run'\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonError'\n  /ras/run/{runid}/artifact/{artifactid}:\n    get:\n      operationId: getRasRunArtifactById\n      summary: Get Run Artifact by IDs\n      tags: \n      - Result Archive Store API\n      parameters:\n        - name: runid\n          in: path\n          description: Run Id\n          required: true\n          schema:\n            type: string\n        - name: artifactid\n          in: path\n          description: Run Artifact Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Artifact Content\n          content:\n            text/plain:\n              schema:\n                type: string\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonError'\n  /ras/run:\n    get:\n      operationId: getRasSearchRuns\n      summary: Get Runs from Query\n      tags: \n      - Result Archive Store API\n      parameters:\n        - name: sort\n          in: query\n          description: provides sorting, to:asc or to:desc\n          schema: \n            type: string\n        - name: result\n          in: query\n          description: Result Name\n          schema:\n            type: string\n        - name: bundle\n          in: query\n          description: Bundle Name\n          schema:\n            type: string\n        - name: requestor\n          in: query\n          description: Requestor Name\n          schema:\n            type: string\n        - name: from\n          in: query\n          description: Date Number From\n          schema:\n            type: string\n            format: date-time\n        - name: to\n          in: query\n          description: Date Number To\n          schema:\n            type: string\n            format: date-time\n        - name: testname\n          in: query\n          description: Test Class Name\n          schema:\n            type: string\n        - name: page\n          in: query\n          description: Page Number\n          schema:\n            type: number\n        - name: size\n          in: query\n          description: Request Size\n          schema:\n            type: number\n        - name: runId\n          in: query\n          description: Run ID\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Array of Run Objects\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RunResults'\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonError'\n  /ras/run/{runid}/runlog:\n    get:\n      operationId: getRasRunLog\n      summary: Get Run Log\n      tags: \n      - Result Archive Store API\n      parameters:\n        - name: runid\n          in: path\n          description: Run Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Run Data\n          content:\n            text/plain:\n              schema:\n                type: string\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonError'\n  /ras/testclasses:\n    get:\n      operationId: getRasTestclasses\n      summary: Get all the known test classes\n      tags: \n      - Result Archive Store API\n      parameters:\n        - name: sort\n          in: query\n          description: Provide Sorting \n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: TestClasses\n          content:\n            application/json:  \n             schema:\n                $ref: '#/components/schemas/TestClasses'\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonError'\n  /ras/resultnames:\n    get:\n      operationId: getRasResultNames\n      summary: Get all the known result names\n      tags: \n      - Result Archive Store API\n      parameters:\n        - name: sort\n          in: query\n          description: provides sorting, results:asc or results:desc\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ResultNames\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResultNames'\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonError'\n##################################################################################\n# Runs API\n##################################################################################\n  /runs/{groupId}:\n    get:\n      summary: Get group runs\n      operationId: getRunsGroup\n      tags: \n      - Runs API\n      parameters:\n        - name: groupId\n          in: path\n          description: Run Group ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Run Info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestRuns'\n    post:\n      summary: Sumbit test runs\n      operationId: postSubmitTestRuns\n      tags: \n      - Runs API\n      parameters:\n        - name: groupId\n          in: path\n          description: Run Group ID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestRunRequest'\n      responses:\n        '200':\n          description: Test Submitted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestRuns'\n##################################################################################\n# WebUI API\n##################################################################################\n  /webui/worklist:\n    get:\n      operationId: getWebuiWorklist\n      summary: Get the users Worklist\n      tags: \n        - WebUI Worklist API\n      responses:\n        '200':\n          description: Array of Worklist objects\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Worklist'\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonError'\n\n    put:\n      operationId: addWebuiWorklistRunId\n      summary: Add RAS runId to Worklist\n      tags: \n        - WebUI Worklist API\n      parameters: \n        - name: runId\n          in: query\n          description: Run ID\n          required: true\n          schema:\n            type: string\n      responses: \n        '200':\n          description: Run added to Worklist and updated Worklist returned\n          content: \n            application/json:\n              schema:\n                $ref: '#/components/schemas/Worklist'\n        '404':\n          description: Run not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonError'\n\n    delete:\n      operationId: deleteWebuiWorklistRunId\n      tags: \n        - WebUI Worklist API\n      summary: Remove RAS runId from Worklist\n      parameters:\n        - name: runId\n          in: query\n          description: Run Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Run removed from Worklist and updated Worklist returned\n          content: \n            application/json:\n              schema:\n                $ref: '#/components/schemas/Worklist'\n        '404':\n          description: Run not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonError'\n##################################################################################\n# Components\n##################################################################################\ncomponents:\n  schemas:\n    CpsProperty:\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n    JsonError:\n      properties:\n        error:\n          type: string\n    TestRuns:\n      properties:\n        complete:\n          type: boolean\n        runs:\n          type: array\n          items:\n            $ref: '#/components/schemas/TestRun'\n    TestRun:\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        group:\n          type: string\n        test:\n          type: string\n        bundleName:\n          type: string\n        testName:\n          type: string\n        status:\n          type: string\n        result:\n          type: string\n        queued:\n          type: string\n        requestor:\n          type: string\n        stream:\n          type: string\n        repo:\n          type: string\n        obr:\n          type: string\n        rerun:\n          type: boolean\n        rerunReason:\n          type: string\n        local:\n          type: boolean\n        trace:\n          type: boolean\n        rasRunId:\n          type: string\n    TestRunRequest:\n      properties:\n        classNames:\n          type: array\n          items:\n            type: string\n        requestorType:\n          type: string\n        requestor:\n          type: string\n        testStream:\n          type: string\n        obr:\n          type: string\n        mavenRepository:\n          type: string\n        sharedEnvironmentPhase:\n          type: string\n        sharedEnvironmentRunName:\n          type: string\n        overrides:\n          type: object\n        trace:\n          type: boolean\n    Requestors:\n      type: object\n      properties:\n        requestors:\n          type: array\n          items:\n            type: string\n    TestStructure:\n      type: object\n      properties:\n        runName:\n          type: string\n        bundle:\n          type: string\n        testName:\n          type: string\n        testShortName:\n          type: string\n        requestor:\n          type: string\n        status:\n          type: string\n        result:\n          type: string\n        queued:\n          type: string\n        startTime:\n          type: string\n        endTime:\n          type: string\n        methods:\n          type: array\n          items:\n            $ref: '#/components/schemas/TestMethod'\n    TestMethod:\n      type: object\n      properties:\n        className:\n          type: string\n        methodName:\n          type: string\n        type:\n          type: string\n        status:\n          type: string\n        result:\n          type: string\n        startTime:\n          type: string\n        endTime:\n          type: string\n        runLogStart:\n          type: integer\n        runLogEnd:\n          type: integer\n        befores:\n          type: array\n          items:\n            $ref: '#/components/schemas/TestMethod'\n        afters:\n          type: array\n          items:\n            $ref: '#/components/schemas/TestMethod'\n    Artifact:\n      properties:\n        artifactPath:\n          type: string\n        contentType:\n          type: string\n    TestClasses:\n      type : object\n      properties:\n        testclasses:\n          type: array\n          items: \n            $ref: '#/components/schemas/TestClass'\n    TestClass:\n      type: object\n      properties:\n        testclass: \n           type: string\n        bundle:\n           type: string\n    ResultNames:\n      type: object\n      properties:\n        resultnames:\n          type: array\n          items:\n            type: string\n    Run:\n      type: object\n      properties:\n        runId:\n          type: string\n        testStructure:\n          $ref: '#/components/schemas/TestStructure'\n        artifacts:\n          type: array\n          items:\n            $ref: '#/components/schemas/Artifact'\n    RunResults:\n      type: object\n      properties:\n        pageNumber:\n          type: integer\n        pageSize:\n          type: integer\n        numPages:\n          type: integer\n        amountOfRuns:\n          type: integer\n        runs:\n          type: array\n          items:\n            $ref: '#/components/schemas/Run'\n    Worklist:\n      type: object\n      properties:\n        worklistItems:\n          type: array\n          items: \n            $ref: '#/components/schemas/WorklistItem'\n    WorklistItem:\n      type: object\n      properties:\n        runId:\n          type: string\n        runName:\n          type: string\n        shortName:\n          type: string\n        testClass:\n          type: string\n        result:\n          type: string\n",
			"canonicalURL": "/github.com/galasa-dev/framework@c507aad61df38c2eee5bd0087bb9f036b64b970d/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/galasa-dev/framework/blob/c507aad61df38c2eee5bd0087bb9f036b64b970d/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/ras/run/{runid}/runlog\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}