{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/godaddy.shopper/openapi.yml",
			"byteSize": 39179,
			"content": "openapi: 3.0.1\ninfo:\n  x-ballerina-display:\n    label: GoDaddy Shopper\n    iconPath: \"icon.png\"\n  title: GoDaddy Shopper API\n  version: v1\n  description: \u003e-\n    This is a generated connector for [GoDaddy Shoppers API v1](https://developer.godaddy.com/doc/endpoint/shoppers) OpenAPI specification.\n    The GoDaddy Shoppers API provides capability to access GoDaddy operations related to shopper.\n  x-ballerina-init-description: \u003e-\n    The connector initialization requires setting the API credentials. \n    Create a [GoDaddy](https://sg.godaddy.com/) and obtain tokens by following [this guide](https://developer.godaddy.com/getstarted).  \nservers:\n  - url: https://api.ote-godaddy.com/\ntags:\n  - name: v1\n    description: ''\npaths:\n  /v1/shoppers/subaccount:\n    post:\n      tags:\n        - v1\n      summary: Create a Subaccount owned by the authenticated Reseller\n      operationId: createSubaccount\n      requestBody:\n        description: The subaccount to create\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubaccountCreate'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/SubaccountCreate'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/SubaccountCreate'\n        required: true\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShopperId'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ShopperId'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ShopperId'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ShopperId'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ShopperId'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: '`subaccount` does not fulfill the schema'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: subaccount\n  /v1/shoppers/{shopperId}:\n    get:\n      tags:\n        - v1\n      summary: Get details for the specified Shopper\n      description: \u003e-\n        \u003cstrong\u003eNotes:\u003c/strong\u003e\u003cul\u003e\u003cli\u003e**shopperId** is **not the same** as\n        **customerId**.  **shopperId** is a number of max length 10 digits\n        (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:*\n        295e3bc3-b3b9-4d95-aae5-ede41a994d13)\u003c/li\u003e\u003c/ul\u003e\n      operationId: get\n      parameters:\n        - name: shopperId\n          in: path\n          description: Shopper whose details are to be retrieved\n          required: true\n          schema:\n            type: string\n        - name: includes\n          in: query\n          description: Additional properties to be included in the response shopper object\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - customerId\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Shopper'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Shopper'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Shopper'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Shopper'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Shopper'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n        - v1\n      summary: Update details for the specified Shopper\n      description: \u003e-\n        \u003cstrong\u003eNotes:\u003c/strong\u003e\u003cul\u003e\u003cli\u003e**shopperId** is **not the same** as\n        **customerId**.  **shopperId** is a number of max length 10 digits\n        (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:*\n        295e3bc3-b3b9-4d95-aae5-ede41a994d13)\u003c/li\u003e\u003c/ul\u003e\n      operationId: update\n      parameters:\n        - name: shopperId\n          in: path\n          description: The ID of the Shopper to update\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: The Shopper details to update\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ShopperUpdate'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/ShopperUpdate'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ShopperUpdate'\n        required: true\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShopperId'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ShopperId'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ShopperId'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ShopperId'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ShopperId'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: '`Shopper` does not fulfill the schema'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: shopper\n    delete:\n      tags:\n        - v1\n      summary: Request the deletion of a shopper profile\n      description: \u003e-\n        \u003cstrong\u003eNotes:\u003c/strong\u003e\u003cul\u003e\u003cli\u003eShopper deletion is not supported in\n        OTE\u003c/li\u003e\u003cli\u003e**shopperId** is **not the same** as **customerId**. \n        **shopperId** is a number of max length 10 digits (*ex:* 1234567890)\n        whereas **customerId** is a UUIDv4 (*ex:*\n        295e3bc3-b3b9-4d95-aae5-ede41a994d13)\u003c/li\u003e\u003c/ul\u003e\n      operationId: delete\n      parameters:\n        - name: shopperId\n          in: path\n          description: \u003e-\n            The ID of the shopper to delete. Must agree with the shopper id on\n            the token or header, if present. *Note*: **shopperId** is **not the\n            same** as **customerId**.  **shopperId** is a number of max length\n            10 digits (*ex:* 1234567890) whereas **customerId** is a UUIDv4\n            (*ex:* 295e3bc3-b3b9-4d95-aae5-ede41a994d13)\n          required: true\n          schema:\n            maxLength: 10\n            type: string\n        - name: auditClientIp\n          in: query\n          description: \u003e-\n            The client IP of the user who originated the request leading to this\n            call.\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Request was successful\n          content: {}\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: Active and locked shoppers cannot be deleted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Shopper ID is not supplied or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v1/shoppers/{shopperId}/status:\n    get:\n      tags:\n        - v1\n      summary: Get details for the specified Shopper\n      description: \u003e-\n        \u003cstrong\u003eNotes:\u003c/strong\u003e\u003cul\u003e\u003cli\u003e**shopperId** is **not the same** as\n        **customerId**. **shopperId** is a number of max length 10 digits (*ex:*\n        1234567890) whereas **customerId** is a UUIDv4 (*ex:*\n        295e3bc3-b3b9-4d95-aae5-ede41a994d13)\u003c/li\u003e\u003c/ul\u003e\n      operationId: getStatus\n      parameters:\n        - name: shopperId\n          in: path\n          description: \u003e-\n            The ID of the shopper to retrieve. Must agree with the shopper id on\n            the token or header, if present\n          required: true\n          schema:\n            maxLength: 10\n            type: string\n        - name: auditClientIp\n          in: query\n          description: \u003e-\n            The client IP of the user who originated the request leading to this\n            call.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShopperStatus'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ShopperStatus'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ShopperStatus'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ShopperStatus'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ShopperStatus'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Shopper ID is not supplied or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v1/shoppers/{shopperId}/factors/password:\n    put:\n      tags:\n        - v1\n      summary: Set subaccount's password\n      description: \u003e-\n        \u003cstrong\u003eNotes:\u003c/strong\u003e\u003cul\u003e\u003cli\u003ePassword set is only supported by API\n        Resellers setting subaccount passwords.\u003c/li\u003e\u003cli\u003e**shopperId** is **not\n        the same** as **customerId**.  **shopperId** is a number of max length\n        10 digits (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:*\n        295e3bc3-b3b9-4d95-aae5-ede41a994d13)\u003c/li\u003e\u003c/ul\u003e\n      operationId: changePassword\n      parameters:\n        - name: shopperId\n          in: path\n          description: Shopper whose password will be set\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: The value to set the subaccount's password to\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Secret'\n        required: true\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShopperId'\n        '400':\n          description: Request was not successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordError'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: secret\nsecurity:\n  - ApiKeyAuth: []\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:       \n      type: apiKey\n      in: header  \n      name: Authorization\n      description: Represents API Key 'Authorization'\n  schemas:\n    Error:\n      required:\n        - code\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        fields:\n          type: array\n          description: \u003e-\n            List of the specific fields, and the errors found with their\n            contents\n          items:\n            $ref: '#/components/schemas/ErrorField'\n        message:\n          type: string\n          description: Human-readable, English description of the error\n    ErrorField:\n      required:\n        - code\n        - path\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        message:\n          type: string\n          description: \u003e-\n            Human-readable, English description of the problem with the contents\n            of the field\n        path:\n          type: string\n          description: \u003e-\n            \u003cul\u003e\n\n            \u003cli style='margin-left: 12px;'\u003eJSONPath referring to a field\n            containing an error\u003c/li\u003e\n\n            \u003cstrong style='margin-left: 12px;'\u003eOR\u003c/strong\u003e\n\n            \u003cli style='margin-left: 12px;'\u003eJSONPath referring to a field that\n            refers to an object containing an error, with more detail in\n            `pathRelated`\u003c/li\u003e\n\n            \u003c/ul\u003e\n          format: json-path\n        pathRelated:\n          type: string\n          description: \u003e-\n            JSONPath referring to a field containing an error, which is\n            referenced by `path`\n          format: json-path\n    ErrorLimit:\n      required:\n        - code\n        - retryAfterSec\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        fields:\n          type: array\n          description: \u003e-\n            List of the specific fields, and the errors found with their\n            contents\n          items:\n            $ref: '#/components/schemas/ErrorField'\n        message:\n          type: string\n          description: Human-readable, English description of the error\n        retryAfterSec:\n          type: integer\n          description: Number of seconds to wait before attempting a similar request\n          format: integer-positive\n    Shopper:\n      required:\n        - email\n        - marketId\n        - nameFirst\n        - nameLast\n        - shopperId\n      type: object\n      properties:\n        customerId:\n          type: string\n          description: \u003e-\n            Identifier for the Customer record associated with this Shopper\n            record. This is an alternate identifier that some systems use to\n            identify an individual shopper record\n        email:\n          type: string\n          format: email\n        externalId:\n          type: integer\n        marketId:\n          type: string\n          format: bcp-47\n          default: en-US\n        nameFirst:\n          type: string\n        nameLast:\n          type: string\n        shopperId:\n          type: string\n    ShopperId:\n      required:\n        - shopperId\n      type: object\n      properties:\n        customerId:\n          type: string\n          description: \u003e-\n            Identifier for the Customer record associated with this Shopper\n            record. This is an alternate identifier that some systems use to\n            identify an individual shopper record\n        shopperId:\n          type: string\n    ShopperStatus:\n      type: object\n      properties:\n        billingState:\n          type: string\n          description: \u003e-\n            Indicates the billing state of the Shopper.\u003cbr /\u003eABANDONED: The\n            shopper has not been billed in at least 10 years and has no active\n            subscriptions.\u003cbr /\u003eINACTIVE: The shopper has been billed within the\n            last 10 years but has no active subscriptions.\u003cbr /\u003eACTIVE: The\n            shopper has at least one active subscription.\n          enum:\n            - ABANDONED\n            - INACTIVE\n            - ACTIVE\n    ShopperUpdate:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n        externalId:\n          type: integer\n        marketId:\n          maxLength: 50\n          type: string\n          format: bcp-47\n          enum:\n            - da-DK\n            - de-AT\n            - de-CH\n            - de-DE\n            - el-GR\n            - en-AE\n            - en-AU\n            - en-CA\n            - en-GB\n            - en-HK\n            - en-IE\n            - en-IL\n            - en-IN\n            - en-MY\n            - en-NZ\n            - en-PH\n            - en-PK\n            - en-SG\n            - en-US\n            - en-ZA\n            - es-AR\n            - es-CL\n            - es-CO\n            - es-ES\n            - es-MX\n            - es-PE\n            - es-US\n            - es-VE\n            - fi-FI\n            - fr-BE\n            - fr-CA\n            - fr-CH\n            - fr-FR\n            - hi-IN\n            - id-ID\n            - it-CH\n            - it-IT\n            - ja-JP\n            - ko-KR\n            - mr-IN\n            - nb-NO\n            - nl-BE\n            - nl-NL\n            - pl-PL\n            - pt-BR\n            - pt-PT\n            - ru-RU\n            - sv-SE\n            - ta-IN\n            - th-TH\n            - tr-TR\n            - uk-UA\n            - vi-VN\n            - zh-HK\n            - zh-SG\n            - zh-TW\n        nameFirst:\n          type: string\n        nameLast:\n          type: string\n    SubaccountCreate:\n      required:\n        - email\n        - nameFirst\n        - nameLast\n        - password\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n        externalId:\n          type: integer\n        marketId:\n          maxLength: 50\n          type: string\n          format: bcp-47\n          default: en-US\n          enum:\n            - da-DK\n            - de-AT\n            - de-CH\n            - de-DE\n            - el-GR\n            - en-AE\n            - en-AU\n            - en-CA\n            - en-GB\n            - en-HK\n            - en-IE\n            - en-IL\n            - en-IN\n            - en-MY\n            - en-NZ\n            - en-PH\n            - en-PK\n            - en-SG\n            - en-US\n            - en-ZA\n            - es-AR\n            - es-CL\n            - es-CO\n            - es-ES\n            - es-MX\n            - es-PE\n            - es-US\n            - es-VE\n            - fi-FI\n            - fr-BE\n            - fr-CA\n            - fr-CH\n            - fr-FR\n            - hi-IN\n            - id-ID\n            - it-CH\n            - it-IT\n            - ja-JP\n            - ko-KR\n            - mr-IN\n            - nb-NO\n            - nl-BE\n            - nl-NL\n            - pl-PL\n            - pt-BR\n            - pt-PT\n            - ru-RU\n            - sv-SE\n            - ta-IN\n            - th-TH\n            - tr-TR\n            - uk-UA\n            - vi-VN\n            - zh-HK\n            - zh-SG\n            - zh-TW\n        nameFirst:\n          type: string\n        nameLast:\n          type: string\n        password:\n          type: string\n          format: shopper-password\n    Secret:\n      type: object\n      properties:\n        secret:\n          type: string\n          description: The secret value used to set a subaccount's password\n          example: P@55w0rd+\n    PasswordError:\n      type: object\n      properties:\n        type:\n          type: string\n          description: Response type, always 'error'\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n          enum:\n            - PW_BLACK_LIST\n            - PW_TOO_SHORT\n            - PW_TOO_LONG\n            - PW_MISSING_UC\n            - PW_MISSING_NUM\n            - PW_RECENTLY_USED\n            - PW_NOT_UNIQUE\n        message:\n          type: string\n          description: Human-readable, English description of the error\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/godaddy.shopper/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/godaddy.shopper/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/shoppers/subaccount\": post: requestBody: contents: application/json: generate schema: field marketId: primitive: format \"bcp-47\": enum format not implemented",
	"NotImplemented": [
		"enum format"
	]
}