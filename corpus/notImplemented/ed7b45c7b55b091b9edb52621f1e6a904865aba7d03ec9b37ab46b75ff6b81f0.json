{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/saps4hana.wls.screeninghits/openapi.yml",
			"byteSize": 11598,
			"content": "openapi: 3.0.1\ninfo:\n  title: Screening Hits\n  description: \u003e-\n    This is a generated connector for [SAPS4HANA SAP Watch List Screening Hits API v1.7](https://api.sap.com/api/ScreeningHits/resource) OpenAPI specification. \n\n    This microservice manages Screening Hits created by the Screening\n    microservice and enables users to decide whether they are true matches or\n    false positives. The Screening Hits are grouped in Screening Hit\n    Collections. The Screening Hit Collection refers to a Business Context e.g.\n    a Sales Order and contains one or more Screened Addresses.\n  version: '1.7'\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n\n    Create and configure an OAuth2 client credentials by following [this guide](https://help.sap.com/viewer/b865ed651e414196b39f8922db2122c7/LATEST/en-US/7aefa21a65f94b25b7e639c3931b6f83.html).\n  x-ballerina-display:\n    label: SAPS4HANA Watch List Screening Hits\n    iconPath: \"icon.png\"\nexternalDocs:\n  description: Business Documentation\n  url: https://help.sap.com/wls\n# servers:\n#   - url: https://hostname/grc/watchlistScreening/screeningHits/v1\nsecurity:\n  - OAuth2:\n      - ReadScreeningHit\n      - EditBusinessContext\n      - DeleteScreeningHit\n      - LogicallyDeleteScreeningHit\npaths:\n  /screeningDecisions:\n    get:\n      tags:\n        - Screening Decisions\n      summary: \u003e-\n        With the parameter screeningRequestKey as input, this API provides the\n        current decision status of a ScreeningHitCollection. This is essential\n        for either blocking or releasing the business transaction.\n      operationId: get\n      parameters:\n        - name: $filter\n          in: query\n          description: \u003e-\n            Filter containing the UUID of the screening request, for example\n            `screeningRequestKey eq 'be9828a4-6992-11e8-adc0-fa7ae01bbebc'`\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Screening Decisions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScreeningDecisions'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Screening request not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /screeningHitCollections:\n    put:\n      tags:\n        - Screening Hit Collections\n      summary: \u003e-\n        In some cases, you may want to post the initial screening request\n        without the businessContext and add it later on. For example, when you\n        screen your business document before it has been persisted, it may not\n        have a documentId yet, and you may want to amend that once saving has\n        been completed. PUT the /screeningHitCollections resource with the\n        screeningRequestKey received in response to the screeningRequest to set\n        the businessContext.\n      operationId: put\n      parameters:\n        - name: screeningRequestKey\n          in: query\n          description: UUID of the screening request\n          required: true\n          schema:\n            maxLength: 255\n            type: string\n      requestBody:\n        description: Business context\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BusinessContext'\n        required: true\n      responses:\n        '200':\n          description: Business context in the screening hit collection updated\n          content: {}\n        '400':\n          description: Bad request\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Screening request not found\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: Invalid assumptions\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n        - Screening Hit Collections\n      summary: \u003e-\n        To remove old screening hits whose business purpose is fullfilled, you\n        need to delete screeningHitCollections that are older than the effective\n        date and also have the status `Completed`. Use the query parameter\n        logicalDelete to remove the hits physically from storage\n        (logicalDelete=false) or only logically (logicalDelete=true), meaning\n        they are still there but no longer displayed in the user interfaces.\n      operationId: Delete\n      parameters:\n        - name: date\n          in: query\n          description: \u003e-\n            Screening hits created before this date are deleted (effective date,\n            format YYYY-MM-DD (ISO8601) in UTC).\n          required: true\n          schema:\n            maxLength: 10\n            type: string\n        - name: logicalDelete\n          in: query\n          description: Screening hits are logically deleted\n          required: true\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Deletion successful\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DeletionResult'\n        '400':\n          description: Bad request\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '423':\n          description: Locked\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n  /businessPartnerData:\n    get:\n      tags:\n        - Business Partner Data\n      summary: Get Business Partner Data\n      operationId: getBPData\n      parameters:\n        - name: name\n          in: query\n          description: Name of the business partner\n          required: true\n          schema:\n            maxLength: 255\n            type: string\n        - name: street\n          in: query\n          description: Street\n          schema:\n            maxLength: 255\n            type: string\n        - name: city\n          in: query\n          description: City\n          schema:\n            maxLength: 255\n            type: string\n        - name: countryISOCode\n          in: query\n          description: Country ISO Code\n          schema:\n            maxLength: 2\n            type: string\n        - name: postalCode\n          in: query\n          description: Postal Code\n          schema:\n            maxLength: 255\n            type: string\n        - name: logicalDeleteIncluded\n          in: query\n          description: Include logically deleted business partners\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '200':\n          description: Business Partner\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BusinessPartners'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  schemas:\n    ScreeningDecisions:\n      type: array\n      description: Screening Decisions\n      items:\n        $ref: '#/components/schemas/ScreeningDecision'\n    ScreeningDecision:\n      type: object\n      properties:\n        inputKey:\n          maxLength: 255\n          type: string\n          description: Externally provided Key of Business Partner Input\n        status:\n          maxLength: 1\n          type: string\n          description: \u003e-\n            Screening Hit Decision [ N - No Hit, C - Confirmed Hit, P - Possible\n            Hit]\n          enum:\n            - 'N'\n            - C\n            - P\n    BusinessContext:\n      type: object\n      properties:\n        businessSystem:\n          maxLength: 255\n          type: string\n          description: Business System\n        businessObjectType:\n          maxLength: 255\n          type: string\n          description: \u003e-\n            The type of business object whose business partners are screened.\n            Possible values are `SO` for _Sales Order_, `OD` for _Outbound\n            Delivery_, `PO` for _Purchase Order_, `PC` for _Purchase Contract_,\n            `PA` for _Purchase Scheduling Agreement_, `SC` for _Sales Contract_,\n            `SA` for _Sales Scheduling Agreement_, `APMPAYMENTREQUEST` for\n            _Payment_, `SQ` for _Sales Quotation_, `ID` for _Inbound Delivery_\n            and `PR` for _Purchase Requisition_.\n          enum:\n            - SO\n            - OD\n            - PO\n            - PC\n            - PA\n            - SC\n            - SA\n            - APMPAYMENTREQUEST\n            - SQ\n            - ID\n            - PR\n        documentId:\n          maxLength: 255\n          type: string\n          description: Document ID\n    BusinessPartners:\n      type: array\n      description: Business Partners\n      items:\n        $ref: '#/components/schemas/BusinessPartner'\n    BusinessPartner:\n      type: object\n      properties:\n        name:\n          maxLength: 255\n          type: string\n        street:\n          maxLength: 255\n          type: string\n        city:\n          maxLength: 255\n          type: string\n        countryISOCode:\n          maxLength: 2\n          type: string\n        postalCode:\n          maxLength: 255\n          type: string\n        inputKey:\n          maxLength: 255\n          type: string\n        logicalDelete:\n          type: boolean\n        logicalDeleteOn:\n          type: string\n          description: Date on which the record was logically deleted in UTC\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n        message:\n          type: string\n          description: Error text\n    DeletionResult:\n      type: object\n      properties:\n        number:\n          type: integer\n          description: Number of (logically) deleted records\n        text:\n          type: string\n          description: Description of deletion result\n  securitySchemes:\n    OAuth2:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: https://sap-wls.authentication.eu10.hana.ondemand.com/oauth/token\n          scopes:\n            ReadScreeningHit: Read screening hit\n            EditBusinessContext: Edit business context\n            DeleteScreeningHit: Delete screening hit\n            LogicallyDeleteScreeningHit: Logically delete screening hit\nx-sap-shortText: Work with screening hits and obtain business partner data.\nx-servers:\n  - url: \u003e-\n      https://screeninghits-sap.cfapps.eu10.hana.ondemand.com/grc/watchlistScreening/screeningHits/v1\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/saps4hana.wls.screeninghits/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/saps4hana.wls.screeninghits/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/businessPartnerData\": get: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security",
		"unsupported content types"
	]
}