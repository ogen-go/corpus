{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/egovernments/municipal-services"
		},
		"file": {
			"name": "bpa-service.yaml",
			"size": 0,
			"path": "docs/bpa/bpa-service.yaml",
			"byteSize": 39717,
			"content": "---\nopenapi: \"3.0.0\"\ninfo:\n  title: \"eGov Building Plan Application System v1.1\"\n  description: \"Stakeholders will apply for a building permit using the scrutinised\\\n    \\ number from eDCR.A stakeholder is a registered user in the system who logs in\\\n    \\ to the portal and apply for a service. \\nThe building permit application is\\\n    \\ one of the services in the building plan approval system.\\n\"\n  contact:\n    name: \"Egovernments Foundation\"\n    email: \"contact@egovernments.org\"\n  version: \"1.0.0\"\nservers:\n- url: \"https://virtserver.swaggerhub.com/egov-foundation/BPA/1.0.0\"\n  description: \"SwaggerHub API Auto Mocking\"\n- url: \"https://virtserver.swaggerhub.com/egovernmets-faoundat/PT-2.0/1.0.0\"\n  description: \"SwaggerHub API Auto Mocking\"\n- url: \"https://egov-micro-dev.egovernments.org\"\npaths:\n  /v1/land/_create:\n    post:\n      tags:\n      - \"Land Registry\"\n      summary: \"Crete land detail in land registry\"\n      description: \"Citizen, Employee, Or an Architect can create for new build plan\\\n        \\ approval\"\n      requestBody:\n        description: \"Fill Bpa application details and submit the request.\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LandInfoRequest\"\n        required: true\n      responses:\n        \"202\":\n          description: \"Reqeuset submitted successfully\"\n          content:\n            '*/*':\n              schema:\n                $ref: \"#/components/schemas/LandInfoResponse\"\n        \"400\":\n          description: \"Failed to process the request\"\n          content:\n            '*/*':\n              schema:\n                $ref: \"#/components/schemas/ErrorRes\"\n      x-roles: \"BPA_ARCHITECT,CITIZEN,EMPLOYEE\"\n  /v1/land/_update:\n    post:\n      tags:\n      - \"Land Registry\"\n      summary: \"Update existing application.\"\n      description: \"Updates a given `application` with newer details.\"\n      requestBody:\n        description: \"Request to update existing application details.\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LandInfoRequest\"\n        required: true\n      responses:\n        \"202\":\n          description: \"successfully updated\"\n          content:\n            '*/*':\n              schema:\n                $ref: \"#/components/schemas/LandInfoResponse\"\n        \"400\":\n          description: \"Failed to update\"\n          content:\n            '*/*':\n              schema:\n                $ref: \"#/components/schemas/ErrorRes\"\n      x-roles: \"BPA_ARCHITECT,CITIZEN,EMPLOYEE\"\n  /v1/land/_search:\n    post:\n      tags:\n      - \"Land Registry\"\n      summary: \"Get the list of land information.\"\n      description: \"Get the list of land information..\\n\"\n      parameters:\n      - name: \"tenantId\"\n        in: \"query\"\n        description: \"Unique id for a tenant.\"\n        required: true\n        schema:\n          type: \"string\"\n          format: \"varchar\"\n      - name: \"ids\"\n        in: \"query\"\n        description: \"List of system generated ids of BPA applications.\"\n        required: false\n        style: \"form\"\n        explode: true\n        schema:\n          type: \"array\"\n          items:\n            type: \"string\"\n      - name: \"landUId\"\n        in: \"query\"\n        description: \"land identifier.\"\n        required: false\n        style: \"form\"\n        explode: true\n        schema:\n          type: \"string\"\n      - name: \"mobileNumber\"\n        in: \"query\"\n        description: \"MobileNumber of land owners\"\n        required: false\n        style: \"form\"\n        explode: true\n        schema:\n          type: \"integer\"\n          format: \"int64\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RequestInfo\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Successful response\"\n          content:\n            '*/*':\n              schema:\n                $ref: \"#/components/schemas/BPAResponse\"\n        \"400\":\n          description: \"Invalid input.\"\n          content:\n            '*/*':\n              schema:\n                $ref: \"#/components/schemas/ErrorRes\"\n      x-roles: \"BPA_ARCHITECT,CITIZEN,EMPLOYEE\"\n  /v1/bpa/_create:\n    post:\n      tags:\n      - \"BPA_APPLY\"\n      summary: \"Apply for new building plan application.\"\n      description: \"Citizen, Employee, Or an Architect can apply for new build plan\\\n        \\ approval\"\n      requestBody:\n        description: \"Fill Bpa application details and submit the request.\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BPARequest\"\n        required: true\n      responses:\n        \"202\":\n          description: \"Application submitted successfully\"\n          content:\n            '*/*':\n              schema:\n                $ref: \"#/components/schemas/BPAResponse\"\n        \"400\":\n          description: \"Failed to process the application\"\n          content:\n            '*/*':\n              schema:\n                $ref: \"#/components/schemas/ErrorRes\"\n      x-roles: \"BPA_ARCHITECT,CITIZEN,EMPLOYEE\"\n  /v1/bpa/_update:\n    post:\n      tags:\n      - \"BPA_APPLY\"\n      summary: \"Update existing application.\"\n      description: \"Updates a given `application` with newer details.\"\n      requestBody:\n        description: \"Request to update existing application details.\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BPARequest\"\n        required: true\n      responses:\n        \"202\":\n          description: \"Application updated successfully\"\n          content:\n            '*/*':\n              schema:\n                $ref: \"#/components/schemas/BPAResponse\"\n        \"400\":\n          description: \"Failed to update\"\n          content:\n            '*/*':\n              schema:\n                $ref: \"#/components/schemas/ErrorRes\"\n      x-roles: \"BPA_ARCHITECT,CITIZEN,EMPLOYEE\"\n  /v1/bpa/_search:\n    post:\n      tags:\n      - \"BPA_APPLY\"\n      summary: \"Get the list of application by passing the diffrent search criteria.\"\n      description: \"Get the properties list based on the input parameters.\\n\"\n      parameters:\n      - name: \"tenantId\"\n        in: \"query\"\n        description: \"Unique id for a tenant.\"\n        required: true\n        schema:\n          type: \"string\"\n          format: \"varchar\"\n      - name: \"ids\"\n        in: \"query\"\n        description: \"List of system generated ids of BPA applications.\"\n        required: false\n        style: \"form\"\n        explode: true\n        schema:\n          type: \"array\"\n          items:\n            type: \"string\"\n      - name: \"edcrNumber\"\n        in: \"query\"\n        description: \"edcr Number.\"\n        required: false\n        style: \"form\"\n        explode: true\n        schema:\n          type: \"string\"\n      - name: \"applicationNo\"\n        in: \"query\"\n        description: \"application numbers\"\n        required: false\n        style: \"form\"\n        explode: true\n        schema:\n          type: \"string\"\n      - name: \"mobileNumber\"\n        in: \"query\"\n        description: \"MobileNumber of land owners\"\n        required: false\n        style: \"form\"\n        explode: true\n        schema:\n          type: \"integer\"\n          format: \"int64\"\n      - name: \"approvalNo\"\n        in: \"query\"\n        description: \"approval no\"\n        required: false\n        style: \"form\"\n        explode: true\n        schema:\n          type: \"string\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RequestInfo\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Successful response\"\n          content:\n            '*/*':\n              schema:\n                $ref: \"#/components/schemas/BPAResponse\"\n        \"400\":\n          description: \"Invalid input.\"\n          content:\n            '*/*':\n              schema:\n                $ref: \"#/components/schemas/ErrorRes\"\n      x-roles: \"BPA_ARCHITECT,CITIZEN,EMPLOYEE\"\ncomponents:\n  schemas:\n    LandInfo:\n      title: \"LandInfo\"\n      required:\n      - \"address\"\n      - \"owners\"\n      - \"tenantId\"\n      type: \"object\"\n      properties:\n        id:\n          maxLength: 64\n          minLength: 1\n          type: \"string\"\n          description: \"Unique Identifier(UUID) of the land for internal reference.\"\n          readOnly: true\n        landUId:\n          maxLength: 64\n          minLength: 1\n          type: \"string\"\n          description: \"Unique formatted Identifier of the Land.\"\n          readOnly: true\n        landUniqueRegNo:\n          maxLength: 64\n          minLength: 1\n          type: \"string\"\n          description: \"Unique Identifier of the Land in municipal departmrnt (eg.\\\n            \\ registration no, survey no etc).\"\n        tenantId:\n          maxLength: 256\n          minLength: 2\n          type: \"string\"\n          description: \"tenant id of the Property\"\n        status:\n          $ref: \"#/components/schemas/Status\"\n        address:\n          $ref: \"#/components/schemas/Address\"\n        ownershipCategory:\n          maxLength: 64\n          type: \"string\"\n          description: \"The type of ownership of the property.\"\n        owners:\n          type: \"array\"\n          description: \"Property owners, these will be citizen users in system.\"\n          items:\n            $ref: \"#/components/schemas/OwnerInfo\"\n        institution:\n          $ref: \"#/components/schemas/Institution\"\n        source:\n          $ref: \"#/components/schemas/Source\"\n        channel:\n          $ref: \"#/components/schemas/Channel\"\n        documents:\n          type: \"array\"\n          description: \"Attach the documents.\"\n          items:\n            $ref: \"#/components/schemas/Document_2\"\n        unit:\n          type: \"array\"\n          description: \"Unit details of the plot.\"\n          items:\n            $ref: \"#/components/schemas/Unit\"\n        additionalDetails:\n          type: \"object\"\n          description: \"The json to capturing the custom fields\"\n        auditDetails:\n          $ref: \"#/components/schemas/AuditDetails_2\"\n    BPA:\n      required:\n      - \"address\"\n      - \"owners\"\n      - \"tenantId\"\n      type: \"object\"\n      properties:\n        id:\n          maxLength: 64\n          minLength: 1\n          type: \"string\"\n          description: \"Unique Identifier(UUID) of the bpa application for internal\\\n            \\ reference.\"\n          readOnly: true\n        applicationNo:\n          maxLength: 64\n          minLength: 1\n          type: \"string\"\n          description: \"Generate formatted Unique Identifier of the building permit\\\n            \\ application. Keep the format in mdms\"\n          readOnly: true\n        approvalNo:\n          maxLength: 64\n          minLength: 1\n          type: \"string\"\n          description: \"Generate Approval number based on wf status. When to generate\\\n            \\ approvalNo will be depends on wf state so make it configurable at  application\\\n            \\ level\"\n          readOnly: true\n        accountId:\n          maxLength: 64\n          minLength: 1\n          type: \"string\"\n          description: \"Initiator User UUID\"\n        edcrNumber:\n          maxLength: 64\n          minLength: 1\n          type: \"string\"\n          description: \"Unique Identifier scrutinized edcr number\"\n        riskType:\n          maxLength: 64\n          minLength: 1\n          type: \"string\"\n          description: \"Risk type will be drived based on mdms configuration\"\n          readOnly: true\n        landId:\n          maxLength: 64\n          minLength: 1\n          type: \"string\"\n          description: \"Unique Identifier(UUID) of the land for internal reference.\"\n        tenantId:\n          maxLength: 256\n          minLength: 2\n          type: \"string\"\n          description: \"Unique ULB identifier.\"\n          nullable: false\n        status:\n          maxLength: 256\n          minLength: 2\n          type: \"string\"\n          description: \"status of the application.\"\n          readOnly: true\n        documents:\n          type: \"array\"\n          description: \"The documents attached by owner for exemption.\"\n          items:\n            $ref: \"#/components/schemas/Document_2\"\n        landInfo:\n          $ref: \"#/components/schemas/LandInfo\"\n        workflow:\n          $ref: \"#/components/schemas/Workflow\"\n        auditDetails:\n          $ref: \"#/components/schemas/AuditDetails_2\"\n        additionalDetails:\n          type: \"object\"\n          description: \"The json to capturing the custom fields\"\n      description: \"BPA application object to capture the details of land, land owners,\\\n        \\ and address of the land.\"\n    Workflow:\n      type: \"object\"\n      properties:\n        action:\n          maxLength: 64\n          minLength: 1\n          type: \"string\"\n          description: \"Action on the application in certain\"\n        assignes:\n          type: \"array\"\n          items:\n            type: \"string\"\n        comments:\n          maxLength: 64\n          minLength: 1\n          type: \"string\"\n          description: \"Unique Identifier scrutinized number\"\n        varificationDocuments:\n          type: \"array\"\n          description: \"Attach the workflow varification documents.\"\n          items:\n            $ref: \"#/components/schemas/Document_2\"\n      description: \"BPA application object to capture the details of land, land owners,\\\n        \\ and address of the land.\"\n    Status:\n      title: \"Status\"\n      type: \"string\"\n      description: \"status of the Property\"\n      enum:\n      - \"ACTIVE\"\n      - \"INACTIVE\"\n    BPARequest:\n      required:\n      - \"BPA\"\n      - \"RequestInfo\"\n      properties:\n        RequestInfo:\n          $ref: \"#/components/schemas/RequestInfo\"\n        BPA:\n          $ref: \"#/components/schemas/BPA\"\n      description: \"Contract class to receive request. Array of Property items  are\\\n        \\ used in case of create . Where as single Property item is used for update\"\n    BPAResponse:\n      properties:\n        ResponseInfo:\n          $ref: \"#/components/schemas/ResponseInfo\"\n        BPA:\n          $ref: \"#/components/schemas/BPA\"\n      description: \"Contains the ResponseHeader and the created/updated property\"\n    LandInfoRequest:\n      required:\n      - \"LandInfo\"\n      - \"RequestInfo\"\n      properties:\n        RequestInfo:\n          $ref: \"#/components/schemas/RequestInfo\"\n        LandInfo:\n          $ref: \"#/components/schemas/LandInfo\"\n      description: \"Contract class to receive request. Array of Land items  are used\\\n        \\ in case of create . Where as single Land item is used for update\"\n    LandInfoResponse:\n      properties:\n        ResponseInfo:\n          $ref: \"#/components/schemas/ResponseInfo\"\n        LandInfo:\n          $ref: \"#/components/schemas/LandInfo\"\n      description: \"Contains the ResponseHeader and the created/updated property\"\n    ErrorRes:\n      required:\n      - \"ResponseHeader\"\n      type: \"object\"\n      properties:\n        ResponseHeader:\n          $ref: \"#/components/schemas/ResponseHeader\"\n        Errors:\n          minLength: 1\n          type: \"array\"\n          description: \"Error response array corresponding to Request Object array.\\\n            \\ In case of single object submission or _search related paths this may\\\n            \\ be an array of one error element\"\n          items:\n            $ref: \"#/components/schemas/Error\"\n      description: \"All APIs will return ErrorRes in case of failure which will carry\\\n        \\ ResponseHeader as metadata and Error object as actual representation of\\\n        \\ error. In case of bulk apis, some apis may chose to return the array of\\\n        \\ Error objects to indicate individual failure.\"\n    ResponseHeader:\n      required:\n      - \"msgId\"\n      - \"resMsgId\"\n      - \"status\"\n      type: \"object\"\n      properties:\n        ts:\n          type: \"integer\"\n          description: \"response time in epoch\"\n          format: \"int64\"\n        resMsgId:\n          maxLength: 256\n          type: \"string\"\n          description: \"unique response message id (UUID) - will usually be the correlation\\\n            \\ id from the server\"\n        msgId:\n          maxLength: 256\n          type: \"string\"\n          description: \"message id of the request\"\n        status:\n          type: \"string\"\n          description: \"status of request processing\"\n          enum:\n          - \"COMPLETED\"\n          - \"ACCEPTED\"\n          - \"FAILED\"\n        signature:\n          type: \"string\"\n          description: \"Hash describing the current ResponseHeader\"\n        error:\n          $ref: \"#/components/schemas/Error\"\n        information:\n          type: \"object\"\n          description: \"Additional information from API\"\n        debug:\n          type: \"object\"\n          description: \"Debug information when requested\"\n        additionalInfo:\n          type: \"object\"\n          description: \"Any additional information if required e.g. status url (to\\\n            \\ find out the current status of an asynchronous processing response),\\\n            \\ additional links to perform special functions like file uploads etc.\"\n      description: \"ResponseHeader should be used to carry metadata information about\\\n        \\ the response from the server. apiId, ver and msgId in ResponseHeader should\\\n        \\ always correspond to the same values in respective request's RequestHeader.\"\n      readOnly: true\n    Error:\n      required:\n      - \"code\"\n      - \"message\"\n      type: \"object\"\n      properties:\n        code:\n          type: \"string\"\n          description: \"Error Code will be module specific error label/code to identiffy\\\n            \\ the error. All modules should also publish the Error codes with their\\\n            \\ specific localized values in localization service to ensure clients\\\n            \\ can print locale specific error messages. Example for error code would\\\n            \\ be User.NotFound to indicate User Not Found by User/Authentication service.\\\n            \\ All services must declare their possible Error Codes with brief description\\\n            \\ in the error response section of their API path.\"\n        message:\n          type: \"string\"\n          description: \"English locale message of the error code. Clients should make\\\n            \\ a separate call to get the other locale description if configured with\\\n            \\ the service. Clients may choose to cache these locale specific messages\\\n            \\ to enhance performance with a reasonable TTL (May be defined by the\\\n            \\ localization service based on tenant + module combination).\"\n        description:\n          type: \"string\"\n          description: \"Optional long description of the error to help clients take\\\n            \\ remedial action. This will not be available as part of localization\\\n            \\ service.\"\n        params:\n          type: \"array\"\n          description: \"Some error messages may carry replaceable fields (say $1,\\\n            \\ $2) to provide more context to the message. E.g. Format related errors\\\n            \\ may want to indicate the actual field for which the format is invalid.\\\n            \\ Client's should use the values in the param array to replace those fields.\"\n          items:\n            type: \"string\"\n      description: \"Error object will be returned as a part of reponse body in conjunction\\\n        \\ with ResponseHeader as part of ErrorResponse whenever the request processing\\\n        \\ status in the ResponseHeader is FAILED. HTTP return in this scenario will\\\n        \\ usually be HTTP 400.\"\n    RequestInfo:\n      required:\n      - \"action\"\n      - \"apiId\"\n      - \"msgId\"\n      - \"ts\"\n      - \"ver\"\n      type: \"object\"\n      properties:\n        apiId:\n          maxLength: 128\n          type: \"string\"\n          description: \"unique API ID\"\n        ver:\n          maxLength: 32\n          type: \"string\"\n          description: \"API version - for HTTP based request this will be same as\\\n            \\ used in path\"\n        ts:\n          type: \"integer\"\n          description: \"time in epoch\"\n          format: \"int64\"\n        action:\n          maxLength: 32\n          type: \"string\"\n          description: \"API action to be performed like _create, _update, _search\\\n            \\ (denoting POST, PUT, GET) or _oauth etc\"\n        did:\n          maxLength: 1024\n          type: \"string\"\n          description: \"Device ID from which the API is called\"\n        key:\n          maxLength: 256\n          type: \"string\"\n          description: \"API key (API key provided to the caller in case of server\\\n            \\ to server communication)\"\n        msgId:\n          maxLength: 256\n          type: \"string\"\n          description: \"Unique request message id from the caller\"\n        requesterId:\n          maxLength: 256\n          type: \"string\"\n          description: \"UserId of the user calling\"\n        authToken:\n          type: \"string\"\n          description: \"//session/jwt/saml token/oauth token - the usual value that\\\n            \\ would go into HTTP bearer token\"\n        userInfo:\n          $ref: \"#/components/schemas/UserInfo\"\n        correlationId:\n          type: \"string\"\n          readOnly: true\n      description: \"RequestInfo should be used to carry meta information about the\\\n        \\ requests to the server as described in the fields below. All eGov APIs will\\\n        \\ use requestinfo as a part of the request body to carry this meta information.\\\n        \\ Some of this information will be returned back from the server as part of\\\n        \\ the ResponseInfo in the response body to ensure correlation.\"\n    UserInfo:\n      required:\n      - \"primaryrole\"\n      - \"tenantId\"\n      - \"userName\"\n      type: \"object\"\n      properties:\n        tenantId:\n          type: \"string\"\n          description: \"Unique Identifier of the tenant to which user primarily belongs\"\n        uuid:\n          type: \"string\"\n          description: \"System Generated User id of the authenticated user.\"\n        userName:\n          type: \"string\"\n          description: \"Unique user name of the authenticated user\"\n        password:\n          type: \"string\"\n          description: \"password of the user.\"\n        idToken:\n          type: \"string\"\n          description: \"This will be the OTP.\"\n        mobile:\n          type: \"string\"\n          description: \"mobile number of the autheticated user\"\n        email:\n          type: \"string\"\n          description: \"email address of the authenticated user\"\n        primaryrole:\n          type: \"array\"\n          description: \"List of all the roles for the primary tenant\"\n          items:\n            $ref: \"#/components/schemas/Role\"\n        additionalroles:\n          type: \"array\"\n          description: \"array of additional tenantids authorized for the authenticated\\\n            \\ user\"\n          items:\n            $ref: \"#/components/schemas/TenantRole\"\n      description: \"This is acting ID token of the authenticated user on the server.\\\n        \\ Any value provided by the clients will be ignored and actual user based\\\n        \\ on authtoken will be used on the server.\"\n      readOnly: true\n    Role:\n      required:\n      - \"name\"\n      type: \"object\"\n      properties:\n        name:\n          maxLength: 64\n          type: \"string\"\n          description: \"Unique name of the role\"\n        code:\n          maxLength: 64\n          type: \"string\"\n          description: \"Unique code of the role\"\n        description:\n          type: \"string\"\n          description: \"brief description of the role\"\n      description: \"minimal representation of the Roles in the system to be carried\\\n        \\ along in UserInfo with RequestInfo meta data. Actual authorization service\\\n        \\ to extend this to have more role related attributes\\n\"\n    TenantRole:\n      required:\n      - \"roles\"\n      - \"tenantId\"\n      type: \"object\"\n      properties:\n        tenantId:\n          type: \"string\"\n          description: \"tenantid for the tenant\"\n        roles:\n          type: \"array\"\n          description: \"Roles assigned for a particular tenant - array of role codes/names\"\n          items:\n            $ref: \"#/components/schemas/Role\"\n      description: \"User role carries the tenant related role information for the\\\n        \\ user. A user can have multiple roles per tenant based on the need of the\\\n        \\ tenant. A user may also have multiple roles for multiple tenants.\"\n    Address:\n      required:\n      - \"locality\"\n      - \"tenantId\"\n      type: \"object\"\n      properties:\n        tenantId:\n          type: \"string\"\n          description: \"Unique Identifier of the tenant to which user primarily belongs\"\n        doorNo:\n          type: \"string\"\n          description: \"House number or door number.\"\n        plotNo:\n          type: \"string\"\n          description: \"Plot number of the house.\"\n        id:\n          type: \"string\"\n          description: \"System generated id for the address\"\n          readOnly: true\n        landmark:\n          type: \"string\"\n          description: \"additional landmark to help locate the address\"\n        city:\n          type: \"string\"\n          description: \"City of the address. Can be represented by the tenantid itself\"\n        district:\n          type: \"string\"\n          description: \"The district in which the property is located\"\n        region:\n          type: \"string\"\n          description: \"The Region in which the property is located\"\n        state:\n          type: \"string\"\n          description: \"The State in which the property is located\"\n        country:\n          type: \"string\"\n          description: \"The country in which the property is located\"\n        pincode:\n          type: \"string\"\n          description: \"PIN code of the address. Indian pincodes will usually be all\\\n            \\ numbers.\"\n        additionDetails:\n          type: \"string\"\n          description: \"more address detail as may be needed\"\n        buildingName:\n          maxLength: 64\n          minLength: 2\n          type: \"string\"\n          description: \"Name of the building\"\n        street:\n          maxLength: 64\n          minLength: 2\n          type: \"string\"\n          description: \"Street Name\"\n        locality:\n          $ref: \"#/components/schemas/Boundary\"\n        geoLocation:\n          $ref: \"#/components/schemas/GeoLocation\"\n      description: \"Representation of a address. Indiavidual APIs may choose to extend\\\n        \\ from this using allOf if more details needed to be added in their case.\\n\"\n    Boundary:\n      required:\n      - \"code\"\n      - \"name\"\n      type: \"object\"\n      properties:\n        code:\n          type: \"string\"\n          description: \"code of the boundary.\"\n        name:\n          type: \"string\"\n          description: \"name of the boundary.\"\n        label:\n          type: \"string\"\n          description: \"localized label for the boundry.\"\n        latitude:\n          type: \"string\"\n          description: \"latitude of the boundary.\"\n        longitude:\n          type: \"string\"\n          description: \"longitude of the boundary.\"\n        children:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/Boundary\"\n        materializedPath:\n          type: \"string\"\n          description: \"materialized path of the boundary - this would be of the format\\\n            \\ tenantid.[code] from parentt till teh current boundary\"\n          readOnly: true\n    GeoLocation:\n      type: \"object\"\n      properties:\n        latitude:\n          type: \"number\"\n          description: \"latitude of the address\"\n          format: \"double\"\n        longitude:\n          type: \"number\"\n          description: \"longitude of the address\"\n          format: \"double\"\n        additionalDetails:\n          type: \"object\"\n          description: \"Json object to capture any extra information which is not\\\n            \\ accommodated by model\"\n    OwnerInfo:\n      title: \"OwnerInfo\"\n      required:\n      - \"fatherOrHusbandName\"\n      - \"gender\"\n      - \"mobileNumber\"\n      - \"name\"\n      - \"relationship\"\n      type: \"object\"\n      properties:\n        name:\n          maxLength: 256\n          type: \"string\"\n          description: \"The name of the owner.\"\n        mobileNumber:\n          maxLength: 256\n          type: \"string\"\n          description: \"MobileNumber of the owner.\"\n        gender:\n          maxLength: 256\n          type: \"string\"\n          description: \"Gender of the owner.\"\n        fatherOrHusbandName:\n          maxLength: 256\n          type: \"string\"\n          description: \"Father or Husband name of the owner.\"\n        correspondenceAddress:\n          maxLength: 1024\n          type: \"string\"\n          description: \"The current address of the owner for correspondence.\"\n        isPrimaryOwner:\n          type: \"boolean\"\n          description: \"The owner is primary or not\"\n        ownerShipPercentage:\n          type: \"number\"\n          description: \"Ownership percentage.\"\n        ownerType:\n          maxLength: 256\n          type: \"string\"\n          description: \"Type of owner, based on this option Exemptions will be applied.\\\n            \\ This is master data defined in mdms.\"\n        institutionId:\n          maxLength: 64\n          type: \"string\"\n          description: \"The id of the institution if the owner is the authorized person\\\n            \\ for one\"\n        documents:\n          type: \"array\"\n          description: \"The documents attached by owner for exemption.\"\n          items:\n            $ref: \"#/components/schemas/Document\"\n        relationship:\n          $ref: \"#/components/schemas/Relationship\"\n        additionalDetails:\n          type: \"object\"\n          description: \"Json object to capture any extra information which is not\\\n            \\ accommodated of model\"\n    Document:\n      title: \"Document\"\n      type: \"object\"\n      properties:\n        id:\n          maxLength: 64\n          type: \"string\"\n          description: \"system id of the Document.\"\n        documentType:\n          type: \"string\"\n          description: \"unique document type code, should be validated with document\\\n            \\ type master\"\n        fileStore:\n          type: \"string\"\n          description: \"File store reference key.\"\n        documentUid:\n          maxLength: 64\n          type: \"string\"\n          description: \"The unique id(Pancard Number,Adhar etc.) of the given Document.\"\n        additionalDetails:\n          type: \"object\"\n          description: \"Json object to capture any extra information which is not\\\n            \\ accommodated by model\"\n      description: \"This object holds list of documents attached during the transaciton\\\n        \\ for a property\"\n    Relationship:\n      title: \"Relationship\"\n      type: \"string\"\n      description: \"The relationship of gaurdian.\"\n      enum:\n      - \"FATHER\"\n      - \"HUSBAND\"\n    Institution:\n      title: \"Institution\"\n      type: \"object\"\n      properties:\n        id:\n          maxLength: 64\n          type: \"string\"\n          description: \"Unique Identifier of the Institution(UUID).\"\n        tenantId:\n          maxLength: 256\n          type: \"string\"\n          description: \"tenant id of the Property\"\n        type:\n          maxLength: 64\n          type: \"string\"\n          description: \"Institution type.\"\n        designation:\n          maxLength: 64\n          type: \"string\"\n          description: \"Designation of the person creating/updatingentity on behalf\\\n            \\ of the institution\"\n        nameOfAuthorizedPerson:\n          maxLength: 256\n          type: \"string\"\n          description: \"Name of the person who is taking action on behalf of institution\"\n        additionalDetails:\n          type: \"object\"\n          description: \"Json object to capture any extra information which is not\\\n            \\ accommodated by model\"\n    Source:\n      title: \"Source\"\n      type: \"string\"\n      description: \"Source of a constructionDetail data. The constructionDetail will\\\n        \\ be created in a system based on the data avaialble in their manual records\\\n        \\ or during field survey. There can be more from client to client.\"\n      enum:\n      - \"MUNICIPAL_RECORDS\"\n      - \"FIELD_SURVEY\"\n    Channel:\n      title: \"Channel\"\n      type: \"string\"\n      description: \"constructionDetail details can be created from different channels\\\n        \\ Eg. System (properties created by ULB officials), CFC Counter (From citizen\\\n        \\ faciliation counters) etc. Here we are defining some known channels, there\\\n        \\ can be more client to client.\"\n      enum:\n      - \"SYSTEM\"\n      - \"CFC_COUNTER\"\n      - \"CITIZEN\"\n      - \"DATA_ENTRY\"\n      - \"MIGRATION\"\n    Document_2:\n      type: \"object\"\n      properties:\n        id:\n          maxLength: 64\n          type: \"string\"\n          description: \"system id of the Document.\"\n        documentType:\n          type: \"string\"\n          description: \"unique document type code, should be validated with document\\\n            \\ type master\"\n        fileStore:\n          type: \"string\"\n          description: \"File store reference key.\"\n        documentUid:\n          maxLength: 64\n          type: \"string\"\n          description: \"The unique id(Pancard Number,Adhar etc.) of the given Document.\"\n        additionalDetails:\n          type: \"object\"\n          description: \"Json object to capture any extra information which is not\\\n            \\ accommodated by model\"\n      description: \"This object holds list of documents attached during the transaciton\\\n        \\ for a property\"\n    Unit:\n      title: \"Unit\"\n      type: \"object\"\n      properties:\n        id:\n          type: \"string\"\n          description: \"Unique Identifier of the Unit(UUID).\"\n        tenantId:\n          maxLength: 256\n          minLength: 2\n          type: \"string\"\n          description: \"tenant id of the Property\"\n        floorNo:\n          maxLength: 64\n          minLength: 1\n          type: \"string\"\n          description: \"floor number of the Unit\"\n        unitType:\n          type: \"string\"\n          description: \"Unit type is master data.\"\n          example: \"Building, Room, Kitchen etc.\"\n        usageCategory:\n          maxLength: 64\n          minLength: 1\n          type: \"string\"\n          description: \"This is about the usage of the property like Residential,\\\n            \\ Non-residential, Mixed(Property witch is gettiong used for Residential,\\\n            \\ Non-residential purpose)\"\n        occupancyType:\n          $ref: \"#/components/schemas/OccupancyType2\"\n        occupancyDate:\n          type: \"integer\"\n          description: \"Date on which unit is occupied.\"\n          format: \"int64\"\n        constructionDetail:\n          $ref: \"#/components/schemas/ConstructionDetail\"\n        additionalDetails:\n          type: \"object\"\n          description: \"Json object to capture any extra information which is not\\\n            \\ accommodated by model\"\n    OccupancyType2:\n      title: \"OccupancyType2\"\n      type: \"string\"\n      description: \"Value denoting if the unit is rented or occupied by owner\"\n      enum:\n      - \"OWNER\"\n      - \"TENANT\"\n    ConstructionDetail:\n      title: \"ConstructionDetail\"\n      type: \"object\"\n      properties:\n        id:\n          maxLength: 64\n          type: \"string\"\n          description: \"id of the property with which the constructionDetail is associated.\"\n        carpetArea:\n          type: \"number\"\n          description: \"Total built up area in sq ft(built-up area = carpet area +\\\n            \\ areas covered by walls)\"\n        builtUpArea:\n          type: \"number\"\n          description: \"Total built up area in sq ft(built-up area = carpet area +\\\n            \\ areas covered by walls)\"\n        plinthArea:\n          type: \"number\"\n          description: \"Area of the extension builtup of the Unit, Like balcony, sitouts.\"\n        superBuiltUpArea:\n          type: \"number\"\n          description: \"Total built up area in sq ft(built-up area + Common area =\\\n            \\ Super built-up area)\"\n        constructionType:\n          maxLength: 64\n          minLength: 1\n          type: \"string\"\n          description: \"Construction type is defined in MDMS ConstructionTypeMaster.\"\n        constructionDate:\n          type: \"integer\"\n          description: \"The date when the property was constructed\"\n          format: \"int64\"\n        dimensions:\n          type: \"object\"\n          description: \"The dimensions of the plot or building or any unit\"\n        auditDetails:\n          $ref: \"#/components/schemas/AuditDetails\"\n        additionalDetails:\n          type: \"object\"\n          description: \"The json (array of '#/definitions/Factor')\"\n      description: \"Construction/constructionDetail details are captured here. Detail\\\n        \\ information of the constructionDetail including floor wise usage and area\\\n        \\ are saved as seperate units .For each financial year construction details\\\n        \\ may change. constructionDetail object is required for tax calculation\"\n    AuditDetails:\n      title: \"AuditDetails\"\n      type: \"object\"\n      properties:\n        createdBy:\n          type: \"string\"\n          description: \"username (preferred) or userid of the user that created the\\\n            \\ object\"\n        lastModifiedBy:\n          type: \"string\"\n          description: \"username (preferred) or userid of the user that last modified\\\n            \\ the object\"\n        createdTime:\n          type: \"integer\"\n          description: \"epoch of the time object is created\"\n          format: \"int64\"\n        lastModifiedTime:\n          type: \"integer\"\n          description: \"epoch of the time object is last modified\"\n          format: \"int64\"\n      description: \"Collection of audit related fields used by most models\"\n    AuditDetails_2:\n      type: \"object\"\n      properties:\n        createdBy:\n          type: \"string\"\n          description: \"username (preferred) or userid of the user that created the\\\n            \\ object\"\n        lastModifiedBy:\n          type: \"string\"\n          description: \"username (preferred) or userid of the user that last modified\\\n            \\ the object\"\n        createdTime:\n          type: \"integer\"\n          description: \"epoch of the time object is created\"\n          format: \"int64\"\n        lastModifiedTime:\n          type: \"integer\"\n          description: \"epoch of the time object is last modified\"\n          format: \"int64\"\n      description: \"Collection of audit related fields used by most models\"\n      readOnly: true\n    ResponseInfo:\n      required:\n      - \"apiId\"\n      - \"status\"\n      - \"ts\"\n      - \"ver\"\n      type: \"object\"\n      properties:\n        apiId:\n          maxLength: 128\n          type: \"string\"\n          description: \"unique API ID\"\n        ver:\n          maxLength: 32\n          type: \"string\"\n          description: \"API version\"\n        ts:\n          type: \"integer\"\n          description: \"response time in epoch\"\n          format: \"int64\"\n        resMsgId:\n          maxLength: 256\n          type: \"string\"\n          description: \"unique response message id (UUID) - will usually be the correlation\\\n            \\ id from the server\"\n        msgId:\n          maxLength: 256\n          type: \"string\"\n          description: \"message id of the request\"\n        status:\n          type: \"string\"\n          description: \"status of request processing - to be enhanced in futuer to\\\n            \\ include INPROGRESS\"\n          enum:\n          - \"SUCCESSFUL\"\n          - \"FAILED\"\n      description: \"ResponseInfo should be used to carry metadata information about\\\n        \\ the response from the server. apiId, ver and msgId in ResponseInfo should\\\n        \\ always correspond to the same values in respective request's RequestInfo.\"\n      readOnly: true\nx-module: \"BPA\"\nx-common-path: \"https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml\"\n",
			"canonicalURL": "/github.com/egovernments/municipal-services@61cf15d768b4bb5cc3ebf770789b1fefd5367103/-/blob/docs/bpa/bpa-service.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/egovernments/municipal-services/blob/61cf15d768b4bb5cc3ebf770789b1fefd5367103/docs/bpa/bpa-service.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/land/_create\": post: responses: 202: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}