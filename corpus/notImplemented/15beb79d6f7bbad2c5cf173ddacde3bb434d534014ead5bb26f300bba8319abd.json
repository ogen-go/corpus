{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eclipse/tractusx"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "semantics/openapi.yaml",
			"byteSize": 8472,
			"content": "openapi: 3.0.3\ninfo:\n  title: Semantic Hub\n  version: v1\nservers:\n  - url: example.com/api/v1\n    variables:\n      api-version:\n        default: v1\npaths:\n  /models:\n    get:\n      tags:\n        - SemanticHub\n      operationId: getModelList\n      parameters:\n        - in: query\n          name: namespaceFilter\n          schema:\n            type: string\n        - in: query\n          name: nameFilter\n          schema:\n            type: string\n        - in: query\n          name: isPublic\n          schema:\n            type: boolean\n        - in: query\n          name: type\n          schema:\n            type: string\n            enum:\n              - BAMM\n              - OWL\n        - in: query\n          name: pageSize\n          schema:\n            default: 10\n            type: integer\n            enum:\n              - 10\n              - 50\n              - 100\n        - in: query\n          name: page\n          schema:\n            default: 1\n            type: integer\n      responses:\n        '200':\n          $ref: '#/components/responses/ModelList'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      tags:\n        - SemanticHub\n      operationId: createModelWithId\n      requestBody:\n        description: \u003e-\n          The request body contains all necessary properties to create a new\n          model entry.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewModel'\n      responses:\n        '201':\n          $ref: '#/components/responses/Model'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  '/models/{model-id}':\n    get:\n      tags:\n        - SemanticHub\n      operationId: getModelById\n      parameters:\n        - in: path\n          name: model-id\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/Model'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    put:\n      tags:\n        - SemanticHub\n      operationId: modifyModel\n      parameters:\n        - in: path\n          name: model-id\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: \u003e-\n          The request body contains the updated model.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewModel'\n      responses:\n        '200':\n          $ref: '#/components/responses/Model'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      tags:\n        - SemanticHub\n      operationId: deleteModel\n      parameters:\n        - in: path\n          name: model-id\n          schema:\n            type: string\n          required: true\n      responses:\n        '204':\n          description: The resource was deleted successfully.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  '/models/{model-id}/file':\n    get:\n      tags:\n        - SemanticHub\n      operationId: getModelFile\n      parameters:\n        - in: path\n          name: model-id\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/ModelFile'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  '/models/{model-id}/diagram':\n    get:\n      tags:\n        - SemanticHub\n      operationId: getModelTree\n      parameters:\n        - in: path\n          name: model-id\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/ModelDiagram'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  '/models/{model-id}/documentation':\n    get:\n      tags:\n        - SemanticHub\n      operationId: getModelDocu\n      parameters:\n        - in: path\n          name: model-id\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/ModelDocumentation'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  schemas:\n    Model:\n      type: object\n      properties:\n        id:\n          description: \u003e-\n            The ID of a model consists of the model namespace and the Aspect\n            name.\n          type: string\n        publisher:\n          description: The publisher name\n          type: string\n        version:\n          description: \u003e-\n            The version of the model. The version can be extracted from the raw\n            model.\n          type: string\n        name:\n          type: string\n        private:\n          type: boolean\n        type:\n          type: string\n          enum:\n            - BAMM\n            - OWL\n    ModelList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Model'\n    NewModel:\n      type: object\n      properties:\n        private:\n          type: boolean\n        type:\n          type: string\n          enum:\n            - BAMM\n            - OWL\n        model:\n          description: \u003e-\n            The actual model definition in the format defined by the type\n            property.\n          type: string\n  responses:\n    ModelDiagram:\n      description: OK\n      content:\n        image/png:\n          schema:\n            type: string\n            format: binary\n    ModelDocumentation:\n      description: OK\n      content:\n        text/html:\n          example: |\n            \u003c!DOCTYPE html\u003e\n            \u003chtml\u003e\n            \u003chead\u003e\n            \u003c/head\u003e\n            \u003cbody\u003e\n              Aspect Description\n            \u003c/body\u003e\n            \u003c/html\u003e\n    ModelFile:\n      description: The raw RDF based model definition.\n      content:\n        text/turtle:\n          example: \u003e\n            @prefix : \u003curn:bamm:net.catenax.semantics:1.0.0#\u003e .\n\n            @prefix bamm: \u003curn:bamm:io.openmanufacturing:meta-model:1.0.0#\u003e .\n\n            @prefix bamm-c:\n            \u003curn:bamm:io.openmanufacturing:characteristic:1.0.0#\u003e .\n\n            @prefix xsd: \u003chttp://www.w3.org/2001/XMLSchema#\u003e .\n\n\n            :TestAspect a bamm:Aspect ;\n               bamm:name \"Test\" ;\n               bamm:preferredName \"Test Aspect\"@en ;\n               bamm:description \"This is a Test Aspect.\"@en ;\n               bamm:properties (  ) ;\n               bamm:operations (  ) .\n    Model:\n      description: The resulting model entry.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Model'\n    ModelList:\n      description: 'A list of models, matching the provided filter options.'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ModelList'\n    Unauthorized:\n      description: Unauthorized\n    BadRequest:\n      description: Bad Request\n    NotFound:\n      description: Not Found\n    InternalServerError:\n      description: Internal Server Error\n  ",
			"canonicalURL": "/github.com/eclipse/tractusx@9ae3c07cd21e081fbad0d75d2b8ebee7d9c1b5d5/-/blob/semantics/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/eclipse/tractusx/blob/9ae3c07cd21e081fbad0d75d2b8ebee7d9c1b5d5/semantics/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/models/{model-id}/file\": get: responses: 200: contents: unsupported content types: [text/turtle]",
	"NotImplemented": [
		"unsupported content types"
	]
}