{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/italia/lg-modellointeroperabilita-docs"
		},
		"file": {
			"name": "rest-crud.yaml",
			"size": 0,
			"path": "doc/media/rest-crud.yaml",
			"byteSize": 8329,
			"content": "openapi: 3.0.1\ninfo:\n  title: RESTCRUD\n  version: \"1.0\"\n  description: |-\n    Questo file descrive semplicemente i metodi di un'API\n    e non indica tutte le informazioni di metadatazione che\n    normalmente vanno inserite.\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\npaths:\n  /municipio/{id_municipio}/ufficio/{id_ufficio}/prenotazioni:\n    get:\n      description: Mostra prenotazioni\n      operationId: listReservations\n      parameters:\n      - $ref: '#/components/parameters/limit'\n      - $ref: '#/components/parameters/cursor'\n      - $ref: '#/components/parameters/path_id_municipio'\n      - $ref: '#/components/parameters/path_id_ufficio'\n      responses:\n        '200':\n          description: Una lista di prenotazioni.\n          content:\n            application/json:\n              schema:\n                properties:\n                  prenotazioni:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Prenotazione'\n                  count:\n                    type: integer\n                    format: int32\n                  next:\n                    type: string\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        default:\n          $ref: '#/components/responses/default'\n\n    post:\n      description: Aggiungi una prenotazione\n      operationId: AddReservation_1\n      parameters:\n      - $ref: '#/components/parameters/path_id_municipio'\n      - $ref: '#/components/parameters/path_id_ufficio'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Prenotazione'\n      responses:\n        '201':\n          description: Prenotazione Creata.\n          headers:\n            Location:\n              description: ID della prenotazione creata\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Prenotazione'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        default:\n          $ref: '#/components/responses/default'\n\n  /municipio/{id_municipio}/ufficio/{id_ufficio}/prenotazioni/{id_prenotazione}:\n    get:\n      description: LeggiPrenotazione\n      operationId: GetReservation_1\n      parameters:\n      - $ref: '#/components/parameters/path_id_municipio'\n      - $ref: '#/components/parameters/path_id_ufficio'\n      - name: id_prenotazione\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        '200':\n          description: Prenotazione estratta correttamente\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Prenotazione'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        default:\n          $ref: '#/components/responses/default'\n    delete:\n      description: EliminaPrenotazione\n      operationId: DeleteReservation\n      parameters:\n      - $ref: '#/components/parameters/path_id_municipio'\n      - $ref: '#/components/parameters/path_id_ufficio'\n      - name: id_prenotazione\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        '200':\n          description: Prenotazione eliminata correttamente\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        default:\n          $ref: '#/components/responses/default'\n\n    patch:\n      description: ModificaPrenotazione\n      operationId: PatchReservation\n      parameters:\n      - $ref: '#/components/parameters/path_id_municipio'\n      - $ref: '#/components/parameters/path_id_ufficio'\n      - name: id_prenotazione\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int32\n      requestBody:\n        content:\n          application/merge-patch+json:\n            schema:\n              $ref: '#/components/schemas/PatchPrenotazione'\n      responses:\n        '200':\n          description: Prenotazione modificata correttamente\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Prenotazione'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        default:\n          $ref: '#/components/responses/default'\ncomponents:\n  parameters:\n    path_id_municipio:\n      name: id_municipio\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n    path_id_ufficio:\n      name: id_ufficio\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n    limit:\n        description: How many items to return at one time (max 100)\n        in: query\n        name: limit\n        schema:\n          format: int32\n          type: integer\n    cursor:\n        description: An opaque identifier that points to the next item in the collection.\n        example: 01BX9NSMKVXXS5PSP2FATZM123\n        in: query\n        name: cursor\n        schema:\n          type: string\n  responses:\n    400BadRequest:\n      description: Richiesta non accoglibile\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorMessage'\n    404NotFound:\n      description: Identificativo non trovato\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorMessage'\n    default:\n      description: |-\n        Errore inatteso. Questo viene ritornato nel caso ci sia\n        un errore inatteso. Non vanno mai esposti i dati interni\n        del server.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorMessage'\n  schemas:\n    TaxCode:\n        description: Il codice fiscale.\n        example: RSSMRA75L01H501A\n        externalDocs:\n          url: https://w3id.org/italia/onto/CPV/taxCode\n        pattern: /^(?:(?:[B-DF-HJ-NP-TV-Z]|[AEIOU])[AEIOU][AEIOUX]|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}[\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[1256LMRS][\\dLMNP-V])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM])(?:[A-MZ][1-9MNP-V][\\dLMNP-V]{2}|[A-M][0L](?:[1-9MNP-V][\\dLMNP-V]|[0L][1-9MNP-V]))[A-Z]$/i\n        type: string\n    Prenotazione:\n      type: object\n      properties:\n        nome:\n          type: string\n        cognome:\n          type: string\n        codice_fiscale:\n          $ref: '#/components/schemas/TaxCode'\n        dettagli:\n          $ref: '#/components/schemas/PatchPrenotazione'\n    PatchPrenotazione:\n      type: object\n      properties:\n        data:\n          type: string\n          format: date-time\n        motivazione:\n          type: string\n    ErrorMessage:\n      type: object\n      properties:\n        detail:\n          description: |\n            A human readable explanation specific to this occurrence of the\n            problem.\n          type: string\n        instance:\n          description: |\n            An absolute URI that identifies the specific occurrence of the problem.\n            It may or may not yield further information if dereferenced.\n          format: uri\n          type: string\n        status:\n          description: |\n            The HTTP status code generated by the origin server for this occurrence\n            of the problem.\n          exclusiveMaximum: true\n          format: int32\n          maximum: 600\n          minimum: 100\n          type: integer\n        title:\n          description: |\n            A short, summary of the problem type. Written in english and readable\n            for engineers (usually not suited for non technical stakeholders and\n            not localized); example: Service Unavailable\n          type: string\n        type:\n          default: about:blank\n          description: |\n            An absolute URI that identifies the problem type.  When dereferenced,\n            it SHOULD provide human-readable documentation for the problem type\n            (e.g., using HTML).\n          format: uri\n          type: string\n",
			"canonicalURL": "/github.com/italia/lg-modellointeroperabilita-docs@75649fdb995936d75254ab5fdfb428143756d57a/-/blob/doc/media/rest-crud.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/italia/lg-modellointeroperabilita-docs/blob/75649fdb995936d75254ab5fdfb428143756d57a/doc/media/rest-crud.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/municipio/{id_municipio}/ufficio/{id_ufficio}/prenotazioni/{id_prenotazione}\": patch: requestBody: contents: unsupported content types: [application/merge-patch+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}