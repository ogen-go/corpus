{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-redis-2017-10-01-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-redis-2017-10-01-swagger.yaml",
			"byteSize": 67907,
			"content": "openapi: 3.0.0\ninfo:\n  description: REST API for Azure Redis Cache Service.\n  title: RedisManagementClient\n  version: 2017-10-01\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/redis/resource-manager/Microsoft.Cache/stable/2017-10-01/redis.json\n      version: \"2.0\"\n  x-preferred: false\n  x-providerName: azure.com\n  x-serviceName: redis\n  x-tags:\n    - Azure\n    - Microsoft\nsecurity:\n  - azure_auth:\n      - user_impersonation\npaths:\n  /providers/Microsoft.Cache/operations:\n    get:\n      description: Lists all of the available REST API operations of the Microsoft.Cache\n        provider.\n      operationId: Operations_List\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Success. The response describes the list of operations.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OperationListResult\"\n      tags:\n        - Operations\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/providers/Microsoft.Cache/CheckNameAvailability\":\n    post:\n      description: Checks that the redis cache name is valid and is not already in use.\n      operationId: Redis_CheckNameAvailability\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CheckNameAvailabilityParameters\"\n        description: Parameters supplied to the CheckNameAvailability Redis operation. The\n          only supported resource type is 'Microsoft.Cache/redis'\n        required: true\n      responses:\n        \"200\":\n          description: Name is available\n      tags:\n        - Redis\n  \"/subscriptions/{subscriptionId}/providers/Microsoft.Cache/Redis\":\n    get:\n      description: Gets all Redis caches in the specified subscription.\n      operationId: Redis_List\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisListResult\"\n              examples:\n                RedisCacheList:\n                  $ref: \"#/components/examples/RedisCacheList\"\n      tags:\n        - Redis\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis\":\n    get:\n      description: Lists all Redis caches in a resource group.\n      operationId: Redis_ListByResourceGroup\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheListByResourceGroup:\n              value: rg1\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisListResult\"\n              examples:\n                RedisCacheListByResourceGroup:\n                  $ref: \"#/components/examples/RedisCacheListByResourceGroup\"\n      tags:\n        - Redis\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules\":\n    get:\n      description: Gets all firewall rules in the specified redis cache.\n      operationId: FirewallRules_ListByRedisResource\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheFirewallRulesList:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: cacheName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheFirewallRulesList:\n              value: cache1\n      responses:\n        \"200\":\n          description: Successfully got the current rules\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisFirewallRuleListResult\"\n              examples:\n                RedisCacheFirewallRulesList:\n                  $ref: \"#/components/examples/RedisCacheFirewallRulesList\"\n      tags:\n        - Redis\n        - FirewallRules\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}\":\n    delete:\n      description: Deletes a single firewall rule in a specified redis cache.\n      operationId: FirewallRules_Delete\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheFirewallRuleDelete:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: cacheName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheFirewallRuleDelete:\n              value: cache1\n        - description: The name of the firewall rule.\n          in: path\n          name: ruleName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheFirewallRuleDelete:\n              value: rule1\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: Successfully deleted the rule\n        \"204\":\n          description: Successfully deleted the rule\n      tags:\n        - Redis\n        - FirewallRules\n    get:\n      description: Gets a single firewall rule in a specified redis cache.\n      operationId: FirewallRules_Get\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheFirewallRuleGet:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: cacheName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheFirewallRuleGet:\n              value: cache1\n        - description: The name of the firewall rule.\n          in: path\n          name: ruleName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheFirewallRuleGet:\n              value: rule1\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: Successfully found the rule\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisFirewallRule\"\n              examples:\n                RedisCacheFirewallRuleGet:\n                  $ref: \"#/components/examples/RedisCacheFirewallRuleGet\"\n      tags:\n        - Redis\n        - FirewallRules\n    put:\n      description: Create or update a redis cache firewall rule\n      operationId: FirewallRules_CreateOrUpdate\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheFirewallRuleCreate:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: cacheName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheFirewallRuleCreate:\n              value: cache1\n        - description: The name of the firewall rule.\n          in: path\n          name: ruleName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheFirewallRuleCreate:\n              value: rule1\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RedisFirewallRuleCreateParameters\"\n        description: Parameters supplied to the create or update redis firewall rule\n          operation.\n        required: true\n      responses:\n        \"200\":\n          description: Resource was successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisFirewallRule\"\n              examples:\n                RedisCacheFirewallRuleCreate:\n                  $ref: \"#/components/examples/RedisCacheFirewallRuleCreate\"\n        \"201\":\n          description: Resource was successfully created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisFirewallRule\"\n              examples:\n                RedisCacheFirewallRuleCreate:\n                  $ref: \"#/components/examples/RedisCacheFirewallRuleCreate\"\n      tags:\n        - Redis\n        - FirewallRules\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/patchSchedules\":\n    get:\n      description: Gets all patch schedules in the specified redis cache (there is only\n        one).\n      operationId: PatchSchedules_ListByRedisResource\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCachePatchSchedulesList:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: cacheName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCachePatchSchedulesList:\n              value: cache1\n      responses:\n        \"200\":\n          description: Successfully got the current patch schedules\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisPatchScheduleListResult\"\n              examples:\n                RedisCachePatchSchedulesList:\n                  $ref: \"#/components/examples/RedisCachePatchSchedulesList\"\n      tags:\n        - Redis\n        - PatchSchedules\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}\":\n    delete:\n      description: Deletes a Redis cache.\n      operationId: Redis_Delete\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheDelete:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheDelete:\n              value: cache1\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: \"\"\n        \"204\":\n          description: \"\"\n      tags:\n        - Redis\n      x-ms-long-running-operation: true\n    get:\n      description: Gets a Redis cache (resource description).\n      operationId: Redis_Get\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheGet:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheGet:\n              value: cache1\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisResource\"\n              examples:\n                RedisCacheGet:\n                  $ref: \"#/components/examples/RedisCacheGet\"\n      tags:\n        - Redis\n    patch:\n      description: Update an existing Redis cache.\n      operationId: Redis_Update\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheUpdate:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheUpdate:\n              value: cache1\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RedisUpdateParameters\"\n        description: Parameters supplied to the Update Redis operation.\n        required: true\n      responses:\n        \"200\":\n          description: The existing redis cache was successfully updated. Check\n            provisioningStatus to see detailed status.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisResource\"\n              examples:\n                RedisCacheUpdate:\n                  $ref: \"#/components/examples/RedisCacheUpdate\"\n      tags:\n        - Redis\n    put:\n      description: Create or replace (overwrite/recreate, with potential downtime) an\n        existing Redis cache.\n      operationId: Redis_Create\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheCreate:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheCreate:\n              value: cache1\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RedisCreateParameters\"\n        description: Parameters supplied to the Create Redis operation.\n        required: true\n      responses:\n        \"200\":\n          description: The existing redis cache was successfully updated. Check\n            provisioningStatus to see detailed status.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisResource\"\n              examples:\n                RedisCacheCreate:\n                  $ref: \"#/components/examples/RedisCacheCreate\"\n        \"201\":\n          description: The new redis cache was successfully created. Check\n            provisioningStatus to see detailed status.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisResource\"\n              examples:\n                RedisCacheCreate:\n                  $ref: \"#/components/examples/RedisCacheCreate\"\n      tags:\n        - Redis\n      x-ms-long-running-operation: true\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/export\":\n    post:\n      description: Export data from the redis cache to blobs in a container.\n      operationId: Redis_ExportData\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheExport:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheExport:\n              value: cache1\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ExportRDBParameters\"\n        description: Parameters for Redis export operation.\n        required: true\n      responses:\n        \"200\":\n          description: Export operation succeeded.\n        \"202\":\n          description: Export operation successfully enqueued; follow the Location header\n            to poll for final outcome.\n        \"204\":\n          description: Export operation succeeded.\n      tags:\n        - Redis\n      x-ms-long-running-operation: true\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/forceReboot\":\n    post:\n      description: Reboot specified Redis node(s). This operation requires write permission\n        to the cache resource. There can be potential data loss.\n      operationId: Redis_ForceReboot\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheForceReboot:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheForceReboot:\n              value: cache1\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RedisRebootParameters\"\n        description: Specifies which Redis node(s) to reboot.\n        required: true\n      responses:\n        \"200\":\n          description: Reboot operation successfully enqueued\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisForceRebootResponse\"\n              examples:\n                RedisCacheForceReboot:\n                  $ref: \"#/components/examples/RedisCacheForceReboot\"\n      tags:\n        - Redis\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/import\":\n    post:\n      description: Import data into Redis cache.\n      operationId: Redis_ImportData\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheImport:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheImport:\n              value: cache1\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ImportRDBParameters\"\n        description: Parameters for Redis import operation.\n        required: true\n      responses:\n        \"200\":\n          description: Import operation succeeded.\n        \"202\":\n          description: Import operation successfully enqueued; follow the Location header\n            to poll for final outcome.\n        \"204\":\n          description: Import operation succeeded.\n      tags:\n        - Redis\n      x-ms-long-running-operation: true\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/linkedServers\":\n    get:\n      description: Gets the list of linked servers associated with this redis cache\n        (requires Premium SKU).\n      operationId: LinkedServer_List\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            LinkedServer_List:\n              value: rg1\n        - description: The name of the redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            LinkedServer_List:\n              value: cache1\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: Response of get linked servers.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisLinkedServerWithPropertiesList\"\n              examples:\n                LinkedServer_List:\n                  $ref: \"#/components/examples/LinkedServer_List\"\n      tags:\n        - Redis\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/linkedServers/{linkedServerName}\":\n    delete:\n      description: Deletes the linked server from a redis cache (requires Premium SKU).\n      operationId: LinkedServer_Delete\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            LinkedServerDelete:\n              value: rg1\n        - description: The name of the redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            LinkedServerDelete:\n              value: cache1\n        - description: The name of the linked server that is being added to the Redis cache.\n          in: path\n          name: linkedServerName\n          required: true\n          schema:\n            type: string\n          examples:\n            LinkedServerDelete:\n              value: cache2\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: Linked server was successfully deleted.\n      tags:\n        - Redis\n    get:\n      description: Gets the detailed information about a linked server of a redis cache\n        (requires Premium SKU).\n      operationId: LinkedServer_Get\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            LinkedServer_Get:\n              value: rg1\n        - description: The name of the redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            LinkedServer_Get:\n              value: cache1\n        - description: The name of the linked server.\n          in: path\n          name: linkedServerName\n          required: true\n          schema:\n            type: string\n          examples:\n            LinkedServer_Get:\n              value: cache2\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: Response of get linked server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisLinkedServerWithProperties\"\n              examples:\n                LinkedServer_Get:\n                  $ref: \"#/components/examples/LinkedServer_Get\"\n      tags:\n        - Redis\n    put:\n      description: Adds a linked server to the Redis cache (requires Premium SKU).\n      operationId: LinkedServer_Create\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            LinkedServer_Create:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            LinkedServer_Create:\n              value: cache1\n        - description: The name of the linked server that is being added to the Redis cache.\n          in: path\n          name: linkedServerName\n          required: true\n          schema:\n            type: string\n          examples:\n            LinkedServer_Create:\n              value: cache2\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RedisLinkedServerCreateParameters\"\n        description: Parameters supplied to the Create Linked server operation.\n        required: true\n      responses:\n        \"200\":\n          description: The linked server was successfully added.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisLinkedServerWithProperties\"\n              examples:\n                LinkedServer_Create:\n                  $ref: \"#/components/examples/LinkedServer_Create\"\n        \"201\":\n          description: The linked server was successfully added.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisLinkedServerWithProperties\"\n              examples:\n                LinkedServer_Create:\n                  $ref: \"#/components/examples/LinkedServer_Create\"\n      tags:\n        - Redis\n      x-ms-long-running-operation: true\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/listKeys\":\n    post:\n      description: Retrieve a Redis cache's access keys. This operation requires write\n        permission to the cache resource.\n      operationId: Redis_ListKeys\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheListKeys:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheListKeys:\n              value: cache1\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: Lists the keys for the specified Redis cache.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisAccessKeys\"\n              examples:\n                RedisCacheListKeys:\n                  $ref: \"#/components/examples/RedisCacheListKeys\"\n      tags:\n        - Redis\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/listUpgradeNotifications\":\n    get:\n      description: Gets any upgrade notifications for a Redis cache.\n      operationId: Redis_ListUpgradeNotifications\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheGet:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheGet:\n              value: cache1\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - description: how many minutes in past to look for upgrade notifications\n          in: query\n          name: history\n          required: true\n          schema:\n            type: number\n            format: double\n          examples:\n            RedisCacheGet:\n              value: \"5000\"\n      responses:\n        \"200\":\n          description: All upgrade notifications in given time range\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationListResponse\"\n              examples:\n                RedisCacheGet:\n                  $ref: \"#/components/examples/RedisCacheGet\"\n      tags:\n        - Redis\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/{default}\":\n    delete:\n      description: Deletes the patching schedule of a redis cache (requires Premium SKU).\n      operationId: PatchSchedules_Delete\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCachePatchSchedulesDelete:\n              value: rg1\n        - description: The name of the redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCachePatchSchedulesDelete:\n              value: cache1\n        - description: Default string modeled as parameter for auto generation to work\n            correctly.\n          in: path\n          name: default\n          required: true\n          x-ms-enum:\n            modelAsString: true\n            name: defaultName\n          schema:\n            type: string\n            enum:\n              - default\n          examples:\n            RedisCachePatchSchedulesDelete:\n              value: default\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: Success.\n        \"204\":\n          description: Success.\n      tags:\n        - Redis\n        - PatchSchedules\n    get:\n      description: Gets the patching schedule of a redis cache (requires Premium SKU).\n      operationId: PatchSchedules_Get\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCachePatchSchedulesGet:\n              value: rg1\n        - description: The name of the redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCachePatchSchedulesGet:\n              value: cache1\n        - description: Default string modeled as parameter for auto generation to work\n            correctly.\n          in: path\n          name: default\n          required: true\n          x-ms-enum:\n            modelAsString: true\n            name: defaultName\n          schema:\n            type: string\n            enum:\n              - default\n          examples:\n            RedisCachePatchSchedulesGet:\n              value: default\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: Response of get patch schedules.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisPatchSchedule\"\n              examples:\n                RedisCachePatchSchedulesGet:\n                  $ref: \"#/components/examples/RedisCachePatchSchedulesGet\"\n      tags:\n        - Redis\n        - PatchSchedules\n    put:\n      description: Create or replace the patching schedule for Redis cache (requires\n        Premium SKU).\n      operationId: PatchSchedules_CreateOrUpdate\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCachePatchSchedulesCreateOrUpdate:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCachePatchSchedulesCreateOrUpdate:\n              value: cache1\n        - description: Default string modeled as parameter for auto generation to work\n            correctly.\n          in: path\n          name: default\n          required: true\n          x-ms-enum:\n            modelAsString: true\n            name: defaultName\n          schema:\n            type: string\n            enum:\n              - default\n          examples:\n            RedisCachePatchSchedulesCreateOrUpdate:\n              value: default\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RedisPatchSchedule\"\n        description: Parameters to set the patching schedule for Redis cache.\n        required: true\n      responses:\n        \"200\":\n          description: The patch schedule was successfully updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisPatchSchedule\"\n              examples:\n                RedisCachePatchSchedulesCreateOrUpdate:\n                  $ref: \"#/components/examples/RedisCachePatchSchedulesCreateOrUpda\\\n                    te\"\n        \"201\":\n          description: The patch schedule was successfully created.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisPatchSchedule\"\n              examples:\n                RedisCachePatchSchedulesCreateOrUpdate:\n                  $ref: \"#/components/examples/RedisCachePatchSchedulesCreateOrUpda\\\n                    te\"\n      tags:\n        - Redis\n        - PatchSchedules\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/regenerateKey\":\n    post:\n      description: Regenerate Redis cache's access keys. This operation requires write\n        permission to the cache resource.\n      operationId: Redis_RegenerateKey\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheRegenerateKey:\n              value: rg1\n        - description: The name of the Redis cache.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          examples:\n            RedisCacheRegenerateKey:\n              value: cache1\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RedisRegenerateKeyParameters\"\n        description: Specifies which key to regenerate.\n        required: true\n      responses:\n        \"200\":\n          description: Lists the regenerated keys for Redis Cache\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RedisAccessKeys\"\n              examples:\n                RedisCacheRegenerateKey:\n                  $ref: \"#/components/examples/RedisCacheRegenerateKey\"\n      tags:\n        - Redis\nservers:\n  - url: https://management.azure.com\ncomponents:\n  examples:\n    RedisCacheList:\n      value:\n        value:\n          - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1\n            location: West US\n            name: cache1\n            properties:\n              enableNonSslPort: true\n              hostName: cache1.redis.cache.windows.net\n              port: 6379\n              provisioningState: Creating\n              redisConfiguration: {}\n              redisVersion: \"3.2\"\n              sku:\n                capacity: 6\n                family: C\n                name: Standard\n              sslPort: 6380\n            tags: {}\n            type: Microsoft.Cache/Redis\n    RedisCacheListByResourceGroup:\n      value:\n        value:\n          - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1\n            location: West US\n            name: cache1\n            properties:\n              enableNonSslPort: true\n              hostName: cache1.redis.cache.windows.net\n              port: 6379\n              provisioningState: Creating\n              redisConfiguration: {}\n              redisVersion: \"3.2\"\n              sku:\n                capacity: 6\n                family: C\n                name: Standard\n              sslPort: 6380\n            tags: {}\n            type: Microsoft.Cache/Redis\n    RedisCacheFirewallRulesList:\n      value:\n        value:\n          - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/firewallRules/rule1\n            name: rule1\n            properties:\n              endIP: 192.168.1.4\n              startIP: 192.168.1.1\n            type: Microsoft.Cache/Redis/firewallRules\n          - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/firewallRules/rule2\n            name: rule2\n            properties:\n              endIP: 192.169.1.255\n              startIP: 192.169.1.0\n            type: Microsoft.Cache/Redis/firewallRules\n    RedisCacheFirewallRuleGet:\n      value:\n        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/firewallRules/rule1\n        name: cache1/rule1\n        properties:\n          endIP: 192.168.1.4\n          startIP: 192.168.1.1\n        type: Microsoft.Cache/Redis/firewallRules\n    RedisCacheFirewallRuleCreate:\n      value:\n        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/firewallRules/rule1\n        name: cache1/rule1\n        properties:\n          endIP: 192.168.1.4\n          startIP: 192.168.1.1\n        type: Microsoft.Cache/Redis/firewallRules\n    RedisCachePatchSchedulesList:\n      value:\n        value:\n          - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/patchSchedules/default\n            name: default\n            properties:\n              scheduleEntries:\n                - dayOfWeek: Monday\n                  maintenanceWindow: PT5H\n                  startHourUtc: 12\n                - dayOfWeek: Tuesday\n                  startHourUtc: 12\n            type: Microsoft.Cache/Redis/patchSchedules\n    RedisCacheGet:\n      value:\n        value:\n          - name: notification1\n            timestamp: 2017-02-16T23:20:50.52Z\n            upsellNotification: {}\n    RedisCacheUpdate:\n      value:\n        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1\n        location: West US\n        name: cache1\n        properties:\n          accessKeys:\n            primaryKey: secretkey1\n            secondaryKey: secretKey2\n          enableNonSslPort: true\n          hostName: cache1.redis.cache.windows.net\n          port: 6379\n          provisioningState: Succeeded\n          redisConfiguration:\n            maxclients: \"1000\"\n            maxmemory-delta: \"50\"\n            maxmemory-reserved: \"50\"\n          redisVersion: \"3.0\"\n          sku:\n            capacity: 1\n            family: P\n            name: Premium\n          sslPort: 6380\n        tags: {}\n        type: Microsoft.Cache/Redis\n    RedisCacheCreate:\n      value:\n        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1\n        location: West US\n        name: cache1\n        properties:\n          accessKeys:\n            primaryKey: secretkey1\n            secondaryKey: secretKey2\n          enableNonSslPort: false\n          hostName: cache1.redis.cache.windows.net\n          port: 6379\n          provisioningState: Succeeded\n          redisConfiguration:\n            maxmemory-policy: allkeys-lru\n          redisVersion: \"3.0\"\n          sku:\n            capacity: 1\n            family: P\n            name: Premium\n          sslPort: 6380\n        tags: {}\n        type: Microsoft.Cache/Redis\n        zones:\n          - \"1\"\n    RedisCacheForceReboot:\n      value:\n        message: reboot operation enqueued\n    LinkedServer_List:\n      value:\n        - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache2\n          name: cache2\n          properties:\n            linkedRedisCacheId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2\n            linkedRedisCacheLocation: West US\n            provisioningState: Succeeded\n            serverRole: Secondary\n          type: Microsoft.Cache/Redis/linkedServers\n        - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache3\n          name: cache3\n          properties:\n            linkedRedisCacheId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache3\n            linkedRedisCacheLocation: West US\n            provisioningState: Succeeded\n            serverRole: Secondary\n          type: Microsoft.Cache/Redis/linkedServers\n    LinkedServer_Get:\n      value:\n        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache2\n        name: cache2\n        properties:\n          linkedRedisCacheId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2\n          linkedRedisCacheLocation: West US\n          provisioningState: Succeeded\n          serverRole: Secondary\n        type: Microsoft.Cache/Redis/linkedServers\n    LinkedServer_Create:\n      value:\n        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache2\n        name: cache2\n        properties:\n          linkedRedisCacheId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2\n          linkedRedisCacheLocation: West US\n          provisioningState: Creating\n          serverRole: Secondary\n        type: Microsoft.Cache/Redis/linkedServers\n    RedisCacheListKeys:\n      value:\n        primaryKey: secretkey1\n        secondaryKey: secretKey2\n    RedisCachePatchSchedulesGet:\n      value:\n        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/patchSchedules/default\n        name: default\n        properties:\n          scheduleEntries:\n            - dayOfWeek: Monday\n              maintenanceWindow: PT5H\n              startHourUtc: 12\n            - dayOfWeek: Tuesday\n              startHourUtc: 12\n        type: Microsoft.Cache/Redis/patchSchedules\n    RedisCachePatchSchedulesCreateOrUpdate:\n      value:\n        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/patchSchedules/default\n        name: default\n        properties:\n          scheduleEntries:\n            - dayOfWeek: Monday\n              maintenanceWindow: PT5H\n              startHourUtc: 12\n            - dayOfWeek: Tuesday\n              startHourUtc: 12\n        type: Microsoft.Cache/Redis/patchSchedules\n    RedisCacheRegenerateKey:\n      value:\n        primaryKey: secretkey1\n        secondaryKey: secretKey2\n  parameters:\n    ApiVersionParameter:\n      description: Client Api Version.\n      in: query\n      name: api-version\n      required: true\n      schema:\n        type: string\n      examples:\n        RedisCacheList:\n          value: 2017-10-01\n        RedisCacheListByResourceGroup:\n          value: 2017-10-01\n        RedisCacheFirewallRulesList:\n          value: 2017-02-01\n        RedisCacheFirewallRuleDelete:\n          value: 2017-02-01\n        RedisCacheFirewallRuleGet:\n          value: 2017-02-01\n        RedisCacheFirewallRuleCreate:\n          value: 2017-02-01\n        RedisCachePatchSchedulesList:\n          value: 2017-10-01\n        RedisCacheDelete:\n          value: 2017-10-01\n        RedisCacheGet:\n          value: 2017-10-01\n        RedisCacheUpdate:\n          value: 2017-10-01\n        RedisCacheCreate:\n          value: 2017-10-01\n        RedisCacheExport:\n          value: 2017-10-01\n        RedisCacheForceReboot:\n          value: 2017-10-01\n        RedisCacheImport:\n          value: 2017-10-01\n        LinkedServer_List:\n          value: 2017-10-01\n        LinkedServerDelete:\n          value: 2017-10-01\n        LinkedServer_Get:\n          value: 2017-10-01\n        LinkedServer_Create:\n          value: 2017-10-01\n        RedisCacheListKeys:\n          value: 2017-10-01\n        RedisCachePatchSchedulesDelete:\n          value: 2017-10-01\n        RedisCachePatchSchedulesGet:\n          value: 2017-10-01\n        RedisCachePatchSchedulesCreateOrUpdate:\n          value: 2017-10-01\n        RedisCacheRegenerateKey:\n          value: 2017-10-01\n    SubscriptionIdParameter:\n      description: Gets subscription credentials which uniquely identify the Microsoft\n        Azure subscription. The subscription ID forms part of the URI for every\n        service call.\n      in: path\n      name: subscriptionId\n      required: true\n      schema:\n        type: string\n      examples:\n        RedisCacheList:\n          value: subid\n        RedisCacheListByResourceGroup:\n          value: subid\n        RedisCacheFirewallRulesList:\n          value: subid\n        RedisCacheFirewallRuleDelete:\n          value: subid\n        RedisCacheFirewallRuleGet:\n          value: subid\n        RedisCacheFirewallRuleCreate:\n          value: subid\n        RedisCachePatchSchedulesList:\n          value: subid\n        RedisCacheDelete:\n          value: subid\n        RedisCacheGet:\n          value: subid\n        RedisCacheUpdate:\n          value: subid\n        RedisCacheCreate:\n          value: subid\n        RedisCacheExport:\n          value: subid\n        RedisCacheForceReboot:\n          value: subid\n        RedisCacheImport:\n          value: subid\n        LinkedServer_List:\n          value: subid\n        LinkedServerDelete:\n          value: subid\n        LinkedServer_Get:\n          value: subid\n        LinkedServer_Create:\n          value: subid\n        RedisCacheListKeys:\n          value: subid\n        RedisCachePatchSchedulesDelete:\n          value: subid\n        RedisCachePatchSchedulesGet:\n          value: subid\n        RedisCachePatchSchedulesCreateOrUpdate:\n          value: subid\n        RedisCacheRegenerateKey:\n          value: subid\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow.\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  schemas:\n    CheckNameAvailabilityParameters:\n      description: Parameters body to pass for name availability check.\n      properties:\n        name:\n          description: Resource name.\n          type: string\n        type:\n          description: Resource type. The only legal value of this property for checking\n            redis cache name availability is 'Microsoft.Cache/redis'.\n          type: string\n      required:\n        - name\n        - type\n    ExportRDBParameters:\n      description: Parameters for Redis export operation.\n      properties:\n        container:\n          description: Container name to export to.\n          type: string\n        format:\n          description: File format.\n          type: string\n        prefix:\n          description: Prefix to use for exported files.\n          type: string\n      required:\n        - container\n        - prefix\n    ImportRDBParameters:\n      description: Parameters for Redis import operation.\n      properties:\n        files:\n          description: files to import.\n          items:\n            type: string\n          type: array\n        format:\n          description: File format.\n          type: string\n      required:\n        - files\n    NotificationListResponse:\n      description: The response of listUpgradeNotifications.\n      properties:\n        nextLink:\n          description: Link for next set of notifications.\n          readOnly: true\n          type: string\n        value:\n          description: List of all notifications.\n          items:\n            $ref: \"#/components/schemas/UpgradeNotification\"\n          type: array\n    Operation:\n      description: REST API operation\n      properties:\n        display:\n          description: The object that describes the operation.\n          properties:\n            description:\n              description: Friendly name of the operation\n              type: string\n            operation:\n              description: \"Operation type: read, write, delete, listKeys/action, etc.\"\n              type: string\n            provider:\n              description: Friendly name of the resource provider\n              type: string\n            resource:\n              description: Resource type on which the operation is performed.\n              type: string\n        name:\n          description: \"Operation name: {provider}/{resource}/{operation}\"\n          type: string\n      type: object\n    OperationListResult:\n      description: Result of the request to list REST API operations. It contains a list of\n        operations and a URL nextLink to get the next set of results.\n      properties:\n        nextLink:\n          description: URL to get the next set of operation list results if there are any.\n          readOnly: true\n          type: string\n        value:\n          description: List of operations supported by the resource provider.\n          items:\n            $ref: \"#/components/schemas/Operation\"\n          type: array\n    ProxyResource:\n      allOf:\n        - $ref: \"#/components/schemas/Resource\"\n      description: The resource model definition for a ARM proxy resource. It will have\n        everything other than required location and tags\n    RedisAccessKeys:\n      description: Redis cache access keys.\n      properties:\n        primaryKey:\n          description: The current primary key that clients can use to authenticate with\n            Redis cache.\n          readOnly: true\n          type: string\n        secondaryKey:\n          description: The current secondary key that clients can use to authenticate with\n            Redis cache.\n          readOnly: true\n          type: string\n    RedisCommonProperties:\n      description: Create/Update/Get common properties of the redis cache.\n      properties:\n        enableNonSslPort:\n          description: Specifies whether the non-ssl Redis server port (6379) is enabled.\n          type: boolean\n        redisConfiguration:\n          additionalProperties:\n            type: string\n          description: \"All Redis Settings. Few possible keys:\n            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequen\\\n            cy,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemor\\\n            y-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-\\\n            entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-zi\\\n            plist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-ma\\\n            x-ziplist-value etc.\"\n          type: object\n        shardCount:\n          description: The number of shards to be created on a Premium Cluster Cache.\n          format: int32\n          type: integer\n        tenantSettings:\n          additionalProperties:\n            type: string\n          description: A dictionary of tenant settings\n          type: object\n      x-ms-external: true\n    RedisCreateParameters:\n      description: Parameters supplied to the Create Redis operation.\n      properties:\n        location:\n          description: The geo-location where the resource lives\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n        properties:\n          $ref: \"#/components/schemas/RedisCreateProperties\"\n        tags:\n          additionalProperties:\n            type: string\n          description: Resource tags.\n          type: object\n        zones:\n          description: A list of availability zones denoting where the resource needs to\n            come from.\n          items:\n            type: string\n          type: array\n      required:\n        - properties\n        - location\n    RedisCreateProperties:\n      allOf:\n        - $ref: \"#/components/schemas/RedisCommonProperties\"\n      description: Properties supplied to Create Redis operation.\n      properties:\n        sku:\n          $ref: \"#/components/schemas/Sku\"\n        staticIP:\n          description: Static IP address. Required when deploying a Redis cache inside an\n            existing Azure Virtual Network.\n          pattern: ^\\d+\\.\\d+\\.\\d+\\.\\d+$\n          type: string\n        subnetId:\n          description: \"The full resource ID of a subnet in a virtual network to deploy the\n            Redis cache in. Example format:\n            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/\\\n            Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/su\\\n            bnet1\"\n          pattern: ^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$\n          type: string\n      required:\n        - sku\n      x-ms-external: true\n    RedisFirewallRule:\n      allOf:\n        - $ref: \"#/components/schemas/ProxyResource\"\n      description: A firewall rule on a redis cache has a name, and describes a contiguous\n        range of IP addresses permitted to connect\n      properties:\n        properties:\n          $ref: \"#/components/schemas/RedisFirewallRuleProperties\"\n      required:\n        - properties\n    RedisFirewallRuleCreateParameters:\n      description: Parameters required for creating a firewall rule on redis cache.\n      properties:\n        properties:\n          $ref: \"#/components/schemas/RedisFirewallRuleProperties\"\n      required:\n        - properties\n    RedisFirewallRuleListResult:\n      description: The response of list firewall rules Redis operation.\n      properties:\n        nextLink:\n          description: Link for next set of locations.\n          readOnly: true\n          type: string\n        value:\n          description: Results of the list firewall rules operation.\n          items:\n            $ref: \"#/components/schemas/RedisFirewallRule\"\n          type: array\n    RedisFirewallRuleProperties:\n      description: Specifies a range of IP addresses permitted to connect to the cache\n      properties:\n        endIP:\n          description: highest IP address included in the range\n          type: string\n        startIP:\n          description: lowest IP address included in the range\n          type: string\n      required:\n        - startIP\n        - endIP\n    RedisForceRebootResponse:\n      description: Response to force reboot for Redis cache.\n      properties:\n        message:\n          description: Status message\n          readOnly: true\n          type: string\n    RedisLinkedServer:\n      description: Linked server Id\n      properties:\n        id:\n          description: Linked server Id.\n          readOnly: true\n          type: string\n    RedisLinkedServerCreateParameters:\n      description: Parameter required for creating a linked server to redis cache.\n      properties:\n        properties:\n          $ref: \"#/components/schemas/RedisLinkedServerCreateProperties\"\n      required:\n        - properties\n    RedisLinkedServerCreateProperties:\n      description: Create properties for a linked server\n      properties:\n        linkedRedisCacheId:\n          description: Fully qualified resourceId of the linked redis cache.\n          type: string\n        linkedRedisCacheLocation:\n          description: Location of the linked redis cache.\n          type: string\n        serverRole:\n          description: Role of the linked server.\n          enum:\n            - Primary\n            - Secondary\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: ReplicationRole\n      required:\n        - linkedRedisCacheId\n        - linkedRedisCacheLocation\n        - serverRole\n    RedisLinkedServerProperties:\n      allOf:\n        - $ref: \"#/components/schemas/RedisLinkedServerCreateProperties\"\n      description: Properties of a linked server to be returned in get/put response\n      properties:\n        provisioningState:\n          description: Terminal state of the link between primary and secondary redis cache.\n          readOnly: true\n          type: string\n    RedisLinkedServerWithProperties:\n      allOf:\n        - $ref: \"#/components/schemas/ProxyResource\"\n      description: Response to put/get linked server (with properties) for Redis cache.\n      properties:\n        properties:\n          $ref: \"#/components/schemas/RedisLinkedServerProperties\"\n    RedisLinkedServerWithPropertiesList:\n      description: List of linked servers (with properties) of a Redis cache.\n      properties:\n        nextLink:\n          description: Link for next set.\n          readOnly: true\n          type: string\n        value:\n          description: List of linked servers (with properties) of a Redis cache.\n          items:\n            $ref: \"#/components/schemas/RedisLinkedServerWithProperties\"\n          type: array\n    RedisListResult:\n      description: The response of list Redis operation.\n      properties:\n        nextLink:\n          description: Link for next set of locations.\n          readOnly: true\n          type: string\n        value:\n          description: List of Redis cache instances.\n          items:\n            $ref: \"#/components/schemas/RedisResource\"\n          type: array\n    RedisPatchSchedule:\n      allOf:\n        - $ref: \"#/components/schemas/ProxyResource\"\n      description: Response to put/get patch schedules for Redis cache.\n      properties:\n        properties:\n          $ref: \"#/components/schemas/ScheduleEntries\"\n      required:\n        - properties\n    RedisPatchScheduleListResult:\n      description: The response of list patch schedules Redis operation.\n      properties:\n        nextLink:\n          description: Link for next page of results.\n          readOnly: true\n          type: string\n        value:\n          description: Results of the list patch schedules operation.\n          items:\n            $ref: \"#/components/schemas/RedisPatchSchedule\"\n          type: array\n    RedisProperties:\n      allOf:\n        - $ref: \"#/components/schemas/RedisCreateProperties\"\n      description: Properties of the redis cache.\n      properties:\n        accessKeys:\n          $ref: \"#/components/schemas/RedisAccessKeys\"\n        hostName:\n          description: Redis host name.\n          readOnly: true\n          type: string\n        linkedServers:\n          description: List of the linked servers associated with the cache\n          items:\n            $ref: \"#/components/schemas/RedisLinkedServer\"\n          readOnly: true\n          type: array\n        port:\n          description: Redis non-SSL port.\n          format: int32\n          readOnly: true\n          type: integer\n        provisioningState:\n          description: Redis instance provisioning status.\n          readOnly: true\n          type: string\n        redisVersion:\n          description: Redis version.\n          readOnly: true\n          type: string\n        sslPort:\n          description: Redis SSL port.\n          format: int32\n          readOnly: true\n          type: integer\n      x-ms-external: true\n    RedisRebootParameters:\n      description: Specifies which Redis node(s) to reboot.\n      properties:\n        rebootType:\n          description: Which Redis node(s) to reboot. Depending on this value data loss is\n            possible.\n          enum:\n            - PrimaryNode\n            - SecondaryNode\n            - AllNodes\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: RebootType\n        shardId:\n          description: If clustering is enabled, the ID of the shard to be rebooted.\n          format: int32\n          type: integer\n      required:\n        - rebootType\n    RedisRegenerateKeyParameters:\n      description: Specifies which Redis access keys to reset.\n      properties:\n        keyType:\n          description: The Redis access key to regenerate.\n          enum:\n            - Primary\n            - Secondary\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: RedisKeyType\n      required:\n        - keyType\n    RedisResource:\n      allOf:\n        - $ref: \"#/components/schemas/TrackedResource\"\n      description: A single Redis item in List or Get Operation.\n      properties:\n        properties:\n          $ref: \"#/components/schemas/RedisProperties\"\n        zones:\n          description: A list of availability zones denoting where the resource needs to\n            come from.\n          items:\n            type: string\n          type: array\n      required:\n        - properties\n    RedisUpdateParameters:\n      description: Parameters supplied to the Update Redis operation.\n      properties:\n        properties:\n          $ref: \"#/components/schemas/RedisUpdateProperties\"\n        tags:\n          additionalProperties:\n            type: string\n          description: Resource tags.\n          type: object\n    RedisUpdateProperties:\n      allOf:\n        - $ref: \"#/components/schemas/RedisCommonProperties\"\n      description: Patchable properties of the redis cache.\n      properties:\n        sku:\n          $ref: \"#/components/schemas/Sku\"\n      x-ms-external: true\n    Resource:\n      description: The Resource definition.\n      properties:\n        id:\n          description: Resource ID.\n          readOnly: true\n          type: string\n        name:\n          description: Resource name.\n          readOnly: true\n          type: string\n        type:\n          description: Resource type.\n          readOnly: true\n          type: string\n      x-ms-azure-resource: true\n    ScheduleEntries:\n      description: List of patch schedules for a Redis cache.\n      properties:\n        scheduleEntries:\n          description: List of patch schedules for a Redis cache.\n          items:\n            $ref: \"#/components/schemas/ScheduleEntry\"\n          type: array\n          x-ms-client-name: ScheduleEntries\n      required:\n        - scheduleEntries\n    ScheduleEntry:\n      description: Patch schedule entry for a Premium Redis Cache.\n      properties:\n        dayOfWeek:\n          description: Day of the week when a cache can be patched.\n          enum:\n            - Monday\n            - Tuesday\n            - Wednesday\n            - Thursday\n            - Friday\n            - Saturday\n            - Sunday\n            - Everyday\n            - Weekend\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: DayOfWeek\n        maintenanceWindow:\n          description: \"ISO8601 timespan specifying how much time cache patching can take. \"\n          format: duration\n          type: string\n        startHourUtc:\n          description: Start hour after which cache patching can start.\n          format: int32\n          type: integer\n      required:\n        - dayOfWeek\n        - startHourUtc\n    Sku:\n      description: SKU parameters supplied to the create Redis operation.\n      properties:\n        capacity:\n          description: \"The size of the Redis cache to deploy. Valid values: for C\n            (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium)\n            family (1, 2, 3, 4).\"\n          format: int32\n          type: integer\n        family:\n          description: \"The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P\n            = Premium).\"\n          enum:\n            - C\n            - P\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: SkuFamily\n        name:\n          description: \"The type of Redis cache to deploy. Valid values: (Basic, Standard,\n            Premium)\"\n          enum:\n            - Basic\n            - Standard\n            - Premium\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: SkuName\n      required:\n        - name\n        - family\n        - capacity\n    TrackedResource:\n      allOf:\n        - $ref: \"#/components/schemas/Resource\"\n      description: The resource model definition for a ARM tracked top level resource\n      properties:\n        location:\n          description: The geo-location where the resource lives\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n        tags:\n          additionalProperties:\n            type: string\n          description: Resource tags.\n          type: object\n          x-ms-mutability:\n            - read\n            - create\n            - update\n      required:\n        - location\n    UpgradeNotification:\n      description: Properties of upgrade notification.\n      properties:\n        name:\n          description: Name of upgrade notification.\n          readOnly: true\n          type: string\n        timestamp:\n          description: Timestamp when upgrade notification occurred.\n          format: date-time\n          readOnly: true\n          type: string\n        upsellNotification:\n          additionalProperties:\n            type: string\n          description: Details about this upgrade notification\n          readOnly: true\n          type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-redis-2017-10-01-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-redis-2017-10-01-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/subscriptions/{subscriptionId}/providers/Microsoft.Cache/CheckNameAvailability\": post: security: security \"azure_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}