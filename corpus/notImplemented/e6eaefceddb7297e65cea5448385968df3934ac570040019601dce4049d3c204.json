{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/product-apim-tooling"
		},
		"file": {
			"name": "openAPI3Definition.yaml",
			"size": 0,
			"path": "import-export-cli/integration/testdata/openAPI3Definition.yaml",
			"byteSize": 7450,
			"content": "  openapi: \"3.0.0\"\n  info: \n    title: \"Swagger Petstore New\"\n    description: \"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\"\n    termsOfService: \"http://swagger.io/terms/\"\n    contact: \n      email: \"apiteam@swagger.io\"\n    license: \n      name: \"Apache 2.0\"\n      url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    version: \"1.0.0\"\n  servers: \n    - \n      url: \"https://petstore.swagger.io/v2\"\n    - \n      url: \"http://petstore.swagger.io/v2\"\n  tags: \n    - \n      name: \"pet\"\n      description: \"Everything about your Pets\"\n      externalDocs: \n        description: \"Find out more\"\n        url: \"http://swagger.io\"\n    - \n      name: \"store\"\n      description: \"Access to Petstore orders\"\n    - \n      name: \"user\"\n      description: \"Operations about user\"\n      externalDocs: \n        description: \"Find out more about our store\"\n        url: \"http://swagger.io\"\n  paths: \n    /pet/findByStatus: \n      get: \n        tags: \n          - \"pet\"\n        summary: \"Finds Pets by status\"\n        description: \"Multiple status values can be provided with comma separated strings\"\n        operationId: \"findPetsByStatus\"\n        parameters: \n          - \n            name: \"status\"\n            in: \"query\"\n            description: \"Status values that need to be considered for filter\"\n            required: true\n            style: \"form\"\n            explode: true\n            schema: \n              type: \"array\"\n              items: \n                type: \"string\"\n                enum: \n                  - \"available\"\n                  - \"pending\"\n                  - \"sold\"\n                default: \"available\"\n        responses: \n          200: \n            description: \"successful operation\"\n            content: \n              application/xml: \n                schema: \n                  type: \"array\"\n                  items: \n                    $ref: \"#/components/schemas/Pet\"\n              application/json: \n                schema: \n                  type: \"array\"\n                  items: \n                    $ref: \"#/components/schemas/Pet\"\n          400: \n            description: \"Invalid status value\"\n        security: \n          - \n            default: []\n        x-auth-type: \"Application \u0026 Application User\"\n        x-throttling-tier: \"Unlimited\"\n        x-wso2-application-security: \n          security-types: \n            - \"oauth2\"\n          optional: false\n    /pet/{petId}: \n      get: \n        tags: \n          - \"pet\"\n        summary: \"Find pet by ID\"\n        description: \"Returns a single pet\"\n        operationId: \"getPetById\"\n        parameters: \n          - \n            name: \"petId\"\n            in: \"path\"\n            description: \"ID of pet to return\"\n            required: true\n            style: \"simple\"\n            explode: false\n            schema: \n              type: \"integer\"\n              format: \"int64\"\n        responses: \n          200: \n            description: \"successful operation\"\n            content: \n              application/xml: \n                schema: \n                  $ref: \"#/components/schemas/Pet\"\n              application/json: \n                schema: \n                  $ref: \"#/components/schemas/Pet\"\n          400: \n            description: \"Invalid ID supplied\"\n          404: \n            description: \"Pet not found\"\n        security: \n          - \n            foo: \n              - \"otest\"\n          -\n            outh: \n              - \"test\"\n        x-auth-type: \"Application \u0026 Application User\"\n        x-throttling-tier: \"Unlimited\"\n        x-wso2-application-security: \n          security-types: \n            - \"oauth2\"\n          optional: false\n    /pet/getNames: \n      get: \n        parameters: []\n        responses: \n          200: \n            description: \"ok\"\n        security: \n          - \n            default: \n              - \"test3\"\n        x-auth-type: \"Application \u0026 Application User\"\n        x-throttling-tier: null\n        x-wso2-application-security: \n          security-types: \n            - \"oauth2\"\n          optional: false\n  components: \n    schemas: \n      Category: \n        type: \"object\"\n        properties: \n          id: \n            type: \"integer\"\n            format: \"int64\"\n          name: \n            type: \"string\"\n        xml: \n          name: \"Category\"\n      Tag: \n        type: \"object\"\n        properties: \n          id: \n            type: \"integer\"\n            format: \"int64\"\n          name: \n            type: \"string\"\n        xml: \n          name: \"Tag\"\n      Pet: \n        required: \n          - \"name\"\n          - \"photoUrls\"\n        type: \"object\"\n        properties: \n          id: \n            type: \"integer\"\n            format: \"int64\"\n          category: \n            $ref: \"#/components/schemas/Category\"\n          name: \n            type: \"string\"\n            example: \"doggie\"\n          photoUrls: \n            type: \"array\"\n            xml: \n              name: \"photoUrl\"\n              wrapped: true\n            items: \n              type: \"string\"\n          tags: \n            type: \"array\"\n            xml: \n              name: \"tag\"\n              wrapped: true\n            items: \n              $ref: \"#/components/schemas/Tag\"\n          status: \n            type: \"string\"\n            description: \"pet status in the store\"\n            enum: \n              - \"available\"\n              - \"pending\"\n              - \"sold\"\n        xml: \n          name: \"Pet\"\n    requestBodies: \n      Pet: \n        description: \"Pet object that needs to be added to the store\"\n        content: \n          application/json: \n            schema: \n              $ref: \"#/components/schemas/Pet\"\n          application/xml: \n            schema: \n              $ref: \"#/components/schemas/Pet\"\n        required: true\n    securitySchemes: \n      outh: \n        type: \"oauth2\"\n        flows: \n          implicit: \n            authorizationUrl: \"https://test.com\"\n            scopes: \n              test: \"\"\n            x-scopes-bindings: \n              test: \"admin\"\n      default: \n        type: \"oauth2\"\n        flows: \n          implicit: \n            authorizationUrl: \"https://test.com\"\n            scopes: \n              read: \"\"\n              test3: \"\"\n              test4: \"\"\n            x-scopes-bindings: \n              test4: \"admin\"\n              read: \"admin\"\n              test3: \"admin\"\n      foo: \n        type: \"oauth2\"\n        flows: \n          implicit: \n            authorizationUrl: \"https://test1.com\"\n            scopes: \n              test1: \"\"\n              otest: \"\"\n            x-scopes-bindings: \n              test1: \"admin\"\n              otest: \"admin\"\n  x-wso2-auth-header: \"Authorization\"\n  x-wso2-cors: \n    corsConfigurationEnabled: false\n    accessControlAllowOrigins: \n      - \"*\"\n    accessControlAllowCredentials: false\n    accessControlAllowHeaders: \n      - \"authorization\"\n      - \"Access-Control-Allow-Origin\"\n      - \"Content-Type\"\n      - \"SOAPAction\"\n      - \"apikey\"\n    accessControlAllowMethods: \n      - \"GET\"\n      - \"PUT\"\n      - \"POST\"\n      - \"DELETE\"\n      - \"PATCH\"\n      - \"OPTIONS\"\n  x-wso2-basePath: \"/test/1.0.0\"\n  x-wso2-transports: \n    - \"http\"\n    - \"https\"\n  x-wso2-response-cache: \n    enabled: false\n    cacheTimeoutInSeconds: 300\n",
			"canonicalURL": "/github.com/wso2/product-apim-tooling@4d849906c450c817cebbb9c5d0b8c59242211a00/-/blob/import-export-cli/integration/testdata/openAPI3Definition.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/product-apim-tooling/blob/4d849906c450c817cebbb9c5d0b8c59242211a00/import-export-cli/integration/testdata/openAPI3Definition.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/pet/findByStatus\": get: security: security \"default\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}