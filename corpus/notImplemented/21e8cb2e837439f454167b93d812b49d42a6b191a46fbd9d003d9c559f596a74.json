{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Kong/insomnia-docs"
		},
		"file": {
			"name": "OAS-spec.yml",
			"size": 0,
			"path": "docs/inso-cli/cli-command-reference/OAS-spec.yml",
			"byteSize": 18863,
			"content": "openapi: 3.0.0\n\ninfo:\n  description: Learn service\n  version: 1.0.0\n  title: Learn Service\n\n\nservers:\n- url: https://{host}.konghq.com/kongu/api/v1/learn\n  # the path variable {host} will be replaced by its default value below.\n  # NOTE: if multiple entries, then only the first one will be used for the service. The others\n  # will only be added as 'targets' (by their host+port, any other attributes will be ignored).\n  # A 'servers' block is currently only supported at the root of the document.\n  # Feature request: 'servers' can also be added to \"path\" and \"operation\" objects (mimic the OAS 3 spec)\n  description: Non production servers\n  variables:\n    host:\n      enum:\n      - alpha\n      - dev\n      - qa\n      default: alpha\n- url: https://konghq.com/kongu/api/v1/learn\n  description: Production server\n\n\nx-kong-service-defaults:\n  # the defaults for the Kong services generated from 'servers' above\n  # see https://docs.konghq.com/gateway/latest/admin-api/#service-object\n  retries: 10\n  connect_timeout: 30000\n  write_timeout: 30000\n  read_timeout: 30000\n  # Feature request: defaults can also be added to \"path\" and \"operation\" objects\n\n\nx-kong-upstream-defaults:\n  # the defaults for the Kong upstreams (loadbalancers) generated from 'servers' above\n  # see https://docs.konghq.com/latest/admin-api/#upstream-object\n  hash_on: ip\n  healthchecks:\n    passive:\n      unhealthy:\n        http_failures: 3\n        tcp_failures: 3\n        timeouts: 3\n  # Feature request: defaults can also be added to \"path\" and \"operation\" objects\n\n\nx-kong-name: awesome_learnservice\n# the above directive gives the entire spec file its name. This will be used for naming\n# the service and upstream objects in Kong. If not given it will use the 'info.title'\n# field above to name them. Names are converted into valid identifiers. For example,\n# \"Learn Services\" becomes \"Learn_Services\".\n# Feature request: honor this directive on paths and operation objects as well, currently only global\n\nx-kong-plugin-correlation-id:\n  config:\n    generator: uuid#counter\n# this plugin is configured on a global level. As such it will be configured\n# on the Kong Service entity, and hence apply on all paths and operations in this spec.\n# It can be specified again on paths and operations to override the config for that\n# specific subset of the spec, in that case it will be added to the generated Kong Route entity.\n\nx-kong-plugin-request-validator:\n  config:\n    #body_schema: {}\n    #parameter_schema: {}\n    verbose_response: true\n# here we're using the request validator plugin, without specifying the\n# \"config.body_schema\" and \"config.parameter_schema\" properties.\n# This will tell the parser to automatically generate\n# their validation configuration based on Operation objects.\n# NOTE: this is specified on top level, causing ALL Operations to get\n# validation, since this is inherited to the Operation objects.\n# alternatively it can be specified on the Path or Operation levels as well\n# to only apply to that subset of the spec.\n\ntags:\n- name: learn\n  description: Operations for tracks and videos\n- name: activities\n  description: Operations for quiz, track activities, video watching activities\n# FAQ: why aren't the tags generated into the Kong configuration?\n# The OAS tags are very strongly oriented towards documentation, whereas the Kong tags\n# are use for segmentation of configuration. They serve completely different and incompatible\n# purposes.\n\nx-kong-route-defaults:\n  # the defaults for the Kong routes generated from 'paths' below\n  # see https://docs.konghq.com/latest/admin-api/#route-object\n  preserve_host: true\n  # NOTE: these defaults can also be added to \"path\" and \"operation\" objects\n  # to only apply to that subset of the spec.\n\n\npaths:\n  \"/tracks\":\n    # FAQ: why does the generated configuration have a trailing \"$\"?\n    # The OAS spec defines exact paths, where the Kong configuration defines path prefixes.\n    # Hence the generated configuration is actually a regex, with an end marker to ensure Kong\n    # will also do an exact match. Otherwise for example a path \"/tracks/whatever\" would also\n    # match this path.\n    post:\n      tags:\n      - learn\n      summary: Upsert tracks\n      operationId: upsertTracks\n      # Kong routes are generated from the top-level Service name (x-kong-name or info.title\n      # if x-kong-name is not set), and then the operationId gets appended (with '-' as separator)\n      # so the generated route name here is \"awesome_learnservice-upsertTracks\"\n      # If operationId is not specified, the default name will be the global x-kong-name\n      # with the path name and operation type.\n      # If x-kong-name is set on the path-le\n      # [specname]-[operationId]\n      # [specname]-[x-kong-name on path level]-[operation] --\u003e if no \"operationId\" provided\n      # where [specname] is the x-kong-name on global level (or in its absence \"info.title\")\n      x-kong-plugin-request-termination:\n        name: request-termination\n        config:\n          status_code: 403\n          message: So long and thanks for all the fish!\n        # the \"x-kong-plugin-\u003cplugin name\u003e\" directive can be used to add plugins\n        # to Kong routes (OAS operation object).\n        # The configuration provided is the exact same configuration as used on the Admin-API\n        # for that plugin.\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/LearningCenterTrack\"\n        '400':\n          description: Bad Request\n      requestBody:\n        \"$ref\": \"#/components/requestBodies/tracks\"\n    get:\n      tags:\n      - learn\n      summary: Get the tracks of a user\n      operationId: getUserTracks\n      security:\n        - openId: [ \"scope3\" ]\n        # TODO: validate security generated all together!!! report about it being broken\n        # See #/components/securitySchemes for the definition\n        # NOTE: only a single scheme per security object is supported!\n      x-kong-plugin-file-log:\n        \"$ref\": \"#/components/x-kong/plugins/log_to_file\"\n      # Adding another plugin, but in this case we use a reference so any updates\n      # to the configuration can be done in a single place.\n      parameters:\n      # for these parameters to get validated, \"x-kong-plugin-request-validator\" must be\n      # specified, see that directive above.\n      - name: userId\n        in: query\n        description: id of the user\n        required: true\n        schema:\n          pattern: ^[a-f0-9]{12}1[a-f0-9]{3}[89ab][a-f0-9]{15}$\n          type: string\n      - name: trackIds\n        in: query\n        description: track ids to get\n        required: false\n        schema:\n          type: array\n          items:\n            description: trackId\n            type: string\n          minItems: 0\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/UserLearningCenterTrack\"\n        '400':\n          description: Bad Request\n  \"/tracks/system\":\n    get:\n      tags:\n      - learn\n      summary: Gets system tracks for a user\n      operationId: getSystemTracks\n      security:\n        - basicAuth: []\n        # TODO: validate security generated all together!!! report about it being broken\n        # See #/components/securitySchemes for the definition\n      parameters:\n      - name: userId\n        in: query\n        description: id of the user\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/LearningCenterTrack\"\n        '400':\n          description: Bad Request\n  \"/tracks/{id}\":\n    delete:\n      tags:\n      - learn\n      summary: Delete a Track by Id\n      operationId: deleteTrack\n      security:\n        - keyAuth: []\n        # TODO: validate security generated all together!!! report about it being broken\n        # See #/components/securitySchemes for the definition\n      parameters:\n      - name: id\n        in: path\n        description: Id of the Track to delete\n        required: true\n        schema:\n          \"$ref\": \"#/components/schemas/TrackId\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/LearningCenterTrack\"\n        '400':\n          description: Bad Request\n  \"/videos\":\n    get:\n      tags:\n      - learn\n      summary: Get Learning Center Videos for a user\n      description: Returns Learning Center Videos for a user\n      operationId: getVideos\n      parameters:\n      - name: userId\n        in: query\n        description: id of the user\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/LearningCenterVideo\"\n        '400':\n          description: Bad Request\n    post:\n      tags:\n      - learn\n      summary: Upsert Learning Center Videos\n      operationId: upsertVideos\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/LearningCenterVideo\"\n        '400':\n          description: Bad Request\n      requestBody:\n        \"$ref\": \"#/components/requestBodies/Video\"\n\n#TODO: cleanup unused stuff in components below\ncomponents:\n  x-kong:\n    # reusable Kong plugin configurations\n    plugins:\n      log_to_file:\n        # file-log plugin configuration\n        config:\n          path: \"/dev/stderr\"\n\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n      x-kong-security-basic-auth:\n        # using this directive, the scheme can be extended with Kong-specific\n        # configuration options.\n        # NOTE: the directive name is \"security\", not \"plugin\"! because it\n        # extends the existing OAS security directives\n        config:\n          hide_credentials: true\n    keyAuth:\n      type: apiKey\n      name: apikey\n      in: header\n      # NOTE: 'in' will be ignored since Kong will always look in header and\n      # query anyway for key-auth.\n      x-kong-security-key-auth:\n        config:\n          key_names: [ \"mykey\", \"yourkey\" ]\n          # the \"key_names\" will be merged with the name specified in OAS above\n          # so effectively keynames that will be accepted are now: \"apikey\",\n          # \"mykey\", and \"yourkey\".\n          hide_credentials: true\n          run_on_preflight: false\n    openId:\n      type: openIdConnect\n      openIdConnectUrl: https://konghq.com/oauth2/.well-known/openid-configuration\n      x-kong-security-openid-connect:\n        # we specify that the Kong OpenID COnnect plugin is to be used to implement this\n        # \"security scheme object\". Any custom configuration can be added as usual\n        # for plugins.\n        config:\n          run_on_preflight: false\n          scopes_required: [\"scope1\", \"scope2\"]\n          # the \"scopes_required\" listed here will be merged with the scopes specified\n          # on the security requirement. So if an Operation specifies a security\n          # requirement with \"scope3\", then the effective scopes applied will\n          # be \"scope1\", \"scope2\", and \"scope3\". For example: \"read\", \"write\", or\n          # \"delete\".\n\n  schemas:\n    Track:\n      type: object\n      description: Track\n      properties:\n        id:\n          \"$ref\": \"#/components/schemas/TrackId\"\n        index:\n          type: integer\n          format: int32\n          minimum: 1\n          maximum: 100000000\n        description:\n          \"$ref\": \"#/components/schemas/parameterValue\"\n        category:\n          \"$ref\": \"#/components/schemas/parameterValue\"\n        subcategory:\n          \"$ref\": \"#/components/schemas/parameterValue\"\n        quizId:\n          \"$ref\": \"#/components/schemas/parameterValue\"\n        assetClass:\n          \"$ref\": \"#/components/schemas/parameterValue\"\n    UserLearningCenterTrack:\n      type: object\n      properties:\n        id:\n          description: Id of a learning center track\n          type: string\n        index:\n          type: integer\n          format: int64\n        description:\n          type: string\n        category:\n          type: string\n        subcategory:\n          type: string\n        quizId:\n          type: string\n        isEnabled:\n          type: boolean\n        assetClass:\n          type: string\n    LearningCenterTrack:\n      type: object\n      properties:\n        id:\n          description: Id of a learning center track\n          type: string\n        index:\n          type: integer\n          format: int64\n        description:\n          type: string\n        category:\n          type: string\n        subcategory:\n          type: string\n        quizId:\n          type: string\n        entitlements:\n          type: array\n          items:\n            type: string\n          minItems: 0\n        assetClass:\n          type: string\n    LearningCenterVideo:\n      type: object\n      properties:\n        id:\n          description: Id of a learning center video\n          type: string\n        index:\n          type: integer\n          format: int64\n        title:\n          type: string\n        abbreviation:\n          type: string\n        trackId:\n          \"$ref\": \"#/components/schemas/TrackId\"\n        tileSummary:\n          type: string\n        category:\n          type: string\n        subcategory:\n          type: string\n        thumbnail:\n          type: string\n        baseUrl:\n          type: string\n        duration:\n          type: string\n    TrackId:\n      description: Id of a learning center track\n      type: string\n      minLength: 1\n      maxLength: 5\n    TrackActivities:\n      description: Contains the Track activities of a user\n      type: object\n      properties:\n        userId:\n          \"$ref\": \"#/components/schemas/parameterValue\"\n        tracks:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/TrackActivity\"\n    TrackActivity:\n      type: object\n      properties:\n        trackId:\n          \"$ref\": \"#/components/schemas/TrackId\"\n        quizId:\n          \"$ref\": \"#/components/schemas/parameterValue\"\n        quizAttempts:\n          type: integer\n        videosWatched:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/VideoActivity\"\n    VideoActivity:\n      type: object\n      properties:\n        videoId:\n          \"$ref\": \"#/components/schemas/parameterValue\"\n        timestamp:\n          \"$ref\": \"#/components/schemas/dateOrTimestamp\"\n        sessionId:\n          \"$ref\": \"#/components/schemas/parameterValue\"\n    QuizResult:\n      description: Quiz Result\n      type: object\n      properties:\n        userId:\n          \"$ref\": \"#/components/schemas/parameterValue\"\n        session:\n          \"$ref\": \"#/components/schemas/parameterValue\"\n        track:\n          \"$ref\": \"#/components/schemas/TrackId\"\n        quizId:\n          \"$ref\": \"#/components/schemas/parameterValue\"\n        passed:\n          description: determines whether the user passed the quiz\n          type: boolean\n        score:\n          type: number\n          format: double\n          minimum: 0.1\n          maximum: 100000000\n        scoreSheet:\n          description: Scoresheet for Quiz\n          type: array\n          minItems: 1\n          maxItems: 1000\n          items:\n            type: boolean\n        timestamp:\n          description: Timestamp of quiz result\n          type: string\n          pattern: \"^[\\\\w\\\\- :.*/\\\\\\\\]{1,128}$\"\n    CertificationStatusItem:\n      type: object\n      properties:\n        track:\n          type: string\n        timestamp:\n          \"$ref\": \"#/components/schemas/dateOrTimestamp\"\n    LearningCenterTrackSummary:\n      type: object\n      properties:\n        trackId:\n          \"$ref\": \"#/components/schemas/TrackId\"\n        completed:\n          type: integer\n        inProgress:\n          type: integer\n        notStarted:\n          type: integer\n    TrackIdLearningCenterUserTrackDetailsMap:\n      type: object\n      additionalProperties:\n        \"$ref\": \"#/components/schemas/LearningCenterUserTrackDetails\"\n    LearningCenterUserTrackDetails:\n      type: object\n      required:\n      - videosWatched\n      - certificateEarned\n      - quizAttempts\n      - videoCompletionTimes\n      properties:\n        videosWatched:\n          type: array\n          items:\n            type: boolean\n        quizScore:\n          type: number\n          format: double\n        certificateEarned:\n          type: boolean\n        quizAttempts:\n          type: integer\n        videoCompletionTimes:\n          type: array\n          items:\n            type: string\n            format: date-time\n        quizCompletionTime:\n          type: string\n          format: date-time\n    LearningCenterUserSummary:\n      type: object\n      required:\n      - completed\n      - inProgress\n      - notStarted\n      properties:\n        completed:\n          type: integer\n        inProgress:\n          type: integer\n        notStarted:\n          type: integer\n    parameterValue:\n      anyOf:\n      - \"$ref\": \"#/components/schemas/symbol\"\n      - \"$ref\": \"#/components/schemas/sanitized_number\"\n      - \"$ref\": \"#/components/schemas/symbolArray\"\n    dateOrTimestamp:\n      oneOf:\n      - type: string\n        format: dateTime\n      - type: string\n        format: date\n      - type: string\n        pattern: \"^[0-9]{4}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}$\"\n    symbol:\n      type: string\n      maxLength: 4096\n    symbolArray:\n      type: array\n      items:\n        \"$ref\": \"#/components/schemas/symbol\"\n      minItems: 0\n      maxItems: 1000\n    sanitized_number:\n      type: integer\n      minimum: -1000000000\n      maximum: 1000000000\n  requestBodies:\n    tracks:\n      content:\n        application/json:\n          schema:\n            type: array\n            minItems: 1\n            items:\n              \"$ref\": \"#/components/schemas/Track\"\n    Video:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              videos:\n                type: array\n                minItems: 1\n                maxItems: 1000\n                items:\n                  \"$ref\": \"#/components/schemas/LearningCenterVideo\"\n",
			"canonicalURL": "/github.com/Kong/insomnia-docs@0aac1375c891753a7506d83e7235972ba1515040/-/blob/docs/inso-cli/cli-command-reference/OAS-spec.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Kong/insomnia-docs/blob/0aac1375c891753a7506d83e7235972ba1515040/docs/inso-cli/cli-command-reference/OAS-spec.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/tracks\": get: security: security \"openId\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}