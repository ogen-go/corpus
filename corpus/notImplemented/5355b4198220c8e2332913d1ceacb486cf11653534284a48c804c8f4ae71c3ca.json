{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/teamdigitale/api-starter-kit"
		},
		"file": {
			"name": "attribute-authority.yaml",
			"size": 0,
			"path": "python-flask-spid/attribute_authority/attribute-authority.yaml",
			"byteSize": 11805,
			"content": "x-commons:\n  throttling_headers: \u0026throttling_headers\n    X-RateLimit-Limit:\n      $ref: '#/components/headers/X-RateLimit-Limit'\n    X-RateLimit-Remaining:\n      $ref: '#/components/headers/X-RateLimit-Remaining'\n    X-RateLimit-Reset:\n      $ref: '#/components/headers/X-RateLimit-Reset'\n  common_responses: \u0026common_responses\n    '400':\n      $ref: '#/components/responses/400BadRequest'\n    '429':\n      $ref: '#/components/responses/429TooManyRequests'\n    '503':\n      $ref: '#/components/responses/503ServiceUnavailable'\n    default:\n      $ref: '#/components/responses/default'\n\nopenapi: 3.0.0\ninfo:\n  contact:\n    email: robipolli@gmail.com\n    name: Roberto Polli\n    url: https://twitter.com/ioggstream\n  title: Ora esatta.\n  version: 1.0.0\n  x-api-id: 00000000-0000-0000-0000-000000000000\n  x-audience:\n  - public\n  x-summary: Questa AA di prova ritorna una serie di attributi al chiamante.\n  description: |\n    #### Documentazione\n\n    ##### Sottosezioni\n    E' possibile utilizzare - con criterio - delle sottosezioni.\n\n    #### Note\n\n    Il servizio non richiede autenticazione, ma va' usato rispettando gli\n    header di throttling esposti in conformita' alle Linee Guida del Modello di interoperabilita'.\n\n    #### Informazioni tecniche ed esempi\n\n    Esempio:\n\n    ```\n    http http://localhost:8443/datetime/v1/echo\n    {\n      'datetime': '2018-12-30T12:23:32Z'\n    }\n    ```\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  termsOfService: http://swagger.io/terms/\nservers:\n- description: Test server\n  url: https://aa.example.com/aa/v1\n- description: Development server\n  url: https://localhost:8443/aa/v1\ntags:\n- description: Retrieve informations\n  externalDocs:\n    url: http://docs.my-api.com/pet-operations.htm\n  name: public\npaths:\n  /:\n    get:\n      operationId: attribute_authority.index\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: string\n          description: A list to the possible paths.\n      summary: AA Index.\n  /attributes/driving_license/{taxCode}:\n    post:\n      description: |\n        Ritorna la patente di guida associata ad un codice fiscale\n      operationId: attribute_authority.get_attribute_simple\n      parameters:\n      - name: taxCode\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: A JWS containing a claim.\n        required: true\n        content:\n          application/jose:\n            schema:\n              type: string\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AttributeRequest'\n      responses:\n        \u003c\u003c: *common_responses\n        '200':\n          content:\n            application/jose: {}\n          description: |\n            Il server ha ritornato gli attributi richiesti.\n      summary: Ritorna la patente di un soggetto.\n      tags:\n      - public\n  /consent-attributes/invalido_di_guerra/{taxCode}:\n    post:\n      description: |\n        Ritorna se una persona Ã¨ invalido di guerra\n      operationId: attribute_authority.get_attribute_consent\n      parameters:\n      - name: taxCode\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: A JWS containing a claim.\n        required: true\n        content:\n          application/jose:\n            schema:\n              type: string\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AttributeRequest'\n      responses:\n        \u003c\u003c: *common_responses\n        '200':\n          content:\n            application/jose: {}\n          description: |\n            Il server ha ritornato gli attributi richiesti.\n        '403':\n          content:\n            application/jose: {}\n          description: |\n            La richiesta richiede un consenso.\n  /consents/{taxCode}:\n    get:\n      description: |\n        Mostra il form di richiesta di consenso.\n      operationId: attribute_authority.get_consent\n      parameters:\n      - name: taxCode\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: callback_url\n        in: query\n        required: true\n        schema:\n          type: string\n          format: url\n      - name: consent\n        in: query\n        required: true\n        schema:\n          type: string\n          format: jws\n      - name: accept\n        in: query\n        required: false\n        schema:\n          type: string\n      responses:\n        \u003c\u003c: *common_responses\n        '200':\n          content:\n            application/jose: {}\n          description: |\n            Il server imposta il consenso sullo store dell'utente.\n    post:\n      description: |\n        Ritorna un consenso.\n      operationId: attribute_authority.post_consent\n      parameters:\n      - name: taxCode\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: callback_url\n        in: query\n        required: true\n        schema:\n          type: string\n          format: url\n      requestBody:\n        description: A JWS containing a claim.\n        required: true\n        content:\n          application/jose:\n            schema:\n              type: string\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConsentRequest'\n      responses:\n        \u003c\u003c: *common_responses\n        '200':\n          content:\n            application/jose: {}\n          description: |\n            Il server imposta il consenso sullo store dell'utente.\n\n\n  /metadata:\n    get:\n      operationId: attribute_authority.get_metadata\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Metadata'\n          description: Metadata list.\n      summary: metadata\n\n  /status:\n    get:\n      description: |\n        Ritorna lo stato dell'applicazione. A scopo\n        di test, su base randomica puo' ritornare\n        un errore.\n      operationId: attribute_authority.get_status\n      responses:\n        \u003c\u003c: *common_responses\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n          description: |\n            Il server ha ritornato lo status. In caso di problemi\n            ritorna sempre un problem+json.\n          headers:\n            \u003c\u003c: *throttling_headers\n      summary: Ritorna lo stato dell'applicazione.\n      tags:\n      - public\ncomponents:\n  headers:\n    Retry-After:\n      description: |-\n        Retry contacting the endpoint *at least* after seconds.\n        See https://tools.ietf.org/html/rfc7231#section-7.1.3\n      schema:\n        format: int32\n        type: integer\n    X-RateLimit-Limit:\n      description: The number of allowed requests in the current period\n      schema:\n        format: int32\n        type: integer\n    X-RateLimit-Remaining:\n      description: The number of remaining requests in the current period\n      schema:\n        format: int32\n        type: integer\n    X-RateLimit-Reset:\n      description: The number of seconds left in the current period\n      schema:\n        format: int32\n        type: integer\n  responses:\n    400BadRequest:\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n      description: Bad Request\n    404NotFound:\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n      description: Not Found\n    429TooManyRequests:\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n      description: Too many requests\n      headers:\n        Retry-After:\n          description: |-\n            Retry contacting the endpoint *at least* after seconds.\n            See https://tools.ietf.org/html/rfc7231#section-7.1.3\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Limit:\n          description: The number of allowed requests in the current period\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Remaining:\n          description: The number of remaining requests in the current period\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Reset:\n          description: The number of seconds left in the current period\n          schema:\n            format: int32\n            type: integer\n    503ServiceUnavailable:\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n      description: Service Unavailable\n      headers:\n        Retry-After:\n          description: |-\n            Retry contacting the endpoint *at least* after seconds.\n            See https://tools.ietf.org/html/rfc7231#section-7.1.3\n          schema:\n            format: int32\n            type: integer\n    default:\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n      description: Unexpected error\n  schemas:\n    ConsentRequest:\n      properties:\n        request_token:\n          description: A request token based jose+jws\n          type: string\n          example:\n            v:\n              description: versione della AA\n            attributes:\n              type: array\n              item:\n                type: string\n\n    AttributeRequest:\n      properties:\n        request_token:\n          description: A request token based jose+jws\n          type: string\n          example:\n            v:\n              description: versione della AA\n            attributes:\n              type: array\n              item:\n                type: string\n    Attributes:\n      type: array\n      items:\n        $ref: '#/components/schemas/Attribute'\n    Attribute:\n      type: object\n    Problem:\n      properties:\n        detail:\n          description: |\n            A human readable explanation specific to this occurrence of the\n            problem.\n          example: Connection to database timed out\n          type: string\n        instance:\n          description: |\n            An absolute URI that identifies the specific occurrence of the problem.\n            It may or may not yield further information if dereferenced.\n          format: uri\n          type: string\n        status:\n          description: |\n            The HTTP status code generated by the origin server for this occurrence\n            of the problem.\n          example: 503\n          exclusiveMaximum: true\n          format: int32\n          maximum: 600\n          minimum: 100\n          type: integer\n        title:\n          description: |\n            A short, summary of the problem type. Written in english and readable\n            for engineers (usually not suited for non technical stakeholders and\n            not localized); example: Service Unavailable\n          type: string\n        type:\n          default: about:blank\n          description: |\n            An absolute URI that identifies the problem type.  When dereferenced,\n            it SHOULD provide human-readable documentation for the problem type\n            (e.g., using HTML).\n          example: https://tools.ietf.org/html/rfc7231#section-6.6.4\n          format: uri\n          type: string\n      type: object\n    Metadata:\n      description: Metatada for AA\n      properties:\n        entityID:\n          example: \"https://172.24.0.3/aa/v1/metadata\"\n          format: uri\n          type: string\n        x509cert:\n          example: 'PEMblablabla'\n          format: x509\n          type: string\n        timestamp:\n          example: '2018-12-30T12:23:32Z'\n          format: date-time\n          type: string\n",
			"canonicalURL": "/github.com/teamdigitale/api-starter-kit@2e1fb469c9572260bc3d5472ea833804dbc2dfec/-/blob/python-flask-spid/attribute_authority/attribute-authority.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/teamdigitale/api-starter-kit/blob/2e1fb469c9572260bc3d5472ea833804dbc2dfec/python-flask-spid/attribute_authority/attribute-authority.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/attributes/driving_license/{taxCode}\": post: responses: 200: contents: unsupported content types: [application/jose]",
	"NotImplemented": [
		"unsupported content types"
	]
}