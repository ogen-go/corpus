{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dotwebstack/dotwebstack-framework"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "integration-test/openapi-postgres/src/test/resources/config/openapi.yaml",
			"byteSize": 8119,
			"content": "openapi: 3.0.2\n\ninfo:\n  title: Breweries\n  version: 3.0.0\n\ncomponents:\n  schemas:\n    Beer:\n      type: object\n      required:\n        - identifier\n        - name\n      properties:\n        identifier:\n          type: string\n        name:\n          type: string\n          nullable: true\n#        ingredients:\n#          type: array\n#          items:\n#            $ref: '#/components/schemas/Ingredient'\n#        link:\n#          type: string\n#          x-dws-expr: '`${env.dotwebstack.base_url}/beers/${fields.identifier}`'\n#        class:\n#          type: string\n#          x-dws-default: 'Beer'\n    BreweryCollection:\n      type: object\n      x-dws-envelope: true\n      required:\n        - _embedded\n        - _links\n      properties:\n        _embedded:\n          x-dws-envelope: true\n          type: object\n          required:\n            - breweries\n          properties:\n            breweries:\n              type: array\n              items:\n               $ref: '#/components/schemas/Brewery'\n#        _links:\n#          x-dws-envelope: true\n#          type: object\n#          required:\n#            - self\n#          properties:\n#            self:\n#              x-dws-envelope: true\n#              type: object\n#              required:\n#                - href\n#              properties:\n#                href:\n#                  type: string\n#                  x-dws-expr: '`${env.dotwebstack.base_url}/breweries`'\n    Brewery:\n      type: object\n      required:\n        - identifier_brewery\n        - name\n      properties:\n        identifier_brewery:\n          type: string\n        name:\n          type: string\n          nullable: true\n        postalAddress:\n          $ref: '#/components/schemas/Address'\n        visitAddress:\n          $ref: '#/components/schemas/Address'\n        geometry:\n          type: object\n#        beers:\n#          type: array\n#          items:\n#            $ref: '#/components/schemas/Beer'\n#        hasBeers:\n#          type: boolean\n#        postalCode:\n#          type: string\n#          nullable: true\n#        founded:\n#          type: string\n#        link:\n#          type: string\n#          x-dws-expr: '`${env.dotwebstack.base_url}/brewery/${fields.identifier_brewery}`'\n#        countries:\n#          type: array\n#          x-dws-default: ['Netherlands','Belgium']\n#          items:\n#            type: string\n#        class:\n#          type: string\n#          x-dws-default: 'Brewery'\n    Ingredient:\n      type: object\n      required:\n        - name\n      properties:\n        identifier:\n          type: string\n        name:\n          type: string\n          nullable: true\n    Address:\n      type: object\n      nullable: true\n      required:\n        - identifier_address\n        - street\n        - city\n      properties:\n        identifier_address:\n          type: string\n        street:\n          type: string\n        city:\n          type: string\n\npaths:\n  /breweries:\n    get:\n      x-dws-query:\n        field: breweries\n        filters:\n          breweries:\n            type: BreweryFilter\n            fields:\n              name:\n                in: args.name\n      parameters:\n        - name: expand\n          x-dws-type: expand\n          in: query\n          schema:\n            type: array\n            items:\n              type: string\n              enum: ['postalAddress', 'beers','beers.class', 'beers.ingredients', 'founded', 'hasBeers', 'postalCode','countries','class']\n        - name: name\n          in: query\n          explode: false\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: sort\n          in: query\n          required: false\n          schema:\n            type: string\n            enum: ['name', '-name']\n#        - name: foundedAfter\n#          in: query\n#          required: false\n#          schema:\n#            type: string\n#        - name: foundedBefore\n#          in: query\n#          required: false\n#          schema:\n#            type: string\n#        - name: page\n#          in: query\n#          required: false\n#          schema:\n#            type: string\n#        - name: pageSize\n#          in: query\n#          schema:\n#            type: string\n#        - name: withAddressSubject\n#          in: query\n#          schema:\n#            type: string\n#        - name: searchName\n#          in: query\n#          explode: false\n#          required: false\n#          schema:\n#            type: array\n#            items:\n#              type: string\n#        - name: searchPostalCode\n#          in: query\n#          schema:\n#            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/BreweryCollection'\n            application/stream+json:\n              schema:\n                $ref: '#/components/schemas/BreweryCollection'\n#          headers:\n#            X-Pagination-Limit:\n#              schema:\n#                type: integer\n#                x-dws-expr: args.pageSize\n#            X-Pagination-Page:\n#              schema:\n#                type: integer\n#                x-dws-expr: args.page\n  /breweriesInContext:\n    get:\n      x-dws-query:\n        field: breweriesInContext\n        filters:\n          breweries:\n            type: BreweryFilter\n            fields:\n              name:\n                in: args.name\n        context:\n          validOn: args.validOn\n          availableOn: args.availableOn\n      parameters:\n        - name: expand\n          x-dws-type: expand\n          in: query\n          schema:\n            type: array\n            items:\n              type: string\n              enum: ['postalAddress', 'beers','beers.class', 'beers.ingredients', 'founded', 'hasBeers', 'postalCode','countries','class']\n        - name: name\n          in: query\n          explode: false\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: validOn\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date\n            example: '2021-01-01'\n        - name: availableOn\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n            example: '2021-01-01T12:00:00.000+01:00'\n      responses:\n        200:\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/BreweryCollection'\n            application/stream+json:\n              schema:\n                $ref: '#/components/schemas/BreweryCollection'\n  /brewery/{identifier_brewery}:\n    get:\n      x-dws-query:\n        field: brewery\n#        keys:\n#          identifier_brewery: $path.identifier\n      parameters:\n        - name: expand\n          x-dws-type: expand\n          in: query\n          schema:\n            type: array\n            items:\n              type: string\n              enum: ['postalCode', 'beers', 'beers.ingredients']\n        - name: identifier_brewery\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/Brewery'\n  /brewery_post:\n    post:\n      x-dws-query: brewery\n      parameters:\n        - name: expand\n          x-dws-type: expand\n          in: query\n          schema:\n            type: array\n            items:\n              type: string\n              enum: ['postalCode', 'beers', 'beers.ingredients']\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - identifier\n              properties:\n                identifier:\n                  type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/Brewery'\n",
			"canonicalURL": "/github.com/dotwebstack/dotwebstack-framework@0b7b4ac64c4d3503ecda9aff44a79da47d1e2ba8/-/blob/integration-test/openapi-postgres/src/test/resources/config/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dotwebstack/dotwebstack-framework/blob/0b7b4ac64c4d3503ecda9aff44a79da47d1e2ba8/integration-test/openapi-postgres/src/test/resources/config/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/breweries\": get: responses: 200: contents: unsupported content types: [application/hal+json, application/stream+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}