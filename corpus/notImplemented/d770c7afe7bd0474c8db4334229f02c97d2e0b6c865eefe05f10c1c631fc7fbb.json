{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "repo_apps.yaml",
			"size": 0,
			"path": "providers/src/github/v0.1.1/services/repo_apps.yaml",
			"byteSize": 25738,
			"content": "paths:\n  /repos/{owner}/{repo}/installation:\n    get:\n      summary: Get a repository installation for the authenticated app\n      description: |-\n        Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\n        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n      tags:\n        - apps\n      operationId: apps/get-repo-installation\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/apps#get-a-repository-installation-for-the-authenticated-app\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/installation'\n              examples:\n                default:\n                  $ref: '#/components/examples/installation'\n        '301':\n          $ref: '#/components/responses/moved_permanently'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: apps\n        subcategory: null\ncomponents:\n  schemas:\n    installation:\n      title: Installation\n      description: Installation\n      type: object\n      properties:\n        id:\n          description: The ID of the installation.\n          type: integer\n          example: 1\n        account:\n          nullable: true\n          anyOf:\n            - $ref: '#/components/schemas/simple-user'\n            - $ref: '#/components/schemas/enterprise'\n        repository_selection:\n          description: Describe whether all repositories have been selected or there's a selection involved\n          type: string\n          enum:\n            - all\n            - selected\n        access_tokens_url:\n          type: string\n          format: uri\n          example: https://api.github.com/installations/1/access_tokens\n        repositories_url:\n          type: string\n          format: uri\n          example: https://api.github.com/installation/repositories\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/organizations/github/settings/installations/1\n        app_id:\n          type: integer\n          example: 1\n        target_id:\n          description: The ID of the user or organization this token is being scoped to.\n          type: integer\n        target_type:\n          type: string\n          example: Organization\n        permissions:\n          $ref: '#/components/schemas/app-permissions'\n        events:\n          type: array\n          items:\n            type: string\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        single_file_name:\n          type: string\n          example: config.yaml\n          nullable: true\n        has_multiple_single_files:\n          type: boolean\n          example: true\n        single_file_paths:\n          type: array\n          items:\n            type: string\n          example:\n            - config.yml\n            - .github/issue_TEMPLATE.md\n        app_slug:\n          type: string\n          example: github-actions\n        suspended_by:\n          $ref: '#/components/schemas/nullable-simple-user'\n        suspended_at:\n          type: string\n          format: date-time\n          nullable: true\n        contact_email:\n          type: string\n          example: '\"test_13f1e99741e3e004@d7e1eb0bc0a1ba12.com\"'\n          nullable: true\n      required:\n        - id\n        - app_id\n        - app_slug\n        - target_id\n        - target_type\n        - single_file_name\n        - repository_selection\n        - access_tokens_url\n        - html_url\n        - repositories_url\n        - events\n        - account\n        - permissions\n        - created_at\n        - updated_at\n        - suspended_by\n        - suspended_at\n    simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n    enterprise:\n      title: Enterprise\n      description: An enterprise account\n      type: object\n      properties:\n        description:\n          description: A short description of the enterprise.\n          type: string\n          nullable: true\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/enterprises/octo-business\n        website_url:\n          description: The enterprise's website URL.\n          type: string\n          nullable: true\n          format: uri\n        id:\n          description: Unique identifier of the enterprise\n          example: 42\n          type: integer\n        node_id:\n          type: string\n          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name:\n          description: The name of the enterprise.\n          type: string\n          example: Octo Business\n        slug:\n          description: The slug url identifier for the enterprise.\n          type: string\n          example: octo-business\n        created_at:\n          type: string\n          nullable: true\n          format: date-time\n          example: '2019-01-26T19:01:12Z'\n        updated_at:\n          type: string\n          nullable: true\n          format: date-time\n          example: '2019-01-26T19:14:43Z'\n        avatar_url:\n          type: string\n          format: uri\n      required:\n        - id\n        - node_id\n        - name\n        - slug\n        - html_url\n        - created_at\n        - updated_at\n        - avatar_url\n    app-permissions:\n      title: App Permissions\n      type: object\n      description: The permissions granted to the user-to-server access token.\n      properties:\n        actions:\n          type: string\n          description: 'The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        administration:\n          type: string\n          description: 'The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        checks:\n          type: string\n          description: 'The level of permission to grant the access token for checks on code. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        contents:\n          type: string\n          description: 'The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        deployments:\n          type: string\n          description: 'The level of permission to grant the access token for deployments and deployment statuses. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        environments:\n          type: string\n          description: 'The level of permission to grant the access token for managing repository environments. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        issues:\n          type: string\n          description: 'The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        metadata:\n          type: string\n          description: 'The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        packages:\n          type: string\n          description: 'The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        pages:\n          type: string\n          description: 'The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        pull_requests:\n          type: string\n          description: 'The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        repository_hooks:\n          type: string\n          description: 'The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        repository_projects:\n          type: string\n          description: 'The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.'\n          enum:\n            - read\n            - write\n            - admin\n        secret_scanning_alerts:\n          type: string\n          description: 'The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        secrets:\n          type: string\n          description: 'The level of permission to grant the access token to manage repository secrets. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        security_events:\n          type: string\n          description: 'The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        single_file:\n          type: string\n          description: 'The level of permission to grant the access token to manage just a single file. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        statuses:\n          type: string\n          description: 'The level of permission to grant the access token for commit statuses. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        vulnerability_alerts:\n          type: string\n          description: 'The level of permission to grant the access token to manage Dependabot alerts. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        workflows:\n          type: string\n          description: 'The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: `write`.'\n          enum:\n            - write\n        members:\n          type: string\n          description: 'The level of permission to grant the access token for organization teams and members. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_administration:\n          type: string\n          description: 'The level of permission to grant the access token to manage access to an organization. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_hooks:\n          type: string\n          description: 'The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_plan:\n          type: string\n          description: 'The level of permission to grant the access token for viewing an organization''s plan. Can be one of: `read`.'\n          enum:\n            - read\n        organization_projects:\n          type: string\n          description: 'The level of permission to grant the access token to manage organization projects and projects beta (where available). Can be one of: `read`, `write`, or `admin`.'\n          enum:\n            - read\n            - write\n            - admin\n        organization_packages:\n          type: string\n          description: 'The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_secrets:\n          type: string\n          description: 'The level of permission to grant the access token to manage organization secrets. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_self_hosted_runners:\n          type: string\n          description: 'The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_user_blocking:\n          type: string\n          description: 'The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        team_discussions:\n          type: string\n          description: 'The level of permission to grant the access token to manage team discussions and related comments. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n      example:\n        contents: read\n        issues: read\n        deployments: write\n        single_file: read\n    nullable-simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n      nullable: true\n    basic-error:\n      title: Basic Error\n      description: Basic Error\n      type: object\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        url:\n          type: string\n        status:\n          type: string\n  parameters:\n    owner:\n      name: owner\n      in: path\n      required: true\n      schema:\n        type: string\n    repo:\n      name: repo\n      in: path\n      required: true\n      schema:\n        type: string\n  responses:\n    moved_permanently:\n      description: Moved permanently\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    not_found:\n      description: Resource not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n  securitySchemes: {}\n  callbacks: {}\n  examples:\n    installation:\n      value:\n        id: 1\n        account:\n          login: github\n          id: 1\n          node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n          avatar_url: https://github.com/images/error/hubot_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/orgs/github\n          html_url: https://github.com/github\n          followers_url: https://api.github.com/users/github/followers\n          following_url: https://api.github.com/users/github/following{/other_user}\n          gists_url: https://api.github.com/users/github/gists{/gist_id}\n          starred_url: https://api.github.com/users/github/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/github/subscriptions\n          organizations_url: https://api.github.com/users/github/orgs\n          repos_url: https://api.github.com/orgs/github/repos\n          events_url: https://api.github.com/orgs/github/events\n          received_events_url: https://api.github.com/users/github/received_events\n          type: Organization\n          site_admin: false\n        repository_selection: all\n        access_tokens_url: https://api.github.com/installations/1/access_tokens\n        repositories_url: https://api.github.com/installation/repositories\n        html_url: https://github.com/organizations/github/settings/installations/1\n        app_id: 1\n        target_id: 1\n        target_type: Organization\n        permissions:\n          checks: write\n          metadata: read\n          contents: read\n        events:\n          - push\n          - pull_request\n        created_at: '2018-02-09T20:51:14Z'\n        updated_at: '2018-02-09T20:51:14Z'\n        single_file_name: config.yml\n        has_multiple_single_files: true\n        single_file_paths:\n          - config.yml\n          - .github/issue_TEMPLATE.md\n        app_slug: github-actions\n        suspended_at: null\n        suspended_by: null\n  requestBodies: {}\n  headers: {}\n  links: {}\n  x-stackQL-resources:\n    repo_apps:\n      id: github.repo_apps.repo_apps\n      name: repo_apps\n      title: repo_apps\n      methods:\n        get_repo_installation:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1installation/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/repo_apps/methods/get_repo_installation'\n        insert: []\n        update: []\n        delete: []\nopenapi: 3.0.3\nservers:\n  - url: https://api.github.com\ntags:\n  - name: actions\n    description: Endpoints to manage GitHub Actions using the REST API.\n  - name: activity\n    description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  - name: apps\n    description: Information for integrations and installations.\n  - name: billing\n    description: Monitor charges and usage from Actions and Packages.\n  - name: checks\n    description: Rich interactions with checks run by your integrations.\n  - name: code-scanning\n    description: Retrieve code scanning alerts from a repository.\n  - name: codes-of-conduct\n    description: Insight into codes of conduct for your communities.\n  - name: codespaces\n    description: Endpoints to manage Codespaces using the REST API.\n  - name: emojis\n    description: List emojis available to use on GitHub.\n  - name: enterprise-admin\n    description: Administer a GitHub enterprise.\n  - name: dependabot\n    description: Endpoints to manage Dependabot.\n  - name: gists\n    description: View, modify your gists.\n  - name: git\n    description: Raw Git functionality.\n  - name: gitignore\n    description: View gitignore templates\n  - name: interactions\n    description: Owner or admin management of users interactions.\n  - name: issues\n    description: Interact with GitHub Issues.\n  - name: licenses\n    description: View various OSS licenses.\n  - name: markdown\n    description: Render GitHub flavored markdown\n  - name: meta\n    description: Endpoints that give information about the API.\n  - name: migrations\n    description: Move projects to or from GitHub.\n  - name: oauth-authorizations\n    description: Manage access of OAuth applications\n  - name: orgs\n    description: Interact with GitHub Orgs.\n  - name: packages\n    description: Manage packages for authenticated users and organizations.\n  - name: projects\n    description: Interact with GitHub Projects.\n  - name: pulls\n    description: Interact with GitHub Pull Requests.\n  - name: rate-limit\n    description: Check your current rate limit status\n  - name: reactions\n    description: Interact with reactions to various GitHub entities.\n  - name: repos\n    description: Interact with GitHub Repos.\n  - name: scim\n    description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  - name: search\n    description: Look for stuff on GitHub.\n  - name: secret-scanning\n    description: Retrieve secret scanning alerts from a repository.\n  - name: server-statistics\n    description: GHES statistics\n  - name: teams\n    description: Interact with GitHub Teams.\n  - name: users\n    description: Interact with and view information about users and also current user.\nexternalDocs:\n  description: GitHub v3 REST API\n  url: https://docs.github.com/rest/\ninfo:\n  version: 1.1.4\n  title: GitHub v3 REST API - repo_apps\n  description: Information for integrations and installations.\n  license:\n    name: MIT\n    url: https://spdx.org/licenses/MIT\n  termsOfService: https://docs.github.com/articles/github-terms-of-service\n  contact:\n    name: Support\n    url: https://support.github.com/contact?tags=dotcom-rest-api\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/github/v0.1.1/services/repo_apps.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/github/v0.1.1/services/repo_apps.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/repos/{owner}/{repo}/installation\": get: responses: 200: contents: application/json: generate schema: field account: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}