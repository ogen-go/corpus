{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/influxdata/openapi"
		},
		"file": {
			"name": "swaggerV1Compat.yml",
			"size": 0,
			"path": "contracts/swaggerV1Compat.yml",
			"byteSize": 14975,
			"content": "# this is a manually maintained file for these old routes until oats#15 is resolved\nopenapi: \"3.0.0\"\ninfo:\n  title: InfluxDB API Service (V1 compatible endpoints)\n  version: 0.1.0\n  description: |\n    The InfluxDB 1.x compatibility `/write` and `/query` endpoints work with\n    InfluxDB 1.x client libraries and third-party integrations like Grafana\n    and others.\n\n\n    If you want to use the latest InfluxDB `/api/v2` API instead,\n    see the [InfluxDB v2 API documentation](https://docs.influxdata.com/influxdb/cloud/api/).\nservers:\n  - url: /\n    description: V1-compatible API endpoints.\npaths:\n  /write:\n    post:\n      operationId: PostWriteV1\n      tags:\n        - Write\n      summary: Write time series data into InfluxDB in a V1-compatible format\n      requestBody:\n        description: Line protocol body\n        required: true\n        content:\n          text/plain:\n            schema:\n              type: string\n      parameters:\n        - $ref: \"#/components/parameters/TraceSpan\"\n        - $ref: \"#/components/parameters/AuthUserV1\"\n        - $ref: \"#/components/parameters/AuthPassV1\"\n        - in: query\n          name: db\n          schema:\n            type: string\n          required: true\n          description: Bucket to write to. If none exists, InfluxDB creates a bucket with a default 3-day retention policy.\n        - in: query\n          name: rp\n          schema:\n            type: string\n          description: Retention policy name.\n        - in: query\n          name: precision\n          schema:\n            type: string\n          description: Write precision.\n        - in: header\n          name: Content-Encoding\n          description: When present, its value indicates to the database that compression is applied to the line protocol body.\n          schema:\n            type: string\n            description: Specifies that the line protocol in the body is encoded with gzip or not encoded with identity.\n            default: identity\n            enum:\n              - gzip\n              - identity\n      responses:\n        \"204\":\n          description: Write data is correctly formatted and accepted for writing to the bucket.\n        \"400\":\n          description: Line protocol poorly formed and no points were written.  Response can be used to determine the first malformed line in the body line-protocol. All data in body was rejected and not written.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LineProtocolError\"\n        \"401\":\n          description: Token does not have sufficient permissions to write to this organization and bucket or the organization and bucket do not exist.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: No token was sent and they are required.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"413\":\n          description: Write has been rejected because the payload is too large. Error message returns max size supported. All data in body was rejected and not written.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LineProtocolLengthError\"\n        \"429\":\n          description: Token is temporarily over quota. The Retry-After header describes when to try the write again.\n          headers:\n            Retry-After:\n              description: A non-negative decimal integer indicating the seconds to delay after the response is received.\n              schema:\n                type: integer\n                format: int32\n        \"503\":\n          description: Server is temporarily unavailable to accept writes.  The Retry-After header describes when to try the write again.\n          headers:\n            Retry-After:\n              description: A non-negative decimal integer indicating the seconds to delay after the response is received.\n              schema:\n                type: integer\n                format: int32\n        default:\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /query:\n    post: # technically this functions with other methods as well\n      operationId: PostQueryV1\n      tags:\n        - Query\n      summary: Query InfluxDB in a V1 compatible format\n      requestBody:\n        description: InfluxQL query to execute.\n        content:\n          text/plain: # although this should be `application/vnd.influxql`, oats breaks so we define the content-type header parameter\n            schema:\n              type: string\n      parameters:\n        - $ref: \"#/components/parameters/TraceSpan\"\n        - $ref: \"#/components/parameters/AuthUserV1\"\n        - $ref: \"#/components/parameters/AuthPassV1\"\n        - in: header\n          name: Accept\n          schema:\n            type: string\n            description: Specifies how query results should be encoded in the response. **Note:** With `application/csv`, query results include epoch timestamps instead of RFC3339 timestamps.\n            default: application/json\n            enum:\n              - application/json\n              - application/csv\n              - text/csv\n              - application/x-msgpack\n        - in: header\n          name: Accept-Encoding\n          description: The Accept-Encoding request HTTP header advertises which content encoding, usually a compression algorithm, the client is able to understand.\n          schema:\n            type: string\n            description: Specifies that the query response in the body should be encoded with gzip or not encoded with identity.\n            default: identity\n            enum:\n              - gzip\n              - identity\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            enum:\n              - application/vnd.influxql\n        - in: query\n          name: db\n          schema:\n            type: string\n          required: true\n          description: Bucket to query.\n        - in: query\n          name: rp\n          schema:\n            type: string\n          description: Retention policy name.\n        - in: query\n          name: q\n          description: Defines the influxql query to run.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Query results\n          headers:\n            Content-Encoding:\n              description: The Content-Encoding entity header is used to compress the media-type.  When present, its value indicates which encodings were applied to the entity-body\n              schema:\n                type: string\n                description: Specifies that the response in the body is encoded with gzip or not encoded with identity.\n                default: identity\n                enum:\n                  - gzip\n                  - identity\n            Trace-Id:\n              description: The Trace-Id header reports the request's trace ID, if one was generated.\n              schema:\n                type: string\n                description: Specifies the request's trace ID.\n          content:\n            application/csv:\n              schema:\n                $ref: \"#/components/schemas/InfluxQLCSVResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/InfluxQLCSVResponse\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InfluxQLResponse\"\n            application/x-msgpack:\n              schema:\n                type: string\n                format: binary\n        \"429\":\n          description: Token is temporarily over quota. The Retry-After header describes when to try the read again.\n          headers:\n            Retry-After:\n              description: A non-negative decimal integer indicating the seconds to delay after the response is received.\n              schema:\n                type: integer\n                format: int32\n        default:\n          description: Error processing query\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  parameters:\n    TraceSpan:\n      in: header\n      name: Zap-Trace-Span\n      description: OpenTracing span context\n      example:\n        trace_id: \"1\"\n        span_id: \"1\"\n        baggage:\n          key: value\n      required: false\n      schema:\n        type: string\n    AuthUserV1:\n      in: query\n      name: u\n      required: false\n      schema:\n        type: string\n      description: Username.\n    AuthPassV1:\n      in: query\n      name: p\n      required: false\n      schema:\n        type: string\n      description: User token.\n  schemas:\n    InfluxQLResponse:\n      properties:\n        results:\n          type: array\n          oneOf:\n            - required: [statement_id, error]\n            - required: [statement_id, series]\n          items:\n            type: object\n            properties:\n              statement_id:\n                type: integer\n              error:\n                type: string\n              series:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    name:\n                      type: string\n                    tags:\n                      type: object\n                      additionalProperties:\n                        type: string\n                    partial:\n                      type: boolean\n                    columns:\n                      type: array\n                      items:\n                        type: string\n                    values:\n                      type: array\n                      items:\n                        type: array\n                        items: {}\n    InfluxQLCSVResponse:\n      type: string\n      example: \u003e\n        name,tags,time,test_field,test_tag\n        test_measurement,,1603740794286107366,1,tag_value\n        test_measurement,,1603740870053205649,2,tag_value\n        test_measurement,,1603741221085428881,3,tag_value\n    Error:\n      properties:\n        code:\n          description: Code is the machine-readable error code.\n          readOnly: true\n          type: string\n          # This set of enumerations must remain in sync with the constants defined in errors.go\n          enum:\n            - internal error\n            - not found\n            - conflict\n            - invalid\n            - unprocessable entity\n            - empty value\n            - unavailable\n            - forbidden\n            - too many requests\n            - unauthorized\n            - method not allowed\n        message:\n          readOnly: true\n          description: Message is a human-readable message.\n          type: string\n      required: [code, message]\n    LineProtocolError:\n      properties:\n        code:\n          description: Code is the machine-readable error code.\n          readOnly: true\n          type: string\n          enum:\n            - internal error\n            - not found\n            - conflict\n            - invalid\n            - empty value\n            - unavailable\n        message:\n          readOnly: true\n          description: Message is a human-readable message.\n          type: string\n        op:\n          readOnly: true\n          description: Op describes the logical code operation during error. Useful for debugging.\n          type: string\n        err:\n          readOnly: true\n          description: Err is a stack of errors that occurred during processing of the request. Useful for debugging.\n          type: string\n        line:\n          readOnly: true\n          description: First line within sent body containing malformed data\n          type: integer\n          format: int32\n      required: [code, message, op, err]\n    LineProtocolLengthError:\n      properties:\n        code:\n          description: Code is the machine-readable error code.\n          readOnly: true\n          type: string\n          enum:\n            - invalid\n        message:\n          readOnly: true\n          description: Message is a human-readable message.\n          type: string\n        maxLength:\n          readOnly: true\n          description: Max length in bytes for a body of line-protocol.\n          type: integer\n          format: int32\n      required: [code, message, maxLength]\n  securitySchemes:\n    TokenAuthentication:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: |\n        Use the [Token authentication](#section/Authentication/TokenAuthentication)\n        scheme to authenticate to the InfluxDB API.\n\n\n        In your API requests, send an `Authorization` header.\n        For the header value, provide the word `Token` followed by a space and an InfluxDB API token.\n        The word `Token` is case-sensitive.\n\n\n        ### Syntax\n\n        `Authorization: Token YOUR_INFLUX_TOKEN`\n\n\n        For examples and more information, see the following:\n          - [`/authorizations`](#tag/Authorizations) endpoint.\n          - [Authorize API requests](https://docs.influxdata.com/influxdb/cloud/api-guide/api_intro/#authentication).\n          - [Manage API tokens](https://docs.influxdata.com/influxdb/cloud/security/tokens/).\n    BasicAuthentication:\n      type: http\n      scheme: basic\n      description: |\n        Use the HTTP [Basic authentication](#section/Authentication/BasicAuthentication)\n        scheme with clients that support the InfluxDB 1.x convention of username and password (that don't support the `Authorization: Token` scheme):\n\n\n        For examples and more information, see how to [authenticate with a username and password](https://docs.influxdata.com/influxdb/cloud/reference/api/influxdb-1x/).\n    QuerystringAuthentication:\n       type: apiKey\n       in: query\n       name: u=\u0026p=\n       description: |\n         Use the [Querystring authentication](#section/Authentication/QuerystringAuthentication)\n         scheme with InfluxDB 1.x API parameters to provide credentials through the query string.\n\n\n         For examples and more information, see how to [authenticate with a username and password](https://docs.influxdata.com/influxdb/cloud/reference/api/influxdb-1x/).\nsecurity:\n  - TokenAuthentication: []\n  - BasicAuthentication: []\n  - QuerystringAuthentication: []\ntags:\n  - name: Authentication\n    description: |\n      The InfluxDB 1.x API requires authentication for all requests.\n      InfluxDB Cloud uses InfluxDB API tokens to authenticate requests.\n\n\n      For more information, see the following:\n      - [Token authentication](#section/Authentication/TokenAuthentication)\n      - [Basic authentication](#section/Authentication/BasicAuthentication)\n      - [Querystring authentication](#section/Authentication/QuerystringAuthentication)\n\n      \u003c!-- ReDoc-Inject: \u003csecurity-definitions\u003e --\u003e\n    x-traitTag: true\n",
			"canonicalURL": "/github.com/influxdata/openapi@a57b04ad0d88b646a1a04bd90a03477ca945fc3b/-/blob/contracts/swaggerV1Compat.yml",
			"externalURLs": [
				{
					"url": "https://github.com/influxdata/openapi/blob/a57b04ad0d88b646a1a04bd90a03477ca945fc3b/contracts/swaggerV1Compat.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/query\": post: requestBody: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}