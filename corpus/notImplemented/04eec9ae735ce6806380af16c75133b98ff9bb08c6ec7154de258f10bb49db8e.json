{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/strimzi/strimzi-kafka-bridge"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "src/main/resources/openapi.json",
			"byteSize": 86323,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n      \"title\": \"Strimzi Kafka Bridge API Reference\",\n      \"description\": \"The Strimzi Kafka Bridge provides a REST API for integrating HTTP based client applications with a Kafka cluster. You can use the API to create and manage consumers and send and receive records over HTTP rather than the native Kafka protocol. \",\n        \"version\": \"0.1.0\"\n    },\n    \"paths\": {\n        \"/consumers/{groupid}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Consumers\"\n                ],\n                \"description\": \"Creates a consumer instance in the given consumer group. You can optionally specify a consumer name and supported configuration options. It returns a base URI which must be used to construct URLs for subsequent requests against this consumer instance.\",\n                \"operationId\": \"createConsumer\",\n                \"requestBody\": {\n                    \"description\": \"Name and configuration of the consumer. The name is unique within the scope of the consumer group. If a name is not specified, a randomly generated name is assigned. All parameters are optional. The supported configuration options are shown in the following example.\",\n                    \"content\": {\n                        \"application/vnd.kafka.v2+json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Consumer\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Consumer created successfully.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/CreatedConsumer\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"instance_id\": \"consumer1\",\n                                            \"base_uri\": \"http://localhost:8080/consumers/my-group/instances/consumer1\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"409\": {\n                        \"description\": \"A consumer instance with the specified name already exists in the Kafka Bridge.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 409,\n                                            \"message\": \"A consumer instance with the specified name already exists in the Kafka Bridge.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"One or more consumer configuration options have invalid values.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 422,\n                                            \"message\": \"One or more consumer configuration options have invalid values.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"parameters\": [\n                {\n                    \"name\": \"groupid\",\n                    \"in\": \"path\",\n                    \"description\": \"ID of the consumer group in which to create the consumer.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                }\n            ]\n        },\n        \"/consumers/{groupid}/instances/{name}/positions/beginning\": {\n            \"post\": {\n                \"tags\": [\n                    \"Seek\",\n                    \"Consumers\"\n                ],\n                \"description\": \"Configures a subscribed consumer to seek (and subsequently read from) the first offset in one or more given topic partitions.\",\n                \"operationId\": \"seekToBeginning\",\n                \"requestBody\": {\n                    \"description\": \"List of topic partitions to which the consumer is subscribed. The consumer will seek the first offset in the specified partitions.\",\n                    \"content\": {\n                        \"application/vnd.kafka.v2+json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Partitions\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Seek to the beginning performed successfully.\"\n                    },\n                    \"404\": {\n                        \"description\": \"The specified consumer instance was not found, or the specified consumer instance did not have one of the specified partitions assigned.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 404,\n                                            \"message\": \"The specified consumer instance was not found.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"parameters\": [\n                {\n                    \"name\": \"groupid\",\n                    \"in\": \"path\",\n                    \"description\": \"ID of the consumer group to which the subscribed consumer belongs.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                },\n                {\n                    \"name\": \"name\",\n                    \"in\": \"path\",\n                    \"description\": \"Name of the subscribed consumer.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                }\n            ]\n        },\n        \"/consumers/{groupid}/instances/{name}/positions/end\": {\n            \"post\": {\n                \"tags\": [\n                    \"Seek\",\n                    \"Consumers\"\n                ],\n                \"description\": \"Configures a subscribed consumer to seek (and subsequently read from) the offset at the end of one or more of the given topic partitions.\",\n                \"operationId\": \"seekToEnd\",\n                \"requestBody\": {\n                    \"description\": \"List of topic partitions to which the consumer is subscribed. The consumer will seek the last offset in the specified partitions.\",\n                    \"content\": {\n                        \"application/vnd.kafka.v2+json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Partitions\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Seek to the end performed successfully.\"\n                    },\n                    \"404\": {\n                        \"description\": \"The specified consumer instance was not found, or the specified consumer instance did not have one of the specified partitions assigned.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 404,\n                                            \"message\": \"The specified consumer instance was not found.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"parameters\": [\n                {\n                    \"name\": \"groupid\",\n                    \"in\": \"path\",\n                    \"description\": \"ID of the consumer group to which the subscribed consumer belongs.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                },\n                {\n                    \"name\": \"name\",\n                    \"in\": \"path\",\n                    \"description\": \"Name of the subscribed consumer.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                }\n            ]\n        },\n        \"/consumers/{groupid}/instances/{name}/subscription\": {\n            \"get\": {\n                \"tags\": [\n                    \"Consumers\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"List of subscribed topics and partitions.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SubscribedTopicList\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"The specified consumer instance was not found.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 404,\n                                            \"message\": \"The specified consumer instance was not found.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"operationId\": \"listSubscriptions\",\n                \"description\": \"Retrieves a list of the topics to which the consumer is subscribed.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"groupid\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the consumer group to which the subscribed consumer belongs.\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"name\",\n                        \"in\": \"path\",\n                        \"description\": \"Name of the subscribed consumer.\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Consumers\"\n                ],\n                \"description\": \"Subscribes a consumer to one or more topics. You can describe the topics to which the consumer will subscribe in a list (of `Topics` type) or as a `topic_pattern` field. Each call replaces the subscriptions for the subscriber.\",\n                \"operationId\": \"subscribe\",\n                \"requestBody\": {\n                    \"description\": \"List of topics to which the consumer will subscribe.\",\n                    \"content\": {\n                        \"application/vnd.kafka.v2+json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Topics\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Consumer subscribed successfully.\"\n                    },\n                    \"404\": {\n                        \"description\": \"The specified consumer instance was not found.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 404,\n                                            \"message\": \"The specified consumer instance was not found.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"409\": {\n                        \"description\": \"Subscriptions to topics, partitions, and patterns are mutually exclusive.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 409,\n                                            \"message\": \"Subscriptions to topics, partitions, and patterns are mutually exclusive.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"A list (of `Topics` type) or a `topic_pattern` must be specified.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 422,\n                                            \"message\": \"A list (of Topics type) or a topic_pattern must be specified.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"groupid\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the consumer group to which the subscribed consumer belongs.\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"name\",\n                        \"in\": \"path\",\n                        \"description\": \"Name of the consumer to subscribe to topics.\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Consumers\"\n                ],\n                \"description\": \"Unsubscribes a consumer from all topics.\",\n                \"operationId\": \"unsubscribe\",\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Consumer unsubscribed successfully.\"\n                    },\n                    \"404\": {\n                        \"description\": \"The specified consumer instance was not found.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 404,\n                                            \"message\": \"The specified consumer instance was not found.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"groupid\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the consumer group to which the subscribed consumer belongs.\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"name\",\n                        \"in\": \"path\",\n                        \"description\": \"Name of the consumer to unsubscribe from topics.\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/consumers/{groupid}/instances/{name}/positions\": {\n            \"post\": {\n                \"tags\": [\n                    \"Seek\",\n                    \"Consumers\"\n                ],\n                \"description\": \"Configures a subscribed consumer to fetch offsets from a particular offset the next time it fetches a set of records from a given topic partition. This overrides the default fetch behavior for consumers. You can specify one or more topic partitions.\",\n                \"operationId\": \"seek\",\n                \"requestBody\": {\n                    \"description\": \"List of partition offsets from which the subscribed consumer will next fetch records.\",\n                    \"content\": {\n                        \"application/vnd.kafka.v2+json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/OffsetCommitSeekList\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Seek performed successfully.\"\n                    },\n                    \"404\": {\n                        \"description\": \"The specified consumer instance was not found, or the specified consumer instance did not have one of the specified partitions assigned.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 404,\n                                            \"message\": \"The specified consumer instance was not found.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"parameters\": [\n                {\n                    \"name\": \"groupid\",\n                    \"in\": \"path\",\n                    \"description\": \"ID of the consumer group to which the consumer belongs.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                },\n                {\n                    \"name\": \"name\",\n                    \"in\": \"path\",\n                    \"description\": \"Name of the subscribed consumer.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                }\n            ]\n        },\n        \"/consumers/{groupid}/instances/{name}/assignments\": {\n            \"post\": {\n                \"tags\": [\n                    \"Consumers\"\n                ],\n                \"description\": \"Assigns one or more topic partitions to a consumer.\",\n                \"operationId\": \"assign\",\n                \"requestBody\": {\n                    \"description\": \"List of topic partitions to assign to the consumer.\",\n                    \"content\": {\n                        \"application/vnd.kafka.v2+json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Partitions\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Partitions assigned successfully.\"\n                    },\n                    \"404\": {\n                        \"description\": \"The specified consumer instance was not found.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 404,\n                                            \"message\": \"The specified consumer instance was not found.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"409\": {\n                        \"description\": \"Subscriptions to topics, partitions, and patterns are mutually exclusive.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 409,\n                                            \"message\": \"Subscriptions to topics, partitions, and patterns are mutually exclusive.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"parameters\": [\n                {\n                    \"name\": \"groupid\",\n                    \"in\": \"path\",\n                    \"description\": \"ID of the consumer group to which the consumer belongs.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                },\n                {\n                    \"name\": \"name\",\n                    \"in\": \"path\",\n                    \"description\": \"Name of the consumer to assign topic partitions to.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                }\n            ]\n        },\n        \"/topics\": {\n            \"get\": {\n                \"tags\": [\n                    \"Topics\"\n                ],\n                \"description\": \"Retrieves a list of all topics.\",\n                \"operationId\": \"listTopics\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"List of topics.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/topics/{topicname}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Topics\"\n                ],\n                \"description\": \"Retrieves the metadata about a given topic.\",\n                \"operationId\": \"getTopic\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Topic metadata\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/TopicMetadata\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"The specified topic was not found.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 404,\n                                            \"message\": \"The specified topic was not found.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Topics\",\n                    \"Producer\"\n                ],\n                \"description\": \"Sends one or more records to a given topic, optionally specifying a partition, key, or both.\",\n                \"operationId\": \"send\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/vnd.kafka.json.v2+json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ProducerRecordList\"\n                            }\n                        },\n                        \"application/vnd.kafka.binary.v2+json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ProducerRecordList\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Records sent successfully.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OffsetRecordSentList\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"offsets\": [\n                                                {\n                                                    \"partition\": 2,\n                                                    \"offset\": 0\n                                                },\n                                                {\n                                                    \"partition\": 1,\n                                                    \"offset\": 1\n                                                },\n                                                {\n                                                    \"partition\": 2,\n                                                    \"offset\": 2\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"The specified topic was not found.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 404,\n                                            \"message\": \"The specified topic was not found.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"The record list is not valid.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 422,\n                                            \"message\": \"The record list contains invalid records.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"parameters\": [\n                {\n                    \"name\": \"topicname\",\n                    \"in\": \"path\",\n                    \"description\": \"Name of the topic to send records to or retrieve metadata from.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                }\n            ]\n        },\n        \"/consumers/{groupid}/instances/{name}/records\": {\n            \"get\": {\n                \"tags\": [\n                    \"Consumers\"\n                ],\n                \"description\": \"Retrieves records for a subscribed consumer, including message values, topics, and partitions. The request for this operation MUST use the base URL (including the host and port) returned in the response from the `POST` request to `/consumers/{groupid}` that was used to create this consumer.\",\n                \"operationId\": \"poll\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Poll request executed successfully.\",\n                        \"content\": {\n                            \"application/vnd.kafka.json.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ConsumerRecordList\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": [\n                                            {\n                                                \"topic\": \"topic\",\n                                                \"key\": \"key1\",\n                                                \"value\": {\n                                                    \"foo\": \"bar\"\n                                                },\n                                                \"partition\": 0,\n                                                \"offset\": 2\n                                            },\n                                            {\n                                                \"topic\": \"topic\",\n                                                \"key\": \"key2\",\n                                                \"value\": [\n                                                    \"foo2\",\n                                                    \"bar2\"\n                                                ],\n                                                \"partition\": 1,\n                                                \"offset\": 3\n                                            }\n                                        ]\n                                    }\n                                }\n                            },\n                            \"application/vnd.kafka.binary.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ConsumerRecordList\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": \"[\\n  {\\n    \\\"topic\\\": \\\"test\\\",\\n    \\\"key\\\": \\\"a2V5\\\",\\n    \\\"value\\\": \\\"Y29uZmx1ZW50\\\",\\n    \\\"partition\\\": 1,\\n    \\\"offset\\\": 100,\\n  },\\n  {\\n    \\\"topic\\\": \\\"test\\\",\\n    \\\"key\\\": \\\"a2V5\\\",\\n    \\\"value\\\": \\\"a2Fma2E=\\\",\\n    \\\"partition\\\": 2,\\n    \\\"offset\\\": 101,\\n  }\\n]\"\n                                    }\n                                }\n                            },\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ConsumerRecordList\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"The specified consumer instance was not found.\",\n                        \"content\": {\n                            \"application/vnd.kafka.json.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                }\n                            },\n                            \"application/vnd.kafka.binary.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                }\n                            },\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 404,\n                                            \"message\": \"The specified consumer instance was not found.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"406\": {\n                        \"description\": \"The `format` used in the consumer creation request does not match the embedded format in the Accept header of this request or the bridge got a message from the topic which is not JSON encoded.\",\n                        \"content\": {\n                            \"application/vnd.kafka.json.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                }\n                            },\n                            \"application/vnd.kafka.binary.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                }\n                            },\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 406,\n                                            \"message\": \"The `format` used in the consumer creation request does not match the embedded format in the Accept header of this request.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Response exceeds the maximum number of bytes the consumer can receive\",\n                        \"content\": {\n                            \"application/vnd.kafka.json.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                }\n                            },\n                            \"application/vnd.kafka.binary.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                }\n                            },\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 422,\n                                            \"message\": \"Response exceeds the maximum number of bytes the consumer can receive\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"parameters\": [\n                {\n                    \"name\": \"groupid\",\n                    \"in\": \"path\",\n                    \"description\": \"ID of the consumer group to which the subscribed consumer belongs.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                },\n                {\n                    \"name\": \"name\",\n                    \"in\": \"path\",\n                    \"description\": \"Name of the subscribed consumer to retrieve records from.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                },\n                {\n                    \"name\": \"timeout\",\n                    \"in\": \"query\",\n                    \"description\": \"The maximum amount of time, in milliseconds, that the HTTP Bridge spends retrieving records before timing out the request.\",\n                    \"required\": false,\n                    \"schema\": {\n                        \"type\": \"integer\"\n                    }\n                },\n                {\n                    \"name\": \"max_bytes\",\n                    \"in\": \"query\",\n                    \"description\": \"The maximum size, in bytes, of unencoded keys and values that can be included in the response. Otherwise, an error response with code 422 is returned.\",\n                    \"required\": false,\n                    \"schema\": {\n                        \"type\": \"integer\"\n                    }\n                }\n            ]\n        },\n        \"/topics/{topicname}/partitions\": {\n            \"get\": {\n                \"tags\": [\n                    \"Topics\"\n                ],\n                \"description\": \"Retrieves a list of partitions for the topic.\",\n                \"operationId\": \"listPartitions\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"List of partitions.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/PartitionMetadata\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"The specified topic was not found.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 404,\n                                            \"message\": \"The specified topic was not found.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"parameters\": [\n                {\n                    \"name\": \"topicname\",\n                    \"in\": \"path\",\n                    \"description\": \"Name of the topic to send records to or retrieve metadata from.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                }\n            ]\n        },\n        \"/topics/{topicname}/partitions/{partitionid}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Topics\"\n                ],\n                \"description\": \"Retrieves partition metadata for the topic partition.\",\n                \"operationId\": \"getPartition\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Partition metadata\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/PartitionMetadata\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"The specified partition was not found.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 404,\n                                            \"message\": \"The specified partition was not found.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Topics\",\n                    \"Producer\"\n                ],\n                \"description\": \"Sends one or more records to a given topic partition, optionally specifying a key.\",\n                \"operationId\": \"sendToPartition\",\n                \"requestBody\": {\n                    \"description\": \"List of records to send to a given topic partition, including a value (required) and a key (optional).\",\n                    \"content\": {\n                        \"application/vnd.kafka.json.v2+json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ProducerRecordToPartitionList\"\n                            }\n                        },\n                        \"application/vnd.kafka.binary.v2+json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ProducerRecordToPartitionList\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Records sent successfully.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OffsetRecordSentList\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"offsets\": [\n                                                {\n                                                    \"partition\": 2,\n                                                    \"offset\": 0\n                                                },\n                                                {\n                                                    \"partition\": 1,\n                                                    \"offset\": 1\n                                                },\n                                                {\n                                                    \"partition\": 2,\n                                                    \"offset\": 2\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"The specified topic partition was not found.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 404,\n                                            \"message\": \"The specified topic partition was not found.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"The record is not valid.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 422,\n                                            \"message\": \"The record is not valid.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"parameters\": [\n                {\n                    \"name\": \"topicname\",\n                    \"in\": \"path\",\n                    \"description\": \"Name of the topic to send records to or retrieve metadata from.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                },\n                {\n                    \"name\": \"partitionid\",\n                    \"in\": \"path\",\n                    \"description\": \"ID of the partition to send records to or retrieve metadata from.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"integer\"\n                    }\n                }\n            ]\n        },\n        \"/topics/{topicname}/partitions/{partitionid}/offsets\": {\n            \"get\": {\n                \"tags\": [\n                    \"Topics\"\n                ],\n                \"description\": \"Retrieves a summary of the offsets for the topic partition.\",\n                \"operationId\": \"getOffsets\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"A summary of the offsets of the topic partition.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OffsetsSummary\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"The specified topic partition was not found.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 404,\n                                            \"message\": \"The specified topic partition was not found.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"parameters\": [\n                {\n                    \"name\": \"topicname\",\n                    \"in\": \"path\",\n                    \"description\": \"Name of the topic containing the partition.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                },\n                {\n                    \"name\": \"partitionid\",\n                    \"in\": \"path\",\n                    \"description\": \"ID of the partition.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"integer\"\n                    }\n                }\n            ]\n        },\n        \"/consumers/{groupid}/instances/{name}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"Consumers\"\n                ],\n                \"description\": \"Deletes a specified consumer instance. The request for this operation MUST use the base URL (including the host and port) returned in the response from the `POST` request to `/consumers/{groupid}` that was used to create this consumer.\",\n                \"operationId\": \"deleteConsumer\",\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Consumer removed successfully.\"\n                    },\n                    \"404\": {\n                        \"description\": \"The specified consumer instance was not found.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 404,\n                                            \"message\": \"The specified consumer instance was not found.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"parameters\": [\n                {\n                    \"name\": \"groupid\",\n                    \"in\": \"path\",\n                    \"description\": \"ID of the consumer group to which the consumer belongs.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                },\n                {\n                    \"name\": \"name\",\n                    \"in\": \"path\",\n                    \"description\": \"Name of the consumer to delete.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                }\n            ]\n        },\n        \"/consumers/{groupid}/instances/{name}/offsets\": {\n            \"post\": {\n                \"tags\": [\n                    \"Consumers\"\n                ],\n                \"description\": \"Commits a list of consumer offsets. To commit offsets for all records fetched by the consumer, leave the request body empty.\",\n                \"operationId\": \"commit\",\n                \"requestBody\": {\n                    \"description\": \"List of consumer offsets to commit to the consumer offsets commit log. You can specify one or more topic partitions to commit offsets for.\",\n                    \"content\": {\n                        \"application/vnd.kafka.v2+json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/OffsetCommitSeekList\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Commit made successfully.\"\n                    },\n                    \"404\": {\n                        \"description\": \"The specified consumer instance was not found.\",\n                        \"content\": {\n                            \"application/vnd.kafka.v2+json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Error\"\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": {\n                                            \"error_code\": 404,\n                                            \"message\": \"The specified consumer instance was not found.\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"parameters\": [\n                {\n                    \"name\": \"groupid\",\n                    \"in\": \"path\",\n                    \"description\": \"ID of the consumer group to which the consumer belongs.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                },\n                {\n                    \"name\": \"name\",\n                    \"in\": \"path\",\n                    \"description\": \"Name of the consumer.\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                }\n            ]\n        },\n        \"/healthy\": {\n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"The bridge is healthy\"\n                    }\n                },\n                \"operationId\": \"healthy\",\n                \"description\": \"Check if the bridge is running. This does not necessarily imply that it is ready to accept requests.\"\n            }\n        },\n        \"/ready\": {\n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"The bridge is ready\"\n                    }\n                },\n                \"operationId\": \"ready\",\n                \"description\": \"Check if the bridge is ready and can accept requests.\"\n            }\n        },\n        \"/openapi\": {\n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        },\n                        \"description\": \"OpenAPI v2 specification in JSON format retrieved successfully.\"\n                    }\n                },\n                \"operationId\": \"openapi\",\n                \"description\": \"Retrieves the OpenAPI v2 specification in JSON format.\"\n            }\n        },\n        \"/\": {\n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Information about Kafka Bridge instance.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/BridgeInfo\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"operationId\": \"info\",\n                \"description\": \"Retrieves information about the Kafka Bridge instance, in JSON format.\"\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"KafkaHeader\": {\n                \"example\": {\n                    \"key\": \"key1\",\n                    \"value\": \"dmFsdWUx\"\n                },\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"format\": \"byte\",\n                        \"type\": \"string\",\n                        \"description\": \"The header value in binary format, base64-encoded\"\n                    }\n                },\n                \"title\": \"KafkaHeader\",\n                \"required\": [\n                    \"value\",\n                    \"key\"\n                ],\n                \"type\": \"object\"\n            },\n            \"KafkaHeaderList\": {\n                \"title\": \"KafkaHeaderList\",\n                \"type\": \"array\",\n                \"items\": {\n                    \"$ref\": \"#/components/schemas/KafkaHeader\"\n                },\n                \"example\": [\n                    {\n                        \"key\": \"key1\",\n                        \"value\": \"dmFsdWUx\"\n                    },\n                    {\n                        \"key\": \"key2\",\n                        \"value\": \"dmFsdWUy\"\n                    }\n                ]\n            },\n            \"ConsumerRecord\": {\n                \"example\": {\n                    \"key\": \"key1\",\n                    \"offset\": 2,\n                    \"partition\": 0,\n                    \"topic\": \"topic\",\n                    \"value\": \"value1\",\n                    \"headers\": [\n                        {\n                            \"key\": \"key1\",\n                            \"value\": \"dmFsdWUx\"\n                        },\n                        {\n                            \"key\": \"key2\",\n                            \"value\": \"dmFsdWUy\"\n                        }\n                    ]\n                },\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\"\n                    },\n                    \"offset\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"partition\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"topic\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    },\n                    \"headers\": {\n                        \"$ref\": \"#/components/schemas/KafkaHeaderList\"\n                    }\n                },\n                \"title\": \"ConsumerRecord\",\n                \"type\": \"object\"\n            },\n            \"ConsumerRecordList\": {\n                \"title\": \"ConsumerRecordList\",\n                \"type\": \"array\",\n                \"items\": {\n                    \"$ref\": \"#/components/schemas/ConsumerRecord\"\n                },\n                \"example\": [\n                    {\n                        \"topic\": \"topic\",\n                        \"key\": \"key1\",\n                        \"value\": \"value1\",\n                        \"partition\": 0,\n                        \"offset\": 2\n                    },\n                    {\n                        \"topic\": \"topic\",\n                        \"key\": \"key2\",\n                        \"value\": \"value2\",\n                        \"partition\": 1,\n                        \"offset\": 3\n                    }\n                ]\n            },\n            \"CreatedConsumer\": {\n                \"title\": \"CreatedConsumer\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"instance_id\": {\n                        \"description\": \"Unique ID for the consumer instance in the group.\",\n                        \"type\": \"string\"\n                    },\n                    \"base_uri\": {\n                        \"description\": \"Base URI used to construct URIs for subsequent requests against this consumer instance.\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"example\": {\n                    \"instance_id\": \"my-consumer\",\n                    \"base_uri\": \"http://localhost:8080/consumers/my-group/instances/my-consumer\"\n                }\n            },\n            \"OffsetRecordSent\": {\n                \"title\": \"OffsetRecordSent\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"partition\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"offset\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"example\": {\n                    \"partition\": 31,\n                    \"offset\": 86\n                }\n            },\n            \"OffsetRecordSentList\": {\n                \"title\": \"OffsetRecordSentList\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"offsets\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/OffsetRecordSent\"\n                        }\n                    }\n                },\n                \"example\": {\n                    \"offsets\": [\n                        {\n                            \"partition\": 92,\n                            \"offset\": 98\n                        },\n                        {\n                            \"partition\": 65,\n                            \"offset\": 91\n                        }\n                    ]\n                }\n            },\n            \"OffsetsSummary\": {\n                \"title\": \"OffsetsSummary\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"beginning_offset\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"end_offset\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"example\": {\n                    \"beginning_offset\": 10,\n                    \"end_offset\": 50\n                }\n            },\n            \"Error\": {\n                \"title\": \"Error\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"error_code\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"message\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"example\": \"{\\n    \\\"error_code\\\": 404,\\n    \\\"message\\\": \\\"resource not found\\\"\\n}\"\n            },\n            \"Consumer\": {\n                \"title\": \"Consumer\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"description\": \"The unique name for the consumer instance. The name is unique within the scope of the consumer group. The name is used in URLs. \",\n                        \"type\": \"string\"\n                    },\n                    \"format\": {\n                        \"description\": \"The allowable message format for the consumer, which can be `binary` (default) or `json`. The messages are converted into a JSON format. \",\n                        \"type\": \"string\"\n                    },\n                    \"auto.offset.reset\": {\n                        \"description\": \"Resets the offset position for the consumer. \\nIf set to `earliest`, messages are read from the first offset. \\nIf set to `latest`, messages are read from the latest offset.\",\n                        \"type\": \"string\"\n                    },\n                    \"fetch.min.bytes\": {\n                        \"description\": \"Sets the minimum amount of data, in bytes, for the consumer to receive. The broker waits until the data to send exceeds this amount.\",\n                        \"type\": \"integer\"\n                    },\n                    \"consumer.request.timeout.ms\": {\n                        \"description\": \"Sets the maximum amount of time, in milliseconds, for the consumer to wait for messages for a request. If the timeout period is reached without a response, an error is returned.\",\n                        \"type\": \"integer\"\n                    },\n                    \"enable.auto.commit\": {\n                        \"description\": \"If set to `true`, message offsets are committed automatically for the consumer. If set to `false`, message offsets must be committed manually.\",\n                        \"type\": \"boolean\"\n                    },\n                    \"isolation.level\": {\n                        \"description\": \"If set to `read_uncommitted`, all transaction records are retrieved, independently on the transaction outcome (if any), and `read_committed` to get the records from committed transactions.\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"additionalProperties\": false,\n                \"example\": {\n                    \"name\": \"consumer1\",\n                    \"format\": \"binary\",\n                    \"auto.offset.reset\": \"earliest\",\n                    \"enable.auto.commit\": false,\n                    \"fetch.min.bytes\": 512,\n                    \"consumer.request.timeout.ms\": 30000,\n                    \"isolation.level\": \"read_committed\"\n                }\n            },\n            \"OffsetCommitSeek\": {\n                \"title\": \"OffsetCommitSeek\",\n                \"required\": [\n                    \"partition\",\n                    \"offset\",\n                    \"topic\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"partition\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"offset\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"topic\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"additionalProperties\": false,\n                \"example\": {\n                    \"partition\": 43,\n                    \"offset\": 92,\n                    \"topic\": \"topic\"\n                }\n            },\n            \"OffsetCommitSeekList\": {\n                \"title\": \"OffsetCommitSeekList\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"offsets\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/OffsetCommitSeek\"\n                        }\n                    }\n                },\n                \"additionalProperties\": false,\n                \"example\": {\n                    \"offsets\": [\n                        {\n                            \"topic\": \"topic\",\n                            \"partition\": 0,\n                            \"offset\": 15\n                        },\n                        {\n                            \"topic\": \"topic\",\n                            \"partition\": 1,\n                            \"offset\": 42\n                        }\n                    ]\n                }\n            },\n            \"Partition\": {\n                \"title\": \"Partition\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"partition\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"topic\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"additionalProperties\": false\n            },\n            \"Partitions\": {\n                \"title\": \"Partitions\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"partitions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Partition\"\n                        }\n                    }\n                },\n                \"additionalProperties\": false,\n                \"example\": {\n                    \"partitions\": [\n                        {\n                            \"topic\": \"topic\",\n                            \"partition\": 0\n                        },\n                        {\n                            \"topic\": \"topic\",\n                            \"partition\": 1\n                        }\n                    ]\n                }\n            },\n            \"ProducerRecord\": {\n                \"title\": \"ProducerRecord\",\n                \"required\": [\n                    \"value\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"partition\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"value\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"object\",\n                                \"nullable\": true\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ],\n                        \"nullable\" : true\n                    },\n                    \"key\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    \"headers\": {\n                        \"$ref\": \"#/components/schemas/KafkaHeaderList\"\n                    }\n                },\n                \"additionalProperties\": false,\n                \"example\": {\n                    \"key\": \"key1\",\n                    \"partition\": 0,\n                    \"value\": \"value1\",\n                    \"headers\": [\n                        {\n                            \"key\": \"key1\",\n                            \"value\": \"dmFsdWUx\"\n                        },\n                        {\n                            \"key\": \"key2\",\n                            \"value\": \"dmFsdWUy\"\n                        }\n                    ]\n                }\n            },\n            \"ProducerRecordList\": {\n                \"title\": \"ProducerRecordList\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"records\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ProducerRecord\"\n                        }\n                    }\n                },\n                \"additionalProperties\": false,\n                \"example\": {\n                    \"records\": [\n                        {\n                            \"key\": \"key1\",\n                            \"value\": \"value1\"\n                        },\n                        {\n                            \"value\": \"value2\",\n                            \"partition\": 1\n                        },\n                        {\n                            \"value\": \"value3\"\n                        }\n                    ]\n                }\n            },\n            \"ProducerRecordToPartition\": {\n                \"title\": \"ProducerRecordToPartition\",\n                \"required\": [\n                    \"value\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"value\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    \"key\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"additionalProperties\": false,\n                \"example\": {\n                    \"value\": {\n                        \"v\": 128\n                    },\n                    \"key\": {\n                        \"k\": \"key\"\n                    }\n                }\n            },\n            \"ProducerRecordToPartitionList\": {\n                \"title\": \"ProducerRecordToPartitionList\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"records\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ProducerRecordToPartition\"\n                        }\n                    }\n                },\n                \"additionalProperties\": false,\n                \"example\": {\n                    \"records\": [\n                        {\n                            \"key\": \"key1\",\n                            \"value\": \"value1\"\n                        },\n                        {\n                            \"value\": \"value2\"\n                        }\n                    ]\n                }\n            },\n            \"Topics\": {\n                \"title\": \"Topics\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"topics\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"topic_pattern\": {\n                        \"description\": \"A regex topic pattern for matching multiple topics\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"additionalProperties\": false,\n                \"example\": {\n                    \"topics\": [\n                        \"topic1\",\n                        \"topic2\"\n                    ]\n                }\n            },\n            \"AssignedTopicPartitions\": {\n                \"title\": \"AssignedTopicPartitions\",\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"example\": {\n                    \"my-topic1\": [\n                        1,\n                        2,\n                        3\n                    ]\n                }\n            },\n            \"SubscribedTopicList\": {\n                \"title\": \"SubscribedTopicList\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"topics\": {\n                        \"$ref\": \"#/components/schemas/Topics\"\n                    },\n                    \"partitions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/AssignedTopicPartitions\"\n                        }\n                    }\n                },\n                \"example\": {\n                    \"topics\": [\n                        \"my-topic1\",\n                        \"my-topic2\"\n                    ],\n                    \"partitions\": [\n                        {\n                            \"my-topic1\": [\n                                1,\n                                2,\n                                3\n                            ]\n                        },\n                        {\n                            \"my-topic2\": [\n                                1\n                            ]\n                        }\n                    ]\n                }\n            },\n            \"TopicMetadata\": {\n                \"title\": \"TopicMetadata\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"description\": \"Name of the topic\",\n                        \"type\": \"string\"\n                    },\n                    \"configs\": {\n                        \"description\": \"Per-topic configuration overrides\",\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"partitions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PartitionMetadata\"\n                        }\n                    }\n                },\n                \"additionalProperties\": false,\n                \"example\": {\n                    \"name\": \"topic\",\n                    \"offset\": 2,\n                    \"configs\": {\n                        \"cleanup.policy\": \"compact\"\n                    },\n                    \"partitions\": [\n                        {\n                            \"partition\": 1,\n                            \"leader\": 1,\n                            \"replicas\": [\n                                {\n                                    \"broker\": 1,\n                                    \"leader\": true,\n                                    \"in_sync\": true\n                                },\n                                {\n                                    \"broker\": 2,\n                                    \"leader\": false,\n                                    \"in_sync\": true\n                                }\n                            ]\n                        },\n                        {\n                            \"partition\": 2,\n                            \"leader\": 2,\n                            \"replicas\": [\n                                {\n                                    \"broker\": 1,\n                                    \"leader\": false,\n                                    \"in_sync\": true\n                                },\n                                {\n                                    \"broker\": 2,\n                                    \"leader\": true,\n                                    \"in_sync\": true\n                                }\n                            ]\n                        }\n                    ]\n                }\n            },\n            \"PartitionMetadata\": {\n                \"title\": \"PartitionMetadata\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"partition\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"leader\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"replicas\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Replica\"\n                        }\n                    }\n                },\n                \"additionalProperties\": false,\n                \"example\": {\n                    \"partition\": 1,\n                    \"leader\": 1,\n                    \"replicas\": [\n                        {\n                            \"broker\": 1,\n                            \"leader\": true,\n                            \"in_sync\": true\n                        },\n                        {\n                            \"broker\": 2,\n                            \"leader\": false,\n                            \"in_sync\": true\n                        }\n                    ]\n                }\n            },\n            \"Replica\": {\n                \"title\": \"Replica\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"broker\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"leader\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"in_sync\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"additionalProperties\": false,\n                \"example\": {\n                    \"broker\": 1,\n                    \"leader\": true,\n                    \"in_sync\": true\n                }\n            },\n            \"BridgeInfo\": {\n                \"title\": \"BridgeInfo\",\n                \"description\": \"Information about Kafka Bridge instance.\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"bridge_version\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"example\": {\n                    \"bridge_version\": \"0.16.0\"\n                }\n            }\n        }\n    },\n    \"tags\": [\n        {\n            \"name\": \"Consumers\",\n            \"description\": \"Consumer operations to create consumers in your Kafka cluster and perform common actions, such as subscribing to topics, retrieving processed records, and committing offsets.\"\n        },\n        {\n            \"name\": \"Topics\",\n            \"description\": \"Topic operations to send messages to a specified topic or topic partition, optionally including message keys in requests. You can also retrieve topics and topic metadata.\"\n        },\n        {\n            \"name\": \"Seek\",\n            \"description\": \"Seek operations that enable a consumer to begin receiving messages from a given offset position.\"\n        },\n        {\n            \"name\": \"Producer\",\n            \"description\": \"Producer operations to send records to a specified topic or topic partition.\"\n        }\n    ]\n}\n",
			"canonicalURL": "/github.com/strimzi/strimzi-kafka-bridge@9c82fe4ef11ac89e4acaa9c5bb9c87fe78159862/-/blob/src/main/resources/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/strimzi/strimzi-kafka-bridge/blob/9c82fe4ef11ac89e4acaa9c5bb9c87fe78159862/src/main/resources/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/consumers/{groupid}\": post: requestBody: contents: unsupported content types: [application/vnd.kafka.v2+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}