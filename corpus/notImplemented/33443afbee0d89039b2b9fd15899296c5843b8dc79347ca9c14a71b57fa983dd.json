{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-admin-reports_v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-admin-reports_v1-swagger.yaml",
			"byteSize": 30024,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  description: Fetches reports for the administrators of G Suite customers about the usage,\n    collaboration, security, and risk for their users.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Admin Reports\n  version: reports_v1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n    - analytics\n  x-logo:\n    url: https://www.gstatic.com/images/icons/material/product/2x/admin_64dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: google\n      url: https://www.googleapis.com/discovery/v1/apis/admin/reports_v1/rest\n      version: v1\n  x-preferred: true\n  x-providerName: googleapis.com\n  x-serviceName: admin\nexternalDocs:\n  url: https://developers.google.com/admin-sdk/reports/\ntags:\n  - name: activities\n  - name: channels\n  - name: customerUsageReports\n  - name: entityUsageReports\n  - name: userUsageReport\npaths:\n  \"/activity/users/{userKey}/applications/{applicationName}\":\n    get:\n      description: Retrieves a list of activities for a specific customer and application.\n      operationId: reports.activities.list\n      parameters:\n        - description: IP Address of host where the event was performed. Supports both IPv4\n            and IPv6 addresses.\n          in: query\n          name: actorIpAddress\n          schema:\n            type: string\n        - description: Application name for which the events are to be retrieved.\n          in: path\n          name: applicationName\n          required: true\n          schema:\n            type: string\n        - description: Represents the customer for which the data is to be fetched.\n          in: query\n          name: customerId\n          schema:\n            type: string\n        - description: Return events which occurred at or before this time.\n          in: query\n          name: endTime\n          schema:\n            type: string\n        - description: Name of the event being queried.\n          in: query\n          name: eventName\n          schema:\n            type: string\n        - description: Event parameters in the form [parameter1 name][operator][parameter1\n            value],[parameter2 name][operator][parameter2 value],...\n          in: query\n          name: filters\n          schema:\n            type: string\n        - description: Number of activity records to be shown in each page.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - description: the organizational unit's(OU) ID to filter activities from users\n            belonging to a specific OU or one of its sub-OU(s)\n          in: query\n          name: orgUnitID\n          schema:\n            type: string\n            default: \"\"\n        - description: Token to specify next page.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: Return events which occurred at or after this time.\n          in: query\n          name: startTime\n          schema:\n            type: string\n        - description: Represents the profile id or the user email for which the data\n            should be filtered. When 'all' is specified as the userKey, it\n            returns usageReports for all users.\n          in: path\n          name: userKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Activities\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/admin.reports.audit.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/admin.reports.audit.readonly\n      tags:\n        - activities\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\n  \"/activity/users/{userKey}/applications/{applicationName}/watch\":\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\n    post:\n      description: Push changes to activities\n      operationId: reports.activities.watch\n      parameters:\n        - description: IP Address of host where the event was performed. Supports both IPv4\n            and IPv6 addresses.\n          in: query\n          name: actorIpAddress\n          schema:\n            type: string\n        - description: Application name for which the events are to be retrieved.\n          in: path\n          name: applicationName\n          required: true\n          schema:\n            type: string\n        - description: Represents the customer for which the data is to be fetched.\n          in: query\n          name: customerId\n          schema:\n            type: string\n        - description: Return events which occurred at or before this time.\n          in: query\n          name: endTime\n          schema:\n            type: string\n        - description: Name of the event being queried.\n          in: query\n          name: eventName\n          schema:\n            type: string\n        - description: Event parameters in the form [parameter1 name][operator][parameter1\n            value],[parameter2 name][operator][parameter2 value],...\n          in: query\n          name: filters\n          schema:\n            type: string\n        - description: Number of activity records to be shown in each page.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - description: the organizational unit's(OU) ID to filter activities from users\n            belonging to a specific OU or one of its sub-OU(s)\n          in: query\n          name: orgUnitID\n          schema:\n            type: string\n            default: \"\"\n        - description: Token to specify next page.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: Return events which occurred at or after this time.\n          in: query\n          name: startTime\n          schema:\n            type: string\n        - description: Represents the profile id or the user email for which the data\n            should be filtered. When 'all' is specified as the userKey, it\n            returns usageReports for all users.\n          in: path\n          name: userKey\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Channel\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Channel\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/admin.reports.audit.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/admin.reports.audit.readonly\n      tags:\n        - activities\n  /admin/reports_v1/channels/stop:\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\n    post:\n      description: Stop watching resources through this channel\n      operationId: admin.channels.stop\n      requestBody:\n        $ref: \"#/components/requestBodies/Channel\"\n      responses:\n        \"200\":\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/admin.reports.audit.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/admin.reports.audit.readonly\n      tags:\n        - channels\n  \"/usage/dates/{date}\":\n    get:\n      description: Retrieves a report which is a collection of properties / statistics for\n        a specific customer.\n      operationId: reports.customerUsageReports.get\n      parameters:\n        - description: Represents the customer for which the data is to be fetched.\n          in: query\n          name: customerId\n          schema:\n            type: string\n        - description: Represents the date in yyyy-mm-dd format for which the data is to be\n            fetched.\n          in: path\n          name: date\n          required: true\n          schema:\n            type: string\n        - description: Token to specify next page.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: Represents the application name, parameter name pairs to fetch in\n            csv as app_name1:param_name1, app_name2:param_name2.\n          in: query\n          name: parameters\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/UsageReports\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/admin.reports.usage.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/admin.reports.usage.readonly\n      tags:\n        - customerUsageReports\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\n  \"/usage/users/{userKey}/dates/{date}\":\n    get:\n      description: Retrieves a report which is a collection of properties / statistics for\n        a set of users.\n      operationId: reports.userUsageReport.get\n      parameters:\n        - description: Represents the customer for which the data is to be fetched.\n          in: query\n          name: customerId\n          schema:\n            type: string\n        - description: Represents the date in yyyy-mm-dd format for which the data is to be\n            fetched.\n          in: path\n          name: date\n          required: true\n          schema:\n            type: string\n        - description: Represents the set of filters including parameter operator value.\n          in: query\n          name: filters\n          schema:\n            type: string\n        - description: Maximum number of results to return. Maximum allowed is 1000\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n            maximum: 1000\n        - description: the organizational unit's ID to filter usage parameters from users\n            belonging to a specific OU or one of its sub-OU(s).\n          in: query\n          name: orgUnitID\n          schema:\n            type: string\n            default: \"\"\n        - description: Token to specify next page.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: Represents the application name, parameter name pairs to fetch in\n            csv as app_name1:param_name1, app_name2:param_name2.\n          in: query\n          name: parameters\n          schema:\n            type: string\n        - description: Represents the profile id or the user email for which the data\n            should be filtered.\n          in: path\n          name: userKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/UsageReports\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/admin.reports.usage.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/admin.reports.usage.readonly\n      tags:\n        - userUsageReport\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\n  \"/usage/{entityType}/{entityKey}/dates/{date}\":\n    get:\n      description: Retrieves a report which is a collection of properties / statistics for\n        a set of objects.\n      operationId: reports.entityUsageReports.get\n      parameters:\n        - description: Represents the customer for which the data is to be fetched.\n          in: query\n          name: customerId\n          schema:\n            type: string\n        - description: Represents the date in yyyy-mm-dd format for which the data is to be\n            fetched.\n          in: path\n          name: date\n          required: true\n          schema:\n            type: string\n        - description: Represents the key of object for which the data should be filtered.\n          in: path\n          name: entityKey\n          required: true\n          schema:\n            type: string\n        - description: Type of object. Should be one of - gplus_communities.\n          in: path\n          name: entityType\n          required: true\n          schema:\n            type: string\n        - description: Represents the set of filters including parameter operator value.\n          in: query\n          name: filters\n          schema:\n            type: string\n        - description: Maximum number of results to return. Maximum allowed is 1000\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n            maximum: 1000\n        - description: Token to specify next page.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: Represents the application name, parameter name pairs to fetch in\n            csv as app_name1:param_name1, app_name2:param_name2.\n          in: query\n          name: parameters\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/UsageReports\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/admin.reports.usage.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/admin.reports.usage.readonly\n      tags:\n        - entityUsageReports\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\nservers:\n  - url: https://www.googleapis.com/admin/reports/v1\ncomponents:\n  parameters:\n    alt:\n      description: Data format for the response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n        default: json\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: An opaque string that represents a user for quota purposes. Must not\n        exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    userIp:\n      description: Deprecated. Please use quotaUser instead.\n      in: query\n      name: userIp\n      schema:\n        type: string\n  requestBodies:\n    Channel:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Channel\"\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/admin.reports.audit.readonly: View audit reports for your G Suite domain\n            https://www.googleapis.com/auth/admin.reports.usage.readonly: View usage reports for your G Suite domain\n    Oauth2c:\n      description: Oauth 2.0 accessCode authentication\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n          scopes:\n            https://www.googleapis.com/auth/admin.reports.audit.readonly: View audit reports for your G Suite domain\n            https://www.googleapis.com/auth/admin.reports.usage.readonly: View usage reports for your G Suite domain\n  schemas:\n    Activities:\n      description: JSON template for a collection of activites.\n      properties:\n        etag:\n          description: ETag of the resource.\n          type: string\n        items:\n          description: Each record in read response.\n          items:\n            $ref: \"#/components/schemas/Activity\"\n          type: array\n        kind:\n          default: admin#reports#activities\n          description: Kind of list response this is.\n          type: string\n        nextPageToken:\n          description: Token for retrieving the next page\n          type: string\n      type: object\n    Activity:\n      description: JSON template for the activity resource.\n      properties:\n        actor:\n          description: User doing the action.\n          properties:\n            callerType:\n              description: User or OAuth 2LO request.\n              type: string\n            email:\n              description: Email address of the user.\n              type: string\n            key:\n              description: For OAuth 2LO API requests, consumer_key of the requestor.\n              type: string\n            profileId:\n              description: Obfuscated user id of the user.\n              type: string\n          type: object\n        etag:\n          description: ETag of the entry.\n          type: string\n        events:\n          description: Activity events.\n          items:\n            properties:\n              name:\n                description: Name of event.\n                type: string\n              parameters:\n                description: Parameter value pairs for various applications.\n                items:\n                  properties:\n                    boolValue:\n                      description: Boolean value of the parameter.\n                      type: boolean\n                    intValue:\n                      description: Integral value of the parameter.\n                      format: int64\n                      type: string\n                    messageValue:\n                      description: Nested value of the parameter.\n                      properties:\n                        parameter:\n                          description: Looping to get parameter values.\n                          items:\n                            $ref: \"#/components/schemas/NestedParameter\"\n                          type: array\n                      type: object\n                    multiIntValue:\n                      description: Multi-int value of the parameter.\n                      items:\n                        format: int64\n                        type: string\n                      type: array\n                    multiMessageValue:\n                      description: Nested values of the parameter.\n                      items:\n                        properties:\n                          parameter:\n                            description: Parameter value.\n                            items:\n                              $ref: \"#/components/schemas/NestedParameter\"\n                            type: array\n                        type: object\n                      type: array\n                    multiValue:\n                      description: Multi-string value of the parameter.\n                      items:\n                        type: string\n                      type: array\n                    name:\n                      description: The name of the parameter.\n                      type: string\n                    value:\n                      description: String value of the parameter.\n                      type: string\n                  type: object\n                type: array\n              type:\n                description: Type of event.\n                type: string\n            type: object\n          type: array\n        id:\n          description: Unique identifier for each activity record.\n          properties:\n            applicationName:\n              description: Application name to which the event belongs.\n              type: string\n            customerId:\n              description: Obfuscated customer ID of the source customer.\n              type: string\n            time:\n              description: Time of occurrence of the activity.\n              format: date-time\n              type: string\n            uniqueQualifier:\n              description: Unique qualifier if multiple events have the same time.\n              format: int64\n              type: string\n          type: object\n        ipAddress:\n          description: IP Address of the user doing the action.\n          type: string\n        kind:\n          default: admin#reports#activity\n          description: Kind of resource this is.\n          type: string\n        ownerDomain:\n          description: Domain of source customer.\n          type: string\n      type: object\n    Channel:\n      description: An notification channel used to watch for resource changes.\n      properties:\n        address:\n          description: The address where notifications are delivered for this channel.\n          type: string\n        expiration:\n          description: Date and time of notification channel expiration, expressed as a\n            Unix timestamp, in milliseconds. Optional.\n          format: int64\n          type: string\n        id:\n          description: A UUID or similar unique string that identifies this channel.\n          type: string\n        kind:\n          default: api#channel\n          description: Identifies this as a notification channel used to watch for changes\n            to a resource, which is \"api#channel\".\n          type: string\n        params:\n          additionalProperties:\n            description: Declares a new parameter by name.\n            type: string\n          description: Additional parameters controlling delivery channel behavior.\n            Optional.\n          type: object\n        payload:\n          description: A Boolean value to indicate whether payload is wanted. Optional.\n          type: boolean\n        resourceId:\n          description: An opaque ID that identifies the resource being watched on this\n            channel. Stable across different API versions.\n          type: string\n        resourceUri:\n          description: A version-specific identifier for the watched resource.\n          type: string\n        token:\n          description: An arbitrary string delivered to the target address with each\n            notification delivered over this channel. Optional.\n          type: string\n        type:\n          description: The type of delivery mechanism used for this channel.\n          type: string\n      type: object\n    NestedParameter:\n      description: JSON template for a parameter used in various reports.\n      properties:\n        boolValue:\n          description: Boolean value of the parameter.\n          type: boolean\n        intValue:\n          description: Integral value of the parameter.\n          format: int64\n          type: string\n        multiBoolValue:\n          description: Multiple boolean values of the parameter.\n          items:\n            type: boolean\n          type: array\n        multiIntValue:\n          description: Multiple integral values of the parameter.\n          items:\n            format: int64\n            type: string\n          type: array\n        multiValue:\n          description: Multiple string values of the parameter.\n          items:\n            type: string\n          type: array\n        name:\n          description: The name of the parameter.\n          type: string\n        value:\n          description: String value of the parameter.\n          type: string\n      type: object\n    UsageReport:\n      description: JSON template for a usage report.\n      properties:\n        date:\n          description: The date to which the record belongs.\n          readOnly: true\n          type: string\n        entity:\n          description: Information about the type of the item.\n          properties:\n            customerId:\n              description: Obfuscated customer id for the record.\n              readOnly: true\n              type: string\n            entityId:\n              description: 'Object key. Only relevant if entity.type = \"OBJECT\" Note:\n                external-facing name of report is \"Entities\" rather than\n                \"Objects\".'\n              readOnly: true\n              type: string\n            profileId:\n              description: Obfuscated user id for the record.\n              readOnly: true\n              type: string\n            type:\n              description: The type of item, can be customer, user, or entity (aka. object).\n              readOnly: true\n              type: string\n            userEmail:\n              description: user's email. Only relevant if entity.type = \"USER\"\n              readOnly: true\n              type: string\n          readOnly: true\n          type: object\n        etag:\n          description: ETag of the resource.\n          type: string\n        kind:\n          default: admin#reports#usageReport\n          description: The kind of object.\n          type: string\n        parameters:\n          description: Parameter value pairs for various applications.\n          items:\n            properties:\n              boolValue:\n                description: Boolean value of the parameter.\n                readOnly: true\n                type: boolean\n              datetimeValue:\n                description: RFC 3339 formatted value of the parameter.\n                format: date-time\n                readOnly: true\n                type: string\n              intValue:\n                description: Integral value of the parameter.\n                format: int64\n                readOnly: true\n                type: string\n              msgValue:\n                description: Nested message value of the parameter.\n                items:\n                  additionalProperties: {}\n                  type: object\n                readOnly: true\n                type: array\n              name:\n                description: The name of the parameter.\n                type: string\n              stringValue:\n                description: String value of the parameter.\n                readOnly: true\n                type: string\n            type: object\n          readOnly: true\n          type: array\n      type: object\n    UsageReports:\n      description: JSON template for a collection of usage reports.\n      properties:\n        etag:\n          description: ETag of the resource.\n          type: string\n        kind:\n          default: admin#reports#usageReports\n          description: The kind of object.\n          type: string\n        nextPageToken:\n          description: Token for retrieving the next page\n          type: string\n        usageReports:\n          description: Various application parameter records.\n          items:\n            $ref: \"#/components/schemas/UsageReport\"\n          type: array\n        warnings:\n          description: Warnings if any.\n          items:\n            properties:\n              code:\n                description: Machine readable code / warning type.\n                type: string\n              data:\n                description: Key-Value pairs to give detailed information on the warning.\n                items:\n                  properties:\n                    key:\n                      description: Key associated with a key-value pair to give detailed\n                        information on the warning.\n                      type: string\n                    value:\n                      description: Value associated with a key-value pair to give detailed\n                        information on the warning.\n                      type: string\n                  type: object\n                type: array\n              message:\n                description: Human readable message for the warning.\n                type: string\n            type: object\n          type: array\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-admin-reports_v1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-admin-reports_v1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/admin/reports_v1/channels/stop\": post: security: security \"Oauth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security",
		"unsupported content types"
	]
}