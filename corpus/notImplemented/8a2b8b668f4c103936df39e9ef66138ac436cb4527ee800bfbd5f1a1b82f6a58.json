{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/BlueWallet/GroundControl"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 9840,
			"content": "openapi: 3.0.0\ninfo:\n  title: GroundControl push server API\n  description: Push notifications server for BlueWallet\n  version: 0.0.12\nservers:\n  - url: http://localhost:3001\n  - url: https://groundcontrol-bluewallet-stg.herokuapp.com\n  - url: https://groundcontrol-bluewallet.herokuapp.com\npaths:\n  /lightningInvoiceGotSettled:\n    post:\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LightningInvoiceSettledNotification\"\n      responses:\n        \"200\":\n          description: OK\n\n  /majorTomToGroundControl:\n    post:\n      summary: \"Associate bitcoin addressess / ln preimage hashes / txids that you wish to be notified about to specific push token. Token serves as unique identifier of a device/user. Also, OS of the token\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                addresses:\n                  type: array\n                  items:\n                    type: string\n                hashes:\n                  type: array\n                  items:\n                    type: string\n                txids:\n                  type: array\n                  items:\n                    type: string\n                token:\n                  type: string\n                os:\n                  type: string\n      responses:\n        \"201\":\n          description: Created\n\n  /unsubscribe:\n    post:\n      summary: \"This call is a reverse call for /majorTomToGroundControl. In case user doesnt want to track addresses/txids/ln invoice hashes, he makes this call along with his token/os so GroundControl can remove them from the database\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                addresses:\n                  type: array\n                  items:\n                    type: string\n                hashes:\n                  type: array\n                  items:\n                    type: string\n                txids:\n                  type: array\n                  items:\n                    type: string\n                token:\n                  type: string\n                os:\n                  type: string\n      responses:\n        \"201\":\n          description: Created\n\n  /ping:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerInfo\"\n\n  /getTokenConfiguration:\n    post:\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                token:\n                  type: string\n                os:\n                  type: string\n      summary: \"Returns levels of notifications user currently subscribed to\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TokenConfiguration\"\n\n  /setTokenConfiguration:\n    post:\n      summary: \"Sets levels of notifications user is subscribed to; also saves some user info, like lang or app version\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: \"#/components/schemas/TokenConfiguration\"\n                - type: object\n                  required:\n                    - token\n                    - os\n                  properties:\n                    token:\n                      type: \"string\"\n                    os:\n                      type: \"string\"\n      responses:\n        \"200\":\n          description: OK\n\n  /enqueue:\n    post:\n      summary: \"Puts push in send queue. Push body should be any descendant of `/components/schemas/PushNotificationBase`\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/PushNotificationLightningInvoicePaid\"\n                - $ref: \"#/components/schemas/PushNotificationOnchainAddressGotPaid\"\n                - $ref: \"#/components/schemas/PushNotificationOnchainAddressGotUnconfirmedTransaction\"\n                - $ref: \"#/components/schemas/PushNotificationTxidGotConfirmed\"\n      responses:\n        \"200\":\n          description: OK\n\ncomponents:\n  schemas:\n    ServerInfo:\n      type: \"object\"\n      properties:\n        name:\n          type: \"string\"\n        description:\n          type: \"string\"\n        version:\n          type: \"string\"\n        uptime:\n          type: \"number\"\n        last_processed_block:\n          type: \"number\"\n        send_queue_size:\n          type: \"number\"\n\n    NotificationLevel:\n      type: string\n      enum:\n        - transactions\n        - news\n        - price\n        - tips\n\n    TokenConfiguration:\n      type: \"object\"\n      properties:\n        level_all:\n          type: \"boolean\"\n        level_transactions:\n          type: \"boolean\"\n        level_news:\n          type: \"boolean\"\n        level_price:\n          type: \"boolean\"\n        level_tips:\n          type: \"boolean\"\n        lang:\n          type: \"string\"\n        app_version:\n          type: \"string\"\n\n    LightningInvoiceSettledNotification:\n      description: object thats posted to GroundControl to notify end-user that his specific invoice was paid by someone\n      type: \"object\"\n      properties:\n        memo:\n          type: \"string\"\n          description: \"text that was embedded in invoice paid\"\n        preimage:\n          type: \"string\"\n          description: \"hex string preimage\"\n        hash:\n          type: \"string\"\n          description: \"hex string preimage hash\"\n        amt_paid_sat:\n          type: \"number\"\n          description: \"exactly how much satoshis was paid to make this invoice settked (\u003e= invoice amount)\"\n\n    PushNotificationBase:\n      description: payload for push notification delivered to phone\n      type: object\n      required:\n        - type\n        - level\n        - os\n        - token\n      properties:\n        \"type\":\n          type: \"integer\"\n          enum:\n            - 1\n            - 2\n            - 3\n            - 4\n          description: \u003e\n            type:\n             * `1` - Your lightning invoice was paid\n             * `2` - New transaction to one of your addresses\n             * `3` - New unconfirmed transaction to one of your addresses\n             * `4` - Transaction confirmed\n        \"token\":\n          type: \"string\"\n        \"os\":\n          type: \"string\"\n          enum:\n            - \"android\"\n            - \"ios\"\n        badge:\n          type: \"integer\"\n        level:\n          $ref: \"#/components/schemas/NotificationLevel\"\n\n    PushNotificationLightningInvoicePaid:\n      allOf: # Combines PushNotificationBase and the inline model\n        - $ref: \"#/components/schemas/PushNotificationBase\"\n        - type: object\n          required:\n            - sat\n            - hash\n            - memo\n          properties:\n            type:\n              type: \"integer\"\n              enum: [1]\n            level:\n              type: \"string\"\n              enum: [\"transactions\"]\n            sat:\n              type: \"integer\"\n              description: amount of satoshis\n            hash:\n              type: \"string\"\n              description: hash of specific ln invoice preimage\n            memo:\n              type: \"string\"\n              description: text attached to bolt11\n\n    PushNotificationOnchainAddressGotPaid:\n      allOf: # Combines PushNotificationBase and the inline model\n        - $ref: \"#/components/schemas/PushNotificationBase\"\n        - type: object\n          required:\n            - address\n            - sat\n            - txid\n          properties:\n            type:\n              type: \"integer\"\n              enum: [2]\n            level:\n              type: \"string\"\n              enum: [\"transactions\"]\n            sat:\n              type: \"integer\"\n              description: amount of satoshis\n            address:\n              type: \"string\"\n              description: user's onchain address that has incoming transaction\n            txid:\n              type: \"string\"\n              description: txid of the transaction where this address is one of the outputs\n\n    PushNotificationOnchainAddressGotUnconfirmedTransaction:\n      allOf: # Combines PushNotificationBase and the inline model\n        - $ref: \"#/components/schemas/PushNotificationBase\"\n        - type: object\n          required:\n            - address\n            - sat\n            - txid\n          properties:\n            type:\n              type: \"integer\"\n              enum: [3]\n            level:\n              type: \"string\"\n              enum: [\"transactions\"]\n            sat:\n              type: \"integer\"\n              description: amount of satoshis\n            address:\n              type: \"string\"\n              description: user's onchain address that has incoming transaction\n            txid:\n              type: \"string\"\n              description: txid of the transaction where this address is one of the outputs\n\n    PushNotificationTxidGotConfirmed:\n      allOf: # Combines PushNotificationBase and the inline model\n        - $ref: \"#/components/schemas/PushNotificationBase\"\n        - type: object\n          required:\n            - txid\n          properties:\n            type:\n              type: \"integer\"\n              enum: [4]\n            level:\n              type: \"string\"\n              enum: [\"transactions\"]\n            txid:\n              type: \"string\"\n              description: txid of the transaction that got confirmed\n",
			"canonicalURL": "/github.com/BlueWallet/GroundControl@db1e81436d95787b250405d56f9b919422a79478/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/BlueWallet/GroundControl/blob/db1e81436d95787b250405d56f9b919422a79478/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/enqueue\": post: requestBody: contents: application/json: generate schema: oneOf: collect variants: oneOf[0]: allOf: merge properties: try to merge conflicting property schemas: enum: allOf enum merging not implemented",
	"NotImplemented": [
		"allOf enum merging"
	]
}