{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ConsumerDataStandardsAustralia/standards"
		},
		"file": {
			"name": "cds_dcr.json",
			"size": 0,
			"path": "swagger-gen/api/cds_dcr.json",
			"byteSize": 21456,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"info\": {\n    \"title\": \"CDR Dynamic Client Registration API\",\n    \"description\": \"This specification defines the APIs for Data Holders exposing Dynamic Client Registration endpoints.\",\n    \"version\": \"1.17.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://data.holder.com.au/register\"\n    }\n  ],\n  \"paths\": {\n    \"/register\": {\n      \"post\": {\n        \"tags\": [\n          \"Client Registration\"\n        ],\n        \"summary\": \"Register Data Recipient oAuth Client\",\n        \"description\": \"Register a client using a CDR Register issued Software Statement Assertion.\",\n        \"operationId\": \"PostDataRecipientRegistration\",\n        \"requestBody\": {\n          \"description\": \"The registration request JWT to be used to register with a Data Holder.\",\n          \"content\": {\n            \"application/jwt\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ClientRegistrationRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Client registration success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RegistrationProperties\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Request failed due to client error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RegistrationError\"\n                }\n              }\n            }\n          }\n        },\n        \"x-codegen-request-body-name\": \"ClientRegistrationRequest\"\n      }\n    },\n    \"/register/{ClientId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Client Registration\"\n        ],\n        \"summary\": \"Get oAuth Client Registration\",\n        \"description\": \"Get a Client Registration for a given Client ID.\",\n        \"operationId\": \"GetClientRegistration\",\n        \"parameters\": [\n          {\n            \"name\": \"ClientId\",\n            \"in\": \"path\",\n            \"description\": \"The client ID issued by the target Data Holder\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"description\": \"An Authorisation Token as per **[[RFC6750]](#nref-RFC6750)**\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Client registration retrieval success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RegistrationProperties\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Request failed due to unknown or invalid Client or invalid access token\",\n            \"headers\": {\n              \"WWW-Authenticate\": {\n                \"description\": \"The Response Header Field as per **[[RFC6750]](#nref-RFC6750)**\",\n                \"schema\": {\n                  \"pattern\": \"^Bearer .*\",\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"The client does not have permission to read, update or delete the Client\"\n          }\n        },\n        \"x-scopes\": [\n          \"cdr:registration\"\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"Client Registration\"\n        ],\n        \"summary\": \"Update Data Recipient Registration\",\n        \"description\": \"Update a Client Registration for a given Client ID.\",\n        \"operationId\": \"PutDataRecipientRegistration\",\n        \"parameters\": [\n          {\n            \"name\": \"ClientId\",\n            \"in\": \"path\",\n            \"description\": \"The client ID issued by the target Data Holder\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"description\": \"An Authorisation Token as per **[[RFC6750]](#nref-RFC6750)**\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The registration request JWT to be used to register with a Data Holder.\",\n          \"content\": {\n            \"application/jwt\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ClientRegistrationRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Client registration update success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RegistrationProperties\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Request failed due to client error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RegistrationError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Request failed due to unknown or invalid Client or invalid access token\",\n            \"headers\": {\n              \"WWW-Authenticate\": {\n                \"description\": \"The Response Header Field as per **[[RFC6750]](#nref-RFC6750)**\",\n                \"schema\": {\n                  \"pattern\": \"^Bearer .*\",\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"The client does not have permission to read, update or delete the Client\"\n          }\n        },\n        \"x-scopes\": [\n          \"cdr:registration\"\n        ],\n        \"x-codegen-request-body-name\": \"ClientRegistrationRequest\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Client Registration\"\n        ],\n        \"summary\": \"Delete Data Recipient oAuth Client Registration\",\n        \"description\": \"Delete a Client Registration for a given Client ID.\",\n        \"operationId\": \"DeleteDataRecipientRegistration\",\n        \"parameters\": [\n          {\n            \"name\": \"ClientId\",\n            \"in\": \"path\",\n            \"description\": \"The client ID issued by the target Data Holder\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"description\": \"An Authorisation Token as per **[[RFC6750]](#nref-RFC6750)**\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Client deleted\"\n          },\n          \"401\": {\n            \"description\": \"Request failed due to unknown or invalid Client or invalid access token\",\n            \"headers\": {\n              \"WWW-Authenticate\": {\n                \"description\": \"The Response Header Field as per **[[RFC6750]](#nref-RFC6750)**\",\n                \"schema\": {\n                  \"pattern\": \"^Bearer .*\",\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"The client does not have permission to read, update or delete the Client\"\n          },\n          \"405\": {\n            \"description\": \"Method Not Allowed. The requested method is unsupported\"\n          }\n        },\n        \"x-scopes\": [\n          \"cdr:registration\"\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"ClientRegistrationRequest\": {\n        \"type\": \"string\",\n        \"description\": \"The registration request JWT to be used to register with a Data Holder.\",\n        \"format\": \"JWT\",\n        \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n      },\n      \"RegistrationProperties\": {\n        \"required\": [\n          \"client_description\",\n          \"client_id\",\n          \"client_name\",\n          \"client_uri\",\n          \"grant_types\",\n          \"id_token_encrypted_response_alg\",\n          \"id_token_encrypted_response_enc\",\n          \"jwks_uri\",\n          \"logo_uri\",\n          \"org_id\",\n          \"org_name\",\n          \"redirect_uris\",\n          \"request_object_signing_alg\",\n          \"response_types\",\n          \"scope\",\n          \"software_id\",\n          \"software_statement\",\n          \"token_endpoint_auth_method\",\n          \"token_endpoint_auth_signing_alg\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"client_id\": {\n            \"type\": \"string\",\n            \"description\": \"Data Holder issued client identifier string\",\n            \"example\": \"35a5a70b-5b8d-41f4-9cbd-96cfbc15c58a\"\n          },\n          \"client_id_issued_at\": {\n            \"type\": \"integer\",\n            \"description\": \"Time at which the client identifier was issued expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC\",\n            \"format\": \"int32\",\n            \"example\": 1571808167\n          },\n          \"client_name\": {\n            \"type\": \"string\",\n            \"description\": \"Human-readable string name of the software product to be presented to the end-user during authorization\",\n            \"example\": \"Mock Software\"\n          },\n          \"client_description\": {\n            \"type\": \"string\",\n            \"description\": \"Human-readable string name of the software product description to be presented to the end user during authorization\",\n            \"example\": \"A mock software product\"\n          },\n          \"client_uri\": {\n            \"type\": \"string\",\n            \"description\": \"URL string of a web page providing information about the client\",\n            \"example\": \"https://www.mockcompany.com.au\"\n          },\n          \"legal_entity_id\": {\n            \"type\": \"string\",\n            \"description\": \"A unique identifier string assigned by the CDR Register that identifies the Accredited Data Recipient Legal Entity\",\n            \"example\": \"344F0E809-BDBE-4F8E-BD30-5E6C3CB78D7B\"\n          },\n          \"legal_entity_name\": {\n            \"type\": \"string\",\n            \"description\": \"Human-readable string name of the Accredited Data Recipient Legal Entity\",\n            \"example\": \"Mock Company Pty Ltd.\"\n          },\n          \"org_id\": {\n            \"type\": \"string\",\n            \"description\": \"A unique identifier string assigned by the CDR Register that identifies the Accredited Data Recipient Brand\",\n            \"example\": \"3B0B0A7B-3E7B-4A2C-9497-E357A71D07C8\"\n          },\n          \"org_name\": {\n            \"type\": \"string\",\n            \"description\": \"Human-readable string name of the Accredited Data Recipient to be presented to the end user during authorization\",\n            \"example\": \"Mock Company Brand.\"\n          },\n          \"redirect_uris\": {\n            \"type\": \"array\",\n            \"description\": \"Array of redirection URI strings for use in redirect-based flows. If used, redirect_uris MUST match or be a subset of the redirect_uris as defined in the SSA\",\n            \"example\": [\n              \"https://www.mockcompany.com.au/redirects/redirect1\",\n              \"https://www.mockcompany.com.au/redirects/redirect2\"\n            ],\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"uri\"\n            }\n          },\n          \"sector_identifier_uri\": {\n            \"type\": \"string\",\n            \"description\": \"URL string referencing the client sector identifier URI, used as an optional input to the Pairwise Identifier\",\n            \"example\": \"https://www.mockcompany.com.au/sector_identifier.json\"\n          },\n          \"logo_uri\": {\n            \"type\": \"string\",\n            \"description\": \"URL string that references a logo for the client. If present, the server SHOULD display this image to the end-user during approval\",\n            \"example\": \"https://www.mockcompany.com.au/logos/logo1.png\"\n          },\n          \"tos_uri\": {\n            \"type\": \"string\",\n            \"description\": \"URL string that points to a human-readable terms of service document for the Software Product\",\n            \"example\": \"https://www.mockcompany.com.au/tos.html\"\n          },\n          \"policy_uri\": {\n            \"type\": \"string\",\n            \"description\": \"URL string that points to a human-readable policy document for the Software Product\",\n            \"example\": \"https://www.mockcompany.com.au/policy.html\"\n          },\n          \"jwks_uri\": {\n            \"type\": \"string\",\n            \"description\": \"URL string referencing the client JSON Web Key (JWK) Set **[[RFC7517]](#nref-RFC7517)** document, which contains the client public keys\",\n            \"example\": \"https://www.mockcompany.com.au/jwks\"\n          },\n          \"revocation_uri\": {\n            \"type\": \"string\",\n            \"description\": \"URI string that references the location of the Software Product consent revocation endpoint\",\n            \"example\": \"https://www.mockcompany.com.au/revocation\"\n          },\n          \"recipient_base_uri\": {\n            \"type\": \"string\",\n            \"description\": \"Base URI for the Consumer Data Standard Data Recipient endpoints. This should be the base to provide reference to all other Data Recipient Endpoints\",\n            \"example\": \"https://www.mockcompany.com.au\"\n          },\n          \"token_endpoint_auth_method\": {\n            \"type\": \"string\",\n            \"description\": \"The requested authentication method for the token endpoint\",\n            \"enum\": [\n              \"private_key_jwt\"\n            ]\n          },\n          \"token_endpoint_auth_signing_alg\": {\n            \"type\": \"string\",\n            \"description\": \"The algorithm used for signing the JWT\",\n            \"enum\": [\n              \"PS256\",\n              \"ES256\"\n            ]\n          },\n          \"grant_types\": {\n            \"type\": \"array\",\n            \"description\": \"Array of OAuth 2.0 grant type strings that the client can use at the token endpoint\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"client_credentials\",\n                \"authorization_code\",\n                \"refresh_token\"\n              ]\n            }\n          },\n          \"response_types\": {\n            \"type\": \"array\",\n            \"description\": \"Array of the OAuth 2.0 response type strings that the client can use at the authorization endpoint.\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"code id_token\"\n              ]\n            }\n          },\n          \"application_type\": {\n            \"type\": \"string\",\n            \"description\": \"Kind of the application. The only supported application type will be `web`\",\n            \"enum\": [\n              \"web\"\n            ]\n          },\n          \"id_token_signed_response_alg\": {\n            \"type\": \"string\",\n            \"description\": \"Algorithm with which an id_token is to be signed\",\n            \"enum\": [\n              \"PS256\",\n              \"ES256\"\n            ]\n          },\n          \"id_token_encrypted_response_alg\": {\n            \"type\": \"string\",\n            \"description\": \"JWE `alg` algorithm with which an id_token is to be encrypted\",\n            \"example\": \"RSA-OAEP\"\n          },\n          \"id_token_encrypted_response_enc\": {\n            \"type\": \"string\",\n            \"description\": \"JWE `enc` algorithm with which an id_token is to be encrypted\",\n            \"example\": \"A256GCM\"\n          },\n          \"request_object_signing_alg\": {\n            \"type\": \"string\",\n            \"description\": \"Algorithm which the ADR expects to sign the request object if a request object will be part of the authorization request sent to the Data Holder\",\n            \"enum\": [\n              \"PS256\",\n              \"ES256\"\n            ]\n          },\n          \"software_statement\": {\n            \"type\": \"string\",\n            \"description\": \"The Software Statement Assertion, as defined in CDR standards\",\n            \"format\": \"JWT\"\n          },\n          \"software_id\": {\n            \"type\": \"string\",\n            \"description\": \"String representing a unique identifier assigned by the Register and used by registration endpoints to identify the software product to be dynamically registered. \u003c/br\u003e\u003c/br\u003eThe \\\"software_id\\\" will remain the same for the lifetime of the product, across multiple updates and versions\",\n            \"example\": \"740C368F-ECF9-4D29-A2EA-0514A66B0CDE\"\n          },\n          \"software_roles\": {\n            \"type\": \"string\",\n            \"description\": \"String containing a role of the software in the CDR Regime. Initially the only value used with be `data-recipient-software-product`\",\n            \"example\": \"data-recipient-software-product\"\n          },\n          \"scope\": {\n            \"type\": \"string\",\n            \"description\": \"String containing a space-separated list of scope values that the client can use when requesting access tokens.\",\n            \"example\": \"openid profile bank:accounts.basic:read bank:accounts.detail:read bank:transactions:read bank:payees:read bank:regular_payments:read common:customer.basic:read common:customer.detail:read cdr:registration\"\n          }\n        }\n      },\n      \"ClientRegistration\": {\n        \"allOf\": [\n          {\n            \"required\": [\n              \"aud\",\n              \"exp\",\n              \"iat\",\n              \"iss\",\n              \"jti\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"iss\": {\n                \"type\": \"string\",\n                \"description\": \"Contains the identifier for the ADR Software Product (SoftwareProductId) as defined in the CDR Register\",\n                \"example\": \"CDR Software Product ID\"\n              },\n              \"iat\": {\n                \"type\": \"integer\",\n                \"description\": \"The time at which the request was issued by the Data Recipient  expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC\",\n                \"format\": \"int32\",\n                \"example\": 1571808167\n              },\n              \"exp\": {\n                \"type\": \"integer\",\n                \"description\": \"The time at which the request expires expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC\",\n                \"format\": \"int32\",\n                \"example\": 2147483646\n              },\n              \"jti\": {\n                \"type\": \"string\",\n                \"description\": \"Unique identifier for the JWT, used to prevent replay of the token\",\n                \"example\": \"37747cd1c10545699f754adf28b73e31\"\n              },\n              \"aud\": {\n                \"type\": \"string\",\n                \"description\": \"'Contains the Data Holder issuer value as described in the OIDC Discovery Document\",\n                \"example\": \"https://secure.api.dataholder.com/issuer\"\n              }\n            }\n          },\n          {\n            \"$ref\": \"#/components/schemas/RegistrationProperties\"\n          }\n        ]\n      },\n      \"RegistrationError\": {\n        \"required\": [\n          \"error\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"type\": \"string\",\n            \"description\": \"Predefined error code as described in [section 3.3 OIDC Dynamic Client Registration](https://openid.net/specs/openid-connect-registration-1_0.html)\",\n            \"enum\": [\n              \"invalid_redirect_uri\",\n              \"invalid_client_metadata\",\n              \"invalid_software_statement\",\n              \"unapproved_software_statement\"\n            ]\n          },\n          \"error_description\": {\n            \"type\": \"string\",\n            \"description\": \"Additional text description of the error for debugging.\"\n          }\n        }\n      }\n    },\n    \"responses\": {\n      \"400Error\": {\n        \"description\": \"Request failed due to client error\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/RegistrationError\"\n            }\n          }\n        }\n      },\n      \"401Error\": {\n        \"description\": \"Request failed due to unknown or invalid Client or invalid access token\",\n        \"headers\": {\n          \"WWW-Authenticate\": {\n            \"description\": \"The Response Header Field as per **[[RFC6750]](#nref-RFC6750)**\",\n            \"schema\": {\n              \"pattern\": \"^Bearer .*\",\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"403Error\": {\n        \"description\": \"The client does not have permission to read, update or delete the Client\"\n      },\n      \"405Error\": {\n        \"description\": \"Method Not Allowed. The requested method is unsupported\"\n      }\n    },\n    \"parameters\": {\n      \"Authorization\": {\n        \"name\": \"Authorization\",\n        \"in\": \"header\",\n        \"description\": \"An Authorisation Token as per **[[RFC6750]](#nref-RFC6750)**\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"ClientId\": {\n        \"name\": \"ClientId\",\n        \"in\": \"path\",\n        \"description\": \"The client ID issued by the target Data Holder\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/ConsumerDataStandardsAustralia/standards@c4bb11ccedf294a98f61aa0782fbfce211a5d460/-/blob/swagger-gen/api/cds_dcr.json",
			"externalURLs": [
				{
					"url": "https://github.com/ConsumerDataStandardsAustralia/standards/blob/c4bb11ccedf294a98f61aa0782fbfce211a5d460/swagger-gen/api/cds_dcr.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/register\": post: requestBody: contents: unsupported content types: [application/jwt]",
	"NotImplemented": [
		"unsupported content types"
	]
}