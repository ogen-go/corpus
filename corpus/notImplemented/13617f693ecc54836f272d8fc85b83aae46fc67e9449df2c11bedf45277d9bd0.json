{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/XeroAPI/Xero-OpenAPI"
		},
		"file": {
			"name": "xero-payroll-nz.yaml",
			"size": 0,
			"path": "xero-payroll-nz.yaml",
			"byteSize": 319878,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2.23.0'\n  title: 'Xero Payroll NZ'\n  description: 'This is the Xero Payroll API for orgs in the NZ region.'\n  termsOfService: \"https://developer.xero.com/xero-developer-platform-terms-conditions/\"\n  contact:\n    name: \"Xero Platform Team\"\n    email: \"api@xero.com\"\n    url: \"https://developer.xero.com\"\ntags:\n  - name: PayrollNz\nservers:\n  - description: Xero Payroll NZ API\n    url: https://api.xero.com/payroll.xro/2.0\npaths:\n  /Employees:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees, payroll.employees.read]\n      tags:\n        - PayrollNz\n      operationId: getEmployees\n      x-hasPayrollUkProblem: true\n      summary: Retrieves employees\n      parameters:\n        - in: query\n          name: filter\n          description: Filter by first name and/or lastname\n          schema:\n            type: string\n          example: firstName==John,lastName==Smith\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n          example: 5\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Employees'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-24T20:16:14.6198711\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 8\n                          },\n                          \"problem\": null,\n                          \"employees\": [\n                            {\n                              \"employeeID\": \"68342973-c405-4b86-b5d3-d7b877c27995\",\n                              \"firstName\": \"Casual\",\n                              \"lastName\": \"Worker\",\n                              \"dateOfBirth\": \"1990-12-01T00:00:00\",\n                              \"gender\": \"M\",\n                              \"email\": null,\n                              \"phoneNumber\": null,\n                              \"startDate\": \"2019-02-07T00:00:00\",\n                              \"address\": {\n                                \"addressLine1\": \"30 King ST\",\n                                \"addressLine2\": null,\n                                \"city\": \"Rangiora\",\n                                \"suburb\": null,\n                                \"countryName\": \"NEW ZEALAND\",\n                                \"postCode\": \"7400\"\n                              },\n                              \"payrollCalendarID\": \"9aa56064-990f-4ad3-a189-d966d8f6a030\",\n                              \"updatedDateUTC\": \"2019-09-24T05:08:45\",\n                              \"createdDateUTC\": \"2019-09-22T23:58:23\",\n                              \"endDate\": null\n                            },\n                            {\n                              \"employeeID\": \"1c4f0c92-03ad-43f2-a690-ee51397ece6a\",\n                              \"firstName\": \"GST\",\n                              \"lastName\": \"Contractor\",\n                              \"dateOfBirth\": null,\n                              \"gender\": null,\n                              \"email\": null,\n                              \"phoneNumber\": null,\n                              \"startDate\": \"2019-01-30T00:00:00\",\n                              \"address\": {\n                                \"addressLine1\": null,\n                                \"addressLine2\": null,\n                                \"city\": null,\n                                \"suburb\": null,\n                                \"countryName\": null,\n                                \"postCode\": null\n                              },\n                              \"payrollCalendarID\": \"9aa56064-990f-4ad3-a189-d966d8f6a030\",\n                              \"updatedDateUTC\": \"2019-09-23T00:16:25\",\n                              \"createdDateUTC\": \"2019-09-23T00:12:16\",\n                              \"endDate\": null\n                            }\n                          ]\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n    post: \n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: createEmployee\n      x-hasPayrollUkProblem: true\n      x-example:\n        - dateOfBirthValue:\n          key: dateOfBirth\n          keyPascal: DateOfBirth\n          keySnake: date_of_birth\n          is_date: true\n          object: employee\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2000, Month.OCTOBER, 28)\"\n          java: \"LocalDate.of(2000, Month.OCTOBER, 28)\"\n          csharp: \"new DateTime(2000, 10, 10)\"\n          php: \"new DateTime('2000-10-28')\"\n          node: \"'2000-10-28'\"\n          python: \"dateutil.parser.parse('2000-10-28T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - Address:\n          key: address\n          keyPascal: Address\n          keySnake: address\n          is_object: true \n        - addressLine1:\n          key: addressLine1\n          keyPascal: AddressLine1\n          keySnake: address_line_1\n          default: 123 Test st\n          object: address\n        - city:\n          key: city\n          keyPascal: City\n          keySnake: city\n          object: address\n          default: Rangiora\n        - postCode:\n          key: postCode\n          keyPascal: PostCode\n          keySnake: post_code\n          object: address\n          default: 7400\n        - countryName:\n          key: countryName\n          keyPascal: CountryName\n          keySnake: country_name\n          default: NEW ZEALAND\n          object: address\n          is_last: true\n        - employee:\n          key: employee\n          keyPascal: Employee\n          is_object: true \n        - firstName:\n          key: firstName\n          keyPascal: FirstName\n          keySnake: first_name \n          default: \"Adam\"\n          object: employee\n        - lastName:\n          key: lastName\n          keyPascal: LastName\n          keySnake: last_name\n          default: \"Adamson\"\n          object: employee\n        - dateOfBirth:\n          is_variable: true\n          nonString: true\n          key: dateOfBirth\n          keyPascal: DateOfBirth\n          keySnake: date_of_birth\n          default: dateOfBirth\n          python: date_of_birth\n          ruby: date_of_birth\n          object: employee\n        - setHomeAddress:\n          is_last: true\n          is_variable: true\n          nonString: true\n          key: address\n          keyPascal: Address\n          default: address\n          python: address\n          ruby: address\n          object: employee      \n      summary: Creates an employees\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeObject'\n              example: '{\n                        \"id\": \"00000000-0000-0000-0000-000000000000\",\n                        \"providerName\": \"provider-name\",\n                        \"dateTimeUTC\": \"2020-08-24T20:27:22.5779577\",\n                        \"httpStatusCode\": \"OK\",\n                        \"pagination\": null,\n                        \"problem\": null,\n                        \"employee\": {\n                          \"employeeID\": \"658be485-3feb-402e-9e77-ac17623aad42\",\n                          \"firstName\": \"Mike\",\n                          \"lastName\": \"Johntzxzpxhmkgson\",\n                          \"dateOfBirth\": \"2000-01-01T00:00:00\",\n                          \"gender\": \"M\",\n                          \"email\": \"83139@starkindustries.com\",\n                          \"phoneNumber\": null,\n                          \"startDate\": null,\n                          \"address\": {\n                            \"addressLine1\": \"101 Green St\",\n                            \"addressLine2\": null,\n                            \"city\": \"San Francisco\",\n                            \"suburb\": null,\n                            \"countryName\": null,\n                            \"postCode\": \"4351\"\n                          },\n                          \"payrollCalendarID\": null,\n                          \"updatedDateUTC\": \"2020-08-24T20:27:22\",\n                          \"createdDateUTC\": \"2020-08-24T20:27:22\",\n                          \"endDate\": null\n                        }\n                      }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Employee'\n            example: '{\n                        \"title\": \"Mr\",\n                        \"firstName\": \"Mike\",\n                        \"lastName\": \"Johntzxzpxhmkgson\",\n                        \"dateOfBirth\": \"2000-01-01\",\n                        \"address\": {\n                          \"addressLine1\": \"101 Green St\",\n                          \"city\": \"San Francisco\",\n                          \"postCode\": \"4351\",\n                          \"countryName\": \"United Kingdom\"\n                        },\n                        \"email\": \"83139@starkindustries.com\",\n                        \"gender\": \"M\"\n                      }'\n  /Employees/{EmployeeID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees, payroll.employees.read]\n      tags:\n        - PayrollNz\n      operationId: getEmployee\n      x-hasPayrollUkProblem: true\n      summary: Retrieves an employees using a unique employee ID\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-24T20:16:15.3542191\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"employee\": {\n                            \"employeeID\": \"68342973-c405-4b86-b5d3-d7b877c27995\",\n                            \"firstName\": \"Casual\",\n                            \"lastName\": \"Worker\",\n                            \"dateOfBirth\": \"1990-12-01T00:00:00\",\n                            \"gender\": \"M\",\n                            \"email\": null,\n                            \"phoneNumber\": null,\n                            \"startDate\": \"2019-02-07T00:00:00\",\n                            \"address\": {\n                              \"addressLine1\": \"30 King ST\",\n                              \"addressLine2\": null,\n                              \"city\": \"Rangiora\",\n                              \"suburb\": null,\n                              \"countryName\": \"NEW ZEALAND\",\n                              \"postCode\": \"7400\"\n                            },\n                            \"payrollCalendarID\": \"9aa56064-990f-4ad3-a189-d966d8f6a030\",\n                            \"updatedDateUTC\": \"2019-09-24T05:08:45\",\n                            \"createdDateUTC\": \"2019-09-22T23:58:23\",\n                            \"endDate\": null\n                          }\n                        }'\n    put:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: updateEmployee\n      x-hasPayrollUkProblem: true\n      x-example:\n        - dateOfBirthValue:\n          key: dateOfBirth\n          keyPascal: DateOfBirth\n          keySnake: date_of_birth\n          is_date: true\n          object: employee\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2000, Month.OCTOBER, 28)\"\n          java: \"LocalDate.of(2000, Month.OCTOBER, 28)\"\n          csharp: \"new DateTime(2000, 10, 10)\"\n          php: \"new DateTime('2000-10-28')\"\n          node: \"'2000-10-28'\"\n          python: \"dateutil.parser.parse('2000-10-28T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - Address:\n          key: address\n          keyPascal: Address\n          keySnake: address\n          is_object: true \n        - addressLine1:\n          key: addressLine1\n          keyPascal: AddressLine1\n          keySnake: address_line_1\n          default: 123 Test st\n          object: address\n        - city:\n          key: city\n          keyPascal: City\n          keySnake: city\n          object: address\n          default: Rangiora\n        - postCode:\n          key: postCode\n          keyPascal: PostCode\n          keySnake: post_code\n          object: address\n          default: 7400\n        - countryName:\n          key: countryName\n          keyPascal: CountryName\n          keySnake: country_name\n          default: NEW ZEALAND\n          object: address\n          is_last: true\n        - employee:\n          key: employee\n          keyPascal: Employee\n          is_object: true \n        - firstName:\n          key: firstName\n          keyPascal: FirstName\n          keySnake: first_name \n          default: \"Adam\"\n          object: employee\n        - lastName:\n          key: lastName\n          keyPascal: LastName\n          keySnake: last_name\n          default: \"Adamson\"\n          object: employee\n        - dateOfBirth:\n          is_variable: true\n          nonString: true\n          key: dateOfBirth\n          keyPascal: DateOfBirth\n          keySnake: date_of_birth\n          default: dateOfBirth\n          python: date_of_birth\n          ruby: date_of_birth\n          object: employee\n        - setHomeAddress:\n          is_last: true\n          is_variable: true\n          nonString: true\n          key: address\n          keyPascal: Address\n          default: address\n          python: address\n          ruby: address\n          object: employee  \n      summary: Updates an existing employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-24T20:29:43.3452832\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"employee\": {\n                            \"employeeID\": \"68342973-c405-4b86-b5d3-d7b877c27995\",\n                            \"firstName\": \"Tony\",\n                            \"lastName\": \"Starkgtrzgquusrson\",\n                            \"dateOfBirth\": \"1999-01-01T00:00:00\",\n                            \"gender\": \"M\",\n                            \"email\": \"58315@starkindustries.com\",\n                            \"phoneNumber\": null,\n                            \"startDate\": \"2019-02-07T00:00:00\",\n                            \"address\": {\n                              \"addressLine1\": \"101 Green St\",\n                              \"addressLine2\": null,\n                              \"city\": \"San Francisco\",\n                              \"suburb\": null,\n                              \"countryName\": null,\n                              \"postCode\": \"4432\"\n                            },\n                            \"payrollCalendarID\": \"9aa56064-990f-4ad3-a189-d966d8f6a030\",\n                            \"updatedDateUTC\": \"2020-08-24T20:29:43\",\n                            \"createdDateUTC\": \"2019-09-22T23:58:23\",\n                            \"endDate\": null\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Employee'\n            example: '{\n                        \"title\": \"Mr\",\n                        \"firstName\": \"Tony\",\n                        \"lastName\": \"Starkgtrzgquusrson\",\n                        \"dateOfBirth\": \"1999-01-01\",\n                        \"address\": {\n                          \"addressLine1\": \"101 Green St\",\n                          \"city\": \"San Francisco\",\n                          \"postCode\": \"4432\",\n                          \"countryName\": \"United Kingdom\"\n                        },\n                        \"email\": \"58315@starkindustries.com\",\n                        \"gender\": \"M\"\n                      }'\n  /Employees/{EmployeeID}/Employment:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    post: \n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: createEmployment\n      x-hasPayrollUkProblem: true\n      x-example:\n        - startDateValue:\n          key: startDate\n          keyPascal: StartDate\n          keySnake: start_date\n          is_date: true\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2020, Month.OCTOBER, 28)\"\n          java: \"LocalDate.of(2020, Month.OCTOBER, 28)\"\n          csharp: \"new DateTime(2020, 10, 10)\"\n          php: \"new DateTime('2020-10-28')\"\n          node: \"'2020-10-28'\"\n          python: \"dateutil.parser.parse('2020-10-28T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - employment:\n          key: employment\n          keyPascal: Employment\n          keySnake: employment\n          is_object: true\n        - payrollCalendarID:\n          key: payrollCalendarID\n          keyPascal: PayrollCalendarID\n          keySnake: payroll_calendar_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: employment\n        - startDate:\n          is_variable: true\n          nonString: true\n          key: startDate\n          keyPascal: StartDate\n          keySnake: start_date\n          default: startDate\n          python: start_date\n          ruby: start_date\n          object: employment\n          is_last: true \n      summary: Creates an employment detail for a specific employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmploymentObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-24T20:53:58.8624623\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"employment\": {\n                            \"payrollCalendarID\": \"9aa56064-990f-4ad3-a189-d966d8f6a030\",\n                            \"startDate\": \"2020-09-02T00:00:00\"\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Employment'\n            example: '{\n                        \"payrollCalendarID\": \"9aa56064-990f-4ad3-a189-d966d8f6a030\",\n                        \"startDate\": \"2020-09-02\"\n                      }'\n  /Employees/{EmployeeID}/Tax:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees, payroll.employees.read]\n      tags:\n        - PayrollNz\n      operationId: getEmployeeTax\n      x-hasPayrollUkProblem: true\n      summary: Retrieves tax records for a specific employee \n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeTaxObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-24T20:57:27.5434491\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"employeeTax\": {\n                            \"irdNumber\": \"111111111\",\n                            \"taxCode\": \"M\",\n                            \"esctRatePercentage\": 17.5,\n                            \"isEligibleForKiwiSaver\": true,\n                            \"hasSpecialStudentLoanRate\": false,\n                            \"specialStudentLoanRatePercentage\": null,\n                            \"specialTaxRatePercentage\": null,\n                            \"kiwiSaverContributions\": \"MakeContributions\",\n                            \"kiwiSaverOptOutDate\": null,\n                            \"kiwiSaverContributionHolidayEndDate\": null,\n                            \"kiwiSaverEmployeeContributionRatePercentage\": 3,\n                            \"kiwiSaverEmployerContributionRatePercentage\": 3,\n                            \"kiwiSaverEmployerSalarySacrificeContributionRatePercentage\": 0,\n                            \"hasStudentLoanBalance\": false,\n                            \"studentLoanBalance\": null,\n                            \"studentLoanAsAt\": null\n                          }\n                        }'\n    post: \n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: updateEmployeeTax\n      x-hasPayrollUkProblem: true\n      x-example:\n        - studentLoanAsAtValue:\n          key: studentLoanAsAt\n          keyPascal: StudentLoanAsAt\n          keySnake: student_loan_as_at\n          is_date: true\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2020, Month.OCTOBER, 30)\"\n          java: \"LocalDate.of(2020, Month.OCTOBER, 30)\"\n          csharp: \"new DateTime(2020, 10, 12)\"\n          php: \"new DateTime('2020-10-30')\"\n          node: \"'2020-10-30'\"\n          python: \"dateutil.parser.parse('2020-10-30T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - employeeTax:\n          key: employeeTax\n          keyPascal: EmployeeTax\n          keySnake: employee_tax\n          is_object: true\n        - irdNumber:\n          key: irdNumber\n          keyPascal: IrdNumber\n          keySnake: ird_number\n          default: 111111111\n          object: employeeTax\n        - hasSpecialStudentLoanRate:\n          key: hasSpecialStudentLoanRate\n          keyPascal: HasSpecialStudentLoanRate\n          keySnake: has_special_student_loan_rate\n          nonString: true \n          default: true \n          object: employeeTax\n        - specialStudentLoanRatePercentage:\n          key: specialStudentLoanRatePercentage\n          keyPascal: SpecialStudentLoanRatePercentage\n          keySnake: special_student_loan_rate_percentage\n          nonString: true \n          default: 2\n          object: employeeTax\n        - isEligibleForKiwiSaver:\n          key: isEligibleForKiwiSaver\n          keyPascal: IsEligibleForKiwiSaver\n          keySnake: is_eligible_for_kiwi_saver\n          nonString: true \n          default: true \n          object: employeeTax\n        - esctRatePercentage:\n          key: esctRatePercentage\n          keyPascal: EsctRatePercentage\n          keySnake: esct_rate_percentage\n          default: 17.5\n          nonString: true \n          is_money: true\n          object: employeeTax\n        - kiwiSaverContributions:\n          key: kiwiSaverContributions\n          keyPascal: KiwiSaverContributions\n          keySnake: kiwi_saver_contributions\n          nonString: true \n          default: \"DeductionCategory.NzOther\"\n          php: XeroAPI\\XeroPHP\\Models\\PayrollNz\\EmployeeTax\\KiwiSaverContributionsEnum.MakeContributions\n          node: EmployeeTax.KiwiSaverContributionsEnum.MakeContributions\n          ruby: XeroRuby::PayrollNz::EmployeeTax::kiwi_saver_contributions_enum::MAKECONTRIBUTIONS\n          python: kiwi_saver_contributions_enum::MAKECONTRIBUTIONS\n          java: com.xero.models.payrollnz.EmployeeTax.KiwiSaverContributionsEnum.MakeContributions\n          csharp: EmployeeTax.KiwiSaverContributionsEnum.MakeContributions\n          object: employeeTax\n        - kiwiSaverEmployeeContributionRatePercentage:\n          key: kiwiSaverEmployeeContributionRatePercentage\n          keyPascal: KiwiSaverEmployeeContributionRatePercentage\n          keySnake: kiwi_saver_employee_contribution_rate_percentage\n          default: 4\n          is_money: true\n          nonString: true \n          object: employeeTax\n        - kiwiSaverEmployerSalarySacrificeContributionRatePercentage:\n          key: kiwiSaverEmployerSalarySacrificeContributionRatePercentage\n          keyPascal: KiwiSaverEmployerSalarySacrificeContributionRatePercentage\n          keySnake: kiwi_saver_employer_salary_sacrifice_contribution_rate_percentage\n          default: 2\n          nonString: true \n          object: employeeTax\n        - taxCode:\n          key: taxCode\n          keyPascal: TaxCode\n          keySnake: tax_code\n          nonString: true \n          default: TaxCode.MSL\n          php: XeroAPI\\XeroPHP\\Models\\PayrollNz\\TaxCode\\MSL\n          node: TaxCode.MSL\n          ruby: XeroRuby::PayrollNz::TaxCode::MSL\n          python: tax_code:::MSL\n          java: com.xero.models.payrollnz.TaxCode.MSL\n          csharp: TaxCode.MSL\n          object: employeeTax\n        - hasStudentLoanBalance:\n          key: hasStudentLoanBalance\n          keyPascal: HasStudentLoanBalance\n          keySnake: has_student_loan_balance\n          nonString: true \n          default: true \n          object: employeeTax\n        - studentLoanBalance:\n          key: studentLoanBalance\n          keyPascal: StudentLoanBalance\n          keySnake: student_loan_balance\n          default: 30.0000\n          nonString: true \n          is_money: true\n          object: employeeTax\n        - studentLoanAsAt:\n          key: studentLoanAsAt\n          keyPascal: StudentLoanAsAt\n          keySnake: student_loan_as_at\n          is_variable: true\n          nonString: true\n          default: studentLoanAsAt\n          python: student_loan_as_at\n          ruby: student_loan_as_at\n          object: employeeTax\n          is_last: true\n      summary: Updates the tax records for a specific employee \n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeTaxObject'\n              example: ''\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmployeeTax'\n            example: ''\n  /Employees/{EmployeeID}/openingBalances:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees, payroll.employees.read]\n      tags:\n        - PayrollNz\n      operationId: getEmployeeOpeningBalances\n      x-hasPayrollUkProblem: true\n      summary: Retrieves the opening balance for a specific employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeOpeningBalancesObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T20:00:07.7343966\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 8\n                          },\n                          \"problem\": null,\n                          \"openingBalances\": [\n                            {\n                              \"periodEndDate\": \"2020-10-01T00:00:00\",\n                              \"daysPaid\": 3,\n                              \"unpaidWeeks\": 2,\n                              \"grossEarnings\": 40\n                            }\n                          ]\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: createEmployeeOpeningBalances\n      x-hasPayrollUkProblem: true\n      summary: Creates opening balances for a specific employee\n      x-example:\n        - periodEndDateValue:\n          key: periodEndDate\n          keyPascal: PeriodEndDate\n          keySnake: period_end_date\n          is_date: true\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2020, Month.OCTOBER, 30)\"\n          java: \"LocalDate.of(2020, Month.OCTOBER, 30)\"\n          csharp: \"new DateTime(2020, 10, 12)\"\n          php: \"new DateTime('2020-10-30')\"\n          node: \"'2020-10-30'\"\n          python: \"dateutil.parser.parse('2020-10-30T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - employeeOpeningBalance:\n          key: employeeOpeningBalance\n          keyPascal: EmployeeOpeningBalance\n          keySnake: employee_opening_balance\n          is_object: true\n        - periodEndDate:\n          is_variable: true\n          nonString: true\n          key: periodEndDate\n          keyPascal: PeriodEndDate\n          keySnake: period_end_date\n          default: periodEndDate\n          python: period_end_date\n          ruby: period_end_date\n          object: employeeOpeningBalance\n        - daysPaid:\n          key: daysPaid\n          keyPascal: DaysPaid\n          keySnake: days_paid\n          default: 5\n          nonString: true \n          object: employeeOpeningBalance\n        - unpaidWeeks:\n          key: unpaidWeeks\n          keyPascal: UnpaidWeeks\n          keySnake: unpaid_weeks\n          default: 0\n          nonString: true \n          object: employeeOpeningBalance\n        - grossEarnings:\n          key: grossEarnings\n          keyPascal: GrossEarnings\n          keySnake: gross_earnings\n          default: 1730.77\n          is_money: true\n          nonString: true \n          object: employeeOpeningBalance\n          is_last: true\n        - employeeOpeningBalances:\n          is_list: true\n          key: employeeOpeningBalances\n          keyPascal: EmployeeOpeningBalances\n          keySnake: employee_opening_balances\n          csharp: EmployeeOpeningBalance\n          java: EmployeeOpeningBalance\n        - addEmployeeOpeningBalance:\n          is_last: true\n          is_list_add: true\n          key: employeeOpeningBalances\n          keyPascal: EmployeeOpeningBalances\n          keySnake: employee_opening_balances\n          java: EmployeeOpeningBalances\n          python: employee_opening_balance\n          ruby: employee_opening_balance\n          csharp: EmployeeOpeningBalance\n          object: employeeOpeningBalance\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeOpeningBalancesObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T19:55:36.539949\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"openingBalances\": [\n                            {\n                              \"periodEndDate\": \"2020-10-01T00:00:00\",\n                              \"daysPaid\": 3,\n                              \"unpaidWeeks\": 2,\n                              \"grossEarnings\": 40\n                            }\n                          ]\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmployeeOpeningBalances'\n            example: '[{\"periodEndDate\":\"2020-10-01\",\"daysPaid\":3,\"unpaidWeeks\":2,\"grossEarnings\":40.0}]'\n  /Employees/{EmployeeID}/Leave:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees, payroll.employees.read]\n      tags:\n        - PayrollNz\n      operationId: getEmployeeLeaves\n      x-hasPayrollUkProblem: true\n      summary: Retrieves leave records for a specific employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeLeaves'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-26T16:57:18.4657329\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"leave\": [\n                            {\n                              \"leaveID\": \"e311d45f-122e-4fbf-b068-4e3f92dd2729\",\n                              \"leaveTypeID\": \"0441497f-5dc7-4cd3-a90d-f2e07e21b2a6\",\n                              \"description\": \"Holiday Pay Payout\",\n                              \"startDate\": \"2019-07-01T00:00:00\",\n                              \"endDate\": \"2019-07-07T00:00:00\",\n                              \"periods\": [\n                                {\n                                  \"periodStartDate\": \"2019-07-01T00:00:00\",\n                                  \"periodEndDate\": \"2019-07-07T00:00:00\",\n                                  \"numberOfUnits\": 36,\n                                  \"periodStatus\": \"Completed\"\n                                }\n                              ],\n                              \"updatedDateUTC\": \"2019-09-24T05:08:44\"\n                            }\n                          ]\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: createEmployeeLeave\n      x-hasPayrollUkProblem: true\n      x-example:\n        - startDateValue:\n          key: startDate\n          keyPascal: StartDate\n          keySnake: start_date\n          is_date: true\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2020, Month.OCTOBER, 28)\"\n          java: \"LocalDate.of(2020, Month.OCTOBER, 28)\"\n          csharp: \"new DateTime(2020, 10, 10)\"\n          php: \"new DateTime('2020-10-28')\"\n          node: \"'2020-10-28'\"\n          python: \"dateutil.parser.parse('2020-10-28T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - endDateValue:\n          key: endDate\n          keyPascal: EndDate\n          keySnake: end_date\n          is_date: true\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2020, Month.OCTOBER, 30)\"\n          java: \"LocalDate.of(2020, Month.OCTOBER, 30)\"\n          csharp: \"new DateTime(2020, 10, 12)\"\n          php: \"new DateTime('2020-10-30')\"\n          node: \"'2020-10-30'\"\n          python: \"dateutil.parser.parse('2020-10-30T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - employeeLeave:\n          key: employeeLeave\n          keyPascal: EmployeeLeave\n          keySnake: employee_leave\n          is_object: true\n        - leaveTypeID:\n          key: leaveTypeID\n          keyPascal: LeaveTypeID\n          keySnake: leave_type_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: employeeLeave\n        - startDate:\n          is_variable: true\n          nonString: true\n          key: startDate\n          keyPascal: StartDate\n          keySnake: start_date\n          default: startDate\n          python: start_date\n          ruby: start_date\n          object: employeeLeave\n        - endDate:\n          is_last: true \n          is_variable: true\n          nonString: true\n          key: endDate\n          keyPascal: EndDate\n          keySnake: end_date\n          default: endDate\n          python: end_date\n          ruby: end_date\n          object: employeeLeave\n      summary: Creates leave records for a specific employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeLeaveObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-26T20:29:55.4086404\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"leave\": {\n                            \"leaveID\": \"82a04ba6-a5cc-4e7d-86d4-b9f381a494e8\",\n                            \"leaveTypeID\": \"b0b1b79e-2a25-46c2-ad08-ca25ef48d7e4\",\n                            \"description\": \"Creating a Description\",\n                            \"startDate\": \"2020-04-24T00:00:00\",\n                            \"endDate\": \"2020-04-26T00:00:00\",\n                            \"periods\": [\n                              {\n                                \"periodStartDate\": \"2020-04-20T00:00:00\",\n                                \"periodEndDate\": \"2020-04-26T00:00:00\",\n                                \"numberOfUnits\": 0,\n                                \"periodStatus\": \"Approved\"\n                              }\n                            ],\n                            \"updatedDateUTC\": \"2020-08-26T20:29:55.2151561\"\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmployeeLeave'\n            example: '{\n                        \"leaveTypeID\": \"b0b1b79e-2a25-46c2-ad08-ca25ef48d7e4\",\n                        \"description\": \"Creating a Description\",\n                        \"startDate\": \"2020-04-24\",\n                        \"endDate\": \"2020-04-26\"\n                      }'\n  /Employees/{EmployeeID}/Leave/{LeaveID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    put:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: updateEmployeeLeave\n      x-hasPayrollUkProblem: true\n      x-example:\n        - startDateValue:\n          key: startDate\n          keyPascal: StartDate\n          keySnake: start_date\n          is_date: true\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2020, Month.OCTOBER, 28)\"\n          java: \"LocalDate.of(2020, Month.OCTOBER, 28)\"\n          csharp: \"new DateTime(2020, 10, 10)\"\n          php: \"new DateTime('2020-10-28')\"\n          node: \"'2020-10-28'\"\n          python: \"dateutil.parser.parse('2020-10-28T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - endDateValue:\n          key: endDate\n          keyPascal: EndDate\n          keySnake: end_date\n          is_date: true\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2020, Month.OCTOBER, 30)\"\n          java: \"LocalDate.of(2020, Month.OCTOBER, 30)\"\n          csharp: \"new DateTime(2020, 10, 12)\"\n          php: \"new DateTime('2020-10-30')\"\n          node: \"'2020-10-30'\"\n          python: \"dateutil.parser.parse('2020-10-30T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - employeeLeave:\n          key: employeeLeave\n          keyPascal: EmployeeLeave\n          keySnake: employee_leave\n          is_object: true\n        - leaveTypeID:\n          key: leaveTypeID\n          keyPascal: LeaveTypeID\n          keySnake: leave_type_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: employeeLeave\n        - startDate:\n          is_variable: true\n          nonString: true\n          key: startDate\n          keyPascal: StartDate\n          keySnake: start_date\n          default: startDate\n          python: start_date\n          ruby: start_date\n          object: employeeLeave\n        - endDate:\n          is_last: true \n          is_variable: true\n          nonString: true\n          key: endDate\n          keyPascal: EndDate\n          keySnake: end_date\n          default: endDate\n          python: end_date\n          ruby: end_date\n          object: employeeLeave\n      summary: Updates leave records for a specific employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: LeaveID\n          x-snake: leave_id\n          in: path\n          required: true\n          description: Leave id for single object\n          schema: \n            type: string\n            format: uuid\n            example: c4be24e5-e840-4c92-9eaa-2d86cd596314  \n      responses:\n        '200':\n          description: successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeLeaveObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-26T20:29:55.8432792\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"leave\": {\n                            \"leaveID\": \"82a04ba6-a5cc-4e7d-86d4-b9f381a494e8\",\n                            \"leaveTypeID\": \"b0b1b79e-2a25-46c2-ad08-ca25ef48d7e4\",\n                            \"description\": \"Creating a Description\",\n                            \"startDate\": \"2020-04-24T00:00:00\",\n                            \"endDate\": \"2020-04-26T00:00:00\",\n                            \"periods\": [\n                              {\n                                \"periodStartDate\": \"2020-04-20T00:00:00\",\n                                \"periodEndDate\": \"2020-04-26T00:00:00\",\n                                \"numberOfUnits\": 1,\n                                \"periodStatus\": \"Approved\"\n                              }\n                            ],\n                            \"updatedDateUTC\": \"2020-08-26T20:29:55.8854536\"\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmployeeLeave'\n            example: '{\n                        \"leaveTypeID\": \"b0b1b79e-2a25-46c2-ad08-ca25ef48d7e4\",\n                        \"description\": \"Creating a Description\",\n                        \"startDate\": \"2020-04-24\",\n                        \"endDate\": \"2020-04-26\",\n                        \"periods\": [\n                          {\n                            \"periodStartDate\": \"2020-04-20\",\n                            \"periodEndDate\": \"2020-04-26\",\n                            \"numberOfUnits\": 1,\n                            \"periodStatus\": \"Approved\"\n                          }\n                        ]\n                      }'\n    delete:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: deleteEmployeeLeave\n      x-hasPayrollUkProblem: true\n      summary: Deletes a leave record for a specific employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: LeaveID\n          x-snake: leave_id\n          in: path\n          required: true\n          description: Leave id for single object\n          schema: \n            type: string\n            format: uuid\n            example: c4be24e5-e840-4c92-9eaa-2d86cd596314  \n      responses:\n        '200':\n          description: successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeLeaveObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-26T22:11:10.809249\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null\n                        }'\n  /Employees/{EmployeeID}/LeaveBalances:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees, payroll.employees.read]\n      tags:\n        - PayrollNz\n      operationId: getEmployeeLeaveBalances\n      x-hasPayrollUkProblem: true\n      summary: Retrieves leave balances for a specific employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeLeaveBalances'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-26T22:26:48.0448356\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 4\n                          },\n                          \"problem\": null,\n                          \"leaveBalances\": [\n                            {\n                              \"name\": \"Holiday Pay\",\n                              \"leaveTypeID\": \"0441497f-5dc7-4cd3-a90d-f2e07e21b2a6\",\n                              \"balance\": 0,\n                              \"typeOfUnits\": \"Dollars\"\n                            },\n                            {\n                              \"name\": \"Annual Leave\",\n                              \"leaveTypeID\": \"b0b1b79e-2a25-46c2-ad08-ca25ef48d7e4\",\n                              \"balance\": 0,\n                              \"typeOfUnits\": \"Hours\"\n                            },\n                            {\n                              \"name\": \"Sick Leave\",\n                              \"leaveTypeID\": \"f2f994cf-1899-46f3-ad4f-5d92d78c3719\",\n                              \"balance\": 0,\n                              \"typeOfUnits\": \"Hours\"\n                            },\n                            {\n                              \"name\": \"Alternative Holidays\",\n                              \"leaveTypeID\": \"34129765-11cb-4d8c-b568-84a2219beda3\",\n                              \"balance\": 0,\n                              \"typeOfUnits\": \"Hours\"\n                            }\n                          ]\n                        }'\n  /Employees/{EmployeeID}/LeavePeriods:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees, payroll.employees.read]\n      tags:\n        - PayrollNz\n      operationId: getEmployeeLeavePeriods\n      x-hasPayrollUkProblem: true\n      summary: Retrieves leave periods for a specific employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - in: query\n          name: startDate\n          x-snake: start_date\n          description: Filter by start date\n          schema:\n            type: string\n            format: date\n        - in: query\n          name: endDate\n          x-snake: end_date\n          description: Filter by end date\n          schema:\n            type: string\n            format: date\n          example: Johnson\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeavePeriods'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T13:35:49.4407417\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"periods\": [\n                            {\n                              \"periodStartDate\": \"2020-02-24T00:00:00\",\n                              \"periodEndDate\": \"2020-03-01T00:00:00\",\n                              \"numberOfUnits\": 0,\n                              \"periodStatus\": null\n                            },\n                            {\n                              \"periodStartDate\": \"2020-03-02T00:00:00\",\n                              \"periodEndDate\": \"2020-03-08T00:00:00\",\n                              \"numberOfUnits\": 0,\n                              \"periodStatus\": null\n                            }\n                          ]\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n  /Employees/{EmployeeID}/leaveSetup:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    post:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: createEmployeeLeaveSetup\n      x-hasPayrollUkProblem: true\n      x-example:\n        - employeeLeaveSetup:\n          key: employeeLeaveSetup\n          keyPascal: EmployeeLeaveSetup\n          keySnake: employee_leave_setup\n          is_object: true\n        - includeHolidayPay:\n          key: includeHolidayPay\n          keyPascal: IncludeHolidayPay\n          keySnake: include_holiday_pay\n          nonString: true \n          default: false \n          object: employeeLeaveSetup\n        - holidayPayOpeningBalance:\n          key: holidayPayOpeningBalance\n          keyPascal: HolidayPayOpeningBalance\n          keySnake: holiday_pay_opening_balance\n          nonString: true \n          default: 10.50\n          is_money: true   \n          object: employeeLeaveSetup\n        - annualLeaveOpeningBalance:\n          key: annualLeaveOpeningBalance\n          keyPascal: AnnualLeaveOpeningBalance\n          keySnake: annual_leave_opening_balance\n          nonString: true \n          default: 25.89\n          is_money: true   \n          object: employeeLeaveSetup\n        - sickLeaveHoursToAccrueAnnually:\n          key: sickLeaveHoursToAccrueAnnually\n          keyPascal: SickLeaveHoursToAccrueAnnually\n          keySnake: sick_leave_hours_to_accrue_annually\n          nonString: true \n          default: 100.0\n          is_money: true \n          object: employeeLeaveSetup\n        - sickLeaveMaximumHoursToAccrue:\n          key: sickLeaveMaximumHoursToAccrue\n          keyPascal: SickLeaveMaximumHoursToAccrue\n          keySnake: sick_leave_maximum_hours_to_accrue\n          is_money: true\n          nonString: true\n          default: 200.0\n          object: employeeLeaveSetup\n        - sickLeaveOpeningBalance:\n          key: sickLeaveOpeningBalance\n          keyPascal: SickLeaveOpeningBalance\n          keySnake: sick_leave_opening_balance\n          is_money: true\n          nonString: true\n          default: 10.50\n          object: employeeLeaveSetup\n          is_last: true\n      summary: Creates a leave set-up for a specific employee. This is required before viewing, configuring and requesting leave for an employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeLeaveSetupObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-26T16:50:48.7245664\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"leaveSetup\": {\n                            \"includeHolidayPay\": null,\n                            \"holidayPayOpeningBalance\": 10,\n                            \"annualLeaveOpeningBalance\": 100,\n                            \"negativeAnnualLeaveBalancePaidAmount\": null,\n                            \"sickLeaveHoursToAccrueAnnually\": 20,\n                            \"sickLeaveMaximumHoursToAccrue\": null,\n                            \"sickLeaveOpeningBalance\": 10\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmployeeLeaveSetup'\n            example: '{\n                        \"holidayPayOpeningBalance\": 10,\n                        \"annualLeaveOpeningBalance\": 100,\n                        \"sickLeaveHoursToAccrueAnnually\": 20,\n                        \"sickLeaveOpeningBalance\": 10\n                      }'\n  /Employees/{EmployeeID}/LeaveTypes:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees, payroll.employees.read]\n      tags:\n        - PayrollNz\n      operationId: getEmployeeLeaveTypes\n      x-hasPayrollUkProblem: true\n      summary: Retrieves leave types for a specific employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeLeaveTypes'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T14:25:16.004485\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"leaveTypes\": [\n                            {\n                              \"leaveTypeID\": \"0441497f-5dc7-4cd3-a90d-f2e07e21b2a6\",\n                              \"scheduleOfAccrual\": \"PercentageOfGrossEarnings\",\n                              \"hoursAccruedAnnually\": 0,\n                              \"maximumToAccrue\": 0,\n                              \"openingBalance\": 0,\n                              \"rateAccruedHourly\": null,\n                              \"percentageOfGrossEarnings\": 8,\n                              \"includeHolidayPayEveryPay\": true,\n                              \"showAnnualLeaveInAdvance\": null,\n                              \"annualLeaveTotalAmountPaid\": null\n                            }\n                          ]\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n    post:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: createEmployeeLeaveType\n      x-hasPayrollUkProblem: true\n      summary: Creates leave type records for a specific employee\n      x-example:\n        - employeeLeaveType:\n          key: employeeLeaveType\n          keyPascal: EmployeeLeaveType\n          keySnake: employee_leave_type\n          is_object: true\n        - leaveTypeID:\n          key: leaveTypeID\n          keyPascal: LeaveTypeID\n          keySnake: leave_type_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: employeeLeaveType\n        - scheduleOfAccrual:\n          key: scheduleOfAccrual\n          keyPascal: ScheduleOfAccrual\n          keySnake: schedule_of_accrual\n          nonString: true \n          default: \"DeductionCategory.NzOther\"\n          php: XeroAPI\\XeroPHP\\Models\\PayrollNz\\EmployeeLeaveType\\ScheduleOfAccrualEnum.PercentageOfGrossEarnings\n          node: EmployeeLeaveType.ScheduleOfAccrualEnum.PercentageOfGrossEarnings\n          ruby: XeroRuby::PayrollNz::EmployeeLeaveType::schedule_of_accrual::PERCENTAGEOFGROSSEARNINGS\n          python: schedule_of_accrual::PERCENTAGEOFGROSSEARNINGS\n          java: com.xero.models.payrollnz.EmployeeLeaveType.ScheduleOfAccrualEnum.PercentageOfGrossEarnings\n          csharp: EmployeeLeaveType.ScheduleOfAccrualEnum.PercentageOfGrossEarnings\n          object: employeeLeaveType\n        - openingBalance:\n          key: openingBalance\n          keyPascal: OpeningBalance\n          keySnake: opening_balance\n          is_money: true\n          nonString: true \n          default: 5.25\n          object: employeeLeaveType\n          is_last: true\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeLeaveTypeObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T14:31:54.3370081\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"leaveType\": {\n                            \"leaveTypeID\": \"35da97ae-05b9-427f-9a98-69157ba42cec\",\n                            \"scheduleOfAccrual\": \"AnnuallyAfter6Months\",\n                            \"hoursAccruedAnnually\": 10,\n                            \"maximumToAccrue\": 80,\n                            \"openingBalance\": 100,\n                            \"rateAccruedHourly\": null,\n                            \"percentageOfGrossEarnings\": 0,\n                            \"includeHolidayPayEveryPay\": null,\n                            \"showAnnualLeaveInAdvance\": null,\n                            \"annualLeaveTotalAmountPaid\": null\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmployeeLeaveType'\n            example: '{\n                        \"leaveTypeID\": \"35da97ae-05b9-427f-9a98-69157ba42cec\",\n                        \"scheduleOfAccrual\": \"AnnuallyAfter6Months\",\n                        \"hoursAccruedAnnually\": 10,\n                        \"maximumToAccrue\": 80,\n                        \"openingBalance\": 100,\n                        \"rateAccruedHourly\": 3.5\n                      }'\n  /Employees/{EmployeeID}/PaymentMethods:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees, payroll.employees.read]\n      tags:\n        - PayrollNz\n      operationId: getEmployeePaymentMethod\n      x-hasPayrollUkProblem: true\n      summary: Retrieves available payment methods for a specific employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentMethodObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-26T23:34:53.6856317\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"paymentMethod\": {\n                            \"bankAccounts\": [\n                              {\n                                \"accountName\": \"Casual Worker\",\n                                \"accountNumber\": \"0607050201419000\",\n                                \"sortCode\": null,\n                                \"particulars\": null,\n                                \"code\": null,\n                                \"dollarAmount\": null,\n                                \"reference\": \"\",\n                                \"calculationType\": \"Balance\"\n                              }\n                            ]\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n    post:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: createEmployeePaymentMethod\n      x-hasPayrollUkProblem: true\n      x-example:\n        - bankAccount:\n          key: bankAccount\n          keyPascal: BankAccount\n          keySnake: bank_account\n          is_object: true\n        - accountName:\n          key: accountName\n          keyPascal: AccountName\n          keySnake: account_name\n          default: Charlotte Danes\n          object: bankAccount\n        - accountNumber:\n          key: accountNumber\n          keyPascal: AccountNumber\n          keySnake: account_number\n          nonString: true \n          default: 123456\n          object: bankAccount\n        - sortCode:\n          key: sortCode\n          keyPascal: SortCode\n          keySnake: sort_code\n          default: 123411\n          is_last: true \n          object: bankAccount\n        - bankAccounts:\n          is_list: true\n          key: bankAccounts\n          keyPascal: BankAccounts\n          keySnake: bank_accounts\n          csharp: BankAccount\n          java: BankAccount\n          object: bankAccount\n        - addBankAccount:\n          is_last: true\n          is_list_add: true\n          key: bankAccounts\n          keyPascal: BankAccounts\n          keySnake: bank_accounts\n          java: BankAccounts\n          python: bank_account\n          ruby: bank_account\n          csharp: BankAccount\n          object: bankAccount\n        - paymentMethod:\n          key: paymentMethod\n          keyPascal: PaymentMethod\n          keySnake: payment_method\n          is_object: true\n        - setBankAccount:\n          is_last: true\n          is_variable: true\n          nonString: true\n          key: bankAccounts\n          keyPascal: BankAccounts\n          default: bankAccounts\n          object: paymentMethod\n      summary: Creates a payment method for an employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentMethodObject'\n              example: ''\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentMethod'\n            example: ''\n  /Employees/{EmployeeID}/PayTemplates:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees, payroll.employees.read]\n      tags:\n        - PayrollNz\n      operationId: getEmployeePayTemplates\n      x-hasPayrollUkProblem: true\n      summary: Retrieves pay templates for a specific employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeePayTemplates'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T15:09:19.0627389\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 0,\n                            \"itemCount\": 0\n                          },\n                          \"problem\": null,\n                          \"payTemplate\": {\n                            \"employeeID\": \"68342973-c405-4b86-b5d3-d7b877c27995\",\n                            \"earningTemplates\": [\n                              {\n                                \"payTemplateEarningID\": \"1527cf6c-93db-41bf-aba2-9d6af1d3c499\",\n                                \"ratePerUnit\": 20,\n                                \"numberOfUnits\": 8,\n                                \"fixedAmount\": null,\n                                \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"name\": \"Ordinary Time\"\n                              }\n                            ]\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n  /Employees/{EmployeeID}/PayTemplates/earnings:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    post:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: createEmployeeEarningsTemplate\n      x-hasPayrollUkProblem: true\n      x-example:\n        - earningsTemplate:\n          key: earningsTemplate\n          keyPascal: EarningsTemplate\n          keySnake: earnings_template\n          is_object: true\n        - payTemplateEarningID:\n          key: payTemplateEarningID\n          keyPascal: PayTemplateEarningID\n          keySnake: pay_template_earning_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: earningsTemplate\n        - ratePerUnit:\n          key: ratePerUnit\n          keyPascal: RatePerUnit\n          keySnake: rate_per_unit\n          nonString: true \n          default: 14.25\n          object: earningsTemplate\n          is_money: true \n        - numberOfUnits:\n          key: numberOfUnits\n          keyPascal: NumberOfUnits\n          keySnake: number_of_units\n          default: 35.50\n          nonString: true \n          is_money: true \n          object: earningsTemplate\n        - fixedAmount:\n          key: fixedAmount\n          keyPascal: FixedAmount\n          keySnake: fixed_amount\n          default: 50\n          nonString: true \n          object: earningsTemplate\n        - earningsRateId:\n          key: earningsRateID\n          keyPascal: EarningsRateID\n          keySnake: earnings_rate_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: earningsTemplate\n        - name:\n          key: name\n          keyPascal: Name\n          keySnake: name\n          default: Overtime Hours\n          object: earningsTemplate\n          is_last: true\n        - earningsTemplates:\n          is_list: true\n          key: earningsTemplates\n          keyPascal: EarningsTemplates\n          keySnake: earnings_templates\n          csharp: EarningsTemplate\n          java: EarningsTemplate\n        - addEarningsTemplate:\n          is_last: true\n          is_list_add: true\n          key: earningsTemplates\n          keyPascal: EarningsTemplates\n          keySnake: earnings_templates\n          java: EarningsTemplates\n          python: earnings_template\n          ruby: earnings_template\n          csharp: EarningsTemplate\n          object: earningsTemplate\n      summary: Creates earnings template records for an employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsTemplateObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T14:48:24.6032145\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"earningTemplate\": {\n                            \"payTemplateEarningID\": \"11b4e492-5d56-4eac-a9ce-687d7b9a4a84\",\n                            \"ratePerUnit\": 20,\n                            \"numberOfUnits\": 8,\n                            \"fixedAmount\": null,\n                            \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                            \"name\": \"Ordinary Time\"\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EarningsTemplate'\n            example: '{\n                        \"ratePerUnit\": 20,\n                        \"numberOfUnits\": 8,\n                        \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                        \"name\": \"My New One\"\n                      }'\n  /Employees/{EmployeeID}/PayTemplates/earnings/{PayTemplateEarningID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    put:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: updateEmployeeEarningsTemplate\n      x-hasPayrollUkProblem: true\n      x-example:\n        - earningsTemplate:\n          key: earningsTemplate\n          keyPascal: EarningsTemplate\n          keySnake: earnings_template\n          is_object: true\n        - payTemplateEarningID:\n          key: payTemplateEarningID\n          keyPascal: PayTemplateEarningID\n          keySnake: pay_template_earning_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: earningsTemplate\n        - ratePerUnit:\n          key: ratePerUnit\n          keyPascal: RatePerUnit\n          keySnake: rate_per_unit\n          nonString: true \n          default: 14.25\n          object: earningsTemplate\n          is_money: true \n        - numberOfUnits:\n          key: numberOfUnits\n          keyPascal: NumberOfUnits\n          keySnake: number_of_units\n          default: 35.50\n          nonString: true \n          is_money: true \n          object: earningsTemplate\n        - fixedAmount:\n          key: fixedAmount\n          keyPascal: FixedAmount\n          keySnake: fixed_amount\n          default: 50\n          nonString: true \n          object: earningsTemplate\n        - earningsRateId:\n          key: earningsRateID\n          keyPascal: EarningsRateID\n          keySnake: earnings_rate_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: earningsTemplate\n        - name:\n          key: name\n          keyPascal: Name\n          keySnake: name\n          default: Overtime Hours\n          object: earningsTemplate\n          is_last: true\n        - earningsTemplates:\n          is_list: true\n          key: earningsTemplates\n          keyPascal: EarningsTemplates\n          keySnake: earnings_templates\n          csharp: EarningsTemplate\n          java: EarningsTemplate\n        - addEarningsTemplate:\n          is_last: true\n          is_list_add: true\n          key: earningsTemplates\n          keyPascal: EarningsTemplates\n          keySnake: earnings_templates\n          java: EarningsTemplates\n          python: earnings_template\n          ruby: earnings_template\n          csharp: EarningsTemplate\n          object: earningsTemplate\n      summary: Updates an earnings template records for an employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: PayTemplateEarningID\n          x-snake: pay_template_earning_id\n          in: path\n          required: true\n          description:  Id for single pay template earnings object\n          schema: \n            type: string\n            format: uuid\n            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsTemplateObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T18:54:08.6524341\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"earningTemplate\": {\n                            \"payTemplateEarningID\": \"1527cf6c-93db-41bf-aba2-9d6af1d3c499\",\n                            \"ratePerUnit\": 25,\n                            \"numberOfUnits\": 4,\n                            \"fixedAmount\": null,\n                            \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                            \"name\": \"Ordinary Time\"\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EarningsTemplate'\n            example: '{\n                        \"ratePerUnit\": 25,\n                        \"numberOfUnits\": 4,\n                        \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\"\n                      }'\n    delete:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: deleteEmployeeEarningsTemplate\n      summary: Deletes an employee's earnings template record\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: PayTemplateEarningID\n          x-snake: pay_template_earning_id\n          in: path\n          required: true\n          description:  Id for single pay template earnings object\n          schema: \n            type: string\n            format: uuid\n            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        '200':\n          description: deletion successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsTemplateObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T18:54:09.1368544\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null\n                        }'\n  /Employees/{EmployeeID}/paytemplateearnings:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    post:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: createMultipleEmployeeEarningsTemplate\n      x-hasPayrollUkProblem: true\n      x-example:\n        - earningsTemplate:\n          key: earningsTemplate\n          keyPascal: EarningsTemplate\n          keySnake: earnings_template\n          is_object: true\n        - payTemplateEarningID:\n          key: payTemplateEarningID\n          keyPascal: PayTemplateEarningID\n          keySnake: pay_template_earning_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: earningsTemplate\n        - ratePerUnit:\n          key: ratePerUnit\n          keyPascal: RatePerUnit\n          keySnake: rate_per_unit\n          nonString: true \n          default: 14.25\n          object: earningsTemplate\n          is_money: true \n        - numberOfUnits:\n          key: numberOfUnits\n          keyPascal: NumberOfUnits\n          keySnake: number_of_units\n          default: 35.50\n          nonString: true \n          is_money: true \n          object: earningsTemplate\n        - fixedAmount:\n          key: fixedAmount\n          keyPascal: FixedAmount\n          keySnake: fixed_amount\n          default: 50\n          nonString: true \n          object: earningsTemplate\n        - earningsRateId:\n          key: earningsRateID\n          keyPascal: EarningsRateID\n          keySnake: earnings_rate_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: earningsTemplate\n        - name:\n          key: name\n          keyPascal: Name\n          keySnake: name\n          default: Overtime Hours\n          object: earningsTemplate\n          is_last: true\n        - earningsTemplates:\n          is_list: true\n          key: earningsTemplates\n          keyPascal: EarningsTemplates\n          keySnake: earnings_templates\n          csharp: EarningsTemplate\n          java: EarningsTemplate\n        - addEarningsTemplate:\n          is_last: true\n          is_list_add: true\n          key: earningsTemplates\n          keyPascal: EarningsTemplates\n          keySnake: earnings_templates\n          java: EarningsTemplates\n          python: earnings_template\n          ruby: earnings_template\n          csharp: EarningsTemplate\n          object: earningsTemplate\n      summary: Creates multiple employee earnings template records for a specific employee\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeEarningsTemplates'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T15:01:52.9369043\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"earningTemplates\": [\n                            {\n                              \"payTemplateEarningID\": \"1527cf6c-93db-41bf-aba2-9d6af1d3c499\",\n                              \"ratePerUnit\": 20,\n                              \"numberOfUnits\": 8,\n                              \"fixedAmount\": null,\n                              \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                              \"name\": \"Ordinary Time\"\n                            },\n                            {\n                              \"payTemplateEarningID\": \"92e757cc-b026-404d-804e-9dc2047a03e6\",\n                              \"ratePerUnit\": 0,\n                              \"numberOfUnits\": 8,\n                              \"fixedAmount\": null,\n                              \"earningsRateID\": \"65b83d94-f20f-45e1-85ae-387fcf460c26\",\n                              \"name\": \"Salary\"\n                            }\n                          ]\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EarningsTemplates'\n            example: '[{\"ratePerUnit\":20.0,\"numberOfUnits\":8.0,\"earningsRateID\":\"f9d8f5b5-9049-47f4-8541-35e200f750a5\"},{\"ratePerUnit\":0.0,\"numberOfUnits\":8.0,\"earningsRateID\":\"65b83d94-f20f-45e1-85ae-387fcf460c26\"}]'\n  /Deductions:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings, payroll.settings.read]\n      tags:\n        - PayrollNz\n      operationId: getDeductions\n      x-hasPayrollUkProblem: true\n      summary: Retrieves deductions for a specific employee\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Deductions'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T20:43:53.931198\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 4\n                          },\n                          \"problem\": null,\n                          \"deductions\": [\n                            {\n                              \"deductionId\": \"a3760fe4-68a4-4e38-8326-fe616af7dc74\",\n                              \"deductionName\": \"KiwiSaver Voluntary Contributions\",\n                              \"deductionCategory\": \"KiwiSaverVoluntaryContributions\",\n                              \"liabilityAccountId\": \"26c57f04-0436-40cc-9cd9-1a21185d88bb\",\n                              \"currentRecord\": true,\n                              \"standardAmount\": null\n                            },\n                            {\n                              \"deductionId\": \"a131596e-2f83-4f6c-9573-99c4cbfcefd1\",\n                              \"deductionName\": \"Rent\",\n                              \"deductionCategory\": \"NzOther\",\n                              \"liabilityAccountId\": \"26c57f04-0436-40cc-9cd9-1a21185d88bb\",\n                              \"currentRecord\": true,\n                              \"standardAmount\": 200\n                            }\n                          ]\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.settings]\n      tags:\n        - PayrollNz\n      operationId: createDeduction\n      x-hasPayrollUkProblem: true\n      x-example:\n        - deduction:\n          key: deduction\n          keyPascal: Deduction\n          keySnake: deduction\n          is_object: true \n        - deductionName:\n          key: deductionName\n          keyPascal: DeductionName\n          keySnake: deduction_name\n          default: Deduction test\n          object: deduction\n        - deductionCategory:\n          key: deductionCategory\n          keyPascal: DeductionCategory\n          keySnake: deduction_category\n          nonString: true \n          default: \"DeductionCategory.NzOther\"\n          php: XeroAPI\\XeroPHP\\Models\\PayrollNz\\Deduction\\DEDUCTION_CATEGORY_NZ_OTHER\n          node: Deduction.DeductionCategoryEnum.NzOther\n          ruby: XeroRuby::PayrollNz::Deduction::deduction_category::NZ_OTHER\n          python: deduction_category.NzOther\n          java: com.xero.models.payrollnz.Deduction.DeductionCategoryEnum.NZOTHER\n          csharp: Deduction.DeductionCategoryEnum.NzOther\n          object: deduction\n        - liabilityAccountId:\n          is_uuid: true \n          key: liabilityAccountId\n          keyPascal: LiabilityAccountId\n          keySnake: liability_account_id\n          default: 00000000-0000-0000-0000-000000000000\n          object: deduction\n          is_last: true \n      summary: Creates a new deduction for a specific employee\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeductionObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T20:43:54.9563295\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"deduction\": {\n                            \"deductionId\": \"0ee805eb-f5b0-4061-9b35-d9ea550da04e\",\n                            \"deductionName\": \"My new deduction\",\n                            \"deductionCategory\": \"NzOther\",\n                            \"liabilityAccountId\": \"568f2e9a-0870-46cc-8678-f83f132ed4e3\",\n                            \"currentRecord\": true,\n                            \"standardAmount\": null\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Deduction'\n            example: '{\n                        \"deductionName\": \"My new deduction\",\n                        \"deductionCategory\": \"NzOther\",\n                        \"liabilityAccountId\": \"568f2e9a-0870-46cc-8678-f83f132ed4e3\"\n                      }'\n  /Deductions/{deductionId}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings, payroll.settings.read]\n      tags:\n        - PayrollNz\n      operationId: getDeduction\n      x-hasPayrollUkProblem: true\n      summary: Retrieves a single deduction by using a unique deduction ID\n      parameters:\n        - in: path\n          name: deductionId\n          x-snake: deduction_id\n          required: true\n          description: Identifier for the deduction\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeductionObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T20:43:54.846821\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"deduction\": {\n                            \"deductionId\": \"a3760fe4-68a4-4e38-8326-fe616af7dc74\",\n                            \"deductionName\": \"KiwiSaver Voluntary Contributions\",\n                            \"deductionCategory\": \"KiwiSaverVoluntaryContributions\",\n                            \"liabilityAccountId\": \"26c57f04-0436-40cc-9cd9-1a21185d88bb\",\n                            \"currentRecord\": true,\n                            \"standardAmount\": null\n                          }\n                        }'\n  /StatutoryDeductions:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings, payroll.settings.read]\n      tags:\n        - PayrollNz\n      operationId: getStatutoryDeductions\n      summary: Retrieves statutory deductions\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatutoryDeductions'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T23:46:21.0212854\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 8\n                          },\n                          \"problem\": null,\n                          \"statutoryDeductions\": [\n                            {\n                              \"id\": \"00000000-0000-0000-0000-000000000000\",\n                              \"name\": \"Child Support\",\n                              \"liabilityAccountId\": \"fa5cdc43-643b-4ad8-b4ac-3ffe0d0f4488\",\n                              \"statutoryDeductionCategory\": \"ChildSupport\",\n                              \"currentRecord\": true\n                            },\n                            {\n                              \"id\": \"00000000-0000-0000-0000-000000000000\",\n                              \"name\": \"Student Loan\",\n                              \"liabilityAccountId\": \"fa5cdc43-643b-4ad8-b4ac-3ffe0d0f4488\",\n                              \"statutoryDeductionCategory\": \"StudentLoan\",\n                              \"currentRecord\": true\n                            }\n                          ]\n                        }'\n  /StatutoryDeductions/{id}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings, payroll.settings.read]\n      tags:\n        - PayrollNz\n      operationId: getStatutoryDeduction\n      summary: Retrieves a specific statutory deduction by using a unique statutory deductions id\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: Identifier for the statutory deduction\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatutoryDeductionObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T00:01:57.6562992\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"statutoryDeduction\": {\n                            \"id\": \"00000000-0000-0000-0000-000000000000\",\n                            \"name\": \"Child Support\",\n                            \"liabilityAccountId\": \"fa5cdc43-643b-4ad8-b4ac-3ffe0d0f4488\",\n                            \"statutoryDeductionCategory\": \"ChildSupport\",\n                            \"currentRecord\": true\n                          }\n                        }'\n  /Superannuations:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings, payroll.settings.read]\n      tags:\n        - PayrollNz\n      operationId: getSuperannuations\n      summary: Retrieves superannuations\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Superannuations'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-09-14T22:35:14.6806088\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 2\n                          },\n                          \"problem\": null,\n                          \"benefits\": [\n                            {\n                              \"id\": \"00000000-0000-0000-0000-000000000000\",\n                              \"name\": \"KiwiSaver\",\n                              \"category\": \"KiwiSaver\",\n                              \"liabilityAccountId\": \"fa5cdc43-643b-4ad8-b4ac-3ffe0d0f4488\",\n                              \"expenseAccountId\": \"b343c3b0-5941-4166-82b4-dd926622e0e2\",\n                              \"standardAmount\": null,\n                              \"percentage\": 3,\n                              \"calculationTypeNZ\": \"PercentageOfTaxableEarnings\",\n                              \"currentRecord\": true,\n                              \"companyMax\": null\n                            },\n                            {\n                              \"id\": \"00000000-0000-0000-0000-000000000000\",\n                              \"name\": \"SidSaver\",\n                              \"category\": \"Other\",\n                              \"liabilityAccountId\": \"568f2e9a-0870-46cc-8678-f83f132ed4e3\",\n                              \"expenseAccountId\": \"e4eb36f6-97e3-4427-a394-dd4e1b355c2e\",\n                              \"standardAmount\": 10,\n                              \"percentage\": null,\n                              \"calculationTypeNZ\": \"FixedAmount\",\n                              \"currentRecord\": true,\n                              \"companyMax\": null\n                            }\n                          ]\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.settings]\n      tags:\n        - PayrollNz\n      operationId: createSuperannuation\n      x-hasPayrollUkProblem: true\n      x-example:\n        - benefit:\n          key: benefit\n          keyPascal: Benefit\n          keySnake: benefit\n          is_object: true\n        - category:\n          key: category\n          keyPascal: Category\n          keySnake: category\n          php: XeroAPI\\XeroPHP\\Models\\PayrollNz\\Benefit\\CategoryEnum.ComplyingFund\n          node: Benefit.CategoryEnum.ComplyingFund\n          ruby: XeroRuby::PayrollNz::Benefit::CategoryEnum::COMPLYINGFUND\n          python_string: COMPLYINGFUND\n          java: com.xero.models.payrollnz.Benefit.CategoryEnum.ComplyingFund\n          csharp: Benefit.CategoryEnum.ComplyingFund\n          default: ComplyingFund\n          nonString: true \n          object: benefit\n        - caluclationTypeNZ:\n          key: calculationTypeNZ\n          keyPascal: CalculationTypeNZ\n          keySnake: calculation_type_nz\n          php: XeroAPI\\XeroPHP\\Models\\PayrollNz\\Benefit\\CalculationTypeNZ.PercentageOfTaxableEarnings\n          node: Benefit.CalculationTypeNZ.PercentageOfTaxableEarnings\n          ruby: XeroRuby::PayrollNz::Benefit::CalculationTypeNZ::PERCENTAGEOFTAXABLEEARNINGS\n          python_string: PERCENTAGEOFTAXABLEEARNINGS\n          java: com.xero.models.payrollnz.Benefit.CalculationTypeNZ.PercentageOfTaxableEarnings\n          csharp: Benefit.CalculationTypeNZ.PercentageOfTaxableEarnings\n          default: PercentageOfTaxableEarnings\n          nonString: true \n          object: benefit\n        - liabilityAccountId:\n          key: liabilityAccountId\n          keyPascal: LiabilityAccountId\n          keySnake: liability_account_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: benefit\n        - expenseAccountId:\n          key: expenseAccountId\n          keyPascal: ExpenseAccountId\n          keySnake: expense_account_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: benefit\n        - percentage:\n          key: percentage\n          keyPascal: Percentage\n          keySnake: percentage\n          default: 3\n          object: benefit\n          nonString: true \n        - standardAmount:\n          key: standardAmount\n          keyPascal: StandardAmount\n          keySnake: standard_amount\n          default: 100\n          nonString: true \n          object: benefit\n          is_last: true\n      summary: Creates a new superannuation\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuperannuationObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-09-11T00:36:31.7680431\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"benefit\": {\n                            \"id\": \"00000000-0000-0000-0000-000000000000\",\n                            \"name\": \"SidSaver\",\n                            \"category\": \"Other\",\n                            \"liabilityAccountId\": \"568f2e9a-0870-46cc-8678-f83f132ed4e3\",\n                            \"expenseAccountId\": \"e4eb36f6-97e3-4427-a394-dd4e1b355c2e\",\n                            \"standardAmount\": 10,\n                            \"percentage\": null,\n                            \"calculationTypeNZ\": \"FixedAmount\",\n                            \"currentRecord\": true,\n                            \"companyMax\": null\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Benefit'\n            example: '{\n                        \"name\": \"SidSaver\",\n                        \"category\": \"Other\",\n                        \"liabilityAccountId\": \"568f2e9a-0870-46cc-8678-f83f132ed4e3\",\n                        \"expenseAccountId\": \"e4eb36f6-97e3-4427-a394-dd4e1b355c2e\",\n                        \"CalculationTypeNZ\": \"FixedAmount\",\n                        \"standardAmount\": 10\n                      }'\n  /Superannuations/{SuperannuationID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings, payroll.settings.read]\n      tags:\n        - PayrollNz\n      operationId: getSuperannuation\n      summary: Retrieves a specific superannuation using a unique superannuation ID\n      parameters:\n        - in: path\n          name: SuperannuationID\n          x-snake: superannuation_id\n          required: true\n          description: Identifier for the superannuation\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuperannuationObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-09-11T00:36:29.5745157\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"benefit\": {\n                            \"id\": \"00000000-0000-0000-0000-000000000000\",\n                            \"name\": \"KiwiSaver\",\n                            \"category\": \"KiwiSaver\",\n                            \"liabilityAccountId\": \"fa5cdc43-643b-4ad8-b4ac-3ffe0d0f4488\",\n                            \"expenseAccountId\": \"b343c3b0-5941-4166-82b4-dd926622e0e2\",\n                            \"standardAmount\": null,\n                            \"percentage\": 3,\n                            \"calculationTypeNZ\": \"PercentageOfTaxableEarnings\",\n                            \"currentRecord\": true,\n                            \"companyMax\": null\n                          }\n                        }'\n  /EarningsRates:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings, payroll.settings.read]\n      tags:\n        - PayrollNz\n      operationId: getEarningsRates\n      x-hasPayrollUkProblem: true\n      summary: Retrieves earnings rates\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsRates'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T18:25:57.0647738\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 15\n                          },\n                          \"problem\": null,\n                          \"earningsRates\": [\n                            {\n                              \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                              \"name\": \"Ordinary Time\",\n                              \"earningsType\": \"RegularEarnings\",\n                              \"rateType\": \"RatePerUnit\",\n                              \"typeOfUnits\": \"hours\",\n                              \"currentRecord\": true,\n                              \"expenseAccountID\": \"1c91e520-a12b-45cc-8194-99950858e5bf\",\n                              \"fixedAmount\": null,\n                              \"ratePerUnit\": null,\n                              \"multipleOfOrdinaryEarningsRate\": null\n                            },\n                            {\n                              \"earningsRateID\": \"31407b3e-0967-4ae0-a7f1-3df4e6481a2e\",\n                              \"name\": \"ACC (First Week)\",\n                              \"earningsType\": \"OtherGrossEarnings\",\n                              \"rateType\": \"MultipleOfOrdinaryEarningsRate\",\n                              \"typeOfUnits\": \"hours\",\n                              \"currentRecord\": true,\n                              \"expenseAccountID\": \"1c91e520-a12b-45cc-8194-99950858e5bf\",\n                              \"fixedAmount\": null,\n                              \"ratePerUnit\": null,\n                              \"multipleOfOrdinaryEarningsRate\": 0.8\n                            },\n                            {\n                              \"earningsRateID\": \"6e5a4cf2-aa38-4558-a46e-f6998dad239b\",\n                              \"name\": \"Directors Fees\",\n                              \"earningsType\": \"WithholdingIncome\",\n                              \"rateType\": \"FixedAmount\",\n                              \"typeOfUnits\": null,\n                              \"currentRecord\": true,\n                              \"expenseAccountID\": \"1c91e520-a12b-45cc-8194-99950858e5bf\",\n                              \"fixedAmount\": 1000,\n                              \"ratePerUnit\": null,\n                              \"multipleOfOrdinaryEarningsRate\": null\n                            }\n                          ]\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.settings]\n      tags:\n        - PayrollNz\n      operationId: createEarningsRate\n      x-hasPayrollUkProblem: true  \n      x-example:\n      - earningsRate:\n        key: earningsRate\n        keyPascal: EarningsRate\n        keySnake: earnings_rate\n        is_object: true\n      - earningsType:\n        key: earningsType\n        keyPascal: EarningsType\n        keySnake: earnings_type\n        php: XeroAPI\\XeroPHP\\Models\\PayrollNz\\EarningsRate\\EarningsTypeEnum.RegularEarnings\n        node: EarningsRate.EarningsTypeEnum.REGULAREARNINGS\n        ruby: XeroRuby::PayrollNz::EarningsRate::EarningsTypeEnum::REGULAREARNINGS\n        python_string: REGULAREARNINGS\n        java: com.xero.models.payrollnz.EarningsRate.EarningsTypeEnum.RegularEarnings\n        csharp: EarningsRate.EarningsTypeEnum.RegularEarnings\n        default: RegularEarnings\n        nonString: true \n        object: earningsRate\n      - rateType:\n        key: rateType\n        keyPascal: RateType\n        keySnake: rate_type\n        php: XeroAPI\\XeroPHP\\Models\\PayrollNz\\EarningsRate\\RateTypeEnum.RatePerUnit\n        node: EarningsRate.RateTypeEnum.RatePerUnit\n        ruby: XeroRuby::PayrollNz::EarningsRate::RateTypeEnum::ACCPAYCREDIT\n        python_string: RATEPERUNIT\n        java: com.xero.models.payrollnz.EarningsRate.RateTypeEnum.RATEPERUNIT\n        csharp: EarningsRate.RateTypeEnum.RatePerUnit\n        default: RatePerUnit\n        object: earningsRate\n        nonString: true \n      - expenseAccountId:\n        key: expenseAccountID\n        keyPascal: ExpenseAccountID\n        keySnake: expense_account_ID\n        is_uuid: true\n        default: \"00000000-0000-0000-0000-000000000000\" \n        object: earningsRate\n        is_last: true\n      summary: Creates a new earnings rate\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsRateObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T18:25:57.8141393\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"earningsRate\": {\n                            \"earningsRateID\": \"4369b0ef-a64d-42e1-bb6d-f2fc984de133\",\n                            \"name\": \"My Earnings Rate\",\n                            \"earningsType\": \"RegularEarnings\",\n                            \"rateType\": \"RatePerUnit\",\n                            \"typeOfUnits\": \"hours\",\n                            \"currentRecord\": true,\n                            \"expenseAccountID\": \"e4eb36f6-97e3-4427-a394-dd4e1b355c2e\",\n                            \"fixedAmount\": null,\n                            \"ratePerUnit\": null,\n                            \"multipleOfOrdinaryEarningsRate\": null\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EarningsRate'\n            example: '{\n                        \"name\": \"My Earnings Rate\",\n                        \"earningsType\": \"RegularEarnings\",\n                        \"rateType\": \"RatePerUnit\",\n                        \"typeOfUnits\": \"hours\",\n                        \"expenseAccountID\": \"e4eb36f6-97e3-4427-a394-dd4e1b355c2e\"\n                      }'\n  /EarningsRates/{EarningsRateID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings, payroll.settings.read]\n      tags:\n        - PayrollNz\n      operationId: getEarningsRate\n      x-hasPayrollUkProblem: true\n      summary: Retrieves a specific earnings rates by using a unique earnings rate id\n      parameters:\n        - in: path\n          name: EarningsRateID\n          x-snake: earnings_rate_id\n          required: true\n          description: Identifier for the earnings rate\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsRateObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T18:25:57.8191994\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"earningsRate\": {\n                            \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                            \"name\": \"Ordinary Time\",\n                            \"earningsType\": \"RegularEarnings\",\n                            \"rateType\": \"RatePerUnit\",\n                            \"typeOfUnits\": \"hours\",\n                            \"currentRecord\": true,\n                            \"expenseAccountID\": \"1c91e520-a12b-45cc-8194-99950858e5bf\",\n                            \"fixedAmount\": null,\n                            \"ratePerUnit\": null,\n                            \"multipleOfOrdinaryEarningsRate\": null\n                          }\n                        }'\n  /LeaveTypes:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings, payroll.settings.read]\n      tags:\n        - PayrollNz\n      operationId: getLeaveTypes\n      x-hasPayrollUkProblem: true\n      summary: Retrieves leave types\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n        - in: query\n          name: ActiveOnly\n          x-snake: active_only\n          description: Filters leave types by active status. By default the API returns all leave types.\n          example: true\n          x-example-python: \"True\"\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeaveTypes'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T20:49:58.4095603\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 15\n                          },\n                          \"problem\": null,\n                          \"leaveTypes\": [\n                            {\n                              \"leaveTypeID\": \"b0b1b79e-2a25-46c2-ad08-ca25ef48d7e4\",\n                              \"name\": \"Annual Leave\",\n                              \"isPaidLeave\": true,\n                              \"showOnPayslip\": true,\n                              \"updatedDateUTC\": \"2019-09-22T23:09:32\",\n                              \"isActive\": true\n                            },\n                            {\n                              \"leaveTypeID\": \"71b548db-6e40-4b64-be8b-f6a71455d8ab\",\n                              \"name\": \"Annual Leave - Cash Up\",\n                              \"isPaidLeave\": true,\n                              \"showOnPayslip\": true,\n                              \"updatedDateUTC\": \"2019-09-22T23:09:32\",\n                              \"isActive\": true\n                            }\n                          ]\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.settings]\n      tags:\n        - PayrollNz\n      operationId: createLeaveType\n      x-hasPayrollUkProblem: true\n      x-example:\n        - leaveType:\n          key: leaveType\n          keyPascal: LeaveType\n          keySnake: leave_type\n          is_object: true\n        - name:\n          key: name\n          keyPascal: Name\n          keySnake: name\n          object: leaveType\n          default: LeaveType\n        - isPaidLeave:\n          key: isPaidLeave\n          keyPascal: IsPaidLeave\n          keySnake: is_paid_leave\n          nonString: true \n          object: leaveType\n          default: true \n        - showOnPayslip:\n          key: showOnPayslip\n          keyPascal: ShowOnPayslip\n          keySnake: show_on_payslip\n          nonString: true  \n          object: leaveType\n          default: true \n          is_last: true\n      summary: Creates a new leave type\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeaveTypeObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T20:49:59.9135451\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"leaveType\": {\n                            \"leaveTypeID\": \"80464f55-b5c9-4d05-84c7-219d98baa3e2\",\n                            \"name\": \"My wqwhhiktun Leave\",\n                            \"isPaidLeave\": false,\n                            \"showOnPayslip\": true,\n                            \"updatedDateUTC\": \"2020-08-27T20:49:59.8315619\",\n                            \"isActive\": true\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LeaveType'\n            example: '{\n                        \"name\": \"My wqwhhiktun Leave\",\n                        \"isPaidLeave\": false,\n                        \"showOnPayslip\": true\n                      }'\n  /LeaveTypes/{LeaveTypeID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings, payroll.settings.read]\n      tags:\n        - PayrollNz\n      operationId: getLeaveType\n      x-hasPayrollUkProblem: true\n      summary: Retrieves a specific leave type by using a unique leave type ID\n      parameters:\n        - in: path\n          name: LeaveTypeID\n          x-snake: leave_type_id\n          required: true\n          description: Identifier for the leave type\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeaveTypeObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T20:49:58.7293665\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"leaveType\": {\n                            \"leaveTypeID\": \"b0b1b79e-2a25-46c2-ad08-ca25ef48d7e4\",\n                            \"name\": \"Annual Leave\",\n                            \"isPaidLeave\": true,\n                            \"showOnPayslip\": true,\n                            \"updatedDateUTC\": \"2019-09-22T23:09:32\",\n                            \"isActive\": true\n                          }\n                        }'\n  /Reimbursements:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings, payroll.settings.read]\n      tags:\n        - PayrollNz\n      operationId: getReimbursements\n      x-hasPayrollUkProblem: true\n      summary: Retrieves reimbursements\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Reimbursements'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T21:59:44.5592312\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 3\n                          },\n                          \"problem\": null,\n                          \"reimbursements\": [\n                            {\n                              \"reimbursementID\": \"ddf9b572-5861-4f97-a109-9d612df52242\",\n                              \"name\": \"Mileage\",\n                              \"accountID\": \"36d33c5d-7dea-4911-9ed0-7fccc16f2b5f\",\n                              \"currentRecord\": true,\n                              \"standardAmount\": null,\n                              \"standardTypeOfUnits\": \"km\",\n                              \"standardRatePerUnit\": 0.79,\n                              \"reimbursementCategory\": \"NoGST\",\n                              \"calculationType\": \"RatePerUnit\"\n                            }\n                          ]\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.settings]\n      tags:\n        - PayrollNz\n      operationId: createReimbursement\n      x-hasPayrollUkProblem: true\n      x-example:\n        - reimbursement:\n          key: reimbursement\n          keyPascal: Reimbursement\n          keySnake: reimbursement\n          is_object: true\n        - name:\n          key: name\n          keyPascal: Name\n          keySnake: name\n          default: Test Reimbursement\n          object: reimbursement\n        - accountID:\n          key: accountID\n          keyPascal: AccountID\n          keySnake: account_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: reimbursement\n          is_last: true\n        - calculationType:\n          key: calculationType\n          keyPascal: CalculationType\n          keySnake: calculation_type\n          nonString: true \n          default: Reimbursement.CalculationTypeEnum.FixedAmount\n          php: XeroAPI\\XeroPHP\\Models\\PayrollNz\\Reimbursement\\CalculationTypeEnum.FIXEDAMOUNT\n          node: Reimbursement.CalculationTypeEnum.FixedAmount\n          ruby: XeroRuby::PayrollNz::Reimbursement::calculation_type_enum::FIXEDAMOUNT\n          python: calculation_type_enum.FixedAmount\n          java: com.xero.models.payrollnz.Reimbursement.CalculationTypeEnum.FIXEDAMOUNT\n          csharp: Reimbursement.CalculationTypeEnum.FixedAmount\n          object: reimbursement\n        - reimbursementCategory:\n          key: reimbursementCategory\n          keyPascal: ReimbursementCategory\n          keySnake: reimbursement_category\n          nonString: true \n          default: Reimbursement.ReimbursementCategoryEnum.GST\n          php: XeroAPI\\XeroPHP\\Models\\PayrollNz\\Reimbursement\\ReimbursementCategoryEnum.GST\n          node: Reimbursement.ReimbursementCategoryEnum.GST\n          ruby: XeroRuby::PayrollNz::Reimbursement::reimbursement_category_enum::GST\n          python: reimbursement_category_enum.GST\n          java: com.xero.models.payrollnz.Reimbursement.ReimbursementCategoryEnum.GST\n          csharp: Reimbursement.ReimbursementCategoryEnum.GST\n          object: reimbursement\n          is_last: true\n      summary: Creates a new reimbursement\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReimbursementObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T23:25:30.5238274\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"reimbursement\": {\n                            \"reimbursementID\": \"c7a8e7fd-b4f1-4f7b-9256-1b3edaa72de7\",\n                            \"name\": \"My new Reimburse\",\n                            \"accountID\": \"fa5cdc43-643b-4ad8-b4ac-3ffe0d0f4488\",\n                            \"currentRecord\": true,\n                            \"standardAmount\": null,\n                            \"standardTypeOfUnits\": null,\n                            \"standardRatePerUnit\": null,\n                            \"reimbursementCategory\": \"GSTInclusive\",\n                            \"calculationType\": \"FixedAmount\"\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Reimbursement'\n            example: '{\n                        \"name\": \"My new Reimburse\",\n                        \"accountID\": \"fa5cdc43-643b-4ad8-b4ac-3ffe0d0f4488\",\n                        \"reimbursementCategory\": \"GSTInclusive\",\n                        \"calculationType\": \"FixedAmount\"\n                      }'\n  /Reimbursements/{ReimbursementID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings, payroll.settings.read]\n      tags:\n        - PayrollNz\n      operationId: getReimbursement\n      x-hasPayrollUkProblem: true\n      summary: Retrieves a specific reimbursement by using a unique reimbursement ID\n      parameters:\n        - in: path\n          name: ReimbursementID\n          x-snake: reimbursement_id\n          required: true\n          description: Identifier for the reimbursement\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReimbursementObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T21:59:46.5643076\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"reimbursement\": {\n                            \"reimbursementID\": \"0d4e5476-1147-4a2c-9db4-ab6a15f81f1d\",\n                            \"name\": \"GST\",\n                            \"accountID\": null,\n                            \"currentRecord\": true,\n                            \"standardAmount\": null,\n                            \"standardTypeOfUnits\": null,\n                            \"standardRatePerUnit\": null,\n                            \"reimbursementCategory\": \"GST\",\n                            \"calculationType\": null\n                          }\n                        }'\n  /Timesheets:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.timesheets, payroll.timesheets.read]\n      tags:\n        - PayrollNz\n      operationId: getTimesheets\n      x-hasPayrollUkProblem: true\n      summary: Retrieves timesheets\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n          example: 5\n        - in: query\n          name: filter\n          description: Filter by employeeId and/or payrollCalendarId\n          schema:\n            type: string\n          example: employeeId==00000000-0000-0000-0000-000000000000,payrollCalendarId==00000000-0000-0000-0000-000000000000\n        - in: query\n          name: status\n          description: filter results by any timesheets with a matching timesheet status\n          schema:\n            type: string\n          example: Draft\n        - in: query\n          name: startDate\n          x-snake: start_date\n          description: filter results by any timesheets with a startDate on or after the provided date\n          schema:\n            type: string\n          example: \"2019-01-02\"\n        - in: query\n          name: endDate\n          x-snake: end_date\n          description: filter results by any timesheets with a endDate on or before the provided date\n          schema:\n            type: string\n          example: \"2020-01-02\"\n        - in: query\n          name: sort\n          description: sort the order of timesheets returned. The default is based on the timesheets createdDate, sorted oldest to newest. Currently, the only other option is to reverse the order based on the timesheets startDate, sorted newest to oldest.\n          schema:\n            type: string\n          example: startDate\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Timesheets'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T21:07:39.0921081\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 1\n                          },\n                          \"problem\": null,\n                          \"timesheets\": [\n                            {\n                              \"timesheetID\": \"f2a2aff0-9944-411e-bc58-44f22304188d\",\n                              \"payrollCalendarID\": \"f6931b89-d9c8-4f25-b4fa-268b5fd24197\",\n                              \"employeeID\": \"272a7559-1b8f-4d3a-977b-d05578cb9546\",\n                              \"startDate\": \"2020-08-01T00:00:00\",\n                              \"endDate\": \"2020-08-31T00:00:00\",\n                              \"status\": \"Draft\",\n                              \"totalHours\": 17,\n                              \"updatedDateUTC\": \"2020-08-28T20:50:40\"\n                            }\n                          ]\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.timesheets]\n      tags:\n        - PayrollNz\n      operationId: createTimesheet\n      x-hasPayrollUkProblem: true\n      x-example:\n        - startDateValue:\n          key: startDate\n          keyPascal: StartDate\n          keySnake: start_date\n          is_date: true\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2020, Month.OCTOBER, 28)\"\n          java: \"LocalDate.of(2020, Month.OCTOBER, 28)\"\n          csharp: \"new DateTime(2020, 10, 10)\"\n          php: \"new DateTime('2020-10-28')\"\n          node: \"'2020-10-28'\"\n          python: \"dateutil.parser.parse('2020-10-28T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - endDateValue:\n          key: endDate\n          keyPascal: EndDate\n          keySnake: end_date\n          is_date: true\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2020, Month.OCTOBER, 30)\"\n          java: \"LocalDate.of(2020, Month.OCTOBER, 30)\"\n          csharp: \"new DateTime(2020, 10, 12)\"\n          php: \"new DateTime('2020-10-30')\"\n          node: \"'2020-10-30'\"\n          python: \"dateutil.parser.parse('2020-10-30T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - timesheet:\n          key: timesheet\n          keyPascal: Timesheet\n          keySnake: timesheet\n          is_object: true\n        - payrollCalendarID:\n          key: payrollCalendarID\n          keyPascal: PayrollCalendarID\n          keySnake: payroll_calendar_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n        - employeeID:\n          key: employeeID\n          keyPascal: EmployeeID\n          keySnake: employee_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n        - startDate:\n          is_variable: true\n          nonString: true\n          key: startDate\n          keyPascal: StartDate\n          keySnake: start_date\n          default: startDate\n          python: start_date\n          ruby: start_date\n          object: timesheet\n        - endDate:\n          is_last: true \n          is_variable: true\n          nonString: true\n          key: endDate\n          keyPascal: EndDate\n          keySnake: end_date\n          default: endDate\n          python: end_date\n          ruby: end_date\n          object: timesheet\n      summary: Creates a new timesheet\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T21:07:41.7980254\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"timesheet\": {\n                            \"timesheetID\": \"d227445a-4188-453a-a196-48163a38188c\",\n                            \"payrollCalendarID\": \"9aa56064-990f-4ad3-a189-d966d8f6a030\",\n                            \"employeeID\": \"68342973-c405-4b86-b5d3-d7b877c27995\",\n                            \"startDate\": \"2020-04-13T00:00:00\",\n                            \"endDate\": \"2020-04-19T00:00:00\",\n                            \"status\": \"Draft\",\n                            \"totalHours\": 14,\n                            \"updatedDateUTC\": \"2020-08-28T21:07:41.9676218\",\n                            \"timesheetLines\": [\n                              {\n                                \"timesheetLineID\": \"ebeda184-6f42-4c44-a19c-3c0308578153\",\n                                \"date\": \"2020-04-15T00:00:00\",\n                                \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 6\n                              },\n                              {\n                                \"timesheetLineID\": \"e8e9d84f-d01d-4ab9-9584-3996c898b89c\",\n                                \"date\": \"2020-04-13T00:00:00\",\n                                \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 8\n                              }\n                            ]\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Timesheet'\n            example: '{\n                        \"payrollCalendarID\": \"9aa56064-990f-4ad3-a189-d966d8f6a030\",\n                        \"employeeID\": \"68342973-c405-4b86-b5d3-d7b877c27995\",\n                        \"startDate\": \"2020-04-13\",\n                        \"endDate\": \"2020-04-19\",\n                        \"timesheetLines\": [\n                          {\n                            \"date\": \"2020-04-13\",\n                            \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                            \"numberOfUnits\": 8\n                          },\n                          {\n                            \"date\": \"2020-04-15\",\n                            \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                            \"numberOfUnits\": 6\n                          }\n                        ]\n                      }'\n  /Timesheets/{TimesheetID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.timesheets, payroll.timesheets.read]\n      tags:\n        - PayrollNz\n      operationId: getTimesheet\n      x-hasPayrollUkProblem: true\n      summary: Retrieves a specific timesheet by using a unique timesheet ID\n      parameters:\n        - in: path\n          name: TimesheetID\n          x-snake: timesheet_id\n          required: true\n          description: Identifier for the timesheet\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T21:07:39.0637818\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"timesheet\": {\n                            \"timesheetID\": \"f2a2aff0-9944-411e-bc58-44f22304188d\",\n                            \"payrollCalendarID\": \"f6931b89-d9c8-4f25-b4fa-268b5fd24197\",\n                            \"employeeID\": \"272a7559-1b8f-4d3a-977b-d05578cb9546\",\n                            \"startDate\": \"2020-08-01T00:00:00\",\n                            \"endDate\": \"2020-08-31T00:00:00\",\n                            \"status\": \"Draft\",\n                            \"totalHours\": 17,\n                            \"updatedDateUTC\": \"2020-08-28T20:50:40\",\n                            \"timesheetLines\": [\n                              {\n                                \"timesheetLineID\": \"3397aab1-6cac-4804-a72b-00f396b04a08\",\n                                \"date\": \"2020-08-01T00:00:00\",\n                                \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 7\n                              },\n                              {\n                                \"timesheetLineID\": \"11f3608f-c53a-474d-ba17-053849de318b\",\n                                \"date\": \"2020-08-02T00:00:00\",\n                                \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 5\n                              },\n                              {\n                                \"timesheetLineID\": \"f5b416b7-d431-4d54-baff-9cd6de620c70\",\n                                \"date\": \"2020-08-03T00:00:00\",\n                                \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 5\n                              }\n                            ]\n                          }\n                        }'\n    delete:\n      security:\n        - OAuth2: [payroll.timesheets]\n      tags:\n        - PayrollNz\n      operationId: deleteTimesheet\n      summary: Deletes a timesheet\n      parameters:\n        - in: path\n          name: TimesheetID\n          x-snake: timesheet_id\n          required: true\n          description: Identifier for the timesheet\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetLine'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T21:07:41.4217222\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n  /Timesheets/{TimesheetID}/Lines:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    post:\n      security:\n        - OAuth2: [payroll.timesheets]\n      tags:\n        - PayrollNz\n      operationId: createTimesheetLine\n      x-hasPayrollUkProblem: true\n      x-example:\n        - dateValue:\n          key: date\n          keyPascal: Date\n          keySnake: date\n          is_date: true\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2020, Month.OCTOBER, 28)\"\n          java: \"LocalDate.of(2020, Month.OCTOBER, 28)\"\n          csharp: \"new DateTime(2020, 10, 10)\"\n          php: \"new DateTime('2020-10-28')\"\n          node: \"'2020-10-28'\"\n          python: \"dateutil.parser.parse('2020-10-28T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - timesheetLine:\n          key: timesheetLine\n          keyPascal: TimesheetLine\n          keySnake: timesheet_line\n          is_object: true\n        - timesheetLineID:\n          key: timesheetLineID\n          keyPascal: TimesheetLineID\n          keySnake: timesheet_line_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: timesheetLine\n        - date:\n          key: date\n          keyPascal: Date\n          keySnake: date\n          default: date\n          python: date\n          ruby: date\n          is_variable: true\n          nonString: true\n          object: timesheetLine\n        - earningsRateID:\n          key: earningsRateID\n          keyPascal: EarningsRateID\n          keySnake: earnings_rate_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: timesheetLine\n        - trackingItemID:\n          key: trackingItemID\n          keyPascal: TrackingItemID\n          keySnake: tracking_item_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: timesheetLine\n        - numberOfUnits:\n          key: numberOfUnits\n          keyPascal: NumberOfUnits\n          keySnake: number_of_units\n          default: 6\n          object: timesheetLine\n          nonString: true \n          is_last: true\n      summary: Create a new timesheet line for a specific time sheet\n      parameters:\n        - in: path\n          name: TimesheetID\n          x-snake: timesheet_id\n          required: true\n          description: Identifier for the timesheet\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetLineObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T21:07:39.5955147\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"timesheetLine\": {\n                            \"timesheetLineID\": \"10c3c63e-6cd0-4630-861f-08a2baa657fa\",\n                            \"date\": \"2020-08-03T00:00:00\",\n                            \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                            \"trackingItemID\": null,\n                            \"numberOfUnits\": 1\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TimesheetLine'\n            example: '{\n                        \"date\": \"2020-08-03\",\n                        \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                        \"numberOfUnits\": 1\n                      }'\n  /Timesheets/{TimesheetID}/Approve:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    post:\n      security:\n        - OAuth2: [payroll.timesheets]\n      tags:\n        - PayrollNz\n      operationId: approveTimesheet\n      x-hasPayrollUkProblem: true\n      summary: Approves a timesheet\n      parameters:\n        - in: path\n          name: TimesheetID\n          x-snake: timesheet_id\n          required: true\n          description: Identifier for the timesheet\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T21:07:40.3918669\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"timesheet\": {\n                            \"timesheetID\": \"f2a2aff0-9944-411e-bc58-44f22304188d\",\n                            \"payrollCalendarID\": \"f6931b89-d9c8-4f25-b4fa-268b5fd24197\",\n                            \"employeeID\": \"272a7559-1b8f-4d3a-977b-d05578cb9546\",\n                            \"startDate\": \"2020-08-01T00:00:00\",\n                            \"endDate\": \"2020-08-31T00:00:00\",\n                            \"status\": \"Approved\",\n                            \"totalHours\": 13,\n                            \"updatedDateUTC\": \"2020-08-28T21:07:40.5613405\",\n                            \"timesheetLines\": [\n                              {\n                                \"timesheetLineID\": \"10c3c63e-6cd0-4630-861f-08a2baa657fa\",\n                                \"date\": \"2020-08-03T00:00:00\",\n                                \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 1\n                              },\n                              {\n                                \"timesheetLineID\": \"3397aab1-6cac-4804-a72b-00f396b04a08\",\n                                \"date\": \"2020-08-04T00:00:00\",\n                                \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 2\n                              },\n                              {\n                                \"timesheetLineID\": \"11f3608f-c53a-474d-ba17-053849de318b\",\n                                \"date\": \"2020-08-02T00:00:00\",\n                                \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 5\n                              },\n                              {\n                                \"timesheetLineID\": \"f5b416b7-d431-4d54-baff-9cd6de620c70\",\n                                \"date\": \"2020-08-03T00:00:00\",\n                                \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 5\n                              }\n                            ]\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n  /Timesheets/{TimesheetID}/RevertToDraft:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    post:\n      security:\n        - OAuth2: [payroll.timesheets]\n      tags:\n        - PayrollNz\n      operationId: revertTimesheet\n      x-hasPayrollUkProblem: true\n      summary: Reverts a timesheet to draft\n      parameters:\n        - in: path\n          name: TimesheetID\n          x-snake: timesheet_id\n          required: true\n          description: Identifier for the timesheet\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T21:07:41.3053619\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"timesheet\": {\n                            \"timesheetID\": \"f2a2aff0-9944-411e-bc58-44f22304188d\",\n                            \"payrollCalendarID\": \"f6931b89-d9c8-4f25-b4fa-268b5fd24197\",\n                            \"employeeID\": \"272a7559-1b8f-4d3a-977b-d05578cb9546\",\n                            \"startDate\": \"2020-08-01T00:00:00\",\n                            \"endDate\": \"2020-08-31T00:00:00\",\n                            \"status\": \"Draft\",\n                            \"totalHours\": 13,\n                            \"updatedDateUTC\": \"2020-08-28T21:07:41.2608622\",\n                            \"timesheetLines\": [\n                              {\n                                \"timesheetLineID\": \"10c3c63e-6cd0-4630-861f-08a2baa657fa\",\n                                \"date\": \"2020-08-03T00:00:00\",\n                                \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 1\n                              },\n                              {\n                                \"timesheetLineID\": \"3397aab1-6cac-4804-a72b-00f396b04a08\",\n                                \"date\": \"2020-08-04T00:00:00\",\n                                \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 2\n                              },\n                              {\n                                \"timesheetLineID\": \"11f3608f-c53a-474d-ba17-053849de318b\",\n                                \"date\": \"2020-08-02T00:00:00\",\n                                \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 5\n                              },\n                              {\n                                \"timesheetLineID\": \"f5b416b7-d431-4d54-baff-9cd6de620c70\",\n                                \"date\": \"2020-08-03T00:00:00\",\n                                \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 5\n                              }\n                            ]\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n  /Timesheets/{TimesheetID}/Lines/{TimesheetLineID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    put:\n      security:\n        - OAuth2: [payroll.timesheets]\n      tags:\n        - PayrollNz\n      operationId: updateTimesheetLine\n      x-hasPayrollUkProblem: true\n      summary: Updates a timesheet line for a specific timesheet\n      x-example:\n        - dateValue:\n          key: date\n          keyPascal: Date\n          keySnake: date\n          is_date: true\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2020, Month.OCTOBER, 28)\"\n          java: \"LocalDate.of(2020, Month.OCTOBER, 28)\"\n          csharp: \"new DateTime(2020, 10, 10)\"\n          php: \"new DateTime('2020-10-28')\"\n          node: \"'2020-10-28'\"\n          python: \"dateutil.parser.parse('2020-10-28T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - timesheetLine:\n          key: timesheetLine\n          keyPascal: TimesheetLine\n          keySnake: timesheet_line\n          is_object: true\n        - timesheetLineID:\n          key: timesheetLineID\n          keyPascal: TimesheetLineID\n          keySnake: timesheet_line_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: timesheetLine\n        - date:\n          key: date\n          keyPascal: Date\n          keySnake: date\n          default: date\n          python: date\n          ruby: date\n          is_variable: true\n          nonString: true\n          object: timesheetLine\n        - earningsRateID:\n          key: earningsRateID\n          keyPascal: EarningsRateID\n          keySnake: earnings_rate_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: timesheetLine\n        - trackingItemID:\n          key: trackingItemID\n          keyPascal: TrackingItemID\n          keySnake: tracking_item_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: timesheetLine\n        - numberOfUnits:\n          key: numberOfUnits\n          keyPascal: NumberOfUnits\n          keySnake: number_of_units\n          default: 6\n          object: timesheetLine\n          nonString: true \n          is_last: true\n      parameters:\n        - in: path\n          name: TimesheetID\n          x-snake: timesheet_id\n          required: true\n          description: Identifier for the timesheet\n          schema:\n            type: string\n            format: uuid\n        - in: path\n          name: TimesheetLineID\n          x-snake: timesheet_line_id\n          required: true\n          description: Identifier for the timesheet line\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetLineObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T21:07:39.9074596\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"timesheetLine\": {\n                            \"timesheetLineID\": \"3397aab1-6cac-4804-a72b-00f396b04a08\",\n                            \"date\": \"2020-08-04T00:00:00\",\n                            \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                            \"trackingItemID\": null,\n                            \"numberOfUnits\": 2\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TimesheetLine'\n            example: '{\n                        \"date\": \"2020-08-04\",\n                        \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                        \"numberOfUnits\": 2\n                      }'\n    delete:\n      security:\n        - OAuth2: [payroll.timesheets]\n      tags:\n        - PayrollNz\n      operationId: deleteTimesheetLine\n      summary: Deletes a timesheet line for a specific timesheet\n      parameters:\n        - in: path\n          name: TimesheetID\n          x-snake: timesheet_id\n          required: true\n          description: Identifier for the timesheet\n          schema:\n            type: string\n            format: uuid\n        - in: path\n          name: TimesheetLineID\n          x-snake: timesheet_line_id\n          required: true\n          description: Identifier for the timesheet line\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetLine'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T22:01:51.861069\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n  /PayRunCalendars:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings, payroll.settings.read]\n      tags:\n        - PayrollNz\n      operationId: getPayRunCalendars\n      x-hasPayrollUkProblem: true\n      summary: Retrieves payrun calendars\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayRunCalendars'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-26T23:54:48.3357097\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 2\n                          },\n                          \"problem\": null,\n                          \"payRunCalendars\": [\n                            {\n                              \"payrollCalendarID\": \"9aa56064-990f-4ad3-a189-d966d8f6a030\",\n                              \"name\": \"Weekly\",\n                              \"calendarType\": \"Weekly\",\n                              \"periodStartDate\": \"2019-07-08T00:00:00\",\n                              \"periodEndDate\": \"2019-07-14T00:00:00\",\n                              \"paymentDate\": \"2019-07-16T00:00:00\",\n                              \"updatedDateUTC\": \"2019-09-24T05:08:45\"\n                            },\n                            {\n                              \"payrollCalendarID\": \"f6931b89-d9c8-4f25-b4fa-268b5fd24197\",\n                              \"name\": \"Monthly\",\n                              \"calendarType\": \"Monthly\",\n                              \"periodStartDate\": \"2019-08-01T00:00:00\",\n                              \"periodEndDate\": \"2019-08-31T00:00:00\",\n                              \"paymentDate\": \"2019-08-23T00:00:00\",\n                              \"updatedDateUTC\": \"2019-09-24T03:11:16\"\n                            }\n                          ]\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.settings]\n      tags:\n        - PayrollNz\n      operationId: createPayRunCalendar\n      x-hasPayrollUkProblem: true\n      x-example:\n        - startDateValue:\n          key: startDate\n          keyPascal: StartDate\n          keySnake: start_date\n          is_date: true\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2020, Month.OCTOBER, 28)\"\n          java: \"LocalDate.of(2020, Month.OCTOBER, 28)\"\n          csharp: \"new DateTime(2020, 10, 10)\"\n          php: \"new DateTime('2020-10-28')\"\n          node: \"'2020-10-28'\"\n          python: \"dateutil.parser.parse('2020-10-28T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - paymentDateValue:\n          key: paymentDate\n          keyPascal: PaymentDate\n          keySnake: payment_date\n          is_date: true\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2020, Month.OCTOBER, 30)\"\n          java: \"LocalDate.of(2020, Month.OCTOBER, 30)\"\n          csharp: \"new DateTime(2020, 10, 12)\"\n          php: \"new DateTime('2020-10-30')\"\n          node: \"'2020-10-30'\"\n          python: \"dateutil.parser.parse('2020-10-30T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - payRunCalendar:\n          key: payRunCalendar\n          keyPascal: PayRunCalendar\n          keySnake: pay_run_calendar\n          is_object: true\n        - calendarType:\n          key: calendarType\n          keyPascal: CalendarType\n          keySnake: calendar_type\n          nonString: true \n          default: CalendarType.Weekly\n          php: XeroAPI\\XeroPHP\\Models\\PayrollNz\\CalendarType.WEEKLY\n          node: CalendarType.Weekly\n          ruby: XeroRuby::PayrollNz::calendar_type::WEEKLY\n          python: calendar_type.WEEKLY\n          java: com.xero.models.payrollnz.CalendarType.WEEKLY\n          csharp: CalendarType.Weekly\n          object: payRunCalendar\n        - periodStartDate:\n          key: periodStartDate\n          keyPascal: PeriodStartDate\n          keySnake: period_start_date\n          is_variable: true\n          nonString: true\n          default: startDate\n          python: start_date\n          ruby: start_date\n          object: payRunCalendar\n        - paymentDate:\n          key: paymentDate\n          keyPascal: PaymentDate\n          keySnake: payment_date\n          is_last: true \n          is_variable: true\n          nonString: true\n          default: paymentDate\n          python: payment_date\n          ruby: payment_date\n          object: payRunCalendar\n      summary: Creates a new payrun calendar\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayRunCalendarObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-26T23:54:49.3159839\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"payRunCalendar\": {\n                            \"payrollCalendarID\": \"54e9706a-c4e8-45ff-9c63-6fcac7ee7cde\",\n                            \"name\": \"My Weekly Cal\",\n                            \"calendarType\": \"Weekly\",\n                            \"periodStartDate\": \"2020-05-01T00:00:00\",\n                            \"periodEndDate\": \"2020-05-07T00:00:00\",\n                            \"paymentDate\": \"2020-05-15T00:00:00\",\n                            \"updatedDateUTC\": \"2020-08-26T23:54:49.4863322\"\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PayRunCalendar'\n            example: '{\n                        \"name\": \"My Weekly Cal\",\n                        \"calendarType\": \"Weekly\",\n                        \"periodStartDate\": \"2020-05-01\",\n                        \"paymentDate\": \"2020-05-15\"\n                      }'\n  /PayRunCalendars/{PayrollCalendarID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings, payroll.settings.read]\n      tags:\n        - PayrollNz\n      operationId: getPayRunCalendar\n      x-hasPayrollUkProblem: true\n      summary: Retrieves a specific payrun calendar by using a unique payroll calendar ID\n      parameters:\n        - in: path\n          name: PayrollCalendarID\n          x-snake: payroll_calendar_id\n          required: true\n          description: Identifier for the payrun calendars\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayRunCalendarObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-26T23:54:48.4398063\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"payRunCalendar\": {\n                            \"payrollCalendarID\": \"9aa56064-990f-4ad3-a189-d966d8f6a030\",\n                            \"name\": \"Weekly\",\n                            \"calendarType\": \"Weekly\",\n                            \"periodStartDate\": \"2019-07-08T00:00:00\",\n                            \"periodEndDate\": \"2019-07-14T00:00:00\",\n                            \"paymentDate\": \"2019-07-16T00:00:00\",\n                            \"updatedDateUTC\": \"2019-09-24T05:08:45\"\n                          }\n                        }'\n  /Employees/{EmployeeID}/SalaryAndWages:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees, payroll.employees.read]\n      tags:\n        - PayrollNz\n      operationId: getEmployeeSalaryAndWages\n      x-hasPayrollUkProblem: true\n      summary: Retrieves an employee's salary and wages\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SalaryAndWages'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T00:25:03.6697493\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 2\n                          },\n                          \"problem\": null,\n                          \"salaryAndWages\": [\n                            {\n                              \"salaryAndWagesID\": \"b0026f5a-fa8e-43aa-95e4-cec3c0972e39\",\n                              \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                              \"numberOfUnitsPerWeek\": 0,\n                              \"ratePerUnit\": 25,\n                              \"numberOfUnitsPerDay\": 0,\n                              \"daysPerWeek\": 0,\n                              \"effectiveFrom\": \"2019-02-07T00:00:00\",\n                              \"annualSalary\": 25,\n                              \"status\": \"Active\",\n                              \"paymentType\": \"Hourly\"\n                            },\n                            {\n                              \"salaryAndWagesID\": \"0211c70c-93d5-4da1-a570-b66d8df2ca15\",\n                              \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                              \"numberOfUnitsPerWeek\": 2,\n                              \"ratePerUnit\": null,\n                              \"numberOfUnitsPerDay\": 2,\n                              \"daysPerWeek\": 1,\n                              \"effectiveFrom\": \"2020-05-01T00:00:00\",\n                              \"annualSalary\": 100,\n                              \"status\": \"Active\",\n                              \"paymentType\": \"Salary\"\n                            }\n                          ]\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n    post:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: createEmployeeSalaryAndWage\n      x-hasPayrollUkProblem: true\n      x-example:\n        - salaryAndWage:\n          key: salaryAndWage\n          keyPascal: SalaryAndWage\n          keySnake: salary_and_wage\n          is_object: true\n        - earningsRateID:\n          key: earningsRateID\n          keyPascal: EarningsRateID\n          keySnake: earnings_rate_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: salaryAndWage\n        - numberOfUnitsPerDay:\n          key: numberOfUnitsPerDay\n          keyPascal: NumberOfUnitsPerDay\n          keySnake: number_of_units_per_day\n          default: 0  \n          nonString: true \n          object: salaryAndWage\n        - daysPerWeek:\n          key: daysPerWeek\n          keyPascal: DaysPerWeek\n          keySnake: days_per_week\n          default: 0  \n          nonString: true \n          object: salaryAndWage\n        - paymentType:\n          key: paymentType\n          keyPascal: PaymentType\n          keySnake: payment_type\n          nonString: true \n          default: SalaryAndWage.PaymentTypeEnum.Hourly\n          php: XeroAPI\\XeroPHP\\Models\\PayrollNz\\SalaryAndWage\\PaymentTypeEnum.HOURLY\n          node: SalaryAndWage.PaymentTypeEnum.Hourly\n          ruby: XeroRuby::PayrollNz::SalaryAndWage::payment_type_enum::HOURLY\n          python: payment_type_enum.Hourly\n          java: com.xero.models.payrollnz.SalaryAndWage.PaymentTypeEnum.HOURLY\n          csharp: SalaryAndWage.PaymentTypeEnum.Hourly\n          object: salaryAndWage\n          is_last: true\n      summary: Creates an employee salary and wage record\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SalaryAndWageObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T00:22:47.464262\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"salaryAndWages\": {\n                            \"salaryAndWagesID\": \"0211c70c-93d5-4da1-a570-b66d8df2ca15\",\n                            \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                            \"numberOfUnitsPerWeek\": 2,\n                            \"ratePerUnit\": null,\n                            \"numberOfUnitsPerDay\": 2,\n                            \"daysPerWeek\": 1,\n                            \"effectiveFrom\": \"2020-05-01T00:00:00\",\n                            \"annualSalary\": 100,\n                            \"status\": \"Active\",\n                            \"paymentType\": \"Salary\"\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SalaryAndWage'\n            example: '{\n                        \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                        \"numberOfUnitsPerWeek\": 2,\n                        \"ratePerUnit\": 10,\n                        \"numberOfUnitsPerDay\": 2,\n                        \"daysPerWeek\": 1,\n                        \"effectiveFrom\": \"2020-05-01\",\n                        \"annualSalary\": 100,\n                        \"status\": \"Active\",\n                        \"paymentType\": \"Salary\"\n                      }'\n  /Employees/{EmployeeID}/SalaryAndWages/{SalaryAndWagesID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.employees, payroll.employees.read]\n      tags:\n        - PayrollNz\n      operationId: getEmployeeSalaryAndWage\n      x-hasPayrollUkProblem: true\n      summary: Retrieves an employee's salary and wages record by using a unique salary and wage ID\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: SalaryAndWagesID\n          x-snake: salary_and_wages_id\n          in: path\n          required: true\n          description:  Id for single pay template earnings object\n          schema: \n            type: string\n            format: uuid\n            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SalaryAndWages'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T00:25:03.8641784\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"salaryAndWages\": [\n                            {\n                              \"salaryAndWagesID\": \"b0026f5a-fa8e-43aa-95e4-cec3c0972e39\",\n                              \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                              \"numberOfUnitsPerWeek\": 0,\n                              \"ratePerUnit\": 25,\n                              \"numberOfUnitsPerDay\": 0,\n                              \"daysPerWeek\": 0,\n                              \"effectiveFrom\": \"2019-02-07T00:00:00\",\n                              \"annualSalary\": 25,\n                              \"status\": \"Active\",\n                              \"paymentType\": \"Hourly\"\n                            }\n                          ]\n                        }'\n    put:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: updateEmployeeSalaryAndWage\n      x-hasPayrollUkProblem: true\n      x-example:\n        - salaryAndWage:\n          key: salaryAndWage\n          keyPascal: SalaryAndWage\n          keySnake: salary_and_wage\n          is_object: true\n        - earningsRateID:\n          key: earningsRateID\n          keyPascal: EarningsRateID\n          keySnake: earnings_rate_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: salaryAndWage\n        - numberOfUnitsPerDay:\n          key: numberOfUnitsPerDay\n          keyPascal: NumberOfUnitsPerDay\n          keySnake: number_of_units_per_day\n          default: 0  \n          nonString: true \n          object: salaryAndWage\n        - daysPerWeek:\n          key: daysPerWeek\n          keyPascal: DaysPerWeek\n          keySnake: days_per_week\n          default: 0  \n          nonString: true \n          object: salaryAndWage\n        - paymentType:\n          key: paymentType\n          keyPascal: PaymentType\n          keySnake: payment_type\n          nonString: true \n          default: SalaryAndWage.PaymentTypeEnum.Hourly\n          php: XeroAPI\\XeroPHP\\Models\\PayrollNz\\SalaryAndWage\\PaymentTypeEnum.HOURLY\n          node: SalaryAndWage.PaymentTypeEnum.Hourly\n          ruby: XeroRuby::PayrollNz::SalaryAndWage::payment_type_enum::HOURLY\n          python: payment_type_enum.Hourly\n          java: com.xero.models.payrollnz.SalaryAndWage.PaymentTypeEnum.HOURLY\n          csharp: SalaryAndWage.PaymentTypeEnum.Hourly\n          object: salaryAndWage\n          is_last: true\n      summary: Updates an employee's salary and wages record\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: SalaryAndWagesID\n          x-snake: salary_and_wages_id\n          in: path\n          required: true\n          description:  Id for single pay template earnings object\n          schema: \n            type: string\n            format: uuid\n            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SalaryAndWageObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-27T00:25:11.4976642\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"salaryAndWages\": {\n                            \"salaryAndWagesID\": \"1912d614-99d0-43e6-8d63-5b539dcfe358\",\n                            \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                            \"numberOfUnitsPerWeek\": 3,\n                            \"ratePerUnit\": null,\n                            \"numberOfUnitsPerDay\": 3,\n                            \"daysPerWeek\": 1,\n                            \"effectiveFrom\": \"2020-05-15T00:00:00\",\n                            \"annualSalary\": 101,\n                            \"status\": \"Active\",\n                            \"paymentType\": \"Salary\"\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SalaryAndWage'\n            example: '{\n                        \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                        \"numberOfUnitsPerWeek\": 3,\n                        \"ratePerUnit\": 11,\n                        \"numberOfUnitsPerDay\": 3,\n                        \"daysPerWeek\": 1,\n                        \"effectiveFrom\": \"2020-05-15\",\n                        \"annualSalary\": 101,\n                        \"status\": \"Active\",\n                        \"paymentType\": \"Salary\"\n                      }'\n    delete:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollNz\n      operationId: deleteEmployeeSalaryAndWage\n      summary: Deletes an employee's salary and wages record\n      parameters:\n        - name: EmployeeID\n          x-snake: employee_id\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: SalaryAndWagesID\n          x-snake: salary_and_wages_id\n          in: path\n          required: true\n          description:  Id for single salary and wages object\n          schema: \n            type: string\n            format: uuid\n            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        '200':\n          description: deletion successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SalaryAndWageObject'\n              example: '{\n                      \"id\": \"00000000-0000-0000-0000-000000000000\",\n                      \"providerName\": \"provider-name\",\n                      \"dateTimeUTC\": \"2020-08-27T00:25:11.5391097\",\n                      \"httpStatusCode\": \"OK\",\n                      \"pagination\": null,\n                      \"problem\": null\n                    }'\n  /PayRuns:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.payruns, payroll.payruns.read]\n      tags:\n        - PayrollNz\n      operationId: getPayRuns\n      x-hasPayrollUkProblem: true\n      summary: Retrieves pay runs\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n        - in: query\n          name: status\n          description: By default get payruns will return all the payruns for an organization. You can add GET https://api.xero.com/payroll.xro/2.0/payRuns?statu={PayRunStatus} to filter the payruns by status.\n          schema:\n            type: string\n            enum:\n              - Draft\n              - Posted\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayRuns'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T23:01:56.762619\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 1\n                          },\n                          \"problem\": null,\n                          \"payRuns\": [\n                            {\n                              \"payRunID\": \"8ba9831d-38e4-43d4-808e-472a5d195bce\",\n                              \"payrollCalendarID\": \"9aa56064-990f-4ad3-a189-d966d8f6a030\",\n                              \"periodStartDate\": \"2019-06-10T00:00:00\",\n                              \"periodEndDate\": \"2019-06-16T00:00:00\",\n                              \"paymentDate\": \"2019-06-18T00:00:00\",\n                              \"totalCost\": 6735.81,\n                              \"totalPay\": 4524.81,\n                              \"payRunStatus\": \"Draft\",\n                              \"payRunType\": \"Scheduled\",\n                              \"calendarType\": \"Weekly\",\n                              \"postedDateTime\": null,\n                              \"payslipMessage\": null\n                            }\n                          ]\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.payruns]\n      tags:\n        - PayrollNz\n      operationId: createPayRun\n      x-hasPayrollUkProblem: true\n      x-example:\n        - payRun:\n          key: payRun\n          keyPascal: PayRun\n          keySnake: pay_run\n          is_object: true\n        - payRunType:\n          key: payRunType\n          keyPascal: PayRunType\n          keySnake: pay_run_type\n          nonString: true \n          default: PayRun.PayRunTypeEnum.Scheduled\n          php: XeroAPI\\XeroPHP\\Models\\PayrollNz\\PayRun\\PayRunTypeEnum.SCHEDULED\n          node: PayRun.PayRunTypeEnum.Scheduled\n          ruby: XeroRuby::PayrollNz::PayRun::pay_run_type_enum::SCHEDULED\n          python: pay_run_type_enum.Scheduled\n          java: com.xero.models.payrollnz.PayRun.PayRunTypeEnum.SCHEDULED\n          csharp: PayRun.PayRunTypeEnum.Scheduled\n          object: payRun\n        - payrollCalendarId:\n          key: payrollCalendarID\n          keyPascal: PayrollCalendarID\n          keySnake: payroll_calendar_id\n          is_uuid: true\n          object: payRun\n          default: \"00000000-0000-0000-0000-000000000000\"\n          is_last: true\n      summary: Creates a pay run\n      responses:\n        '200':\n          description: created payrun results\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayRunObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-09-10T23:56:16.2964746\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"payRun\": {\n                            \"payRunID\": \"591dbf2f-786b-4814-8c61-93bebaee47f9\",\n                            \"payrollCalendarID\": \"9aa56064-990f-4ad3-a189-d966d8f6a030\",\n                            \"periodStartDate\": \"2019-06-17T00:00:00\",\n                            \"periodEndDate\": \"2019-06-23T00:00:00\",\n                            \"paymentDate\": \"2019-06-25T00:00:00\",\n                            \"totalCost\": 9416.7,\n                            \"totalPay\": 6137.2,\n                            \"payRunStatus\": \"Draft\",\n                            \"payRunType\": \"Scheduled\",\n                            \"calendarType\": \"Weekly\",\n                            \"postedDateTime\": null,\n                            \"paySlips\": [\n                              {\n                                \"paySlipID\": \"8b3a099c-2309-480a-a6ee-1dc4f4b2668b\",\n                                \"employeeID\": \"68342973-c405-4b86-b5d3-d7b877c27995\",\n                                \"lastEdited\": null,\n                                \"firstName\": \"Tony\",\n                                \"lastName\": \"Starkwpjgdjxdvwson\",\n                                \"totalEarnings\": 3628.8,\n                                \"grossEarnings\": 3628.8,\n                                \"totalPay\": 2462.72,\n                                \"totalEmployerTaxes\": 18.9,\n                                \"totalEmployeeTaxes\": 1057.22,\n                                \"totalDeductions\": 0,\n                                \"totalReimbursements\": 0,\n                                \"totalStatutoryDeductions\": 108.86,\n                                \"totalSuperannuation\": 108.86,\n                                \"bacsHash\": null,\n                                \"paymentMethod\": \"Electronically\"\n                              },\n                              {\n                                \"paySlipID\": \"87ab8047-7066-4609-906a-5b6ee1dc1886\",\n                                \"employeeID\": \"1c4f0c92-03ad-43f2-a690-ee51397ece6a\",\n                                \"lastEdited\": null,\n                                \"firstName\": \"GST\",\n                                \"lastName\": \"Contractor\",\n                                \"totalEarnings\": 480,\n                                \"grossEarnings\": 480,\n                                \"totalPay\": 456,\n                                \"totalEmployerTaxes\": 0,\n                                \"totalEmployeeTaxes\": 96,\n                                \"totalDeductions\": 0,\n                                \"totalReimbursements\": 72,\n                                \"totalStatutoryDeductions\": 0,\n                                \"totalSuperannuation\": 0,\n                                \"bacsHash\": null,\n                                \"paymentMethod\": \"Electronically\"\n                              }\n                            ],\n                            \"payslipMessage\": null,\n                            \"invalidPayeeIDs\": null\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PayRun'\n            example: '{\n                        \"payrollCalendarID\": \"9aa56064-990f-4ad3-a189-d966d8f6a030\",\n                        \"periodStartDate\": \"2020-09-08\",\n                        \"periodEndDate\": \"2020-09-15\",\n                        \"paymentDate\": \"2020-09-20\",\n                        \"payRunStatus\": \"Draft\",\n                        \"payRunType\": \"Scheduled\",\n                        \"calendarType\": \"Weekly\"\n                      }'\n  /PayRuns/{PayRunID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.payruns, payroll.payruns.read]\n      tags:\n        - PayrollNz\n      operationId: getPayRun\n      x-hasPayrollUkProblem: true\n      summary: Retrieves a specific pay run by using a unique pay run ID\n      parameters:\n        - in: path\n          name: PayRunID\n          x-snake: pay_run_id\n          required: true\n          description: Identifier for the pay run\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayRunObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T23:01:57.3773969\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"payRun\": {\n                            \"payRunID\": \"8ba9831d-38e4-43d4-808e-472a5d195bce\",\n                            \"payrollCalendarID\": \"9aa56064-990f-4ad3-a189-d966d8f6a030\",\n                            \"periodStartDate\": \"2019-06-10T00:00:00\",\n                            \"periodEndDate\": \"2019-06-16T00:00:00\",\n                            \"paymentDate\": \"2019-06-18T00:00:00\",\n                            \"totalCost\": 6735.81,\n                            \"totalPay\": 4524.81,\n                            \"payRunStatus\": \"Draft\",\n                            \"payRunType\": \"Scheduled\",\n                            \"calendarType\": \"Weekly\",\n                            \"postedDateTime\": null,\n                            \"paySlips\": [\n                              {\n                                \"paySlipID\": \"51a01760-cf9d-4ba1-bf3a-2065d4f8e073\",\n                                \"employeeID\": \"68342973-c405-4b86-b5d3-d7b877c27995\",\n                                \"lastEdited\": \"2020-08-28T21:58:08\",\n                                \"firstName\": \"Tony\",\n                                \"lastName\": \"Starkmzamlagmdison\",\n                                \"totalEarnings\": 648,\n                                \"grossEarnings\": 648,\n                                \"totalPay\": 525,\n                                \"totalEmployerTaxes\": 3.32,\n                                \"totalEmployeeTaxes\": 103.56,\n                                \"totalDeductions\": 0,\n                                \"totalReimbursements\": 0,\n                                \"totalStatutoryDeductions\": 19.44,\n                                \"totalSuperannuation\": 19.44,\n                                \"bacsHash\": null,\n                                \"paymentMethod\": \"Electronically\"\n                              }\n                            ],\n                            \"payslipMessage\": null,\n                            \"invalidPayeeIDs\": null\n                          }\n                        }'\n    put:\n      security:\n        - OAuth2: [payroll.payruns]\n      tags:\n        - PayrollNz\n      operationId: updatePayRun\n      x-hasPayrollUkProblem: true\n      x-example:\n        - startDateValue:\n          key: startDate\n          keyPascal: StartDate\n          keySnake: start_date\n          is_date: true\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2020, Month.OCTOBER, 28)\"\n          java: \"LocalDate.of(2020, Month.OCTOBER, 28)\"\n          csharp: \"new DateTime(2020, 10, 10)\"\n          php: \"new DateTime('2020-10-28')\"\n          node: \"'2020-10-28'\"\n          python: \"dateutil.parser.parse('2020-10-28T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - paymentDateValue:\n          key: paymentDate\n          keyPascal: PaymentDate\n          keySnake: payment_date\n          is_date: true\n          java_datatype: LocalDate\n          csharp_datatype: DateTime\n          default: \"LocalDate.of(2020, Month.OCTOBER, 30)\"\n          java: \"LocalDate.of(2020, Month.OCTOBER, 30)\"\n          csharp: \"new DateTime(2020, 10, 12)\"\n          php: \"new DateTime('2020-10-30')\"\n          node: \"'2020-10-30'\"\n          python: \"dateutil.parser.parse('2020-10-30T00:00:00Z')\"\n          ruby: \"'YYYY-MM-DD'\"\n        - payRunCalendar:\n          key: payRunCalendar\n          keyPascal: PayRunCalendar\n          keySnake: pay_run_calendar\n          is_object: true\n        - calendarType:\n          key: calendarType\n          keyPascal: CalendarType\n          keySnake: calendar_type\n          nonString: true \n          default: CalendarType.Weekly\n          php: XeroAPI\\XeroPHP\\Models\\PayrollNz\\CalendarType.WEEKLY\n          node: CalendarType.Weekly\n          ruby: XeroRuby::PayrollNz::calendar_type::WEEKLY\n          python: calendar_type.WEEKLY\n          java: com.xero.models.payrollnz.CalendarType.WEEKLY\n          csharp: CalendarType.Weekly\n          object: payRunCalendar\n        - periodStartDate:\n          key: periodStartDate\n          keyPascal: PeriodStartDate\n          keySnake: period_start_date\n          is_variable: true\n          nonString: true\n          default: startDate\n          python: start_date\n          ruby: start_date\n          object: payRunCalendar\n        - paymentDate:\n          key: paymentDate\n          keyPascal: PaymentDate\n          keySnake: payment_date\n          is_last: true \n          is_variable: true\n          nonString: true\n          default: paymentDate\n          python: payment_date\n          ruby: payment_date\n          object: payRunCalendar\n      summary: Updates a pay run\n      parameters:\n        - in: path\n          name: PayRunID\n          x-snake: pay_run_id\n          required: true\n          description: Identifier for the pay run\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayRunObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-09-10T17:38:14.8294283\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"payRun\": {\n                            \"payRunID\": \"8ba9831d-38e4-43d4-808e-472a5d195bce\",\n                            \"payrollCalendarID\": \"9aa56064-990f-4ad3-a189-d966d8f6a030\",\n                            \"periodStartDate\": \"2019-06-10T00:00:00\",\n                            \"periodEndDate\": \"2019-06-16T00:00:00\",\n                            \"paymentDate\": \"2019-07-01T00:00:00\",\n                            \"totalCost\": 9806.03,\n                            \"totalPay\": 6362.53,\n                            \"payRunStatus\": \"Draft\",\n                            \"payRunType\": \"Scheduled\",\n                            \"calendarType\": \"Weekly\",\n                            \"postedDateTime\": null,\n                            \"paySlips\": [\n                              {\n                                \"paySlipID\": \"51a01760-cf9d-4ba1-bf3a-2065d4f8e073\",\n                                \"employeeID\": \"68342973-c405-4b86-b5d3-d7b877c27995\",\n                                \"lastEdited\": \"2020-09-10T17:20:23\",\n                                \"firstName\": \"Tony\",\n                                \"lastName\": \"Starkwpjgdjxdvwson\",\n                                \"totalEarnings\": 3628.8,\n                                \"grossEarnings\": 3628.8,\n                                \"totalPay\": 2362.72,\n                                \"totalEmployerTaxes\": 18.9,\n                                \"totalEmployeeTaxes\": 1057.22,\n                                \"totalDeductions\": 100,\n                                \"totalReimbursements\": 0,\n                                \"totalStatutoryDeductions\": 108.86,\n                                \"totalSuperannuation\": 108.86,\n                                \"bacsHash\": null,\n                                \"paymentMethod\": \"Electronically\"\n                              },\n                              {\n                                \"paySlipID\": \"499bb866-40fd-44ea-a2d9-91e79e5ac08e\",\n                                \"employeeID\": \"1c4f0c92-03ad-43f2-a690-ee51397ece6a\",\n                                \"lastEdited\": \"2019-09-24T03:14:29\",\n                                \"firstName\": \"GST\",\n                                \"lastName\": \"Contractor\",\n                                \"totalEarnings\": 800,\n                                \"grossEarnings\": 800,\n                                \"totalPay\": 760,\n                                \"totalEmployerTaxes\": 0,\n                                \"totalEmployeeTaxes\": 160,\n                                \"totalDeductions\": 0,\n                                \"totalReimbursements\": 120,\n                                \"totalStatutoryDeductions\": 0,\n                                \"totalSuperannuation\": 0,\n                                \"bacsHash\": null,\n                                \"paymentMethod\": \"Electronically\"\n                              },\n                              {\n                                \"paySlipID\": \"f98b6411-7755-41f7-8d89-a3475eadf866\",\n                                \"employeeID\": \"2e63a4ff-e911-44fc-8290-a65ec7299b30\",\n                                \"lastEdited\": \"2019-09-24T03:14:06\",\n                                \"firstName\": \"Dairy\",\n                                \"lastName\": \"Milker\",\n                                \"totalEarnings\": 1353.85,\n                                \"grossEarnings\": 1353.85,\n                                \"totalPay\": 726.83,\n                                \"totalEmployerTaxes\": 22.11,\n                                \"totalEmployeeTaxes\": 290.97,\n                                \"totalDeductions\": 200,\n                                \"totalReimbursements\": 21.33,\n                                \"totalStatutoryDeductions\": 157.38,\n                                \"totalSuperannuation\": 67.69,\n                                \"bacsHash\": null,\n                                \"paymentMethod\": \"Electronically\"\n                              },\n                              {\n                                \"paySlipID\": \"0923bc21-900e-4660-b37c-127c59bd4b12\",\n                                \"employeeID\": \"9126967a-99a1-4b46-a0f3-43e28737756e\",\n                                \"lastEdited\": \"2019-09-24T03:14:15\",\n                                \"firstName\": \"General\",\n                                \"lastName\": \"Manager\",\n                                \"totalEarnings\": 1730.77,\n                                \"grossEarnings\": 1730.77,\n                                \"totalPay\": 1151.71,\n                                \"totalEmployerTaxes\": 22.77,\n                                \"totalEmployeeTaxes\": 410.6,\n                                \"totalDeductions\": 30,\n                                \"totalReimbursements\": 0,\n                                \"totalStatutoryDeductions\": 138.46,\n                                \"totalSuperannuation\": 69.23,\n                                \"bacsHash\": null,\n                                \"paymentMethod\": \"Electronically\"\n                              },\n                              {\n                                \"paySlipID\": \"df88d132-3cd6-43f3-8c4a-28ca53406138\",\n                                \"employeeID\": \"ae679eeb-8708-4e3b-afe9-2de117a7f68f\",\n                                \"lastEdited\": \"2019-09-24T03:18:06\",\n                                \"firstName\": \"Part-time\",\n                                \"lastName\": \"Worker\",\n                                \"totalEarnings\": 450,\n                                \"grossEarnings\": 450,\n                                \"totalPay\": 339.45,\n                                \"totalEmployerTaxes\": 2.27,\n                                \"totalEmployeeTaxes\": 66.15,\n                                \"totalDeductions\": 0,\n                                \"totalReimbursements\": 0,\n                                \"totalStatutoryDeductions\": 44.4,\n                                \"totalSuperannuation\": 13.5,\n                                \"bacsHash\": null,\n                                \"paymentMethod\": \"Electronically\"\n                              },\n                              {\n                                \"paySlipID\": \"ae8d94e8-c30f-4b19-88df-a68c1bda2b90\",\n                                \"employeeID\": \"45e50e4b-7979-4d3b-b943-8c4f0cb9df3d\",\n                                \"lastEdited\": \"2019-09-24T03:18:25\",\n                                \"firstName\": \"Permanent\",\n                                \"lastName\": \"Worker\",\n                                \"totalEarnings\": 1400,\n                                \"grossEarnings\": 1400,\n                                \"totalPay\": 1021.82,\n                                \"totalEmployerTaxes\": 13.86,\n                                \"totalEmployeeTaxes\": 300.18,\n                                \"totalDeductions\": 22,\n                                \"totalReimbursements\": 0,\n                                \"totalStatutoryDeductions\": 56,\n                                \"totalSuperannuation\": 42,\n                                \"bacsHash\": null,\n                                \"paymentMethod\": \"Electronically\"\n                              }\n                            ],\n                            \"payslipMessage\": null,\n                            \"invalidPayeeIDs\": null\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PayRun'\n            example: '{\n                        \"paymentDate\": \"2019-07-01\"\n                      }'\n  /PaySlips:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.payslip, payroll.payslip.read]\n      tags:\n        - PayrollNz\n      operationId: getPaySlips\n      x-hasPayrollUkProblem: true\n      summary: Retrieves payslips\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n        - in: query\n          required: true\n          name: PayRunID\n          x-snake: pay_run_id\n          description: PayrunID which specifies the containing payrun of payslips to retrieve. By default, the API does not group payslips by payrun.\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaySlips'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T22:55:58.6809685\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 6\n                          },\n                          \"problem\": null,\n                          \"paySlips\": [\n                            {\n                              \"paySlipID\": \"17d88883-686a-400f-9551-34fa366effc4\",\n                              \"employeeID\": \"68342973-c405-4b86-b5d3-d7b877c27995\",\n                              \"payRunID\": \"be103bd8-321b-419f-8177-48280560771a\",\n                              \"lastEdited\": \"2019-09-23T02:13:29\",\n                              \"firstName\": \"Tony\",\n                              \"lastName\": \"Starkmzamlagmdison\",\n                              \"totalEarnings\": 162,\n                              \"grossEarnings\": 162,\n                              \"totalPay\": 137.88,\n                              \"totalEmployerTaxes\": 0.7,\n                              \"totalEmployeeTaxes\": 19.26,\n                              \"totalDeductions\": 0,\n                              \"totalReimbursements\": 0,\n                              \"totalStatutoryDeductions\": 4.86,\n                              \"totalSuperannuation\": 4.86,\n                              \"bacsHash\": null,\n                              \"paymentMethod\": \"Electronically\",\n                              \"earningsLines\": [\n                                {\n                                  \"earningsLineID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                  \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                  \"displayName\": \"Ordinary Time\",\n                                  \"ratePerUnit\": 25,\n                                  \"numberOfUnits\": 6,\n                                  \"fixedAmount\": null,\n                                  \"amount\": 150,\n                                  \"isLinkedToTimesheet\": false,\n                                  \"isAverageDailyPayRate\": null,\n                                  \"isSystemGenerated\": true\n                                }\n                              ],\n                              \"leaveEarningsLines\": [\n                                {\n                                  \"earningsLineID\": \"0441497f-5dc7-4cd3-a90d-f2e07e21b2a6\",\n                                  \"earningsRateID\": \"39b3560a-5d2f-4538-924a-4349dc86396e\",\n                                  \"displayName\": \"Holiday Pay\",\n                                  \"ratePerUnit\": null,\n                                  \"numberOfUnits\": null,\n                                  \"fixedAmount\": 12,\n                                  \"amount\": 12,\n                                  \"isLinkedToTimesheet\": false,\n                                  \"isAverageDailyPayRate\": null,\n                                  \"isSystemGenerated\": true\n                                }\n                              ],\n                              \"timesheetEarningsLines\": [],\n                              \"deductionLines\": [],\n                              \"reimbursementLines\": [],\n                              \"leaveAccrualLines\": [\n                                {\n                                  \"leaveTypeID\": \"0441497f-5dc7-4cd3-a90d-f2e07e21b2a6\",\n                                  \"numberOfUnits\": 12\n                                },\n                                {\n                                  \"leaveTypeID\": \"b0b1b79e-2a25-46c2-ad08-ca25ef48d7e4\",\n                                  \"numberOfUnits\": 0\n                                },\n                                {\n                                  \"leaveTypeID\": \"f2f994cf-1899-46f3-ad4f-5d92d78c3719\",\n                                  \"numberOfUnits\": 0\n                                },\n                                {\n                                  \"leaveTypeID\": \"34129765-11cb-4d8c-b568-84a2219beda3\",\n                                  \"numberOfUnits\": 0\n                                }\n                              ],\n                              \"superannuationLines\": [\n                                {\n                                  \"superannuationTypeID\": \"563273ea-0dae-4f82-86a4-e0db77c008ea\",\n                                  \"displayName\": \"KiwiSaver\",\n                                  \"amount\": 4.86,\n                                  \"fixedAmount\": null,\n                                  \"percentage\": 3,\n                                  \"manualAdjustment\": false\n                                }\n                              ],\n                              \"paymentLines\": [\n                                {\n                                  \"paymentLineID\": \"a300f7c3-e934-4e67-84c5-d8687cf4a2b4\",\n                                  \"amount\": 137.88,\n                                  \"accountNumber\": \"0607050201419000\",\n                                  \"sortCode\": null,\n                                  \"accountName\": \"Casual Worker\"\n                                }\n                              ],\n                              \"employeeTaxLines\": [\n                                {\n                                  \"taxLineID\": \"1d7c6670-c227-4de9-a7fc-fbf7ec16a804\",\n                                  \"description\": null,\n                                  \"amount\": 19.26,\n                                  \"globalTaxTypeID\": 11,\n                                  \"manualAdjustment\": false\n                                }\n                              ],\n                              \"employerTaxLines\": [\n                                {\n                                  \"taxLineID\": \"b790f489-9bbf-4979-a987-53dddf8b648f\",\n                                  \"description\": null,\n                                  \"amount\": 0.7,\n                                  \"globalTaxTypeID\": 10,\n                                  \"manualAdjustment\": false\n                                }\n                              ],\n                              \"statutoryDeductionLines\": [\n                                {\n                                  \"statutoryDeductionTypeID\": \"b5efd8d1-0c93-4a14-a314-b5cba4a4e6b3\",\n                                  \"amount\": 4.86,\n                                  \"fixedAmount\": null,\n                                  \"manualAdjustment\": null\n                                }\n                              ],\n                              \"taxSettings\": {\n                                \"periodUnits\": 1.0,\n                                \"periodType\": \"weeks\",\n                                \"taxCode\": \"M\",\n                                \"specialTaxRate\": null,\n                                \"lumpSumTaxCode\": \"SB\",\n                                \"lumpSumAmount\": null\n                              },\n                              \"grossEarningsHistory\": {\n                                \"daysPaid\": 1,\n                                \"unpaidWeeks\": 0\n                              }\n                            }\n                          ]\n                        }'\n  /PaySlips/{PaySlipID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.payslip, payroll.payslip.read]\n      tags:\n        - PayrollNz\n      operationId: getPaySlip\n      x-hasPayrollUkProblem: true\n      summary: Retrieves a specific payslip by a unique pay slip ID\n      parameters:\n        - in: path\n          name: PaySlipID\n          x-snake: pay_slip_id\n          required: true\n          description: Identifier for the payslip\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaySlipObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T22:55:59.3854985\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"paySlip\": {\n                            \"paySlipID\": \"17d88883-686a-400f-9551-34fa366effc4\",\n                            \"employeeID\": \"68342973-c405-4b86-b5d3-d7b877c27995\",\n                            \"payRunID\": \"be103bd8-321b-419f-8177-48280560771a\",\n                            \"lastEdited\": \"2019-09-23T02:13:29\",\n                            \"firstName\": \"Tony\",\n                            \"lastName\": \"Starkmzamlagmdison\",\n                            \"totalEarnings\": 162,\n                            \"grossEarnings\": 162,\n                            \"totalPay\": 137.88,\n                            \"totalEmployerTaxes\": 0.7,\n                            \"totalEmployeeTaxes\": 19.26,\n                            \"totalDeductions\": 0,\n                            \"totalReimbursements\": 0,\n                            \"totalStatutoryDeductions\": 4.86,\n                            \"totalSuperannuation\": 4.86,\n                            \"bacsHash\": null,\n                            \"paymentMethod\": \"Electronically\",\n                            \"earningsLines\": [\n                              {\n                                \"earningsLineID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"displayName\": \"Ordinary Time\",\n                                \"ratePerUnit\": 25,\n                                \"numberOfUnits\": 6,\n                                \"fixedAmount\": null,\n                                \"amount\": 150,\n                                \"isLinkedToTimesheet\": false,\n                                \"isAverageDailyPayRate\": null,\n                                \"isSystemGenerated\": true\n                              }\n                            ],\n                            \"leaveEarningsLines\": [\n                              {\n                                \"earningsLineID\": \"0441497f-5dc7-4cd3-a90d-f2e07e21b2a6\",\n                                \"earningsRateID\": \"39b3560a-5d2f-4538-924a-4349dc86396e\",\n                                \"displayName\": \"Holiday Pay\",\n                                \"ratePerUnit\": null,\n                                \"numberOfUnits\": null,\n                                \"fixedAmount\": 12,\n                                \"amount\": 12,\n                                \"isLinkedToTimesheet\": false,\n                                \"isAverageDailyPayRate\": null,\n                                \"isSystemGenerated\": true\n                              }\n                            ],\n                            \"timesheetEarningsLines\": [],\n                            \"deductionLines\": [],\n                            \"reimbursementLines\": [],\n                            \"leaveAccrualLines\": [\n                              {\n                                \"leaveTypeID\": \"0441497f-5dc7-4cd3-a90d-f2e07e21b2a6\",\n                                \"numberOfUnits\": 12\n                              },\n                              {\n                                \"leaveTypeID\": \"b0b1b79e-2a25-46c2-ad08-ca25ef48d7e4\",\n                                \"numberOfUnits\": 0\n                              },\n                              {\n                                \"leaveTypeID\": \"f2f994cf-1899-46f3-ad4f-5d92d78c3719\",\n                                \"numberOfUnits\": 0\n                              },\n                              {\n                                \"leaveTypeID\": \"34129765-11cb-4d8c-b568-84a2219beda3\",\n                                \"numberOfUnits\": 0\n                              }\n                            ],\n                            \"superannuationLines\": [\n                              {\n                                \"superannuationTypeID\": \"563273ea-0dae-4f82-86a4-e0db77c008ea\",\n                                \"displayName\": \"KiwiSaver\",\n                                \"amount\": 4.86,\n                                \"fixedAmount\": null,\n                                \"percentage\": 3,\n                                \"manualAdjustment\": false\n                              }\n                            ],\n                            \"paymentLines\": [\n                              {\n                                \"paymentLineID\": \"a300f7c3-e934-4e67-84c5-d8687cf4a2b4\",\n                                \"amount\": 137.88,\n                                \"accountNumber\": \"0607050201419000\",\n                                \"sortCode\": null,\n                                \"accountName\": \"Casual Worker\"\n                              }\n                            ],\n                            \"employeeTaxLines\": [\n                              {\n                                \"taxLineID\": \"1d7c6670-c227-4de9-a7fc-fbf7ec16a804\",\n                                \"description\": null,\n                                \"amount\": 19.26,\n                                \"globalTaxTypeID\": 11,\n                                \"manualAdjustment\": false\n                              }\n                            ],\n                            \"employerTaxLines\": [\n                              {\n                                \"taxLineID\": \"b790f489-9bbf-4979-a987-53dddf8b648f\",\n                                \"description\": null,\n                                \"amount\": 0.7,\n                                \"globalTaxTypeID\": 10,\n                                \"manualAdjustment\": false\n                              }\n                            ],\n                            \"statutoryDeductionLines\": [\n                              {\n                                \"statutoryDeductionTypeID\": \"b5efd8d1-0c93-4a14-a314-b5cba4a4e6b3\",\n                                \"amount\": 4.86,\n                                \"fixedAmount\": null,\n                                \"manualAdjustment\": null\n                              }\n                            ],\n                            \"taxSettings\": {\n                              \"periodUnits\": 1.0,\n                              \"periodType\": \"weeks\",\n                              \"taxCode\": \"M\",\n                              \"specialTaxRate\": null,\n                              \"lumpSumTaxCode\": \"SB\",\n                              \"lumpSumAmount\": null\n                            },\n                            \"grossEarningsHistory\": {\n                              \"daysPaid\": 1,\n                              \"unpaidWeeks\": 0\n                            }\n                          }\n                        }'\n    put:\n      security:\n        - OAuth2: [payroll.payslip]\n      tags:\n        - PayrollNz\n      operationId: updatePaySlipLineItems\n      x-hasPayrollUkProblem: true\n      x-example:\n        - earningsLine:\n          key: earningsLine\n          keyPascal: EarningsLine\n          keySnake: earnings_line\n          is_object: true\n        - earningsLineID:\n          key: earningsLineID\n          keyPascal: EarningsLineID\n          keySnake: earnings_line_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: earningsLine\n        - earningsRateID:\n          key: earningsRateID\n          keyPascal: EarningsRateID\n          keySnake: earnings_rate_id\n          is_uuid: true\n          default: \"00000000-0000-0000-0000-000000000000\"\n          object: earningsLine\n        - ratePerUnit:\n          key: ratePerUnit\n          keyPascal: RatePerUnit\n          keySnake: rate_per_unit\n          nonString: true \n          default: 14.25\n          is_money: true \n          object: earningsLine\n        - numberOfUnits:\n          key: numberOfUnits\n          keyPascal: NumberOfUnits\n          keySnake: number_of_units\n          default: 35.50\n          nonString: true \n          is_money: true \n          object: earningsLine\n        - isAverageDailyPayRate:\n          key: isAverageDailyPayRate\n          keyPascal: IsAverageDailyPayRate\n          keySnake: is_average_daily_pay_rate\n          nonString: true \n          default: true \n          object: earningsLine\n        - isSystemGenerated:\n          key: isSystemGenerated\n          keyPascal: IsSystemGenerated\n          keySnake: is_system_generated\n          default: true \n          nonString: true \n          is_last: true\n          object: earningsLine\n        - earningsLines:\n          is_list: true\n          key: earningsLines\n          keyPascal: EarningsLines\n          keySnake: earnings_lines\n          csharp: EarningsLine\n          java: EarningsLine\n        - addEarningsLine:\n          is_last: true\n          is_list_add: true\n          key: earningsLines\n          keyPascal: EarningsLines\n          keySnake: earnings_lines\n          java: EarningsLines\n          python: earnings_line\n          ruby: earnings_line\n          csharp: EarningsLine\n          object: earningsLine\n        - paySlip:\n          key: paySlip\n          keyPascal: PaySlip\n          keySnake: pay_slip\n          is_object: true\n        - setEarningsLines:\n          is_last: true\n          is_variable: true\n          nonString: true\n          key: earningsLines\n          keyPascal: EarningsLines\n          default: earningsLines\n          python: earnings_lines\n          ruby: earnings_lines\n          object: paySlip  \n      summary: Creates an employee pay slip\n      parameters:\n        - in: path\n          name: PaySlipID\n          x-snake: pay_slip_id\n          required: true\n          description: Identifier for the payslip\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaySlipObject'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-09-10T17:20:24.2970169\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"paySlip\": {\n                            \"paySlipID\": \"51a01760-cf9d-4ba1-bf3a-2065d4f8e073\",\n                            \"employeeID\": \"68342973-c405-4b86-b5d3-d7b877c27995\",\n                            \"payRunID\": \"8ba9831d-38e4-43d4-808e-472a5d195bce\",\n                            \"lastEdited\": \"2020-09-10T17:20:23.7335017\",\n                            \"firstName\": \"Tony\",\n                            \"lastName\": \"Starkwpjgdjxdvwson\",\n                            \"totalEarnings\": 3628.8,\n                            \"grossEarnings\": 3628.8,\n                            \"totalPay\": 2362.72,\n                            \"totalEmployerTaxes\": 18.9,\n                            \"totalEmployeeTaxes\": 1057.22,\n                            \"totalDeductions\": 100,\n                            \"totalReimbursements\": 0,\n                            \"totalStatutoryDeductions\": 108.86,\n                            \"totalSuperannuation\": 108.86,\n                            \"bacsHash\": null,\n                            \"paymentMethod\": \"Electronically\",\n                            \"earningsLines\": [\n                              {\n                                \"earningsLineID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                                \"displayName\": \"Ordinary Time\",\n                                \"ratePerUnit\": 25,\n                                \"numberOfUnits\": 0,\n                                \"fixedAmount\": null,\n                                \"amount\": 0,\n                                \"isLinkedToTimesheet\": false,\n                                \"isAverageDailyPayRate\": null,\n                                \"isSystemGenerated\": true\n                              },\n                              {\n                                \"earningsLineID\": \"65b83d94-f20f-45e1-85ae-387fcf460c26\",\n                                \"earningsRateID\": \"65b83d94-f20f-45e1-85ae-387fcf460c26\",\n                                \"displayName\": \"Salary\",\n                                \"ratePerUnit\": 0,\n                                \"numberOfUnits\": 8,\n                                \"fixedAmount\": null,\n                                \"amount\": 0,\n                                \"isLinkedToTimesheet\": false,\n                                \"isAverageDailyPayRate\": null,\n                                \"isSystemGenerated\": false\n                              }\n                            ],\n                            \"leaveEarningsLines\": [\n                              {\n                                \"earningsLineID\": \"0441497f-5dc7-4cd3-a90d-f2e07e21b2a6\",\n                                \"earningsRateID\": \"39b3560a-5d2f-4538-924a-4349dc86396e\",\n                                \"displayName\": \"Holiday Pay\",\n                                \"ratePerUnit\": null,\n                                \"numberOfUnits\": null,\n                                \"fixedAmount\": 268.8,\n                                \"amount\": 268.8,\n                                \"isLinkedToTimesheet\": false,\n                                \"isAverageDailyPayRate\": null,\n                                \"isSystemGenerated\": true\n                              }\n                            ],\n                            \"timesheetEarningsLines\": [],\n                            \"deductionLines\": [\n                              {\n                                \"deductionTypeID\": \"a3760fe4-68a4-4e38-8326-fe616af7dc74\",\n                                \"displayName\": \"KiwiSaver Voluntary Contributions\",\n                                \"amount\": 100,\n                                \"subjectToTax\": null,\n                                \"percentage\": null\n                              }\n                            ],\n                            \"reimbursementLines\": [],\n                            \"leaveAccrualLines\": [\n                              {\n                                \"leaveTypeID\": \"0441497f-5dc7-4cd3-a90d-f2e07e21b2a6\",\n                                \"numberOfUnits\": 268.8\n                              },\n                              {\n                                \"leaveTypeID\": \"b0b1b79e-2a25-46c2-ad08-ca25ef48d7e4\",\n                                \"numberOfUnits\": 0\n                              },\n                              {\n                                \"leaveTypeID\": \"f2f994cf-1899-46f3-ad4f-5d92d78c3719\",\n                                \"numberOfUnits\": 0\n                              },\n                              {\n                                \"leaveTypeID\": \"34129765-11cb-4d8c-b568-84a2219beda3\",\n                                \"numberOfUnits\": 0\n                              }\n                            ],\n                            \"superannuationLines\": [\n                              {\n                                \"superannuationTypeID\": \"563273ea-0dae-4f82-86a4-e0db77c008ea\",\n                                \"displayName\": \"KiwiSaver\",\n                                \"amount\": 108.86,\n                                \"fixedAmount\": 3,\n                                \"percentage\": 3,\n                                \"manualAdjustment\": false\n                              }\n                            ],\n                            \"paymentLines\": [\n                              {\n                                \"paymentLineID\": \"6dc42925-2a11-4041-ac9a-4098e77791d5\",\n                                \"amount\": 2262.72,\n                                \"accountNumber\": \"0607050201419000\",\n                                \"sortCode\": null,\n                                \"accountName\": \"Casual Worker\"\n                              },\n                              {\n                                \"paymentLineID\": \"30d6d414-426b-417d-8d0d-d05ca0e5bc88\",\n                                \"amount\": 100,\n                                \"accountNumber\": \"1234448494848373\",\n                                \"sortCode\": null,\n                                \"accountName\": \"test\"\n                              }\n                            ],\n                            \"employeeTaxLines\": [\n                              {\n                                \"taxLineID\": \"2faf8f5d-6446-4bea-a2cd-d5cd7e8b9384\",\n                                \"description\": null,\n                                \"amount\": 1057.22,\n                                \"globalTaxTypeID\": 11,\n                                \"manualAdjustment\": false\n                              }\n                            ],\n                            \"employerTaxLines\": [\n                              {\n                                \"taxLineID\": \"caa8d4fa-0949-460d-90f5-f43ec9f3db12\",\n                                \"description\": null,\n                                \"amount\": 18.9,\n                                \"globalTaxTypeID\": 10,\n                                \"manualAdjustment\": false\n                              }\n                            ],\n                            \"statutoryDeductionLines\": [\n                              {\n                                \"statutoryDeductionTypeID\": \"b5efd8d1-0c93-4a14-a314-b5cba4a4e6b3\",\n                                \"amount\": 108.86,\n                                \"fixedAmount\": null,\n                                \"manualAdjustment\": null\n                              }\n                            ],\n                            \"taxSettings\": {\n                              \"periodUnits\": 1.0,\n                              \"periodType\": \"weeks\",\n                              \"taxCode\": \"M\",\n                              \"specialTaxRate\": null,\n                              \"lumpSumTaxCode\": \"SB\",\n                              \"lumpSumAmount\": null\n                            },\n                            \"grossEarningsHistory\": {\n                              \"daysPaid\": 3,\n                              \"unpaidWeeks\": 0\n                            }\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaySlip'\n            example: '{\n                        \"earningsLines\": [\n                          {\n                            \"earningsLineID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                            \"earningsRateID\": \"f9d8f5b5-9049-47f4-8541-35e200f750a5\",\n                            \"displayName\": \"Ordinary Time\",\n                            \"ratePerUnit\": 25,\n                            \"numberOfUnits\": 0,\n                            \"amount\": 0,\n                            \"isLinkedToTimesheet\": false,\n                            \"isSystemGenerated\": true\n                          },\n                          {\n                            \"earningsLineID\": \"65b83d94-f20f-45e1-85ae-387fcf460c26\",\n                            \"earningsRateID\": \"65b83d94-f20f-45e1-85ae-387fcf460c26\",\n                            \"displayName\": \"Salary\",\n                            \"ratePerUnit\": 0,\n                            \"numberOfUnits\": 8,\n                            \"amount\": 0,\n                            \"isLinkedToTimesheet\": false,\n                            \"isSystemGenerated\": false\n                          }\n                        ],\n                        \"leaveEarningsLines\": [\n                          {\n                            \"earningsLineID\": \"0441497f-5dc7-4cd3-a90d-f2e07e21b2a6\",\n                            \"earningsRateID\": \"39b3560a-5d2f-4538-924a-4349dc86396e\",\n                            \"displayName\": \"Holiday Pay\",\n                            \"fixedAmount\": 268.8,\n                            \"amount\": 268.8,\n                            \"isLinkedToTimesheet\": false,\n                            \"isSystemGenerated\": true\n                          }\n                        ],\n                        \"deductionLines\": [\n                          {\n                            \"deductionTypeID\": \"a3760fe4-68a4-4e38-8326-fe616af7dc74\",\n                            \"amount\": 100\n                          }\n                        ],\n                        \"leaveAccrualLines\": [\n                          {\n                            \"leaveTypeID\": \"0441497f-5dc7-4cd3-a90d-f2e07e21b2a6\",\n                            \"numberOfUnits\": 268.8\n                          },\n                          {\n                            \"leaveTypeID\": \"b0b1b79e-2a25-46c2-ad08-ca25ef48d7e4\",\n                            \"numberOfUnits\": 0\n                          },\n                          {\n                            \"leaveTypeID\": \"f2f994cf-1899-46f3-ad4f-5d92d78c3719\",\n                            \"numberOfUnits\": 0\n                          },\n                          {\n                            \"leaveTypeID\": \"34129765-11cb-4d8c-b568-84a2219beda3\",\n                            \"numberOfUnits\": 0\n                          }\n                        ],\n                        \"superannuationLines\": [\n                          {\n                            \"superannuationTypeID\": \"563273ea-0dae-4f82-86a4-e0db77c008ea\",\n                            \"displayName\": \"KiwiSaver\",\n                            \"amount\": 108.86,\n                            \"fixedAmount\": 3,\n                            \"percentage\": 3,\n                            \"manualAdjustment\": false\n                          }\n                        ],\n                        \"employeeTaxLines\": [\n                          {\n                            \"taxLineID\": \"1084146b-e890-489c-aed3-06de80f63d84\",\n                            \"amount\": 1057.22,\n                            \"globalTaxTypeID\": \"11\",\n                            \"manualAdjustment\": false\n                          }\n                        ],\n                        \"employerTaxLines\": [\n                          {\n                            \"taxLineID\": \"6f9eb8cd-0f4a-440b-939c-bdb0f6ad694c\",\n                            \"amount\": 18.9,\n                            \"globalTaxTypeID\": \"10\",\n                            \"manualAdjustment\": false\n                          }\n                        ],\n                        \"statutoryDeductionLines\": [\n                          {\n                            \"statutoryDeductionTypeID\": \"b5efd8d1-0c93-4a14-a314-b5cba4a4e6b3\",\n                            \"amount\": 108.86\n                          }\n                        ],\n                        \"grossEarningsHistory\": {\n                          \"daysPaid\": 3,\n                          \"unpaidWeeks\": 0\n                        }\n                      }'\n  /Settings:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings, payroll.settings.read]\n      tags:\n        - PayrollNz\n      operationId: getSettings\n      x-hasPayrollUkProblem: true\n      summary: Retrieves settings\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Settings'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T22:18:40.4518638\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"settings\": {\n                            \"accounts\": [\n                              {\n                                \"accountID\": \"fa5cdc43-643b-4ad8-b4ac-3ffe0d0f4488\",\n                                \"type\": \"PAYELIABILITY\",\n                                \"code\": \"825\",\n                                \"name\": \"PAYE Payable\"\n                              },\n                              {\n                                \"accountID\": \"e529775e-ea49-4a19-86f0-8d3e1ecda2cd\",\n                                \"type\": \"WAGESPAYABLE\",\n                                \"code\": \"814\",\n                                \"name\": \"Wages Payable - Payroll\"\n                              },\n                              {\n                                \"accountID\": \"1c91e520-a12b-45cc-8194-99950858e5bf\",\n                                \"type\": \"WAGESEXPENSE\",\n                                \"code\": \"477\",\n                                \"name\": \"Salaries\"\n                              },\n                              {\n                                \"accountID\": \"ac993f75-035b-433c-82e0-7b7a2d40802c\",\n                                \"type\": \"BANK\",\n                                \"code\": \"090\",\n                                \"name\": \"Business Bank Account\"\n                              }\n                            ]\n                          }\n                        }'\n  /Settings/TrackingCategories:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings, payroll.settings.read]\n      tags:\n        - PayrollNz\n      operationId: getTrackingCategories\n      x-hasPayrollUkProblem: true\n      summary: Retrieves tracking categories\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrackingCategories'\n              example: '{\n                          \"id\": \"00000000-0000-0000-0000-000000000000\",\n                          \"providerName\": \"provider-name\",\n                          \"dateTimeUTC\": \"2020-08-28T22:18:50.0075482\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"trackingCategories\": {\n                            \"employeeGroupsTrackingCategoryID\": \"351953c4-8127-4009-88c3-f9cd8c9cbe9f\",\n                            \"timesheetTrackingCategoryID\": \"f8c0b291-be04-497a-a083-dd9cd19658b5\"\n                          }\n                        }'\ncomponents:\n  securitySchemes:\n    OAuth2:\n      type: oauth2\n      description: For more information visit https://developer.xero.com/documentation/oauth2/overview\n      flows: \n        authorizationCode:\n          authorizationUrl: 'https://login.xero.com/identity/connect/authorize'\n          tokenUrl: 'https://identity.xero.com/connect/token'\n          scopes:\n            payroll.employees: Grant read-write access to payroll employees\n            payroll.employees.read: Grant read-only access to payroll employees\n            payroll.payruns: Grant read-write access to payroll payruns\n            payroll.payruns.read: Grant read-only access to payroll payruns\n            payroll.payslip: Grant read-write access to payroll payslips\n            payroll.payslip.read: Grant read-only access to payroll payslips\n            payroll.settings: Grant read-write access to payroll settings\n            payroll.settings.read: Grant read-only access to payroll settings\n            payroll.timesheets: Grant read-write access to payroll timesheets\n            payroll.timesheets.read: Grant read-only access to payroll timesheets\n  parameters:\n    requiredHeader: \n      in: header\n      name: Xero-Tenant-Id\n      x-snake: xero_tenant_id\n      description: Xero identifier for Tenant\n      schema:\n        type: string\n      required: true \n  schemas:\n    Pagination:\n      properties:\n        page:\n          type: integer\n          example: 1\n        pageSize:\n          type: integer\n          example: 10\n        pageCount:\n          type: integer\n          example: 1\n        itemCount:\n          type: integer\n          example: 2\n    Problem:\n      description: The object returned for a bad request\n      type: object\n      properties:\n        type: \n          description: The type of error format \n          type: string\n          example: application/problem+json\n        title:\n          description: The type of the error\n          type: string\n          example: BadRequest\n        status:\n          description: The error status code \n          type: string\n          example: 400\n        detail:\n          description: A description of the error\n          type: string\n          example: Validation error occurred.\n        instance: \n          type: string\n        invalidFields:\n          type: array\n          items:\n            $ref: '#/components/schemas/InvalidField'\n    InvalidField:\n      type: object\n      properties:\n        name:\n          description: The name of the field that caused the error\n          type: string\n          example: DateOfBirth\n        reason:\n          description: The reason the error occurred\n          type: string\n          example: The Date of Birth is required.  \n    Employees:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        employees:\n          type: array\n          items:\n            $ref: '#/components/schemas/Employee'\n    EmployeeObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        employee:\n          $ref: '#/components/schemas/Employee'\n        problem:\n          $ref: '#/components/schemas/Problem'\n    Employee:\n      type: object\n      required:\n        - FirstName\n        - LastName\n        - DateOfBirth\n        - Address\n      properties:\n        employeeID:\n          description:  Xero unique identifier for the employee\n          type: string\n          format: uuid\n          example: d90457c4-f1be-4f2e-b4e3-f766390a7e30\n        title:\n          description: Title of the employee\n          type: string\n          example: Mrs\n        firstName:\n          description: First name of employee\n          type: string\n          example: Karen\n        lastName:\n          description: Last name of employee\n          type: string\n          example: Jones\n        dateOfBirth:\n          description: Date of birth of the employee (YYYY-MM-DD)\n          type: string\n          format: date\n          example: 2019-01-02  \n          x-is-date: true \n        address:\n          $ref: '#/components/schemas/Address'\n        email:\n          description: The email address for the employee\n          type: string\n          example: developer@me.com\n        gender:\n          description: The employee’s gender\n          type: string\n          enum:\n          - M  \n          - F \n          example: F\n        phoneNumber:\n          description: Employee phone number\n          type: string\n          example: 415-555-1212\n        startDate:\n          description: Employment start date of the employee at the time it was requested\n          type: string\n          format: date\n          example: 2020-01-19\n          x-is-date: true\n        endDate:\n          description: Employment end date of the employee at the time it was requested\n          type: string\n          format: date\n          example: 2020-01-19\n          x-is-date: true\n        payrollCalendarID:\n          description: Xero unique identifier for the payroll calendar of the employee\n          type: string\n          format: uuid\n        updatedDateUTC:\n          description: UTC timestamp of last update to the employee\n          type: string\n          format: date-time\n          x-is-datetime: true\n        createdDateUTC:\n          description: UTC timestamp when the employee was created in Xero\n          type: string\n          format: date-time\n          x-is-datetime: true\n    EmploymentObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        employment:\n          $ref: '#/components/schemas/Employment'\n    Employment:\n      type: object\n      required:\n        - PayrollCalendarID\n        - StartDate\n      properties:\n        payrollCalendarID:\n          description: Xero unique identifier for the payroll calendar of the employee\n          type: string\n          format: uuid\n        payRunCalendarID:\n          description: Xero unique identifier for the payrun calendar for the employee (Deprecated in version 1.1.6)\n          type: string\n          format: uuid\n        startDate:\n          description: Start date of the employment (YYYY-MM-DD)\n          type: string\n          format: date\n          x-is-date: true \n    EmployeeTaxObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        employeeTax:\n          $ref: '#/components/schemas/EmployeeTax'\n    EmployeeTax:\n      type: object\n      properties:\n        irdNumber:\n          description: The IRD Number.\n          type: string\n          example: 111111111\n        taxCode:\n          $ref: '#/components/schemas/TaxCode'\n        specialTaxRatePercentage:\n          description: Special tax rate percentage.\n          type: number\n          format: double\n          x-is-money: true\n          example: 17.5\n        hasSpecialStudentLoanRate:\n          description: Does the employee has a special student loan rate?\n          type: boolean\n          example: true        \n        specialStudentLoanRatePercentage:\n          description: The employee student loan rate percentage.\n          type: number\n          format: double\n          x-is-money: true\n          example: 2.0\n        isEligibleForKiwiSaver:\n          description: The employee eligibility for KiwiSaver.\n          type: boolean\n          example: true       \n        esctRatePercentage:\n          description: Employer superannuation contribution tax rate.\n          type: number\n          format: double\n          x-is-money: true\n          example: 1.0\n        kiwiSaverContributions:\n          description: Contribution Option which can be 'MakeContributions' 'OptOut', 'OnAContributionsHoliday', 'OnASavingsSuspension', 'NotCurrentlyAKiwiSaverMember' for employees without a KiwiSaver membership\n          type: string\n          example: MakeContributions\n          enum:\n          - MakeContributions\n          - OptOut\n          - OnAContributionsHoliday\n          - OnASavingsSuspension\n          - NotCurrentlyAKiwiSaverMember\n        kiwiSaverEmployeeContributionRatePercentage:\n          description: Employee Contribution percentage.\n          type: number\n          format: double\n          x-is-money: true\n          example: 4.0\n        kiwiSaverEmployerContributionRatePercentage:\n          description: Employer Contribution percentage.\n          type: number\n          format: double\n          x-is-money: true\n          example: 10.0       \n        kiwiSaverEmployerSalarySacrificeContributionRatePercentage:\n          description: Employer Contribution through Salary Sacrifice percentage.\n          type: number\n          format: double\n          x-is-money: true\n          example: 2.0\n        kiwiSaverOptOutDate:\n          description: Opt Out Date.\n          type: string\n          format: date\n          x-is-date: true \n          example: \"2020-06-01T00:00:00\"        \n        kiwiSaverContributionHolidayEndDate:\n          description: Contribution holiday expiry date or end date.\n          type: string\n          format: date\n          x-is-date: true \n          example: \"2019-06-01T00:00:00\"\n        hasStudentLoanBalance:\n          description: Does the employee have a remaining student loan balance? Set a remaining balance if you have received a letter from IR.\n          type: boolean\n          example: false\n        studentLoanBalance:\n          description: The employee's student loan balance shown on the letter from IR.\n          type: number\n          format: double\n          x-is-money: true\n          example: 30.0000\n        studentLoanAsAt:\n          description: The date of the letter from IR.\n          type: string\n          format: date\n          x-is-date: true \n          example: \"2020-07-01T00:00:00\"\n    TaxCode:\n      description: Tax codes used for employee tax\n      type: string\n      enum:\n      - ND\n      - M\n      - ME\n      - MSL\n      - MESL\n      - SB\n      - S\n      - SH\n      - ST\n      - SBSL\n      - SSL\n      - SHSL\n      - STSL\n      - WT\n      - CAE\n      - EDW\n      - NSW\n      - STC\n      - STCSL\n    EmployeeOpeningBalancesObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        openingBalances:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmployeeOpeningBalance'\n    EmployeeOpeningBalances:\n      type: array\n      items:\n        $ref: '#/components/schemas/EmployeeOpeningBalance'\n    EmployeeOpeningBalance:\n      type: object\n      properties:\n        periodEndDate:\n          description: The opening balance period end date.\n          type: string\n          format: date\n          x-is-date: true \n          example: \"2020-07-01T00:00:00\"\n        daysPaid:\n          description: The paid number of days.\n          type: integer\n          format: int32\n        unpaidWeeks:\n          description: The number of unpaid weeks.\n          type: integer\n          format: int32\n        grossEarnings:\n          description: The gross earnings during the period.\n          type: number\n          format: double\n          x-is-money: true\n    EmployeeLeaves:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leave:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmployeeLeave'\n    EmployeeLeaveObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leave:\n          $ref: '#/components/schemas/EmployeeLeave'\n    EmployeeLeave:\n      type: object\n      required:\n        - leaveTypeID\n        - description\n        - startDate\n        - endDate\n      properties:\n        leaveID:\n          description: The Xero identifier for LeaveType\n          type: string\n          format: uuid\n        leaveTypeID:\n          description: The Xero identifier for LeaveType\n          type: string\n          format: uuid\n        description:\n          description: The description of the leave  (max length = 50)\n          type: string\n        startDate:\n          description: Start date of the leave (YYYY-MM-DD)  \n          type: string\n          format: date\n          x-is-date: true \n        endDate:\n          description:   End date of the leave (YYYY-MM-DD)\n          type: string\n          format: date\n          x-is-date: true \n        periods:\n          description: The leave period information. The StartDate, EndDate and NumberOfUnits needs to be specified when you do not want to calculate NumberOfUnits automatically. Using incorrect period StartDate and EndDate will result in automatic computation of the NumberOfUnits.\n          type: array\n          items:\n            $ref: '#/components/schemas/LeavePeriod'\n        updatedDateUTC:\n          description: UTC timestamp of last update to the leave type note\n          type: string\n          format: date-time\n          x-is-datetime: true\n    LeavePeriods:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        periods:\n          type: array\n          items:\n            $ref: '#/components/schemas/LeavePeriod'\n    LeavePeriod:\n      type: object\n      properties:\n        periodStartDate:\n          description: The Pay Period Start Date (YYYY-MM-DD)\n          type: string\n          format: date\n          x-is-date: true \n        periodEndDate:\n          description:   The Pay Period End Date (YYYY-MM-DD)\n          type: string\n          format: date\n          x-is-date: true \n        numberOfUnits:\n          description: The Number of Units for the leave\n          type: number\n          format: double\n          x-is-money: true\n        periodStatus:\n          description: Period Status\n          type: string\n          enum:\n          - Approved\n          - Completed\n    EmployeeLeaveBalances:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leaveBalances:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmployeeLeaveBalance'\n    EmployeeLeaveBalance:\n      type: object\n      properties:\n        name:\n          description: Name of the leave type.  \n          type: string\n          example: Holiday\n        leaveTypeID:\n          description: The Xero identifier for leave type\n          type: string\n          format: uuid\n        balance:\n          description: The employees current balance for the corresponding leave type.\n          type: number\n          format: double\n          x-is-money: true\n        typeOfUnits:\n          description: The type of the units of the leave.\n          type: string\n          example: hours\n    EmployeeStatutoryLeaveBalanceObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leaveBalance:\n          $ref: '#/components/schemas/EmployeeStatutoryLeaveBalance'\n    EmployeeStatutoryLeaveBalance:\n      type: object\n      properties:\n        leaveType: \n          description: The type of statutory leave\n          type: string\n          enum:\n          - Sick\n          - Adoption\n          - Maternity\n          - Paternity\n          - Sharedparental\n        balanceRemaining:\n          description: The balance remaining for the corresponding leave type as of specified date.\n          type: number\n          format: double\n          x-is-money: true\n        units:\n          description: The units will be \"Hours\"\n          type: string\n          enum:\n          - Hours\n    EmployeeStatutoryLeavesSummaries:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        statutoryLeaves:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmployeeStatutoryLeaveSummary'\n    EmployeeStatutoryLeaveSummary:\n      type: object\n      properties:\n        statutoryLeaveID:\n          description: The unique identifier (guid) of a statutory leave.  \n          type: string\n          format: uuid\n        employeeID:\n          description: The unique identifier (guid) of the employee  \n          type: string\n          format: uuid\n        type:\n          description: The category of statutory leave\n          type: string\n          enum:\n            - Sick\n            - Adoption\n            - Maternity\n            - Paternity\n            - Sharedparental\n        startDate:\n          description: The date when the leave starts  \n          type: string\n          format: date\n          x-is-date: true \n        endDate: \n          description: The date when the leave ends  \n          type: string\n          format: date\n          x-is-date: true \n        isEntitled:\n          description: Whether the leave was entitled to receive payment  \n          type: boolean\n        status:\n          description: The status of the leave\n          type: string\n          enum:\n            - Pending\n            - In-Progress\n            - Completed\n    EmployeeStatutorySickLeaves:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        statutorySickLeave:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmployeeStatutorySickLeave'\n    EmployeeStatutorySickLeaveObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        statutorySickLeave:\n          $ref: '#/components/schemas/EmployeeStatutorySickLeave'\n    EmployeeStatutorySickLeave:\n      type: object\n      required:\n        - employeeID\n        - startDate\n        - endDate\n        - workPattern\n        - leaveTypeID\n        - isPregnancyRelated\n        - sufficientNotice\n      properties:\n        statutoryLeaveID:\n          description: The unique identifier (guid) of a statutory leave  \n          type: string\n          format: uuid\n        employeeID:\n          description: The unique identifier (guid) of the employee  \n          type: string\n          format: uuid\n        leaveTypeID:\n          description: The unique identifier (guid) of the \"Statutory Sick Leave (non-pensionable)\" pay item  \n          type: string\n          format: uuid\n        startDate:\n          description: The date when the leave starts  \n          type: string\n          format: date\n          x-is-date: true \n        endDate:\n          description: The date when the leave ends  \n          type: string\n          format: date\n          x-is-date: true \n        type:\n          description: the type of statutory leave\n          type: string\n          example: \"Sick\"\n        status:\n          description: the type of statutory leave\n          type: string\n          example: \"Pending\"\n        workPattern:\n          description: The days of the work week the employee is scheduled to work at the time the leave is taken  \n          type: array\n          items:\n            type: string\n        isPregnancyRelated:\n          description: Whether the sick leave was pregnancy related  \n          type: boolean\n        sufficientNotice:\n          description: Whether the employee provided sufficient notice and documentation as required by the employer supporting the sick leave request  \n          type: boolean\n        isEntitled:\n          description: Whether the leave was entitled to receive payment  \n          type: boolean\n        entitlementWeeksRequested:\n          description: The amount of requested time (in weeks)  \n          type: number\n          format: double\n          x-is-money: true\n        entitlementWeeksQualified:\n          description: The amount of statutory sick leave time off (in weeks) that is available to take at the time the leave was requested  \n          type: number\n          format: double\n          x-is-money: true\n        entitlementWeeksRemaining:\n          description: A calculated amount of time (in weeks) that remains for the statutory sick leave period  \n          type: number\n          format: double\n          x-is-money: true\n        overlapsWithOtherLeave:\n          description: Whether another leave (Paternity, Shared Parental specifically) occurs during the requested leave's period. While this is allowed it could affect payment amounts\n          type: boolean\n        entitlementFailureReasons:\n          description: If the leave requested was considered \"not entitled\", the reasons why are listed here. \n          type: array\n          items:\n            type: string\n            enum:\n            - UnableToCalculateAwe\n            - AweLowerThanLel\n            - NotQualifiedInPreviousPiw\n            - ExceededMaximumEntitlementWeeksOfSsp\n            - ExceededMaximumDurationOfPiw\n            - SufficientNoticeNotGiven\n    EmployeeLeaveTypes:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leaveTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmployeeLeaveType'\n    EmployeeLeaveSetupObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leaveSetup:\n          $ref: '#/components/schemas/EmployeeLeaveSetup'\n    EmployeeLeaveSetup:\n      type: object\n      properties:\n        includeHolidayPay:\n          description: Identifier if holiday pay will be included in each payslip\n          type: boolean\n          example: false\n        holidayPayOpeningBalance:\n          description: Initial holiday pay balance. A percentage — usually 8% — of gross earnings since their last work anniversary.\n          type: number\n          format: double\n          x-is-money: true\n          example: 10.5\n        annualLeaveOpeningBalance:\n          description: Initial annual leave balance. The balance at their last anniversary, less any leave taken since then and excluding accrued annual leave.\n          type: number\n          format: double\n          x-is-money: true\n          example: 25.89\n        negativeAnnualLeaveBalancePaidAmount:\n          description: The dollar value of annual leave opening balance if negative.\n          type: number\n          format: double\n          x-is-money: true\n          example: 10.0\n        sickLeaveHoursToAccrueAnnually:\n          description: Number of hours accrued annually for sick leave. Multiply the number of days they're entitled to by the hours worked per day\n          type: number\n          format: double\n          x-is-money: true\n          example: 100.5\n        sickLeaveMaximumHoursToAccrue:\n          description: Maximum number of hours accrued annually for sick leave. Multiply the maximum days they can accrue by the hours worked per day\n          type: number\n          format: double\n          x-is-money: true\n          example: 200.5\n        sickLeaveOpeningBalance:\n          description: Initial sick leave balance. This will be positive unless they've taken sick leave in advance\n          type: number\n          format: double\n          x-is-money: true\n          example: 10.5\n    EmployeeLeaveTypeObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leaveType:\n          $ref: '#/components/schemas/EmployeeLeaveType'\n    EmployeeLeaveType:\n      type: object\n      properties:\n        leaveTypeID:\n          description: The Xero identifier for leave type\n          type: string\n          format: uuid\n        scheduleOfAccrual:\n          description: The schedule of accrual\n          type: string\n          enum:\n            - AnnuallyAfter6Months\n            - OnAnniversaryDate\n            - PercentageOfGrossEarnings  \n            - NoAccruals\n        hoursAccruedAnnually:\n          description: The number of hours accrued for the leave annually. This is 0 when the scheduleOfAccrual chosen is \"OnHourWorked\"\n          type: number\n          format: double\n          x-is-money: true\n        maximumToAccrue:\n          description: The maximum number of hours that can be accrued for the leave  \n          type: number\n          format: double\n          x-is-money: true\n        openingBalance:\n          description: The initial number of hours assigned when the leave was added to the employee  \n          type: number\n          format: double\n          x-is-money: true\n        rateAccruedHourly:\n          description: The number of hours added to the leave balance for every hour worked by the employee. This is normally 0, unless the scheduleOfAccrual chosen is \"OnHourWorked\"\n          type: number\n          format: double\n          x-is-money: true\n        percentageOfGrossEarnings:\n          description: Specific for scheduleOfAccrual having percentage of gross earnings. Identifies how much percentage of gross earnings is accrued per pay period.\n          type: number\n          format: double\n          x-is-money: true\n        includeHolidayPayEveryPay:\n          description: Specific to Holiday pay. Flag determining if pay for leave type is added on each pay run.\n          type: boolean\n        showAnnualLeaveInAdvance:\n          description: Specific to Annual Leave. Flag to include leave available to take in advance in the balance in the payslip\n          type: boolean\n        annualLeaveTotalAmountPaid:\n          description: Specific to Annual Leave. Annual leave balance in dollars\n          type: number\n          format: double\n          x-is-money: true\n    EmployeePayTemplateObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        payTemplate:\n          $ref: '#/components/schemas/EmployeePayTemplate'\n    EmployeePayTemplates:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        payTemplate:\n          $ref: '#/components/schemas/EmployeePayTemplate'\n    EmployeeEarningsTemplates:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        earningTemplates:\n          type: array\n          items:\n            $ref: '#/components/schemas/EarningsTemplate'\n    EmployeePayTemplate:\n      type: object\n      required:\n        - EarningTemplates\n      properties:\n        employeeID:\n          description: Unique identifier for the employee\n          type: string\n          format: uuid\n        earningTemplates:\n          $ref: '#/components/schemas/EarningsTemplates'\n    EarningsTemplates:\n      type: array\n      items:\n        $ref: '#/components/schemas/EarningsTemplate'\n    EarningsTemplateObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        earningTemplate:\n          $ref: '#/components/schemas/EarningsTemplate'\n    EarningsTemplate:\n      type: object\n      properties:\n        payTemplateEarningID:\n          description: The Xero identifier for the earnings template\n          type: string\n          format: uuid\n        ratePerUnit:\n          description: The rate per unit  \n          type: number\n          format: double\n          x-is-money: true\n        numberOfUnits:\n          description: The rate per unit  \n          type: number\n          format: double\n          x-is-money: true\n        fixedAmount:\n          description: The fixed amount per period  \n          type: number\n          format: double\n          x-is-money: true\n        earningsRateID:\n          description: The corresponding earnings rate identifier  \n          type: string\n          format: uuid\n        name:\n          description: The read-only name of the Earning Template.\n          type: string\n    Superannuations:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        benefits:\n          type: array\n          items:\n            $ref: '#/components/schemas/Benefit'\n    SuperannuationObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        benefit:\n          $ref: '#/components/schemas/Benefit'\n    Benefit:\n      type: object\n      required:\n        - name\n        - category\n        - liabilityAccountId\n        - expenseAccountId\n      properties:\n        id:\n          description: The Xero identifier for superannuation\n          type: string\n          format: uuid\n        name:\n          description: Name of the superannuations\n          type: string\n        category:\n          description: Superannuations Category type\n          type: string\n          enum:\n          - KiwiSaver\n          - ComplyingFund\n          - Other\n        liabilityAccountId:\n          description: Xero identifier for Liability Account\n          type: string\n          format: uuid\n        expenseAccountId:\n          description: Xero identifier for Expense Account\n          type: string\n          format: uuid\n        calculationTypeNZ:\n          description: Calculation Type of the superannuation either FixedAmount or PercentageOfTaxableEarnings\n          type: string\n          enum:\n            - FixedAmount\n            - PercentageOfTaxableEarnings\n        standardAmount:\n          description: Standard amount of the superannuation\n          type: number\n          format: double\n          x-is-money: true\n        percentage:\n          description: Percentage of Taxable Earnings of the superannuation\n          type: number\n          format: double\n          x-is-money: true\n        companyMax:\n          description: Company Maximum amount of the superannuation\n          type: number\n          format: double\n          x-is-money: true\n        currentRecord:\n          description: Identifier of a record is active or not.\n          type: boolean\n    Deductions:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        deductions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Deduction'\n    DeductionObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        deduction:\n          $ref: '#/components/schemas/Deduction'\n    Deduction:\n      type: object\n      required:\n        - deductionName\n        - deductionCategory\n        - liabilityAccountId\n        - calculationType\n      properties:\n        deductionId:\n          description: The Xero identifier for Deduction\n          type: string\n          format: uuid\n        deductionName:\n          description: Name of the deduction\n          type: string\n        deductionCategory:\n          description: Deduction Category type\n          type: string\n          enum:\n            - PayrollGiving\n            - KiwiSaverVoluntaryContributions\n            - Superannuation\n            - NzOther\n        liabilityAccountId:\n          description: Xero identifier for Liability Account\n          type: string\n          format: uuid\n        currentRecord:\n          description: Identifier of a record is active or not.\n          type: boolean\n        standardAmount:\n          description: Standard amount of the deduction.\n          type: number\n          format: double\n          x-is-money: true\n    StatutoryDeductions:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        statutoryDeductions:\n          type: array\n          items:\n            $ref: '#/components/schemas/StatutoryDeduction'\n    StatutoryDeductionObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        statutoryDeduction:\n          $ref: '#/components/schemas/StatutoryDeduction'\n    StatutoryDeduction:\n      type: object\n      properties:\n        id:\n          description: The Xero identifier for earnings order\n          type: string\n          format: uuid\n        name:\n          description: Name of the earnings order\n          type: string\n        statutoryDeductionCategory:\n          $ref: '#/components/schemas/StatutoryDeductionCategory'\n        liabilityAccountId:\n          description: Xero identifier for Liability Account\n          type: string\n          format: uuid\n        currentRecord:\n          description: Identifier of a record is active or not.\n          type: boolean\n    StatutoryDeductionCategory:\n      description: Statutory Deduction Category\n      type: string\n      enum:\n      - PriorityOrder\n      - NonPriorityOrder\n      - TableBased\n      - ChildSupport\n      - CourtFines\n      - InlandRevenueArrears\n      - MsdRepayments\n      - StudentLoan\n      - AdditionalStudentLoan\n      - VoluntaryStudentLoan\n      - KiwiSaver\n    EarningsOrders:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        statutoryDeductions:\n          type: array\n          items:\n            $ref: '#/components/schemas/EarningsOrder'\n    EarningsOrderObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        statutoryDeduction:\n          $ref: '#/components/schemas/EarningsOrder'\n    EarningsOrder:\n      type: object\n      required:\n        - name\n      properties:\n        id:\n          description: Xero unique identifier for an earning rate\n          type: string\n          format: uuid\n        name:\n          description: Name of the earning order\n          type: string\n        statutoryDeductionCategory:\n          $ref: '#/components/schemas/StatutoryDeductionCategory'\n        liabilityAccountId:\n          description: Xero identifier for Liability Account\n          type: string\n          format: uuid\n        currentRecord:\n          description: Identifier of a record is active or not.\n          type: boolean\n          default: true\n    EarningsRates:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        earningsRates:\n          type: array\n          items:\n            $ref: '#/components/schemas/EarningsRate'\n    EarningsRateObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        earningsRate:\n          $ref: '#/components/schemas/EarningsRate'\n    EarningsRate:\n      type: object\n      required:\n        - name\n        - earningsType\n        - rateType\n        - typeOfUnits\n        - expenseAccountID\n      properties:\n        earningsRateID:\n          description: Xero unique identifier for an earning rate\n          type: string\n          format: uuid\n        name:\n          description: Name of the earning rate\n          type: string\n        earningsType:\n          description: Indicates how an employee will be paid when taking this type of earning\n          type: string\n          enum:\n            - Allowance\n            - Backpay\n            - Bonus\n            - Commission\n            - DiscretionaryPayments\n            - HolidayPay\n            - LumpSum\n            - OtherEarnings\n            - OtherGrossEarnings\n            - OvertimeEarnings\n            - RegularEarnings\n            - SalarySacrificeForKiwiSaver\n            - Tips(Direct)\n            - Tips(Non-Direct)\n            - WithholdingIncome\n        rateType:\n          description: Indicates the type of the earning rate\n          type: string\n          enum:\n            - RatePerUnit\n            - MultipleOfOrdinaryEarningsRate\n            - FixedAmount\n        typeOfUnits:\n          description: The type of units used to record earnings\n          type: string\n        currentRecord:\n          description: Indicates whether an earning type is active\n          type: boolean\n        expenseAccountID:\n          description: The account that will be used for the earnings rate\n          type: string\n          format: uuid\n        ratePerUnit:\n          description: Default rate per unit (optional). Only applicable if RateType is RatePerUnit\n          type: number\n          format: double\n          x-is-money: true\n        multipleOfOrdinaryEarningsRate:\n          description: This is the multiplier used to calculate the rate per unit, based on the employee’s ordinary earnings rate. For example, for time and a half enter 1.5. Only applicable if RateType is MultipleOfOrdinaryEarningsRate\n          type: number\n          format: double\n          x-is-money: true\n        fixedAmount:\n          description: Optional Fixed Rate Amount. Applicable for FixedAmount Rate\n          type: number\n          format: double\n          x-is-money: true\n    LeaveTypes:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leaveTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/LeaveType'\n    LeaveTypeObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leaveType:\n          $ref: '#/components/schemas/LeaveType'\n    LeaveType:\n      type: object\n      required:\n        - name\n        - isPaidLeave\n        - showOnPayslip\n      properties:\n        leaveTypeID:\n          description: Xero unique identifier for the leave type\n          type: string\n          format: uuid\n        name:\n          description: Name of the leave type\n          type: string\n        isPaidLeave:\n          description: Indicate that an employee will be paid when taking this type of leave\n          type: boolean\n        showOnPayslip:\n          description: Indicate that a balance for this leave type to be shown on the employee’s payslips\n          type: boolean\n        updatedDateUTC:\n          description: UTC timestamp of last update to the leave type note\n          type: string\n          format: date-time\n          x-is-datetime: true \n        isActive:\n          description: Shows whether the leave type is active or not\n          type: boolean\n    Reimbursements:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        reimbursements:\n          type: array\n          items:\n            $ref: '#/components/schemas/Reimbursement'\n    ReimbursementObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        reimbursement:\n          $ref: '#/components/schemas/Reimbursement'\n    Reimbursement:\n      type: object\n      required:\n        - name\n        - accountID\n      properties:\n        reimbursementID:\n          description: Xero unique identifier for a reimbursement\n          type: string\n          format: uuid\n        name:\n          description: Name of the reimbursement\n          type: string\n        accountID:\n          description: Xero unique identifier for the account used for the reimbursement\n          type: string\n          format: uuid\n        currentRecord:\n          description: Indicates that whether the reimbursement is active\n          type: boolean\n        reimbursementCategory:\n          description: See Reimbursement Categories\n          type: string\n          enum:\n            - GST\n            - NoGST\n            - GSTInclusive\n        calculationType:\n          description: See Calculation Types\n          type: string\n          enum:\n            - Unknown\n            - FixedAmount\n            - RatePerUnit\n        standardAmount:\n          description: Optional Fixed Rate Amount. Applicable when calculation type is Fixed Amount\n          type: string\n        standardTypeOfUnits:\n          description: Optional Type Of Units. Applicable when calculation type is Rate Per Unit\n          type: string\n          enum: \n            - Hours\n            - km\n        standardRatePerUnit:\n          description: Optional Rate Per Unit. Applicable when calculation type is Rate Per Unit\n          type: number\n          format: double\n          x-is-money: true\n    Timesheets:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        timesheets:\n          type: array\n          items:\n            $ref: '#/components/schemas/Timesheet'\n    TimesheetObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        timesheet:\n          $ref: '#/components/schemas/Timesheet'\n    Timesheet:\n      type: object\n      required:\n        - payrollCalendarID\n        - employeeID\n        - startDate\n        - endDate\n      properties:\n        timesheetID:\n          description: The Xero identifier for a Timesheet\n          type: string\n          format: uuid \n        payrollCalendarID:\n          description: The Xero identifier for the Payroll Calendar that the Timesheet applies to\n          type: string\n          format: uuid \n        employeeID:\n          description: The Xero identifier for the Employee that the Timesheet is for\n          type: string\n          format: uuid \n        startDate:\n          description: The Start Date of the Timesheet period (YYYY-MM-DD)\n          type: string\n          format: date \n          x-is-date: true \n        endDate:\n          description: The End Date of the Timesheet period (YYYY-MM-DD)\n          type: string\n          format: date \n          x-is-date: true \n        status:\n          description: Status of the timesheet\n          type: string\n          enum:\n            - Draft\n            - Approved\n            - Completed\n            - Requested\n        totalHours:\n          description: The Total Hours of the Timesheet\n          type: number\n          format: double\n          x-is-money: true\n        updatedDateUTC:\n          description: The UTC date time that the Timesheet was last updated\n          type: string\n          format: date-time\n          x-is-datetime: true\n        timesheetLines:\n          $ref: '#/components/schemas/TimesheetLines'\n    TimesheetLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/TimesheetLine'\n    TimesheetLineObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        timesheetLine:\n          $ref: '#/components/schemas/TimesheetLine'\n    TimesheetLine:\n      type: object\n      required:\n        - date\n        - earningsRateID\n        - numberOfUnits\n      properties:\n        timesheetLineID:\n          description: The Xero identifier for a Timesheet Line\n          type: string\n          format: uuid \n        date:\n          description: The Date that this Timesheet Line is for (YYYY-MM-DD)\n          type: string\n          format: date \n          x-is-date: true \n        earningsRateID:\n          description: The Xero identifier for the Earnings Rate that the Timesheet is for\n          type: string\n          format: uuid \n        trackingItemID:\n          description: The Xero identifier for the Tracking Item that the Timesheet is for\n          type: string\n          format: uuid \n        numberOfUnits:\n          description: The Number of Units of the Timesheet Line\n          type: number\n          format: double\n          x-is-money: true\n    PayRunCalendars:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        payRunCalendars:\n          type: array\n          items:\n            $ref: '#/components/schemas/PayRunCalendar'\n    PayRunCalendarObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        payRunCalendar:\n          $ref: '#/components/schemas/PayRunCalendar'\n    PayRunCalendar:\n      type: object\n      required:\n        - name\n        - calendarType\n        - periodStartDate\n        - paymentDate\n      properties:\n        payrollCalendarID:\n          description: Xero unique identifier for the payroll calendar\n          type: string\n          format: uuid \n        name:\n          description: Name of the calendar\n          type: string\n        calendarType:\n          $ref: '#/components/schemas/CalendarType'\n        periodStartDate:\n          description: Period start date of the calendar\n          type: string\n          format: date\n          x-is-date: true \n        periodEndDate:\n          description: Period end date of the calendar\n          type: string\n          format: date\n          x-is-date: true \n        paymentDate:\n          description: Payment date of the calendar\n          type: string\n          format: date\n          x-is-date: true \n        updatedDateUTC:\n          description: UTC timestamp of the last update to the pay run calendar\n          type: string\n          format: date-time\n          x-is-datetime: true \n    PaymentMethodObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        paymentMethod:\n          $ref: '#/components/schemas/PaymentMethod'\n    PaymentMethod:\n      type: object\n      properties:\n        paymentMethod:\n          description: The payment method code\n          type: string\n          enum:\n            - Cheque\n            - Electronically\n            - Manual\n        bankAccounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/BankAccount'\n    SalaryAndWages:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        salaryAndWages:\n          type: array\n          items:\n            $ref: '#/components/schemas/SalaryAndWage'\n    SalaryAndWageObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        salaryAndWages:\n          $ref: '#/components/schemas/SalaryAndWage'\n    SalaryAndWage:\n      type: object\n      required:\n        - earningsRateID\n        - numberOfUnitsPerWeek\n        - numberOfUnitsPerDay\n        - effectiveFrom\n        - annualSalary\n        - status\n        - paymentType\n      properties:\n        salaryAndWagesID:\n          description: Xero unique identifier for a salary and wages record\n          type: string\n          format: uuid \n        earningsRateID:\n          description: Xero unique identifier for an earnings rate\n          type: string\n          format: uuid \n        numberOfUnitsPerWeek:\n          description: The Number of Units per week for the corresponding salary and wages\n          type: number\n          format: double\n          x-is-money: true\n        ratePerUnit:\n          description: The rate of each unit for the corresponding salary and wages\n          type: number\n          format: double\n          x-is-money: true\n        numberOfUnitsPerDay:\n          description: The Number of Units per day for the corresponding salary and wages\n          type: number\n          format: double\n          x-is-money: true \n        daysPerWeek:\n          description: The days per week for the salary.\n          type: number\n          format: double\n          x-is-money: true\n        effectiveFrom:\n          description: The effective date of the corresponding salary and wages\n          type: string\n          format: date \n          x-is-date: true \n        annualSalary:\n          description: The annual salary\n          type: number\n          format: double\n          x-is-money: true\n        status:\n          description: The current status of the corresponding salary and wages\n          type: string\n          enum:\n            - Active\n            - Pending\n            - History\n        paymentType:\n          description: The type of the payment of the corresponding salary and wages\n          type: string\n          enum:\n            - Salary\n            - Hourly\n    PayRuns:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        payRuns:\n          type: array\n          items:\n            $ref: '#/components/schemas/PayRun'\n    PayRunObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        payRun:\n          $ref: '#/components/schemas/PayRun'\n    PayRun:\n      type: object\n      properties:\n        payRunID:\n          description: Xero unique identifier for the pay run\n          type: string\n          format: uuid \n        payrollCalendarID:\n          description: Xero unique identifier for the payroll calendar\n          type: string\n          format: uuid \n        periodStartDate:\n          description: Period start date of the payroll calendar\n          type: string\n          format: date \n          x-is-date: true\n        periodEndDate:\n          description: Period end date of the payroll calendar\n          type: string\n          format: date \n          x-is-date: true \n        paymentDate:\n          description: Payment date of the pay run\n          type: string\n          format: date \n          x-is-date: true \n        totalCost:\n          description: Total cost of the pay run\n          type: number\n          format: double\n          x-is-money: true\n        totalPay:\n          description: Total pay of the pay run\n          type: number\n          format: double\n          x-is-money: true\n        payRunStatus:\n          description: Pay run status\n          type: string\n          enum:\n          - Draft\n          - Posted\n        payRunType:\n          description: Pay run type\n          type: string\n          enum:\n          - Scheduled\n          - Unscheduled\n          - EarlierYearUpdate\n        calendarType:\n          $ref: '#/components/schemas/CalendarType'\n        postedDateTime:\n          description: Posted date time of the pay run\n          type: string\n          format: date \n          x-is-date: true \n        paySlips:\n          type: array\n          items:\n            $ref: '#/components/schemas/PaySlip'\n    CalendarType:\n      description: Calendar type of the pay run\n      type: string\n      enum:\n      - Weekly\n      - Fortnightly\n      - FourWeekly\n      - Monthly\n      - Annual\n      - Quarterly\n      - TwiceMonthly\n    PaySlipObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        paySlip:\n          $ref: '#/components/schemas/PaySlip'\n    PaySlips:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        paySlips:\n          type: array\n          items:\n            $ref: '#/components/schemas/PaySlip'\n    PaySlip:\n      type: object\n      properties:\n        paySlipID:\n          description: The Xero identifier for a PaySlip\n          type: string\n          format: uuid \n        employeeID:\n          description: The Xero identifier for payroll employee\n          type: string\n          format: uuid \n        payRunID:\n          description: The Xero identifier for the associated payrun\n          type: string\n          format: uuid \n        lastEdited:\n          description: The date payslip was last updated\n          type: string\n          format: date \n          x-is-datetime: true \n        firstName:\n          description: Employee first name\n          type: string\n        lastName:\n          description: Employee last name\n          type: string\n        totalEarnings:\n          description: Total earnings before any deductions. Same as gross earnings for NZ.\n          type: number\n          format: double\n          x-is-money: true\n        grossEarnings:\n          description: Total earnings before any deductions. Same as total earnings for NZ.\n          type: number\n          format: double\n          x-is-money: true\n        totalPay:\n          description: The employee net pay\n          type: number\n          format: double\n          x-is-money: true\n        totalEmployerTaxes:\n          description: The employer's tax obligation\n          type: number\n          format: double\n          x-is-money: true\n        totalEmployeeTaxes:\n          description: The part of an employee's earnings that is deducted for tax purposes\n          type: number\n          format: double\n          x-is-money: true\n        totalDeductions:\n          description: Total amount subtracted from an employee's earnings to reach total pay\n          type: number\n          format: double\n          x-is-money: true\n        totalReimbursements:\n          description: Total reimbursements are nontaxable payments to an employee used to repay out-of-pocket expenses when the person incurs those expenses through employment\n          type: number\n          format: double\n          x-is-money: true\n        totalStatutoryDeductions:\n          description: Total amounts required by law to subtract from the employee's earnings\n          type: number\n          format: double\n          x-is-money: true\n        totalSuperannuation:\n          description: Benefits (also called fringe benefits, perquisites or perks) are various non-earnings compensations provided to employees in addition to their normal earnings or salaries\n          type: number\n          format: double\n          x-is-money: true\n        bacsHash:\n          description: BACS Service User Number\n          type: string \n        paymentMethod:\n          description: The payment method code\n          type: string\n          enum:\n            - Cheque\n            - Electronically\n            - Manual\n        earningsLines:\n          $ref: '#/components/schemas/EarningsLines'\n        leaveEarningsLines:\n          $ref: '#/components/schemas/LeaveEarningsLines'\n        timesheetEarningsLines:\n          $ref: '#/components/schemas/TimesheetEarningsLines'\n        deductionLines:\n          $ref: '#/components/schemas/DeductionLines'\n        reimbursementLines:\n          $ref: '#/components/schemas/ReimbursementLines'\n        leaveAccrualLines:\n          $ref: '#/components/schemas/LeaveAccrualLines'\n        superannuationLines:\n          $ref: '#/components/schemas/SuperannuationLines'\n        paymentLines:\n          $ref: '#/components/schemas/PaymentLines'\n        employeeTaxLines:\n          $ref: '#/components/schemas/TaxLines'\n        employerTaxLines:\n          $ref: '#/components/schemas/TaxLines'\n        statutoryDeductionLines:\n          $ref: '#/components/schemas/StatutoryDeductionLines'\n        taxSettings:\n          $ref: '#/components/schemas/TaxSettings'\n        grossEarningsHistory:\n          $ref: '#/components/schemas/GrossEarningsHistory'\n    EarningsLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/EarningsLine'\n    EarningsLine:\n      type: object\n      properties:\n        earningsLineID:\n          description: Xero identifier for payroll earnings line\n          type: string\n          format: uuid\n        earningsRateID:\n          description: Xero identifier for payroll earnings rate\n          type: string\n          format: uuid \n        displayName:\n          description: name of earnings rate for display in UI\n          type: string\n        ratePerUnit:\n          description: Rate per unit for earnings line\n          type: number\n          format: double\n          x-is-money: true\n        numberOfUnits:\n          description: Earnings number of units\n          type: number\n          format: double\n          x-is-money: true\n        fixedAmount:\n          description: Earnings fixed amount. Only applicable if the EarningsRate RateType is Fixed\n          type: number\n          format: double\n          x-is-money: true\n        amount:\n          description: The amount of the earnings line.\n          type: number\n          format: double\n          x-is-money: true\n        isLinkedToTimesheet:\n          description: Identifies if the earnings is taken from the timesheet. False for earnings line\n          type: boolean\n        isAverageDailyPayRate:\n          description: Identifies if the earnings is using an average daily pay rate\n          type: boolean\n        isSystemGenerated:\n          description: Flag to identify whether the earnings line is system generated or not.\n          type: boolean\n    LeaveEarningsLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/LeaveEarningsLine'\n    LeaveEarningsLine:\n      type: object\n      properties:\n        earningsLineID:\n          description: Xero identifier for payroll earnings line\n          type: string\n          format: uuid\n        earningsRateID:\n          description: Xero identifier for payroll leave earnings rate\n          type: string\n          format: uuid\n        displayName:\n          description: name of earnings rate for display in UI\n          type: string \n        ratePerUnit:\n          description: Rate per unit for leave earnings line\n          type: number\n          format: double\n          x-is-money: true\n        numberOfUnits:\n          description: Leave earnings number of units\n          type: number\n          format: double\n          x-is-money: true\n        fixedAmount:\n          description: Leave earnings fixed amount. Only applicable if the EarningsRate RateType is Fixed\n          type: number\n          format: double\n          x-is-money: true\n        amount:\n          description: The amount of the earnings line.\n          type: number\n          format: double\n          x-is-money: true\n        isLinkedToTimesheet:\n          description: Identifies if the leave earnings is taken from the timesheet. False for leave earnings line\n          type: boolean\n        isAverageDailyPayRate:\n          description: Identifies if the earnings is using an average daily pay rate\n          type: boolean\n        isSystemGenerated:\n          description: Flag to identify whether the earnings line is system generated or not.\n          type: boolean\n    TimesheetEarningsLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/TimesheetEarningsLine'\n    TimesheetEarningsLine:\n      type: object\n      properties:\n        earningsLineID:\n          description: Xero identifier for payroll earnings line\n          type: string\n          format: uuid\n        earningsRateID:\n          description: Xero identifier for payroll leave earnings rate\n          type: string\n          format: uuid\n        displayName:\n          description: name of earnings rate for display in UI\n          type: string \n        ratePerUnit:\n          description: Rate per unit for leave earnings line\n          type: number\n          format: double\n          x-is-money: true\n        numberOfUnits:\n          description: Leave earnings number of units\n          type: number\n          format: double\n          x-is-money: true\n        fixedAmount:\n          description: Leave earnings fixed amount. Only applicable if the EarningsRate RateType is Fixed\n          type: number\n          format: double\n          x-is-money: true\n        amount:\n          description: The amount of the earnings line.\n          type: number\n          format: double\n          x-is-money: true\n        isLinkedToTimesheet:\n          description: Identifies if the leave earnings is taken from the timesheet. False for leave earnings line\n          type: boolean\n        isAverageDailyPayRate:\n          description: Identifies if the earnings is using an average daily pay rate\n          type: boolean\n        isSystemGenerated:\n          description: Flag to identify whether the earnings line is system generated or not.\n          type: boolean\n    DeductionLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeductionLine'\n    DeductionLine:\n      type: object\n      properties:\n        deductionTypeID:\n          description: Xero identifier for payroll deduction\n          type: string\n          format: uuid\n        displayName:\n          description: name of earnings rate for display in UI\n          type: string \n        amount:\n          description: The amount of the deduction line\n          type: number\n          format: double\n          x-is-money: true\n        subjectToTax:\n          description: Identifies if the deduction is subject to tax\n          type: boolean\n        percentage:\n          description: Deduction rate percentage\n          type: number\n          format: double\n          x-is-money: true\n    ReimbursementLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReimbursementLine'\n    ReimbursementLine:\n      type: object\n      properties:\n        reimbursementTypeID:\n          description: Xero identifier for payroll reimbursement\n          type: string\n          format: uuid\n        description:\n          description: Reimbursement line description\n          type: string\n        amount:\n          description: Reimbursement amount\n          type: number\n          format: double\n          x-is-money: true\n        ratePerUnit:\n          description: Rate per unit for leave earnings line\n          type: number\n          format: double\n          x-is-money: true\n        numberOfUnits:\n          description: Leave earnings number of units\n          type: number\n          format: double\n          x-is-money: true\n    LeaveAccrualLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/LeaveAccrualLine'\n    LeaveAccrualLine:\n      type: object\n      properties:\n        leaveTypeID:\n          description: Xero identifier for the Leave type\n          type: string\n          format: uuid \n        numberOfUnits:\n          description: Leave accrual number of units\n          type: number\n          format: double\n          x-is-money: true\n    SuperannuationLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/SuperannuationLine'\n    SuperannuationLine:\n      type: object\n      properties:\n        superannuationTypeID:\n          description: Xero identifier for payroll superannuation type\n          type: string\n          format: uuid \n        displayName:\n          description: Benefit display name\n          type: string \n        amount:\n          description: The amount of the superannuation line\n          type: number\n          format: double\n          x-is-money: true\n        fixedAmount:\n          description: Superannuation fixed amount\n          type: number\n          format: double\n          x-is-money: true\n        percentage:\n          description: Superannuation rate percentage\n          type: number\n          format: double\n          x-is-money: true\n        manualAdjustment:\n          description: manual adjustment made\n          type: boolean \n    PaymentLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/PaymentLine'\n    PaymentLine:\n      type: object\n      properties:\n        paymentLineID:\n          description: Xero identifier for payroll payment line\n          type: string\n          format: uuid \n        amount:\n          description: The amount of the payment line\n          type: number\n          format: double\n          x-is-money: true\n        accountNumber:\n          description: The account number\n          type: string\n        sortCode:\n          description: The account sort code\n          type: string \n        accountName:\n          description: The account name\n          type: string\n    TaxLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/TaxLine'\n    TaxLine:\n      type: object\n      properties:\n        taxLineID:\n          description: Xero identifier for payroll tax line\n          type: string\n          format: uuid\n        description:\n          description: Tax line description\n          type: string\n        amount:\n          description: The amount of the tax line\n          type: number\n          format: double\n          x-is-money: true\n        globalTaxTypeID: \n          description: Tax type ID\n          type: string\n        manualAdjustment: \n          description: Identifies if the tax line is a manual adjustment\n          type: boolean\n    StatutoryDeductionLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/StatutoryDeductionLine'\n    StatutoryDeductionLine:\n      type: object\n      properties:\n        statutoryDeductionTypeID:\n          description: Xero identifier for payroll statutory deduction type\n          type: string\n          format: uuid \n        amount:\n          description: The amount of the statutory deduction line\n          type: number\n          format: double\n          x-is-money: true\n        fixedAmount:\n          description: Fixed Amount\n          type: number\n          format: double\n          x-is-money: true\n        manualAdjustment: \n          description: Identifies if the tax line is a manual adjustment\n          type: boolean\n    TaxSettings:\n      type: object\n      properties:\n        periodUnits:\n          description: The number of units for the period type\n          type: number\n          format: double\n          x-is-money: true\n        periodType:\n          description: The type of period (\"weeks\" or \"months\")\n          type: string\n          enum:\n            - weeks\n            - months\n          example: \"weeks\"\n        taxCode:\n          $ref: '#/components/schemas/TaxCode'\n        specialTaxRate:\n          description: Tax rate for STC and WT\n          type: string\n        lumpSumTaxCode:\n          description: Tax code for a lump sum amount\n          type: string\n        lumpSumAmount:\n          description: The total of the lump sum amount\n          type: string\n    GrossEarningsHistory:\n      type: object\n      properties:\n        daysPaid:\n          description: Number of days the employee worked in the pay period (0 - 365)\n          type: integer\n          format: int32\n        unpaidWeeks: \n          description: Number of full weeks the employee didn't work in the pay period (0 - 52)\n          type: integer\n          format: int32\n    Settings:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        settings:\n          $ref: '#/components/schemas/Accounts'\n    Accounts:\n      type: object\n      properties:\n        accounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/Account'\n    Account:\n      type: object\n      properties:\n        accountID:\n          description: The Xero identifier for Settings.\n          type: string\n          format: uuid \n        type:\n          description: The assigned AccountType\n          type: string\n          enum:\n          - PAYELIABILITY\n          - WAGESPAYABLE\n          - WAGESEXPENSE\n          - BANK\n        code:\n          description: A unique 3 digit number for each Account\n          type: string\n        name:\n          description: Name of the Account.\n          type: string\n    Address:\n      type: object\n      required:\n        - addressLine1\n        - city\n        - postCode\n      properties:\n        addressLine1:\n          description: Address line 1 for employee home address\n          type: string\n          example: 19 Taranaki Street\n        addressLine2:\n          description: Address line 2 for employee home address\n          type: string\n          example: Apt 4\n        city:\n          description: Suburb for employee home address\n          type: string\n          example: Wellington\n        suburb:\n          description: Suburb for employee home address\n          type: string\n          example: Te Aro\n        postCode:\n          description: PostCode for employee home address\n          type: string\n          example: 6011\n        countryName:\n          description: Country of HomeAddress\n          type: string\n          example: NEW ZEALAND\n    BankAccounts:\n      type: array\n      items:\n        $ref: '#/components/schemas/BankAccount'\n    BankAccount:\n      type: object\n      required:\n        - accountName\n        - accountNumber\n        - sortCode\n      properties:\n        accountName:\n          description: Bank account name (max length = 32)\n          type: string\n        accountNumber:\n          description: Bank account number (digits only; max length = 8)\n          type: string\n        sortCode:\n          description: Bank account sort code (6 digits)\n          type: string\n        particulars:\n          description: Particulars that appear on the statement.\n          type: string\n        code:\n          description: Code of a transaction that appear on the statement.\n          type: string\n        dollarAmount:\n          description: Dollar amount of a transaction.\n          type: number\n          format: double\n          x-is-money: true\n        reference:\n          description: Statement Text/reference for a transaction that appear on the statement.\n          type: string\n        calculationType:\n          description: Calculation type for the transaction can be 'Fixed Amount' or 'Balance'\n          type: string\n          enum:\n            - FixedAmount\n            - Balance\n    TrackingCategories:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        trackingCategories:\n          $ref: '#/components/schemas/TrackingCategory'\n    TrackingCategory:\n      type: object\n      properties:\n        employeeGroupsTrackingCategoryID:\n          description: The Xero identifier for Employee groups tracking category.\n          type: string\n          format: uuid\n        timesheetTrackingCategoryID:\n          description: The Xero identifier for Timesheet tracking category.\n          type: string\n          format: uuid\n",
			"canonicalURL": "/github.com/XeroAPI/Xero-OpenAPI@36ba3f99bd14a6111b631ae9153811960f272727/-/blob/xero-payroll-nz.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/XeroAPI/Xero-OpenAPI/blob/36ba3f99bd14a6111b631ae9153811960f272727/xero-payroll-nz.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/Timesheets/{TimesheetID}/Lines/{TimesheetLineID}\": put: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}