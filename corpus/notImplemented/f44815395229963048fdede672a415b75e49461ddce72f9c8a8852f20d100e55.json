{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/josille/apis-schemas"
		},
		"file": {
			"name": "Contentful-CPA.openapi_collection.yml",
			"size": 0,
			"path": "openAPI/Contentful-CPA.openapi_collection.yml",
			"byteSize": 18972,
			"content": "openapi: 3.0.0\ninfo:\n  title: Content Preview API\n  description:  \u003e-\n    In addition to the Content Delivery API (CDA) for published content, is the Preview API for previewing unpublished content as though it were published. It maintains the same behaviour and parameters as the CDA, but delivers the latest draft for entries and assets.\n  version: 1.0.0\nexternalDocs:\n  url: https://www.contentful.com/developers/docs/references/content-preview-api/\nservers:\n  - url: https://preview.contentful.com\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\ntags:\n  - name: Spaces\n  - name: Content Types\n  - name: Entries\n  - name: Assets\n  - name: Asset key\n  - name: Locales\n  - name: Content tags\n  - name: Search\n  - name: Localization\npaths:\n  /spaces/{space_id}/:\n    get:\n      tags:\n        - Spaces\n      summary: Space\n      description: \u003e-\n        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/spaces/space\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/content_types:\n    get:\n      tags:\n        - Content Types\n      summary: Content Model\n      description: \u003e-\n        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/content-types/content-model\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}:\n    get:\n      tags:\n        - Content Types\n      summary: Content Type\n      description: \u003e-\n        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/content-types/content-type\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: content_type_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: imageWithFocalPoint\n          example: imageWithFocalPoint\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/entries:\n    get:\n      tags:\n        - Entries\n      summary: Entries Collection\n      description: \u003e-\n        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/entries/entries-collection\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n          example: master\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/entries/{entry_id}:\n    get:\n      tags:\n        - Entries\n      summary: Entry\n      description: \u003e-\n        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/entries/entry\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: entry_id\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/assets:\n    get:\n      tags:\n        - Assets\n      summary: Assets of space - Collection\n      description: \u003e-\n        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/assets/assets-collection\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/assets/{asset_id}:\n    get:\n      tags:\n        - Assets\n      summary: Asset\n      description: \u003e-\n        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/assets/asset\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: asset_id\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/asset_keys:\n    post:\n      tags:\n        - Asset key\n      summary: Asset key\n      description: \u003e-\n        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/assets/asset\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                expiresAt: 1613590465\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: Content-Type\n          in: header\n          schema:\n            type: string\n          example: application/vnd.contentful.management.v1+json\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/locales:\n    get:\n      tags:\n        - Locales\n      summary: Locale - Collection\n      description: \u003e-\n        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/locales/locale-collection\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/tags:\n    get:\n      tags:\n        - Content tags\n      summary: Tag - collection\n      description: \u003e-\n        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/locales/locale-collection\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/tags/{tags_id}:\n    get:\n      tags:\n        - Content tags\n      summary: Tag\n      description: \u003e-\n        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/locales/locale-collection\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: tags_id\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/entries/:\n    get:\n      tags:\n        - Search\n      summary: Search in entries\n      description: \u003e-\n        1. Using a bounding rectangle:\n\n        To search for locations within a rectangle area object, use the\n        structure\n        field.center[within]=latitude1,longitude1,latitude2,longitude2, where:\n\n\n        latitude1 and longitude1 refer to the coordinates of the bottom left\n        corner of the rectangle.\n\n\n        latitude2 and longitude2 refer to the coordinates of the top right\n        corner of the rectangle.\n\n\n        2. Using a bounding circle:\n\n        The structure field.center[within]=latitute,longitude,radius will return\n        entries included in the circle with fields.center of the given latitude,\n        longitude and radius (in km).\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space to use\n          example: 5nvk6q4s3ttw\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space environment to use\n          example: master\n        - name: include\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Number of levels to include (defaults to 1)\n        - name: content_type\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Alphanumeric id of the content type to retrieve.\n          example: 2PqfXUJwE8qSYKuM0U6w8M\n        - name: select\n          in: query\n          schema:\n            type: string\n          description: select operator allows you to choose what fields to return from an entity.\n          example: sys.id\n        - name: key\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Part of the query parameter to search on\n          examples:\n            all:\n              value: metadata.tags.sys.id[all]\n              summary: Querying content based on a set of tags\n            in:\n              value: metadata.tags.sys.id[in]\n              summary: You can filter a field by multiple values with the [in] operator\n            nin:\n              value: metadata.tags.sys.id[nin]\n              summary: You can filter a field by multiple (exclude) values with the [nin] operator\n            exist:\n              value: metadata.tags[exists]\n              summary: You can check for the presence of a field using the [exists] operator\n            lt:\n              value: metadata.revision[lt]\n              summary: Range operator - Less than\n            lte:\n              value: metadata.revision[lte]\n              summary: Range operator - Less than or equal\n            gt:\n              value: metadata.revision[gt]\n              summary: Range operator - Greater than\n            gte:\n              value: metadata.revision[gte]\n              summary: Range operator - Greater than or equal\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Full-text search.\n          example: design,some text here\n        - name: fields.{field_id}[match]\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Full-text search on a field.\n          example: fields.website[match]=content\n        - name: fields.center[near]\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Location proximity search.\n          example: fields.center[near]=38,-122\n        - name: fields.center[within]\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Locations in a bounding object, rectangle or circle.\n          examples:\n            rectangle:\n              value: field.center[within]=latitude1,longitude1,latitude2,longitude2\n              summary: Using a bounding rectangle\n            circle:\n              value: field.center[within]=latitute,longitude,radius\n              summary: Using a bounding circle\n        - name: links_to_entry\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Links to entry ID.\n          example: links_to_entry=4LgMotpNF6W20YKmuemW0a\n        - name: links_to_asset\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Links to asset ID.\n          example: links_to_asset=4LgMotpNF6W20YKmuemW0a\n        - name: order\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Order by of results.\n          examples:\n            asc:\n              value: order=sys.createdAt\n              summary: Asc\n            desc:\n              value: order=-sys.createdAt\n              summary: Desc\n            multiple:\n              value: order=sys.createdAt,sys.publishedAt\n              summary: Multiple parameters\n        - name: limit\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Maximum number of results\n          example: limit=100\n        - name: skip\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Offset\n          example: skip=100\n        - name: locale\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Retrieve localized entries\n          examples:\n            locale:\n              value: locale=EN-us\n              summary: single locale\n            all_locales:\n              value: locale=*\n              summary: all locales\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/assets/:\n    get:\n      tags:\n        - Search\n      summary:  Search in assets\n      description: \u003e-\n        1. Using a bounding rectangle:\n\n        To search for locations within a rectangle area object, use the\n        structure\n        field.center[within]=latitude1,longitude1,latitude2,longitude2, where:\n\n\n        latitude1 and longitude1 refer to the coordinates of the bottom left\n        corner of the rectangle.\n\n\n        latitude2 and longitude2 refer to the coordinates of the top right\n        corner of the rectangle.\n\n\n        2. Using a bounding circle:\n\n        The structure field.center[within]=latitute,longitude,radius will return\n        entries included in the circle with fields.center of the given latitude,\n        longitude and radius (in km).\n\n\n        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/search-parameters/filtering-assets-by-mime-type\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space to use\n          example: 5nvk6q4s3ttw\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space environment to use\n          example: master\n        \n        - name: mimetype_group\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Filtering assets by MIME type\n          examples:\n            attachment:\n              value: mimetype_group=attachment\n              summary: attachment\n            plaintext:\n              value: mimetype_group=plaintext\n              summary: plaintext\n            image:\n              value: mimetype_group=image\n              summary: image\n            audio:\n              value: mimetype_group=audio\n              summary: audio\n            video:\n              value: mimetype_group=video\n              summary: video\n            richtext:\n              value: mimetype_group=richtext\n              summary: richtext\n            presentation:\n              value: mimetype_group=presentation\n              summary: presentation\n            spreadsheet:\n              value: mimetype_group=spreadsheet\n              summary: spreadsheet\n            pdfdocument:\n              value: mimetype_group=pdfdocument\n              summary: pdfdocument\n            archive:\n              value: mimetype_group=archive\n              summary: archive\n            code:\n              value: mimetype_group=code\n              summary: code\n            markup:\n              value: mimetype_group=markup\n              summary: markup\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/entries/{entry_id}/:\n    get:\n      tags:\n        - Localization\n      summary: Entry by locale\n      description: \u003e-\n        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/localization/retrieve-localized-entries\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: locale\n          in: query\n          schema:\n            type: string\n          example: en-US\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: entry_id\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n",
			"canonicalURL": "/github.com/josille/apis-schemas@3b2232ed50366c0a1a0618eaafc82c08f3891719/-/blob/openAPI/Contentful-CPA.openapi_collection.yml",
			"externalURLs": [
				{
					"url": "https://github.com/josille/apis-schemas/blob/3b2232ed50366c0a1a0618eaafc82c08f3891719/openAPI/Contentful-CPA.openapi_collection.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/spaces/{space_id}/environments/{environment_id}/entries/{entry_id}\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}