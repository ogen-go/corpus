{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-storage-2015-05-01-preview-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-storage-2015-05-01-preview-swagger.yaml",
			"byteSize": 24435,
			"content": "openapi: 3.0.0\ninfo:\n  description: The Storage Management Client.\n  title: StorageManagementClient\n  version: 2015-05-01-preview\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/storage/resource-manager/Microsoft.Storage/preview/2015-05-01-preview/storage.json\n      version: \"2.0\"\n  x-preferred: false\n  x-providerName: azure.com\n  x-serviceName: storage\n  x-tags:\n    - Azure\n    - Microsoft\nsecurity:\n  - azure_auth:\n      - user_impersonation\npaths:\n  \"/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability\":\n    post:\n      description: Checks that account name is valid and is not in use.\n      operationId: StorageAccounts_CheckNameAvailability\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountCheckNameAvailabilityParame\\\n                ters\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountCheckNameAvailabilityParame\\\n                ters\"\n        description: \"The name of the storage account within the specified resource group.\n          Storage account names must be between 3 and 24 characters in length\n          and use numbers and lower-case letters only.  \"\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckNameAvailabilityResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CheckNameAvailabilityResult\"\n      tags:\n        - StorageAccounts\n  \"/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts\":\n    get:\n      description: Lists all the storage accounts available under the subscription. Note\n        that storage keys are not returned; use the ListKeys operation for this.\n      operationId: StorageAccounts_List\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccountListResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccountListResult\"\n      tags:\n        - StorageAccounts\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages\":\n    get:\n      description: Gets the current usage count and the limit for the resources under the\n        subscription.\n      operationId: Usage_List\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UsageListResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UsageListResult\"\n      tags:\n        - Usage\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts\":\n    get:\n      description: Lists all the storage accounts available under the given resource group.\n        Note that storage keys are not returned; use the ListKeys operation for\n        this.\n      operationId: StorageAccounts_ListByResourceGroup\n      parameters:\n        - description: The name of the resource group within the user's subscription.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccountListResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccountListResult\"\n      tags:\n        - StorageAccounts\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}\":\n    delete:\n      description: Deletes a storage account in Microsoft Azure.\n      operationId: StorageAccounts_Delete\n      parameters:\n        - description: The name of the resource group within the user's subscription.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n        - description: \"The name of the storage account within the specified resource\n            group. Storage account names must be between 3 and 24 characters in\n            length and use numbers and lower-case letters only.  \"\n          in: path\n          name: accountName\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: \"\"\n        \"204\":\n          description: \"\"\n      tags:\n        - StorageAccounts\n    get:\n      description: Returns the properties for the specified storage account including but\n        not limited to name, account type, location, and account status. The\n        ListKeys operation should be used to retrieve storage keys.\n      operationId: StorageAccounts_GetProperties\n      parameters:\n        - description: The name of the resource group within the user's subscription.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n        - description: \"The name of the storage account within the specified resource\n            group. Storage account names must be between 3 and 24 characters in\n            length and use numbers and lower-case letters only.  \"\n          in: path\n          name: accountName\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccount\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccount\"\n      tags:\n        - StorageAccounts\n    patch:\n      description: Updates the account type or tags for a storage account. It can also be\n        used to add a custom domain (note that custom domains cannot be added\n        via the Create operation). Only one custom domain is supported per\n        storage account. This API can only be used to update one of tags,\n        accountType, or customDomain per call. To update multiple of these\n        properties, call the API multiple times with one change per call. This\n        call does not change the storage keys for the account. If you want to\n        change storage account keys, use the RegenerateKey operation. The\n        location and name of the storage account cannot be changed after\n        creation.\n      operationId: StorageAccounts_Update\n      parameters:\n        - description: The name of the resource group within the user's subscription.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n        - description: \"The name of the storage account within the specified resource\n            group. Storage account names must be between 3 and 24 characters in\n            length and use numbers and lower-case letters only.  \"\n          in: path\n          name: accountName\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountUpdateParameters\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountUpdateParameters\"\n        description: \"The parameters to update on the account. Note that only one property\n          can be changed at a time using this API. \"\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccount\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccount\"\n      tags:\n        - StorageAccounts\n    put:\n      description: \"Asynchronously creates a new storage account with the specified\n        parameters. Existing accounts cannot be updated with this API and should\n        instead use the Update Storage Account API. If an account is already\n        created and subsequent PUT request is issued with exact same set of\n        properties, then HTTP 200 would be returned. \"\n      operationId: StorageAccounts_Create\n      parameters:\n        - description: The name of the resource group within the user's subscription.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n        - description: \"The name of the storage account within the specified resource\n            group. Storage account names must be between 3 and 24 characters in\n            length and use numbers and lower-case letters only.  \"\n          in: path\n          name: accountName\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountCreateParameters\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountCreateParameters\"\n        description: The parameters to provide for the created account.\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccount\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccount\"\n        \"202\":\n          description: \"\"\n      tags:\n        - StorageAccounts\n      x-ms-long-running-operation: true\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys\":\n    post:\n      description: Lists the access keys for the specified storage account.\n      operationId: StorageAccounts_ListKeys\n      parameters:\n        - description: The name of the resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n        - description: The name of the storage account.\n          in: path\n          name: accountName\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccountKeys\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccountKeys\"\n      tags:\n        - StorageAccounts\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey\":\n    post:\n      description: Regenerates the access keys for the specified storage account.\n      operationId: StorageAccounts_RegenerateKey\n      parameters:\n        - description: The name of the resource group within the user's subscription.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n        - description: \"The name of the storage account within the specified resource\n            group. Storage account names must be between 3 and 24 characters in\n            length and use numbers and lower-case letters only.  \"\n          in: path\n          name: accountName\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountRegenerateKeyParameters\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountRegenerateKeyParameters\"\n        description: Specifies name of the key which should be regenerated.\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccountKeys\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccountKeys\"\n      tags:\n        - StorageAccounts\nservers:\n  - url: https://management.azure.com\ncomponents:\n  parameters:\n    ApiVersionParameter:\n      description: Client Api Version.\n      in: query\n      name: api-version\n      required: true\n      schema:\n        type: string\n    SubscriptionIdParameter:\n      description: Gets subscription credentials which uniquely identify Microsoft Azure\n        subscription. The subscription ID forms part of the URI for every\n        service call.\n      in: path\n      name: subscriptionId\n      required: true\n      schema:\n        type: string\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  schemas:\n    CheckNameAvailabilityResult:\n      description: The CheckNameAvailability operation response.\n      properties:\n        message:\n          description: Gets an error message explaining the Reason value in more detail.\n          type: string\n        nameAvailable:\n          description: Gets a boolean value that indicates whether the name is available\n            for you to use. If true, the name is available. If false, the name\n            has already been taken or invalid and cannot be used.\n          type: boolean\n        reason:\n          description: Gets the reason that a storage account name could not be used. The\n            Reason element is only returned if NameAvailable is false.\n          enum:\n            - AccountNameInvalid\n            - AlreadyExists\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: Reason\n    CustomDomain:\n      description: The custom domain assigned to this storage account. This can be set via\n        Update.\n      properties:\n        name:\n          description: Gets or sets the custom domain name. Name is the CNAME source.\n          type: string\n        useSubDomainName:\n          description: Indicates whether indirect CName validation is enabled. Default\n            value is false. This should only be set on updates\n          type: boolean\n    Endpoints:\n      description: The URIs that are used to perform a retrieval of a public blob, queue or\n        table object.\n      properties:\n        blob:\n          description: Gets the blob endpoint.\n          type: string\n        queue:\n          description: Gets the queue endpoint.\n          type: string\n        table:\n          description: Gets the table endpoint.\n          type: string\n    Resource:\n      properties:\n        id:\n          description: Resource Id\n          readOnly: true\n          type: string\n        location:\n          description: Resource location\n          type: string\n        name:\n          description: Resource name\n          readOnly: true\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          description: Resource tags\n          type: object\n        type:\n          description: Resource type\n          readOnly: true\n          type: string\n      required:\n        - location\n      x-ms-azure-resource: true\n    StorageAccount:\n      allOf:\n        - $ref: \"#/components/schemas/Resource\"\n      description: The storage account.\n      properties:\n        properties:\n          $ref: \"#/components/schemas/StorageAccountProperties\"\n    StorageAccountCheckNameAvailabilityParameters:\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n    StorageAccountCreateParameters:\n      allOf:\n        - $ref: \"#/components/schemas/Resource\"\n      description: The parameters to provide for the account.\n      properties:\n        properties:\n          $ref: \"#/components/schemas/StorageAccountPropertiesCreateParameters\"\n    StorageAccountKeys:\n      description: The access keys for the storage account.\n      properties:\n        key1:\n          description: Gets the value of key 1.\n          type: string\n        key2:\n          description: Gets the value of key 2.\n          type: string\n    StorageAccountListResult:\n      description: The list storage accounts operation response.\n      properties:\n        nextLink:\n          description: Gets the link to the next set of results. Currently this will always\n            be empty as the API does not support pagination.\n          type: string\n        value:\n          description: Gets the list of storage accounts and their properties.\n          items:\n            $ref: \"#/components/schemas/StorageAccount\"\n          type: array\n    StorageAccountProperties:\n      properties:\n        accountType:\n          description: Gets the type of the storage account.\n          enum:\n            - Standard_LRS\n            - Standard_ZRS\n            - Standard_GRS\n            - Standard_RAGRS\n            - Premium_LRS\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: AccountType\n        creationTime:\n          description: Gets the creation date and time of the storage account in UTC.\n          format: date-time\n          type: string\n        customDomain:\n          $ref: \"#/components/schemas/CustomDomain\"\n        lastGeoFailoverTime:\n          description: Gets the timestamp of the most recent instance of a failover to the\n            secondary location. Only the most recent timestamp is retained. This\n            element is not returned if there has never been a failover instance.\n            Only available if the accountType is StandardGRS or StandardRAGRS.\n          format: date-time\n          type: string\n        primaryEndpoints:\n          $ref: \"#/components/schemas/Endpoints\"\n        primaryLocation:\n          description: Gets the location of the primary for the storage account.\n          type: string\n        provisioningState:\n          description: Gets the status of the storage account at the time the operation was\n            called.\n          enum:\n            - Creating\n            - ResolvingDNS\n            - Succeeded\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: ProvisioningState\n        secondaryEndpoints:\n          $ref: \"#/components/schemas/Endpoints\"\n        secondaryLocation:\n          description: Gets the location of the geo replicated secondary for the storage\n            account. Only available if the accountType is StandardGRS or\n            StandardRAGRS.\n          type: string\n        statusOfPrimary:\n          description: Gets the status indicating whether the primary location of the\n            storage account is available or unavailable.\n          enum:\n            - Available\n            - Unavailable\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: AccountStatus\n        statusOfSecondary:\n          description: Gets the status indicating whether the secondary location of the\n            storage account is available or unavailable. Only available if the\n            accountType is StandardGRS or StandardRAGRS.\n          enum:\n            - Available\n            - Unavailable\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: AccountStatus\n    StorageAccountPropertiesCreateParameters:\n      properties:\n        accountType:\n          description: Gets or sets the account type.\n          enum:\n            - Standard_LRS\n            - Standard_ZRS\n            - Standard_GRS\n            - Standard_RAGRS\n            - Premium_LRS\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: AccountType\n    StorageAccountPropertiesUpdateParameters:\n      properties:\n        accountType:\n          description: Gets or sets the account type. Note that StandardZRS and PremiumLRS\n            accounts cannot be changed to other account types, and other account\n            types cannot be changed to StandardZRS or PremiumLRS.\n          enum:\n            - Standard_LRS\n            - Standard_ZRS\n            - Standard_GRS\n            - Standard_RAGRS\n            - Premium_LRS\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: AccountType\n        customDomain:\n          $ref: \"#/components/schemas/CustomDomain\"\n    StorageAccountRegenerateKeyParameters:\n      properties:\n        keyName:\n          enum:\n            - key1\n            - key2\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: KeyName\n    StorageAccountUpdateParameters:\n      allOf:\n        - $ref: \"#/components/schemas/Resource\"\n      description: The parameters to update on the account.\n      properties:\n        properties:\n          $ref: \"#/components/schemas/StorageAccountPropertiesUpdateParameters\"\n    SubResource:\n      properties:\n        id:\n          description: Resource Id\n          type: string\n      x-ms-azure-resource: true\n    Usage:\n      description: Describes Storage Resource Usage.\n      properties:\n        currentValue:\n          description: Gets the current count of the allocated resources in the\n            subscription.\n          format: int32\n          type: integer\n        limit:\n          description: Gets the maximum count of the resources that can be allocated in the\n            subscription.\n          format: int32\n          type: integer\n        name:\n          $ref: \"#/components/schemas/UsageName\"\n        unit:\n          description: Gets the unit of measurement.\n          enum:\n            - Count\n            - Bytes\n            - Seconds\n            - Percent\n            - CountsPerSecond\n            - BytesPerSecond\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: UsageUnit\n    UsageListResult:\n      description: The List Usages operation response.\n      properties:\n        value:\n          description: Gets or sets the list Storage Resource Usages.\n          items:\n            $ref: \"#/components/schemas/Usage\"\n          type: array\n    UsageName:\n      description: The Usage Names.\n      properties:\n        localizedValue:\n          description: Gets a localized string describing the resource name.\n          type: string\n        value:\n          description: Gets a string describing the resource name.\n          type: string\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-storage-2015-05-01-preview-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-storage-2015-05-01-preview-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability\": post: security: security \"azure_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}