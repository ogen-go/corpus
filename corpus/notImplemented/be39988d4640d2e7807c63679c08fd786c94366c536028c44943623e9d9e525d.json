{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/huqianghui/springboot-study"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "springboot基本知识/users/api/swagger.yaml",
			"byteSize": 7405,
			"content": "openapi: 3.0.1\ninfo:\n  title: hu-study-swagger\n  description: hu study of swagger 2.x\n  termsOfService: https://github.com/dyc87112/spring-boot-starter-swagger\n  contact:\n    name: hu\n    url: https://github.com/huqianghui/springboot-study\n    email: huqianghui0613@163.com\n  license:\n    name: Apache License, Version 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.9.0.RELEASE\nservers:\n- url: //localhost:18080/\ntags:\n- name: 用户管理\n  description: User Controller\npaths:\n  /users/:\n    get:\n      tags:\n      - 用户管理\n      summary: 获取用户列表\n      operationId: getUserListUsingGET\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/User'\n                x-content-type: '*/*'\n        \"401\":\n          description: Unauthorized\n          content: {}\n        \"403\":\n          description: Forbidden\n          content: {}\n        \"404\":\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-swagger-router-controller: \"\"\n    post:\n      tags:\n      - 用户管理\n      summary: 创建用户\n      description: 根据User对象创建用户\n      operationId: postUserUsingPOST\n      requestBody:\n        description: user\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n                x-content-type: '*/*'\n        \"201\":\n          description: Created\n          content: {}\n        \"401\":\n          description: Unauthorized\n          content: {}\n        \"403\":\n          description: Forbidden\n          content: {}\n        \"404\":\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: user\n      x-swagger-router-controller: \"\"\n  /users/byIdAndName:\n    get:\n      tags:\n      - 用户管理\n      summary: 通过ID和名字获取单个用户信息\n      operationId: getUserByIdAndNameUsingGET\n      parameters:\n      - name: name\n        in: query\n        description: 用户名\n        required: true\n        schema:\n          type: string\n        example: hu\n      - name: userId\n        in: query\n        description: 用户ID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 1\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/User'\n        \"401\":\n          description: Unauthorized\n          content: {}\n        \"403\":\n          description: Forbidden\n          content: {}\n        \"404\":\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-swagger-router-controller: \"\"\n  /users/byIdOrName:\n    get:\n      tags:\n      - 用户管理\n      summary: 通过ID或者名字获取单个用户信息\n      operationId: getUserByIdOrNameUsingGET\n      parameters:\n      - name: name\n        in: query\n        description: 用户名\n        schema:\n          type: string\n        example: hu\n      - name: userId\n        in: query\n        description: 用户ID\n        schema:\n          type: integer\n          format: int64\n        example: 1\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/User'\n        \"401\":\n          description: Unauthorized\n          content: {}\n        \"403\":\n          description: Forbidden\n          content: {}\n        \"404\":\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-swagger-router-controller: \"\"\n  /users/{id}:\n    get:\n      tags:\n      - 用户管理\n      summary: 获取用户详细信息\n      description: 根据url的id来获取用户详细信息\n      operationId: getUserUsingGET\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/User'\n        \"401\":\n          description: Unauthorized\n          content: {}\n        \"403\":\n          description: Forbidden\n          content: {}\n        \"404\":\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-swagger-router-controller: \"\"\n    put:\n      tags:\n      - 用户管理\n      summary: 更新用户详细信息\n      description: 根据url的id来指定更新对象，并根据传过来的user信息来更新用户详细信息\n      operationId: putUserUsingPUT\n      parameters:\n      - name: id\n        in: path\n        description: 用户编号\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 1\n      requestBody:\n        description: user\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n                x-content-type: '*/*'\n        \"201\":\n          description: Created\n          content: {}\n        \"401\":\n          description: Unauthorized\n          content: {}\n        \"403\":\n          description: Forbidden\n          content: {}\n        \"404\":\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: user\n      x-swagger-router-controller: \"\"\n    delete:\n      tags:\n      - 用户管理\n      summary: 删除用户\n      description: 根据url的id来指定删除对象\n      operationId: deleteUserUsingDELETE\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n                x-content-type: '*/*'\n        \"204\":\n          description: No Content\n          content: {}\n        \"401\":\n          description: Unauthorized\n          content: {}\n        \"403\":\n          description: Forbidden\n          content: {}\n      deprecated: false\n      x-swagger-router-controller: \"\"\ncomponents:\n  schemas:\n    User:\n      title: User\n      type: object\n      properties:\n        age:\n          maximum: 1E+2\n          exclusiveMaximum: false\n          minimum: 1E+1\n          exclusiveMinimum: false\n          type: integer\n          description: 用户年龄\n          format: int32\n        email:\n          type: string\n          description: 用户邮箱\n        id:\n          type: integer\n          description: 用户编号\n          format: int64\n        name:\n          maxLength: 5\n          minLength: 2\n          type: string\n          description: 用户姓名\n      description: 用户实体\n      example:\n        name: name\n        id: 6\n        age: 17\n        email: email\n",
			"canonicalURL": "/github.com/huqianghui/springboot-study@0ec319fab9ed1874a51811f952554f5512d51980/-/blob/springboot%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/users/api/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/huqianghui/springboot-study/blob/0ec319fab9ed1874a51811f952554f5512d51980/springboot基本知识/users/api/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/users/\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}