{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/factset/enterprise-sdk"
		},
		"file": {
			"name": "Formula.v1.yaml",
			"size": 0,
			"path": "specs/Formula.v1.yaml",
			"byteSize": 159280,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.2.0\n  title: FactSet Formula API\n  description: \u003e\n\n    **FactSet Formula API**\n\n\n    FactSet’s Formula API is a modern, flexible, formula-based API that enables\n    users to access FactSet’s wide range of financial data and content. The API\n    offers two endpoints, one optimized for time-series analysis and one\n    designed for cross-sectional analysis, providing users a simplified\n    interface into FactSet’s expansive offering. By providing two endpoints, it\n    allows for the optimization of user workflows, while reducing complexity.\n\n\n    Leverage the power and flexibility of the Formula API to -\n      * Pull data from across most content sets that a user has access to in a single request\n      * Include business logic and mathematical operations in request\n      * Submit a dynamic universe in both endpoints\n      * Return the fsymId to easily combine with other FactSet content / products\n      * Set the trading calendar\n      * Define custom display names\n\n    **Formula API Request Builder**\n\n\n    The Formula API Request Builder provides users everything they need to form\n    a Formula API request. In the Request Builder, you can select identifiers,\n    build a universe expression, select FQL or Screening formulas, easily apply\n    business logic and mathematical functions to the FQL or Screening formulas,\n    specify optional parameters, and construct a GET or POST request. The\n    Request Builder eliminates the need to have previous FQL and Screening\n    knowledge and allows you to quickly find your desired data items and form\n    the request.\n\n\n    The Formula API Request Builder can be accessed by navigating to\n    [https://developer.factset.com/formula-api-request-builder](https://developer.factset.com/formula-api-request-builder)\n    and logging in using your FactSet.net ID. When using the Request Builder to\n    construct requests for the one of the Formula API's endpoints, be sure to\n    toggle to the correct endpoint at the top of the page.\n\n\n    **How to Check the Health and Availability of the Formula API**\n\n\n    Please use the below endpoint to check the health and availability of the\n    Formula API. You must be authorized for this API to use the Health endpoint.\n\n\n    [https://api.factset.com/formula-api/health](https://api.factset.com/formula-api/health)\n\n\n    **How to Programmatically Download API Specification File**\n\n\n    Please use the below endpoint to download the FactSet Formula API\n    Specification File in .yaml. You must be authorized for this API to extract.\n    This specification can then be used for Codegen to create your own SDKs. You\n    can also download the spec using the \"Download Spec\" button to the right of\n    the version number.\n\n\n    [https://api.factset.com/formula-api/v1/spec](https://api.factset.com/formula-api/v1/spec)\nservers:\n  - description: Production\n    url: https://api.factset.com/formula-api\nsecurity:\n  - FactSetApiKey: []\n  - FactSetOAuth2: []\npaths:\n  /v1/time-series:\n    get:\n      summary: \u003e-\n        Retrieve data items (FQL formulas) for a list of identifiers or defined\n        universe.\n      description: \u003e\n        The `/time-series` endpoint is closely aligned with FactSet’s powerful\n        data retrieval language **FactSet Query Language (FQL)** which is\n        optimized for time-series analysis. FQL can also perform sophisticated\n        statistical, mathematical, logical, and other complex operations on the\n        data.\n\n          This endpoint has a unique **TIMESERIES** data object that pairs the requested data with FactSet provided dates. This helps reduce the need for additional data requests and reduces the work required by users.\n\n        The `/time-series` endpoint supports Long Running asynchronous requests\n        up to **10 minutes** via the `batch` parameter. *This feature is\n        available to Individual Users subscribed to the Performance Package and\n        Performance Package Plus Performance Tiers and all Production Users. If\n        you are unsure which Performance Tier you are subscribed to or you would\n        like to gain access to the batch capabilities, please contact your\n        FactSet Account Team or \"Report Issue\" above and our support teams can\n        assist.*\n      tags:\n        - Time-Series\n      operationId: getTimeSeriesData\n      parameters:\n        - $ref: '#/components/parameters/ids'\n        - $ref: '#/components/parameters/universe'\n        - $ref: '#/components/parameters/universeType_time_series'\n        - $ref: '#/components/parameters/formulas_time_series'\n        - $ref: '#/components/parameters/calendar'\n        - $ref: '#/components/parameters/fsymId_time_series'\n        - $ref: '#/components/parameters/displayName_time_series'\n        - $ref: '#/components/parameters/flatten_time_series'\n        - $ref: '#/components/parameters/batch'\n      responses:\n        '200':\n          description: \u003e-\n            Gets an array of `Response Objects` for a list of IDs and FQL\n            formulas.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n            X-RateLimit-Limit-second:\n              $ref: '#/components/headers/X-RateLimit-Limit-second'\n            X-RateLimit-Remaining-second:\n              $ref: '#/components/headers/X-RateLimit-Remaining-second'\n            X-RateLimit-Limit-day:\n              $ref: '#/components/headers/X-RateLimit-Limit-day'\n            X-RateLimit-Remaining-day:\n              $ref: '#/components/headers/X-RateLimit-Remaining-day'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/time_series_response'\n              examples:\n                Single Id and Single Data Item:\n                  $ref: '#/components/examples/time-series-singleId-singleItem'\n                Single Id and Single Data Item with fsymId=Y:\n                  $ref: '#/components/examples/time-series-singleId-singleItem-fsymId'\n                Multiple Ids and Multiple Data Items with SEVENDAY Calendar:\n                  $ref: '#/components/examples/time-series-multipleId-multipleItem'\n                Multiple Ids and Multiple Data Items with flatten=Y:\n                  $ref: \u003e-\n                    #/components/examples/time-series-multipleId-multipleItem-flatten\n                Multiple Ids and Multiple Calculated Data Items:\n                  $ref: \u003e-\n                    #/components/examples/time-series-multipleId-multipleCalculatedItem\n                Small Universe and Single Data Item:\n                  $ref: '#/components/examples/time-series-smallUniv-singleItem'\n                Debt Universe and Multiple Data Items:\n                  $ref: '#/components/examples/time-series-debtUniv-multipleItem'\n        '202':\n          description: Batch request has been accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n              examples:\n                Batch Request Accepted:\n                  $ref: '#/components/examples/BatchStatusAcceptedResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '405':\n          $ref: '#/components/responses/405'\n        '406':\n          $ref: '#/components/responses/406'\n        '408':\n          $ref: '#/components/responses/408'\n        '415':\n          $ref: '#/components/responses/415'\n        '429':\n          $ref: '#/components/responses/429'\n        '500':\n          $ref: '#/components/responses/500'\n        '501':\n          $ref: '#/components/responses/501'\n        '503':\n          $ref: '#/components/responses/503'\n      x-factset-different-success-responses: true\n    post:\n      summary: \u003e-\n        Retrieve data items (FQL formulas) for a list of identifiers or defined\n        universe.\n      description: \u003e\n        The `/time-series` endpoint is closely aligned with FactSet’s powerful\n        data retrieval language **FactSet Query Language (FQL)** which is\n        optimized for time-series analysis. FQL can also perform sophisticated\n        statistical, mathematical, logical, and other complex operations on the\n        data.\n\n          This endpoint has a unique **TIMESERIES** data object that pairs the requested data with FactSet provided dates. This helps reduce the need for additional data requests and reduces the work required by users.\n\n        The `/time-series` endpoint supports Long Running asynchronous requests\n        up to **10 minutes** via the `batch` parameter. *This feature is\n        available to Individual Users subscribed to the Performance Package and\n        Performance Package Plus Performance Tiers and all Production Users. If\n        you are unsure which Performance Tier you are subscribed to or you would\n        like to gain access to the batch capabilities, please contact your\n        FactSet Account Team or \"Report Issue\" above and our support teams can\n        assist.*\n      tags:\n        - Time-Series\n      operationId: getTimeSeriesDataForList\n      responses:\n        '200':\n          description: \u003e-\n            Gets an array of `Response Objects` for a list of IDs and FQL\n            formulas.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n            X-RateLimit-Limit-second:\n              $ref: '#/components/headers/X-RateLimit-Limit-second'\n            X-RateLimit-Remaining-second:\n              $ref: '#/components/headers/X-RateLimit-Remaining-second'\n            X-RateLimit-Limit-day:\n              $ref: '#/components/headers/X-RateLimit-Limit-day'\n            X-RateLimit-Remaining-day:\n              $ref: '#/components/headers/X-RateLimit-Remaining-day'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/time_series_response'\n              examples:\n                Single Id and Single Data Item:\n                  $ref: '#/components/examples/time-series-singleId-singleItem'\n                Single Id and Single Data Item with fsymId=Y:\n                  $ref: '#/components/examples/time-series-singleId-singleItem-fsymId'\n                Multiple Ids and Multiple Data Items with SEVENDAY Calendar:\n                  $ref: '#/components/examples/time-series-multipleId-multipleItem'\n                Multiple Ids and Multiple Data Items with flatten=Y:\n                  $ref: \u003e-\n                    #/components/examples/time-series-multipleId-multipleItem-flatten\n                Multiple Ids and Multiple Calculated Data Items:\n                  $ref: \u003e-\n                    #/components/examples/time-series-multipleId-multipleCalculatedItem\n                Small Universe and Single Data Item:\n                  $ref: '#/components/examples/time-series-smallUniv-singleItem'\n                Debt Universe and Multiple Data Items:\n                  $ref: '#/components/examples/time-series-debtUniv-multipleItem'\n        '202':\n          description: Batch request has been accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n              examples:\n                Batch Request Accepted:\n                  $ref: '#/components/examples/BatchStatusAcceptedResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '405':\n          $ref: '#/components/responses/405'\n        '406':\n          $ref: '#/components/responses/406'\n        '408':\n          $ref: '#/components/responses/408'\n        '415':\n          $ref: '#/components/responses/415'\n        '429':\n          $ref: '#/components/responses/429'\n        '500':\n          $ref: '#/components/responses/500'\n        '501':\n          $ref: '#/components/responses/501'\n        '503':\n          $ref: '#/components/responses/503'\n      requestBody:\n        $ref: '#/components/requestBodies/time-series-postBody'\n      x-factset-different-success-responses: true\n  /v1/cross-sectional:\n    get:\n      summary: \u003e-\n        Retrieve data items (Screening formulas) for a list of identifiers or\n        defined universe.\n      description: \u003e\n        The `/cross-sectional` endpoint is closely aligned with FactSet’s\n        powerful data retrieval **Screening language** which is optimized for\n        analysis of data items at single point in time for different entities\n        and is extremely efficient for large universes.\n\n\n        The `/cross-sectional` endpoint supports Long Running asynchronous\n        requests up to **10 minutes** via the `batch` parameter. *This feature\n        is available to Individual Users subscribed to the Performance Package\n        and Performance Package Plus Performance Tiers and all Production Users.\n        If you are unsure which Performance Tier you are subscribed to or you\n        would like to gain access to the batch capabilities, please contact your\n        FactSet Account Team or \"Report Issue\" above and our support teams can\n        assist.*\n      tags:\n        - Cross-Sectional\n      operationId: getCrossSectionalData\n      parameters:\n        - $ref: '#/components/parameters/ids'\n        - $ref: '#/components/parameters/universe'\n        - $ref: '#/components/parameters/universeType_cross_sectional'\n        - $ref: '#/components/parameters/formulas_cross_sectional'\n        - $ref: '#/components/parameters/backTestDate'\n        - $ref: '#/components/parameters/calendar'\n        - $ref: '#/components/parameters/fsymId_cross_sectional'\n        - $ref: '#/components/parameters/displayName_cross_sectional'\n        - $ref: '#/components/parameters/flatten_cross_sectional'\n        - $ref: '#/components/parameters/batch'\n      responses:\n        '200':\n          description: \u003e-\n            Gets an array of `Response Objects` for a list of IDs and Screening\n            formulas.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n            X-RateLimit-Limit-second:\n              $ref: '#/components/headers/X-RateLimit-Limit-second'\n            X-RateLimit-Remaining-second:\n              $ref: '#/components/headers/X-RateLimit-Remaining-second'\n            X-RateLimit-Limit-day:\n              $ref: '#/components/headers/X-RateLimit-Limit-day'\n            X-RateLimit-Remaining-day:\n              $ref: '#/components/headers/X-RateLimit-Remaining-day'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/cross_sectional_response'\n              examples:\n                Single Equity Id and Single Equity Data Item:\n                  $ref: '#/components/examples/cross-sectional-singleId-singleItem'\n                Single Equity Id and Single Equity Data Item with fsymId=Y:\n                  $ref: \u003e-\n                    #/components/examples/cross-sectional-singleId-singleItem-fsymId\n                Multiple Equity Ids and Multiple Equity Data Items:\n                  $ref: \u003e-\n                    #/components/examples/cross-sectional-multipleId-multipleItem\n                Multiple Equity Ids and Multiple Equity Data Items with flatten=Y:\n                  $ref: \u003e-\n                    #/components/examples/cross-sectional-multipleId-multipleItem-flatten\n                Multiple Equity Ids and Multiple Calculated Equity Data Items:\n                  $ref: \u003e-\n                    #/components/examples/cross-sectional-multipleId-multipleCalculatedItem\n                Multiple Fixed Income Ids and Multiple Fixed Income Data Items:\n                  $ref: \u003e-\n                    #/components/examples/cross-sectional-multipleFixedIncomeId-multipleItem\n                Small Equity Universe and Single Equity Data Item:\n                  $ref: '#/components/examples/cross-sectional-smallUniv-singleItem'\n                Debt Universe and Multiple Debt Data Items:\n                  $ref: '#/components/examples/cross-sectional-debtUniv-multipleItem'\n        '202':\n          description: Batch request has been accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n              examples:\n                Batch Request Accepted:\n                  $ref: '#/components/examples/BatchStatusAcceptedResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '405':\n          $ref: '#/components/responses/405'\n        '406':\n          $ref: '#/components/responses/406'\n        '408':\n          $ref: '#/components/responses/408'\n        '415':\n          $ref: '#/components/responses/415'\n        '429':\n          $ref: '#/components/responses/429'\n        '500':\n          $ref: '#/components/responses/500'\n        '501':\n          $ref: '#/components/responses/501'\n        '503':\n          $ref: '#/components/responses/503'\n      x-factset-different-success-responses: true\n    post:\n      summary: \u003e-\n        Retrieve data items (Screening formulas) for a list of identifiers or\n        defined universe.\n      description: \u003e\n        The `/cross-sectional` endpoint is closely aligned with FactSet’s\n        powerful data retrieval **Screening language** which is optimized for\n        analysis of data items at single point in time for different entities\n        and is extremely efficient for large universes.\n\n\n        The `/cross-sectional` endpoint supports Long Running asynchronous\n        requests up to **10 minutes** via the `batch` parameter. *This feature\n        is available to Individual Users subscribed to the Performance Package\n        and Performance Package Plus Performance Tiers and all Production Users.\n        If you are unsure which Performance Tier you are subscribed to or you\n        would like to gain access to the batch capabilities, please contact your\n        FactSet Account Team or \"Report Issue\" above and our support teams can\n        assist.*\n      tags:\n        - Cross-Sectional\n      operationId: getCrossSectionalDataForList\n      responses:\n        '200':\n          description: \u003e-\n            Gets an array of `Response Objects` for a list of IDs and Screening\n            formulas.\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n            X-RateLimit-Limit-second:\n              $ref: '#/components/headers/X-RateLimit-Limit-second'\n            X-RateLimit-Remaining-second:\n              $ref: '#/components/headers/X-RateLimit-Remaining-second'\n            X-RateLimit-Limit-day:\n              $ref: '#/components/headers/X-RateLimit-Limit-day'\n            X-RateLimit-Remaining-day:\n              $ref: '#/components/headers/X-RateLimit-Remaining-day'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/cross_sectional_response'\n              examples:\n                Single Equity Id and Single Equity Data Item:\n                  $ref: '#/components/examples/cross-sectional-singleId-singleItem'\n                Single Equity Id and Single Equity Data Item with fsymId=Y:\n                  $ref: \u003e-\n                    #/components/examples/cross-sectional-singleId-singleItem-fsymId\n                Multiple Equity Ids and Multiple Equity Data Items:\n                  $ref: \u003e-\n                    #/components/examples/cross-sectional-multipleId-multipleItem\n                Multiple Equity Ids and Multiple Equity Data Items with flatten=Y:\n                  $ref: \u003e-\n                    #/components/examples/cross-sectional-multipleId-multipleItem-flatten\n                Multiple Equity Ids and Multiple Calculated Equity Data Items:\n                  $ref: \u003e-\n                    #/components/examples/cross-sectional-multipleId-multipleCalculatedItem\n                Multiple Fixed Income Ids and Multiple Fixed Income Data Items:\n                  $ref: \u003e-\n                    #/components/examples/cross-sectional-multipleFixedIncomeId-multipleItem\n                Small Equity Universe and Single Equity Data Item:\n                  $ref: '#/components/examples/cross-sectional-smallUniv-singleItem'\n                Debt Universe and Multiple Debt Data Items:\n                  $ref: '#/components/examples/cross-sectional-debtUniv-multipleItem'\n        '202':\n          description: Batch request has been accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n              examples:\n                Batch Request Accepted:\n                  $ref: '#/components/examples/BatchStatusAcceptedResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '405':\n          $ref: '#/components/responses/405'\n        '406':\n          $ref: '#/components/responses/406'\n        '408':\n          $ref: '#/components/responses/408'\n        '415':\n          $ref: '#/components/responses/415'\n        '429':\n          $ref: '#/components/responses/429'\n        '500':\n          $ref: '#/components/responses/500'\n        '501':\n          $ref: '#/components/responses/501'\n        '503':\n          $ref: '#/components/responses/503'\n      requestBody:\n        $ref: '#/components/requestBodies/cross-sectional-postBody'\n      x-factset-different-success-responses: true\n  /v1/batch-status:\n    get:\n      summary: Returns the status for a Batch Request\n      description: \u003e\n        Return the status for the underlying batch request that is specified by\n        the id.\n\n          The Formula API supports Long Running asynchronous requests up to **10 minutes** via the `batch` parameter in the `/time-series` and `/cross-sectional` endpoints.\n\n          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n      tags:\n        - Batch Processing\n      operationId: getBatchStatus\n      parameters:\n        - $ref: '#/components/parameters/batchId'\n      responses:\n        '201':\n          description: Batch Request has been completed and the response has been created.\n          headers:\n            Location:\n              description: Path to Batch Request result.\n              schema:\n                type: string\n              example: batch/v1/result?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n              examples:\n                Batch Status Done:\n                  $ref: '#/components/examples/BatchStatusDoneResponse'\n        '202':\n          description: Batch Request has not finished and the result has NOT been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n              examples:\n                Batch Status Queued:\n                  $ref: '#/components/examples/BatchStatusQueuedResponse'\n                Batch Status Executing:\n                  $ref: '#/components/examples/BatchStatusExecutingResponse'\n                Batch Status Failed:\n                  $ref: '#/components/examples/BatchStatusFailedResponse'\n        '404':\n          description: Not Found\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error_detail'\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: batchRequestNotFound\n                title: The Batch Request was not found. It has probably expired.\n                timeStamp: '2019-11-01 11:09:41.918'\n      deprecated: false\n    post:\n      summary: Returns the status for a Batch Request\n      description: \u003e\n        Return the status for the underlying batch request that is specified by\n        the id.\n\n          The Formula API supports Long Running asynchronous requests up to **10 minutes** via the `batch` parameter in the `/time-series` and `/cross-sectional` endpoints.\n\n          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n      tags:\n        - Batch Processing\n      operationId: getBatchStatusWithPost\n      responses:\n        '201':\n          description: Batch Request has been completed and the response has been created.\n          headers:\n            Location:\n              description: Path to Batch Request result.\n              schema:\n                type: string\n              example: batch/v1/result?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n              examples:\n                Batch Status Done:\n                  $ref: '#/components/examples/BatchStatusDoneResponse'\n        '202':\n          description: Batch Request has not finished and the result has NOT been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n              examples:\n                Batch Status Queued:\n                  $ref: '#/components/examples/BatchStatusQueuedResponse'\n                Batch Status Executing:\n                  $ref: '#/components/examples/BatchStatusExecutingResponse'\n                Batch Status Failed:\n                  $ref: '#/components/examples/BatchStatusFailedResponse'\n        '404':\n          description: Not Found\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error_detail'\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: batchRequestNotFound\n                title: The Batch Request was not found. It has probably expired.\n                timeStamp: '2019-11-01 11:09:41.918'\n      deprecated: false\n      requestBody:\n        $ref: '#/components/requestBodies/batch-status-postBody'\n  /v1/batch-result:\n    get:\n      summary: Returns the response for a Batch Request\n      description: \u003e\n        Returns the response data for the underlying batch request that is\n        specified by the id.\n\n          The Formula API supports Long Running asynchronous requests up to **10 minutes** via the `batch` parameter in the `/time-series` and `/cross-sectional` endpoints.\n\n          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n      tags:\n        - Batch Processing\n      operationId: getBatchData\n      parameters:\n        - $ref: '#/components/parameters/batchId'\n      responses:\n        '200':\n          description: \u003e-\n            Request Response Object when batch request has completed and\n            response is created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchDataResponse'\n              examples:\n                Time-Series Single Id and Single Data Item:\n                  $ref: '#/components/examples/time-series-singleId-singleItem'\n                Cross-Sectional Single Id and Single Data Item:\n                  $ref: '#/components/examples/cross-sectional-singleId-singleItem'\n        '202':\n          description: Batch Request has not finished and the result has NOT been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n              examples:\n                Batch Request Queued:\n                  $ref: '#/components/examples/BatchResultQueuedResponse'\n                Batch Request Executing:\n                  $ref: '#/components/examples/BatchResultExecutingResponse'\n        '404':\n          description: Not Found\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error_detail'\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: batchRequestNotFound\n                title: The Batch Request was not found. It has probably expired.\n                timeStamp: '2019-11-01 11:09:41.918'\n      deprecated: false\n      x-factset-different-success-responses: true\n    post:\n      summary: Returns the status for a Batch Request\n      description: \u003e\n        Returns the response data for the underlying batch request that is\n        specified by the id.\n\n          The Formula API supports Long Running asynchronous requests up to **10 minutes** via the `batch` parameter in the `/time-series` and `/cross-sectional` endpoints.\n\n          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or \"Report Issue\" above and our support teams can assist.*\n      tags:\n        - Batch Processing\n      operationId: getBatchDataWithPost\n      responses:\n        '200':\n          description: \u003e-\n            Request Response Object when batch request has completed and\n            response is created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchDataResponse'\n              examples:\n                Time-Series Single Id and Single Data Item:\n                  $ref: '#/components/examples/time-series-singleId-singleItem'\n                Cross-Sectional Single Id and Single Data Item:\n                  $ref: '#/components/examples/cross-sectional-singleId-singleItem'\n        '202':\n          description: Batch Request has not finished and the result has NOT been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n              examples:\n                Batch Request Queued:\n                  $ref: '#/components/examples/BatchResultQueuedResponse'\n                Batch Request Executing:\n                  $ref: '#/components/examples/BatchResultExecutingResponse'\n        '404':\n          description: Not Found\n          headers:\n            api-version:\n              $ref: '#/components/headers/api-version'\n            api-supported-versions:\n              $ref: '#/components/headers/api-supported-versions'\n            api-deprecated-versions:\n              $ref: '#/components/headers/api-deprecated-versions'\n            chain-id:\n              $ref: '#/components/headers/chain-id'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error_detail'\n              example:\n                id: 5EFCCA8940CAEB6E\n                code: batchRequestNotFound\n                title: The Batch Request was not found. It has probably expired.\n                timeStamp: '2019-11-01 11:09:41.918'\n      deprecated: false\n      requestBody:\n        $ref: '#/components/requestBodies/batch-result-postBody'\n      x-factset-different-success-responses: true\ncomponents:\n  securitySchemes:\n    FactSetOAuth2:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: https://auth.factset.com/as/token.oauth2\n          scopes: {}\n    FactSetApiKey:\n      type: http\n      scheme: basic\n  parameters:\n    ids:\n      name: ids\n      description: \u003e\n        List of entity identifiers.\n\n\n        The `ids` and `universe` parameters provide two different ways to\n        specify the identifiers for which you want data retrieved. Please enter\n        either the `ids` or `universe` parameter.\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n          example:\n            - FDS-US\n            - IBM-US\n      explode: false\n      examples:\n        singleId:\n          summary: Single id\n          value:\n            - IBM\n        multipleIds:\n          summary: Multiple ids\n          value:\n            - IBM\n            - AAPL\n            - MSFT\n    universe:\n      name: universe\n      description: |\n        Screening expression to limit the universe\n\n        Please enter either the `ids` or `universe` parameter.\n      in: query\n      required: false\n      schema:\n        type: string\n      explode: false\n      examples:\n        noUniverse:\n          summary: '---'\n          value: ''\n        oneCriteria:\n          summary: Equity Universe - S\u0026P 500 Constituents\n          value: FG_CONSTITUENTS(SP50,0,CLOSE)\n        twoCriteria:\n          summary: Equity Universe -  S\u0026P 500 Constituents with Price \u003c 10 USD\n          value: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)\u003c10)=1\n        debtUniverse:\n          summary: Debt Universe - Starbucks Debt\n          description: \u003e\n            The issuer name and amount out for all debt instruments for the\n            Starbucks Corporation\n\n\n            To calculate fixed income universe, `universeType` must be set to\n            **DEBT**.\n          value: EQUITY(P_SYMBOL)='SBUX-US'\n    universeType_time_series:\n      name: universeType\n      in: query\n      description: \u003e\n        Specify the universe type to calculate the `universe` in.\n\n\n        Find documentation below on how to build a screen for each universe type\n        -\n\n        * Equity Screen - [Online Assistant Page\n        20606](https://my.apps.factset.com/oa/pages/20606)\n\n\n        * Debt Screen - [Online Assistant Page\n        20888](https://my.apps.factset.com/oa/pages/20888)\n\n\n        * Fund Screen - [Online Assistant Page\n        21384](https://my.apps.factset.com/oa/pages/21384)\n\n\n        This parameter may only be used in conjunction with the `universe`\n        parameter.\n      required: false\n      schema:\n        type: string\n        enum:\n          - EQUITY\n          - DEBT\n          - FUND\n        default: EQUITY\n      explode: false\n    universeType_cross_sectional:\n      name: universeType\n      in: query\n      description: \u003e\n        Specify the universe type to calculate the `universe` in.\n\n\n        Find documentation below on how to build a screen for each universe type\n        -\n\n        * Equity Screen - [Online Assistant Page\n        20606](https://my.apps.factset.com/oa/pages/20606)\n\n\n        * Debt Screen - [Online Assistant Page\n        20888](https://my.apps.factset.com/oa/pages/20888)\n\n\n        * Fund Screen - [Online Assistant Page\n        21384](https://my.apps.factset.com/oa/pages/21384)\n      required: false\n      schema:\n        type: string\n        enum:\n          - EQUITY\n          - DEBT\n          - FUND\n        default: EQUITY\n      explode: false\n    formulas_time_series:\n      name: formulas\n      description: List of FQL formulas\n      in: query\n      required: true\n      schema:\n        type: array\n        items:\n          type: string\n          example:\n            - P_PRICE(0,-2,D)\n            - FG_COMPANY_NAME\n      explode: false\n      examples:\n        singleItem:\n          summary: Single Data Item\n          value:\n            - P_PRICE(0)\n        multipleItems:\n          summary: Multiple Data Items\n          value:\n            - P_PRICE(0,-2,D)\n            - FG_COMPANY_NAME\n            - FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,\"SEG\")\n            - FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,\"SALES\",,BUS,\"SEG\")\n        multipleItemsFlatten:\n          summary: Multiple TIMESERIES Data Items\n          value:\n            - P_PRICE_OPEN(0,-2,D)\n            - P_PRICE(0,-2,D)\n            - FG_COMPANY_NAME\n        debtDataItems:\n          summary: Multiple Debt Data Items\n          value:\n            - FI_NAME(ISSR)\n            - FI_AMOUNT_OUT(AMT,0,USD)\n        calculatedDataItems:\n          summary: Multiple Calculated Data Items\n          description: \u003e\n            These data items showcase the ability to include logic, mathematical\n            operations, and other functions in the request itself.\n\n\n            The first data item using the division operator to calculate a P/E\n            ratio from the last trading day of the company’s most recent fiscal\n            year.\n\n\n            The second data item uses the addition operator to calculate\n            percentage of revenue exposure in the US and Japan for the same date\n            as the first data item. Note that due to URI defintion of the plus\n            sign, the **+** symbol must be URL percent encoded as **%2B** in GET\n            requests. This means you should use **%2B** in place of the symbol\n            **+** in the request.\n\n\n            The third data item uses the average function (**AVG**) and the\n            **IF** function to indicate whether the average daily price change\n            over the company’s most recent fiscal year is postive or negative.\n\n\n            You can find more information about the different functions you can\n            use in FQL at the following Online Assistant pages -\n\n            * Mathematical Operators - [Online Assistant Page\n            10600](https://my.apps.factset.com/oa/pages/10600)\n\n            * Logical Functions - [Online Assistant Page\n            11485](https://my.apps.factset.com/oa/pages/1485)\n\n            * Categorical List of All Functions - [Online Assistant Page\n            1411](https://my.apps.factset.com/oa/pages/1411)\n          value:\n            - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n            - \u003e-\n              FF_GEOREV_COUNTRY_PCT(\"840\",ANN,0,,,RF)%2BFF_GEOREV_COUNTRY_PCT(\"392\",ANN,0,,,RF)\n            - IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))\u003e0,\"POSITIVE\",\"NEGATIVE\")\n    formulas_cross_sectional:\n      name: formulas\n      description: List of Screening formulas\n      in: query\n      required: true\n      schema:\n        type: array\n        items:\n          type: string\n      explode: false\n      examples:\n        singleItem:\n          summary: Single Equity Data Item\n          value:\n            - P_PRICE(0)\n        multipleItems:\n          summary: Multiple Equity Data Items\n          value:\n            - FF_SALES(ANN_R,0)\n            - PROPER_NAME(0,SECURITY,NAME)\n            - P_PRICE(0)\n            - FF_ASSETS(ANN_R,0)\n        calculatedItems:\n          summary: Multiple Calculated Data Items\n          description: \u003e\n            These data items showcase the ability to include logic, mathematical\n            operations, and other functions in the request itself.\n\n\n            The first data item using the division operator to calculate a P/E\n            ratio from the last trading day of the company’s most recent fiscal\n            year.\n\n\n            The second data item uses the addition operator to calculate\n            percentage of revenue exposure in the US and Japan for the same date\n            as the first data item. Note that due to URI defintion of the plus\n            sign, the **+** symbol must be URL percent encoded as **%2B** in GET\n            requests. This means you should use **%2B** in place of the symbol\n            **+** in the request.\n\n\n            The third data item uses the **IF** function and greater than\n            operator (**\u003e**) to indicate whether the latest fiscal year's sales\n            were higher or lower than the previous year's sales.\n\n\n            You can find more information about the different functions you can\n            use in FQL at the following Online Assistant pages -\n\n            * Mathematical Operators - [Online Assistant Page\n            10600](https://my.apps.factset.com/oa/pages/10600)\n\n            * Logical Functions - [Online Assistant Page\n            11485](https://my.apps.factset.com/oa/pages/1485)\n\n            * Categorical List of All Functions - [Online Assistant Page\n            1411](https://my.apps.factset.com/oa/pages/1411)\n          value:\n            - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n            - \u003e-\n              FF_GEOREV_COUNTRY_PCT(840,ANN,0,RF)%2BFF_GEOREV_COUNTRY_PCT(392,ANN,0,RF)\n            - IF(FF_SALES(ANN_R,0)\u003eFF_SALES(ANN_R,-1),\"HIGHER\",\"LOWER\")\n        multipleFixedIncomeItems:\n          summary: Multiple Fixed Income Data Items\n          description: \u003e\n            To retrieve fixed income data, `universeType` must be set to\n            **DEBT**.\n          value:\n            - FI_NAME(ISSR)\n            - FI_AMOUNT_OUT(AMT,0,USD)\n    backTestDate:\n      name: backTestDate\n      description: \u003e\n        Specify the backtest date either in **YYYY-MM-DD**, **YYYYMMDD** or\n        **MM/DD/YYYY** format.\n\n\n        To learn more about backtesting, please visit [Online Assistant Page\n        20610](https://my.apps.factset.com/oa/pages/20610#backtest). User must\n        have access to backtesting functionality.\n      in: query\n      required: false\n      schema:\n        type: string\n      explode: false\n    calendar:\n      name: calendar\n      in: query\n      schema:\n        type: string\n      description: \u003e-\n        Calendar of data returned. The default value is FIVEDAY which displays\n        Monday through Friday, regardless of whether there were trading\n        holidays.\n      required: false\n      examples:\n        fiveday:\n          summary: FIVEDAY\n          description: \u003e-\n            Displays Monday through Friday, regardless of whether there were\n            trading holidays. This is the default for `calendar`.\n          value: FIVEDAY\n        sevenday:\n          summary: SEVENDAY\n          description: Displays Monday through Sunday.\n          value: SEVENDAY\n        local:\n          summary: LOCAL\n          description: \u003e-\n            Uses the local trading calendar for each security. Local exchange\n            holidays will be skipped.\n          value: LOCAL\n        region:\n          summary: Region Specific\n          description: \u003e-\n            The calendar of a specific region. The example shown here 'NAY' is\n            for the UNITED STATES calendar. You can find the calendar codes for\n            regions on [Online Assistant Page\n            16610](https://my.apps.factset.com/oa/pages/16610#country).\n          value: NAY\n    fsymId_time_series:\n      name: fsymId\n      description: \u003e\n        Specify **Y** for the `fsymId` parameter to return the **fsymId**\n        (FactSet Default Permanent Identifier) of the `requestId`, in addition\n        to the **requestId** field, in each response object. The default value\n        for the `fsymId` parameter is **N**.\n\n\n        The **fsymId** field returned is the FactSet Default Permanent\n        Identifier for the `requestId`. For all supported `requestId` symbol\n        types, the `fsymId` parameter will return the Regional Level PermId '-R'\n        which identifies the security’s best regional security data series per\n        currency. Currently, the fsymId parameter only supports equities.\n        Accepted `requestId` symbol types include all FactSet Permanent\n        Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further\n        documentation can be found at this [Online Assistant\n        attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - 'Y'\n          - 'N'\n        default: 'N'\n      explode: false\n    fsymId_cross_sectional:\n      name: fsymId\n      description: \u003e\n        Specify **Y** for `fsymId` to return an additional response object\n        containing the data\n\n        item **fsymId** which will contain the fsymIds of the requestIds. This\n        is in addition to the\n\n        response object containing the data item **requestId**. The default\n        value for `fsymId`\n\n        is **N**.\n\n\n        The **fsymId** field returned is the FactSet Default Permanent\n        Identifier for the `requestId`. For all supported `requestId` symbol\n        types, the `fsymId` parameter will return the Regional Level PermId '-R'\n        which identifies the security’s best regional security data series per\n        currency. Currently, the fsymId parameter only supports equities.\n        Accepted `requestId` symbol types include all FactSet Permanent\n        Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further\n        documentation can be found at this [Online Assistant\n        attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - 'Y'\n          - 'N'\n        default: 'N'\n      explode: false\n    displayName_time_series:\n      name: displayName\n      description: \u003e\n        Define display names for the formulas inputted. Enter the list of\n        display names in the same order as the formulas inputted. An additional\n        field **displayName** will be returned in the data object for a formula.\n\n\n        If the number of display names does not match the number of formulas\n        provided, an error will be returned.\n\n\n        To define the display name for a subset of the formulas, leave a blank\n        in the position of the formula that won't be renamed. For example - If\n        three formulas are inputted, to define display names only for the first\n        and third formula, enter *displayName=FORMULA_1,,FORMULA_3*. The\n        **displayName** field will still be included in that formula, but will\n        contain the formula as inputted.\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n          example: PRICE\n      explode: false\n      examples:\n        noNames:\n          value: ''\n          summary: '---'\n        singleItem:\n          summary: Single Data Item\n          value:\n            - PRICE\n        multipleItems:\n          summary: Multiple Data Items\n          value:\n            - PRICE\n            - COMPANY NAME\n            - BUSINESS SEGMENT\n            - SALES SEGMENT\n    displayName_cross_sectional:\n      name: displayName\n      description: \u003e\n        Define display names for the formulas inputted. Enter the list of\n        display names in the same order as the formulas inputted. An additional\n        field **displayName** will be returned in the data object for a formula.\n\n\n        If the number of display names does not match the number of formulas\n        provided, an error will be returned.\n\n\n        To define the display name for a subset of the formulas, leave a blank\n        in the position of the formula that won't be renamed. For example - If\n        three formulas are inputted, to define display names only for the first\n        and third formula, enter *displayName=FORMULA_1,,FORMULA_3*. The\n        **displayName** field will still be included in that formula, but will\n        contain the formula as inputted.\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n          example: PRICE\n      explode: false\n      examples:\n        noNames:\n          value: ''\n          summary: '---'\n        singleItem:\n          summary: Single Data Item\n          value:\n            - PRICE\n        multipleItems:\n          summary: Multiple Data Items\n          value:\n            - SALES\n            - COMPANY NAME\n            - PRICE\n            - ASSETS\n    flatten_time_series:\n      name: flatten\n      description: \u003e\n        Specify **Y** for `flatten` to return a flat, table-like JSON response\n        model instead of the standard nested JSON response model. This option is\n        provided for easier data processing and visualization. The default value\n        for `flatten` is **N**.\n\n\n        See the **Time-Series Result Object Flattened** schema for more detail\n        on the response structure for flattened output.\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - 'Y'\n          - 'N'\n        default: 'N'\n      explode: false\n    flatten_cross_sectional:\n      name: flatten\n      description: \u003e\n        Specify **Y** for `flatten` to return a flat, table-like JSON response\n        model instead of the standard nested JSON response model. This option is\n        provided for easier data processing and visualization. The default value\n        for `flatten` is **N**.\n\n\n        See the **Cross-Sectional Result Object Flattened** schema for more\n        detail on the response structure for flattened output.\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - 'Y'\n          - 'N'\n        default: 'N'\n      explode: false\n    batch:\n      name: batch\n      in: query\n      description: \u003e\n        Enables the ability to asynchronously \"batch\" the request, supporting a\n        long-running request up to **10 minutes**. Upon requesting batch=Y, the\n        service will respond back with an HTTP Status Code of 202.\n\n\n        A user is limited to running 5 Batch Requests in a 10 minute period.\n\n\n        *This feature is available to Individual Users subscribed to the\n        Performance Package and Performance Package Plus Performance Tiers and\n        all Production Users. If you are unsure which Performance Tier you are\n        subscribed to or you would like to gain access to the batch\n        capabilities, please contact your FactSet Account Team or \"Report Issue\"\n        above and our support teams can assist.*\n\n\n        Once a batch request is submitted, use `/batch-status` to see if the job\n        has completed. Once completed, retrieve the results of the request via\n        `/batch-result`. See the endpoints listed under *Batch Processing* for\n        more information.\n      schema:\n        type: string\n        enum:\n          - 'Y'\n          - 'N'\n        default: 'N'\n    batchId:\n      name: id\n      in: query\n      description: Batch Request identifier.\n      schema:\n        type: string\n        format: uuid\n      required: true\n      allowEmptyValue: false\n  schemas:\n    time_series_request:\n      title: Time-Series Request Body\n      description: '`/time-series` Request Body'\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            ids:\n              title: ids\n              description: \u003e\n                Array of entity identifiers.\n\n\n                The `ids` and `universe` parameters provide two different ways\n                to specify the identifiers for which you want data retrieved.\n                Please enter either the `ids` or `universe` parameter.\n              type: array\n              items:\n                type: string\n              example:\n                - FDS-US\n                - IBM-US\n                - XOM-US\n            universe:\n              title: universe\n              description: |\n                Screening expression to limit the universe\n\n                Please enter either the `ids` or `universe` parameter.\n              type: string\n              example: FG_CONSTITUENTS(SP50,0,CLOSE)\n            universeType:\n              title: universeType\n              description: \u003e\n                Specify the universe type to calculate the `universe` in.\n\n\n                Find documentation below on how to build a screen for each\n                universe type -\n\n                * Equity Screen - [Online Assistant Page\n                20606](https://my.apps.factset.com/oa/pages/20606)\n\n\n                * Debt Screen - [Online Assistant Page\n                20888](https://my.apps.factset.com/oa/pages/20888)\n\n\n                * Fund Screen - [Online Assistant Page\n                21384](https://my.apps.factset.com/oa/pages/21384)\n\n\n                This parameter may only be used in conjunction with the\n                `universe` parameter.\n              type: string\n              example: DEBT\n              default: EQUITY\n              enum:\n                - EQUITY\n                - DEBT\n                - FUND\n            formulas:\n              title: FQL formulas\n              description: Array of FQL formulas\n              type: array\n              items:\n                type: string\n              example:\n                - P_PRICE(0,-2,D)\n                - FG_COMPANY_NAME\n            calendar:\n              title: Calendar Setting\n              description: \u003e-\n                Calendar of data returned. The default value is FIVEDAY which\n                displays Monday through Friday, regardless of whether there were\n                trading holidays.\n              type: string\n              example: SEVENDAY\n              default: FIVEDAY\n            fsymId:\n              title: fsymId\n              description: \u003e\n                Specify **Y** for the `fsymId` parameter to return the\n                **fsymId** (FactSet Default Permanent Identifier) of the\n                `requestId`, in addition to the **requestId** field, in each\n                response object. The default value for the `fsymId` parameter is\n                **N**.\n\n\n                The **fsymId** field returned is the FactSet Default Permanent\n                Identifier for the `requestId`. For all supported `requestId`\n                symbol types, the `fsymId` parameter will return the Regional\n                Level PermId '-R' which identifies the security’s best regional\n                security data series per currency. Currently, the fsymId\n                parameter only supports equities. Accepted `requestId` symbol\n                types include all FactSet Permanent Identifiers types, CUSIP,\n                SEDOL, ISIN, and Tickers. Further documentation can be found at\n                this [Online Assistant\n                attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).\n              type: string\n              example: 'Y'\n              default: 'N'\n              enum:\n                - 'Y'\n                - 'N'\n            displayName:\n              title: displayName\n              description: \u003e\n                Define display names for the formulas inputted. Enter the list\n                of display names in the same order as the formulas inputted. An\n                additional field **displayName** will be returned in the data\n                object for a formula.\n\n\n                If the number of display names does not match the number of\n                formulas provided, an error will be returned.\n\n\n                To define the display name for a subset of the formulas, leave a\n                blank in the position of the formula that won't be renamed. For\n                example - If three formulas are inputted, to define display\n                names only for the first and third formula, enter\n                *displayName=FORMULA_1,,FORMULA_3*. The **displayName** field\n                will still be included in that formula, but will contain the\n                formula as inputted.\n              type: array\n              items:\n                type: string\n              example:\n                - PRICE\n                - COMPANY_NAME\n            flatten:\n              title: flatten\n              description: \u003e\n                Specify **Y** for `flatten` to return a flat, table-like JSON\n                response model instead of the standard nested JSON response\n                model. This option is provided for easier data processing and\n                visualization. The default value for `flatten` is **N**.\n\n\n                See the **Time-Series Result Object Flattened** schema for more\n                detail on the response structure for flattened output.\n              type: string\n              example: 'Y'\n              default: 'N'\n              enum:\n                - 'Y'\n                - 'N'\n            batch:\n              title: batch\n              description: \u003e\n                Enables the ability to asynchronously \"batch\" the request,\n                supporting a long-running request up to **10 minutes**. Upon\n                requesting \"batch\": \"Y\", the service will respond back with an\n                HTTP Status Code of 202.\n\n\n                A user is limited to running 5 Batch Requests in a 10 minute\n                period.\n\n\n                *This feature is available to Individual Users subscribed to the\n                Performance Package and Performance Package Plus Performance\n                Tiers and all Production Users. If you are unsure which\n                Performance Tier you are subscribed to or you would like to gain\n                access to the batch capabilities, please contact your FactSet\n                Account Team or \"Report Issue\" above and our support teams can\n                assist.*\n\n\n                Once a batch request is submitted, use `/batch-status` to see if\n                the job has completed. Once completed, retrieve the results of\n                the request via `/batch-result`. See the endpoints listed under\n                *Batch Processing* for more information.\n              type: string\n              example: 'Y'\n              default: 'N'\n              enum:\n                - 'Y'\n                - 'N'\n          required:\n            - formulas\n      required:\n        - data\n    time_series_response_object_items:\n      title: Time-Series Response Object\n      anyOf:\n        - $ref: '#/components/schemas/time_series_result_object_nonflattened'\n        - $ref: '#/components/schemas/time_series_result_object_flattened'\n    time_series_response:\n      title: Time-Series Response\n      type: object\n      properties:\n        data:\n          description: Array of Time-Series `Response Objects`\n          type: array\n          items:\n            $ref: '#/components/schemas/time_series_response_object_items'\n    time_series_result_object_nonflattened:\n      title: Time-Series Non-Flattened Response Object\n      oneOf:\n        - $ref: '#/components/schemas/time_series_result_object_nonflattened_scalar'\n        - $ref: '#/components/schemas/time_series_result_object_nonflattened_array'\n        - $ref: '#/components/schemas/time_series_result_object_nonflattened_matrix'\n        - $ref: \u003e-\n            #/components/schemas/time_series_result_object_nonflattened_timeseries_object\n      discriminator:\n        propertyName: objectType\n        mapping:\n          SCALAR: '#/components/schemas/time_series_result_object_nonflattened_scalar'\n          ARRAY: '#/components/schemas/time_series_result_object_nonflattened_array'\n          MATRIX: '#/components/schemas/time_series_result_object_nonflattened_matrix'\n          TIMESERIES: \u003e-\n            #/components/schemas/time_series_result_object_nonflattened_timeseries_object\n    time_series_result_object_nonflattened_scalar:\n      title: Time-Series Non-Flattened Response Object with SCALAR Result Attribute\n      type: object\n      properties:\n        result:\n          $ref: '#/components/schemas/time_series_scalar_value'\n      allOf:\n        - $ref: '#/components/schemas/time_series_result_object_nonflattened_base'\n    time_series_result_object_nonflattened_array:\n      title: Time-Series Non-Flattened Response Object with ARRAY Result Attribute\n      description: \u003e-\n        The `result` attribute in the Time-Series Non-Flattened Response Object\n        will be an ARRAY.\n      type: object\n      properties:\n        result:\n          type: array\n          items:\n            $ref: '#/components/schemas/time_series_scalar_value'\n      allOf:\n        - $ref: '#/components/schemas/time_series_result_object_nonflattened_base'\n    time_series_result_object_nonflattened_matrix:\n      title: Time-Series Non-Flattened Response Object with MATRIX Result Attribute\n      description: \u003e-\n        The `result` attribute in the Time-Series Non-Flattened Response Object\n        will be a MATRIX, which will be represented as an array of arrays. Each\n        array can be thought of as a row in the matrix.\n      type: object\n      properties:\n        result:\n          type: array\n          items:\n            type: array\n            items:\n              $ref: '#/components/schemas/time_series_scalar_value'\n      allOf:\n        - $ref: '#/components/schemas/time_series_result_object_nonflattened_base'\n    time_series_result_object_nonflattened_timeseries_object:\n      title: \u003e-\n        Time-Series Non-Flattened Response Object with TIMESERIES Result\n        Attribute\n      type: object\n      properties:\n        result:\n          $ref: '#/components/schemas/time_series_timeseries_object'\n      allOf:\n        - $ref: '#/components/schemas/time_series_result_object_nonflattened_base'\n    time_series_result_object_nonflattened_base:\n      title: Time-Series Non-Flattened Base Response Object\n      description: \u003e-\n        An object returning the results for a single identifier and formula.\n        This is the base of the response object. The result attribute depends on\n        the formula requested. Response objects with the various result\n        attribute types are outlined in separate schemas.\n      type: object\n      properties:\n        error:\n          description: \u003e\n            Indicates that there was an error in the execution of the FQL\n            Formula.\n\n            * Zero – success\n\n            * Non-zero – failure\n          type: integer\n          example: 0\n        errorMessage:\n          description: \u003e-\n            If error is non-zero, errorMessage will display the FQL formula\n            error.\n          type: string\n          nullable: true\n          example: |\n            parse error, unexpected ','\n        formula:\n          description: FQL formula requested.\n          type: string\n          example: P_PRICE(0,-1,D)\n        displayName:\n          description: Display Name.\n          type: string\n          nullable: true\n          example: PRICE\n        requestId:\n          description: Identifier requested.\n          type: string\n          example: IBM-US\n        fsymId:\n          description: \u003e\n            The **fsymId** field returned is the FactSet Default Permanent\n            Identifier for the `requestId`. For all supported `requestId` symbol\n            types, the `fsymId` parameter will return the Regional Level PermId\n            '-R' which identifies the security’s best regional security data\n            series per currency. Currently, the fsymId parameter only supports\n            equities. Accepted `requestId` symbol types include all FactSet\n            Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers.\n            Further documentation can be found at this [Online Assistant\n            attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).\n            Included only if the `fsymId` parameter is set to Y.\n          type: string\n          nullable: true\n          example: SJY281-R\n        dataType:\n          description: Type of data returned in `result`\n          example: STRING\n          type: string\n          nullable: true\n          enum:\n            - STRING\n            - INTEGER\n            - DOUBLE\n        objectType:\n          description: Type of object returned in `result`\n          type: string\n          example: ARRAY\n          enum:\n            - SCALAR\n            - ARRAY\n            - MATRIX\n            - TIMESERIES\n      required:\n        - error\n        - formula\n        - requestId\n        - result\n        - dataType\n        - objectType\n    time_series_scalar_value:\n      title: Time-Series SCALAR Result\n      description: \u003e-\n        The `result` attribute in the Time-Series Non-Flattened Response Object\n        will be a SCALAR.\n      nullable: true\n      oneOf:\n        - type: string\n          nullable: true\n          example: International Business Machines Corporation\n        - type: number\n          nullable: true\n          format: double\n          example: 354.98\n        - type: integer\n          nullable: true\n          example: 4\n        - type: string\n          nullable: true\n          format: date\n          example: '2021-11-09'\n    time_series_timeseries_object:\n      title: Time-Series TIMESERIES Result\n      description: \u003e-\n        The `result` attribute in the Time-Series Non-Flattened Response Object\n        will be a TIMESERIES object. A TIMESERIES object has a values attribute\n        and a dates attribute that contain arrays of equal length so that the\n        values and dates can be align to form a time series.\n      type: object\n      properties:\n        values:\n          title: values\n          type: array\n          description: \u003e-\n            Representing the data returned from the requested FQL formula for\n            the requestId\n          items:\n            $ref: '#/components/schemas/time_series_scalar_value'\n          example:\n            - 124.92\n            - 124.22\n            - 122.44\n        dates:\n          title: dates\n          type: array\n          description: \u003e-\n            Representing the dates corresponding the requested FQL formula for\n            the requestId\n          items:\n            type: string\n            format: date\n            nullable: true\n          example:\n            - '2020-09-17'\n            - '2020-09-16'\n            - '2020-09-15'\n    time_series_result_object_flattened_addl:\n      title: Key-Value Pair for Time-Series Flattened Response Object\n      description: \u003e\n        The Key in the Key-Value pair will be the formula. If the `displayName`\n        parameter is used, then the Key will be displayName specified for that\n        formula. The Value in the Key-Value pair will be the result of the\n        formula for that \"row\".\n      example: '\"P_PRICE(0)\": 142.32'\n      nullable: true\n      oneOf:\n        - type: string\n          nullable: true\n        - type: number\n          format: double\n          nullable: true\n        - type: integer\n          nullable: true\n    time_series_result_object_flattened:\n      title: Time-Series Flattened Response Object\n      description: \u003e\n\n        Data model returned when the parameter **flatten=Y** is used in the\n        request. This flattened, simplified JSON output returned from\n        **flatten=Y** can be conceptualized as a table (rows and columns) where\n        each data object in the result is a row in the table and each field\n        names is a column name. The response will contain at least one data\n        object for each requestId containing the requestId, fsymId (if\n        requested), date (if applicable) and Key-Value pairs for each data item\n        (formula). The number of data objects (rows) per requestId is dependent\n        the the objectTypes of the formulas requested.\n\n\n        ---\n\n        Formulas that have associated dates (TIMESERIES objectType in the\n        standard **flatten=N** response model) will result in a data object for\n        each date for each requestId.\n\n\n        **flatten=N TIMESERIES Representation**\n\n        ```json\n\n        [\n          {\n            \"requestId\": \"id\",\n            \"formula\": \"formulaName1\",\n            \"result\": {\n                \"values\": [a,b],\n                \"dates\": [DATE1,DATE2]\n              },\n            \"objectType\": \"TIMESERIES\",\n            \"dataType\": \"DOUBLE\"\n          },\n          {\n            \"requestId\": \"id\",\n            \"formula\": \"formulaName2\",\n            \"result\": {\n                \"values\": [c,d],\n                \"dates\": [DATE2,DATE3]\n              },\n            \"objectType\": \"TIMESERIES\",\n            \"dataType\": \"DOUBLE\"\n          }\n        ]\n\n        ```\n\n\n        **flatten=Y TIMESERIES Representation**\n\n        ```json\n\n        [\n          {\n            \"requestId\": \"id\",\n            \"formulaName1\": a,\n            \"formulaName2\": null,\n            \"date\": DATE1\n          },\n          {\n            \"requestId\": \"id\",\n            \"formulaName1\": b,\n            \"formulaName2\": c,\n            \"date\": DATE2\n          },\n          {\n            \"requestId\": \"id\",\n            \"formulaName1\": null,\n            \"formulaName2\": d,\n            \"date\": DATE3\n          }\n        ]\n\n        ```\n\n        ---\n\n\n        Formulas that result in an array (no associated dates, ARRAY objectType\n        in the standard **flatten=N** response model) can be thought of as a\n        column in a table. Each element in the array will be in a separate data\n        object. The first element of the array starts in the first data object\n        for that requestId and then then the second element of the array in the\n        second data object for that requestId and so on (regardless of dates\n        from other formulas).\n\n\n        **flatten=N ARRAY Representation**\n\n        ```json\n\n        [\n          {\n            \"requestId\": \"id\",\n            \"formula\": \"formulaName\",\n            \"result\": [a,b,c],\n            \"objectType\": \"ARRAY\",\n            \"dataType\": \"DOUBLE\"\n          }\n        ]\n\n        ```\n\n\n        **flatten=Y ARRAY Representation**\n\n        ```json\n\n        [\n          {\n            \"requestId\": \"id\",\n            \"formulaName\": a,\n          },\n          {\n            \"requestId\": \"id\",\n            \"formulaName\": b,\n          },\n          {\n            \"requestId\": \"id\",\n            \"formulaName\": c,\n          }\n        ]\n\n        ```\n\n        ---\n\n        Scalar data items (SCALAR objectType in the standard **flatten=N**\n        response model) will be repeated in each data object for the requestId.\n\n\n        **flatten=N SCALAR Representation**\n\n        ```json\n\n        [\n          {\n            \"requestId\": \"id\",\n            \"formula\": \"formulaName\",\n            \"result\": a,\n            \"objectType\": \"ARRAY\",\n            \"dataType\": \"DOUBLE\"\n          }\n        ]\n\n        ```\n\n\n        **flatten=Y SCALAR Representation**\n\n        ```json\n\n        [\n          {\n            \"requestId\": \"id\",\n            \"formulaName\": a,\n          }\n        ]\n\n        ```\n\n        ---\n\n        Formulas that result in a matrix (2 dimensional array, MATRIX objectType\n        in the standard **flatten=N** response model) can be thought of as\n        returning a table where each array in the array of arrays is a row in\n        the table. This can be extended to the flattened result structure where\n        each data object is a row in a table.  The formula will have as many\n        attributes (appended by [n]) as number of columns in the matrix result.\n\n\n        **flatten=N MATRIX Representation**\n\n        ```json\n\n        [\n          {\n            \"requestId\": \"id\"\n            \"formula\": \"formulaName\",\n            \"result\": [\n                [a,b,c],\n                [d,e,f]\n              ],\n            \"objectType\": \"MATRIX\",\n            \"dataType\": \"DOUBLE\"\n          }\n        ]\n\n        ```\n\n\n        **flatten=Y MATRIX Representation**\n\n        ```json\n\n        [\n          {\n            \"requestId\": \"id\"\n            \"formulaName[0]\": a,\n            \"formulaName[1]\": b,\n            \"formulaName[2]\": c\n          },\n          {\n            \"requestId\": \"id\"\n            \"formulaName[0]\": d,\n            \"formulaName[1]\": e,\n            \"formulaName[2]\": f\n          }\n        ]\n\n        ```\n\n        ---\n      type: object\n      properties:\n        requestId:\n          description: Identifier requested.\n          type: string\n          example: IBM-US\n        fsymId:\n          description: \u003e\n            The **fsymId** field returned is the FactSet Default Permanent\n            Identifier for the `requestId`. For all supported `requestId` symbol\n            types, the `fsymId` parameter will return the Regional Level PermId\n            '-R' which identifies the security’s best regional security data\n            series per currency. Currently, the fsymId parameter only supports\n            equities. Accepted `requestId` symbol types include all FactSet\n            Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers.\n            Further documentation can be found at this [Online Assistant\n            attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).\n            Included only if the `fsymId` parameter is set to Y.\n          type: string\n          nullable: true\n          example: SJY281-R\n        date:\n          description: Date associated with FQL formula.\n          type: string\n          nullable: true\n          format: date\n          example: '2021-10-18'\n      additionalProperties:\n        $ref: '#/components/schemas/time_series_result_object_flattened_addl'\n      required:\n        - requestId\n    cross_sectional_request:\n      title: Cross-Sectional Request Body\n      description: '`/cross-sectional` Request Body'\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            ids:\n              title: ids\n              description: \u003e\n                Array of entity identifiers.\n\n\n                The `ids` and `universe` parameters provide two different ways\n                to specify\n\n                the identifiers for which you want data retrieved. Please enter\n                either the\n\n                `ids` or `universe` parameter.\n              type: array\n              items:\n                type: string\n              example:\n                - FDS-US\n                - IBM-US\n                - XOM-US\n            universe:\n              title: universe\n              description: |\n                Screening expression to limit the universe\n\n                Please enter either the `ids` or `universe` parameter.\n              type: string\n              example: FG_CONSTITUENTS(SP50,0,CLOSE)\n            universeType:\n              title: universeType\n              description: \u003e\n                Specify the universe type to calculate the `universe` in.\n\n\n                Find documentation below on how to build a screen for each\n                universe type -\n                  * Equity Screen - [Online Assistant Page 20606](https://my.apps.factset.com/oa/pages/20606)\n\n                  * Debt Screen - [Online Assistant Page 20888](https://my.apps.factset.com/oa/pages/20888)\n\n                  * Fund Screen - [Online Assistant Page 21384](https://my.apps.factset.com/oa/pages/21384)\n              type: string\n              default: EQUITY\n              example: DEBT\n              enum:\n                - EQUITY\n                - DEBT\n                - FUND\n            formulas:\n              title: Screening formulas\n              description: Array of Screening formulas\n              type: array\n              items:\n                type: string\n              example:\n                - P_PRICE(0)\n                - FG_COMPANY_NAME\n            backTestDate:\n              title: backTestDate\n              description: \u003e\n                Specify the backtest date either in **YYYY-MM-DD**, **YYYYMMDD**\n                or **MM/DD/YYYY** format.\n\n\n                To learn more about backtesting, please visit [Online Assistant\n                Page\n                20610](https://my.apps.factset.com/oa/pages/20610#backtest).\n                User must have access to backtesting functionality.\n              type: string\n              example: '2020-06-01'\n            calendar:\n              title: Calendar Setting\n              description: Calendar of data returned.\n              type: string\n              example: SEVENDAY\n              default: FIVEDAY\n            fsymId:\n              title: fsymId\n              description: \u003e\n                Specify **Y** for `fsymId` to return an additional response\n                object for the data item fsymId which will contain the fsymIds\n                of the requestIds, in addition to the response object containing\n                the data item requestId. The default value for `fsymId` is\n                **N**.\n\n\n                The **fsymId** field returned is the FactSet Default Permanent\n                Identifier for the `requestId`. For all supported `requestId`\n                symbol types, the `fsymId` parameter will return the Regional\n                Level PermId '-R' which identifies the security’s best regional\n                security data series per currency. Currently, the fsymId\n                parameter only supports equities. Accepted `requestId` symbol\n                types include all FactSet Permanent Identifiers types, CUSIP,\n                SEDOL, ISIN, and Tickers. Further documentation can be found at\n                this [Online Assistant\n                attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).\n              type: string\n              example: 'Y'\n              default: 'N'\n              enum:\n                - 'Y'\n                - 'N'\n            displayName:\n              title: displayName\n              description: \u003e\n                Define display names for the formulas inputted. Enter the list\n                of display names in the same order as the formulas inputted. An\n                additional field **displayName** will be returned in the data\n                object for a formula.\n\n\n                If the number of display names does not match the number of\n                formulas provided, an error will be returned.\n\n\n                To define the display name for a subset of the formulas, leave a\n                blank in the position of the formula that won't be renamed. For\n                example - If three formulas are inputted, to define display\n                names only for the first and third formula, enter\n                *displayName=FORMULA_1,,FORMULA_3*. The **displayName** field\n                will still be included in that formula, but will contain the\n                formula as inputted.\n              type: array\n              items:\n                type: string\n              example:\n                - PRICE\n                - COMPANY_NAME\n            flatten:\n              title: flatten\n              description: \u003e\n                Specify **Y** for `flatten` to return a flat, table-like JSON\n                response model instead of the standard nested JSON response\n                model. This option is provided for easier data processing and\n                visualization. The default value for `flatten` is **N**.\n\n\n                See the **Cross-Sectional Result Object Flattened** schema for\n                more detail on the response structure for flattened output.\n              type: string\n              example: 'Y'\n              default: 'N'\n              enum:\n                - 'Y'\n                - 'N'\n            batch:\n              title: batch\n              description: \u003e\n                Enables the ability to asynchronously \"batch\" the request,\n                supporting a long-running request up to 10 minutes. Upon\n                requesting \"batch\": \"Y\", the service will respond back with an\n                HTTP Status Code of 202.\n\n\n                A user is limited to running 5 Batch Requests in a 10 minute\n                period.\n\n\n                *This feature is available to Individual Users subscribed to the\n                Performance Package and Performance Package Plus Performance\n                Tiers and all Production Users. If you are unsure which\n                Performance Tier you are subscribed to or you would like to gain\n                access to the batch capabilities, please contact your FactSet\n                Account Team or \"Report Issue\" above and our support teams can\n                assist.*\n\n\n                Once a batch request is submitted, use `/batch-status` to see if\n                the job has completed. Once completed, retrieve the results of\n                the request via `/batch-result`. See the endpoints listed under\n                *Batch Processing* for more information.\n              type: string\n              example: 'Y'\n              default: 'N'\n              enum:\n                - 'Y'\n                - 'N'\n          required:\n            - formulas\n      required:\n        - data\n    cross_sectional_response_object_items:\n      title: Cross-Sectional Response Object\n      oneOf:\n        - $ref: '#/components/schemas/cross_sectional_result_object_nonflattened'\n        - $ref: '#/components/schemas/cross_sectional_result_object_flattened'\n    cross_sectional_response:\n      title: Cross-Sectional Response\n      type: object\n      properties:\n        data:\n          description: Array of Cross-Sectional `Response Objects`\n          type: array\n          items:\n            $ref: '#/components/schemas/cross_sectional_response_object_items'\n    cross_sectional_result_object_nonflattened_result_attribute:\n      title: Result Attribute in Cross-Sectional Non-Flattened Response Object\n      description: An array containing the values for the data item\n      oneOf:\n        - type: string\n          nullable: true\n          description: Array of strings\n          example:\n            - IBM\n            - FDS\n            - GE\n            - GOOG\n            - AAPL\n            - MSFT\n            - TSLA\n        - type: number\n          nullable: true\n          description: Array of doubles\n          format: double\n          example:\n            - 121.73\n            - 333.29\n            - 6.2\n            - 1464.52\n            - 114.96\n            - 209.44\n            - 421.2\n        - type: integer\n          nullable: true\n          description: Array of integers\n          example:\n            - 42\n            - 3\n            - 14\n            - 17\n            - 29\n            - 8\n            - 36\n    cross_sectional_result_object_nonflattened:\n      title: Cross-Sectional Non-Flattened Response Object\n      description: An object returning the results for a single formula.\n      type: object\n      properties:\n        universe:\n          description: \u003e-\n            If `universe` is submitted instead of `ids`, then the universe\n            attribute will display the universe expression requested.\n          type: string\n          example: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)\u003c10)=1\n        dataItemName:\n          description: \u003e-\n            Name of data item (requestId, requested Screening formula, or\n            fsymId)\n          type: string\n          example: P_PRICE(0)\n        displayName:\n          description: Display Name.\n          type: string\n          nullable: true\n          example: PRICE\n        result:\n          type: array\n          items:\n            $ref: \u003e-\n              #/components/schemas/cross_sectional_result_object_nonflattened_result_attribute\n        dataType:\n          description: Data type of the data item\n          example: STRING\n          type: string\n          enum:\n            - STRING\n            - INTEGER\n            - DOUBLE\n        error:\n          description: |\n            Data item error indicator.\n             * Zero – success\n             * Non-zero – failure\n          type: integer\n          example: 0\n        errorMessage:\n          description: \u003e-\n            If error is non-zero, errorMessage will display the Screening\n            formula error.\n          type: string\n          nullable: true\n          example: |\n            Error parsing formula arguments\n        warnings:\n          description: \u003e-\n            Screening formula warnings. This attribute is only displayed if\n            warnings are generated in the execution of the Screening formula.\n          type: array\n          items:\n            type: object\n            properties:\n              description:\n                description: Human readable message explaining the warning\n                type: string\n                nullable: true\n              effect:\n                description: Human readable message explaining the effect on the `result`\n                type: string\n                nullable: true\n      required:\n        - dataItemName\n        - error\n        - result\n        - dataType\n    cross_sectional_result_object_flattened_addl:\n      title: Key-Value Pair for Cross-Sectional Flattened Response Object\n      description: \u003e\n        The Key in the Key-Value pair will be the formula. If the `displayName`\n        parameter is used, then the Key will be displayName specified for that\n        formula. The Value in the Key-Value pair will be the result of the\n        formula for that \"row\".\n      example: '\"P_PRICE(0)\": 142.32'\n      oneOf:\n        - type: string\n          nullable: true\n        - type: number\n          format: double\n          nullable: true\n        - type: integer\n          nullable: true\n    cross_sectional_result_object_flattened:\n      title: Cross-Sectional Flattened Result Object\n      description: \u003e\n\n        Data model returned when the parameter **flatten=Y** is used in the\n        request. This flattened, simplified JSON data returned from\n        **flatten=Y** can be conceptualized as a table (rows and columns) where\n        each data object in the result is a row in the table and the field names\n        are the column names.\n\n\n        There will be one data object for each request containing the request,\n        fsymId if requested, and Key-Value pairs for each data item (formula).\n      type: object\n      properties:\n        requestId:\n          description: Identifier requested.\n          type: string\n          example: IBM-US\n        fsymId:\n          description: \u003e\n            The **fsymId** field returned is the FactSet Default Permanent\n            Identifier for the `requestId`. For all supported `requestId` symbol\n            types, the `fsymId` parameter will return the Regional Level PermId\n            '-R' which identifies the security’s best regional security data\n            series per currency. Currently, the fsymId parameter only supports\n            equities. Accepted `requestId` symbol types include all FactSet\n            Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers.\n            Further documentation can be found at this [Online Assistant\n            attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).\n            Included only if the `fsymId` parameter is set to Y.\n          type: string\n          nullable: true\n          example: SJY281-R\n      additionalProperties:\n        $ref: '#/components/schemas/cross_sectional_result_object_flattened_addl'\n      required:\n        - requestId\n    error_detail:\n      title: Error Object\n      description: |\n        `Error Object` is the response returned for an unsuccessful request.\n      type: object\n      properties:\n        id:\n          description: Unique identifier for the request. Also known as the chain id.\n          type: string\n          example: 5EFCCA8940CAEA6B\n          nullable: true\n        code:\n          description: Textual error code\n          type: string\n          example: notAuthenticated\n          nullable: true\n        title:\n          description: A short, human-readable summary of the problem\n          type: string\n          example: \u003e-\n            There were either no, invalid, or expired credentials present in the\n            request.\n          nullable: true\n        timestamp:\n          description: timestamp in YYYY-MM-DD HH:MM:SS.SSS\n          type: string\n          format: date-time\n          example: '2020-08-01 11:09:41.918'\n          nullable: true\n    BatchDataRequest:\n      title: Batch Data Request\n      type: object\n      required:\n        - data\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n              example: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n              description: Batch Request identifier.\n    BatchStatusResponse:\n      title: Batch Status Response\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/BatchStatus'\n    BatchStatus:\n      title: Batch Status\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: the id of batch request.\n        startTime:\n          type: string\n          nullable: true\n          format: date-time\n          description: \u003e-\n            Time when the batch request is started. This is in Eastern Time\n            Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS],\n            following ISO 8601.\n        endTime:\n          type: string\n          nullable: true\n          format: date-time\n          description: \u003e-\n            Time when the batch request is ended. This is in Eastern Time Zone.\n            The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS],\n            following ISO 8601.\n        status:\n          type: string\n          enum:\n            - QUEUED\n            - EXECUTING\n            - DONE\n            - FAILED\n        error:\n          type: string\n          nullable: true\n          example: The parameter 'formulas' is required and may not be empty.\n          description: Error message.\n    BatchDataResponse:\n      title: Batch Data Response\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/BatchData'\n    BatchData:\n      title: Batch Data\n      description: \u003e\n        The schema for the batched result is determined by the endpoint you used\n        with the _batch_ parameter.\n\n        Please see the schema for that endpoint for the definition.\n      type: object\n  responses:\n    '400':\n      description: Bad Request\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_detail'\n          examples:\n            parameterError - Missing Formulas:\n              value:\n                id: 5EFCCA8940CAEB6E\n                code: parameterError\n                title: The parameter 'formulas' is required and may not be empty.\n                timeStamp: '2019-11-01 11:09:41.918'\n            parameterError - Ids and Universe:\n              description: \u003e-\n                The `ids` or `universe` parameter must be included. Including\n                `ids` and `universe` parameters in the same request is not\n                allowed.\n              value:\n                id: 5EFCCA8940CAEB6E\n                code: parameterError\n                title: Please enter either the ids or universe parameter.\n                timeStamp: '2019-11-01 11:09:41.918'\n            parameterError - Invalid displayName Input:\n              value:\n                id: 5EFCCA8940CAEB6E\n                code: parameterError\n                title: \u003e-\n                  The length of the list provided for the displayName parameter\n                  must be equal to the number of formulas requested.\n                timeStamp: '2019-11-01 11:09:41.918'\n            requestBodyInvalid:\n              value:\n                id: 5EFCCA8940CAEB6E\n                code: requestBodyInvalid\n                title: The request body could not be read.\n                timeStamp: '2019-11-01 11:09:41.918'\n            invalidCharacter:\n              value:\n                id: 5EFCCA8940CAEB6E\n                code: invalidCharacter\n                title: \u003e-\n                  The request contains an invalid character. Allowed characters\n                  are Unicode code points in the ranges [0x09-0x0a],[0x0d],\n                  [0x20-0x7e], [0x85], [0xa0-0xd7ff], [0xe000-0xfffd], and\n                  [0x10000-0x10ffff].\n                timeStamp: '2019-11-01 11:09:41.918'\n    '401':\n      description: \u003e-\n        Unauthenticated USERNAME-SERIAL. This error will also occur if the API\n        request is made from IP address not specified in the API Key\n        configuration. Note that additional IP addresses can be added to an\n        existing API Key configuration.\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_detail'\n    '403':\n      description: Not Authorized.\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_detail'\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: Unauthorized\n            title: USERNAME-SERIAL does not have permission to use /v1/{endpoint}\n            timeStamp: '2019-11-01 11:09:41.918'\n    '404':\n      description: Endpoint Not Found\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_detail'\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: endpointNotFound\n            title: '''/formula-api/v1/{invalid endpoint}'' is not a valid endpoint.'\n            timeStamp: '2019-11-01 11:09:41.918'\n    '405':\n      description: Method Not Allowed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_detail'\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: methodNotAllowed\n            title: \u003e-\n              The HTTP method {unsupported method} is not allowed. Please\n              resubmit the request using the HTTP methods GET or POST.\n            timeStamp: '2019-11-01 11:09:41.918'\n    '406':\n      description: Bad Accept Header\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_detail'\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: badAccept\n            title: \u003e-\n              Accept: {unsupported Accept header} is not supported. The Accept\n              header must include application/json.\n            timeStamp: '2019-11-01 11:09:41.918'\n    '408':\n      description: \u003e-\n        Request Timeout. This error may be returned if it takes more than 29\n        seconds for the request to process or if a batch request takes more than\n        10 minutes to process.\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_detail'\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: requestTimeout\n            title: The request took too long. Try again with a smaller request.\n            timeStamp: '2019-11-01 11:09:41.918'\n    '415':\n      description: Bad Content-Type Header\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_detail'\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: badContentType\n            title: \u003e-\n              Content-Type: {unsupported Content-Type} is not supported. The\n              Content-Type header must include application/json\n            timeStamp: '2019-11-01 11:09:41.918'\n    '429':\n      description: Rate Limits Exceeded\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n        X-RateLimit-Limit-second:\n          $ref: '#/components/headers/X-RateLimit-Limit-second'\n        X-RateLimit-Remaining-second:\n          $ref: '#/components/headers/X-RateLimit-Remaining-second'\n        X-RateLimit-Limit-day:\n          $ref: '#/components/headers/X-RateLimit-Limit-day'\n        X-RateLimit-Remaining-day:\n          $ref: '#/components/headers/X-RateLimit-Remaining-day'\n        Retry-After:\n          $ref: '#/components/headers/Retry-After'\n      content:\n        application/json:\n          schema:\n            title: Rate Limit Error Object\n            description: |\n              Error returned if any of the user's rate limits have been reached.\n            properties:\n              message:\n                type: string\n                example: API rate limit exceeded\n    '500':\n      description: Generic Server Error\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_detail'\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: genericServerError\n            title: An unexpected error happened.\n            timeStamp: '2019-11-01 11:09:41.918'\n    '501':\n      description: Not Implemented\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_detail'\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: notImplemented\n            title: \u003e-\n              The requested endpoint or functionality has not been implemented\n              yet.\n            timeStamp: '2019-11-01 11:09:41.918'\n    '503':\n      description: Service Temporarily Unavailable\n      headers:\n        api-version:\n          $ref: '#/components/headers/api-version'\n        api-supported-versions:\n          $ref: '#/components/headers/api-supported-versions'\n        api-deprecated-versions:\n          $ref: '#/components/headers/api-deprecated-versions'\n        chain-id:\n          $ref: '#/components/headers/chain-id'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_detail'\n          example:\n            id: 5EFCCA8940CAEB6E\n            code: serviceTemporarilyUnavailable\n            title: \u003e-\n              Will be sent in case the requested service is currently overloaded\n              or can't temporarily handle the request for some other reason.\n              Clients are expected to retry the request.\n            timeStamp: '2019-11-01 11:09:41.918'\n  examples:\n    time-series-singleId-singleItem:\n      summary: Single Id and Single Data Item\n      description: |\n        `time-series` Request for Single Price Record for IBM\n      value:\n        data:\n          - error: 0\n            formula: P_PRICE(0)\n            requestId: IBM\n            result:\n              values:\n                - 120.77\n              dates:\n                - '2020-07-09'\n            dataType: DOUBLE\n            objectType: TIMESERIES\n    time-series-singleId-singleItem-fsymId:\n      summary: Single Id and Single Data Item with fsymId=Y\n      description: \u003e\n        `time-series` Request for Single Price Record for IBM and the fsymId for\n        IBM\n      value:\n        data:\n          - error: 0\n            formula: P_PRICE(0)\n            requestId: IBM\n            fsymId: SJY281-R\n            result:\n              values:\n                - 120.77\n              dates:\n                - '2020-07-09'\n            dataType: DOUBLE\n            objectType: TIMESERIES\n    time-series-multipleId-multipleItem:\n      summary: Mutiple Ids and Multiple Data Items with SEVENDAY Calendar\n      description: \u003e\n        `time-series` Request for last 3 days of Price, the Company Name, the\n        last 2 years of Business Segment Data and Business Segment Labels for\n        IBM, AAPL, and MSFT using a SEVENDAY trading calendar\n      value:\n        data:\n          - error: 0\n            formula: P_PRICE(0,-2D,D)\n            requestId: IBM\n            result:\n              dates:\n                - '2021-01-18'\n                - '2021-01-17'\n                - '2021-01-16'\n              values:\n                - 128.39\n                - 128.39\n                - 128.39\n            dataType: DOUBLE\n            objectType: TIMESERIES\n          - error: 0\n            formula: FG_COMPANY_NAME\n            requestId: IBM\n            result: International Business Machines Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,\"SEG\")\n            requestId: IBM\n            result:\n              - ''\n              - Global Technology Services\n              - Cloud \u0026 Cognitive Software\n              - Global Business Services\n              - Systems\n              - Global Financing\n              - Other\n            dataType: STRING\n            objectType: ARRAY\n          - error: 0\n            formula: FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,\"SALES\",,BUS,\"SEG\")\n            requestId: IBM\n            result:\n              - - 20191231\n                - 20181231\n              - - 27361\n                - 29146\n              - - 23200\n                - 22209\n              - - 16634\n                - 16595\n              - - 7604\n                - 8034\n              - - 1400\n                - 1590\n              - - 948\n                - 2017\n            dataType: DOUBLE\n            objectType: MATRIX\n          - error: 0\n            formula: P_PRICE(0,-2D,D)\n            requestId: AAPL\n            result:\n              dates:\n                - '2021-01-18'\n                - '2021-01-17'\n                - '2021-01-16'\n              values:\n                - 127.14\n                - 127.14\n                - 127.14\n            dataType: DOUBLE\n            objectType: TIMESERIES\n          - error: 0\n            formula: FG_COMPANY_NAME\n            requestId: AAPL\n            result: Apple Inc.\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,\"SEG\")\n            requestId: AAPL\n            result:\n              - ''\n              - iPhone\n              - Services\n              - Wearables, Home \u0026 Accessories\n              - Mac\n              - iPad\n            dataType: STRING\n            objectType: ARRAY\n          - error: 0\n            formula: FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,\"SALES\",,BUS,\"SEG\")\n            requestId: AAPL\n            result:\n              - - 20200930\n                - 20190930\n              - - 137781\n                - 142381\n              - - 53768\n                - 46291\n              - - 30620\n                - 24482\n              - - 28622\n                - 25740\n              - - 23724\n                - 21280\n            dataType: DOUBLE\n            objectType: MATRIX\n          - error: 0\n            formula: P_PRICE(0,-2D,D)\n            requestId: MSFT\n            result:\n              dates:\n                - '2021-01-18'\n                - '2021-01-17'\n                - '2021-01-16'\n              values:\n                - 212.65\n                - 212.65\n                - 212.65\n            dataType: DOUBLE\n            objectType: TIMESERIES\n          - error: 0\n            formula: FG_COMPANY_NAME\n            requestId: MSFT\n            result: Microsoft Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,\"SEG\")\n            requestId: MSFT\n            result:\n              - ''\n              - Intelligent Cloud\n              - More Personal Computing\n              - Productivity \u0026 Business Processes\n            dataType: STRING\n            objectType: ARRAY\n          - error: 0\n            formula: FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,\"SALES\",,BUS,\"SEG\")\n            requestId: MSFT\n            result:\n              - - 20200630\n                - 20190630\n              - - 48366\n                - 38985\n              - - 48251\n                - 45698\n              - - 46398\n                - 41160\n            dataType: DOUBLE\n            objectType: MATRIX\n    time-series-multipleId-multipleItem-flatten:\n      summary: Mutiple Ids and Multiple Data Items with flatten=Y\n      description: \u003e\n        `time-series` Request for Flattened Response Model for the last 3 days\n        of Price Open, Price Close, and the Company Name for IBM, AAPL, and MSFT\n      value:\n        data:\n          - requestId: IBM\n            P_PRICE_OPEN(0,-2,D): 134.57\n            date: '2021-04-08'\n            P_PRICE(0,-2,D): 135.12\n            FG_COMPANY_NAME: International Business Machines Corporation\n          - requestId: IBM\n            P_PRICE_OPEN(0,-2,D): 133.84\n            date: '2021-04-07'\n            P_PRICE(0,-2,D): 134.93\n            FG_COMPANY_NAME: International Business Machines Corporation\n          - requestId: IBM\n            P_PRICE_OPEN(0,-2,D): 135.58\n            date: '2021-04-06'\n            P_PRICE(0,-2,D): 134.22\n            FG_COMPANY_NAME: International Business Machines Corporation\n          - requestId: AAPL\n            P_PRICE_OPEN(0,-2,D): 128.95\n            date: '2021-04-08'\n            P_PRICE(0,-2,D): 130.36\n            FG_COMPANY_NAME: Apple Inc.\n          - requestId: AAPL\n            P_PRICE_OPEN(0,-2,D): 125.83\n            date: '2021-04-07'\n            P_PRICE(0,-2,D): 127.9\n            FG_COMPANY_NAME: Apple Inc.\n          - requestId: AAPL\n            P_PRICE_OPEN(0,-2,D): 126.5\n            date: '2021-04-06'\n            P_PRICE(0,-2,D): 126.21\n            FG_COMPANY_NAME: Apple Inc.\n          - requestId: MSFT\n            P_PRICE_OPEN(0,-2,D): 252.77\n            date: '2021-04-08'\n            P_PRICE(0,-2,D): 253.25\n            FG_COMPANY_NAME: Microsoft Corporation\n          - requestId: MSFT\n            P_PRICE_OPEN(0,-2,D): 247.81\n            date: '2021-04-07'\n            P_PRICE(0,-2,D): 249.9\n            FG_COMPANY_NAME: Microsoft Corporation\n          - requestId: MSFT\n            P_PRICE_OPEN(0,-2,D): 247.61\n            date: '2021-04-06'\n            P_PRICE(0,-2,D): 247.86\n            FG_COMPANY_NAME: Microsoft Corporation\n    time-series-multipleId-multipleCalculatedItem:\n      summary: Mutiple Ids and Multiple Calculated Data Items\n      description: \u003e\n        `time-series` Request to retrieve your own P/E ratio calculation from\n        the last trading day of the company’s most recent fiscal year, the\n        percentage of revenue exposure in the US and Japan for the same date as\n        the first data item, and indicator of whether the average daily price\n        change over the company’s most recent fiscal year was postive or\n        negative for IBM,FDS, and MSFT.\n      value:\n        data:\n          - error: 0\n            formula: P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n            requestId: IBM\n            result: 12.6893365646774\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: \u003e-\n              FF_GEOREV_COUNTRY_PCT(\"840\",ANN,0,,,RF)+FF_GEOREV_COUNTRY_PCT(\"392\",ANN,0,,,RF)\n            requestId: IBM\n            result: 48.0589\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))\u003e0,\"POSITIVE\",\"NEGATIVE\")\n            requestId: IBM\n            result: POSITIVE\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n            requestId: AAPL\n            result: 35.3575135861269\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: \u003e-\n              FF_GEOREV_COUNTRY_PCT(\"840\",ANN,0,,,RF)+FF_GEOREV_COUNTRY_PCT(\"392\",ANN,0,,,RF)\n            requestId: AAPL\n            result: 47.580278\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))\u003e0,\"POSITIVE\",\"NEGATIVE\")\n            requestId: AAPL\n            result: POSITIVE\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n            requestId: MSFT\n            result: 35.3101414071311\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: \u003e-\n              FF_GEOREV_COUNTRY_PCT(\"840\",ANN,0,,,RF)+FF_GEOREV_COUNTRY_PCT(\"392\",ANN,0,,,RF)\n            requestId: MSFT\n            result: 54.971108\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))\u003e0,\"POSITIVE\",\"NEGATIVE\")\n            requestId: MSFT\n            result: POSITIVE\n            dataType: STRING\n            objectType: SCALAR\n    time-series-smallUniv-singleItem:\n      summary: Small Universe and Single Data Item\n      description: \u003e-\n        `time-series` Request for the last 4 quarters of sales for each S\u0026P 500\n        constituent with a price less than 10 USD\n      value:\n        data:\n          - error: 0\n            formula: FF_SALES(QTR_R,0,-3,FQ)\n            requestId: 25179M10\n            result:\n              values:\n                - 162\n                - 1266\n                - 1705\n                - 1720\n              dates:\n                - '2020-06-30'\n                - '2020-03-31'\n                - '2019-12-31'\n                - '2019-09-30'\n            dataType: DOUBLE\n            objectType: TIMESERIES\n          - error: 0\n            formula: FF_SALES(QTR_R,0,-3,FQ)\n            requestId: '56584910'\n            result:\n              values:\n                - 490\n                - 1024\n                - 1233\n                - 1249\n              dates:\n                - '2020-06-30'\n                - '2020-03-31'\n                - '2019-12-31'\n                - '2019-09-30'\n            dataType: DOUBLE\n            objectType: TIMESERIES\n          - error: 0\n            formula: FF_SALES(QTR_R,0,-3,FQ)\n            requestId: '63707110'\n            result:\n              values:\n                - 1496\n                - 1883\n                - 2281\n                - 2126\n              dates:\n                - '2020-06-30'\n                - '2020-03-31'\n                - '2019-12-31'\n                - '2019-09-30'\n            dataType: DOUBLE\n            objectType: TIMESERIES\n          - error: 0\n            formula: FF_SALES(QTR_R,0,-3,FQ)\n            requestId: '36960410'\n            result:\n              values:\n                - 17830\n                - 21066\n                - 26159\n                - 23493\n              dates:\n                - '2020-06-30'\n                - '2020-03-31'\n                - '2019-12-31'\n                - '2019-09-30'\n            dataType: DOUBLE\n            objectType: TIMESERIES\n          - error: 0\n            formula: FF_SALES(QTR_R,0,-3,FQ)\n            requestId: '44615010'\n            result:\n              values:\n                - 1265\n                - 1187\n                - 1364\n                - 1372\n              dates:\n                - '2020-06-30'\n                - '2020-03-31'\n                - '2019-12-31'\n                - '2019-09-30'\n            dataType: DOUBLE\n            objectType: TIMESERIES\n          - error: 0\n            formula: FF_SALES(QTR_R,0,-3,FQ)\n            requestId: '34537086'\n            result:\n              values:\n                - 19371\n                - 34320\n                - 39715\n                - 36990\n              dates:\n                - '2020-06-30'\n                - '2020-03-31'\n                - '2019-12-31'\n                - '2019-09-30'\n            dataType: DOUBLE\n            objectType: TIMESERIES\n          - error: 0\n            formula: FF_SALES(QTR_R,0,-3,FQ)\n            requestId: '03741110'\n            result:\n              values:\n                - 752\n                - 1344\n                - 1625\n                - 1438\n              dates:\n                - '2020-06-30'\n                - '2020-03-31'\n                - '2019-12-31'\n                - '2019-09-30'\n            dataType: DOUBLE\n            objectType: TIMESERIES\n          - error: 0\n            formula: FF_SALES(QTR_R,0,-3,FQ)\n            requestId: 42824C10\n            result:\n              values:\n                - 6793\n                - 5961\n                - 6923\n                - 7150\n              dates:\n                - '2020-07-31'\n                - '2020-04-30'\n                - '2020-01-31'\n                - '2019-10-31'\n            dataType: DOUBLE\n            objectType: TIMESERIES\n          - error: 0\n            formula: FF_SALES(QTR_R,0,-3,FQ)\n            requestId: G8711010\n            result:\n              values:\n                - 3170.1000000379\n                - 3140.30000000431\n                - 3739.10000004292\n                - 3335.7000000242\n              dates:\n                - '2020-06-30'\n                - '2020-03-31'\n                - '2019-12-31'\n                - '2019-09-30'\n            dataType: DOUBLE\n            objectType: TIMESERIES\n    time-series-debtUniv-multipleItem:\n      summary: Debt Universe and Multiple Debt Data Items\n      description: \u003e\n        `time-series` Request for the issuer name and amount out for all debt\n        instruments for the Starbucks Corporation\n      value:\n        data:\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AD\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AD\n            result: 750\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AG\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AG\n            result: 500\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AH\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AH\n            result: 350\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AJ\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AJ\n            result: 750\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AK\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AK\n            result: 500\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AM\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AM\n            result: 500\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AN\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AN\n            result: 1000\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AP\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AP\n            result: 600\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AQ\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AQ\n            result: 1250\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AR\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AR\n            result: 750\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AS\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AS\n            result: 1000\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AT\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AT\n            result: 1000\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AU\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AU\n            result: 1000\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AV\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AV\n            result: 500\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AW\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AW\n            result: 750\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AX\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AX\n            result: 500\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AY\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AY\n            result: 500\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AZ\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AZ\n            result: 1250\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244BA\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244BA\n            result: 1250\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: U8547PAA\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: U8547PAA\n            result: 85000\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: FDS01U70\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: FDS01U70\n            result: null\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: FDS02JIW\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: FDS02JIW\n            result: null\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: FDS0F9W5\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: FDS0F9W5\n            result: null\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: FDS0QANF\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: FDS0QANF\n            result: null\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: FDS1B17O\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: FDS1B17O\n            result: null\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: FDSA82FD\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: FDSA82FD\n            result: null\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: FDSB0FB5\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: FDSB0FB5\n            result: null\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AA\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AA\n            result: 0\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AB\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AB\n            result: 0\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AC\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AC\n            result: 0\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AE\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AE\n            result: 0\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AF\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AF\n            result: 0\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: 855244AL\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: 855244AL\n            result: 0\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: FDS0QARA\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: FDS0QARA\n            result: null\n            dataType: DOUBLE\n            objectType: SCALAR\n          - error: 0\n            formula: FI_NAME(ISSR)\n            requestId: FDS0VUVD\n            result: Starbucks Corporation\n            dataType: STRING\n            objectType: SCALAR\n          - error: 0\n            formula: FI_AMOUNT_OUT(AMT,0)\n            requestId: FDS0VUVD\n            result: null\n            dataType: DOUBLE\n            objectType: SCALAR\n    cross-sectional-singleId-singleItem:\n      summary: Single Equity Id and Single Equity Data Item\n      description: |\n        `cross-sectional` Request for Single Price Record for IBM\n      value:\n        data:\n          - dataItemName: requestId\n            result:\n              - IBM\n            dataType: STRING\n            error: 0\n          - dataItemName: P_PRICE(0)\n            result:\n              - 120.77\n            dataType: DOUBLE\n            error: 0\n    cross-sectional-singleId-singleItem-fsymId:\n      summary: Single Equity Id and Single Equity Data Item with fsymId=Y\n      description: \u003e\n        `cross-sectional` Request for Single Price Record for IBM and the fsymId\n        for IBM\n      value:\n        data:\n          - dataItemName: requestId\n            result:\n              - IBM\n            dataType: STRING\n            error: 0\n          - dataItemName: P_PRICE(0)\n            result:\n              - 120.77\n            dataType: DOUBLE\n            error: 0\n          - dataItemName: fsymId\n            result:\n              - SJY281-R\n            dataType: STRING\n            error: 0\n    cross-sectional-multipleId-multipleItem:\n      summary: Mutiple Equity Ids and Multiple Equity Data Items\n      description: \u003e\n        `cross-sectional` Request for last fiscal year's sales, the name of the\n        company, the price for the last completed trading day, and last fiscal\n        year's total assets for the requested 7 identifiers\n      value:\n        data:\n          - dataItemName: requestId\n            result:\n              - IBM\n              - FDS\n              - GE\n              - GOOG\n              - AAPL\n              - MSFT\n              - TSLA\n            dataType: STRING\n            error: 0\n          - dataItemName: FF_SALES(ANN_R,0)\n            result:\n              - 77147\n              - 1494.111\n              - 95055\n              - 161402\n              - 259968\n              - 143015\n              - 24578\n            dataType: DOUBLE\n            error: 0\n          - dataItemName: PROPER_NAME(0,SECURITY,NAME)\n            result:\n              - International Business Machines Corporation\n              - FactSet Research Systems Inc.\n              - General Electric Company\n              - Alphabet Inc. Class C\n              - Apple Inc.\n              - Microsoft Corporation\n              - Tesla Inc\n            dataType: STRING\n            error: 0\n          - dataItemName: P_PRICE(0)\n            result:\n              - 125.52\n              - 333.93\n              - 7.29\n              - 1534.61\n              - 115.98\n              - 214.22\n              - 430.83\n            dataType: DOUBLE\n            error: 0\n          - dataItemName: FF_ASSETS(ANN_R,0)\n            result:\n              - 152186\n              - 2083.388\n              - 274090\n              - 275909\n              - 338516\n              - 301311\n              - 34309\n            dataType: DOUBLE\n            error: 0\n    cross-sectional-multipleId-multipleItem-flatten:\n      summary: Mutiple Equity Ids and Multiple Equity Data Items with flatten=Y\n      description: \u003e\n        `cross-sectional` Request for last fiscal year's sales, the name of the\n        company, the price for the last completed trading day, and last fiscal\n        year's total assets for the requested 7 identifiers\n      value:\n        data:\n          - requestId: IBM\n            FF_SALES(ANN_R,0): 73620\n            PROPER_NAME(0,SECURITY,NAME): International Business Machines Corporation\n            P_PRICE(0): 134.93\n            FF_ASSETS(ANN_R,0): 155971\n          - requestId: FDS\n            FF_SALES(ANN_R,0): 1494.111\n            PROPER_NAME(0,SECURITY,NAME): FactSet Research Systems Inc.\n            P_PRICE(0): 309.36\n            FF_ASSETS(ANN_R,0): 2083.388\n          - requestId: GE\n            FF_SALES(ANN_R,0): 79893\n            PROPER_NAME(0,SECURITY,NAME): General Electric Company\n            P_PRICE(0): 13.39\n            FF_ASSETS(ANN_R,0): 255050\n          - requestId: GOOG\n            FF_SALES(ANN_R,0): 182350\n            PROPER_NAME(0,SECURITY,NAME): Alphabet Inc. Class C\n            P_PRICE(0): 2249.68\n            FF_ASSETS(ANN_R,0): 319616\n          - requestId: AAPL\n            FF_SALES(ANN_R,0): 274150\n            PROPER_NAME(0,SECURITY,NAME): Apple Inc.\n            P_PRICE(0): 127.9\n            FF_ASSETS(ANN_R,0): 323888\n          - requestId: MSFT\n            FF_SALES(ANN_R,0): 143015\n            PROPER_NAME(0,SECURITY,NAME): Microsoft Corporation\n            P_PRICE(0): 249.9\n            FF_ASSETS(ANN_R,0): 301311\n          - requestId: TSLA\n            FF_SALES(ANN_R,0): 31536\n            PROPER_NAME(0,SECURITY,NAME): Tesla Inc\n            P_PRICE(0): 670.97\n            FF_ASSETS(ANN_R,0): 52148\n    cross-sectional-multipleId-multipleCalculatedItem:\n      summary: Mutiple Ids and Multiple Calculated Equity Data Items\n      description: \u003e\n        `cross-sectional` Request for to retrieve your own P/E ratio calculation\n        from the last trading day of the company’s most recent fiscal year, the\n        percentage of revenue exposure in the US and Japan for the same date as\n        the first data item, and indicator of indicate whether the latest fiscal\n        year's sales were higher or lower than the previous year's sales for\n        IBM, FDS, GE, GOOG, AAPL, MSFT, and TSLA\n      value:\n        data:\n          - dataItemName: requestId\n            result:\n              - IBM\n              - FDS\n              - GE\n              - GOOG\n              - AAPL\n              - MSFT\n              - TSLA\n            dataType: STRING\n            error: 0\n          - dataItemName: P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n            result:\n              - 12.3145\n              - 33.9323\n              - -388.737\n              - 38.3806\n              - 40.3096\n              - 38.9243\n              - -873.152\n            dataType: DOUBLE\n            error: 0\n          - dataItemName: \u003e-\n              FF_GEOREV_COUNTRY_PCT(840,ANN,0,RF)+FF_GEOREV_COUNTRY_PCT(392,ANN,0,RF)\n            result:\n              - 48.0589\n              - 60.992432\n              - 46.614087\n              - 49.366951\n              - 47.580278\n              - 54.971108\n              - 54.065827\n            dataType: DOUBLE\n            error: 0\n          - dataItemName: IF(FF_SALES(ANN_R,0)\u003eFF_SALES(ANN_R,-1),\"HIGHER\",\"LOWER\")\n            result:\n              - LOWER\n              - HIGHER\n              - LOWER\n              - HIGHER\n              - HIGHER\n              - HIGHER\n              - HIGHER\n            dataType: STRING\n            error: 0\n    cross-sectional-multipleFixedIncomeId-multipleItem:\n      summary: Mutiple Fixed Income Ids and Multiple Fixed Income Data Items\n      description: \u003e\n        `cross-sectional` Request for the name of the issuer and the amount\n        outstanding for the requested 2 fixed income identifiers\n      value:\n        data:\n          - dataItemName: requestId\n            result:\n              - U88803AB\n              - 00138GAC\n            dataType: STRING\n            error: 0\n          - dataItemName: FI_NAME(ISSR)\n            result:\n              - 21st Century Fox America, Inc.\n              - AIG Life Holdings, Inc.\n            dataType: STRING\n            error: 0\n          - dataItemName: FI_AMOUNT_OUT(AMT,0,USD)\n            result:\n              - 0.2,\n              - 212\n            dataType: DOUBLE\n            error: 0\n    cross-sectional-smallUniv-singleItem:\n      summary: Small Equity Universe and Single Equity Data Item\n      description: \u003e\n        `cross-sectional` Request for the company name for each S\u0026P 500\n        constituent with a price less than 10 USD\n      value:\n        data:\n          - universe: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)\u003c10)=1\n            dataItemName: requestId\n            result:\n              - '56584910'\n              - '63707110'\n              - '36960410'\n              - '44615010'\n              - '34537086'\n              - '03741110'\n              - 42824C10\n              - G8711010\n            dataType: STRING\n            error: 0\n          - dataItemName: FG_COMPANY_NAME\n            result:\n              - Marathon Oil Corporation\n              - National Oilwell Varco, Inc.\n              - General Electric Company\n              - Huntington Bancshares Incorporated\n              - Ford Motor Company\n              - Apache Corporation\n              - Hewlett Packard Enterprise Co.\n              - TechnipFMC Plc\n            dataType: STRING\n            error: 0\n    cross-sectional-debtUniv-multipleItem:\n      summary: Debt Universe and Multiple Debt Data Items\n      description: \u003e\n        `cross-sectional` Request for the issuer name and amount out for all\n        debt instruments for the Starbucks Corporation\n      value:\n        data:\n          - dataItemName: requestId\n            dataType: STRING\n            result:\n              - 855244AD\n              - 855244AG\n              - 855244AH\n              - 855244AJ\n              - 855244AK\n              - 855244AM\n              - 855244AN\n              - 855244AP\n              - 855244AQ\n              - 855244AR\n              - 855244AS\n              - 855244AT\n              - 855244AU\n              - 855244AV\n              - 855244AW\n              - 855244AX\n              - 855244AY\n              - 855244AZ\n              - 855244BA\n              - U8547PAA\n              - FDS01U70\n              - FDS02JIW\n              - FDS0F9W5\n              - FDS0QANF\n              - FDS1B17O\n              - FDSA82FD\n              - FDSB0FB5\n              - 855244AA\n              - 855244AB\n              - 855244AC\n              - 855244AE\n              - 855244AF\n              - 855244AL\n              - FDS0QARA\n              - FDS0VUVD\n            universe: EQUITY(P_SYMBOL)=\"SBUX-US\"\n            error: 0\n          - error: 0\n            dataItemName: FI_NAME(ISSR)\n            result:\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n              - Starbucks Corporation\n            dataType: STRING\n          - error: 0\n            dataItemName: FI_AMOUNT_OUT(AMT,0,USD)\n            result:\n              - 750\n              - 500\n              - 350\n              - 750\n              - 500\n              - 500\n              - 1000\n              - 600\n              - 1250\n              - 750\n              - 1000\n              - 1000\n              - 1000\n              - 500\n              - 750\n              - 500\n              - 500\n              - 1250\n              - 1250\n              - 815.699808132134\n              - null\n              - null\n              - null\n              - null\n              - null\n              - null\n              - null\n              - 0\n              - 0\n              - 0\n              - 0\n              - 0\n              - 0\n              - null\n              - null\n            dataType: DOUBLE\n    BatchStatusAcceptedResponse:\n      description: Batch Status Accepted Response\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: QUEUED\n          startTime: '2021-06-29T18:34:52.168Z'\n          endTime: null\n          error: null\n    BatchStatusQueuedResponse:\n      description: Batch Status Queued Response\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: QUEUED\n          startTime: '2021-06-29T18:34:52.168Z'\n          endTime: null\n          error: null\n    BatchStatusExecutingResponse:\n      description: Batch Status Executing Response\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: EXECUTING\n          startTime: '2021-06-29T18:34:52.168Z'\n          endTime: null\n          error: null\n    BatchResultQueuedResponse:\n      description: Batch Result Queued Response\n      value:\n        errors:\n          id: 618AC9B50DE76980\n          code: Accepted\n          title: \u003e-\n            Please check the status endpoint until the batch request has a\n            status of DONE and then retrieve the results from the results\n            endpoint.\n          timestamp: '2022-01-18 18:29:59.189'\n    BatchResultExecutingResponse:\n      description: Batch Result Executing Response\n      value:\n        errors:\n          id: 618AC9B50DE76980\n          code: Accepted\n          title: \u003e-\n            Please check the status endpoint until the batch request has a\n            status of DONE and then retrieve the results from the results\n            endpoint.\n          timestamp: '2022-01-18 18:29:59.189'\n    BatchStatusDoneResponse:\n      description: Batch Status Done Response\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: DONE\n          startTime: '2021-06-29T18:34:52.168Z'\n          endTime: '2021-06-29T18:34:55.402Z'\n          error: null\n    BatchStatusFailedResponse:\n      description: \u003e-\n        Batch Status Failed Response. The example response shows the result of\n        checking the status of a batch request that took longer than 10 minutes\n        to calculate and timed out.\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: FAILED\n          startTime: '2021-06-29T18:34:52.168Z'\n          endTime: '2021-06-29T18:44:55.402Z'\n          error: timeout\n  requestBodies:\n    time-series-postBody:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/time_series_request'\n          examples:\n            time-series-singleId-singleItem:\n              summary: |\n                Single Id and Single formula\n              value:\n                data:\n                  ids:\n                    - IBM\n                  formulas:\n                    - P_PRICE(0)\n            time-series-singleId-singleItem-fsymId:\n              summary: |\n                Single Id and Single Data Item with fsymId=Y\n              value:\n                data:\n                  ids:\n                    - IBM\n                  formulas:\n                    - P_PRICE(0)\n                  fsymId: 'Y'\n            time-series-multipleId-mulipleItem:\n              summary: |\n                Multiple Ids and Multiple Data Items with SEVENDAY Calendar\n              value:\n                data:\n                  ids:\n                    - IBM\n                    - AAPL\n                    - MSFT\n                  formulas:\n                    - P_PRICE(0,-2D,D)\n                    - FG_COMPANY_NAME\n                    - FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,\"SEG\")\n                    - FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,\"SALES\",,BUS,\"SEG\")\n                  calendar: SEVENDAY\n            time-series-multipleItemsFlatten:\n              summary: |\n                Multiple Ids and Multiple Data Items with flatten=Y\n              value:\n                data:\n                  ids:\n                    - IBM\n                    - AAPL\n                    - MSFT\n                  formulas:\n                    - P_PRICE_OPEN(0,-2,D)\n                    - P_PRICE(0,-2,D)\n                    - FG_COMPANY_NAME\n                  flatten: 'Y'\n            time-series-multipleId-mulipleCalculatedItem:\n              summary: |\n                Multiple Ids and Multiple Calculated Data Items\n              description: \u003e\n                The first data item using the division operator to calculate a\n                P/E ratio from the last trading day of the company’s most recent\n                fiscal year.\n\n\n                The second data item uses the addition operator to calculate\n                percentage of revenue exposure in the US and Japan for the same\n                date as the first data item.\n\n\n                The third data item uses the average function (**AVG**) and the\n                **IF** function to indicate whether the average daily price\n                change over the company’s most recent fiscal year was postive or\n                negative.\n\n\n                You can find more information about the different functions you\n                can use in FQL at the following Online Assistant pages -\n\n                * Mathematical Operators - [Online Assistant Page\n                10600](https://my.apps.factset.com/oa/pages/10600)\n\n                * Logical Functions - [Online Assistant Page\n                11485](https://my.apps.factset.com/oa/pages/1485)\n\n                * Categorical List of All Functions - [Online Assistant Page\n                1411](https://my.apps.factset.com/oa/pages/1411)\n              value:\n                data:\n                  ids:\n                    - IBM\n                    - AAPL\n                    - MSFT\n                  formulas:\n                    - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n                    - \u003e-\n                      FF_GEOREV_COUNTRY_PCT(\"840\",ANN,0,,,RF)+FF_GEOREV_COUNTRY_PCT(\"392\",ANN,0,,,RF)\n                    - \u003e-\n                      IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))\u003e0,\"POSITIVE\",\"NEGATIVE\")\n            time-series-smallUniv-singleItem:\n              summary: |\n                Small Universe and Single Data Item\n              value:\n                data:\n                  universe: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)\u003c10)=1\n                  formulas:\n                    - FF_SALES(QTR_R,0,-3,FQ)\n            time-series-debtUniv-multipleItem:\n              summary: |\n                Debt Universe and Multiple Debt Data Items\n              value:\n                data:\n                  universe: EQUITY(P_SYMBOL)='SBUX-US'\n                  universeType: DEBT\n                  formulas:\n                    - FI_NAME(ISSR)\n                    - FI_AMOUNT_OUT(AMT,0,USD)\n            time-series-batch:\n              summary: \u003e\n                Batch Request for Multiple Ids and Multiple Data Items with\n                SEVENDAY Calendar\n              value:\n                data:\n                  ids:\n                    - IBM\n                    - AAPL\n                    - MSFT\n                  formulas:\n                    - P_PRICE(0,-2D,D)\n                    - FG_COMPANY_NAME\n                    - FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,\"SEG\")\n                    - FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,\"SALES\",,BUS,\"SEG\")\n                  calendar: SEVENDAY\n                  batch: 'Y'\n    cross-sectional-postBody:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/cross_sectional_request'\n          examples:\n            cross-sectional-singleId-singleItem:\n              summary: Single Equity Id and Single Equity Data Item\n              value:\n                data:\n                  ids:\n                    - IBM\n                  formulas:\n                    - P_PRICE(0)\n            cross-sectional-singleId-singleItem-fsymId:\n              summary: Single Equity Id and Single Equity Data Item with fsymId=Y\n              value:\n                data:\n                  ids:\n                    - IBM\n                  formulas:\n                    - P_PRICE(0)\n                  fsymId: 'Y'\n            cross-sectional-multipleId-mulipleItem:\n              summary: \u003e-\n                Multiple Equity Ids and Multiple Equity Data Items with SEVENDAY\n                Calendar\n              value:\n                data:\n                  ids:\n                    - IBM\n                    - FDS\n                    - GE\n                    - GOOG\n                    - AAPL\n                    - MSFT\n                    - TSLA\n                  formulas:\n                    - FF_SALES(ANN_R,0)\n                    - PROPER_NAME(0,SECURITY,NAME)\n                    - P_PRICE(0)\n                    - FF_ASSETS(ANN_R,0)\n                  calendar: SEVENDAY\n            cross-sectional-multipleId-mulipleItem-flatten:\n              summary: \u003e-\n                Multiple Equity Ids and Multiple Equity Data Items with\n                flatten=Y\n              value:\n                data:\n                  ids:\n                    - IBM\n                    - FDS\n                    - GE\n                    - GOOG\n                    - AAPL\n                    - MSFT\n                    - TSLA\n                  formulas:\n                    - FF_SALES(ANN_R,0)\n                    - PROPER_NAME(0,SECURITY,NAME)\n                    - P_PRICE(0)\n                    - FF_ASSETS(ANN_R,0)\n                  flatten: 'Y'\n            cross-sectional-multipleId-mulipleCalculatedItem:\n              summary: Multiple Ids and Multiple Calculated Data Items\n              description: \u003e\n                The first data item using the division operator to calculate a\n                P/E ratio from the last trading day of the company’s most recent\n                fiscal year.\n\n\n                The second data item uses the addition operator to calculate\n                percentage of revenue exposure in the US and Japan for the same\n                date as the first data item.\n\n\n                The third data item uses the **IF** function and greater than\n                operator (**\u003e**) to indicate whether the latest fiscal year's\n                sales were higher or lower than the previous year's sales.\n\n\n                You can find more information about the different functions you\n                can use in FQL at the following Online Assistant pages -\n\n                * Mathematical Operators - [Online Assistant Page\n                10600](https://my.apps.factset.com/oa/pages/10600)\n\n                * Logical Functions - [Online Assistant Page\n                11485](https://my.apps.factset.com/oa/pages/1485)\n\n                * Categorical List of All Functions - [Online Assistant Page\n                1411](https://my.apps.factset.com/oa/pages/1411)\n              value:\n                data:\n                  ids:\n                    - IBM\n                    - FDS\n                    - GE\n                    - GOOG\n                    - AAPL\n                    - MSFT\n                    - TSLA\n                  formulas:\n                    - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)\n                    - \u003e-\n                      FF_GEOREV_COUNTRY_PCT(840,ANN,0,RF)%2BFF_GEOREV_COUNTRY_PCT(392,ANN,0,RF)\n                    - IF(FF_SALES(ANN_R,0)\u003eFF_SALES(ANN_R,-1),\"HIGHER\",\"LOWER\")\n            cross-sectional-multipleFixedIncomeId-mulipleItem:\n              summary: Multiple Fixed Income Ids and Multiple Fixed Data Items\n              value:\n                data:\n                  ids:\n                    - U88803AB\n                    - 00138GAC\n                  formulas:\n                    - FI_NAME(ISSR)\n                    - FI_AMOUNT_OUT(AMT,0,USD)\n            cross-sectional-smallUniv-singleItem:\n              summary: Small Equity Universe and Single Equity Data Item\n              value:\n                data:\n                  universe: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)\u003c10)=1\n                  formulas:\n                    - P_PRICE(0)\n            cross-sectional-debtUniv-multipleItem:\n              summary: Debt Universe and Multiple Debt Data Items\n              value:\n                data:\n                  universe: EQUITY(P_SYMBOL)='SBUX-US'\n                  universeType: DEBT\n                  formulas:\n                    - FI_NAME(ISSR)\n                    - FI_AMOUNT_OUT(AMT,0,USD)\n            cross-sectional-batch:\n              summary: \u003e-\n                Batch Request for Multiple Equity Ids and Multiple Equity Data\n                Items with SEVENDAY Calendar\n              value:\n                data:\n                  ids:\n                    - IBM\n                    - FDS\n                    - GE\n                    - GOOG\n                    - AAPL\n                    - MSFT\n                    - TSLA\n                  formulas:\n                    - FF_SALES(ANN_R,0)\n                    - PROPER_NAME(0,SECURITY,NAME)\n                    - P_PRICE(0)\n                    - FF_ASSETS(ANN_R,0)\n                  calendar: SEVENDAY\n                  batch: 'Y'\n    batch-status-postBody:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BatchDataRequest'\n          examples:\n            BatchStatusRequest:\n              summary: Batch Status Request\n              value:\n                data:\n                  id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n    batch-result-postBody:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BatchDataRequest'\n          examples:\n            BatchDataRequest:\n              summary: Batch Result Request\n              value:\n                data:\n                  id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n  headers:\n    api-version:\n      description: the full semantic version of the API.\n      schema:\n        type: string\n        example: 1.0.0\n    api-supported-versions:\n      description: the comma-separated list of supported major versions.\n      schema:\n        type: string\n        example: '1'\n    api-deprecated-versions:\n      description: the comma-separated list of deprecated major versions.\n      schema:\n        type: string\n        example: 1,2\n    chain-id:\n      description: Unique identifier for the request. Also known as the chain id.\n      schema:\n        type: string\n        example: 5EFCCA8940CAEA6B\n    X-RateLimit-Limit-second:\n      description: Number of allowed requests per second.\n      schema:\n        type: integer\n        example: 5\n    X-RateLimit-Remaining-second:\n      description: Number of requests currently available in second.\n      schema:\n        type: integer\n        example: 4\n    X-RateLimit-Limit-day:\n      description: Number of allowed requests per day.\n      schema:\n        type: integer\n        example: 1000\n    X-RateLimit-Remaining-day:\n      description: Number of requests currently available in day.\n      schema:\n        type: integer\n        example: 854\n    Retry-After:\n      description: \u003e-\n        Number of seconds the service is expected to be unavailable to the\n        client. This header will be present on 429 errors.\n      schema:\n        type: integer\n        example: 62\n",
			"canonicalURL": "/github.com/factset/enterprise-sdk@dcf75a02daedc726c313912a349d2863114bc92c/-/blob/specs/Formula.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/factset/enterprise-sdk/blob/dcf75a02daedc726c313912a349d2863114bc92c/specs/Formula.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/batch-result\": get: security: security \"FactSetOAuth2\" (index 1): oauth2 security not implemented",
	"NotImplemented": [
		"discriminator inference",
		"oauth2 security",
		"sum types with same names"
	]
}