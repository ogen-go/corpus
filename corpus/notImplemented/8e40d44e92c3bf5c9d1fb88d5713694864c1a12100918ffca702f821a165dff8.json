{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/joolfe/postman-to-openapi"
		},
		"file": {
			"name": "Variables.yml",
			"size": 0,
			"path": "test/resources/output/Variables.yml",
			"byteSize": 2519,
			"content": "openapi: 3.0.0\ninfo:\n  title: Variables\n  description: Mi super test collection from postman\n  version: 1.1.0\nservers:\n  - url: https://api.io\npaths:\n  /users:\n    post:\n      tags:\n        - default\n      summary: Create new User\n      description: Create a new user into your amazing API\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                example: field\n                other:\n                  data1: 'yes'\n                  service: s23434\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n    get:\n      tags:\n        - default\n      summary: Get a list of user\n      description: Get a list of users\n      parameters:\n        - name: size\n          in: query\n          schema:\n            type: integer\n          description: size of the list\n          example: '10'\n        - name: company\n          in: query\n          schema:\n            type: string\n          description: company for filter users\n          example: ServicesLTD\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /test/path/here/post:\n    post:\n      tags:\n        - default\n      summary: Create Post\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                company:\n                  type: string\n                  example: ServicesLTD\n                text:\n                  type: string\n                  example: This is an example text\n                auditor:\n                  type: string\n                  example: IHA\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /users/{user_id}:\n    get:\n      tags:\n        - default\n      summary: Consult User data\n      description: Get one user instance data\n      parameters:\n        - name: X-Company\n          in: header\n          schema:\n            type: string\n          example: ServicesLTD\n        - name: company\n          in: query\n          schema:\n            type: string\n          example: ServicesLTD\n        - name: user_id\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n",
			"canonicalURL": "/github.com/joolfe/postman-to-openapi@73718f5d77979d163176fac05796dbfa5755dc4e/-/blob/test/resources/output/Variables.yml",
			"externalURLs": [
				{
					"url": "https://github.com/joolfe/postman-to-openapi/blob/73718f5d77979d163176fac05796dbfa5755dc4e/test/resources/output/Variables.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/users\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}