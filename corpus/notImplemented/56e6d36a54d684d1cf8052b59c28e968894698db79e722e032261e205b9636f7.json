{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/mercure.local/0.3.2/openapi.yaml",
			"byteSize": 7689,
			"content": "openapi: 3.0.2\nservers:\n  - url: http://mercure.local\ninfo:\n  contact:\n    email: contact@mercure.rocks\n    name: KÃ©vin Dunglas\n    url: https://mercure.rocks\n  description: \"[Mercure](https://mercure.rocks) is a protocol allowing to push data updates to web browsers and other HTTP clients in a convenient, fast, reliable and battery-efficient way.\"\n  license:\n    name: GNU Affero General Public License v3.0 or later\n    url: https://github.com/dunglas/mercure/blob/master/LICENSE\n    x-spdx: AGPL-3.0-or-later\n  title: The Mercure protocol\n  version: 0.3.2\n  x-apisguru-categories:\n    - messaging\n  x-logo:\n    backgroundColor: \"#FFFFFF\"\n    url: https://raw.githubusercontent.com/dunglas/mercure/master/public/mercure.svg?sanitize=true\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/dunglas/mercure/main/spec/openapi.yaml\n      version: \"3.0\"\n  x-providerName: mercure.local\nexternalDocs:\n  description: The Mercure protocol specification\n  url: https://mercure.rocks/spec\nsecurity:\n  - Bearer: []\n  - Cookie: []\npaths:\n  /.well-known/mercure:\n    get:\n      externalDocs:\n        description: Subscription specification\n        url: https://mercure.rocks/spec#subscription\n      parameters:\n        - description: The topic to get updates from, can be a URI template (RFC6570).\n          in: query\n          name: topic\n          required: true\n          schema:\n            items:\n              type: string\n            type: array\n        - description: The last received event id, to retrieve missed events.\n          in: query\n          name: Last-Event-ID\n          schema:\n            type: string\n        - description: The last received event id, to retrieve missed events, takes precedence over the query parameter.\n          in: header\n          name: Last-Event-ID\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            text/event-stream: {}\n          description: Event stream opened.\n        \"400\":\n          description: Missing topic parameter or invalid URI template.\n        \"401\":\n          $ref: \"#/components/responses/401\"\n      summary: Subscribe to updates\n    post:\n      externalDocs:\n        description: Publishing specification\n        url: https://mercure.rocks/spec#publication\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                data:\n                  description: The content of the new version of this topic.\n                  type: string\n                id:\n                  description: \"The topic's revision identifier: it will be used as the SSE's `id` property.\"\n                  type: string\n                private:\n                  description: To mark an update as private. If not provided, this update will be public.\n                  type: boolean\n                retry:\n                  description: The SSE's `retry` property (the reconnection time).\n                  type: integer\n                topic:\n                  description: IRIs of the updated topic. If this key is present several times, the first occurrence is considered to be the canonical URL of the topic, and other ones are considered to be alternate URLs.\n                  items:\n                    type: string\n                  type: array\n                type:\n                  description: The SSE's `event` property (a specific event type).\n                  type: string\n              required:\n                - topic\n                - data\n      responses:\n        \"200\":\n          content:\n            text/plain: {}\n          description: The id of this update\n        \"400\":\n          description: Invalid request\n        \"401\":\n          $ref: \"#/components/responses/401\"\n      summary: Publish an update\n  /.well-known/mercure/subscriptions:\n    get:\n      externalDocs:\n        description: Subscription API\n        url: https://mercure.rocks/spec#subscription-api\n      responses:\n        \"200\":\n          content:\n            application/ld+json:\n              schema:\n                $ref: \"#/components/schemas/Subscriptions\"\n          description: The list of active subscriptions\n        \"401\":\n          $ref: \"#/components/responses/401\"\n      summary: Active subscriptions\n  \"/.well-known/mercure/subscriptions/{topic}\":\n    get:\n      externalDocs:\n        description: Subscription API\n        url: https://mercure.rocks/spec#subscription-api\n      parameters:\n        - in: path\n          name: topic\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/ld+json:\n              schema:\n                $ref: \"#/components/schemas/Subscriptions\"\n          description: The list of active subscriptions\n        \"401\":\n          $ref: \"#/components/responses/401\"\n      summary: Active subscriptions for the given topic\n  \"/.well-known/mercure/subscriptions/{topic}/{subscriber}\":\n    get:\n      externalDocs:\n        description: Subscription API\n        url: https://mercure.rocks/spec#active-subscriptions\n      parameters:\n        - in: path\n          name: topic\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: subscriber\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/ld+json:\n              schema:\n                $ref: \"#/components/schemas/Subscriptions\"\n          description: The list of active subscriptions\n        \"401\":\n          $ref: \"#/components/responses/401\"\n      summary: Active subscription for the given topic and subscriber\ncomponents:\n  responses:\n    \"401\":\n      description: Not authorized (missing or invalid JWT).\n  schemas:\n    Subscription:\n      properties:\n        \"@context\":\n          example: https://mercure.rocks/\n          format: iri\n          type: string\n        active:\n          type: boolean\n        id:\n          example: /.well-known/mercure/subscriptions\n          format: iri-reference\n          type: string\n        lastEventID:\n          example: urn:uuid:5e94c686-2c0b-4f9b-958c-92ccc3bbb4eb\n          type: string\n        payload:\n          type: object\n        subscriber:\n          example: urn:uuid:bb3de268-05b0-4c65-b44e-8f9acefc29d6\n          type: string\n        topic:\n          example: https://example.com/{selector}\n          type: string\n        type:\n          example: Subscription\n          format: iri-reference\n          type: string\n      required:\n        - id\n        - type\n        - topic\n        - subscriber\n        - active\n      type: object\n    Subscriptions:\n      properties:\n        \"@context\":\n          example: https://mercure.rocks/\n          format: iri\n          type: string\n        id:\n          example: /.well-known/mercure/subscriptions\n          format: iri-reference\n          type: string\n        lastEventID:\n          example: urn:uuid:5e94c686-2c0b-4f9b-958c-92ccc3bbb4eb\n          type: string\n        subscriptions:\n          items:\n            $ref: \"#/components/schemas/Subscription\"\n          type: array\n        type:\n          example: Subscriptions\n          format: iri-reference\n          type: string\n      required:\n        - \"@context\"\n        - id\n        - type\n        - lastEventID\n        - subscriptions\n      type: object\n  securitySchemes:\n    Bearer:\n      bearerFormat: JWT\n      description: Preferred for server to server\n      scheme: bearer\n      type: http\n    Cookie:\n      description: Preferred for web browsers\n      in: cookie\n      name: mercureAuthorization\n      type: apiKey\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/mercure.local/0.3.2/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/mercure.local/0.3.2/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/.well-known/mercure\": get: responses: 200: contents: unsupported content types: [text/event-stream]",
	"NotImplemented": [
		"unsupported content types"
	]
}