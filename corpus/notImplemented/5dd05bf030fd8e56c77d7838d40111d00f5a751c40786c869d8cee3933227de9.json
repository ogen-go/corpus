{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/LiveRamp/reslang"
		},
		"file": {
			"name": "distribution-swagger.yaml",
			"size": 0,
			"path": "concepts/distribution-swagger.yaml",
			"byteSize": 19315,
			"content": "openapi: 3.0.0\ninfo:\n  title: Distribution API - BETA\n  version: 0.0.1\n  description: API for accessing LiveRamp's Distribution Service.\npaths:\n  /v1/distribution-requests:\n    get:\n      summary: List Distribution Requests\n      operationId: findDistributionRequests\n      responses:\n        \"200\":\n          description: \"\"\n          headers:\n            X-Total-Count:\n              description: Total number of records in the data set.\n              schema:\n                type: number\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  distributionRequests:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/distribution-request-output\"\n                required:\n                  - distributionRequests\n        \"400\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"401\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"403\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"422\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"500\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errors\"\n      description: \u003e-\n        Use this endpoint to find existing DistributionRequests. \n\n        The result set is paginated for performance and sorted by createdAt descending by default. Response of this method includes a header “T-Total-Count” to indicate the total number of records. Use this value along with query parameters, offset and limit, to iterate through the entire result set.\n      tags:\n        - Distribution Request\n      parameters:\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/limit\"\n        - in: query\n          name: sort\n          description: \u003e-\n            Sort key and order. The syntax is: \n\n            sort=key1:asc,key2:desc\n\n            If a key is specified multiple times, we'll use the sort order associated with the last occurrence of the key. \n\n            Example:\n\n            * sort=createdAt:asc\n\n            * sort=statusUpdatedAt:desc,createdAt:asc\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - createdAt:asc\n                - createdAt:desc\n                - statusUpdatedAt:asc\n                - statusUpdatedAt:desc\n        - in: query\n          name: status\n          description: |-\n            Filter the list of DistributionRequests by status.\n            Example:\n            * status=QUEUED\n            * status=QUEUED,IN_PROGRESS\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - QUEUED\n                - IN_PROGRESS\n                - COMPLETED\n                - CANCELLED\n                - FAILED\n        - in: query\n          name: createdAfter\n          description: \u003e-\n            Filter the list of DistributionRequests by when it was created. The\n            date-time value must be in UTC, formatted in ISO-8601.\n\n            Example:\n\n            * createdAfter=2019-06-20T16:53:07Z\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: createdBefore\n          description: \u003e-\n            Filter the list of DistributionRequests by when it was created. The\n            date-time value must be in UTC, formatted in ISO-8601.\n\n            Example:\n\n            * createdBefore=2019-06-20T16:53:07Z\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: statusUpdatedAfter\n          description: \u003e-\n            Filter the list of DistributionRequests by when it's status was last\n            updated. The date-time value must be in UTC, formatted in ISO-8601.\n\n            Example:\n\n            * statusUpdatedAfter=2019-06-20T16:53:07Z\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: statusUpdatedBefore\n          description: \u003e-\n            Filter the list of DistributionRequests by when it's status was last\n            updated. The date-time value must be in UTC, formatted in ISO-8601.\n\n            Example:\n\n            * statusUpdatedBefore=2019-06-20T16:53:07Z\n          schema:\n            type: string\n            format: date-time\n    post:\n      summary: Create Distribution Request\n      operationId: createDistributionRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/distribution-request-input\"\n      responses:\n        \"201\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n        \"400\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"401\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"403\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"422\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"500\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errors\"\n      description: Use this endpoint to create a new DistributionRequest.\n      tags:\n        - Distribution Request\n  \"/v1/distribution-requests/{id}\":\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Get Distribution Request Overview\n      operationId: getDistributionRequest\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/distribution-request-output\"\n        \"400\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"401\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"403\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"422\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"500\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/errors\"\n      description: \"Use this endpoint to fetch the overview of a given DistributionRequest,\n        including current status, input configuration as well as output\n        metadata, if the request has completed. \"\n      tags:\n        - Distribution Request\n  \"/v1/distribution-requests/{id}/actions/cancel\":\n    post:\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                properties: {}\n        \"400\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"401\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"403\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"422\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"500\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/errors\"\n      summary: Cancel Distribution Request\n      description: \u003e-\n        Use this method to cancel a given DistributionRequest. This will prevent\n        the request from moving to the next stage, but may not halt or reverse\n        any current processing of this request. A side-effect of this is that we\n        may deliver data to a destination, even if it was cancelled.\n\n\n        The cancelled DistributionRequest will still be kept in the system for bookkeeping.\n      operationId: cancelDistributionRequest\n      tags:\n        - Distribution Request\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n  \"/v1/distribution-requests/{id}/actions/retry\":\n    post:\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                properties: {}\n        \"400\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"401\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"403\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"422\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/errors\"\n        \"500\":\n          description: \"\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/errors\"\n      summary: Retry Failed Distribution Request\n      description: \"Use this method to retry a failed DistributionRequest. This will try to\n        resume a failed request from the last successful step. \"\n      operationId: retryDistributionRequest\n      tags:\n        - Distribution Request\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\ntags:\n  - name: Distribution Request\nservers:\n  - url: https://api.liveramp.com/distribution\ncomponents:\n  parameters:\n    offset:\n      name: offset\n      in: query\n      description: Offset of the record (starting from 0) to include in the response.\n      schema:\n        type: number\n        default: 0\n    limit:\n      name: limit\n      in: query\n      description: Number of records to return. If unspecified, 10 records will be\n        returned. Maximum value for limit can be 100.\n      schema:\n        type: number\n        maximum: 100\n        default: 10\n  schemas:\n    distribution-request-input:\n      title: Distribution Request Input\n      description: The properties that are allowed when creating a DistributionRequest.\n      type: object\n      properties:\n        destinationEndpointID:\n          type: string\n          example: urn:lr:endpoint:1234\n          description: Reference to a destination's endpoints to be used for distributing\n            the data.\n        destinationEndpointProperties:\n          type: object\n          example:\n            clientID: \"8234\"\n          description: A map of keys and values needed to use the selected destination\n            endpoint.\n        inputDataURL:\n          type: string\n          description: \"URL of the data to be distributed. Currently, we only support files\n            in GCS.  \"\n          format: uri\n          example: https://storage.google.com/buckets/my-bucket/dog-lovers-campaign.csv\n        dataMappingConfigs:\n          type: array\n          description: \u003e-\n            A destination platform might require a particular key/value data\n            field to be passed as segment IDs or as different key/value\n            information than is contained in the input file. An application user\n            can use the mapping configuration parameters to map a given input\n            data field to the output type or values required by the destination\n            platform.\n\n\n            For each data field that needs to be transformed, use the input parameters “key” and “value” to specify the key/value pair that should be transformed.\n\n\n            To map a particular input key/value pair into a specific segment ID, use the “destinationSegmentID” output parameter to specify the required value.  For example, to map a data field with the key/value of “gender=female” to the segment ID “MM1234”, \"Pets=Dogs\" to segment ID \"MM5678\", etc.\n\n\n            To map a particular input key/value pair into different values for the key and value, use the “key” and “value” output parameters to specify the required values.  For example, to map a data field with the key/value of “gender=female” to the key/value of “G=F”, \"Pets=Dogs\" to \"Pets in Houshold=Dogs\".\n\n\n            Note: If you need to pass the input key/value data without any transformation, you still need to create entries for those keys in this array. For example, to pass all values of key \"country\" without any transformation, do not set \"value\" in both the input and output key/value parameters.\n\n\n            Note: This array can only accept upto 500 entries. For requests with more than 500 entries, an error with status code 422 will be returned.\n          items:\n            $ref: \"#/components/schemas/data-mapping-config\"\n      required:\n        - destinationEndpointID\n        - destinationEndpointProperties\n        - inputDataURL\n        - dataMappingConfigs\n    distribution-request-output:\n      title: Distribution Request Output\n      description: The properties that are included when fetching a list of\n        DistributionRequests or a given DistributionRequest.\n      allOf:\n        - type: object\n          properties:\n            id:\n              type: string\n              example: abc-123-456\n          required:\n            - id\n        - $ref: \"#/components/schemas/distribution-request-input\"\n        - type: object\n          properties:\n            createdAt:\n              type: string\n              description: Datetime in UTC, formatted as ISO-8601, when the request was\n                created.\n              format: date-time\n            status:\n              $ref: \"#/components/schemas/distribution-request-status-enum\"\n            statusUpdatedAt:\n              type: string\n              format: date-time\n              description: Datetime in UTC, formatted as ISO-8601, when the status of the\n                request last changed.\n            outputMetadata:\n              oneOf:\n                - $ref: \"#/components/schemas/batch-output-metadata\"\n                - $ref: \"#/components/schemas/streaming-output-metadata\"\n            deliveryType:\n              type: string\n              enum:\n                - BATCH\n                - STREAMING\n          required:\n            - createdAt\n            - status\n            - statusUpdatedAt\n            - deliveryType\n    error:\n      type: object\n      title: Error\n      description: Error details, only available if there was an issue in processing this\n        request.\n      properties:\n        httpStatusCode:\n          type: integer\n          description: The HTTP error status code for this problem.\n        message:\n          type: string\n          description: Human readable error message.\n        errorCode:\n          type: string\n          description: Optional, more granular error code for this problem.\n          example: BAD_HEADER_PARAMETER\n      required:\n        - httpStatusCode\n        - message\n    distribution-request-status-enum:\n      type: string\n      title: Distribution Request Status Enum\n      enum:\n        - QUEUED\n        - IN_PROGRESS\n        - COMPLETED\n        - FAILED\n        - CANCELLED\n      description: \"TODO: Work with Greg for description of different statuses. \"\n    input-key-value-format:\n      type: object\n      title: Input Key Value Format\n      properties:\n        key:\n          type: number\n          example: 43132312\n        value:\n          example: \"342\"\n          oneOf:\n            - type: string\n            - type: boolean\n            - type: number\n      required:\n        - key\n    output-segment-id-format:\n      type: object\n      title: Output Segment ID Format\n      required:\n        - destinationSegmentID\n      properties:\n        destinationSegmentID:\n          type: string\n          example: MM1234\n    errors:\n      type: object\n      title: Errors\n      properties:\n        errors:\n          type: array\n          items:\n            $ref: \"#/components/schemas/error\"\n    batch-output-metadata:\n      type: object\n      title: Batch Output Metadata\n      properties:\n        fileDetails:\n          type: array\n          description: Detail of each file sent to the destination.\n          items:\n            type: object\n            properties:\n              fileName:\n                type: string\n                example: a.txt\n              lineCount:\n                type: number\n                example: 5000\n            required:\n              - fileName\n              - lineCount\n        totalOutputSize:\n          type: number\n          description: Total size of the distributed data in bytes.\n          example: 1023214000\n      required:\n        - fileDetails\n        - totalOutputSize\n    streaming-output-metadata:\n      type: object\n      title: Streaming Output Metadata\n      required:\n        - deliveryStartedAt\n        - totalOutputSize\n      properties:\n        deliveryStartedAt:\n          type: string\n          format: date-time\n          description: \"Start time of delivery, in UTC, formatted as ISO-8601. \"\n        totalOutputSize:\n          type: number\n          description: Total size of the distributed data in bytes.\n          example: 1023214000\n    output-key-value-format:\n      type: object\n      title: Output Key Value Format\n      required:\n        - key\n      properties:\n        key:\n          type: string\n          example: PETS\n        value:\n          type: string\n          example: DOGS\n    data-mapping-config:\n      type: object\n      title: Data Mapping Config\n      properties:\n        input:\n          oneOf:\n            - $ref: \"#/components/schemas/input-key-value-format\"\n        output:\n          oneOf:\n            - $ref: \"#/components/schemas/output-key-value-format\"\n            - $ref: \"#/components/schemas/output-segment-id-format\"\n      required:\n        - input\n        - output",
			"canonicalURL": "/github.com/LiveRamp/reslang@dd7ec78983a9ebb438e3ba64e7885256af728d74/-/blob/concepts/distribution-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/LiveRamp/reslang/blob/dd7ec78983a9ebb438e3ba64e7885256af728d74/concepts/distribution-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/distribution-requests/{id}/actions/retry\": post: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}