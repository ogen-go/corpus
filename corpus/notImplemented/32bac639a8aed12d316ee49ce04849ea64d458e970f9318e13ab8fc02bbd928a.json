{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/haroldtreen/epub-press"
		},
		"file": {
			"name": "epub-press.yaml",
			"size": 0,
			"path": "docs/epub-press.yaml",
			"byteSize": 6009,
			"content": "openapi: 3.0.3\ninfo:\n  title: EpubPress - Read the web offline\n  description: \u003e-\n    A browser extension for creating ebooks from your favorite webpages. Build\n    books that are totally custom, offline and compatible with all your devices.\n  version: 1.0.0\nservers:\n  - url: 'http://localhost:3000/api/v1'\n    description: local development server\ntags:\n  - name: diagnostics\n    description: helper endpoints\npaths:\n  /version:\n    get:\n      tags:\n        - diagnostics\n      responses:\n        '200':\n          description: Version information. \n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  version:\n                    type: string\n                  minCompatible:\n                    type: string\n                  message:\n                    type: string\n                  clients:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ClientVersion'\n  /books:\n    post:\n      summary: Create and publish an ebook.\n      description: Create and publish an ebook.\n      tags:\n        - books\n      requestBody:\n        description: Ebook request body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Book'\n      responses:\n        '200':\n          description: Create book response.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id: \n                    description: Book Id.\n                    type: string\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n                \n  /books/:id/status:\n    get:\n      summary: Get the book publishing status.\n      description: Get the book publishing status.\n      tags: \n        - books\n      parameters:\n        - name: id\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The status of the publishing process.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                  progress:\n                    type: number\n                    \n  /books/:id/download:\n    get:\n      summary: Download the book.\n      description: Download the book.\n      tags: \n        - books\n      parameters:\n        - name: id\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The book binary file. \n          content:\n            application/epub+zip:\n              schema:\n                type: string\n                format: binary\n                \n  /books/:id/email:\n    get:\n      summary: Email the book.\n      description: Email the book.\n      tags:\n        - books\n      parameters:\n        - name: id\n          in: query\n          schema:\n            type: string\n        - name: email\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: TODO\n          content:\n             text/html:\n              schema:\n                type: string\n    \n    \ncomponents:\n  schemas:\n    ClientVersion:\n      properties:\n        minCompatible:\n          type: string\n        message:\n          type: string\n    Section:\n      properties:\n        content:\n          description: HTML content of the section.\n          type: string\n        title: \n          description: Plain text title.\n          type: string\n    Error:\n      properties:\n        errors:\n          type: array\n          items:\n            type: object\n            properties:\n              status: \n                type: string\n                description: HTTP Status Code. \n              detail:\n                type: string\n                description: Error description.\n    Book:\n      properties:\n        author:\n          description: Set the author of the book.\n          default: EpubPres\n          type: string\n        coverPath:\n          description: URL link to an imave for the cover of the book. Prefer `800x1280 (width x height)` or a 1:1.6 width:height ratio. Maximum file size is 1MB.\n          type: string\n        description:\n          description: The description of the book.\n          type: string\n          default: Built using https://epub.press\n        genre:\n          description: The genre of the book.\n          type: string\n          default: Unknown\n        language:\n          description: The _short ISO_ language of the book.\n          type: string\n          maxLength: 3\n          minLength: 1\n          default: en\n        published:\n          description: The publish date of the book in YYYY-MM-DD format.\n          default: YYYY (ie- 2020)\n          type: string\n        publisher:\n          description: The publisher of the book.\n          default: https://epub.press\n          type: string\n        sections:\n          description: Collection of sections in the book. Mutually exclusive with urls.\n          type: array\n          items:\n              $ref:   '#/components/schemas/Section'\n          maxItems: 50\n        series:\n          description: The series of the book. This only works for Calibre. It adds `calibre:series` to the metadata of the book.\n          type: string\n        sequence:\n          description: The sequence of of the book series. This only works for Calibre. It adds `calibre:sequence` to the metadata of the book.\n          type: number\n        tags:\n          description: CSV list of tags for the book. Synonymous with subject.\n        urls:\n          description: Collection of urls to transform and add as sections to the book. Mutually exclusive with sections.\n          type: array\n          items:\n            type: string\n            maxItems: 50",
			"canonicalURL": "/github.com/haroldtreen/epub-press@1619cdeea00609c1299d668bf0775d3caaaf90bb/-/blob/docs/epub-press.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/haroldtreen/epub-press/blob/1619cdeea00609c1299d668bf0775d3caaaf90bb/docs/epub-press.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/books/:id/email\": get: responses: 200: contents: unsupported content types: [text/html]",
	"NotImplemented": [
		"unsupported content types"
	]
}