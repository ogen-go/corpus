{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-homegraph-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-homegraph-v1-swagger.yaml",
			"byteSize": 25243,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: HomeGraph\n  version: v1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: google\n      url: https://homegraph.googleapis.com/$discovery/rest?version=v1\n      version: v1\n  x-preferred: true\n  x-providerName: googleapis.com\n  x-serviceName: homegraph\nexternalDocs:\n  url: https://developers.google.com/actions/smarthome/create-app#request-sync\ntags:\n  - name: agentUsers\n  - name: devices\npaths:\n  /v1/devices:query:\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Gets the device states for the devices in QueryRequest.\n\n        The third-party user's identity is passed in as `agent_user_id`. The agent\n\n        is identified by the JWT signed by the third-party partner's service\n\n        account.\n      operationId: homegraph.devices.query\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/QueryRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/QueryResponse\"\n      tags:\n        - devices\n  /v1/devices:reportStateAndNotification:\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Reports device state and optionally sends device notifications. Called\n        by\n\n        an agent when the device state of a third-party changes or the agent wants\n\n        to send a notification about the device. See\n\n        [Implement Report State](/actions/smarthome/report-state) for more\n\n        information.\n\n        This method updates a predefined set of states for a device, which all\n\n        devices have according to their prescribed traits (for example, a light\n\n        will have the [OnOff](/actions/smarthome/traits/onoff) trait that reports\n\n        the state `on` as a boolean value).\n\n        A new state may not be created and an INVALID_ARGUMENT code will be thrown\n\n        if so. It also optionally takes in a list of Notifications that may be\n\n        created, which are associated to this state change.\n\n\n        The third-party user's identity is passed in as `agent_user_id`.\n\n        The agent is identified by the JWT signed by the partner's service account.\n      operationId: homegraph.devices.reportStateAndNotification\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ReportStateAndNotificationRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ReportStateAndNotificationResponse\"\n      tags:\n        - devices\n  /v1/devices:requestSync:\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Requests a `SYNC` call from Google to a 3p partner's home control agent\n        for\n\n        a user.\n\n\n\n        The third-party user's identity is passed in as `agent_user_id`\n\n        (see RequestSyncDevicesRequest) and forwarded back to the agent.\n\n        The agent is identified by the API key or JWT signed by the partner's\n\n        service account.\n      operationId: homegraph.devices.requestSync\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RequestSyncDevicesRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/RequestSyncDevicesResponse\"\n      tags:\n        - devices\n  /v1/devices:sync:\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Gets all the devices associated with the given third-party user.\n\n        The third-party user's identity is passed in as `agent_user_id`. The agent\n\n        is identified by the JWT signed by the third-party partner's service\n\n        account.\n      operationId: homegraph.devices.sync\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SyncRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/SyncResponse\"\n      tags:\n        - devices\n  \"/v1/{agentUserId}\":\n    delete:\n      description: \u003e-\n        Unlinks an agent user from Google. As a result, all data related to this\n\n        user will be deleted.\n\n\n        Here is how the agent user is created in Google:\n\n\n        1.  When a user opens their Google Home App, they can begin linking a 3p\n            partner.\n        2.  User is guided through the OAuth process.\n\n        3.  After entering the 3p credentials, Google gets the 3p OAuth token and\n            uses it to make a Sync call to the 3p partner and gets back all of the\n            user's data, including `agent_user_id` and devices.\n        4.  Google creates the agent user and stores a mapping from the\n            `agent_user_id` -\u003e Google ID mapping. Google also\n            stores all of the user's devices under that Google ID.\n\n        The mapping from `agent_user_id` to Google ID is many to many, since one\n\n        Google user can have multiple 3p accounts, and multiple Google users can\n\n        map to one `agent_user_id` (e.g., a husband and wife share one Nest account\n\n        username/password).\n\n\n        The third-party user's identity is passed in as `agent_user_id`.\n\n        The agent is identified by the JWT signed by the partner's service account.\n\n\n        Note: Special characters (except \"/\") in `agent_user_id` must be\n\n        URL-encoded.\n      operationId: homegraph.agentUsers.delete\n      parameters:\n        - description: Required. Third-party user ID.\n          in: path\n          name: agentUserId\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n        - description: Request ID used for debugging.\n          in: query\n          name: requestId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      tags:\n        - agentUsers\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\nservers:\n  - url: https://homegraph.googleapis.com/\ncomponents:\n  parameters:\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n          - media\n          - proto\n        default: json\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be\n        any arbitrary string assigned to a user, but should not exceed 40\n        characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        type: string\n        enum:\n          - \"1\"\n          - \"2\"\n  schemas:\n    AgentDeviceId:\n      description: Third-party partner's device ID for one device.\n      properties:\n        id:\n          description: Third-party partner's device ID.\n          type: string\n      type: object\n    AgentOtherDeviceId:\n      description: Identifies a device in the third party or first party system.\n      properties:\n        agentId:\n          description: The agent's ID. Generally it is the agent's AoG project id.\n          type: string\n        deviceId:\n          description: Device ID defined by the agent. The device_id must be unique.\n          type: string\n      type: object\n    Device:\n      description: Third-party partner's device definition.\n      properties:\n        attributes:\n          additionalProperties:\n            description: Properties of the object.\n          description: Attributes for the traits supported by the device.\n          type: object\n        customData:\n          description: \u003e-\n            Custom JSON data provided by the manufacturer and attached to QUERY\n            and\n\n            EXECUTE requests in AoG.\n          type: string\n        deviceInfo:\n          $ref: \"#/components/schemas/DeviceInfo\"\n        id:\n          description: Third-party partner's device ID.\n          type: string\n        name:\n          $ref: \"#/components/schemas/DeviceNames\"\n        otherDeviceIds:\n          description: \u003e-\n            IDs of other devices associated with this device. This is used to\n\n            represent a device group (e.g. bonded zone) or \"facets\" synced\n\n            through different flows (e.g. Google Nest Hub Max with a Nest Camera).\n\n\n            This may also be used to pass in alternate IDs used to identify a cloud\n\n            synced device for local execution (i.e. local verification). If used for\n\n            local verification, this field is synced from the cloud.\n          items:\n            $ref: \"#/components/schemas/AgentOtherDeviceId\"\n          type: array\n        roomHint:\n          description: \u003e-\n            If the third-party partner's cloud configuration includes placing\n            devices\n\n            in rooms, the name of the room can be provided here.\n          type: string\n        structureHint:\n          description: As in roomHint, for structures that users set up in the partner's\n            system.\n          type: string\n        traits:\n          description: Traits supported by the device.\n          items:\n            type: string\n          type: array\n        type:\n          description: Hardware type of the device (e.g. light, outlet, etc).\n          type: string\n        willReportState:\n          description: \u003e-\n            Indicates whether the state of this device is being reported to\n            Google\n\n            through ReportStateAndNotification call.\n          type: boolean\n      type: object\n    DeviceInfo:\n      description: Device information.\n      properties:\n        hwVersion:\n          description: Device hardware version.\n          type: string\n        manufacturer:\n          description: Device manufacturer.\n          type: string\n        model:\n          description: Device model.\n          type: string\n        swVersion:\n          description: Device software version.\n          type: string\n      type: object\n    DeviceNames:\n      description: Different names for the device.\n      properties:\n        defaultNames:\n          description: |-\n            List of names provided by the partner rather than the user, often\n            manufacturer names, SKUs, etc.\n          items:\n            type: string\n          type: array\n        name:\n          description: Primary name of the device, generally provided by the user.\n          type: string\n        nicknames:\n          description: Additional names provided by the user for the device.\n          items:\n            type: string\n          type: array\n      type: object\n    Empty:\n      description: \u003e-\n        A generic empty message that you can re-use to avoid defining duplicated\n\n        empty messages in your APIs. A typical example is to use it as the request\n\n        or the response type of an API method. For instance:\n\n            service Foo {\n              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n            }\n\n        The JSON representation for `Empty` is empty JSON object `{}`.\n      properties: {}\n      type: object\n    QueryRequest:\n      description: \u003e-\n        Request type for the\n\n        [`Query`](#google.home.graph.v1.HomeGraphApiService.Query) call. This should\n\n        be the same format as the Actions on Google `action.devices.QUERY`\n\n        [request](/actions/smarthome/create-app#actiondevicesquery) with the\n\n        exception of the extra `agent_user_id` and no `intent` and `customData`\n\n        fields.\n      properties:\n        agentUserId:\n          description: Required. Third-party user ID.\n          type: string\n        inputs:\n          description: \u003e-\n            Required. Inputs containing third-party partner's device IDs for\n            which to\n\n            get the device states.\n          items:\n            $ref: \"#/components/schemas/QueryRequestInput\"\n          type: array\n        requestId:\n          description: Request ID used for debugging.\n          type: string\n      type: object\n    QueryRequestInput:\n      description: Device ID inputs to QueryRequest.\n      properties:\n        payload:\n          $ref: \"#/components/schemas/QueryRequestPayload\"\n      type: object\n    QueryRequestPayload:\n      description: Payload containing device IDs.\n      properties:\n        devices:\n          description: Third-party partner's device IDs for which to get the device states.\n          items:\n            $ref: \"#/components/schemas/AgentDeviceId\"\n          type: array\n      type: object\n    QueryResponse:\n      description: \u003e-\n        Response type for the\n\n        [`Query`](#google.home.graph.v1.HomeGraphApiService.Query) call. This should\n\n        follow the same format as the Actions on Google `action.devices.QUERY`\n\n        [response](/actions/smarthome/create-app#actiondevicesquery).\n\n        # Example\n\n\n        ```json\n\n        {\n          \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\",\n          \"payload\": {\n            \"devices\": {\n              \"123\": {\n                \"on\": true,\n                \"online\": true\n              },\n              \"456\": {\n                \"on\": true,\n                \"online\": true,\n                \"brightness\": 80,\n                \"color\": {\n                  \"name\": \"cerulean\",\n                  \"spectrumRGB\": 31655\n                }\n              }\n            }\n          }\n        }\n\n        ```\n      properties:\n        payload:\n          $ref: \"#/components/schemas/QueryResponsePayload\"\n        requestId:\n          description: Request ID used for debugging. Copied from the request.\n          type: string\n      type: object\n    QueryResponsePayload:\n      description: Payload containing device states information.\n      properties:\n        devices:\n          additionalProperties:\n            additionalProperties:\n              description: Properties of the object.\n            type: object\n          description: \u003e-\n            States of the devices. Map of third-party device ID to struct of\n            device\n\n            states.\n          type: object\n      type: object\n    ReportStateAndNotificationDevice:\n      description: The states and notifications specific to a device.\n      properties:\n        notifications:\n          additionalProperties:\n            description: Properties of the object.\n          description: Notifications metadata for devices.\n          type: object\n        states:\n          additionalProperties:\n            description: Properties of the object.\n          description: States of devices to update.\n          type: object\n      type: object\n    ReportStateAndNotificationRequest:\n      description: \u003e-\n        Request type for the\n\n        [`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification)\n\n        call. It may include States, Notifications, or both. This request uses\n\n        globally unique flattened state names instead of namespaces based on traits\n\n        to align with the existing QUERY and EXECUTE APIs implemented by 90+ Smart\n\n        Home partners. States and notifications are defined per `device_id` (for example, \"123\"\n\n        and \"456\" in the following example). # Example\n\n        ```json\n\n        {\n          \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\",\n          \"agentUserId\": \"1234\",\n          \"payload\": {\n            \"devices\": {\n              \"states\": {\n                \"123\": {\n                  \"on\": true\n                },\n                \"456\": {\n                  \"on\": true,\n                  \"brightness\": 10\n                }\n              },\n            }\n          }\n        }\n\n        ```\n      properties:\n        agentUserId:\n          description: Required. Third-party user ID.\n          type: string\n        eventId:\n          description: Unique identifier per event (for example, a doorbell press).\n          type: string\n        followUpToken:\n          description: Token to maintain state in the follow up notification response.\n          type: string\n        payload:\n          $ref: \"#/components/schemas/StateAndNotificationPayload\"\n        requestId:\n          description: Request ID used for debugging.\n          type: string\n      type: object\n    ReportStateAndNotificationResponse:\n      description: \u003e-\n        Response type for the\n\n        [`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification)\n\n        call.\n      properties:\n        requestId:\n          description: Request ID copied from ReportStateAndNotificationRequest.\n          type: string\n      type: object\n    RequestSyncDevicesRequest:\n      description: \u003e-\n        Request type for the\n\n        [`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices)\n\n        call.\n      properties:\n        agentUserId:\n          description: |-\n            Required. Third-party user ID issued by agent's third-party identity\n            provider.\n          type: string\n        async:\n          description: \u003e-\n            Optional. If set, the request will be added to a queue and a\n            response will\n\n            be returned immediately. The queue allows for de-duplication of\n\n            simultaneous requests.\n          type: boolean\n      type: object\n    RequestSyncDevicesResponse:\n      description: \u003e-\n        Response type for the\n\n        [`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices)\n\n        call. Intentionally empty upon success. An HTTP response code is returned\n\n        with more details upon failure.\n      properties: {}\n      type: object\n    StateAndNotificationPayload:\n      description: Payload containing the state and notification information for devices.\n      properties:\n        devices:\n          $ref: \"#/components/schemas/ReportStateAndNotificationDevice\"\n      type: object\n    SyncRequest:\n      description: \u003e-\n        Request type for the\n        [`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync)\n\n        call. This should follow the same format as the Actions on Google\n\n        `action.devices.SYNC`\n\n        [request](/actions/smarthome/create-app#actiondevicessync) with the exception\n\n        of the extra `agent_user_id` and no `intent` field.\n      properties:\n        agentUserId:\n          description: Required. Third-party user ID.\n          type: string\n        requestId:\n          description: Request ID used for debugging.\n          type: string\n      type: object\n    SyncResponse:\n      description: \u003e-\n        Response type for the\n\n        [`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync) call. This should\n\n        follow the same format as the Actions on Google `action.devices.SYNC`\n\n        [response](/actions/smarthome/create-app#actiondevicessync).\n\n        # Example\n\n\n        ```json\n\n        {\n          \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\",\n          \"payload\": {\n            \"agentUserId\": \"1836.15267389\",\n            \"devices\": [{\n              \"id\": \"123\",\n              \"type\": \"action.devices.types.OUTLET\",\n              \"traits\": [\n                \"action.devices.traits.OnOff\"\n              ],\n              \"name\": {\n                \"defaultNames\": [\"My Outlet 1234\"],\n                \"name\": \"Night light\",\n                \"nicknames\": [\"wall plug\"]\n              },\n              \"willReportState\": false,\n              \"deviceInfo\": {\n                \"manufacturer\": \"lights-out-inc\",\n                \"model\": \"hs1234\",\n                \"hwVersion\": \"3.2\",\n                \"swVersion\": \"11.4\"\n              },\n              \"customData\": {\n                \"fooValue\": 74,\n                \"barValue\": true,\n                \"bazValue\": \"foo\"\n              }\n            }]\n          }\n        }\n\n        ```\n      properties:\n        payload:\n          $ref: \"#/components/schemas/SyncResponsePayload\"\n        requestId:\n          description: Request ID used for debugging. Copied from the request.\n          type: string\n      type: object\n    SyncResponsePayload:\n      description: Payload containing device information.\n      properties:\n        agentUserId:\n          description: Third-party user ID\n          type: string\n        devices:\n          description: Devices associated with the third-party user.\n          items:\n            $ref: \"#/components/schemas/Device\"\n          type: array\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-homegraph-v1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-homegraph-v1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/{agentUserId}\": delete: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}