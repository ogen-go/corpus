{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nasa/harmony"
		},
		"file": {
			"name": "service-callbacks-v0.1.0.yml",
			"size": 0,
			"path": "app/schemas/service-callbacks/0.1.0/service-callbacks-v0.1.0.yml",
			"byteSize": 12203,
			"content": "openapi: 3.0.3\ninfo:\n  title: Callback API for Harmony backend services\n  description: Describes the parameters necessary to call back to Harmony and their constraints\n  version: 0.1.0\n  contact:\n    name: Harmony API Support\n    url: https://bugs.earthdata.nasa.gov/browse/HARMONY\n    email: support@earthdata.nasa.gov  # Avoid email.  For best response, reach out in Slack or file a JIRA issue\n    x-eosdis-slack-channel: '#harmony'\nservers:\n- url: /{callback-id}\n  description: Harmony callback root\n  variables:\n    callback-id:\n      default: no-default-uuid\n      description: An opaque callback ID provided by the Harmony message\ntags:\n- name: Response\n  description: Response callback\npaths:\n  /response:\n    post:\n      tags:\n      - Response\n      summary: The primary (only) callback endpoint\n      description: All communication from backend service to Harmony is sent on this endpoint, including\n        indciation of errors, partial results, full results, and progress\n      operationId: response\n      parameters:\n        # Common parameters between sync and async requests\n        - name: error\n          in: query\n          description:\n            Valid in both synchronous and asynchronous service requests.\n\n            Passing this parameter indicates that an error has occurred in performing the service with a\n            user-facing message as the value of the parameter.  Internal error diagnostics should be logged\n            to STDOUT or STDERR.  The logger provided by the Harmony Python library will provide a common\n            format if used.\n\n            Once a service calls back with this parameter, no further callbacks will be accepted.\n\n            For synchronous requests, Harmony returns the message to the user in an appropriate format for\n            the request with an HTTP 400 response.  For asynchronous requests, Harmony marks the request\n            as failed and places the error message in a user-accessible field.  Harmony maintains user access\n            to any prior partial results sent by the service as well as the progress percentage of the request\n          example:\n            - error=\n          required: false\n          style: form\n          explode: false\n          schema:\n            type: string\n\n        # Parameters for responding to synchronous requests\n        - name: redirect\n          description:\n            Valid in synchronous service requests only. Deprecated support for asynchronous requests.\n\n            Indicates that the service request has completed successfully and the user can retrieve the response\n            at the URL value of this parameter.  The URL can either be an HTTPS URL or a URL to an S3 staging\n            location to a bucket and key where Harmony has permission to sign GetObject requests.  If it is an\n            HTTPS URL, Harmony will redirect the user to its location.  If it is an S3 staging location, Harmony\n            will pre-sign a URL that can be used for a subsequent GetObject request.  Staged S3 objects should\n            have the correct \"Content-Type\" tag set.  The Harmony Python library does this automatically when using\n            the \"completed_with_redirect\" helper method.  Harmony provides services with a preferred staging prefix\n            with each request of the form \"s3://\u003cstaging-bucket\u003e/public/\u003corg-name\u003e/\u003cservice-name\u003e/\u003cuuid\u003e/\", which\n            services should use whenever possible to maintain appropriate ACLs and user-facing utilities.\n\n            Harmony prefers to use S3 locations as it can cache subsequent requests and control retention.\n          example:\n            - redirect=s3://example-staging-bucket/public/my-daac/my-service/11111111-2222-3333-4444-555555555555/output.tif\n            - redirect=https://my-daac.example.com//output.tif\n          in: query\n          required: false\n          style: form\n          explode: false\n          schema:\n            type: string\n            format: uri\n\n        # Parameters for responding to asynchronous requests\n        - name: status\n          description:\n            Valid for asynchronous service requests only.  Ignored for synchronous requests.\n\n            Updates the status of the request.  Harmony maintains all status transitions up to \"successful\", which is\n            the only value services should provide here.  status=successful indicates the service request completed.\n            Once Harmony receives this final status, it de-registers the service callback and any subsequent attempts\n            to call back will fail.\n          example:\n            - status=successful\n          in: query\n          required: false\n          style: form\n          explode: false\n          schema:\n            type: string\n            enum: [ successful ]\n\n        - name: progress\n          description:\n            Valid for asynchronous service requests only.  Ignored for synchronous requests.\n\n            Indicates an approximate percentage progress through the overall request, as a percentage.  Harmony\n            automatically starts this value at 0 and sets it to 100 for a successful response.  Services should\n            only use this parameter to provide intermediate feedback to users.\n          in: query\n          required: false\n          style: form\n          explode: false\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 100\n\n        - name: item\n          description:\n            Valid for asynchronous service requests only.  Ignored for synchronous requests.\n\n            Provides a single output for an asynchronous service call.  Depending on the call and service, this may\n            be the only output or one of several.  See the example for syntax on providing this as a query parameter.\n\n            Services must provide, at a minimum, the href, type, bbox, and temporal properties for each item.  This\n            list of required fields is likely to be expanded at a future date to include additinal provenance tracking\n            and metadata.  As we add more required fields, they will be marked required here but Harmony will provide\n            graceful degradation for services not yet upgraded.  For example, Harmony allows services to not provide\n            bbox or temporal fields, but this is deprecated behavior and will result in outputs from those services not\n            producing STAC catalogs.\n          example:\n            - item[href]=s3://some-location/myfile.nc\u0026item[type]='application/x-netcdf4'\u0026item[temporal]=2020-01-01T00:00:00Z,2020-01-01T00:00:00Z\u0026item[bbox]=-100,-70,100,70\n          in: query\n          required: false\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            properties:\n              href:\n                type: string\n                description:\n                  A URL where the data can be located. This URL can either be an HTTPS URL or a URL to an S3 staging\n                  location to a bucket and key where Harmony has permission to sign GetObject requests.  If it is an\n                  HTTPS URL, Harmony will redirect the user to its location.  If it is an S3 staging location, Harmony\n                  will pre-sign a URL that can be used for a subsequent GetObject request.  Staged S3 objects should\n                  have the correct \"Content-Type\" tag set.  The Harmony Python library does this automatically when using\n                  the \"completed_with_redirect\" helper method.  Harmony provides services with a preferred staging prefix\n                  with each request of the form \"s3://\u003cstaging-bucket\u003e/public/\u003corg-name\u003e/\u003cservice-name\u003e/\u003cuuid\u003e/\", which\n                  services should use whenever possible to maintain appropriate ACLs and user-facing utilities.\n\n                  Harmony prefers to use S3 locations as it can cache subsequent requests and control retention.\n                format: uri\n              type:\n                type: string\n                description:\n                  The media type of the data contained at the href property's URL\n                format: media-type\n                example:\n                  - image/tiff;subtype=geotiff\n                  - application/x-netcdf4\n                  - application/x-zarr\n              title:\n                type: string\n                description:\n                  A short human-readable name indicating the contents of the file.  Optional.  Consider setting this to\n                  the basename of the file, as is the default when using the Harmony Python library.\n              temporal:\n                type: string\n                description:\n                  Two RFC-3339 date/time strings (with optional fractional seconds) separated by a comma indicating the start and\n                  end time of the data in the result item. Harmony provides a \"temporal\" field with each input granule in the input\n                  message which has \"start\" and \"end\" fields containing an RFC-3339 date/time for the granule temporal range to aid\n                  in producing this output.\n                example:\n                  - 2020-01-01T00:00:00.000Z,2020-01-02T12:00:00.000Z\n              bbox:\n                type: string\n                description:\n                  Four comma-separated numbers corresponding to the [West, South, East, North] minimum bounding rectangle of the resulting\n                  file.  Harmony provides a \"bbox\" field with each input granule in the input message for aid in producing the output.\n                  Set the East coordinate lower than the West coordinate to indicate a bounding box that crosses the antimeridian.\n            required:\n              - href\n              - type\n              - temporal\n              - bbox\n      requestBody:\n        description:\n          Valid in synchronous service requests only.\n\n          Contains bytes to be streamed directly to the user as a result of the service output.  This marks the request complete and\n          deregisters its callback, causing any further callbacks to produce an error.  Services should set appropriate \"Content-Type\"\n          and \"Content-Length\" headers according to the file contents.\n        required: false\n        content:\n          default:\n            schema:\n              description: The data bytes to be streamed to the user, verbatim, as a result of the service call.\n\n      responses:\n        \"200\":\n          description: links to the API capabilities\n          content:\n            application/json:\n              schema:\n                type: string\n                description: The string literal \"Ok\".  Indicates the callback was processed successfully\n\n        \"400\":\n          description:\n            Indicates that the request was incorrect, for example due to a parameter being out of the acceptable\n            range or an invalid combination of parameters being provided.  The message field in the response provides\n            additional details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n\n        \"404\":\n          description:\n            Indicates that there is no callback available at the given URL.  If Harmony provided the URL in the first\n            place, the most likely cause of this is that you have already called back in a way that indicates your\n            service has completed, either with an error, a callback, or a status=complete parameter\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n\n        \"500\":\n          description:\n            Indicates an unexpected error in accepting the response.  Contact the Harmony team or file a bug to help\n            resolve it.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n\ncomponents:\n  schemas:\n    error:\n      required:\n        - code\n        - message\n      type: object\n      properties:\n        code:\n          type: integer\n          description: The error code (400)\n        message:\n          type: string\n          description: The error message",
			"canonicalURL": "/github.com/nasa/harmony@6738bff4cc1cc19ef16eed7f1121c6e825ff6ce8/-/blob/app/schemas/service-callbacks/0.1.0/service-callbacks-v0.1.0.yml",
			"externalURLs": [
				{
					"url": "https://github.com/nasa/harmony/blob/6738bff4cc1cc19ef16eed7f1121c6e825ff6ce8/app/schemas/service-callbacks/0.1.0/service-callbacks-v0.1.0.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/response\": post: requestBody: contents: unsupported content types: [default]",
	"NotImplemented": [
		"unsupported content types"
	]
}