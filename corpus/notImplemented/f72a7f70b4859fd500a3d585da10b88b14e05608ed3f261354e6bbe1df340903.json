{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/godaddy.domains/openapi.yml",
			"byteSize": 227241,
			"content": "openapi: 3.0.1\nservers:\n  - url: https://api.ote-godaddy.com/\ninfo:\n  x-ballerina-display:\n    label: GoDaddy Domains\n    iconPath: \"icon.png\"\n  version: v1\n  title: Godaddy Domains API\n  description: \u003e-\n    This is a generated connector for [GoDaddy Domains API\n    v1](https://developer.godaddy.com/doc/endpoint/domains) OpenAPI\n    specification. The GoDaddy Domains API provides capability to access GoDaddy\n    operations related to domains.\n  x-ballerina-init-description: \u003e-\n    The connector initialization requires setting the API credentials.  Create a\n    [GoDaddy](https://sg.godaddy.com/) and obtain tokens by following [this\n    guide](https://developer.godaddy.com/getstarted).  \ntags:\n  - name: v1\n    description: ''\n  - name: v2\n    description: ''\npaths:\n  /v1/domains:\n    get:\n      tags:\n        - v1\n      summary: Retrieve a list of Domains for the specified Shopper\n      operationId: listDomains\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: Shopper ID whose domains are to be retrieved\n          schema:\n            type: string\n        - name: statuses\n          in: query\n          description: Only include results with `status` value in the specified set\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ACTIVE\n                - AWAITING_CLAIM_ACK\n                - AWAITING_DOCUMENT_AFTER_TRANSFER\n                - AWAITING_DOCUMENT_AFTER_UPDATE_ACCOUNT\n                - AWAITING_DOCUMENT_UPLOAD\n                - AWAITING_FAILED_TRANSFER_WHOIS_PRIVACY\n                - AWAITING_PAYMENT\n                - AWAITING_RENEWAL_TRANSFER_IN_COMPLETE\n                - AWAITING_TRANSFER_IN_ACK\n                - AWAITING_TRANSFER_IN_AUTH\n                - AWAITING_TRANSFER_IN_AUTO\n                - AWAITING_TRANSFER_IN_WHOIS\n                - AWAITING_TRANSFER_IN_WHOIS_FIX\n                - AWAITING_VERIFICATION_ICANN\n                - AWAITING_VERIFICATION_ICANN_MANUAL\n                - CANCELLED\n                - CANCELLED_HELD\n                - CANCELLED_REDEEMABLE\n                - CANCELLED_TRANSFER\n                - CONFISCATED\n                - DISABLED_SPECIAL\n                - EXCLUDED_INVALID_CLAIM_FIREHOSE\n                - EXPIRED_REASSIGNED\n                - FAILED_BACKORDER_CAPTURE\n                - FAILED_DROP_IMMEDIATE_THEN_ADD\n                - FAILED_PRE_REGISTRATION\n                - FAILED_REDEMPTION\n                - FAILED_REDEMPTION_REPORT\n                - FAILED_REGISTRATION\n                - FAILED_REGISTRATION_FIREHOSE\n                - FAILED_RESTORATION_REDEMPTION_MOCK\n                - FAILED_SETUP\n                - FAILED_TRANSFER_IN\n                - FAILED_TRANSFER_IN_BAD_STATUS\n                - FAILED_TRANSFER_IN_REGISTRY\n                - HELD_COURT_ORDERED\n                - HELD_DISPUTED\n                - HELD_EXPIRATION_PROTECTION\n                - HELD_EXPIRED_REDEMPTION_MOCK\n                - HELD_REGISTRAR_ADD\n                - HELD_REGISTRAR_REMOVE\n                - HELD_SHOPPER\n                - HELD_TEMPORARY\n                - LOCKED_ABUSE\n                - LOCKED_COPYRIGHT\n                - LOCKED_REGISTRY\n                - LOCKED_SUPER\n                - PARKED_AND_HELD\n                - PARKED_EXPIRED\n                - PARKED_VERIFICATION_ICANN\n                - PENDING_ABORT_CANCEL_SETUP\n                - PENDING_AGREEMENT_PRE_REGISTRATION\n                - PENDING_APPLY_RENEWAL_CREDITS\n                - PENDING_BACKORDER_CAPTURE\n                - PENDING_BLOCKED_REGISTRY\n                - PENDING_CANCEL_REGISTRANT_PROFILE\n                - PENDING_COMPLETE_REDEMPTION_WITHOUT_RECEIPT\n                - PENDING_COMPLETE_REGISTRANT_PROFILE\n                - PENDING_COO\n                - PENDING_COO_COMPLETE\n                - PENDING_DNS\n                - PENDING_DNS_ACTIVE\n                - PENDING_DNS_INACTIVE\n                - PENDING_DOCUMENT_VALIDATION\n                - PENDING_DOCUMENT_VERIFICATION\n                - PENDING_DROP_IMMEDIATE\n                - PENDING_DROP_IMMEDIATE_THEN_ADD\n                - PENDING_EPP_CREATE\n                - PENDING_EPP_DELETE\n                - PENDING_EPP_UPDATE\n                - PENDING_ESCALATION_REGISTRY\n                - PENDING_EXPIRATION\n                - PENDING_EXPIRATION_RESPONSE\n                - PENDING_EXPIRATION_SYNC\n                - PENDING_EXPIRED_REASSIGNMENT\n                - PENDING_EXPIRE_AUTO_ADD\n                - PENDING_EXTEND_REGISTRANT_PROFILE\n                - PENDING_FAILED_COO\n                - PENDING_FAILED_EPP_CREATE\n                - PENDING_FAILED_HELD\n                - PENDING_FAILED_PURCHASE_PREMIUM\n                - PENDING_FAILED_RECONCILE_FIREHOSE\n                - PENDING_FAILED_REDEMPTION_WITHOUT_RECEIPT\n                - PENDING_FAILED_RELEASE_PREMIUM\n                - PENDING_FAILED_RENEW_EXPIRATION_PROTECTION\n                - PENDING_FAILED_RESERVE_PREMIUM\n                - PENDING_FAILED_SUBMIT_FIREHOSE\n                - PENDING_FAILED_TRANSFER_ACK_PREMIUM\n                - PENDING_FAILED_TRANSFER_IN_ACK_PREMIUM\n                - PENDING_FAILED_TRANSFER_IN_PREMIUM\n                - PENDING_FAILED_TRANSFER_PREMIUM\n                - PENDING_FAILED_TRANSFER_SUBMIT_PREMIUM\n                - PENDING_FAILED_UNLOCK_PREMIUM\n                - PENDING_FAILED_UPDATE_API\n                - PENDING_FRAUD_VERIFICATION\n                - PENDING_FRAUD_VERIFIED\n                - PENDING_GET_CONTACTS\n                - PENDING_GET_HOSTS\n                - PENDING_GET_NAME_SERVERS\n                - PENDING_GET_STATUS\n                - PENDING_HOLD_ESCROW\n                - PENDING_HOLD_REDEMPTION\n                - PENDING_LOCK_CLIENT_REMOVE\n                - PENDING_LOCK_DATA_QUALITY\n                - PENDING_LOCK_THEN_HOLD_REDEMPTION\n                - PENDING_PARKING_DETERMINATION\n                - PENDING_PARK_INVALID_WHOIS\n                - PENDING_PARK_INVALID_WHOIS_REMOVAL\n                - PENDING_PURCHASE_PREMIUM\n                - PENDING_RECONCILE\n                - PENDING_RECONCILE_FIREHOSE\n                - PENDING_REDEMPTION\n                - PENDING_REDEMPTION_REPORT\n                - PENDING_REDEMPTION_REPORT_COMPLETE\n                - PENDING_REDEMPTION_REPORT_SUBMITTED\n                - PENDING_REDEMPTION_WITHOUT_RECEIPT\n                - PENDING_REDEMPTION_WITHOUT_RECEIPT_MOCK\n                - PENDING_RELEASE_PREMIUM\n                - PENDING_REMOVAL\n                - PENDING_REMOVAL_HELD\n                - PENDING_REMOVAL_PARKED\n                - PENDING_REMOVAL_UNPARK\n                - PENDING_RENEWAL\n                - PENDING_RENEW_EXPIRATION_PROTECTION\n                - PENDING_RENEW_INFINITE\n                - PENDING_RENEW_LOCKED\n                - PENDING_RENEW_WITHOUT_RECEIPT\n                - PENDING_REPORT_REDEMPTION_WITHOUT_RECEIPT\n                - PENDING_RESERVE_PREMIUM\n                - PENDING_RESET_VERIFICATION_ICANN\n                - PENDING_RESPONSE_FIREHOSE\n                - PENDING_RESTORATION\n                - PENDING_RESTORATION_INACTIVE\n                - PENDING_RESTORATION_REDEMPTION_MOCK\n                - PENDING_RETRY_EPP_CREATE\n                - PENDING_RETRY_HELD\n                - PENDING_SEND_AUTH_CODE\n                - PENDING_SETUP\n                - PENDING_SETUP_ABANDON\n                - PENDING_SETUP_AGREEMENT_LANDRUSH\n                - PENDING_SETUP_AGREEMENT_SUNRISE2_A\n                - PENDING_SETUP_AGREEMENT_SUNRISE2_B\n                - PENDING_SETUP_AGREEMENT_SUNRISE2_C\n                - PENDING_SETUP_AUTH\n                - PENDING_SETUP_DNS\n                - PENDING_SETUP_FAILED\n                - PENDING_SETUP_REVIEW\n                - PENDING_SETUP_SUNRISE\n                - PENDING_SETUP_SUNRISE_PRE\n                - PENDING_SETUP_SUNRISE_RESPONSE\n                - PENDING_SUBMIT_FAILURE\n                - PENDING_SUBMIT_FIREHOSE\n                - PENDING_SUBMIT_HOLD_FIREHOSE\n                - PENDING_SUBMIT_HOLD_LANDRUSH\n                - PENDING_SUBMIT_HOLD_SUNRISE\n                - PENDING_SUBMIT_LANDRUSH\n                - PENDING_SUBMIT_RESPONSE_FIREHOSE\n                - PENDING_SUBMIT_RESPONSE_LANDRUSH\n                - PENDING_SUBMIT_RESPONSE_SUNRISE\n                - PENDING_SUBMIT_SUCCESS_FIREHOSE\n                - PENDING_SUBMIT_SUCCESS_LANDRUSH\n                - PENDING_SUBMIT_SUCCESS_SUNRISE\n                - PENDING_SUBMIT_SUNRISE\n                - PENDING_SUBMIT_WAITING_LANDRUSH\n                - PENDING_SUCCESS_PRE_REGISTRATION\n                - PENDING_SUSPENDED_DATA_QUALITY\n                - PENDING_TRANSFER_ACK_PREMIUM\n                - PENDING_TRANSFER_IN\n                - PENDING_TRANSFER_IN_ACK\n                - PENDING_TRANSFER_IN_ACK_PREMIUM\n                - PENDING_TRANSFER_IN_BAD_REGISTRANT\n                - PENDING_TRANSFER_IN_CANCEL\n                - PENDING_TRANSFER_IN_CANCEL_REGISTRY\n                - PENDING_TRANSFER_IN_COMPLETE_ACK\n                - PENDING_TRANSFER_IN_DELETE\n                - PENDING_TRANSFER_IN_LOCK\n                - PENDING_TRANSFER_IN_NACK\n                - PENDING_TRANSFER_IN_NOTIFICATION\n                - PENDING_TRANSFER_IN_PREMIUM\n                - PENDING_TRANSFER_IN_RELEASE\n                - PENDING_TRANSFER_IN_RESPONSE\n                - PENDING_TRANSFER_IN_UNDERAGE\n                - PENDING_TRANSFER_OUT\n                - PENDING_TRANSFER_OUT_ACK\n                - PENDING_TRANSFER_OUT_NACK\n                - PENDING_TRANSFER_OUT_PREMIUM\n                - PENDING_TRANSFER_OUT_UNDERAGE\n                - PENDING_TRANSFER_OUT_VALIDATION\n                - PENDING_TRANSFER_PREMIUM\n                - PENDING_TRANSFER_PREMUIM\n                - PENDING_TRANSFER_SUBMIT_PREMIUM\n                - PENDING_UNLOCK_DATA_QUALITY\n                - PENDING_UNLOCK_PREMIUM\n                - PENDING_UPDATE\n                - PENDING_UPDATED_REGISTRANT_DATA_QUALITY\n                - PENDING_UPDATE_ACCOUNT\n                - PENDING_UPDATE_API\n                - PENDING_UPDATE_API_RESPONSE\n                - PENDING_UPDATE_AUTH\n                - PENDING_UPDATE_CONTACTS\n                - PENDING_UPDATE_CONTACTS_PRIVACY\n                - PENDING_UPDATE_DNS\n                - PENDING_UPDATE_DNS_SECURITY\n                - PENDING_UPDATE_ELIGIBILITY\n                - PENDING_UPDATE_EPP_CONTACTS\n                - PENDING_UPDATE_MEMBERSHIP\n                - PENDING_UPDATE_OWNERSHIP\n                - PENDING_UPDATE_OWNERSHIP_AUTH_AUCTION\n                - PENDING_UPDATE_OWNERSHIP_HELD\n                - PENDING_UPDATE_REGISTRANT\n                - PENDING_UPDATE_REPO\n                - PENDING_VALIDATION_DATA_QUALITY\n                - PENDING_VERIFICATION_FRAUD\n                - PENDING_VERIFICATION_STATUS\n                - PENDING_VERIFY_REGISTRANT_DATA_QUALITY\n                - RESERVED\n                - RESERVED_PREMIUM\n                - REVERTED\n                - SUSPENDED_VERIFICATION_ICANN\n                - TRANSFERRED_OUT\n                - UNLOCKED_ABUSE\n                - UNLOCKED_SUPER\n                - UNPARKED_AND_UNHELD\n                - UPDATED_OWNERSHIP\n                - UPDATED_OWNERSHIP_HELD\n        - name: statusGroups\n          in: query\n          description: \u003e-\n            Only include results with `status` value in any of the specified\n            groups\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - INACTIVE\n                - PRE_REGISTRATION\n                - REDEMPTION\n                - RENEWABLE\n                - VERIFICATION_ICANN\n                - VISIBLE\n        - name: limit\n          in: query\n          description: Maximum number of domains to return\n          schema:\n            maximum: 1000\n            minimum: 1\n            type: integer\n        - name: marker\n          in: query\n          description: Marker Domain to use as the offset in results\n          schema:\n            type: string\n        - name: includes\n          in: query\n          description: Optional details to be included in the response\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - authCode\n                - contacts\n                - nameServers\n        - name: modifiedDate\n          in: query\n          description: \u003e-\n            Only include results that have been modified since the specified\n            date\n          schema:\n            type: string\n            format: iso-datetime\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DomainSummary'\n            application/javascript:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DomainSummary'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DomainSummary'\n            text/javascript:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DomainSummary'\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DomainSummary'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Limit must have a value no greater than 1000\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v1/domains/agreements:\n    get:\n      tags:\n        - v1\n      summary: \u003e-\n        Retrieve the legal agreement(s) required to purchase the specified TLD\n        and add-ons\n      operationId: getAgreement\n      parameters:\n        - name: X-Market-Id\n          in: header\n          description: \u003e-\n            Unique identifier of the Market used to retrieve/translate Legal\n            Agreements\n          schema:\n            type: string\n            format: bcp-47\n            default: en-US\n        - name: tlds\n          in: query\n          description: list of TLDs whose legal agreements are to be retrieved\n          required: true\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: privacy\n          in: query\n          description: Whether or not privacy has been requested\n          required: true\n          schema:\n            type: boolean\n        - name: forTransfer\n          in: query\n          description: Whether or not domain tranfer has been requested\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LegalAgreement'\n            application/javascript:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LegalAgreement'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LegalAgreement'\n            text/javascript:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LegalAgreement'\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LegalAgreement'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v1/domains/available:\n    get:\n      tags:\n        - v1\n      summary: Determine whether or not the specified domain is available for purchase\n      operationId: getDomainAvailability\n      parameters:\n        - name: domain\n          in: query\n          description: Domain name whose availability is to be checked\n          required: true\n          schema:\n            type: string\n        - name: checkType\n          in: query\n          description: Optimize for time ('FAST') or accuracy ('FULL')\n          schema:\n            type: string\n            default: FAST\n            enum:\n              - FAST\n              - FULL\n              - fast\n              - full\n        - name: forTransfer\n          in: query\n          description: \u003e-\n            Whether or not to include domains available for transfer. If set to\n            True, checkType is ignored\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainAvailableResponse'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainAvailableResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DomainAvailableResponse'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainAvailableResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DomainAvailableResponse'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: \u003e-\n            Cannot convert domain label error\u003cbr\u003eDomain is missing IDN\n            script\u003cbr\u003eDomain segment ends with dash\u003cbr\u003eDomain starts with\n            dashbr\u003eDomain uses unsupported IDN script\u003cbr\u003eFQDN fails generic\n            validity regex\u003cbr\u003eInvalid character(s) error\u003cbr\u003eInvalid tld\n            error\u003cbr\u003eNon-IDN domain name must not have dashes at the third and\n            fourth position\u003cbr\u003eReserved name error\u003cbr\u003edomain must be specified\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n        - v1\n      summary: \u003e-\n        Determine whether or not the specified domains are available for\n        purchase\n      operationId: getDomainsAvailabilityBulk\n      parameters:\n        - name: checkType\n          in: query\n          description: Optimize for time ('FAST') or accuracy ('FULL')\n          schema:\n            type: string\n            default: FAST\n            enum:\n              - FAST\n              - FULL\n              - fast\n              - full\n      requestBody:\n        description: Domain names for which to check availability\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n          application/xml:\n            schema:\n              type: array\n              items:\n                type: string\n          text/xml:\n            schema:\n              type: array\n              items:\n                type: string\n        required: true\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainAvailableBulk'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainAvailableBulk'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DomainAvailableBulk'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainAvailableBulk'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DomainAvailableBulk'\n        '203':\n          description: Request was partially successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainAvailableBulkMixed'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainAvailableBulkMixed'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DomainAvailableBulkMixed'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainAvailableBulkMixed'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DomainAvailableBulkMixed'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: \u003e-\n            Cannot convert domain label error\u003cbr\u003eDomain is missing IDN\n            script\u003cbr\u003eDomain segment ends with dash\u003cbr\u003eDomain starts with\n            dash\u003cbr\u003eDomain uses unsupported IDN script\u003cbr\u003eFQDN fails generic\n            validity regex\u003cbr\u003eInvalid character(s) error\u003cbr\u003eInvalid tld\n            error\u003cbr\u003eNon-IDN domain name must not have dashes at the third and\n            fourth position\u003cbr\u003eReserved name error\u003cbr\u003eReserved name\n            error\u003cbr\u003edomain must be specified\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: domains\n  /v1/domains/contacts/validate:\n    post:\n      tags:\n        - v1\n      summary: \u003e-\n        Validate the request body using the Domain Contact Validation Schema for\n        specified domains.\n      description: \u003e-\n        All contacts specified in request will be validated against all domains\n        specifed in \"domains\". As an alternative, you can also pass in tlds,\n        with the exception of `uk`, which requires full domain names\n      operationId: validateContacts\n      parameters:\n        - name: X-Private-Label-Id\n          in: header\n          description: PrivateLabelId to operate as, if different from JWT\n          schema:\n            type: integer\n            default: 1\n        - name: marketId\n          in: query\n          description: \u003e-\n            MarketId in which the request is being made, and for which responses\n            should be localized\n          schema:\n            type: string\n            format: bcp-47\n            default: en-US\n      requestBody:\n        description: An instance document expected for domains contacts validation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DomainsContactsBulk'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/DomainsContactsBulk'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DomainsContactsBulk'\n        required: true\n      responses:\n        '200':\n          description: No response was specified\n          content: {}\n        '204':\n          description: Request was successful\n          content: {}\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Request body doesn't fulfill schema, see details in `fields`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDomainContactsValidate'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorDomainContactsValidate'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDomainContactsValidate'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorDomainContactsValidate'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDomainContactsValidate'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: body\n  /v1/domains/purchase:\n    post:\n      tags:\n        - v1\n      summary: Purchase and register the specified Domain\n      operationId: purchaseDomain\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: The Shopper for whom the domain should be purchased\n          schema:\n            type: string\n      requestBody:\n        description: \u003e-\n          An instance document expected to match the JSON schema returned by\n          `./schema/{tld}`\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DomainPurchase'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/DomainPurchase'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DomainPurchase'\n        required: true\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: \u003e-\n            domain must be specified\u003cbr\u003eBased on restrictions declared in JSON\n            schema returned by `./schema/{tld}`\u003cbr\u003eCannot convert domain label\n            error\u003cbr\u003eDomain is missing IDN script\u003cbr\u003eDomain segment ends with\n            dash\u003cbr\u003eDomain starts with dash\u003cbr\u003eDomain uses unsupported IDN\n            script\u003cbr\u003eFQDN fails generic validity regex\u003cbr\u003eInvalid character(s)\n            error\u003cbr\u003eInvalid tld error\u003cbr\u003eNon-IDN domain name must not have\n            dashes at the third and fourth position\u003cbr\u003eReserved name\n            error\u003cbr\u003e`body` must be specified\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: body\n  /v1/domains/purchase/schema/{tld}:\n    get:\n      tags:\n        - v1\n      summary: \u003e-\n        Retrieve the schema to be submitted when registering a Domain for the\n        specified TLD\n      operationId: RetrieveSchema\n      parameters:\n        - name: tld\n          in: path\n          description: The Top-Level Domain whose schema should be retrieved\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonSchema'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/JsonSchema'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/JsonSchema'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/JsonSchema'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/JsonSchema'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: '`tld` must be specified'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v1/domains/purchase/validate:\n    post:\n      tags:\n        - v1\n      summary: \u003e-\n        Validate the request body using the Domain Purchase Schema for the\n        specified TLD\n      operationId: validateRequestBody\n      requestBody:\n        description: \u003e-\n          An instance document expected to match the JSON schema returned by\n          `./schema/{tld}`\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DomainPurchase'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/DomainPurchase'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DomainPurchase'\n        required: true\n      responses:\n        '200':\n          description: Request was successful\n          content: {}\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: \u003e-\n            Based on restrictions declared in JSON schema returned by\n            `./schema/{tld}`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: body\n  /v1/domains/suggest:\n    get:\n      tags:\n        - v1\n      summary: \u003e-\n        Suggest alternate Domain names based on a seed Domain, a set of\n        keywords, or the shopper's purchase history\n      operationId: suggestDomainNames\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: Shopper ID for which the suggestions are being generated\n          schema:\n            type: string\n        - name: query\n          in: query\n          description: \u003e-\n            Domain name or set of keywords for which alternative domain names\n            will be suggested\n          schema:\n            type: string\n        - name: country\n          in: query\n          description: \u003e-\n            Two-letter ISO country code to be used as a hint for target\n            region\u003cbr/\u003e\u003cbr/\u003e\n\n            NOTE: These are sample values, there are many\n\n            \u003ca href=\"http://www.iso.org/iso/country_codes.htm\"\u003emore\u003c/a\u003e\n          schema:\n            type: string\n            format: iso-country-code\n            enum:\n              - AC\n              - AD\n              - AE\n              - AF\n              - AG\n              - AI\n              - AL\n              - AM\n              - AO\n              - AQ\n              - AR\n              - AS\n              - AT\n              - AU\n              - AW\n              - AX\n              - AZ\n              - BA\n              - BB\n              - BD\n              - BE\n              - BF\n              - BG\n              - BH\n              - BI\n              - BJ\n              - BM\n              - BN\n              - BO\n              - BQ\n              - BR\n              - BS\n              - BT\n              - BV\n              - BW\n              - BY\n              - BZ\n              - CA\n              - CC\n              - CD\n              - CF\n              - CG\n              - CH\n              - CI\n              - CK\n              - CL\n              - CM\n              - CN\n              - CO\n              - CR\n              - CV\n              - CW\n              - CX\n              - CY\n              - CZ\n              - DE\n              - DJ\n              - DK\n              - DM\n              - DO\n              - DZ\n              - EC\n              - EE\n              - EG\n              - EH\n              - ER\n              - ES\n              - ET\n              - FI\n              - FJ\n              - FK\n              - FM\n              - FO\n              - FR\n              - GA\n              - GB\n              - GD\n              - GE\n              - GF\n              - GG\n              - GH\n              - GI\n              - GL\n              - GM\n              - GN\n              - GP\n              - GQ\n              - GR\n              - GS\n              - GT\n              - GU\n              - GW\n              - GY\n              - HK\n              - HM\n              - HN\n              - HR\n              - HT\n              - HU\n              - ID\n              - IE\n              - IL\n              - IM\n              - IN\n              - IO\n              - IQ\n              - IS\n              - IT\n              - JE\n              - JM\n              - JO\n              - JP\n              - KE\n              - KG\n              - KH\n              - KI\n              - KM\n              - KN\n              - KR\n              - KV\n              - KW\n              - KY\n              - KZ\n              - LA\n              - LB\n              - LC\n              - LI\n              - LK\n              - LR\n              - LS\n              - LT\n              - LU\n              - LV\n              - LY\n              - MA\n              - MC\n              - MD\n              - ME\n              - MG\n              - MH\n              - MK\n              - ML\n              - MM\n              - MN\n              - MO\n              - MP\n              - MQ\n              - MR\n              - MS\n              - MT\n              - MU\n              - MV\n              - MW\n              - MX\n              - MY\n              - MZ\n              - NA\n              - NC\n              - NE\n              - NF\n              - NG\n              - NI\n              - NL\n              - 'NO'\n              - NP\n              - NR\n              - NU\n              - NZ\n              - OM\n              - PA\n              - PE\n              - PF\n              - PG\n              - PH\n              - PK\n              - PL\n              - PM\n              - PN\n              - PR\n              - PS\n              - PT\n              - PW\n              - PY\n              - QA\n              - RE\n              - RO\n              - RS\n              - RU\n              - RW\n              - SA\n              - SB\n              - SC\n              - SE\n              - SG\n              - SH\n              - SI\n              - SJ\n              - SK\n              - SL\n              - SM\n              - SN\n              - SO\n              - SR\n              - ST\n              - SV\n              - SX\n              - SZ\n              - TC\n              - TD\n              - TF\n              - TG\n              - TH\n              - TJ\n              - TK\n              - TL\n              - TM\n              - TN\n              - TO\n              - TP\n              - TR\n              - TT\n              - TV\n              - TW\n              - TZ\n              - UA\n              - UG\n              - UM\n              - US\n              - UY\n              - UZ\n              - VA\n              - VC\n              - VE\n              - VG\n              - VI\n              - VN\n              - VU\n              - WF\n              - WS\n              - YE\n              - YT\n              - ZA\n              - ZM\n              - ZW\n        - name: city\n          in: query\n          description: Name of city to be used as a hint for target region\n          schema:\n            type: string\n            format: city-name\n        - name: sources\n          in: query\n          description: \u003e-\n            Sources to be queried\u003cbr/\u003e\u003cbr/\u003e\u003cul\u003e\n\n            \u003cli\u003e\u003cstrong\u003eCC_TLD\u003c/strong\u003e - Varies the TLD using Country\n            Codes\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong\u003eEXTENSION\u003c/strong\u003e - Varies the TLD\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong\u003eKEYWORD_SPIN\u003c/strong\u003e - Identifies keywords and then\n            rotates each one\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong\u003ePREMIUM\u003c/strong\u003e - Includes variations with premium\n            prices\u003c/li\u003e\u003c/ul\u003e\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - CC_TLD\n                - EXTENSION\n                - KEYWORD_SPIN\n                - PREMIUM\n                - cctld\n                - extension\n                - keywordspin\n                - premium\n        - name: tlds\n          in: query\n          description: \u003e-\n            Top-level domains to be included in suggestions\u003cbr/\u003e\u003cbr/\u003e\n\n            NOTE: These are sample values, there are many\n\n            \u003ca\n            href=\"http://www.godaddy.com/tlds/gtld.aspx#domain_search_form\"\u003emore\u003c/a\u003e\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: lengthMax\n          in: query\n          description: Maximum length of second-level domain\n          schema:\n            type: integer\n        - name: lengthMin\n          in: query\n          description: Minimum length of second-level domain\n          schema:\n            type: integer\n        - name: limit\n          in: query\n          description: Maximum number of suggestions to return\n          schema:\n            type: integer\n        - name: waitMs\n          in: query\n          description: |-\n            Maximum amount of time, in milliseconds, to wait for responses\n            If elapses, return the results compiled up to that point\n          schema:\n            type: integer\n            format: integer-positive\n            default: 1000\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DomainSuggestion'\n            application/javascript:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DomainSuggestion'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DomainSuggestion'\n            text/javascript:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DomainSuggestion'\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DomainSuggestion'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: '`query` must be specified'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '504':\n          description: Gateway timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v1/domains/tlds:\n    get:\n      tags:\n        - v1\n      summary: Retrieves a list of TLDs supported and enabled for sale\n      operationId: listTLDs\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TldSummary'\n            application/javascript:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TldSummary'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TldSummary'\n            text/javascript:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TldSummary'\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TldSummary'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v1/domains/{domain}:\n    get:\n      tags:\n        - v1\n      summary: Retrieve details for the specified Domain\n      operationId: getDomainDetail\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: Shopper ID expected to own the specified domain\n          schema:\n            type: string\n        - name: domain\n          in: path\n          description: Domain name whose details are to be retrieved\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainDetail'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DomainDetail'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DomainDetail'\n        '203':\n          description: \u003e-\n            Request was partially successful, see verifications.status for\n            further detail\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainDetail'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DomainDetail'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DomainDetail'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: '`domain` must be specified'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      tags:\n        - v1\n      summary: Cancel a purchased domain\n      operationId: cancelDomain\n      parameters:\n        - name: domain\n          in: path\n          description: Domain to cancel\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Request was successful\n          content: {}\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: The domain does not exist\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: \u003e-\n            Unknown domain error\u003cbr\u003eAt least two apex (aka @) `nameServers` must\n            be specified\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n        - v1\n      summary: Update details for the specified Domain\n      operationId: updateDomain\n      parameters:\n        - name: domain\n          in: path\n          description: Domain whose details are to be updated\n          required: true\n          schema:\n            type: string\n        - name: X-Shopper-Id\n          in: header\n          description: \u003e-\n            Shopper for whom Domain is to be updated. NOTE: This is only\n            required if you are a Reseller managing a domain purchased outside\n            the scope of your reseller account. For instance, if you're a\n            Reseller, but purchased a Domain via http://www.godaddy.com\n          schema:\n            type: string\n      requestBody:\n        description: Changes to apply to existing Domain\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DomainUpdate'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/DomainUpdate'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DomainUpdate'\n        required: true\n      responses:\n        '200':\n          description: Request was successful\n          content: {}\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Specified Subaccount not owned by authenticated Shopper\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: The given domain is not eligible to have its nameservers changed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: \u003e-\n            At least two apex (aka @) `nameServers` must be specified\u003cbr\u003eFailed\n            to update nameservers\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: body\n  /v1/domains/{domain}/contacts:\n    patch:\n      tags:\n        - v1\n      summary: Update domain\n      operationId: updateContacts\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: \u003e-\n            Shopper for whom domain contacts are to be updated. NOTE: This is\n            only required if you are a Reseller managing a domain purchased\n            outside the scope of your reseller account. For instance, if you're\n            a Reseller, but purchased a Domain via http://www.godaddy.com\n          schema:\n            type: string\n        - name: domain\n          in: path\n          description: Domain whose Contacts are to be updated.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Changes to apply to existing Contacts\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DomainContacts'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/DomainContacts'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DomainContacts'\n        required: true\n      responses:\n        '200':\n          description: No response was specified\n          content: {}\n        '204':\n          description: Request was successful\n          content: {}\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Domain not found\u003cbr\u003eIdentity document not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: '`domain` is not a valid Domain name'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '504':\n          description: Gateway timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: contacts\n  /v1/domains/{domain}/privacy:\n    delete:\n      tags:\n        - v1\n      summary: Submit a privacy cancellation request for the given domain\n      operationId: cancelPrivacy\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: Shopper ID of the owner of the domain\n          schema:\n            type: string\n        - name: domain\n          in: path\n          description: Domain whose privacy is to be cancelled\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Request was successful\n          content: {}\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: The domain does not exist\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: \u003e-\n            Customer has purchased Domain Ownership Protection and the domain\n            has expired\u003cbr\u003eThe domain status does not allow performing the\n            operation\u003cbr\u003eUnknown domain error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v1/domains/{domain}/privacy/purchase:\n    post:\n      tags:\n        - v1\n      summary: Purchase privacy for a specified domain\n      operationId: purchasePrivacy\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: Shopper ID of the owner of the domain\n          schema:\n            type: string\n        - name: domain\n          in: path\n          description: Domain for which to purchase privacy\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Options for purchasing privacy\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PrivacyPurchase'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PrivacyPurchase'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/PrivacyPurchase'\n        required: true\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: The domain status does not allow performing the operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: \u003e-\n            End-user must read and consent to all of the following legal\n            agreements\u003cbr\u003e`domain` must match `sld.tld`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: body\n  /v1/domains/{domain}/records:\n    put:\n      tags:\n        - v1\n      summary: Replace all DNS Records for the specified Domain\n      operationId: replaceDNSRecords\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: \u003e-\n            Shopper ID which owns the domain. NOTE: This is only required if you\n            are a Reseller managing a domain purchased outside the scope of your\n            reseller account. For instance, if you're a Reseller, but purchased\n            a Domain via http://www.godaddy.com\n          schema:\n            type: string\n        - name: domain\n          in: path\n          description: Domain whose DNS Records are to be replaced\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: DNS Records to replace whatever currently exists\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/DNSRecord'\n          application/xml:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/DNSRecord'\n          text/xml:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/DNSRecord'\n        required: true\n      responses:\n        '200':\n          description: Request was successful\n          content: {}\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: \u003e-\n            `domain` is not a valid Domain name\u003cbr\u003e`record` does not fulfill the\n            schema\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '504':\n          description: Gateway timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: records\n    patch:\n      tags:\n        - v1\n      summary: Add the specified DNS Records to the specified Domain\n      operationId: addDNSRecord\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: \u003e-\n            Shopper ID which owns the domain. NOTE: This is only required if you\n            are a Reseller managing a domain purchased outside the scope of your\n            reseller account. For instance, if you're a Reseller, but purchased\n            a Domain via http://www.godaddy.com\n          schema:\n            type: string\n        - name: domain\n          in: path\n          description: Domain whose DNS Records are to be augmented\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: DNS Records to add to whatever currently exists\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ArrayOfDNSRecord'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/ArrayOfDNSRecord'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ArrayOfDNSRecord'\n        required: true\n      responses:\n        '200':\n          description: Request was successful\n          content: {}\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: '`domain` is not a valid Domain name'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '504':\n          description: Gateway timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: records\n  /v1/domains/{domain}/records/{type}/{name}:\n    get:\n      tags:\n        - v1\n      summary: \u003e-\n        Retrieve DNS Records for the specified Domain, optionally with the\n        specified Type and/or Name\n      operationId: getDNSRecord\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: \u003e-\n            Shopper ID which owns the domain. NOTE: This is only required if you\n            are a Reseller managing a domain purchased outside the scope of your\n            reseller account. For instance, if you're a Reseller, but purchased\n            a Domain via http://www.godaddy.com\n          schema:\n            type: string\n        - name: domain\n          in: path\n          description: Domain whose DNS Records are to be retrieved\n          required: true\n          schema:\n            type: string\n        - name: type\n          in: path\n          description: DNS Record Type for which DNS Records are to be retrieved\n          required: true\n          schema:\n            type: string\n            enum:\n              - A\n              - AAAA\n              - CNAME\n              - MX\n              - NS\n              - SOA\n              - SRV\n              - TXT\n        - name: name\n          in: path\n          description: DNS Record Name for which DNS Records are to be retrieved\n          required: true\n          schema:\n            type: string\n        - name: offset\n          in: query\n          description: Number of results to skip for pagination\n          schema:\n            type: integer\n        - name: limit\n          in: query\n          description: Maximum number of items to return\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DNSRecord'\n            application/javascript:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DNSRecord'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DNSRecord'\n            text/javascript:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DNSRecord'\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DNSRecord'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: \u003e-\n            `record` does not fulfill the schema\u003cbr\u003e`domain` is not a valid\n            Domain name\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '504':\n          description: Gateway timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n        - v1\n      summary: \u003e-\n        Replace all DNS Records for the specified Domain with the specified Type\n        and Name\n      operationId: replaceDNSRecordTypeName\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: \u003e-\n            Shopper ID which owns the domain. NOTE: This is only required if you\n            are a Reseller managing a domain purchased outside the scope of your\n            reseller account. For instance, if you're a Reseller, but purchased\n            a Domain via http://www.godaddy.com\n          schema:\n            type: string\n        - name: domain\n          in: path\n          description: Domain whose DNS Records are to be replaced\n          required: true\n          schema:\n            type: string\n        - name: type\n          in: path\n          description: DNS Record Type for which DNS Records are to be replaced\n          required: true\n          schema:\n            type: string\n            enum:\n              - A\n              - AAAA\n              - CNAME\n              - MX\n              - NS\n              - SOA\n              - SRV\n              - TXT\n        - name: name\n          in: path\n          description: DNS Record Name for which DNS Records are to be replaced\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: DNS Records to replace whatever currently exists\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/DNSRecordCreateTypeName'\n          application/xml:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/DNSRecordCreateTypeName'\n          text/xml:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/DNSRecordCreateTypeName'\n        required: true\n      responses:\n        '200':\n          description: Request was successful\n          content: {}\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: '`record` does not fulfill the schema'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '504':\n          description: Gateway timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: records\n    delete:\n      tags:\n        - v1\n      summary: \u003e-\n        Delete all DNS Records for the specified Domain with the specified Type\n        and Name\n      operationId: deleteDNSRecordTypeName\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: \u003e-\n            Shopper ID which owns the domain. NOTE: This is only required if you\n            are a Reseller managing a domain purchased outside the scope of your\n            reseller account. For instance, if you're a Reseller, but purchased\n            a Domain via http://www.godaddy.com\n          schema:\n            type: string\n        - name: domain\n          in: path\n          description: Domain whose DNS Records are to be deleted\n          required: true\n          schema:\n            type: string\n        - name: type\n          in: path\n          description: DNS Record Type for which DNS Records are to be deleted\n          required: true\n          schema:\n            type: string\n            enum:\n              - A\n              - AAAA\n              - CNAME\n              - MX\n              - SRV\n              - TXT\n        - name: name\n          in: path\n          description: DNS Record Name for which DNS Records are to be deleted\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Request was successful\n          content: {}\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Domain not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: The given domain is not eligible to have its records changed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: '`domain` is not a valid Domain name'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '504':\n          description: Gateway timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v1/domains/{domain}/records/{type}:\n    put:\n      tags:\n        - v1\n      summary: Replace all DNS Records for the specified Domain with the specified Type\n      operationId: replaceDNSRecordType\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: \u003e-\n            Shopper ID which owns the domain. NOTE: This is only required if you\n            are a Reseller managing a domain purchased outside the scope of your\n            reseller account. For instance, if you're a Reseller, but purchased\n            a Domain via http://www.godaddy.com\n          schema:\n            type: string\n        - name: domain\n          in: path\n          description: Domain whose DNS Records are to be replaced\n          required: true\n          schema:\n            type: string\n        - name: type\n          in: path\n          description: DNS Record Type for which DNS Records are to be replaced\n          required: true\n          schema:\n            type: string\n            enum:\n              - A\n              - AAAA\n              - CNAME\n              - MX\n              - NS\n              - SOA\n              - SRV\n              - TXT\n      requestBody:\n        description: DNS Records to replace whatever currently exists\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/DNSRecordCreateType'\n          application/xml:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/DNSRecordCreateType'\n          text/xml:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/DNSRecordCreateType'\n        required: true\n      responses:\n        '200':\n          description: Request was successful\n          content: {}\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: '`record` does not fulfill the schema'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '504':\n          description: Gateway timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: records\n  /v1/domains/{domain}/renew:\n    post:\n      tags:\n        - v1\n      summary: Renew the specified Domain\n      operationId: renewDomain\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: \u003e-\n            Shopper for whom Domain is to be renewed. NOTE: This is only\n            required if you are a Reseller managing a domain purchased outside\n            the scope of your reseller account. For instance, if you're a\n            Reseller, but purchased a Domain via http://www.godaddy.com\n          schema:\n            type: string\n        - name: domain\n          in: path\n          description: Domain to renew\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Options for renewing existing Domain\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DomainRenew'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/DomainRenew'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DomainRenew'\n        required: false\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: The domain status does not allow performing the operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: \u003e-\n            End-user must read and consent to all of the following legal\n            agreements\u003cbr\u003e`domain` must match `sld.tld`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: body\n  /v1/domains/{domain}/transfer:\n    post:\n      tags:\n        - v1\n      summary: Purchase and start or restart transfer process\n      operationId: startOrRestartTransferInProcess\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: The Shopper to whom the domain should be transfered\n          schema:\n            type: string\n        - name: domain\n          in: path\n          description: Domain to transfer in\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Details for domain transfer purchase\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DomainTransferIn'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/DomainTransferIn'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DomainTransferIn'\n        required: true\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DomainPurchaseResponse'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: '`domain` (domain) isn''t available for transfer'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: \u003e-\n            Based on restrictions declared in JSON schema returned by\n            `./schema/{tld}`\u003cbr\u003eCannot convert domain label error\u003cbr\u003eDomain is\n            missing IDN script\u003cbr\u003eDomain segment ends with dash\u003cbr\u003eDomain starts\n            with dash\u003cbr\u003eDomain uses unsupported IDN script\u003cbr\u003eEnd-user must\n            read and consent to all of the following legal agreements\u003cbr\u003eFQDN\n            fails generic validity regex\u003cbr\u003eInvalid character(s)\n            error\u003cbr\u003eInvalid period range\u003cbr\u003eInvalid tld error\u003cbr\u003eNon-IDN domain\n            name must not have dashes at the third and fourth\n            position\u003cbr\u003eReserved name error\u003cbr\u003e`authCode` cannot be\n            empty\u003cbr\u003e`domain` must match `sld.tld`\u003cbr\u003edomain must be specified\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: body\n  /v1/domains/{domain}/verifyRegistrantEmail:\n    post:\n      tags:\n        - v1\n      summary: Re-send Contact E-mail Verification for specified Domain\n      operationId: verifyEmail\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: \u003e-\n            Shopper for whom domain contact e-mail should be verified. NOTE:\n            This is only required if you are a Reseller managing a domain\n            purchased outside the scope of your reseller account. For instance,\n            if you're a Reseller, but purchased a Domain via\n            http://www.godaddy.com\n          schema:\n            type: string\n        - name: domain\n          in: path\n          description: Domain whose Contact E-mail should be verified.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Request was successful\n          content: {}\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: '`domain` is not a valid Domain name'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '504':\n          description: Gateway timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v2/customers/{customerId}/domains/forwards/{fqdn}:\n    get:\n      tags:\n        - v2\n      summary: Retrieve the forwarding information for the given fqdn\n      description: \u003e-\n        \u003cstrong\u003eNotes:\u003c/strong\u003e\u003cul\u003e\u003cli\u003e**shopperId** is **not the same** as\n        **customerId**.  **shopperId** is a number of max length 10 digits\n        (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:*\n        295e3bc3-b3b9-4d95-aae5-ede41a994d13)\u003c/li\u003e\u003c/ul\u003e\n      operationId: getDomainsForwards\n      parameters:\n        - name: customerId\n          in: path\n          description: \u003e-\n            The Customer identifier\u003cbr/\u003e Note: For API Resellers, performing\n            actions on behalf of your customers, you need to specify the\n            Subaccount you're operating on behalf of; otherwise use your shopper\n            id.\n          required: true\n          schema:\n            type: string\n        - name: fqdn\n          in: path\n          description: \u003e-\n            The fully qualified domain name whose forwarding details are to be\n            retrieved.\n          required: true\n          schema:\n            type: string\n        - name: includeSubs\n          in: query\n          description: \u003e-\n            Optionally include all sub domains if the fqdn specified is a domain\n            and not a sub domain.\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DomainForwarding'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: A valid `fqdn` must be specified\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n        - v2\n      summary: Modify the forwarding information for the given fqdn\n      description: \u003e-\n        \u003cstrong\u003eNotes:\u003c/strong\u003e\u003cul\u003e\u003cli\u003e**shopperId** is **not the same** as\n        **customerId**.  **shopperId** is a number of max length 10 digits\n        (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:*\n        295e3bc3-b3b9-4d95-aae5-ede41a994d13)\u003c/li\u003e\u003c/ul\u003e\n      operationId: putDomainsForwards\n      parameters:\n        - name: customerId\n          in: path\n          description: \u003e-\n            The Customer identifier\u003cbr/\u003e Note: For API Resellers, performing\n            actions on behalf of your customers, you need to specify the\n            Subaccount you're operating on behalf of; otherwise use your shopper\n            id.\n          required: true\n          schema:\n            type: string\n        - name: fqdn\n          in: path\n          description: \u003e-\n            The fully qualified domain name whose forwarding details are to be\n            modified.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Domain forwarding rule to create or replace on the fqdn\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DomainForwardingCreate'\n        required: true\n      responses:\n        '204':\n          description: Request was successful\n          content: {}\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: The domain status does not allow performing the operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Request body doesn't fulfill schema, see details in `fields`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n        - v2\n      summary: Submit a forwarding cancellation request for the given fqdn\n      description: \u003e-\n        \u003cstrong\u003eNotes:\u003c/strong\u003e\u003cul\u003e\u003cli\u003e**shopperId** is **not the same** as\n        **customerId**.  **shopperId** is a number of max length 10 digits\n        (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:*\n        295e3bc3-b3b9-4d95-aae5-ede41a994d13)\u003c/li\u003e\u003c/ul\u003e\n      operationId: deleteDomainsForwards\n      parameters:\n        - name: customerId\n          in: path\n          description: \u003e-\n            The Customer identifier\u003cbr/\u003e Note: For API Resellers, performing\n            actions on behalf of your customers, you need to specify the\n            Subaccount you're operating on behalf of; otherwise use your shopper\n            id.\n          required: true\n          schema:\n            type: string\n        - name: fqdn\n          in: path\n          description: \u003e-\n            The fully qualified domain name whose forwarding details are to be\n            deleted.\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Request was successful\n          content: {}\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: The domain status does not allow performing the operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: A valid `fqdn` must be specified\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\nsecurity:\n  - ApiKeyAuth: []\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:       \n      type: apiKey\n      in: header  \n      name: Authorization\n      description: Represents API Key 'Authorization'\n  schemas:\n    Address:\n      required:\n        - address1\n        - city\n        - country\n        - postalCode\n        - state\n      type: object\n      properties:\n        address1:\n          type: string\n          format: street-address\n        address2:\n          type: string\n          format: street-address2\n        city:\n          type: string\n          format: city-name\n        country:\n          type: string\n          description: \u003e-\n            Two-letter ISO country code to be used as a hint for target\n            region\u003cbr/\u003e\u003cbr/\u003e\n\n            NOTE: These are sample values, there are many\n\n            \u003ca href='http://www.iso.org/iso/country_codes.htm'\u003emore\u003c/a\u003e\n          format: iso-country-code\n          default: US\n          enum:\n            - AC\n            - AD\n            - AE\n            - AF\n            - AG\n            - AI\n            - AL\n            - AM\n            - AO\n            - AQ\n            - AR\n            - AS\n            - AT\n            - AU\n            - AW\n            - AX\n            - AZ\n            - BA\n            - BB\n            - BD\n            - BE\n            - BF\n            - BG\n            - BH\n            - BI\n            - BJ\n            - BM\n            - BN\n            - BO\n            - BQ\n            - BR\n            - BS\n            - BT\n            - BV\n            - BW\n            - BY\n            - BZ\n            - CA\n            - CC\n            - CD\n            - CF\n            - CG\n            - CH\n            - CI\n            - CK\n            - CL\n            - CM\n            - CN\n            - CO\n            - CR\n            - CV\n            - CW\n            - CX\n            - CY\n            - CZ\n            - DE\n            - DJ\n            - DK\n            - DM\n            - DO\n            - DZ\n            - EC\n            - EE\n            - EG\n            - EH\n            - ER\n            - ES\n            - ET\n            - FI\n            - FJ\n            - FK\n            - FM\n            - FO\n            - FR\n            - GA\n            - GB\n            - GD\n            - GE\n            - GF\n            - GG\n            - GH\n            - GI\n            - GL\n            - GM\n            - GN\n            - GP\n            - GQ\n            - GR\n            - GS\n            - GT\n            - GU\n            - GW\n            - GY\n            - HK\n            - HM\n            - HN\n            - HR\n            - HT\n            - HU\n            - ID\n            - IE\n            - IL\n            - IM\n            - IN\n            - IO\n            - IQ\n            - IS\n            - IT\n            - JE\n            - JM\n            - JO\n            - JP\n            - KE\n            - KG\n            - KH\n            - KI\n            - KM\n            - KN\n            - KR\n            - KV\n            - KW\n            - KY\n            - KZ\n            - LA\n            - LB\n            - LC\n            - LI\n            - LK\n            - LR\n            - LS\n            - LT\n            - LU\n            - LV\n            - LY\n            - MA\n            - MC\n            - MD\n            - ME\n            - MG\n            - MH\n            - MK\n            - ML\n            - MM\n            - MN\n            - MO\n            - MP\n            - MQ\n            - MR\n            - MS\n            - MT\n            - MU\n            - MV\n            - MW\n            - MX\n            - MY\n            - MZ\n            - NA\n            - NC\n            - NE\n            - NF\n            - NG\n            - NI\n            - NL\n            - 'NO'\n            - NP\n            - NR\n            - NU\n            - NZ\n            - OM\n            - PA\n            - PE\n            - PF\n            - PG\n            - PH\n            - PK\n            - PL\n            - PM\n            - PN\n            - PR\n            - PS\n            - PT\n            - PW\n            - PY\n            - QA\n            - RE\n            - RO\n            - RS\n            - RU\n            - RW\n            - SA\n            - SB\n            - SC\n            - SE\n            - SG\n            - SH\n            - SI\n            - SJ\n            - SK\n            - SL\n            - SM\n            - SN\n            - SO\n            - SR\n            - ST\n            - SV\n            - SX\n            - SZ\n            - TC\n            - TD\n            - TF\n            - TG\n            - TH\n            - TJ\n            - TK\n            - TL\n            - TM\n            - TN\n            - TO\n            - TP\n            - TR\n            - TT\n            - TV\n            - TW\n            - TZ\n            - UA\n            - UG\n            - UM\n            - US\n            - UY\n            - UZ\n            - VA\n            - VC\n            - VE\n            - VG\n            - VI\n            - VN\n            - VU\n            - WF\n            - WS\n            - YE\n            - YT\n            - ZA\n            - ZM\n            - ZW\n        postalCode:\n          type: string\n          description: Postal or zip code\n          format: postal-code\n        state:\n          type: string\n          description: State or province or territory\n          format: state-province-territory\n    ArrayOfDNSRecord:\n      type: array\n      items:\n        $ref: '#/components/schemas/DNSRecord'\n    Consent:\n      required:\n        - agreedAt\n        - agreedBy\n        - agreementKeys\n      type: object\n      properties:\n        agreedAt:\n          type: string\n          description: \u003e-\n            Timestamp indicating when the end-user consented to these legal\n            agreements\n          format: iso-datetime\n        agreedBy:\n          type: string\n          description: \u003e-\n            Originating client IP address of the end-user's computer when they\n            consented to these legal agreements\n        agreementKeys:\n          type: array\n          description: \u003e-\n            Unique identifiers of the legal agreements to which the end-user has\n            agreed, as returned from the/domains/agreements endpoint\n          items:\n            type: string\n    ConsentDomainUpdate:\n      required:\n        - agreedAt\n        - agreedBy\n        - agreementKeys\n      type: object\n      properties:\n        agreedAt:\n          type: string\n          description: Timestamp indicating when the end-user consented to these agreements\n          format: iso-datetime\n        agreedBy:\n          type: string\n          description: \u003e-\n            Originating client IP address of the end-user's computer when they\n            consented to the agreements\n        agreementKeys:\n          type: array\n          description: \u003e-\n            Unique identifiers of the agreements to which the end-user has\n            agreed, as required by the elements being\n            updated\u003cbr/\u003e\u003cul\u003e\u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eEXPOSE_WHOIS\u003c/strong\u003e - Required when the exposeWhois field\n            is updated to true\u003c/li\u003e\u003c/ul\u003e\n          items:\n            type: string\n            enum:\n              - EXPOSE_WHOIS\n    Contact:\n      required:\n        - addressMailing\n        - email\n        - nameFirst\n        - nameLast\n        - phone\n      type: object\n      properties:\n        addressMailing:\n          $ref: '#/components/schemas/Address'\n        email:\n          type: string\n          format: email\n        fax:\n          type: string\n          format: phone\n        jobTitle:\n          type: string\n        nameFirst:\n          type: string\n          format: person-name\n        nameLast:\n          type: string\n          format: person-name\n        nameMiddle:\n          type: string\n        organization:\n          type: string\n          format: organization-name\n        phone:\n          type: string\n          format: phone\n    DNSRecord:\n      required:\n        - data\n        - name\n        - type\n      type: object\n      properties:\n        data:\n          type: string\n        name:\n          type: string\n          format: domain\n        port:\n          maximum: 65535\n          minimum: 1\n          type: integer\n          description: Service port (SRV only)\n        priority:\n          type: integer\n          description: Record priority (MX and SRV only)\n          format: integer-positive\n        protocol:\n          type: string\n          description: Service protocol (SRV only)\n        service:\n          type: string\n          description: Service type (SRV only)\n        ttl:\n          type: integer\n          format: integer-positive\n        type:\n          type: string\n          enum:\n            - A\n            - AAAA\n            - CNAME\n            - MX\n            - NS\n            - SOA\n            - SRV\n            - TXT\n        weight:\n          type: integer\n          description: Record weight (SRV only)\n          format: integer-positive\n    DNSRecordCreateType:\n      required:\n        - data\n        - name\n      type: object\n      properties:\n        data:\n          type: string\n        name:\n          type: string\n          format: domain\n        port:\n          maximum: 65535\n          minimum: 1\n          type: integer\n          description: Service port (SRV only)\n        priority:\n          type: integer\n          description: Record priority (MX and SRV only)\n          format: integer-positive\n        protocol:\n          type: string\n          description: Service protocol (SRV only)\n        service:\n          type: string\n          description: Service type (SRV only)\n        ttl:\n          type: integer\n          format: integer-positive\n        weight:\n          type: integer\n          description: Record weight (SRV only)\n          format: integer-positive\n    DNSRecordCreateTypeName:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: string\n        port:\n          maximum: 65535\n          minimum: 1\n          type: integer\n          description: Service port (SRV only)\n        priority:\n          type: integer\n          description: Record priority (MX and SRV only)\n          format: integer-positive\n        protocol:\n          type: string\n          description: Service protocol (SRV only)\n        service:\n          type: string\n          description: Service type (SRV only)\n        ttl:\n          type: integer\n          format: integer-positive\n        weight:\n          type: integer\n          description: Record weight (SRV only)\n          format: integer-positive\n    DomainAvailableBulk:\n      required:\n        - domains\n      type: object\n      properties:\n        domains:\n          type: array\n          description: Domain available response array\n          items:\n            $ref: '#/components/schemas/DomainAvailableResponse'\n    DomainAvailableBulkMixed:\n      required:\n        - domains\n      type: object\n      properties:\n        domains:\n          type: array\n          description: Domain available response array\n          items:\n            $ref: '#/components/schemas/DomainAvailableResponse'\n        errors:\n          type: array\n          description: Errors encountered while performing a domain available check\n          items:\n            $ref: '#/components/schemas/DomainAvailableError'\n    DomainAvailableError:\n      required:\n        - code\n        - domain\n        - path\n        - status\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        domain:\n          type: string\n          description: Domain name\n        message:\n          type: string\n          description: Human-readable, English description of the error\n        path:\n          type: string\n          description: \u003e-\n            \u003cul\u003e\n\n            \u003cli style='margin-left: 12px;'\u003eJSONPath referring to a field\n            containing an error\u003c/li\u003e\n\n            \u003cstrong style='margin-left: 12px;'\u003eOR\u003c/strong\u003e\n\n            \u003cli style='margin-left: 12px;'\u003eJSONPath referring to a field that\n            refers to an object containing an error, with more detail in\n            `pathRelated`\u003c/li\u003e\n\n            \u003c/ul\u003e\n          format: json-path\n        status:\n          type: integer\n          description: HTTP status code that would return for a single check\n    DomainAvailableResponse:\n      required:\n        - available\n        - definitive\n        - domain\n      type: object\n      properties:\n        available:\n          type: boolean\n          description: Whether or not the domain name is available\n        currency:\n          type: string\n          description: \u003e-\n            Currency in which the `price` is listed. Only returned if tld is\n            offered\n          format: iso-currency-code\n          default: USD\n        definitive:\n          type: boolean\n          description: \u003e-\n            Whether or not the `available` answer has been definitively verified\n            with the registry\n        domain:\n          type: string\n          description: Domain name\n        period:\n          type: integer\n          description: \u003e-\n            Number of years included in the price. Only returned if tld is\n            offered\n          format: integer-positive\n        price:\n          type: integer\n          description: \u003e-\n            Price of the domain excluding taxes or fees. Only returned if tld is\n            offered\n          format: currency-micro-unit\n    DomainContacts:\n      required:\n        - contactRegistrant\n      type: object\n      properties:\n        contactAdmin:\n          $ref: '#/components/schemas/Contact'\n        contactBilling:\n          $ref: '#/components/schemas/Contact'\n        contactRegistrant:\n          $ref: '#/components/schemas/Contact'\n        contactTech:\n          $ref: '#/components/schemas/Contact'\n    DomainDetail:\n      required:\n        - authCode\n        - contactAdmin\n        - contactBilling\n        - contactRegistrant\n        - contactTech\n        - createdAt\n        - domain\n        - domainId\n        - expirationProtected\n        - holdRegistrar\n        - locked\n        - nameServers\n        - privacy\n        - renewAuto\n        - renewDeadline\n        - status\n        - transferProtected\n      type: object\n      properties:\n        authCode:\n          type: string\n          description: Authorization code for transferring the Domain\n        contactAdmin:\n          $ref: '#/components/schemas/Contact'\n        contactBilling:\n          $ref: '#/components/schemas/Contact'\n        contactRegistrant:\n          $ref: '#/components/schemas/Contact'\n        contactTech:\n          $ref: '#/components/schemas/Contact'\n        createdAt:\n          type: string\n          description: Date and time when this domain was created\n          format: date-time\n        deletedAt:\n          type: string\n          description: Date and time when this domain was deleted\n          format: date-time\n        transferAwayEligibleAt:\n          type: string\n          description: Date and time when this domain is eligible to transfer\n          format: date-time\n        domain:\n          type: string\n          description: Name of the domain\n        domainId:\n          type: number\n          description: Unique identifier for this Domain\n          format: double\n        expirationProtected:\n          type: boolean\n          description: Whether or not the domain is protected from expiration\n        expires:\n          type: string\n          description: Date and time when this domain will expire\n          format: date-time\n        exposeWhois:\n          type: boolean\n          description: \u003e-\n            Whether or not the domain contact details should be shown in the\n            WHOIS\n        holdRegistrar:\n          type: boolean\n          description: Whether or not the domain is on-hold by the registrar\n        locked:\n          type: boolean\n          description: Whether or not the domain is locked to prevent transfers\n        nameServers:\n          type: array\n          description: Fully-qualified domain names for DNS servers\n          items:\n            type: string\n            format: host-name\n        privacy:\n          type: boolean\n          description: Whether or not the domain has privacy protection\n        renewAuto:\n          type: boolean\n          description: Whether or not the domain is configured to automatically renew\n        renewDeadline:\n          type: string\n          description: Date the domain must renew on\n          format: date-time\n        status:\n          type: string\n          description: \u003e-\n            Processing status of the domain\u003cbr/\u003e\u003cul\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eACTIVE\u003c/strong\u003e - All is\n            well\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eAWAITING*\u003c/strong\u003e - System\n            is waiting for the end-user to complete an action\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eCANCELLED*\u003c/strong\u003e - Domain\n            has been cancelled, and may or may not be reclaimable\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eCONFISCATED\u003c/strong\u003e - Domain\n            has been confiscated, usually for abuse, chargeback, or fraud\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eDISABLED*\u003c/strong\u003e - Domain\n            has been disabled\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eEXCLUDED*\u003c/strong\u003e - Domain\n            has been excluded from Firehose registration\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eEXPIRED*\u003c/strong\u003e - Domain\n            has expired\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eFAILED*\u003c/strong\u003e - Domain has\n            failed a required action, and the system is no longer retrying\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eHELD*\u003c/strong\u003e - Domain has\n            been placed on hold, and likely requires intervention from\n            Support\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eLOCKED*\u003c/strong\u003e - Domain has\n            been locked, and likely requires intervention from Support\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003ePARKED*\u003c/strong\u003e - Domain has\n            been parked, and likely requires intervention from Support\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003ePENDING*\u003c/strong\u003e - Domain is\n            working its way through an automated workflow\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eRESERVED*\u003c/strong\u003e - Domain\n            is reserved, and likely requires intervention from Support\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eREVERTED\u003c/strong\u003e - Domain\n            has been reverted, and likely requires intervention from\n            Support\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eSUSPENDED*\u003c/strong\u003e - Domain\n            has been suspended, and likely requires intervention from\n            Support\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eTRANSFERRED*\u003c/strong\u003e -\n            Domain has been transferred out\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eUNKNOWN\u003c/strong\u003e - Domain is\n            in an unknown state\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eUNLOCKED*\u003c/strong\u003e - Domain\n            has been unlocked, and likely requires intervention from\n            Support\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eUNPARKED*\u003c/strong\u003e - Domain\n            has been unparked, and likely requires intervention from\n            Support\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eUPDATED*\u003c/strong\u003e - Domain\n            ownership has been transferred to another account\u003c/li\u003e\n\n            \u003c/ul\u003e\n        subaccountId:\n          type: string\n          description: Reseller subaccount shopperid who can manage the domain\n        transferProtected:\n          type: boolean\n          description: Whether or not the domain is protected from transfer\n        verifications:\n          $ref: '#/components/schemas/VerificationsDomain'\n    DomainPurchase:\n      required:\n        - consent\n        - domain\n      type: object\n      properties:\n        consent:\n          $ref: '#/components/schemas/Consent'\n        contactAdmin:\n          $ref: '#/components/schemas/Contact'\n        contactBilling:\n          $ref: '#/components/schemas/Contact'\n        contactRegistrant:\n          $ref: '#/components/schemas/Contact'\n        contactTech:\n          $ref: '#/components/schemas/Contact'\n        domain:\n          type: string\n          description: \u003e-\n            For internationalized domain names with non-ascii characters, the\n            domain name is converted to punycode before format and pattern\n            validation rules are checked\n          format: domain\n        nameServers:\n          type: array\n          items:\n            type: string\n            format: host-name\n        period:\n          maximum: 10\n          minimum: 1\n          type: integer\n          format: integer-positive\n        privacy:\n          type: boolean\n          default: false\n        renewAuto:\n          type: boolean\n          default: true\n    DomainPurchaseResponse:\n      required:\n        - itemCount\n        - orderId\n        - total\n      type: object\n      properties:\n        currency:\n          type: string\n          description: Currency in which the `total` is listed\n          format: iso-currency-code\n          default: USD\n        itemCount:\n          type: integer\n          description: Number items included in the order\n          format: integer-positive\n        orderId:\n          type: integer\n          description: Unique identifier of the order processed to purchase the domain\n          format: integer-positive\n        total:\n          type: integer\n          description: Total cost of the domain and any selected add-ons\n          format: currency-micro-unit\n    DomainRenew:\n      type: object\n      properties:\n        period:\n          maximum: 10\n          minimum: 1\n          type: integer\n          description: \u003e-\n            Number of years to extend the Domain. Must not exceed maximum for\n            TLD. When omitted, defaults to `period` specified during original\n            purchase\n          format: integer-positive\n    DomainSuggestion:\n      required:\n        - domain\n      type: object\n      properties:\n        domain:\n          type: string\n          description: Suggested domain name\n    DomainSummary:\n      required:\n        - contactRegistrant\n        - createdAt\n        - domain\n        - domainId\n        - expirationProtected\n        - holdRegistrar\n        - locked\n        - privacy\n        - renewAuto\n        - renewDeadline\n        - status\n        - transferProtected\n      type: object\n      properties:\n        authCode:\n          type: string\n          description: Authorization code for transferring the Domain\n        contactAdmin:\n          $ref: '#/components/schemas/Contact'\n        contactBilling:\n          $ref: '#/components/schemas/Contact'\n        contactRegistrant:\n          $ref: '#/components/schemas/Contact'\n        contactTech:\n          $ref: '#/components/schemas/Contact'\n        createdAt:\n          type: string\n          description: Date and time when this domain was created\n          format: date-time\n        deletedAt:\n          type: string\n          description: Date and time when this domain was deleted\n          format: date-time\n        transferAwayEligibleAt:\n          type: string\n          description: Date and time when this domain is eligible to transfer\n          format: date-time\n        domain:\n          type: string\n          description: Name of the domain\n        domainId:\n          type: number\n          description: Unique identifier for this Domain\n          format: double\n        expirationProtected:\n          type: boolean\n          description: Whether or not the domain is protected from expiration\n        expires:\n          type: string\n          description: Date and time when this domain will expire\n          format: date-time\n        exposeWhois:\n          type: boolean\n          description: \u003e-\n            Whether or not the domain contact details should be shown in the\n            WHOIS\n        holdRegistrar:\n          type: boolean\n          description: Whether or not the domain is on-hold by the registrar\n        locked:\n          type: boolean\n          description: Whether or not the domain is locked to prevent transfers\n        nameServers:\n          type: array\n          description: Fully-qualified domain names for DNS servers\n          items:\n            type: string\n            format: host-name\n        privacy:\n          type: boolean\n          description: Whether or not the domain has privacy protection\n        renewAuto:\n          type: boolean\n          description: Whether or not the domain is configured to automatically renew\n        renewDeadline:\n          type: string\n          description: Date the domain must renew on\n          format: date-time\n        renewable:\n          type: boolean\n          description: Whether or not the domain is eligble for renewal based on status\n        status:\n          type: string\n          description: \u003e-\n            Processing status of the domain\u003cbr/\u003e\u003cul\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eACTIVE\u003c/strong\u003e - All is\n            well\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eAWAITING*\u003c/strong\u003e - System\n            is waiting for the end-user to complete an action\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eCANCELLED*\u003c/strong\u003e - Domain\n            has been cancelled, and may or may not be reclaimable\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eCONFISCATED\u003c/strong\u003e - Domain\n            has been confiscated, usually for abuse, chargeback, or fraud\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eDISABLED*\u003c/strong\u003e - Domain\n            has been disabled\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eEXCLUDED*\u003c/strong\u003e - Domain\n            has been excluded from Firehose registration\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eEXPIRED*\u003c/strong\u003e - Domain\n            has expired\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eFAILED*\u003c/strong\u003e - Domain has\n            failed a required action, and the system is no longer retrying\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eHELD*\u003c/strong\u003e - Domain has\n            been placed on hold, and likely requires intervention from\n            Support\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eLOCKED*\u003c/strong\u003e - Domain has\n            been locked, and likely requires intervention from Support\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003ePARKED*\u003c/strong\u003e - Domain has\n            been parked, and likely requires intervention from Support\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003ePENDING*\u003c/strong\u003e - Domain is\n            working its way through an automated workflow\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eRESERVED*\u003c/strong\u003e - Domain\n            is reserved, and likely requires intervention from Support\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eREVERTED\u003c/strong\u003e - Domain\n            has been reverted, and likely requires intervention from\n            Support\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eSUSPENDED*\u003c/strong\u003e - Domain\n            has been suspended, and likely requires intervention from\n            Support\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eTRANSFERRED*\u003c/strong\u003e -\n            Domain has been transferred out\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eUNKNOWN\u003c/strong\u003e - Domain is\n            in an unknown state\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eUNLOCKED*\u003c/strong\u003e - Domain\n            has been unlocked, and likely requires intervention from\n            Support\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eUNPARKED*\u003c/strong\u003e - Domain\n            has been unparked, and likely requires intervention from\n            Support\u003c/li\u003e\n\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003eUPDATED*\u003c/strong\u003e - Domain\n            ownership has been transferred to another account\u003c/li\u003e\n\n            \u003c/ul\u003e\n        transferProtected:\n          type: boolean\n          description: Whether or not the domain is protected from transfer\n    DomainForwardingMask:\n      type: object\n      properties:\n        title:\n          type: string\n          description: Displays at the top of the browser window and in search results.\n        description:\n          type: string\n          description: \u003e-\n            A short description of your website to display in search engine\n            results.\n        keywords:\n          type: string\n          description: \u003e-\n            A list of comma-separated keywords that describes the content and\n            purpose of your website.\n    DomainForwardingCreate:\n      required:\n        - type\n        - url\n      type: object\n      properties:\n        type:\n          type: string\n          description: \u003e-\n            The type of fowarding to implement\u003cbr/\u003e\u003cul\u003e\u003cli\u003e\u003cstrong\n            style='margin-left: 12px;'\u003eMASKED\u003c/strong\u003e - Prevents the forwarded\n            domain or subdomain URL from displaying in the browser's address\n            bar.\u003c/li\u003e\u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREDIRECT_PERMANENT*\u003c/strong\u003e - Redirects to the url you\n            specified in the forwardTo field using a `301 Moved Permanently`\n            HTTP response. The HTTP 301 response code tells user-agents\n            (including search engines) that the location has permanently\n            moved.\u003c/li\u003e\u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREDIRECT_TEMPORARY\u003c/strong\u003e - Redirects to the url you\n            specified in the forwardTo field using a `302 Found` HTTP response.\n            The HTTP 302 response code tells user-agents (including search\n            engines) that the location has temporarily moved.\u003c/li\u003e\u003c/ul\u003e\n          default: REDIRECT_PERMANENT\n          enum:\n            - MASKED\n            - REDIRECT_PERMANENT\n            - REDIRECT_TEMPORARY\n        url:\n          type: string\n          description: \u003e-\n            Forwards http(s) traffic to this destination url (ex.\n            http://www.somedomain.com/)\n          format: url\n        mask:\n          $ref: '#/components/schemas/DomainForwardingMask'\n    DomainForwarding:\n      required:\n        - fqdn\n        - type\n        - url\n      type: object\n      properties:\n        fqdn:\n          type: string\n          description: \u003e-\n            The fqdn (domain or sub domain) to forward (ex somedomain.com or\n            sub.somedomain.com)\n        type:\n          type: string\n          description: \u003e-\n            The type of fowarding to implement\u003cbr/\u003e\u003cul\u003e\u003cli\u003e\u003cstrong\n            style='margin-left: 12px;'\u003eMASKED\u003c/strong\u003e - Prevents the forwarded\n            domain or subdomain URL from displaying in the browser's address\n            bar.\u003c/li\u003e\u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREDIRECT_PERMANENT*\u003c/strong\u003e - Redirects to the url you\n            specified in the forwardTo field using a `301 Moved Permanently`\n            HTTP response. The HTTP 301 response code tells user-agents\n            (including search engines) that the location has permanently\n            moved.\u003c/li\u003e\u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREDIRECT_TEMPORARY\u003c/strong\u003e - Redirects to the url you\n            specified in the forwardTo field using a `302 Found` HTTP response.\n            The HTTP 302 response code tells user-agents (including search\n            engines) that the location has temporarily moved.\u003c/li\u003e\u003c/ul\u003e\n          default: REDIRECT_PERMANENT\n          enum:\n            - MASKED\n            - REDIRECT_PERMANENT\n            - REDIRECT_TEMPORARY\n        url:\n          type: string\n          description: \u003e-\n            Forwards http(s) traffic to this destination url (ex.\n            http://www.somedomain.com/)\n          format: url\n        mask:\n          $ref: '#/components/schemas/DomainForwardingMask'\n    DomainTransferIn:\n      required:\n        - authCode\n        - consent\n      type: object\n      properties:\n        authCode:\n          type: string\n          description: Authorization code from registrar for transferring a domain\n        consent:\n          $ref: '#/components/schemas/Consent'\n        period:\n          maximum: 10\n          minimum: 1\n          type: integer\n          description: \u003e-\n            Can be more than 1 but no more than 10 years total including current\n            registration length\n          format: integer-positive\n        privacy:\n          type: boolean\n          description: Whether or not privacy has been requested\n          default: false\n        renewAuto:\n          type: boolean\n          description: \u003e-\n            Whether or not the domain should be configured to automatically\n            renew\n          default: true\n        contactAdmin:\n          $ref: '#/components/schemas/Contact'\n        contactBilling:\n          $ref: '#/components/schemas/Contact'\n        contactRegistrant:\n          $ref: '#/components/schemas/Contact'\n        contactTech:\n          $ref: '#/components/schemas/Contact'\n    DomainUpdate:\n      type: object\n      properties:\n        locked:\n          type: boolean\n          description: Whether or not the domain should be locked to prevent transfers\n        nameServers:\n          type: array\n          description: \u003e-\n            Fully-qualified domain names for Name Servers to associate with the\n            domain\n          items:\n            type: object\n            format: host-name\n        renewAuto:\n          type: boolean\n          description: \u003e-\n            Whether or not the domain should be configured to automatically\n            renew\n        subaccountId:\n          type: string\n          description: Reseller subaccount shopperid who can manage the domain\n        exposeWhois:\n          type: boolean\n          description: \u003e-\n            Whether or not the domain contact details should be shown in the\n            WHOIS\n        consent:\n          $ref: '#/components/schemas/ConsentDomainUpdate'\n    DomainsContactsBulk:\n      required:\n        - domains\n      type: object\n      properties:\n        contactAdmin:\n          $ref: '#/components/schemas/Contact'\n        contactBilling:\n          $ref: '#/components/schemas/Contact'\n        contactPresence:\n          $ref: '#/components/schemas/Contact'\n        contactRegistrant:\n          $ref: '#/components/schemas/Contact'\n        contactTech:\n          $ref: '#/components/schemas/Contact'\n        domains:\n          type: array\n          description: \u003e-\n            An array of domain names to be validated against. Alternatively, you\n            can specify the extracted tlds. However, full domain names are\n            required if the tld is `uk`\n          items:\n            type: string\n            format: domain\n        entityType:\n          type: string\n          description: Canadian Presence Requirement (CA)\n          enum:\n            - ABORIGINAL\n            - ASSOCIATION\n            - CITIZEN\n            - CORPORATION\n            - EDUCATIONAL\n            - GOVERNMENT\n            - HOSPITAL\n            - INDIAN_BAND\n            - LEGAL_REPRESENTATIVE\n            - LIBRARY_ARCHIVE_MUSEUM\n            - MARK_REGISTERED\n            - MARK_TRADE\n            - PARTNERSHIP\n            - POLITICAL_PARTY\n            - RESIDENT_PERMANENT\n            - TRUST\n            - UNION\n    Error:\n      required:\n        - code\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        fields:\n          type: array\n          description: \u003e-\n            List of the specific fields, and the errors found with their\n            contents\n          items:\n            $ref: '#/components/schemas/ErrorField'\n        message:\n          type: string\n          description: Human-readable, English description of the error\n    ErrorDomainContactsValidate:\n      required:\n        - code\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        fields:\n          type: array\n          description: \u003e-\n            List of the specific fields, and the errors found with their\n            contents\n          items:\n            $ref: '#/components/schemas/ErrorFieldDomainContactsValidate'\n        message:\n          type: string\n          description: Human-readable, English description of the error\n        stack:\n          type: array\n          description: \u003e-\n            Stack trace indicating where the error occurred.\u003cbr/\u003eNOTE: This\n            attribute \u003cstrong\u003eMAY\u003c/strong\u003e be included for Development and Test\n            environments. However, it \u003cstrong\u003eMUST NOT\u003c/strong\u003e be exposed from\n            OTE nor Production systems\n          items:\n            type: string\n    ErrorField:\n      required:\n        - code\n        - path\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        message:\n          type: string\n          description: \u003e-\n            Human-readable, English description of the problem with the contents\n            of the field\n        path:\n          type: string\n          description: \u003e-\n            \u003cul\u003e\n\n            \u003cli style='margin-left: 12px;'\u003eJSONPath referring to a field\n            containing an error\u003c/li\u003e\n\n            \u003cstrong style='margin-left: 12px;'\u003eOR\u003c/strong\u003e\n\n            \u003cli style='margin-left: 12px;'\u003eJSONPath referring to a field that\n            refers to an object containing an error, with more detail in\n            `pathRelated`\u003c/li\u003e\n\n            \u003c/ul\u003e\n          format: json-path\n        pathRelated:\n          type: string\n          description: \u003e-\n            JSONPath referring to a field containing an error, which is\n            referenced by `path`\n          format: json-path\n    ErrorFieldDomainContactsValidate:\n      required:\n        - code\n        - domains\n        - path\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        domains:\n          type: array\n          description: \u003e-\n            An array of domain names the error is for. If tlds are specified in\n            the request, `domains` will contain tlds. For example, if `domains`\n            in request is [\"test1.com\", \"test2.uk\", \"net\"], and the field is\n            invalid for com and net, then one of the `fields` in response will\n            have [\"test1.com\", \"net\"] as `domains`\n          items:\n            type: string\n        message:\n          type: string\n          description: \u003e-\n            Human-readable, English description of the problem with the contents\n            of the field\n        path:\n          type: string\n          description: \u003e-\n            1) JSONPath referring to the field within the data containing an\n            error\u003cbr/\u003eor\u003cbr/\u003e2) JSONPath referring to an object containing an\n            error\n          format: json-path\n        pathRelated:\n          type: string\n          description: \u003e-\n            JSONPath referring to the field on the object referenced by `path`\n            containing an error\n          format: json-path\n    ErrorLimit:\n      required:\n        - code\n        - retryAfterSec\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        fields:\n          type: array\n          description: \u003e-\n            List of the specific fields, and the errors found with their\n            contents\n          items:\n            $ref: '#/components/schemas/ErrorField'\n        message:\n          type: string\n          description: Human-readable, English description of the error\n        retryAfterSec:\n          type: integer\n          description: Number of seconds to wait before attempting a similar request\n          format: integer-positive\n    JsonDataType:\n      required:\n        - type\n      type: object\n      properties:\n        format:\n          type: string\n        pattern:\n          type: string\n        type:\n          type: string\n    JsonProperty:\n      required:\n        - required\n        - type\n      type: object\n      properties:\n        defaultValue:\n          type: string\n        format:\n          type: string\n        items:\n          type: object\n          properties: {}\n        maxItems:\n          type: integer\n        maximum:\n          type: integer\n        minItems:\n          type: integer\n        minimum:\n          type: integer\n        pattern:\n          type: string\n        required:\n          type: boolean\n        type:\n          type: string\n    JsonSchema:\n      required:\n        - id\n        - models\n        - properties\n        - required\n      type: object\n      properties:\n        id:\n          type: string\n        models:\n          type: object\n          properties: {}\n        properties:\n          type: object\n          properties: {}\n        required:\n          type: array\n          items:\n            type: string\n    LegalAgreement:\n      required:\n        - agreementKey\n        - content\n        - title\n      type: object\n      properties:\n        agreementKey:\n          type: string\n          description: Unique identifier for the legal agreement\n        content:\n          type: string\n          description: Contents of the legal agreement, suitable for embedding\n        title:\n          type: string\n          description: Title of the legal agreement\n        url:\n          type: string\n          description: URL to a page containing the legal agreement\n          format: url\n    PrivacyPurchase:\n      required:\n        - consent\n      type: object\n      properties:\n        consent:\n          $ref: '#/components/schemas/Consent'\n    RealNameValidation:\n      type: object\n      properties:\n        status:\n          type: string\n          enum:\n            - APPROVED\n            - PENDING\n            - PENDING_ASSOCIATION_WITH_DOMAIN\n            - PENDING_SUBMISSION_TO_VERIFICATION_SERVICE\n            - PENDING_VERIFICATION_SERVICE_REPLY\n            - PENDING_SUBMISSION_TO_REGISTRY\n            - PENDING_REGISTRY_REPLY\n            - PENDING_DOMAIN_UPDATE\n            - REJECTED\n    TldSummary:\n      required:\n        - name\n        - type\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the top-level domain\n          format: tld\n        type:\n          type: string\n          description: Type of the top-level domain\n          default: GENERIC\n          enum:\n            - COUNTRY_CODE\n            - GENERIC\n    VerificationDomainName:\n      required:\n        - status\n      type: object\n      properties:\n        status:\n          type: string\n          description: Status of the domain name verification\n          enum:\n            - APPROVED\n            - PENDING\n            - REJECTED\n            - UNABLE_TO_RETRIEVE_STATUS\n    VerificationRealName:\n      required:\n        - status\n      type: object\n      properties:\n        status:\n          type: string\n          description: \u003e-\n            Status of the real name verification\u003cbr/\u003e\u003cul\u003e \u003cli\u003e\u003cstrong\n            style='margin-left: 12px;'\u003eAPPROVED\u003c/strong\u003e - All is well\u003c/li\u003e\n            \u003cli\u003e\u003cstrong style='margin-left: 12px;'\u003ePENDING\u003c/strong\u003e - Real name\n            verification is working its way through the workflow\u003c/li\u003e\n            \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_DOCUMENT_OUTDATED\u003c/strong\u003e - Local government\n            verification shows there is a newer version of your document. \n            Upload the latest version of the document and retry real name\n            verification\u003c/li\u003e \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_EXPIRED_BUSINESS_LICENSE\u003c/strong\u003e - Business license\n            is expired\u003c/li\u003e \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_EXPIRED_ORGANIZATION_CODE\u003c/strong\u003e - Organization\n            code certificate number has expired\u003c/li\u003e \u003cli\u003e\u003cstrong\n            style='margin-left: 12px;'\u003eREJECTED_ILLEGIBLE_DOCUMENT_NAME\u003c/strong\u003e\n            - There isn’t a clear name on your uploaded document, please upload\n            a different document to retry real name verification\u003c/li\u003e\n            \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_ILLEGIBLE_IDENTIFICATION\u003c/strong\u003e - Registrant\n            identification is not clear.  Upload a better image to retry\u003c/li\u003e\n            \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_INCOMPLETE_IDENTIFICATION\u003c/strong\u003e - Registrant\n            identification is incomplete\u003c/li\u003e \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_INCOMPLETE_REGISTRATION_LETTER\u003c/strong\u003e -\n            Registration letter is incomplete\u003c/li\u003e \u003cli\u003e\u003cstrong\n            style='margin-left:\n            12px;'\u003eREJECTED_INCONSISTENT_IDENTITY_CARD\u003c/strong\u003e - Provided\n            identity card is inconsistent with the identity card on record\u003c/li\u003e\n            \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_INCONSISTENT_ORGANIZATION_CODE\u003c/strong\u003e - Provided\n            organization information is inconsistent with the results obtained\n            using the submitted organization code\u003c/li\u003e \u003cli\u003e\u003cstrong\n            style='margin-left:\n            12px;'\u003eREJECTED_INCONSISTENT_REGISTRANT_NAME\u003c/strong\u003e - Name on the\n            registrant identification does not match the name in the system\u003c/li\u003e\n            \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_INVALID_BUSINESS_LICENSE_OR_ORGANIZATION_CODE\u003c/strong\u003e\n            - Your document contains an invalid business license or organization\n            code certificate number\u003c/li\u003e \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_INVALID_DOCUMENT\u003c/strong\u003e - Document is invalid. \n            Please upload another document to retry real name verification\u003c/li\u003e\n            \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_MISMATCH_BUSINESS_ID\u003c/strong\u003e - Business id does not\n            match the business id in the document\u003c/li\u003e \u003cli\u003e\u003cstrong\n            style='margin-left: 12px;'\u003eREJECTED_MISMATCH_BUSINESS_NAME\u003c/strong\u003e\n            - Business name does not match the business name in the\n            document\u003c/li\u003e \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_MISMATCH_DOCUMENT_ID\u003c/strong\u003e - Document id does not\n            match the id in the document\u003c/li\u003e \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_MISMATCH_DOCUMENT_NAME\u003c/strong\u003e - Document name does\n            not match the name in the document\u003c/li\u003e \u003cli\u003e\u003cstrong\n            style='margin-left: 12px;'\u003eREJECTED_MISMATCH_DOCUMENT_TYPE\u003c/strong\u003e\n            - Document type does not match the document\u003c/li\u003e \u003cli\u003e\u003cstrong\n            style='margin-left:\n            12px;'\u003eREJECTED_MISMATCH_REGISTRANT_INFO\u003c/strong\u003e - The information\n            provided for the registrant does not match the document\u003c/li\u003e\n            \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_MISMATCH_REGISTRANT_LOCALITY\u003c/strong\u003e - Registrant\n            region is overseas, but a local identity document was provided\u003c/li\u003e\n            \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_MISMATCH_REGISTRANT_NAME\u003c/strong\u003e - Registrant name\n            has been changed, so the request must be resubmitted\u003c/li\u003e\n            \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_UNABLE_TO_OPEN\u003c/strong\u003e - Registrant identification\n            could not be opened.  Please upload the document again to retry real\n            name verification\u003c/li\u003e \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_UNABLE_TO_VERIFY\u003c/strong\u003e - Unable to initiate\n            verification.  Please upload the document again to retry real name\n            verification\u003c/li\u003e \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eREJECTED_UNKNOWN_ERROR\u003c/strong\u003e - Document was rejected due\n            to an unknown error. For more information, contact customer\n            support\u003c/li\u003e \u003cli\u003e\u003cstrong style='margin-left:\n            12px;'\u003eUNABLE_TO_RETRIEVE_STATUS\u003c/strong\u003e - Unable to retrieve\n            status for the real name verification process.  Retry, if this\n            status persists, contact customer support\u003c/li\u003e \u003c/ul\u003e\n          enum:\n            - APPROVED\n            - PENDING\n            - REJECTED_DOCUMENT_OUTDATED\n            - REJECTED_EXPIRED_BUSINESS_LICENSE\n            - REJECTED_EXPIRED_ORGANIZATION_CODE\n            - REJECTED_ILLEGIBLE_DOCUMENT_NAME\n            - REJECTED_ILLEGIBLE_IDENTIFICATION\n            - REJECTED_INCOMPLETE_IDENTIFICATION\n            - REJECTED_INCOMPLETE_REGISTRATION_LETTER\n            - REJECTED_INCONSISTENT_IDENTITY_CARD\n            - REJECTED_INCONSISTENT_ORGANIZATION_CODE\n            - REJECTED_INCONSISTENT_REGISTRANT_NAME\n            - REJECTED_INVALID_BUSINESS_LICENSE_OR_ORGANIZATION_CODE\n            - REJECTED_INVALID_DOCUMENT\n            - REJECTED_MISMATCH_BUSINESS_ID\n            - REJECTED_MISMATCH_BUSINESS_NAME\n            - REJECTED_MISMATCH_DOCUMENT_ID\n            - REJECTED_MISMATCH_DOCUMENT_NAME\n            - REJECTED_MISMATCH_DOCUMENT_TYPE\n            - REJECTED_MISMATCH_REGISTRANT_INFO\n            - REJECTED_MISMATCH_REGISTRANT_LOCALITY\n            - REJECTED_MISMATCH_REGISTRANT_NAME\n            - REJECTED_UNABLE_TO_OPEN\n            - REJECTED_UNABLE_TO_VERIFY\n            - REJECTED_UNKNOWN_ERROR\n            - UNABLE_TO_RETRIEVE_STATUS\n    VerificationsDomain:\n      type: object\n      properties:\n        domainName:\n          $ref: '#/components/schemas/VerificationDomainName'\n        realName:\n          $ref: '#/components/schemas/VerificationRealName'\n    domain:\n      type: object\n      properties:\n        id:\n          type: number\n          format: double\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/godaddy.domains/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/godaddy.domains/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/domains/{domain}\": get: responses: 200: contents: application/json: generate schema: field contactAdmin: field addressMailing: field country: primitive: format \"iso-country-code\": enum format not implemented",
	"NotImplemented": [
		"enum format"
	]
}