{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/docs-apim"
		},
		"file": {
			"name": "service-catalog-v1.yaml",
			"size": 0,
			"path": "en/docs/reference/product-apis/service-catalog-apis/service-catalog-v1/service-catalog-v1.yaml",
			"byteSize": 38427,
			"content": "#   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#---------------------------------------------------------------------------\n\nopenapi: \"3.0.0\"\ninfo:\n  title: Service Catalog APIs\n  description: |\n    This specifies a **RESTful API** for Service Catalog.\n\n    # Authentication\n    Our REST APIs are protected using OAuth2 and access control is achieved through scopes. Before you start invoking\n    the the API you need to obtain an access token with the required scopes. This guide will walk you through the steps\n    that you will need to follow to obtain an access token.\n    First you need to obtain the consumer key/secret key pair by calling the dynamic client registration (DCR) endpoint. You can add your preferred grant types\n    in the payload. A Sample payload is shown below.\n    ```\n      {\n      \"callbackUrl\":\"www.google.lk\",\n      \"clientName\":\"rest_api_service_catalog\",\n      \"owner\":\"admin\",\n      \"grantType\":\"client_credentials password refresh_token\",\n      \"saasApp\":true\n      }\n    ```\n    Create a file (payload.json) with the above sample payload, and use the cURL shown bellow to invoke the DCR endpoint. Authorization header of this should contain the\n    base64 encoded admin username and password.\n    **Format of the request**\n    ```\n      curl -X POST -H \"Authorization: Basic Base64(admin_username:admin_password)\" -H \"Content-Type: application/json\"\n      \\ -d @payload.json https://\u003chost\u003e:\u003cservlet_port\u003e/client-registration/v0.17/register\n    ```\n    **Sample request**\n    ```\n      curl -X POST -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H \"Content-Type: application/json\"\n      \\ -d @payload.json https://localhost:9443/client-registration/v0.17/register\n    ```\n    Following is a sample response after invoking the above curl.\n    ```\n    {\n    \"clientId\": \"fOCi4vNJ59PpHucC2CAYfYuADdMa\",\n    \"clientName\": \"rest_api_service_catalog\",\n    \"callBackURL\": \"www.google.lk\",\n    \"clientSecret\": \"a4FwHlq0iCIKVs2MPIIDnepZnYMa\",\n    \"isSaasApplication\": true,\n    \"appOwner\": \"admin\",\n    \"jsonString\": \"{\\\"grant_types\\\":\\\"client_credentials password refresh_token\\\",\\\"redirect_uris\\\":\\\"www.google.lk\\\",\\\"client_name\\\":\\\"rest_api123\\\"}\",\n    \"jsonAppAttribute\": \"{}\",\n    \"tokenType\": null\n    }\n    ```\n    Next you must use the above client id and secret to obtain the access token.\n    We will be using the password grant type for this, you can use any grant type you desire.\n    You also need to add the proper **scope** when getting the access token. All possible scopes for Service Catalog REST API can be viewed in **OAuth2 Security** section\n    of this document and scope for each resource is given in **authorization** section of resource documentation.\n    Following is the format of the request if you are using the password grant type.\n    ```\n    curl -k -d \"grant_type=password\u0026username=\u003cadmin_username\u003e\u0026password=\u003cadmin_passowrd\u003e\u0026scope=\u003cscopes seperated by space\u003e\"\n    \\ -H \"Authorization: Basic base64(cliet_id:client_secret)\"\n    \\ https://\u003chost\u003e:\u003cservlet_port\u003e/oauth2/token\n    ```\n    **Sample request**\n    ```\n    curl https://localhost:9443/oauth2/token -k \\\n    -H \"Authorization: Basic Zk9DaTR2Tko1OVBwSHVjQzJDQVlmWXVBRGRNYTphNEZ3SGxxMGlDSUtWczJNUElJRG5lcFpuWU1h\" \\\n    -d \"grant_type=password\u0026username=admin\u0026password=admin\u0026scope=service_catalog:service_view service_catalog:service_write\"\n    ```\n    Shown below is a sample response to the above request.\n    ```\n    {\n    \"access_token\": \"e79bda48-3406-3178-acce-f6e4dbdcbb12\",\n    \"refresh_token\": \"a757795d-e69f-38b8-bd85-9aded677a97c\",\n    \"scope\": \"service_catalog:service_view service_catalog:service_write\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 3600\n    }\n    ```\n    Now you have a valid access token, which you can use to invoke an API.\n    Navigate through the API descriptions to find the required API, obtain an access token as described above and invoke the API with the authentication header.\n    If you use a different authentication mechanism, this process may change.\n\n  version: '0.9'\nservers:\n  - url: 'https://apis.wso2.com/api/service-catalog/v0'\n  - url: 'http://apis.wso2.com/api/service-catalog/v0'\n\npaths:\n  ######################################################\n  # The Service Catalog API operations\n  ######################################################\n  /services:\n  \n    #-----------------------------------------------------\n    # Retrieve/search services in the Service Catalog\n    #-----------------------------------------------------\n    get:\n      summary: Retrieve/search services\n      description: |\n        Retrieve or search services in the Service Catalog of the user's organization or tenant. Search is supported\n        using the name, version, definitionType and key of the service.\n        Search based on the definition type and key of the service will always be an exact search. If you want to\n        execute an exact search for either name or version the parameter should be given inside double quotation.\n      operationId: searchServices\n      security:\n        - OAuth2Security:\n            - service_catalog:service_view\n      tags:\n        - Services\n      parameters:\n        - name: name\n          in: query\n          description: |\n            Filter services by the name of the service\n          schema:\n            type: string\n        - name: version\n          in: query\n          description: |\n            Filter services by version of the service\n          schema:\n            type: string\n        - name: definitionType\n          in: query\n          description: |\n            Filter services by definitionType\n          schema:\n            type: string\n            enum:\n              - OAS\n              - WSDL1\n              - WSDL2\n              - GRAPHQL_SDL\n              - ASYNC_API\n        - name: key\n          in: query\n          description: |\n            Comma seperated keys of the services to check\n          schema:\n            type: string\n        - name: shrink\n          in: query\n          description: |\n            If this set to true, a minimal set of fields will be provided for each service including the md5\n          schema:\n            type: boolean\n            default: false\n        - $ref: '#/components/parameters/sortBy'\n        - $ref: '#/components/parameters/sortOrder'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/offset'\n      responses:\n        200:\n          description: |\n            Paginated matched list of services returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceList'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      x-code-samples:\n        - lang: Curl\n          label: Exact search by name\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n                    \"https://127.0.0.1:9443/api/am/service-catalog/v0/services?name=%22Pet%20Service%22\"'\n        - lang: Curl\n          label: Matching search by name\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n                    \"https://127.0.0.1:9443/api/am/service-catalog/v0/services?name=Pet%20Service\"'\n        - lang: Curl\n          label: Exact search by version\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n                    \"https://127.0.0.1:9443/api/am/service-catalog/v0/services?version=%221.0.0%22\"'\n        - lang: Curl\n          label: Matching search by version\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n                    \"https://127.0.0.1:9443/api/am/service-catalog/v0/services?version=1.0.0\"'\n        - lang: Curl\n          label: Get all versions of a service\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n                    \"https://127.0.0.1:9443/api/am/service-catalog/v0/services?name=%22Pet%20Service%22\"'\n\n    #-----------------------------------------------------\n    # Adds new service to the Service Catalog\n    #-----------------------------------------------------\n    post:\n      summary: Add a new service to Service Catalog\n      description: |\n        Add a new service to the Service Catalog of the user's organization (or tenant)\n        by specifying the details of the service along with its definition. \n      security:\n        - OAuth2Security:\n            - service_catalog:service_write\n      tags:\n        - Services\n      operationId: addService\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ServiceSchema'\n      responses:\n        201:\n          description: |\n            Created.\n            Successful response with the newly created service as the response payload\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Service'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        415:\n          $ref: '#/components/responses/UnsupportedMediaType'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      x-code-samples:\n        - lang: Curl\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F \"definitionFile=@definition.yaml\" -F \"serviceMetadata=@metadata.json;type=application/json\" \"https://127.0.0.1:9443/api/am/service-catalog/v0/services\"'\n\n  /services/{serviceId}:\n    #-----------------------------------------------------\n    # Retrieve a specific service in the Service Catalog\n    #-----------------------------------------------------\n    get:\n      summary: Get details of a service\n      description: |\n        Get details of a service using the id of the service.\n      security:\n        - OAuth2Security:\n            - service_catalog:service_view\n      operationId: getServiceById\n      tags:\n        - Services\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n      responses:\n        200:\n          description: |\n            Requested service in the Service Catalog is returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Service'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      x-code-samples:\n        - lang: Curl\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n                \"https://127.0.0.1:9443/api/am/service-catalog/v0/services\"'\n\n    #-----------------------------------------------------\n    # Update a service in the Service Catalog\n    #-----------------------------------------------------\n    put:\n      summary: Update a service\n      description: |\n        Update a service's details and definition\n      security:\n        - OAuth2Security:\n            - service_catalog:service_write\n      operationId: updateService\n      tags:\n        - Services\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ServiceSchema'\n      responses:\n        200:\n          description: |\n            Updated.\n            Successful response with the newly updated service as entity in the body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Service'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      x-code-samples:\n        - lang: Curl\n          source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F \"definitionFile=@definition.yaml\" -F \"serviceMetadata=@metadata.json;type=application/json\"\n           \"https://127.0.0.1:9443/api/am/service-catalog/v0/services/7b3d976a-620a-4435-9649-e806f30dc7cf\"'\n\n    #-----------------------------------------------------\n    # Delete a service in the Service Catalog\n    #-----------------------------------------------------\n    delete:\n      summary: Delete a service\n      description: |\n        Delete a service by providing the service id\n      security:\n        - OAuth2Security:\n            - service_catalog:service_write\n      operationId: deleteService\n      tags:\n        - Services\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n      responses:\n        204:\n          description: |\n            Successfully deleted the catalog entry.\n        400:\n          $ref: '#/components/responses/BadRequest'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n        409:\n          $ref: '#/components/responses/Conflict'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      x-code-samples:\n        - lang: Curl\n          source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n                \"https://127.0.0.1:9443/api/am/service-catalog/v0/services/32b4541f-ce7e-47a6-9c0c-c3db18128c50\"'\n\n  #-----------------------------------------------------\n  # Retrieve definition of a service in the Service Catalog\n  #-----------------------------------------------------\n  /services/{serviceId}/definition:\n    get:\n      summary: Retrieve a service definition\n      description: |\n        Retrieve the definition of a service identified by the service id.\n      security:\n        - OAuth2Security:\n            - service_catalog:service_view\n      operationId: getServiceDefinition\n      tags:\n        - Services\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n      responses:\n        200:\n          description: |\n            Successful response with the definition file as entity in the body.\n          content:\n            application/yaml:\n              schema:\n                type: string\n                format: binary\n              examples: \n                oasDefinition:\n                  externalValue:  https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/examples/v2.0/yaml/uber.yaml\n                  \n        400:\n          $ref: '#/components/responses/BadRequest'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      x-code-samples:\n        - lang: Curl\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n            \"https://127.0.0.1:9443/api/am/service-catalog/v0/services/3784c2da-2f2a-4af9-8a43-ef207fb4d739/definition\"'\n\n  #-------------------------------------------------------------------\n  # Retrieve the information of APIs that use a given service\n  #-------------------------------------------------------------------\n  /services/{serviceId}/usage:\n    get:\n      summary: Retrieve the usage of service\n      description: |\n        Retrieve the id, name, context and version of the APIs that used by the service\n      security:\n        - OAuth2Security:\n            - service_catalog:service_view\n      operationId: getServiceUsage\n      tags:\n        - Services\n      parameters:\n        - $ref: '#/components/parameters/serviceId'\n      responses:\n        200:\n          description: |\n            List of APIs that uses the service in the Service Catalog is returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIList'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      x-code-samples:\n        - lang: Curl\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n                \"https://127.0.0.1:9443/api/am/service-catalog/v0/services/3784c2da-2f2a-4af9-8a43-ef207fb4d739/usage\"'\n\n  #-------------------------------------------------------------------\n  # Import a service into the Service Catalog from a zipped archive\n  #-------------------------------------------------------------------\n  /services/import:\n    post:\n      summary: Import a service\n      description: |\n        Import one or more services by providing an archived consisting of metadata and definition of the services\n      security:\n        - OAuth2Security:\n            - service_catalog:service_write\n      operationId: importService\n      tags:\n        - Services\n      parameters:\n        - name: overwrite\n          in: query\n          description: |\n            Whether to overwrite if there is any existing service with the same name and version.\n          required: false\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        required: false\n        content:\n          multipart/form-data:\n            schema:\n              required:\n                - file\n              properties:\n                file:\n                  type: string\n                  description: |\n                    An an archive consisting of metadata and definition of the service. You can upload archive file with either single service\n                    or multiple services. Folder structure of the zip file should be in the format given below.\n                    ``` bash\n                    \u003czip_file\u003e.\n                    ├── service1\n                    │   ├── definition.yaml\n                    │   └── metadata.yaml\n                    └── service2\n                        ├── definition.yaml\n                        └── metadata.yaml\n                    └── service3\n                        ├── definition.wsdl\n                        └── metadata.yaml\n                    ```\n                  format: binary\n                verifier:\n                  type: string\n                  description: |\n                    `verifier` is an optional parameter which is used in validating the request when this resource used to update existing services.\n                    If verifier validation fails, the service import will be failed.\n                    `verifier` is a JSON, contains the key and MD5 of the service and should be in followimg format.\n                    ``` json\n                      [\n                        {\n                          \"key\":\"service1-1.0.0\",\n                          \"md5\":\"6d6ac8a03c2cd5b95fbdda7c66ef285ebcbe4da2198807c5c9aa3be7e401f6a1\"\n                        },\n                        {\n                          \"key\":\"service2-1.0.0\",\n                          \"md5\":\"7f5850d98866b5ce34fa1812d0e6d080ad8b7082cd9387eb80311ba75bfe776\"\n                        },\n                        {\n                          \"key\":\"service3-1.0.0\",\n                          \"md5\":\"8f5850d98866b5ce34fa1812d0e6d080ad8b7082cd9387eb80311ba75bfe8b2\"\n                        }\n                      ]\n                    ```\n      responses:\n        200:\n          description: |\n            Successful response with the imported service metadata.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInfoList'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      x-code-samples:\n        - lang: Curl\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n              -F \"file=@services.zip\" \"https://127.0.0.1:9443/api/am/service-catalog/v0/services/import?overwrite=true\"'\n                \n  #----------------------------------------------------------\n  # Exporting a service as a zipped archive\n  #----------------------------------------------------------\n  /services/export:\n\n    #-----------------------------------------\n    # Retrieve a service as a zipped archive\n    #-----------------------------------------\n    get:\n      summary: Export a service\n      description: |\n        Export a service as an archived zip file.\n      security:\n        - OAuth2Security:\n            - service_catalog:service_view\n      operationId: exportService\n      tags:\n        - Services\n      parameters:\n        - name: name\n          in: query\n          description: |\n            Name of the service to export\n          required: true\n          schema:\n            type: string\n        - name: version\n          in: query\n          description: |\n            Version of the service to export\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: |\n            Successful response as the exported service as a zipped archive.\n          content:\n            application/zip:\n              schema:\n                type: string\n                format: binary\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      x-code-samples:\n        - lang: Curl\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/service-catalog/v0/services/export?name=Single1Curl\u0026version=1.0.0\" \u003e services.zip'\n\n  ######################################################\n  # The Service Catalog API settings\n  ######################################################\n  /settings:\n    #-----------------------------------------------------\n    # Retrieve Service Catalog settings\n    #-----------------------------------------------------\n    get:\n      summary: Retrieve Service Catalog API settings\n      description: |\n        Retrieve Service Catalog API settings\n      operationId: getSettings\n      tags:\n        - Settings\n      responses:\n        200:\n          description: |\n            OK.\n            Settings returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Settings'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      x-code-samples:\n        - lang: Curl\n          source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n                  \"https://127.0.0.1:9443/api/am/service-catalog/v0/settings\"'\n\ncomponents:\n  #-------------------------------------------------------\n  # The security schemes of resources used by some of the APIs\n  #-------------------------------------------------------\n  securitySchemes:\n    OAuth2Security:\n      type: oauth2\n      flows:\n        password:\n          tokenUrl: https://localhost:9443/oauth2/token\n          scopes:\n            service_catalog:service_view: view access to services in Service Catalog\n            service_catalog:service_write: write access to services in Service Catalog\n\n  #-------------------------------------------------------\n  # The definitions of resources used by some of the APIs\n  #-------------------------------------------------------\n  schemas:\n    ServiceInfoList:\n      title: Services List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            MD5 hashes of services returned.\n          example: 1\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceInfo'\n          \n    ServiceListExpanded:\n      title: Services List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            MD5 hashes of services returned.\n          example: 1\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/Service'\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n\n    APIList:\n      title: API List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: |\n            Number of APIs returned.\n          example: 1\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/APIInfo'\n\n    APIInfo:\n      title: API Info object with basic API details.\n      type: object\n      properties:\n        id:\n          type: string\n          example: 01234567-0123-0123-0123-012345678901\n        name:\n          type: string\n          example: CalculatorAPI\n        context:\n          type: string\n          example: CalculatorAPI\n        version:\n          type: string\n          example: 1.0.0\n        provider:\n          type: string\n          example: admin\n          \n    #-----------------------------------------------------\n    # The Service Catalog Entry resource\n    #-----------------------------------------------------\n    Verifier:\n      type: object\n      title: Json array of md5 hash values of Service Catalog Entry objects\n      required:\n        - key\n        - md5\n      properties:\n        key:\n          type: string\n          pattern: '^[^\\*]+$'\n          example: petStore-1.0.0\n        md5:\n          type: string\n          example: e27ef979af14c72783b8112dc41c3434c09763ddb230e1a829d5f9134d1abd07\n\n    #-----------------------------------------------------\n    # The Paginated Service Entry Array resource\n    #-----------------------------------------------------\n    ServiceList:\n      type: object\n      title: Paginated List of Services in Service Catalog\n      properties:\n        list:\n          type: array\n          title: List of Services in Service Catalog\n          items:\n            $ref: '#/components/schemas/Service'\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n\n    #-----------------------------------------------------\n    # The Service resource model\n    #-----------------------------------------------------\n    Service:\n      type: object\n      title: The Service Object\n      required:\n        - name\n        - version\n        - definitionType\n        - serviceUrl\n      properties:\n        id:\n          type: string\n          example: 01234567-0123-0123-0123-012345678901\n          readOnly: true\n        name:\n          type: string\n          pattern: '^[^\\*]+$'\n          example: Pizzashack-Endpoint\n          maxLength: 255\n          minLength: 1\n        description:\n          type: string\n          example: A Catalog Entry that exposes a REST endpoint\n          maxLength: 1024\n        version:\n          type: string\n          example: v1\n          maxLength: 30\n          minLength: 1\n        serviceKey:\n          type: string\n          example: Pizzashack-Endpoint-1.0.0\n          maxLength: 512\n        serviceUrl:\n          type: string\n          example: http://localhost/pizzashack\n        definitionType:\n          type: string\n          description: The type of the provided API definition\n          example: OAS3\n          enum:\n            - OAS2\n            - OAS3\n            - WSDL1\n            - WSDL2\n            - GRAPHQL_SDL\n            - ASYNC_API\n        securityType:\n          type: string\n          description: The security type of the endpoint\n          example: BASIC\n          enum:\n            - BASIC\n            - DIGEST\n            - OAUTH2\n            - X509\n            - API_KEY\n            - NONE\n          default: NONE\n        mutualSSLEnabled:\n          type: boolean\n          description: Whether Mutual SSL is enabled for the endpoint\n          default: false\n          example: false\n        usage:\n          type: integer\n          description: Number of usages of the service in APIs\n          readOnly: true\n          example: 1\n        createdTime:\n          type: string\n          readOnly: true\n          example: '2020-02-20T13:57:16.229'\n        lastUpdatedTime:\n          type: string\n          readOnly: true\n          example: '2020-02-20T13:57:16.229'\n        md5:\n          type: string\n          example: 36583a6a249b410e7fc4f892029709cac09763ddb230e1a829d5f9134d1abd07\n        definitionUrl:\n          type: string\n          example: https://petstore.swagger.io/v2/swagger.yaml\n    \n    ServiceInfo:\n      type: object\n      title: The Service Info object\n      properties:\n        id:\n          type: string\n          example: 01234567-0123-0123-0123-012345678901\n          readOnly: true\n        name:\n          type: string\n          pattern: '^[^\\*]+$'\n          example: PizzashackEndpoint\n        key:\n          type: string\n          example: PizzashackEndpoint-1.0.0\n        version:\n          type: string\n          example: v1\n        md5:\n          type: string\n          example: 36583a6a249b410e7fc4f892029709cac09763ddb230e1a829d5f9134d1abd07\n          \n    #-----------------------------------------------------\n    # The Service Schema resource\n    #-----------------------------------------------------\n    ServiceSchema:\n      type: object\n      title: The Service Schema object\n      required:\n        - serviceMetadata\n        - definitionFile\n      properties:\n        serviceMetadata:\n          $ref: '#/components/schemas/Service'\n        definitionFile:\n          type: string\n          format: binary\n        inlineContent:\n          type: string\n          description: Service definition as inline content (in YAML format)\n\n    #-----------------------------------------------------\n    # The settings resource\n    #-----------------------------------------------------\n    Settings:\n      title: SettingsDTO\n      properties:\n        scopes:\n          type: array\n          items:\n            type: string\n          example: [service_catalog:service_view, service_catalog:service_write]\n\n    #-----------------------------------------------------\n    # The Error resource\n    #-----------------------------------------------------\n    Error:\n      type: object\n      title: Error object returned with 4XX HTTP Status\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int64\n        message:\n          type: string\n          description: Error message.\n        description:\n          type: string\n          description: |\n            A detail description about the error message.\n        moreInfo:\n          type: string\n          description: |\n            Preferably an url with more details about the error.\n        error:\n          type: array\n          description: |\n            If there are more than one error list them out.\n            For example, list out validation errors by each field.\n          items:\n            $ref: '#/components/schemas/ErrorListItem'\n\n    #-----------------------------------------------------\n    # The Error List Item resource\n    #-----------------------------------------------------\n    ErrorListItem:\n      type: object\n      title: Description of individual errors that may have occurred during a request.\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n          description: |\n            Description about individual errors occurred\n        description:\n          type: string\n          description: |\n            A detail description about the error message.\n\n    #-----------------------------------------------------\n    # The pagination resource\n    #-----------------------------------------------------\n    Pagination:\n      title: Pagination\n      properties:\n        offset:\n          type: integer\n          example: 0\n        limit:\n          type: integer\n          example: 1\n        total:\n          type: integer\n          example: 10\n        next:\n          type: string\n          description: |\n            Link to the next subset of resources qualified.\n            Empty if no more resources are to be returned.\n        previous:\n          type: string\n          description: |\n            Link to the previous subset of resources qualified.\n            Empty if current subset is the first subset returned.\n\n  responses:\n    BadRequest:\n      description: Bad Request. Validation Error.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            code: 400\n            message: Bad Request\n            description: Validation Error\n            moreInfo: \"\"\n            error: []\n\n    InternalServerError:\n      description: Internal Server Error.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            code: 500\n            message: Internal Server Error\n            description: The server encountered an internal error. Please contact\n              administrator.\n            moreInfo: \"\"\n            error: []\n\n    NotFound:\n      description: Bad Request. Requested resource with Id '506bd512-f38-4cca-8f4e-d25341b7c3c7' not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            code: 404\n            message: Not Found\n            description: Requested resource with Id '506bd512-f38-4cca-8f4e-d25341b7c3c7' not found\n            moreInfo: \"\"\n            error: []\n\n    Conflict:\n      description: Conflict. Cannot remove the resource as it is used by one or more APIs\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            code: 409\n            message: Conflict\n            description: Cannot remove the Service as it is used by one or more APIs\n            moreInfo: \"\"\n            error: []\n\n    Unauthorized:\n      description: Unauthenticated request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            code: 401\n            message: Unauthenticated\n            description: Unauthenticated request\n            moreInfo: \"\"\n            error: []\n\n    UnsupportedMediaType:\n      description: Unsupported Media Type. The entity of the request was not in a\n        supported format.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            code: 415\n            message: Unsupported media type\n            description: The entity of the request was not in a supported format\n            moreInfo: \"\"\n            error: []\n\n  ######################################################\n  # Parameters - required by some of the APIs above\n  ######################################################\n  parameters:\n\n    #-------------------------------------------------------\n    # serviceId - An id which represents a service in the Service Satalog\n    #-------------------------------------------------------\n    serviceId:\n      name: serviceId\n      in: path\n      description: uuid of the service\n      required: true\n      schema:\n        type: string\n        \n    #-------------------------------------------------------\n    # serviceKey - A key which represents a service in the Service Catalog\n    #-------------------------------------------------------\n    serviceKey:\n      name: serviceKey\n      in: path\n      description: service key of the service\n      required: true\n      schema:\n        type: string\n\n    #-----------------------------------------------------\n    # limit - The maximum number of resources to be returned by a GET\n    #-----------------------------------------------------\n    limit:\n      name: limit\n      in: query\n      description: |\n        Maximum limit of items to return.\n      schema:\n        type: integer\n        default: 25\n\n    #-------------------------------------------------------------------------------\n    # offset - The order number of an instance in a qualified set of\n    # resources at which to start to return the next batch of qualified resources\n    #-------------------------------------------------------------------------------\n    offset:\n      name: offset\n      in: query\n      description: |\n        Starting point within the complete list of items qualified.\n      schema:\n        type: integer\n        default: 0\n\n    #-------------------------------------------------------------------------------\n    # sortBy - sort the returned services list by given field\n    #-------------------------------------------------------------------------------\n    sortBy:\n      name: sortBy\n      in: query\n      schema:\n        type: string\n        enum:\n          - name\n          - definitionType\n    \n    #-------------------------------------------------------------------------------\n    # sortOrder - sort ordering: ascending (asc) or descending (desc)\n    #-------------------------------------------------------------------------------\n    sortOrder:\n      name: sortOrder\n      in: query\n      schema:\n        type: string\n        enum:\n          - asc\n          - desc\n",
			"canonicalURL": "/github.com/wso2/docs-apim@02d8bfc891167379203b665c95e0f1487247f681/-/blob/en/docs/reference/product-apis/service-catalog-apis/service-catalog-v1/service-catalog-v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/docs-apim/blob/02d8bfc891167379203b665c95e0f1487247f681/en/docs/reference/product-apis/service-catalog-apis/service-catalog-v1/service-catalog-v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/services\": get: security: security \"OAuth2Security\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}