{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/model-config"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "rest/light-scheduler/openapi.yaml",
			"byteSize": 4579,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: Light-scheduler REST microservice\n  version: 1.0.0\n  description: |-\n    # light-scheduler implementation with Kafka streams\nservers:\n  - url: https://scheduler.networknt.com\n\npaths:\n  /schedulers:\n    post:\n      operationId: sendScheduleTask\n      summary: Send a new schedule task definition to input topic\n      requestBody:\n        description: task definition\n        required: true\n        content:\n          application/json:\n            schema: \n              $ref: '#/components/schemas/TaskDefinition'\n      responses:\n        '200':\n          description: Schedule task definition sent.\n        '400':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Status\"\n      security:\n        - scheduler_auth:\n            - sched:w\n            - A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2\n\n    get:\n      operationId: getScheduleTaskDefinitions\n      summary: Get a list of schedule task definitions with the following filters\n      parameters:\n        - name: host\n          in: query\n          required: false\n          description: Task definition host\n          schema:\n            type: string\n        - name: name\n          in: query\n          required: false\n          description: Task definition name\n          schema:\n            type: string\n        - name: unit\n          in: query\n          required: false\n          description: Task definition time unit\n          schema:\n            $ref: '#/components/schemas/TimeUnit'\n\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TaskDefinition'\n        '400':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Status\"\n      security:\n        - scheduler_auth:\n            - sched:r\n            - A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2\n\ncomponents:\n  securitySchemes:\n    scheduler_auth:\n      type: oauth2\n      description: This API uses OAuth 2.0 with the client credential grant flow.\n      flows:\n        clientCredentials:\n          tokenUrl: 'https://localhost:6882/token'\n          scopes:\n            sched:w: Scheduler Write\n            sched:r: Scheduler Read\n            A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2: \"API Bootstrap token scope\"\n            \n  schemas:\n    Status:\n      type: object\n      properties:\n        statusCode: \n          description: HTTP response code\n          type: integer\n        code:\n          description: Code is the machine-readable error code\n          type: string\n        message:\n          description: Error messsage\n          type: string\n        description: \n          description: The detailed description of the error status  \n          type: string\n      required:\n      - statusCode\n      - code\n    TaskDefinition:\n      type: object\n      properties:\n        host: \n          description: host that the task is issued.\n          type: string\n        name:\n          description: unique task name within the host\n          type: string\n        action:\n          $ref: '#/components/schemas/DefinitionAction'\n        frequency:\n          $ref: '#/components/schemas/TaskFrequency'\n        topic:\n          description: output topic the task needs to be sent out\n          type: string\n        start:\n          description: start timestamp in milliseconds round by the timeunit\n          type: integer\n          format: int64\n        data:\n          $ref: '#/components/schemas/TaskExecution'\n      required:\n      - host\n      - name\n      - frequency\n      - topic\n\n    TaskExecution:\n      type: object\n      description: additional data in a map of string for task execution\n      additionalProperties: true\n\n    TaskFrequency:\n      type: object\n      properties:\n        timeUnit:\n          $ref: '#/components/schemas/TimeUnit'\n        time: \n          description: number of frequency unit for the time\n          type: integer\n      required:\n      - timeUnit\n      - time\n    TimeUnit:\n      type: string\n      enum: [\n        \"MILLISECONDS\",\n        \"SECONDS\",\n        \"MINUTES\",\n        \"HOURS\",\n        \"DAYS\"\n        ]\n    DefinitionAction:\n      type: string\n      enum: [\n        \"INSERT\",\n        \"UPDATE\",\n        \"DELETE\"\n        ]\n",
			"canonicalURL": "/github.com/networknt/model-config@3fea561d7982c217c1d5d35c1193eac78a7fdcef/-/blob/rest/light-scheduler/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/networknt/model-config/blob/3fea561d7982c217c1d5d35c1193eac78a7fdcef/rest/light-scheduler/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/schedulers\": get: security: security \"scheduler_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}