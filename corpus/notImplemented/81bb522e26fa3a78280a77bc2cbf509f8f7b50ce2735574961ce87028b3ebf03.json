{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/onosproject/config-models"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "models/sdn-fabric-0.1.x/openapi.yaml",
			"byteSize": 47523,
			"content": "# SPDX-FileCopyrightText: 2021-present Open Networking Foundation \u003cinfo@opennetworking.org\u003e\n#\n# SPDX-License-Identifier: Apache-2.0\ncomponents:\n  parameters:\n    fabric-id:\n      content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: fabric-id (target in onos-config)\n      in: path\n      name: fabric-id\n      required: true\n  requestBodies:\n    RequestBody_Dhcp-server:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Dhcp-server'\n    RequestBody_Route:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Route'\n    RequestBody_Switch:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Switch'\n    RequestBody_Switch-model:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Switch-model'\n    RequestBody_Switch-model_Attribute:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Switch-model_Attribute'\n    RequestBody_Switch-model_Port:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Switch-model_Port'\n    RequestBody_Switch_Attribute:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Switch_Attribute'\n    RequestBody_Switch_Management:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Switch_Management'\n    RequestBody_Switch_Port:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Switch_Port'\n    RequestBody_Switch_Port_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Switch_Port_State'\n    RequestBody_Switch_Port_Vlans:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Switch_Port_Vlans'\n    RequestBody_Switch_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Switch_State'\n    RequestBody_Switch_Switch-pair:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Switch_Switch-pair'\n    RequestBody_Switch_Switch-pair_Pairing-port:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Switch_Switch-pair_Pairing-port'\n    RequestBody_Switch_Vlan:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Switch_Vlan'\n  schemas:\n    AdditionalPropertiesUnchTarget:\n      description: both the additional property 'unchanged' and the 'fabric-id'\n      properties:\n        fabric-id:\n          description: an override of the fabric-id (target)\n          title: fabric-id\n          type: string\n        unchanged:\n          description: A comma seperated list of unchanged mandatory attribute names\n          title: unchanged\n          type: string\n      title: AdditionalPropertiesUnchTarget\n      type: object\n    AdditionalPropertyFabric-Id:\n      description: Optionally specify a fabric-id other than the default (only on\n        PATCH method)\n      properties:\n        fabric-id:\n          description: an override of the fabric-id (target)\n          title: fabric-id\n          type: string\n      title: AdditionalPropertyFabric-Id\n      type: object\n    AdditionalPropertyUnchanged:\n      description: To optionally omit 'required' properties, add them to 'unchanged'\n        list\n      properties:\n        unchanged:\n          description: A comma seperated list of unchanged mandatory attribute names\n          title: unchanged\n          type: string\n      title: AdditionalPropertyUnchanged\n      type: object\n    Dhcp-server:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyFabric-Id'\n      description: A list of DHCP Servers (single)\n      properties:\n        address:\n          description: a list of ip addresses\n          pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?\n          title: address\n          type: string\n        description:\n          description: long description field\n          maxLength: 1024\n          minLength: 1\n          title: description\n          type: string\n        dhcp-id:\n          description: The ID of the DHCP Server\n          maxLength: 18446744073709551615\n          minLength: 1\n          pattern: '[a-zA-Z_][a-zA-Z0-9\\-_.]*'\n          title: dhcp-id\n          type: string\n          x-go-type: ListKey\n        display-name:\n          description: display name to use in GUI or CLI\n          maxLength: 80\n          minLength: 1\n          title: display-name\n          type: string\n      required:\n      - dhcp-id\n      title: Dhcp-server\n      type: object\n      x-list-multiple: true\n    Dhcp-server_List:\n      description: A list of DHCP Servers (list)\n      items:\n        $ref: '#/components/schemas/Dhcp-server'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - dhcp-id\n      x-list-multiple: true\n    Route:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertiesUnchTarget'\n      description: A list of routes (single)\n      properties:\n        address:\n          description: IP address of hop\n          title: address\n          type: string\n        description:\n          description: long description field\n          maxLength: 1024\n          minLength: 1\n          title: description\n          type: string\n        display-name:\n          description: display name to use in GUI or CLI\n          maxLength: 80\n          minLength: 1\n          title: display-name\n          type: string\n        metric:\n          description: Metric specifies the priority\n          maximum: 255\n          minimum: 0\n          title: metric\n          type: integer\n        prefix:\n          description: subnet to match packet\n          title: prefix\n          type: string\n        route-id:\n          description: The ID of the route\n          maxLength: 18446744073709551615\n          minLength: 1\n          pattern: '[a-zA-Z_][a-zA-Z0-9\\-_.]*'\n          title: route-id\n          type: string\n          x-go-type: ListKey\n      required:\n      - address\n      - metric\n      - prefix\n      - route-id\n      title: Route\n      type: object\n      x-list-multiple: true\n    Route_List:\n      description: A list of routes (list)\n      items:\n        $ref: '#/components/schemas/Route'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - route-id\n      x-list-multiple: true\n    Switch:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertiesUnchTarget'\n      description: A managed device in the fabric (single)\n      properties:\n        attribute:\n          $ref: '#/components/schemas/Switch_Attribute_List'\n        description:\n          description: long description field\n          maxLength: 1024\n          minLength: 1\n          title: description\n          type: string\n        display-name:\n          description: display name to use in GUI or CLI\n          maxLength: 80\n          minLength: 1\n          title: display-name\n          type: string\n        management:\n          $ref: '#/components/schemas/Switch_Management'\n        model-id:\n          description: link to switch model\n          title: model-id\n          type: string\n          x-leafref: /sm:switch-model/sm:switch-model-id\n        port:\n          $ref: '#/components/schemas/Switch_Port_List'\n        role:\n          description: The role of the switch in the fabric\n          title: role\n          type: string\n        state:\n          $ref: '#/components/schemas/Switch_State'\n        switch-id:\n          description: unique identifier for the switch\n          maxLength: 253\n          minLength: 1\n          pattern: ((([a-zA-Z0-9_]([a-zA-Z0-9\\-_]){0,61})?[a-zA-Z0-9]\\.)*([a-zA-Z0-9_]([a-zA-Z0-9\\-_]){0,61})?[a-zA-Z0-9]\\.?)|\\.\n          title: switch-id\n          type: string\n          x-go-type: ListKey\n        switch-pair:\n          $ref: '#/components/schemas/Switch_Switch-pair'\n        vlan:\n          $ref: '#/components/schemas/Switch_Vlan_List'\n      required:\n      - model-id\n      - role\n      - switch-id\n      title: Switch\n      type: object\n      x-list-multiple: true\n    Switch-model:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyFabric-Id'\n      description: A model of switch (single)\n      properties:\n        attribute:\n          $ref: '#/components/schemas/Switch-model_Attribute_List'\n        description:\n          description: long description field\n          maxLength: 1024\n          minLength: 1\n          title: description\n          type: string\n        display-name:\n          description: display name to use in GUI or CLI\n          maxLength: 80\n          minLength: 1\n          title: display-name\n          type: string\n        pipeline:\n          description: Pipeline configuration - dual or quad\n          title: pipeline\n          type: string\n        port:\n          $ref: '#/components/schemas/Switch-model_Port_List'\n        switch-model-id:\n          description: unique identifier for the switch\n          maxLength: 100\n          minLength: 1\n          pattern: '[a-zA-Z_][a-zA-Z0-9\\-_.]*'\n          title: switch-model-id\n          type: string\n          x-go-type: ListKey\n      required:\n      - switch-model-id\n      title: Switch-model\n      type: object\n      x-list-multiple: true\n    Switch-model_Attribute:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyUnchanged'\n      description: 'a map of extra attributes: string-string (single)'\n      properties:\n        attribute-key:\n          description: the key in a map of attributes\n          maxLength: 40\n          minLength: 1\n          pattern: '[a-zA-Z_][a-zA-Z0-9\\-_.]*'\n          title: attribute-key\n          type: string\n          x-go-type: ListKey\n        value:\n          description: the value of attribute-key\n          maxLength: 200\n          minLength: 1\n          title: value\n          type: string\n      required:\n      - attribute-key\n      - value\n      title: Switch-model_Attribute\n      type: object\n      x-list-multiple: true\n    Switch-model_Attribute_List:\n      description: 'a map of extra attributes: string-string (list)'\n      items:\n        $ref: '#/components/schemas/Switch-model_Attribute'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - attribute-key\n      x-list-multiple: true\n    Switch-model_List:\n      description: A model of switch (list)\n      items:\n        $ref: '#/components/schemas/Switch-model'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - switch-model-id\n      x-list-multiple: true\n    Switch-model_Port:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyUnchanged'\n      description: A port in a switch (single)\n      properties:\n        cage-number:\n          description: identifier of the cage - physical port on switch\n          maximum: 255\n          minimum: 0\n          title: cage-number\n          type: integer\n          x-go-type: ListKey\n        channel-number:\n          description: channel in the port. 0 by default. A splitter can divide the\n            port in to channels\n          maximum: 255\n          minimum: 0\n          title: channel-number\n          type: integer\n          x-go-type: ListKey\n        description:\n          description: long description field\n          maxLength: 1024\n          minLength: 1\n          title: description\n          type: string\n        display-name:\n          description: display name to use in GUI or CLI\n          maxLength: 80\n          minLength: 1\n          title: display-name\n          type: string\n        speeds:\n          $ref: '#/components/schemas/Switch-model_Port_Speeds'\n      required:\n      - cage-number\n      - channel-number\n      title: Switch-model_Port\n      type: object\n      x-list-multiple: true\n    Switch-model_Port_List:\n      description: A port in a switch (list)\n      items:\n        $ref: '#/components/schemas/Switch-model_Port'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - cage-number\n      - channel-number\n      x-list-multiple: true\n    Switch-model_Port_Speeds:\n      items:\n        description: port speed\n        enum:\n        - speed-100g\n        - speed-10g\n        - speed-1g\n        - speed-2-5g\n        - speed-25g\n        - speed-400g\n        - speed-40g\n        - speed-5g\n        - speed-autoneg\n        title: speeds\n        type: string\n      title: leaf-list-speeds\n      type: array\n    Switch_Attribute:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyUnchanged'\n      description: 'a map of extra attributes: string-string (single)'\n      properties:\n        attribute-key:\n          description: the key in a map of attributes\n          maxLength: 40\n          minLength: 1\n          pattern: '[a-zA-Z_][a-zA-Z0-9\\-_.]*'\n          title: attribute-key\n          type: string\n          x-go-type: ListKey\n        value:\n          description: the value of attribute-key\n          maxLength: 200\n          minLength: 1\n          title: value\n          type: string\n      required:\n      - attribute-key\n      - value\n      title: Switch_Attribute\n      type: object\n      x-list-multiple: true\n    Switch_Attribute_List:\n      description: 'a map of extra attributes: string-string (list)'\n      items:\n        $ref: '#/components/schemas/Switch_Attribute'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - attribute-key\n      x-list-multiple: true\n    Switch_List:\n      description: A managed device in the fabric (list)\n      items:\n        $ref: '#/components/schemas/Switch'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - switch-id\n      x-list-multiple: true\n    Switch_Management:\n      description: configuration of the management port\n      properties:\n        address:\n          description: The management IPv4 address\n          pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?\n          title: address\n          type: string\n        port-number:\n          description: The mangement port number\n          maximum: 65535\n          minimum: 0\n          title: port-number\n          type: integer\n      title: Switch_Management\n      type: object\n    Switch_Port:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyUnchanged'\n      description: A port in a switch (single)\n      properties:\n        cage-number:\n          description: reference to the cage-number of the port in the switch model\n          title: cage-number\n          type: string\n          x-go-type: ListKey\n          x-leafref: /sm:switch-model/sm:port/sm:cage-number\n        channel-number:\n          description: reference to the channel-number of the port in the switch model\n          title: channel-number\n          type: string\n          x-go-type: ListKey\n          x-leafref: /sm:switch-model/sm:port/sm:channel-number\n        description:\n          description: long description field\n          maxLength: 1024\n          minLength: 1\n          title: description\n          type: string\n        dhcp-connect-point:\n          $ref: '#/components/schemas/Switch_Port_Dhcp-connect-point'\n        display-name:\n          description: display name to use in GUI or CLI\n          maxLength: 80\n          minLength: 1\n          title: display-name\n          type: string\n        speed:\n          description: configured port speed\n          enum:\n          - speed-100g\n          - speed-10g\n          - speed-1g\n          - speed-2-5g\n          - speed-25g\n          - speed-400g\n          - speed-40g\n          - speed-5g\n          - speed-autoneg\n          title: speed\n          type: string\n        state:\n          $ref: '#/components/schemas/Switch_Port_State'\n        vlans:\n          $ref: '#/components/schemas/Switch_Port_Vlans'\n      required:\n      - cage-number\n      - channel-number\n      - speed\n      title: Switch_Port\n      type: object\n      x-list-multiple: true\n    Switch_Port_Dhcp-connect-point:\n      items:\n        description: Reference to DHCP connect point\n        title: dhcp-connect-point\n        type: string\n        x-leafref: /dhcp:dhcp-server/dhcp:dhcp-id\n      title: leaf-list-dhcp-connect-point\n      type: array\n    Switch_Port_List:\n      description: A port in a switch (list)\n      items:\n        $ref: '#/components/schemas/Switch_Port'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - cage-number\n      - channel-number\n      x-list-multiple: true\n    Switch_Port_State:\n      description: Op state attributes\n      properties:\n        connected:\n          description: 'status of the port: up|down'\n          title: connected\n          type: string\n        observed-speed:\n          description: the speed reported by the port\n          title: observed-speed\n          type: string\n      title: Switch_Port_State\n      type: object\n    Switch_Port_Vlans:\n      description: untagged and tagged vlans per port\n      properties:\n        leaf-list-tagged:\n          items:\n            description: multiple tagged vlans\n            title: tagged\n            type: string\n            x-leafref: ../../../sw:vlan/sw:vlan-id\n          title: leaf-list-tagged\n          type: array\n        untagged:\n          description: vlan for untagged packets\n          title: untagged\n          type: string\n          x-leafref: ../../../sw:vlan/sw:vlan-id\n      title: Switch_Port_Vlans\n      type: object\n    Switch_State:\n      description: Op state attributes\n      properties:\n        connected:\n          description: 'status of the port: up|down'\n          title: connected\n          type: string\n        last-connected:\n          description: Last known time the switch was connected\n          pattern: \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[\\+\\-]\\d{2}:\\d{2})\n          title: last-connected\n          type: string\n      title: Switch_State\n      type: object\n    Switch_Switch-pair:\n      description: A Switch pairing. A switch can participate on 0-1 pairings\n      properties:\n        paired-switch:\n          description: |-\n            Paired switch identifier. A guard rail will require that\n            this field is present when the pairing-port list has at least 1 elements\n          title: paired-switch\n          type: string\n          x-leafref: /sw:switch/sw:switch-id\n        pairing-port:\n          $ref: '#/components/schemas/Switch_Switch-pair_Pairing-port_List'\n      title: Switch_Switch-pair\n      type: object\n    Switch_Switch-pair_Pairing-port:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyUnchanged'\n      description: |-\n        The port on the local switch to establish the paired link\n        In future there may be more than 1 port to provide redundancy.\n        For the initial version this is limited to 1 (single)\n      properties:\n        cage-number:\n          description: 'Port cage number used for connecting to '\n          title: cage-number\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../../../sw:port/sw:cage-number\n        channel-number:\n          description: Port channel number used for Switch A\n          title: channel-number\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../../../sw:port/sw:channel-number\n      required:\n      - cage-number\n      - channel-number\n      title: Switch_Switch-pair_Pairing-port\n      type: object\n      x-list-multiple: true\n    Switch_Switch-pair_Pairing-port_List:\n      description: |-\n        The port on the local switch to establish the paired link\n        In future there may be more than 1 port to provide redundancy.\n        For the initial version this is limited to 1 (list)\n      items:\n        $ref: '#/components/schemas/Switch_Switch-pair_Pairing-port'\n      maxItems: 1\n      type: array\n      uniqueItems: true\n      x-keys:\n      - cage-number\n      - channel-number\n      x-list-multiple: true\n    Switch_Vlan:\n      description: a list of VLANs (single)\n      properties:\n        description:\n          description: long description field\n          maxLength: 1024\n          minLength: 1\n          title: description\n          type: string\n        display-name:\n          description: display name to use in GUI or CLI\n          maxLength: 80\n          minLength: 1\n          title: display-name\n          type: string\n        subnet:\n          $ref: '#/components/schemas/Switch_Vlan_Subnet'\n        vlan-id:\n          description: the VLAN ID\n          maximum: 4096\n          minimum: 0\n          title: vlan-id\n          type: integer\n          x-go-type: ListKey\n      required:\n      - vlan-id\n      title: Switch_Vlan\n      type: object\n      x-list-multiple: true\n    Switch_Vlan_List:\n      description: a list of VLANs (list)\n      items:\n        $ref: '#/components/schemas/Switch_Vlan'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - vlan-id\n      x-list-multiple: true\n    Switch_Vlan_Subnet:\n      items:\n        description: Network subnets for VLAN\n        pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))\n        title: subnet\n        type: string\n      title: leaf-list-subnet\n      type: array\ninfo:\n  contact:\n    email: info@opennetworking.org\n    name: Open Networking Foundation\n    url: https://opennetworking.org\n  description: OpenAPI 3 specification is generated from sdn-fabric onos-config model\n    plugin\n  license:\n    name: Apache-2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\n  title: sdn-fabric-0.1.x\n  version: 0.1.x\nopenapi: 3.0.0\npaths:\n  /sdn-fabric/v0.1.x/{fabric-id}/dhcp-server:\n    description: A list of DHCP Servers\n    get:\n      operationId: getDhcp-server_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dhcp-server_List'\n          description: GET OK 200\n      summary: GET /dhcp-server List\n      tags:\n      - Dhcp-server\n      - List\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n  /sdn-fabric/v0.1.x/{fabric-id}/dhcp-server/{dhcp-id}:\n    delete:\n      operationId: deleteDhcp-server\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /dhcp-server\n    description: A list of DHCP Servers\n    get:\n      operationId: getDhcp-server\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dhcp-server'\n          description: GET OK 200\n      summary: GET /dhcp-server Container\n      tags:\n      - Dhcp-server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {dhcp-id}\n      in: path\n      name: dhcp-id\n      required: true\n    post:\n      operationId: postDhcp-server\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Dhcp-server'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /dhcp-server\n  /sdn-fabric/v0.1.x/{fabric-id}/route:\n    description: A list of routes\n    get:\n      operationId: getRoute_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Route_List'\n          description: GET OK 200\n      summary: GET /route List\n      tags:\n      - Route\n      - List\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n  /sdn-fabric/v0.1.x/{fabric-id}/route/{route-id}:\n    delete:\n      operationId: deleteRoute\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /route\n    description: A list of routes\n    get:\n      operationId: getRoute\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Route'\n          description: GET OK 200\n      summary: GET /route Container\n      tags:\n      - Route\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {route-id}\n      in: path\n      name: route-id\n      required: true\n    post:\n      operationId: postRoute\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Route'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /route\n  /sdn-fabric/v0.1.x/{fabric-id}/switch:\n    description: A managed device in the fabric\n    get:\n      operationId: getSwitch_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch_List'\n          description: GET OK 200\n      summary: GET /switch List\n      tags:\n      - Switch\n      - List\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n  /sdn-fabric/v0.1.x/{fabric-id}/switch-model:\n    description: A model of switch\n    get:\n      operationId: getSwitch-model_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch-model_List'\n          description: GET OK 200\n      summary: GET /switch-model List\n      tags:\n      - Switch-model\n      - List\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n  /sdn-fabric/v0.1.x/{fabric-id}/switch-model/{switch-model-id}:\n    delete:\n      operationId: deleteSwitch-model\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /switch-model\n    description: A model of switch\n    get:\n      operationId: getSwitch-model\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch-model'\n          description: GET OK 200\n      summary: GET /switch-model Container\n      tags:\n      - Switch-model\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-model-id}\n      in: path\n      name: switch-model-id\n      required: true\n    post:\n      operationId: postSwitch-model\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Switch-model'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /switch-model\n  /sdn-fabric/v0.1.x/{fabric-id}/switch-model/{switch-model-id}/attribute:\n    description: 'a map of extra attributes: string-string'\n    get:\n      operationId: getSwitch-model_Attribute_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch-model_Attribute_List'\n          description: GET OK 200\n      summary: GET /switch-model/{switch-model-id}/attribute List\n      tags:\n      - Switch-model_Attribute\n      - List\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-model-id}\n      in: path\n      name: switch-model-id\n      required: true\n  /sdn-fabric/v0.1.x/{fabric-id}/switch-model/{switch-model-id}/attribute/{attribute-key}:\n    delete:\n      operationId: deleteSwitch-model_Attribute\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /switch-model/{switch-model-id}/attribute\n    description: 'a map of extra attributes: string-string'\n    get:\n      operationId: getSwitch-model_Attribute\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch-model_Attribute'\n          description: GET OK 200\n      summary: GET /switch-model/{switch-model-id}/attribute Container\n      tags:\n      - Switch-model_Attribute\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-model-id}\n      in: path\n      name: switch-model-id\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {attribute-key}\n      in: path\n      name: attribute-key\n      required: true\n    post:\n      operationId: postSwitch-model_Attribute\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Switch-model_Attribute'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /switch-model/{switch-model-id}/attribute\n  /sdn-fabric/v0.1.x/{fabric-id}/switch-model/{switch-model-id}/port:\n    description: A port in a switch\n    get:\n      operationId: getSwitch-model_Port_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch-model_Port_List'\n          description: GET OK 200\n      summary: GET /switch-model/{switch-model-id}/port List\n      tags:\n      - Switch-model_Port\n      - List\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-model-id}\n      in: path\n      name: switch-model-id\n      required: true\n  /sdn-fabric/v0.1.x/{fabric-id}/switch-model/{switch-model-id}/port/{cage-number}/{channel-number}:\n    delete:\n      operationId: deleteSwitch-model_Port\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /switch-model/{switch-model-id}/port\n    description: A port in a switch\n    get:\n      operationId: getSwitch-model_Port\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch-model_Port'\n          description: GET OK 200\n      summary: GET /switch-model/{switch-model-id}/port Container\n      tags:\n      - Switch-model_Port\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-model-id}\n      in: path\n      name: switch-model-id\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {cage-number}\n      in: path\n      name: cage-number\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {channel-number}\n      in: path\n      name: channel-number\n      required: true\n    post:\n      operationId: postSwitch-model_Port\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Switch-model_Port'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /switch-model/{switch-model-id}/port\n  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}:\n    delete:\n      operationId: deleteSwitch\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /switch\n    description: A managed device in the fabric\n    get:\n      operationId: getSwitch\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch'\n          description: GET OK 200\n      summary: GET /switch Container\n      tags:\n      - Switch\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-id}\n      in: path\n      name: switch-id\n      required: true\n    post:\n      operationId: postSwitch\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Switch'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /switch\n  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/attribute:\n    description: 'a map of extra attributes: string-string'\n    get:\n      operationId: getSwitch_Attribute_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch_Attribute_List'\n          description: GET OK 200\n      summary: GET /switch/{switch-id}/attribute List\n      tags:\n      - Switch_Attribute\n      - List\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-id}\n      in: path\n      name: switch-id\n      required: true\n  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/attribute/{attribute-key}:\n    delete:\n      operationId: deleteSwitch_Attribute\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /switch/{switch-id}/attribute\n    description: 'a map of extra attributes: string-string'\n    get:\n      operationId: getSwitch_Attribute\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch_Attribute'\n          description: GET OK 200\n      summary: GET /switch/{switch-id}/attribute Container\n      tags:\n      - Switch_Attribute\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-id}\n      in: path\n      name: switch-id\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {attribute-key}\n      in: path\n      name: attribute-key\n      required: true\n    post:\n      operationId: postSwitch_Attribute\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Switch_Attribute'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /switch/{switch-id}/attribute\n  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/management:\n    delete:\n      operationId: deleteSwitch_Management\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /switch/{switch-id}/management\n    description: configuration of the management port\n    get:\n      operationId: getSwitch_Management\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch_Management'\n          description: GET OK 200\n      summary: GET /switch/{switch-id}/management Container\n      tags:\n      - Switch\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-id}\n      in: path\n      name: switch-id\n      required: true\n    post:\n      operationId: postSwitch_Management\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Switch_Management'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /switch/{switch-id}/management\n  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/port:\n    description: A port in a switch\n    get:\n      operationId: getSwitch_Port_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch_Port_List'\n          description: GET OK 200\n      summary: GET /switch/{switch-id}/port List\n      tags:\n      - Switch_Port\n      - List\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-id}\n      in: path\n      name: switch-id\n      required: true\n  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/port/{cage-number}/{channel-number}:\n    delete:\n      operationId: deleteSwitch_Port\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /switch/{switch-id}/port\n    description: A port in a switch\n    get:\n      operationId: getSwitch_Port\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch_Port'\n          description: GET OK 200\n      summary: GET /switch/{switch-id}/port Container\n      tags:\n      - Switch_Port\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-id}\n      in: path\n      name: switch-id\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {cage-number}\n      in: path\n      name: cage-number\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {channel-number}\n      in: path\n      name: channel-number\n      required: true\n    post:\n      operationId: postSwitch_Port\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Switch_Port'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /switch/{switch-id}/port\n  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/port/{cage-number}/{channel-number}/state:\n    description: Op state attributes\n    get:\n      operationId: getSwitch_Port_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch_Port_State'\n          description: GET OK 200\n      summary: GET /switch/{switch-id}/port/{cage-number}/{channel-number}/state Container\n      tags:\n      - Switch_Port\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-id}\n      in: path\n      name: switch-id\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {cage-number}\n      in: path\n      name: cage-number\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {channel-number}\n      in: path\n      name: channel-number\n      required: true\n  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/port/{cage-number}/{channel-number}/vlans:\n    delete:\n      operationId: deleteSwitch_Port_Vlans\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /switch/{switch-id}/port/{cage-number}/{channel-number}/vlans\n    description: untagged and tagged vlans per port\n    get:\n      operationId: getSwitch_Port_Vlans\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch_Port_Vlans'\n          description: GET OK 200\n      summary: GET /switch/{switch-id}/port/{cage-number}/{channel-number}/vlans Container\n      tags:\n      - Switch_Port\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-id}\n      in: path\n      name: switch-id\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {cage-number}\n      in: path\n      name: cage-number\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {channel-number}\n      in: path\n      name: channel-number\n      required: true\n    post:\n      operationId: postSwitch_Port_Vlans\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Switch_Port_Vlans'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /switch/{switch-id}/port/{cage-number}/{channel-number}/vlans\n  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/state:\n    description: Op state attributes\n    get:\n      operationId: getSwitch_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch_State'\n          description: GET OK 200\n      summary: GET /switch/{switch-id}/state Container\n      tags:\n      - Switch\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-id}\n      in: path\n      name: switch-id\n      required: true\n  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/switch-pair:\n    delete:\n      operationId: deleteSwitch_Switch-pair\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /switch/{switch-id}/switch-pair\n    description: A Switch pairing. A switch can participate on 0-1 pairings\n    get:\n      operationId: getSwitch_Switch-pair\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch_Switch-pair'\n          description: GET OK 200\n      summary: GET /switch/{switch-id}/switch-pair Container\n      tags:\n      - Switch\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-id}\n      in: path\n      name: switch-id\n      required: true\n    post:\n      operationId: postSwitch_Switch-pair\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Switch_Switch-pair'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /switch/{switch-id}/switch-pair\n  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/switch-pair/pairing-port:\n    description: |-\n      The port on the local switch to establish the paired link\n      In future there may be more than 1 port to provide redundancy.\n      For the initial version this is limited to 1\n    get:\n      operationId: getSwitch_Switch-pair_Pairing-port_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch_Switch-pair_Pairing-port_List'\n          description: GET OK 200\n      summary: GET /switch/{switch-id}/switch-pair/pairing-port List\n      tags:\n      - Switch_Switch-pair_Pairing-port\n      - List\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-id}\n      in: path\n      name: switch-id\n      required: true\n  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/switch-pair/pairing-port/{cage-number}/{channel-number}:\n    delete:\n      operationId: deleteSwitch_Switch-pair_Pairing-port\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /switch/{switch-id}/switch-pair/pairing-port\n    description: |-\n      The port on the local switch to establish the paired link\n      In future there may be more than 1 port to provide redundancy.\n      For the initial version this is limited to 1\n    get:\n      operationId: getSwitch_Switch-pair_Pairing-port\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch_Switch-pair_Pairing-port'\n          description: GET OK 200\n      summary: GET /switch/{switch-id}/switch-pair/pairing-port Container\n      tags:\n      - Switch_Switch-pair_Pairing-port\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-id}\n      in: path\n      name: switch-id\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {cage-number}\n      in: path\n      name: cage-number\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {channel-number}\n      in: path\n      name: channel-number\n      required: true\n    post:\n      operationId: postSwitch_Switch-pair_Pairing-port\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Switch_Switch-pair_Pairing-port'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /switch/{switch-id}/switch-pair/pairing-port\n  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/vlan:\n    description: a list of VLANs\n    get:\n      operationId: getSwitch_Vlan_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch_Vlan_List'\n          description: GET OK 200\n      summary: GET /switch/{switch-id}/vlan List\n      tags:\n      - Switch_Vlan\n      - List\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-id}\n      in: path\n      name: switch-id\n      required: true\n  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/vlan/{vlan-id}:\n    delete:\n      operationId: deleteSwitch_Vlan\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /switch/{switch-id}/vlan\n    description: a list of VLANs\n    get:\n      operationId: getSwitch_Vlan\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Switch_Vlan'\n          description: GET OK 200\n      summary: GET /switch/{switch-id}/vlan Container\n      tags:\n      - Switch_Vlan\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/fabric-id'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {switch-id}\n      in: path\n      name: switch-id\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {vlan-id}\n      in: path\n      name: vlan-id\n      required: true\n    post:\n      operationId: postSwitch_Vlan\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Switch_Vlan'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /switch/{switch-id}/vlan\n",
			"canonicalURL": "/github.com/onosproject/config-models@0465131d69b10ae82b3b7ba617d24e5d46173fe8/-/blob/models/sdn-fabric-0.1.x/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/onosproject/config-models/blob/0465131d69b10ae82b3b7ba617d24e5d46173fe8/models/sdn-fabric-0.1.x/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: \"fabric-id\": \"text/plain; charset=utf-8\": parameter content encoding not implemented",
	"NotImplemented": [
		"parameter content encoding"
	]
}