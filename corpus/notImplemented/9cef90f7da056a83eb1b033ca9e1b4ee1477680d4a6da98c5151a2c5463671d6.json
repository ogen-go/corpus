{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/model-config"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "kafka-sidecar/reactive-consumer/openapi.yaml",
			"byteSize": 3300,
			"content": "---\nopenapi: \"3.0.0\"\ninfo:\n  version: \"1.0.0\"\n  title: \"Reactive Consumer\"\n  license:\n    name: \"MIT\"\nservers:\n- url: \"http://reactive-consumer.networknt.com\"\npaths:\n  /kafka/records:\n    post:\n      summary: \"Post a list of Kafka records\"\n      operationId: \"postRecords\"\n      requestBody:\n        description: \"An array of consumer records\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Records\"\n      security:\n      - sidecar_auth:\n        - \"write:sidecar\"\n      responses:\n        \"200\":\n          description: \"A list of RecordProcessedResult\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RecordProcessedResult'\n        \"400\":\n          description: \"Error processing the record. Need sidecar to rollback and retry after waiting period\"\n          \ncomponents:\n  securitySchemes:\n    sidecar_auth:\n      type: \"oauth2\"\n      description: \"This API uses OAuth 2 with the client credential grant flow.\"\n      flows:\n        clientCredentials:\n          tokenUrl: \"https://localhost:6882/token\"\n          scopes:\n            write:sidecar: \"Add records\"\n  schemas:\n    Records:\n      type: \"array\"\n      items:\n        $ref: \"#/components/schemas/Record\"\n    Record:\n      type: \"object\"\n      properties:\n        topic:\n          type: \"string\"\n        key:\n          oneOf:\n            - $ref: \"#/components/schemas/StringKey\"\n            - $ref: \"#/components/schemas/ObjectKey\"\n        value:\n          oneOf:\n            - $ref: \"#/components/schemas/StringValue\"\n            - $ref: \"#/components/schemas/ObjectValue\"\n        header:\n          type: \"object\"\n        partition:\n          type: \"integer\"\n          minimum: 0\n        offset:\n          type: \"number\"\n          minimum: 0\n    StringKey:\n      type: \"string\"\n    ObjectKey:\n      type: \"object\"\n    StringValue:\n      type: \"string\"\n    ObjectValue:\n      type: \"object\"\n    ConsumerRecord:\n      type: \"object\"\n      properties:\n        topic: \n          type: \"string\"\n        key: \n          oneOf:\n            - $ref: \"#/components/schemas/StringKey\"\n            - $ref: \"#/components/schemas/ObjectKey\"\n        value:\n          oneOf:\n            - $ref: \"#/components/schemas/StringValue\"\n            - $ref: \"#/components/schemas/ObjectValue\"\n        partition: \n          type: \"integer\"\n          minimum: 0\n        offset: \n          type: \"number\"\n          minimum: 0\n        headers:\n          type: \"object\"\n          description: \"Key-Value pairs of the headers in a free key map\"\n          additionalProperties: true\n      required: \n        - topic\n        - value\n        - partition\n        - offset\n    RecordProcessedResult:\n      type: \"object\"\n      properties:\n        consumerRecord:\n          $ref: \"#/components/schemas/ConsumerRecord\"\n        processed: \n          type: \"boolean\"\n        stacktrace:\n          type: \"string\"\n        correlationId: \n          type: \"string\"\n        traceabilityId:\n          type: \"string\"\n        key:\n          type: \"string\"\n        timestamp:\n          type: integer\n          format: int64\n      required: \n        - consumerRecord\n        - processed\n",
			"canonicalURL": "/github.com/networknt/model-config@3fea561d7982c217c1d5d35c1193eac78a7fdcef/-/blob/kafka-sidecar/reactive-consumer/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/networknt/model-config/blob/3fea561d7982c217c1d5d35c1193eac78a7fdcef/kafka-sidecar/reactive-consumer/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/kafka/records\": post: security: security \"sidecar_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}