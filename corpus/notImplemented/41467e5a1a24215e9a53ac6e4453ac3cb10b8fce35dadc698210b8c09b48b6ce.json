{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swissfintechinnovations/common-API"
		},
		"file": {
			"name": "CustodyServices.yaml",
			"size": 0,
			"path": "CustodyServices.yaml",
			"byteSize": 54424,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.2.0\n  title: Custody Services\n  description: 'This API is part of the OpenWealth APIs for the connectivity between custody banks and WealthTechs (e.g. Portfolio Management Systems). This API allows the user to receive data from custody banks regarding accounts and positions. The API is designed to be used for either update end of day data batches or single near-realtime account/position information. Furthermore, this API allows the user to receive data from custody banks regarding transactions. In this version (1.2) only transactions which include effective cash or securities movements are in scope and corporate actions are delivered only on a informative basis.'\n  contact:\n    email: wealth@common-api.ch\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nservers:\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/OpenWealthAPI/Custody_Services/1.2.0\n\n    \npaths:\n  /customerAccounts:\n    parameters:\n      - $ref: '#/components/parameters/cursor'\n      - $ref: '#/components/parameters/limit'\n      - $ref: '#/components/parameters/correlation_in_header'\n    get:\n      summary: Returns all customers and respective accounts accessible for the logged in user.\n      description: This endpoint returns a highlevel list of customers and the respective accounts accessible for the logged in user. Paging is done based on the customerOverview object, i.e. if limit is set to 1, then 1 customerOverview will be returned per page.\n\n      operationId: getCustomerAccounts\n      tags:\n        - customeraccount\n      responses:\n        '200':\n          description: Returns a list with all customers and the respective accounts.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/X-Correlation-ID'\n            nextCursor:\n              $ref: '#/components/headers/nextCursor'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/customerOverview'\n                    \n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n \n  /customerAccounts/{customerId}:\n    parameters:\n      - $ref: '#/components/parameters/customerIdParam'\n      - $ref: '#/components/parameters/cursor'\n      - $ref: '#/components/parameters/limit'\n      - $ref: '#/components/parameters/correlation_in_header'\n    get:\n      summary: Returns a specific customers and respective accounts accessible for the logged in user.\n      description: This endpoint returns a highlevel list of a customer and the respective accounts accessible for the logged in user. \n      operationId: getCustomerAccountsByCustomerId\n      tags:\n        - customeraccount\n      responses:\n        '200':\n          description: Returns a the specified customers and the respective accounts.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/X-Correlation-ID'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/customerOverview'\n                    \n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n  /customers/{customerId}/positions:\n    parameters:\n      - $ref: '#/components/parameters/customerIdParam'\n      - $ref: '#/components/parameters/dateParam'\n      - $ref: '#/components/parameters/endOfDayParam'\n      - $ref: '#/components/parameters/dateTypeParam'\n      - $ref: '#/components/parameters/cursor'\n      - $ref: '#/components/parameters/limit'\n      - $ref: '#/components/parameters/correlation_in_header'\n    get:\n      summary: Returns all positions for a specific customer.\n      description: Returns all positions (incl. investment cash accounts) for a specific customer. Paging is done based on the account object, i.e. if limit is set to 1, then 1 account will be returned per page.\n      operationId: getPositionsByCustomerId\n      tags:\n        - positions\n      responses:\n        '200':\n          description: Position List\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/X-Correlation-ID'\n            nextCursor:\n              $ref: '#/components/headers/nextCursor'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customerAndStatementResponse'\n                \n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n  /accounts/{accountId}/positions:\n    parameters:\n      - $ref: '#/components/parameters/accountIdParam'\n      - $ref: '#/components/parameters/dateParam'\n      - $ref: '#/components/parameters/endOfDayParam'\n      - $ref: '#/components/parameters/dateTypeParam'\n      - $ref: '#/components/parameters/cursor'\n      - $ref: '#/components/parameters/limit'\n      - $ref: '#/components/parameters/correlation_in_header'\n    get:\n      summary: Returns the positions for a customer's specific account.\n      description: Returns all positions for a specific account. Paging is done based on the position object, i.e. if limit is set to 1, then 1 position will be returned per page.\n      operationId: getPositionsByAccountId\n      tags:\n        - positions\n      responses:\n        '200':\n          description: Position List\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/X-Correlation-ID'\n            nextCursor:\n              $ref: '#/components/headers/nextCursor'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customerAndStatementResponse'\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n  /customers/{customerId}/transactions:\n    parameters:\n      - $ref: '#/components/parameters/customerIdParam'\n      - $ref: '#/components/parameters/dateParam'\n      - $ref: '#/components/parameters/dateTypeParam'\n      - $ref: '#/components/parameters/endOfDayParam'\n      - $ref: '#/components/parameters/cursor'\n      - $ref: '#/components/parameters/limit'\n      - $ref: '#/components/parameters/correlation_in_header'\n    get:\n      summary: Returns transactions for a specific customer.\n      description: Returns all transactions for the a specific customer. Paging is done based on the transaction object, i.e. if limit is set to 1, then 1 transaction will be returned per page.\n      operationId: getTransactionsByCustomerId\n      tags:\n        - transactions\n      responses:\n        '200':\n          description: Returns a transaction list for a specific customer.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/X-Correlation-ID'\n            nextCursor:\n              $ref: '#/components/headers/nextCursor'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transactionAndStatementResponse'\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\n  /accounts/{accountId}/transactions:\n    parameters:\n      - $ref: '#/components/parameters/accountIdParam'\n      - $ref: '#/components/parameters/dateParam'\n      - $ref: '#/components/parameters/dateTypeParam'\n      - $ref: '#/components/parameters/endOfDayParam'\n      - $ref: '#/components/parameters/cursor'\n      - $ref: '#/components/parameters/limit'\n      - $ref: '#/components/parameters/correlation_in_header'\n    get:\n      summary: Returns the transactions a specific account.\n      description: Returns the transactions for all positions in a specific account. Paging is done based on the transaction object, i.e. if limit is set to 1, then 1 transaction will be returned per page.\n      operationId: getTransactionsByAccountId\n      tags:\n        - transactions\n      responses:\n        '200':\n          description: Returns a transactions list for all positions and cash accounts in a specific protfolio.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/X-Correlation-ID'\n            nextCursor:\n              $ref: '#/components/headers/nextCursor'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transactionAndStatementResponse'\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n  \n  /positions/{positionId}/transactions:\n    parameters:\n      - $ref: '#/components/parameters/positionIdParam'\n      - $ref: '#/components/parameters/dateParam'\n      - $ref: '#/components/parameters/dateTypeParam'\n      - $ref: '#/components/parameters/endOfDayParam'\n      - $ref: '#/components/parameters/cursor'\n      - $ref: '#/components/parameters/limit'\n      - $ref: '#/components/parameters/correlation_in_header'\n    get:\n      summary: Returns the transactions for a specific position.\n      description: Returns transactions for a specific position. Paging is done based on the transaction object, i.e. if limit is set to 1, then 1 transaction will be returned per page.\n      operationId: getTransactionsByPositionId\n      tags:\n        - transactions\n      responses:\n        '200':\n          description: Transaction list\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/X-Correlation-ID'\n            nextCursor:\n              $ref: '#/components/headers/nextCursor'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transactionAndStatementResponse'\n        '400':\n          $ref: '#/components/responses/standard400'\n        '401':\n          $ref: '#/components/responses/standard401'\n        '403':\n          $ref: '#/components/responses/standard403'\n        '404':\n          $ref: '#/components/responses/standard404'\n        '405':\n          $ref: '#/components/responses/standard405'\n        '500':\n          $ref: '#/components/responses/standard500'\n        '501':\n          $ref: '#/components/responses/standard501'\n        '503':\n          $ref: '#/components/responses/standard503'\n\ncomponents:\n\n  ###############\n  # Parameters  #\n  ###############\n  \n  parameters:\n    customerIdParam:\n      name: customerId\n      in: path\n      required: true\n      schema:\n        type: string\n        description: The customer's id\n    accountIdParam:\n      name: accountId\n      in: path\n      required: true\n      schema:\n        type: string\n        description: The customer's account identification\n    dateParam:\n      name: date\n      in: query\n      required: true\n      schema:\n        type: string\n        format: date\n        description: Full-date according to ISO 8601 i.e. YYYY-MM-DD format.\n        example: '2019-12-31'\n    dateTypeParam:\n      name: dateType\n      in: query\n      required: true\n      description: Indicates which type of date is decisive for the data shown.\n      schema:\n        type: string\n        enum:\n          - transactionDate\n          - bookingDate\n          - valueDate\n    positionIdParam:\n      name: positionId\n      in: path\n      required: true\n      schema:\n        type: string\n        description: The position's id\n    endOfDayParam:\n      name: eodIndicator\n      in: query\n      required: true\n      description: Indicates if the position data is end-of-day (eod) data for the positions. If the parameter is set to false, the most recent data is shown, incl intraday changes on the position if the date is set to today. \n      schema:\n        type: boolean\n        example: true\n        default: true\n    \n    limit: \n      name: limit\n      in: query\n      description: Maximum number of items to return.\n      required: false\n      schema:\n        type: integer\n        format: int32\n        minimum: 1\n    cursor:\n      name: cursor\n      in: query\n      description: An opaque string value used for pagination\n      required: false\n      schema:\n        type: string\n    correlation_in_header:\n      in: header\n      name: X-Correlation-ID\n      description: Unique ID (defined by the caller) which will be reflected back in the response.\n      required: true\n      schema:\n        type: string\n\n  ###############\n  # Headers     #\n  ###############\n\n  headers:\n  \n    X-Correlation-ID:\n      description: Client defined ID from request to correlates HTTP requests between a client and server.\n      schema:\n        type: string\n        example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n    nextCursor:\n      description: An opaque string value, or an empty string if there are no more results. \n      required: false\n      schema:\n        type: string\n        \n        \n######################\n# Schemas\n######################\n\n  schemas:\n    statement:\n      type: object\n      required: \n        - statementDateTime\n        - date\n        - endOfDayIndicator\n      properties:\n        statementDateTime:\n          type: string\n          format: date-time\n          example: 2018-04-13T11:11:11Z\n          description: Date and time of the statement creation (UTC Timestamp). In accordance with ISO 8601. \n        date:\n          type: object\n          required: \n           - date\n           - dateType\n          properties:\n            date:\n              type: string\n              format: date\n              example: 2018-04-13\n              description: Full-date according to ISO 8601 i.e. YYYY-MM-DD format.\n            dateType:\n              type: string\n              example: transactionDate\n              description: Specifies the type of date.\n              enum:\n              - transactionDate\n              - bookingDate\n              - valueDate\n        endOfDayIndicator:\n          type: boolean\n          description: Indicates if the data displayed is end-of-day data. If true, the data is end-of-day data. If false and date is today, current (intraday) data will be displayed.\n          example: true\n          \n    customerOverview:\n      type: object\n      description: Overview of the customer with the respective accounts\n      required: \n        - customerIdentification\n      properties:\n        customerIdentification:\n          type: string\n          minLength: 1\n          maxLength: 35\n          example: 123123456\n          description: Unique and unambiguous identification used by the bank for the customer.\n        customerReferenceCurrency:\n          $ref: '#/components/schemas/currency'\n        accountOverview:\n          type: array\n          items:\n            $ref: '#/components/schemas/accountInformation'\n\n    customerAccounts:\n      type: object\n      required: \n        - customerIdentification\n      properties:\n        customerIdentification:\n          type: string\n          minLength: 1\n          maxLength: 35\n          example: 123123456\n          description: Unique and unambiguous identification used by the bank for the customer.\n        customerReferenceCurrency:\n          $ref: '#/components/schemas/currency'\n        accountList:\n          type: array\n          items:\n            $ref: '#/components/schemas/account'\n\n    customerAndStatementResponse:\n      type: object\n      properties:\n        statement:\n          $ref: '#/components/schemas/statement'\n        customer:\n          $ref: '#/components/schemas/customerAccounts'\n          \n    account:\n      type: object\n      required: \n        - accountInformation\n        - positionList\n      properties:\n        accountInformation:\n          $ref: '#/components/schemas/accountInformation'\n        externalReference:\n          type: string\n          maxLength: 35\n          example: 987-654-321\n          description: Account reference used by a bank external party, e.g. PMS\n        positionList:\n          type: array\n          description: A list of positions\n          items:\n            $ref: '#/components/schemas/position'\n\n    portfolioInformation:\n      type: object\n      properties: \n        portfolioIdentification:\n          type: string\n          minLength: 1\n          maxLength: 35\n          example: 876543219\n          description: Unique and unambiguous identification for the portfolio between the portfolio owner and the portfolio servicer\n        portfolioReferenceCurrency:\n          $ref: '#/components/schemas/currency'\n    position:\n      type: object\n      required: \n        - identification\n        - currency\n        - amountOrUnits\n        - instrumentIdentification\n      properties:\n        identification:\n          type: string\n          maxLength: 35\n          example: 876543219\n          description: Identification for the position given by the bank\n        externalReference:\n          type: string\n          maxLength: 35\n          example: 987-654-321\n          description: Reference used by the external party, e.g. Portfolio Management Systems\n        currency:\n          $ref: '#/components/schemas/currency'\n        amountOrUnits:\n          type: object\n          properties:\n            amount:\n              type: string\n              pattern: \"[0-9]{1,12}([.][0-9]{1,9})?\"\n              maxLength: 22\n              example: \"12000\"\n              description: Absolute amount of the position\n            type: \n              type: string\n              description: Specifies the type of the amount\n              example: nominal\n              enum: \n              - unitsNumber\n              - nominal\n            creditDebitIndicator:\n              type: string\n              enum: \n              - credit\n              - debit\n              example: debit\n              description: Specifies if a position has a positive or negative value\n        positionName:\n          type: string\n          maxLength: 70\n          example: Stark Industries Inc.\n          description: Name of the position.\n        prices:\n          type: array\n          description: List of prices regarding the position incl. valuation in account currency\n          items:\n            type: object\n            properties:\n              amount:\n                type: string\n                pattern: \"[0-9]{1,12}([.][0-9]{1,9})?\"\n                maxLength: 22\n                description: Amount of the price\n                example: \"100.4\"\n              amountType:\n                type: string\n                description: Indicates whether the price amount is depicted as unit price or percentage.\n                example: percentage\n                enum: \n                - perUnit\n                - percentage\n              creditDebitIndicator:\n                type: string\n                enum: \n                - credit\n                - debit\n                example: debit\n                description: Specifies if the amount is a debit (negative) or credit (positive) amount.\n              priceType:\n                type: string\n                description: Indicates the type of the price.\n                example: costPrice\n                enum: \n                - dealPrice\n                - marketPrice\n                - costPrice\n              currency:\n                $ref: '#/components/schemas/currency'\n              date:\n                type: string\n                format: date\n                description: Date of the end of day price. Date according to ISO 8601 i.e. YYYY-MM-DD format\n              sourceOfPrice:  \n                type: string\n                maxLength: 70\n                description: Indicates the source of the (market)price\n                example: SIX Swiss Exchange\n              foreignExchangeRates:\n                type: array\n                items:\n                  $ref: '#/components/schemas/foreignExchangeRate'\n              valuation:\n                type: object\n                description: Valuation of the position in account currency. Accrued interests are not included in the valuation. \n                properties:\n                  amount:\n                    type: string\n                    pattern: \"[0-9]{1,12}([.][0-9]{1,9})?\"\n                    maxLength: 22\n                    description: Absolute amount of the valuation\n                    example: \"13104.5\"\n                  currency:\n                    $ref: '#/components/schemas/currency'\n                  creditDebitIndicator:\n                    type: string\n                    enum: \n                    - credit\n                    - debit\n                    example: credit\n                    description: Specifies if the amount is a debit (negative) or credit (positive) amount.\n        safekeepingPlace:\n          type: string\n          pattern: '[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}'\n          example: INSECHZZXXX\n          description: 'BIC of the place where the securities are safe-kept, physically or notionally'\n        additionalCustodianInformation:\n          type: string\n          pattern: '[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}'\n          example: INSECHZZXXX\n          description: 'Used for special use cases where safekeepingPlace is not suffienct. BIC of the place where the securities are safe-kept, physically or notionally'\n        accruedInterest:\n          type: object\n          properties:\n            amount:\n              type: string\n              pattern: \"[0-9]{1,12}([.][0-9]{1,9})?\"\n              maxLength: 22\n              example: \"10.25\"\n              description: Absolute interest amount that has accrued in between coupon payment periods\n            currency:\n              $ref: '#/components/schemas/currency'\n            creditDebitIndicator:\n              type: string\n              enum:\n              - credit\n              - debit\n              example: debit\n              description: Specifies if the accrued interest amount has a positive or negative value\n            numberOfDaysAccrued:\n              type: integer\n              example: 34\n              description: Number of days used for calculating the accrued interest amount.\n        positionAdditionalDetails:\n          type: string\n          maxLength: 70\n          description: Provides additional information on the position.\n          example: Belongs to contract 129959959\n        financialInstrument:\n          $ref: '#/components/schemas/financialInstrument'\n\n    transaction:\n      type: object\n      required: \n        - customerIdentification\n        - transactionIdentification\n        - reversalIndicator\n        - dateList\n        - transactionType\n        - transactionSubtype\n      properties:\n        customerIdentification:\n          type: string\n          maxLength: 35\n          description: Customer ID used by the bank\n          example: 987654321\n        transactionIdentification:\n          type: string\n          maxLength: 35\n          example: 987654321\n          description: Transaction ID given by the bank\n        placeOfTrade:\n          type: object\n          description: Market in which a trade transaction is to be or has been executed.\n          properties:\n            marketIdentificationCode:\n              type: string\n              maxLength: 4\n              description: Market Identifier Code. Identification of a financial market, as stipulated in the norm ISOMarket Identifier Code. Identification of a financial market, as stipulated in the norm ISO 10383 \"Codes for exchanges and market identifications\".\n              example: XSWX\n            marketDescription:\n              type: string\n              maxLength: 35\n              description: Description of the market when no Market Identification Code is available.\n              example: OTC\n        reversalIndicator:\n          description: Indicates whether it is the reversal of a previously reported movement.\n          type: boolean\n          default: false\n        reversedTransactionIdentification:\n          type: string\n          maxLength: 35\n          description: States the identification of the transaction that was reversed\n          example: 2134123415\n        dateList:\n          type: array\n          items:\n            type: object\n            required: \n              - date\n              - dateType\n            properties:\n              date:\n                $ref: '#/components/schemas/date'\n              dateType:\n                type: string\n                description: Type of the date\n                enum: \n                - effectiveSettlementDate\n                - settlementDate\n                - valueDate\n                - performanceDate\n                - bookingDate\n                - transactionDate\n                example: settlementDate\n        transactionType:\n          type: string\n          description: Type of the transaction\n          example: securitiesExchange\n          enum:\n          - securitiesExchange\n          - cash\n          - fees\n          - credit\n          - fx\n          - taxes\n          - corporateActions\n          - fiduciary\n          - moneyMarket\n          - securitiesTransfer\n          - physical\n          - otcForwardRateAgreement\n          - otcOption\n          - otcCreditDefaultSwap\n          - otcTotalReturnSwap\n          - otcIRSCapsFloorsCollars\n          - otcInterestRateSwap\n          - otcCrossCurrencySwap\n          - otcSwaption\n          - others\n        transactionSubtype:\n          type: string\n          maxLength: 35\n          description: Gives detailed information about the category of a transaction.\n          example: Buy\n        underlyingFinancialInstrument:\n          type: object\n          description: Security concerned by the corporate action.\n          properties:\n            identification:\n              type: string\n              maxLength: 35\n              example: US8851601018\n              description: Identification of the instrument\n            type: \n              type: string\n              example: isin\n              description: Type of the instrument ID\n              enum:\n              - isin\n              - sedol\n              - cusip\n              - ric\n              - tickerSymbol\n              - bloomberg\n              - cta\n              - quick\n              - wertpapier\n              - dutch\n              - valoren\n              - sicovam\n              - belgian\n              - common\n              - otherProprietaryIdentification    \n            name:\n              type: string\n              maxLength: 70\n              description: Name of the financial instrument in free format text.\n              example: N-Akt Thor Industries Inc USD 0.1 nom (977822)\n        movementList:\n          type: array\n          description: List of movements belonging to a transaction from a banks perspective\n          items:\n            $ref: '#/components/schemas/movement'\n        postingAmounts:\n          type: array\n          description: List of total amounts of money that is to be/was posted to respective accounts in the account currency.\n          items:\n            $ref: '#/components/schemas/postingAmount'\n \n        foreignExchangeRates:\n          type: array\n          items:\n            $ref: '#/components/schemas/foreignExchangeRate'\n        settlementCurrency:\n            $ref: '#/components/schemas/currency'\n        prices:\n          type: array\n          items:\n            type: object\n            properties:\n              amount:\n                type: string\n                pattern: \"[0-9]{1,12}([.][0-9]{1,9})?\"\n                maxLength: 22\n                example: \"100.36\"\n                description: Price indication\n              amountType:\n                type: string\n                description: Specifies the type of price\n                example: percentage\n                enum:\n                - perUnit\n                - percentage\n              priceType:\n                type: string\n                description: Describes the type of price stated\n                example: dealPrice\n                enum:\n                - dealPrice\n                - costPrice\n              currency:\n                $ref: '#/components/schemas/currency'\n        transactionAdditionalDetails:\n          type: string\n          maxLength: 70\n          description: Provides additional details on the transaction which can not be included within the structured fields of the message.\n          example: Replaces transaction nr. 12234567489\n\n    movement:\n        type: object\n        description: Describes a single movement/booking/flow within a transaction. Every transaction contains in the minimum one movement.\n        required: \n          - amount\n          - amountType\n          - currency\n          - movementType\n        properties:\n          amount:\n            type: string\n            pattern: \"[0-9]{1,12}([.][0-9]{1,9})?\"\n            maxLength: 22\n            example: \"100000\"\n            description: Positive amount of the movement\n          amountType:\n            type: string\n            description: Specifies the type of amount\n            example: nominal\n            enum:\n            - unitsNumber\n            - nominal\n          creditDebitIndicator:\n            type: string\n            example: debit\n            description: Specifies if the amount is a debit (negative) or credit (positive) amount.\n            enum:\n            - credit\n            - debit\n          currency:\n            $ref: '#/components/schemas/currency'\n          movementType:\n            type: string\n            description: Describes which kind of movement is reported from a banks perspective.\n            example: security\n            enum: \n            - security\n            - cash\n            - revenue\n            - stampDuty\n            - withholdingTax\n            - capitalGainTax\n            - financialTransactionTax\n            - otherTaxes\n            - transactionFee\n            - brokerageFee\n            - managementFee\n            - courtage\n            - custodyFee\n            - exchangeFee\n            - thirdPartyFee\n            - otherFee\n            - others\n          financialInstrument:\n            type: object\n            required: \n              - identification\n              - type\n            properties:\n              identification:\n                type: string\n                maxLength: 35\n                example: US8851601018\n                description: Identification of the instrument\n              type:\n                type: string\n                example: isin\n                description: Type of the instrument ID\n                enum:\n                - isin\n                - sedol\n                - cusip\n                - ric\n                - tickerSymbol\n                - bloomberg\n                - cta\n                - quick\n                - wertpapier\n                - dutch\n                - valoren\n                - sicovam\n                - belgian\n                - common\n                - otherProprietaryIdentification    \n              name:\n                type: string\n                maxLength: 70\n                description: Name of the financial instrument in free format text.\n                example: N-Akt Thor Industries Inc USD 0.1 nom (977822)\n          positionIdentification:\n            type: string\n            maxLength: 35\n            description: Identification for the position given by the bank.\n            example: 1234566-12-1\n          accountDetails:\n            type: object\n            description: Indicates the affected account of this movement\n            properties:\n              accountIdentification:\n                type: string\n                maxLength: 35\n                example: 876543219\n                description: Unique and unambiguous identification for the account\n              accountIdentificationType:\n                type: string\n                description: Indicates the type of the account identification. IBAN is prefered.\n                example: other\n                enum:\n                - iban\n                - other\n    postingAmount:\n      type: object\n      description: Total amount of money that is to be/was posted to the account in the account currency.\n      properties:\n        amount:\n          type: string\n          pattern: \"[0-9]{1,12}([.][0-9]{1,9})?\"\n          maxLength: 22\n          description: Absolute amount of the transaction\n          example: \"13023\"\n        currency:\n          $ref: '#/components/schemas/currency'\n        creditDebitIndicator:\n            type: string\n            example: debit\n            description: Specifies if the amount is a debit (negative) or credit (positive) amount.\n            enum:\n              - credit\n              - debit\n        accountInformation:\n            $ref: '#/components/schemas/accountInformation'    \n    \n    accountInformation:\n      type: object\n      required:\n        - accountIdentification\n        - accountIdentificationType\n        - accountType\n        - accountReferenceCurrency\n      properties:\n        accountIdentification:\n          type: string\n          maxLength: 35\n          example: 876543219\n          description: Unique and unambiguous identification for the account\n        accountIdentificationType:\n          type: string\n          description: Indicates the type of the account identification. IBAN is prefered.\n          example: other\n          enum:\n          - iban\n          - other\n        accountType: \n          type: string\n          description: Indicatates the type of the account. If the account type is cashAccount, no information on the financial instrument is provided in the respective position in the account.\n          enum:\n          - cashAccount\n          - safekeepingAccount\n          - other\n        accountReferenceCurrency:\n          $ref: '#/components/schemas/currency'\n        accountName:\n          type: string\n          maxLength: 70\n          description: Name of the account. It provides an additional means of identification, and is designated by the account servicer in agreement with the account owner.\n          example: \"Household account\"\n        accountDesignation:\n          type: string\n          maxLength: 70\n          description: Supplementary information on the account. Designated by the account servicer. \n          example: \"Current Account CHF\"\n        portfolioInformation:\n         $ref: '#/components/schemas/portfolioInformation'\n\n    financialInstrument:\n      type: object\n      required: \n        - financialInstrumentIdentification\n        - inactiveIndicator\n      properties:\n        financialInstrumentIdentification:\n          type: object\n          required: \n            - identification\n            - type\n          properties:\n            identification:\n              type: string\n              maxLength: 35\n              example: CH0012005267\n              description: Instrument identification\n            type:\n              type: string\n              example: isin\n              description: Type of the instrument identification\n              enum: \n              - isin\n              - sedol\n              - cusip\n              - ric\n              - tickerSymbol\n              - bloomberg\n              - cta\n              - quick\n              - wertpapier\n              - dutch\n              - valoren\n              - sicovam\n              - belgian\n              - common\n              - otherProprietaryIdentification              \n        financialInstrumentName:\n          type: string\n          maxLength: 70\n          example: Novartis AG\n          description: Name of the financial instrument in free format text.\n        interests:\n          type: object\n          properties:\n            rate:\n              type: string\n              pattern: \"[0-9]{1,12}([.][0-9]{1,9})?\"\n              maxLength: 22\n              example: \"0.00125\"\n              description: Interest rate of the instrument\n            currency:\n              $ref: '#/components/schemas/currency'\n            dayCountBasis:\n              type: string\n              example: u30_360\n              description: Interest method of the instrument\n              enum:\n              - act_360\n              - act_365\n              - act_actIcma\n              - act_actIsda\n              - act_actAfb\n              - u30_360\n              - u30E_360Icma\n              - u30E_360Isda\n              - u30E_360\n              - u30U_360\n            paymentDate:\n              type: string\n              format: date\n              example: 2020-04-19\n              description: Date of the next interest payment. Full-date according to ISO 8601 i.e. YYYY-MM-DD format.\n            paymentFrequency:\n              type: string\n              description: Specifies the frequency of an interest payment.\n              example: quarterly\n              enum:\n              - annual\n              - monthly\n              - quarterly\n              - semiAnnual\n              - weekly\n              - atMaturity\n              - other\n        dates:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                description: Indicates the type of date\n                example: issueDate\n                enum:\n                - issueDate\n                - maturityDate\n                - nextCallableDate\n                - excerciseDate\n                - expiryDate\n                - couponDate\n                - floatingRateFixingDate\n                - conversionDate\n                - putableDate\n                - datedDate\n                - firstPaymentDate\n                - nextFactorDate\n              date:\n                type: string\n                format: date\n                description: Full-date according to ISO 8601 i.e. YYYY-MM-DD format.\n                example: 2019-12-31\n        optionDetails:\n          type: object\n          properties:\n            optionType:\n              type: string\n              example: call\n              enum: \n              - call\n              - put\n              description: \"Specifies whether it is a Call option (right to purchase a specific underlying asset) or a Put option (right to sell a specific underlying asset).\"\n            optionStyle:\n              type: string\n              example: amer\n              enum:\n              - amer\n              - euro\n              - berm\n              description: Specifies how an option can be exercised (American, European, Bermudan).\n        contractSize:\n          type: string\n          pattern: \"[0-9]{1,12}([.][0-9]{1,9})?\"\n          maxLength: 22\n          example: \"100\"\n          description: Contract size of the instrument\n        minimumDenomination:\n          type: string\n          pattern: \"[0-9]{1,12}([.][0-9]{1,9})?\"\n          maxLength: 22\n          example: \"100000\"\n          description: Indicates the minimum denomination of a security.\n        minimumIncrement:\n          type: string\n          pattern: \"[0-9]{1,12}([.][0-9]{1,9})?\"\n          maxLength: 22\n          example: \"10000\"\n          description: Indicates the minimum tradable increments of a security.\n        financialInstrumentPrices:\n          type: array\n          description: Provides information on different prices that are realted to the functionality of the financial instrument.\n          items:\n            type: object\n            properties:\n              amount:\n                type: string\n                pattern: \"[0-9]{1,12}([.][0-9]{1,9})?\"\n                maxLength: 22\n                example: \"100.9\"\n                description: Declares the amount of the indicated price\n              creditDebitIndicator:\n                type: string\n                enum:\n                - credit\n                - debit\n                example: debit\n                description: Specifies if amount has a positive or negative value\n              currency:\n                $ref: '#/components/schemas/currency'\n              type:\n                type: string\n                example: strikePrice\n                description: Indicates the type of the price\n                enum:\n                - strikePrice\n                - capPrice\n                - floorPrice\n                - conversionPrice\n                - excercisePrice\n                - subscriptionPrice\n                  \n        inactiveIndicator:\n          type: boolean\n          description: Indicates if the instrument is inactive\n          default: FALSE\n        underlyingList:\n          type: array\n          description: List of underlying instruments\n          items:\n            type: object\n            properties:\n              underlyingFinancialInstrument:\n                type: object\n                properties:\n                  identification:\n                    type: string\n                    maxLength: 35\n                    description: Instrument identification \n                    example: CH0012005267\n                  type:\n                    type: string\n                    description: Type of the instrument identification\n                    example: isin\n                    enum:\n                    - isin\n                    - sedol\n                    - cusip\n                    - ric\n                    - tickerSymbol\n                    - bloomberg\n                    - cta\n                    - quick\n                    - wertpapier\n                    - dutch\n                    - valoren\n                    - sicovam\n                    - belgian\n                    - common\n                    - otherProprietaryIdentification \n        financialInstrumentAttributeAdditionalDetails:\n          type: string\n          maxLength: 70\n          description: Provides additional information about the financial instrument in narrative form.\n          example: Group contract number 129959961\n    \n    foreignExchangeRate:\n        type: object\n        properties:\n          sourceCurrency:\n            description: Currency of the amount to be converted in a currency conversion.\n            type: string\n            pattern: '[A-Z]{3}'\n            example: 'CHF'\n          rate:\n            type: string\n            pattern: \"[0-9]{1,12}([.][0-9]{1,9})?\"\n            maxLength: 22\n            example: \"1.0963\"\n            description: Indicates the rate of a fx transaction for one source currency unit to the target currency. E.g. 1GBP=xxxEUR, where the source currency is GBP and the target currency is EUR.\n          targetCurrency:\n            description: Currency into which an amount is to be converted in a currency conversion.\n            type: string\n            pattern: '[A-Z]{3}'\n            example: 'CHF'\n          fxType:\n            type: string\n            description: Defines the type of the indicated fx rate, whether it’s a real (traded) price or a calculatory price.\n            example: calculatory\n            enum: \n            - real\n            - calculatory\n    \n    transactionAndStatementResponse:\n      type: object\n      properties:\n          statement:\n            $ref: '#/components/schemas/statement'\n          transactions:\n            type: array\n            items:\n              $ref: '#/components/schemas/transaction'\n    \n    currency:\n      description: ISO 4217 code\n      type: string\n      pattern: '[A-Z]{3}'\n      example: 'CHF'\n\n    date:\n      type: string\n      format: date\n      description: Date according to ISO 8601 i.e. YYYY-MM-DD format\n      example: '2018-04-13'\n\n\n    commonErrorResponse:\n      title: Common Error Response\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/commonErrorType'\n        title:\n          type: string\n          example:\n            This is the general problem description\n        detail:\n          type: string\n          example:\n            Detailed problem description with respect to the current request\n        instance:\n          type: string\n          example:\n            path/to/corresponding/resource\n\n    commonErrorType:\n      type: string\n      description: Error types for commonErrorResponse\n      example: invalidPayload\n      enum:\n        - invalidPayload\n        - malformedPayload\n        - invalidToken\n        - expiredToken\n        - insufficientPrivileges\n        - noAccessToResource\n        - resourceDoesNotExist\n        - resourceNotReady\n        - resourceTooLarge\n        - wrongMethod\n        - operationNotAllowed\n        - technicalError\n        - notImplemented\n        - serviceUnavailable\n\n# ---- Responses - Standard Errors Common Data Model v1.2.2----\n  responses:\n    standard400:\n      headers:\n        Content-Type:\n          schema:\n            type: string\n            description: 'application/problem+json; charset=utf-8 according to RFC7807'\n            example: application/problem+json\n        Content-Language:\n          schema:\n            type: string\n            description: 'Response language - always en'\n            example: en\n        X-Correlation-ID:\n          schema:\n            type: string\n            description: Client defined ID from request to correlates HTTP requests between a client and server.\n            example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      description: Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed request syntax.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/commonErrorResponse'\n\n    standard401:\n      headers:\n        Content-Type:\n          schema:\n            type: string\n            description: 'application/problem+json; charset=utf-8 according to RFC7807'\n            example: application/problem+json     \n        Content-Language:\n          schema:\n            type: string\n            description: 'Response language - always en'\n            example: en\n        X-Correlation-ID:\n          schema:\n            type: string\n            description: Client defined ID from request to correlates HTTP requests between a client and server.\n            example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      description: Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/commonErrorResponse'\n\n    standard403:\n      headers:\n        Content-Type:\n          schema:\n            type: string\n            description: 'application/problem+json; charset=utf-8 according to RFC7807'\n            example: application/problem+json\n        Content-Language:\n          schema:\n            type: string\n            description: 'Response language - always en'\n            example: en\n        X-Correlation-ID:\n          schema:\n            type: string\n            description: Client defined ID from request to correlates HTTP requests between a client and server.\n            example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      description: Forbidden - The server understood the request but refuses to authorize it. \n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/commonErrorResponse'\n\n    standard404:\n      headers:\n        Content-Type:\n          schema:\n            type: string\n            description: 'application/problem+json; charset=utf-8 according to RFC7807'\n            example: application/problem+json\n        Content-Language:\n          schema:\n            type: string\n            description: 'Response language - always en'\n            example: en\n        X-Correlation-ID:\n          schema:\n            type: string\n            description: Client defined ID from request to correlates HTTP requests between a client and server.\n            example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      description: Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/commonErrorResponse'\n\n    standard405:\n      headers:\n        Content-Type:\n          schema:\n            type: string\n            description: 'application/problem+json; charset=utf-8 according to RFC7807'\n            example: application/problem+json\n        Content-Language:\n          schema:\n            type: string\n            description: 'Response language - always en'\n            example: en\n        X-Correlation-ID:\n          schema:\n            type: string\n            description: Client defined ID from request to correlates HTTP requests between a client and server.\n            example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      description: Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/commonErrorResponse'\n\n    standard500:\n      headers:\n        Content-Type:\n          schema:\n            type: string\n            description: 'application/problem+json; charset=utf-8 according to RFC7807'\n            example: application/problem+json\n        Content-Language:\n          schema:\n            type: string\n            description: 'Response language - always en'\n            example: en\n        X-Correlation-ID:\n          schema:\n            type: string\n            description: Client defined ID from request to correlates HTTP requests between a client and server.\n            example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      description: Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/commonErrorResponse'\n\n    standard501:\n      headers:\n        Content-Type:\n          schema:\n            type: string\n            description: 'application/problem+json; charset=utf-8 according to RFC7807'\n            example: application/problem+json\n        Content-Language:\n          schema:\n            type: string\n            description: 'Response language - always en'\n            example: en\n        X-Correlation-ID:\n          schema:\n            type: string\n            description: Client defined ID from request to correlates HTTP requests between a client and server.\n            example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      description: Not Implemented - The server does not support the functionality required to fulfill the request.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/commonErrorResponse'\n\n    standard503:\n      headers:\n        Content-Type:\n          schema:\n            type: string\n            description: 'application/problem+json; charset=utf-8 according to RFC7807'\n            example: application/problem+json\n        Content-Language:\n          schema:\n            type: string\n            description: 'Response language - always en'\n            example: en\n        X-Correlation-ID:\n          schema:\n            type: string\n            description: Client defined ID from request to correlates HTTP requests between a client and server.\n            example: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      description: Service Unavailable. The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/commonErrorResponse'\n  # ---- End Responses - Standard Errors",
			"canonicalURL": "/github.com/swissfintechinnovations/common-API@411f559625d224664dcc971e6637429d227e79b4/-/blob/CustodyServices.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/swissfintechinnovations/common-API/blob/411f559625d224664dcc971e6637429d227e79b4/CustodyServices.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/accounts/{accountId}/transactions\": get: responses: 400: contents: unsupported content types: [application/problem+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}