{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/InterDigitalInc/AdvantEDGE"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "examples/demo3/src/backend/api/swagger.yaml",
			"byteSize": 20803,
			"content": "openapi: 3.0.2\ninfo:\n  title: MEC Demo 3 API\n  description: Demo 3 is an edge application that can be used with AdvantEDGE or ETSI\n    MEC Sandbox to demonstrate MEC011 and MEC021 usage\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0\n  version: 0.0.1\nservers:\n- url: http://10.190.115.162:8093\npaths:\n  /register/app:\n    post:\n      tags:\n      - frontend\n      summary: Register with MEC Platform and create necessary resources\n      description: Register with MEC Platform and create necessary resources\n      operationId: Register\n      responses:\n        \"200\":\n          description: \"Uppon success, a response body containing the app instance\\\n            \\ info is returned\"\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ApplicationInstance'\n        \"400\":\n          description: Bad request. It is used to indicate that incorrect parameters\n            were passed to the request.\n        \"404\":\n          description: Not found\n  /info/application:\n    get:\n      tags:\n      - frontend\n      summary: Returns the application dynamic information\n      description: Returns the application dynamic information\n      operationId: GetPlatformInfo\n      responses:\n        \"200\":\n          description: \"Upon success, a response body containing the app instance\\\n            \\ info is returned\"\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ApplicationInstance'\n        \"400\":\n          description: Bad request. It is used to indicate that incorrect parameters\n            were passed to the request.\n        \"404\":\n          description: Not found\n  /info/logs:\n    get:\n      tags:\n      - frontend\n      summary: Returns activity logs\n      description: Returns activity logs\n      operationId: GetActivityLogs\n      responses:\n        \"200\":\n          description: \"Uppon success, a response body containing logs of demo activities\\\n            \\ stored as strings will be returned\"\n        \"400\":\n          description: Bad request. It is used to indicate that incorrect parameters\n            were passed to the request.\n        \"404\":\n          description: Not found\n  /info/ams:\n    get:\n      tags:\n      - frontend\n      summary: Returns the list of AMS Devices\n      description: Returns the list of AMS Devices\n      operationId: GetAmsDevices\n      responses:\n        \"200\":\n          description: \"Uppon success, a response body containing the list of ams\\\n            \\ log and context state stored as strings is returned\"\n        \"400\":\n          description: Bad request. It is used to indicate that incorrect parameters\n            were passed to the request.\n        \"404\":\n          description: Not found\n  /service/ams/update/{device}:\n    put:\n      tags:\n      - frontend\n      summary: Updates the list of AMS devices\n      description: Updates the list of AMS devices\n      operationId: UpdateAmsDevices\n      parameters:\n      - name: device\n        in: path\n        description: Start AMS service resource to track device name\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n  /service/ams/delete/{device}:\n    delete:\n      tags:\n      - frontend\n      summary: Delete an AMS device\n      description: Delete an AMS device\n      operationId: DeleteAmsDevice\n      parameters:\n      - name: device\n        in: path\n        description: Delete device from AMS service resource\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n  /info/application/delete:\n    delete:\n      tags:\n      - frontend\n      summary: Deregister with MEC Platform and delete associated resources\n      description: Deregister with MEC Platform and delete associated resources\n      operationId: Deregister\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Bad request. It is used to indicate that incorrect parameters\n            were passed to the request.\n        \"404\":\n          description: Not found\n  /services/callback/amsevent:\n    post:\n      tags:\n      - notification\n      summary: Callback endpoint for AMS Notifications\n      description: Callback endpoint for AMS Notifications\n      operationId: AmsNotificationCallback\n      requestBody:\n        description: Subscription notification\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MobilityProcedureNotification'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n  /services/callback/service-availability:\n    post:\n      tags:\n      - notification\n      summary: Callback endpoint for MEC011 Notifications\n      description: Callback endpoint for MEC011 Notifications\n      operationId: ServiceAvailNotificationCallback\n      requestBody:\n        description: service availability notification details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceAvailabilityNotification'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n  /application/termination:\n    post:\n      tags:\n      - notification\n      summary: Callback endpoint for MEC011 app-termination notifications\n      description: Callback endpoint for MEC011 app-termination notifications\n      operationId: AppTerminationNotificationCallback\n      requestBody:\n        description: app termination notification details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppTerminationSubscription'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n  /application/transfer:\n    post:\n      tags:\n      - notification\n      summary: Callback endpoint for MEC021 context-state transfer notification\n      description: Callback endpoint for MEC021 context-state transfer notification\n      operationId: ContextTransferNotificationCallback\n      requestBody:\n        description: app termination notification details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApplicationContextState'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\ncomponents:\n  schemas:\n    ApplicationInstance:\n      type: object\n      properties:\n        name:\n          type: string\n          example: MEP Name\n        url:\n          type: string\n        config:\n          type: string\n          example: app_instance1.yaml\n        ip:\n          type: string\n          example: \u003cIP:port\u003e\n        id:\n          type: string\n        mecReady:\n          type: boolean\n          description: Confirm if app instance is ready\n        mecTerminated:\n          type: boolean\n          description: Confirm the application level termination of application instance\n        amsResource:\n          type: boolean\n          description: Confirm if app instance has an ams service resource\n        subscriptions:\n          $ref: '#/components/schemas/ApplicationInstance_subscriptions'\n        offeredService:\n          $ref: '#/components/schemas/ApplicationInstance_offeredService'\n        discoveredServices:\n          type: array\n          items:\n            $ref: '#/components/schemas/ApplicationInstance_discoveredServices'\n      description: This type represent information to display on frontend app instance\n        text field\n      example:\n        mecReady: true\n        subscriptions:\n          'SerAvailabilitySubscription:':\n            subId: subId\n          AmsLinkListSubscription:\n            subId: subId\n            associateId:\n            - type: 0\n              value: value\n            - type: 0\n              value: value\n          AppTerminationSubscription:\n            subId: subId\n        amsResource: true\n        ip: \u003cIP:port\u003e\n        name: MEP Name\n        id: id\n        discoveredServices:\n        - link: link\n          serName: null\n          consumedLocalOnly: true\n          version: version\n          serInstanceId: serInstanceId\n        - link: link\n          serName: null\n          consumedLocalOnly: true\n          version: version\n          serInstanceId: serInstanceId\n        config: app_instance1.yaml\n        offeredService:\n          scopeOfLocality: MEC_SYSTEM\n          serName: serName\n          id: id\n          state: ACTIVE\n          consumedLocalOnly: true\n        url: url\n        mecTerminated: true\n    ApplicationInstance_AppTerminationSubscription:\n      type: object\n      properties:\n        subId:\n          type: string\n      description: This type represents the information that the MEC platform notifies\n        the subscribed application instance about  the corresponding application instance\n        termination/stop.\n      example:\n        subId: subId\n    ApplicationInstance_SerAvailabilitySubscription:\n      type: object\n      properties:\n        subId:\n          type: string\n      description: This type represents a subscription to the notifications from the\n        MEC platform regarding the availability of a MEC service or a list of MEC\n        services.\n      example:\n        subId: subId\n    ApplicationInstance_AmsLinkListSubscription:\n      type: object\n      properties:\n        subId:\n          type: string\n        associateId:\n          minItems: 0\n          type: array\n          description: 0 to N identifiers to associate the information for specific\n            UE(s) and flow(s).\n          items:\n            $ref: '#/components/schemas/AssociateId'\n      description: This type represents the information that the MEC platform notifies\n        the subscribed application instance about app mobility support\n      example:\n        subId: subId\n        associateId:\n        - type: 0\n          value: value\n        - type: 0\n          value: value\n    ApplicationInstance_subscriptions:\n      type: object\n      properties:\n        AppTerminationSubscription:\n          $ref: '#/components/schemas/ApplicationInstance_AppTerminationSubscription'\n        'SerAvailabilitySubscription:':\n          $ref: '#/components/schemas/ApplicationInstance_SerAvailabilitySubscription'\n        AmsLinkListSubscription:\n          $ref: '#/components/schemas/ApplicationInstance_AmsLinkListSubscription'\n      description: List of ams subscription unique to device and their id\n      example:\n        'SerAvailabilitySubscription:':\n          subId: subId\n        AmsLinkListSubscription:\n          subId: subId\n          associateId:\n          - type: 0\n            value: value\n          - type: 0\n            value: value\n        AppTerminationSubscription:\n          subId: subId\n    ApplicationInstance_offeredService:\n      type: object\n      properties:\n        serName:\n          $ref: '#/components/schemas/SerName'\n        id:\n          type: string\n        state:\n          $ref: '#/components/schemas/ServiceState'\n        scopeOfLocality:\n          $ref: '#/components/schemas/LocalityType'\n        consumedLocalOnly:\n          type: boolean\n          description: Indicate whether the service can only be consumed by the MEC\n            applications located in the same locality (as defined by scopeOfLocality)\n            as this  service instance.\n      description: service offering\n      example:\n        scopeOfLocality: MEC_SYSTEM\n        serName: serName\n        id: id\n        state: ACTIVE\n        consumedLocalOnly: true\n    ApplicationInstance_discoveredServices:\n      type: object\n      properties:\n        serName:\n          $ref: '#/components/schemas/SerName'\n        serInstanceId:\n          $ref: '#/components/schemas/SerInstanceId'\n        consumedLocalOnly:\n          type: boolean\n          description: Indicate whether the service can only be consumed by the MEC\n            applications located in the same locality (as defined by scopeOfLocality)\n            as this  service instance.\n        link:\n          type: string\n        version:\n          type: string\n          description: Service version\n      description: List of service name and their status\n      example:\n        link: link\n        serName: null\n        consumedLocalOnly: true\n        version: version\n        serInstanceId: serInstanceId\n    ApplicationContextState:\n      type: object\n      properties:\n        Counter:\n          type: integer\n          description: Integer representing state of device being tracked\n        AppId:\n          type: string\n          description: Application UUID\n        Mep:\n          type: string\n          description: MEC platform name\n        Device:\n          type: string\n          description: Terminal device application is tracking\n    LocalityType:\n      type: string\n      description: \"The scope of locality as expressed by \\\"consumedLocalOnly\\\" and\\\n        \\ \\\"isLocal\\\". If absent, defaults to MEC_HOST\"\n      enum:\n      - MEC_SYSTEM\n      - MEC_HOST\n      - NFVI_POP\n      - ZONE\n      - ZONE_GROUP\n      - NFVI_NODE\n    ServiceAvailabilityNotification:\n      required:\n      - _links\n      - notificationType\n      - serviceReferences\n      type: object\n      properties:\n        notificationType:\n          type: string\n          description: Shall be set to SerAvailabilityNotification\n          example: SerAvailabilityNotification\n        serviceReferences:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceAvailabilityNotification_serviceReferences'\n        _links:\n          $ref: '#/components/schemas/Subscription'\n      description: This type represents the service availability information.\n    AppTerminationSubscription:\n      required:\n      - _links\n      - appInstanceId\n      - callbackReference\n      - subscriptionType\n      type: object\n      properties:\n        subscriptionType:\n          type: string\n          description: Shall be set to AppTerminationSubscription.\n        callbackReference:\n          type: string\n          description: URI selected by the MEC application instance to receive notifications\n            on the subscribed MEC application instance management information. This\n            shall be included in both the request and the response.\n          format: uri\n        _links:\n          $ref: '#/components/schemas/AppTerminationSubscription__links'\n        appInstanceId:\n          type: string\n          description: It is used as the filtering criterion for the subscribed events.\n      description: This type represents the information that the MEC platform notifies\n        the subscribed application instance about  the corresponding application instance\n        termination/stop.\n      example:\n        appInstanceId: appInstanceId\n        subscriptionType: subscriptionType\n        _links:\n          self:\n            href: http://example.com/aeiou\n        callbackReference: http://example.com/aeiou\n    MobilityProcedureNotification:\n      required:\n      - mobilityStatus\n      - notificationType\n      type: object\n      properties:\n        associateId:\n          minItems: 0\n          type: array\n          description: 0 to N identifiers to associate the information for specific\n            UE(s) and flow(s).\n          items:\n            $ref: '#/components/schemas/AssociateId'\n          x-etsi-mec-cardinality: 0..N\n          x-etsi-mec-origin-type: AssociateId\n        mobilityStatus:\n          type: integer\n          description: \"Indicate the status of the UE mobility. Values are defined\\\n            \\ as following:      1 = INTERHOST_MOVEOUT_TRIGGERED.      2 = INTERHOST_MOVEOUT_COMPLETED.\\\n            \\      3 = INTERHOST_MOVEOUT_FAILED.       Other values are reserved.\"\n          x-etsi-mec-cardinality: \"1\"\n        notificationType:\n          type: string\n          description: Shall be set to \\\"MobilityProcedureNotification\\\".\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: String\n        targetAppInfo:\n          $ref: '#/components/schemas/MobilityProcedureNotification_targetAppInfo'\n        timeStamp:\n          $ref: '#/components/schemas/TimeStamp'\n      x-etsi-ref: 7.4.2\n    TimeStamp:\n      required:\n      - nanoSeconds\n      - seconds\n      type: object\n      properties:\n        nanoSeconds:\n          type: integer\n          description: \"The nanoseconds part of the time. Time is defined as Unix-time\\\n            \\ since January 1, 1970, 00:00:00 UTC.\"\n          format: int32\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: Uint32\n        seconds:\n          type: integer\n          description: \"The seconds part of the time. Time is defined as Unixtime\\\n            \\ since January 1, 1970, 00:00:00 UTC.\"\n          format: int32\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: Uint32\n    MobilityProcedureNotification_targetAppInfo:\n      type: object\n      properties:\n        appInstanceId:\n          type: string\n          description: Identifiers of the target application instance.\n          example: 10.100.0.3\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: String\n        commInterface:\n          $ref: '#/components/schemas/CommunicationInterface'\n      description: Identifiers to associate the information of target application\n        instance.\n    CommunicationInterface:\n      properties:\n        ipAddresses:\n          type: string\n    AssociateId:\n      properties:\n        type:\n          type: integer\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: Enum\n        value:\n          type: string\n          description: Value for the identifier.\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: String\n      example:\n        type: 0\n        value: value\n    AppTerminationSubscription__links:\n      required:\n      - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/LinkType'\n      description: Self-referring URI.\n      example:\n        self:\n          href: http://example.com/aeiou\n    LinkType:\n      type: object\n      properties:\n        href:\n          type: string\n          description: URI referring to a resource\n          format: uri\n          example: /mecSerMgmtApi/example\n      description: This type represents a type of link and may be referenced from\n        data structures\n    SerName:\n      type: string\n      description: The name of the service. This is how the service producing MEC\n        application identifies the service instance it produces.\n    SerInstanceId:\n      type: string\n      description: Identifier of the service instance assigned by the MEC platform.\n      readOnly: true\n    ServiceState:\n      type: string\n      description: This enumeration defines the possible states of a service.\n      enum:\n      - ACTIVE\n      - INACTIVE\n    Subscription:\n      required:\n      - subscription\n      type: object\n      properties:\n        subscription:\n          $ref: '#/components/schemas/LinkType'\n      description: A link to the related subscription\n    ServiceAvailabilityNotification_serviceReferences:\n      required:\n      - changeType\n      - serInstanceId\n      - serName\n      - state\n      type: object\n      properties:\n        link:\n          $ref: '#/components/schemas/LinkType'\n        serName:\n          $ref: '#/components/schemas/SerName'\n        state:\n          $ref: '#/components/schemas/ServiceState'\n        changeType:\n          type: string\n          description: \"Type of the change. Valid values:\\n ADDED: The service was\\\n            \\ newly added.\\n  REMOVED: The service was removed.\\n  STATE_CHANGED:\\\n            \\ Only the state of the service was changed. \\n  ATTRIBUTES_CHANGED: At\\\n            \\ least one attribute of the service other than state was changed. The\\\n            \\ change may or may not include changing the state.\"\n          enum:\n          - ADDED\n          - REMOVED\n          - STATE_CHANGED\n          - ATTRIBUTES_CHANGED\n      description: List of links to services whose availability has changed.\n",
			"canonicalURL": "/github.com/InterDigitalInc/AdvantEDGE@f203f7ab4f1cd5983fbbe2963ff72092b6e9b107/-/blob/examples/demo3/src/backend/api/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/InterDigitalInc/AdvantEDGE/blob/f203f7ab4f1cd5983fbbe2963ff72092b6e9b107/examples/demo3/src/backend/api/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/info/application\": get: responses: 200: contents: unsupported content types: [application/problem+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}