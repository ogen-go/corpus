{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-tracing-v2-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-tracing-v2-swagger.yaml",
			"byteSize": 32939,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  description: \u003e\n    Send and retrieve trace data from Stackdriver Trace. Data is generated and\n    available by default for all App Engine applications. Data from other\n    applications can be written to Stackdriver Trace for display, reporting, and\n    analysis.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Stackdriver Trace\n  version: v2\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.0.1\n      format: google\n      url: https://tracing.googleapis.com/$discovery/rest?version=v2\n      version: v1\n  x-preferred: true\n  x-providerName: googleapis.com\n  x-serviceName: tracing\nexternalDocs:\n  url: https://cloud.google.com/trace\ntags:\n  - name: projects\npaths:\n  \"/v2/{name}\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/bearer_token\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/pp\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    put:\n      description: Creates a new Span.\n      operationId: cloudtrace.projects.traces.spans.create\n      parameters:\n        - description: \u003e-\n            The resource name of the span in the following format:\n\n                projects/[PROJECT_ID]traces/[TRACE_ID]/spans/SPAN_ID is a unique identifier for a trace within a project.\n            [SPAN_ID] is a unique identifier for a span within a trace,\n\n            assigned when the span is created.\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Span\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Span\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/trace.append\n          Oauth2c:\n            - https://www.googleapis.com/auth/trace.append\n      tags:\n        - projects\n  \"/v2/{name}/traces:batchWrite\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/bearer_token\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/pp\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Sends new spans to Stackdriver Trace or updates existing traces. If the\n\n        name of a trace that you send matches that of an existing trace, new spans\n\n        are added to the existing trace. Attempt to update existing spans results\n\n        undefined behavior. If the name does not match, a new trace is created\n\n        with given set of spans.\n      operationId: cloudtrace.projects.traces.batchWrite\n      parameters:\n        - description: |-\n            Required. Name of the project where the spans belong. The format is\n            `projects/PROJECT_ID`.\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchWriteSpansRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/trace.append\n          Oauth2c:\n            - https://www.googleapis.com/auth/trace.append\n      tags:\n        - projects\n  \"/v2/{parent}/traces\":\n    get:\n      description: Returns of a list of traces that match the specified filter conditions.\n      operationId: cloudtrace.projects.traces.list\n      parameters:\n        - description: Optional. Do not return traces whose start time is later than this\n            time.\n          in: query\n          name: endTime\n          schema:\n            type: string\n        - description: |-\n            Opional. Return only traces that match this\n            [trace filter](/trace/docs/trace-filters). Example:\n\n                \"label:/http/url root:/_ah/background my_label:17\"\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: \u003e-\n            Optional. A single field used to sort the returned traces.\n\n            Only the following field names can be used:\n\n\n            *   `trace_id`: the trace's ID field\n\n            *   `name`:  the root span's resource name\n\n            *   `duration`: the difference between the root span's start time and end time\n\n            *   `start`:  the start time of the root span\n\n\n            Sorting is in ascending order unless `desc` is appended to the sort field name.\n\n            Example: `\"name desc\"`).\n          in: query\n          name: orderBy\n          schema:\n            type: string\n        - description: \u003e-\n            Optional. The maximum number of results to return from this request.\n\n            Non-positive values are ignored. The presence of `next_page_token` in the\n\n            response indicates that more results might be available, even if fewer than\n\n            the maximum number of results is returned by this request.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: \u003e-\n            Optional. If present, then retrieve the next batch of results from\n            the\n\n            preceding call to this method.  `page_token` must be the value of\n\n            `next_page_token` from the previous response.  The values of other method\n\n            parameters should be identical to those in the previous call.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: |-\n            Required. The project where the trace data is stored. The format\n            is `projects/PROJECT_ID`.\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n        - description: Optional. Do not return traces whose end time is earlier than this\n            time.\n          in: query\n          name: startTime\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListTracesResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/trace.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/trace.readonly\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/bearer_token\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/pp\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  \"/v2/{parent}:listSpans\":\n    get:\n      description: Returns a list of spans within a trace.\n      operationId: cloudtrace.projects.traces.listSpans\n      parameters:\n        - description: \u003e-\n            Optional. If present, then retrieve the next batch of results from\n            the\n\n            preceding call to this method. `page_token` must be the value of\n\n            `next_page_token` from the previous response. The values of other method\n\n            parameters should be identical to those in the previous call.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: \u003e-\n            Required: The resource name of the trace containing the spans to\n            list.\n\n            The format is `projects/PROJECT_ID/traces/TRACE_ID`.\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListSpansResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/trace.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/trace.readonly\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/bearer_token\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/pp\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\nservers:\n  - url: https://cloudtrace.googleapis.com/\ncomponents:\n  parameters:\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n          - media\n          - proto\n        default: json\n    bearer_token:\n      description: OAuth bearer token.\n      in: query\n      name: bearer_token\n      schema:\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    pp:\n      description: Pretty-print response.\n      in: query\n      name: pp\n      schema:\n        type: boolean\n        default: true\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be\n        any arbitrary string assigned to a user, but should not exceed 40\n        characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        type: string\n        enum:\n          - \"1\"\n          - \"2\"\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n            https://www.googleapis.com/auth/trace.append: Write Trace data for a project or application\n            https://www.googleapis.com/auth/trace.readonly: Read Trace data for a project or application\n    Oauth2c:\n      description: Oauth 2.0 accessCode authentication\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n            https://www.googleapis.com/auth/trace.append: Write Trace data for a project or application\n            https://www.googleapis.com/auth/trace.readonly: Read Trace data for a project or application\n  schemas:\n    Annotation:\n      description: Text annotation with a set of attributes.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/Attributes\"\n        description:\n          $ref: \"#/components/schemas/TruncatableString\"\n      type: object\n    AttributeValue:\n      description: The allowed types for [VALUE] in a `[KEY]:[VALUE]` attribute.\n      properties:\n        boolValue:\n          description: A Boolean value represented by `true` or `false`.\n          type: boolean\n        intValue:\n          description: A 64-bit signed integer.\n          format: int64\n          type: string\n        stringValue:\n          $ref: \"#/components/schemas/TruncatableString\"\n      type: object\n    Attributes:\n      description: A set of attributes, each in the format `[KEY]:[VALUE]`.\n      properties:\n        attributeMap:\n          additionalProperties:\n            $ref: \"#/components/schemas/AttributeValue\"\n          description: |-\n            The set of attributes. Each attribute's key can be up to 128 bytes\n            long. The value can be a string up to 256 bytes, an integer, or the\n            Boolean values `true` and `false`. For example:\n\n                \"/instance_id\": \"my-instance\"\n                \"/http/user_agent\": \"\"\n                \"/http/request_bytes\": 300\n                \"abc.com/myattribute\": true\n          type: object\n        droppedAttributesCount:\n          description: \u003e-\n            The number of attributes that were discarded. Attributes can be\n            discarded\n\n            because their keys are too long or because there are too many attributes.\n\n            If this value is 0 then all attributes are valid.\n          format: int32\n          type: integer\n      type: object\n    BatchWriteSpansRequest:\n      description: The request message for the `BatchWriteSpans` method.\n      properties:\n        spans:\n          description: A collection of spans.\n          items:\n            $ref: \"#/components/schemas/Span\"\n          type: array\n      type: object\n    Empty:\n      description: \u003e-\n        A generic empty message that you can re-use to avoid defining duplicated\n\n        empty messages in your APIs. A typical example is to use it as the request\n\n        or the response type of an API method. For instance:\n\n            service Foo {\n              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n            }\n\n        The JSON representation for `Empty` is empty JSON object `{}`.\n      properties: {}\n      type: object\n    Link:\n      description: \u003e-\n        A pointer from the current span to another span in the same trace or in\n        a\n\n        different trace. For example, this can be used in batching operations,\n\n        where a single batch handler processes multiple requests from different\n\n        traces or when the handler receives a request from a different project.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/Attributes\"\n        spanId:\n          description: \"`SPAN_ID` identifies a span within a trace.\"\n          type: string\n        traceId:\n          description: \"`TRACE_ID` identifies a trace within a project.\"\n          type: string\n        type:\n          description: The relationship of the current span relative to the linked span.\n          enum:\n            - TYPE_UNSPECIFIED\n            - CHILD_LINKED_SPAN\n            - PARENT_LINKED_SPAN\n          type: string\n      type: object\n    Links:\n      description: |-\n        A collection of links, which are references from this span to a span\n        in the same or different trace.\n      properties:\n        droppedLinksCount:\n          description: |-\n            The number of dropped links after the maximum size was enforced. If\n            this value is 0, then no links were dropped.\n          format: int32\n          type: integer\n        link:\n          description: A collection of links.\n          items:\n            $ref: \"#/components/schemas/Link\"\n          type: array\n      type: object\n    ListSpansResponse:\n      description: The response message for the `ListSpans` method.\n      properties:\n        nextPageToken:\n          description: \u003e-\n            If defined, indicates that there might be more spans that match the\n\n            request. Pass this as the value of `pageToken` in a subsequent request to\n\n            retrieve additional spans.\n          type: string\n        spans:\n          description: The requested spans, if there are any in the specified trace.\n          items:\n            $ref: \"#/components/schemas/Span\"\n          type: array\n      type: object\n    ListTracesResponse:\n      description: The response message for the `ListTraces` method.\n      properties:\n        nextPageToken:\n          description: \u003e-\n            If there might be more results than those appearing in this\n            response, then\n\n            `next_page_token` is included.  To get the next set of results, call this\n\n            method again using the value of `next_page_token` as `page_token`.\n          type: string\n        traces:\n          description: List of trace records returned.\n          items:\n            $ref: \"#/components/schemas/Trace\"\n          type: array\n      type: object\n    Module:\n      description: Binary module.\n      properties:\n        buildId:\n          $ref: \"#/components/schemas/TruncatableString\"\n        module:\n          $ref: \"#/components/schemas/TruncatableString\"\n      type: object\n    NetworkEvent:\n      description: An event describing an RPC message sent or received on the network.\n      properties:\n        messageId:\n          description: An identifier for the message, which must be unique in this span.\n          format: uint64\n          type: string\n        messageSize:\n          description: The number of bytes sent or received.\n          format: uint64\n          type: string\n        time:\n          description: |-\n            For sent messages, this is the time at which the first bit was sent.\n            For received messages, this is the time at which the last bit was\n            received.\n          format: google-datetime\n          type: string\n        type:\n          description: |-\n            Type of NetworkEvent. Indicates whether the RPC message was sent or\n            received.\n          enum:\n            - TYPE_UNSPECIFIED\n            - SENT\n            - RECV\n          type: string\n      type: object\n    Span:\n      description: |-\n        A span represents a single operation within a trace. Spans can be\n        nested to form a trace tree. Often, a trace contains a root span\n        that describes the end-to-end latency, and one or more subspans for\n        its sub-operations. A trace can also contain multiple root spans,\n        or none at all. Spans do not need to be contiguous\u0026mdash;there may be\n        gaps or overlaps between spans in a trace.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/Attributes\"\n        childSpanCount:\n          description: \u003e-\n            An optional number of child spans that were generated while this\n            span\n\n            was active. If set, allows implementation to detect missing child spans.\n          format: uint32\n          type: integer\n        displayName:\n          $ref: \"#/components/schemas/TruncatableString\"\n        endTime:\n          description: \u003e-\n            The end time of the span. On the client side, this is the time kept\n            by\n\n            the local machine where the span execution ends. On the server side, this\n\n            is the time when the server application handler stops running.\n          format: google-datetime\n          type: string\n        links:\n          $ref: \"#/components/schemas/Links\"\n        name:\n          description: \u003e-\n            The resource name of the span in the following format:\n\n                projects/[PROJECT_ID]traces/[TRACE_ID]/spans/SPAN_ID is a unique identifier for a trace within a project.\n            [SPAN_ID] is a unique identifier for a span within a trace,\n\n            assigned when the span is created.\n          type: string\n        parentSpanId:\n          description: |-\n            The [SPAN_ID] of this span's parent span. If this is a root span,\n            then this field must be empty.\n          type: string\n        sameProcessAsParentSpan:\n          description: \u003e-\n            A highly recommended but not required flag that identifies when a\n            trace\n\n            crosses a process boundary. True when the parent_span belongs to the\n\n            same process as the current span.\n          type: boolean\n        spanId:\n          description: The [SPAN_ID] portion of the span's resource name.\n          type: string\n        stackTrace:\n          $ref: \"#/components/schemas/StackTrace\"\n        startTime:\n          description: \u003e-\n            The start time of the span. On the client side, this is the time\n            kept by\n\n            the local machine where the span execution starts. On the server side, this\n\n            is the time when the server's application handler starts running.\n          format: google-datetime\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n        timeEvents:\n          $ref: \"#/components/schemas/TimeEvents\"\n      type: object\n    StackFrame:\n      description: Represents a single stack frame in a stack trace.\n      properties:\n        columnNumber:\n          description: |-\n            The column number where the function call appears, if available.\n            This is important in JavaScript because of its anonymous functions.\n          format: int64\n          type: string\n        fileName:\n          $ref: \"#/components/schemas/TruncatableString\"\n        functionName:\n          $ref: \"#/components/schemas/TruncatableString\"\n        lineNumber:\n          description: The line number in `file_name` where the function call appears.\n          format: int64\n          type: string\n        loadModule:\n          $ref: \"#/components/schemas/Module\"\n        originalFunctionName:\n          $ref: \"#/components/schemas/TruncatableString\"\n        sourceVersion:\n          $ref: \"#/components/schemas/TruncatableString\"\n      type: object\n    StackFrames:\n      description: A collection of stack frames, which can be truncated.\n      properties:\n        droppedFramesCount:\n          description: |-\n            The number of stack frames that were dropped because there\n            were too many stack frames.\n            If this value is 0, then no stack frames were dropped.\n          format: int32\n          type: integer\n        frame:\n          description: Stack frames in this call stack.\n          items:\n            $ref: \"#/components/schemas/StackFrame\"\n          type: array\n      type: object\n    StackTrace:\n      description: A call stack appearing in a trace.\n      properties:\n        stackFrames:\n          $ref: \"#/components/schemas/StackFrames\"\n        stackTraceHashId:\n          description: |-\n            The hash ID is used to conserve network bandwidth for duplicate\n            stack traces within a single trace.\n\n            Often multiple spans will have identical stack traces.\n            The first occurrence of a stack trace should contain both the\n            `stackFrame` content and a value in `stackTraceHashId`.\n\n            Subsequent spans within the same request can refer\n            to that stack trace by only setting `stackTraceHashId`.\n          format: uint64\n          type: string\n      type: object\n    Status:\n      description: \u003e-\n        The `Status` type defines a logical error model that is suitable for\n        different\n\n        programming environments, including REST APIs and RPC APIs. It is used by\n\n        [gRPC](https://github.com/grpc). The error model is designed to be:\n\n\n        - Simple to use and understand for most users\n\n        - Flexible enough to meet unexpected needs\n\n\n        # Overview\n\n\n        The `Status` message contains three pieces of data: error code, error message,\n\n        and error details. The error code should be an enum value of\n\n        google.rpc.Code, but it may accept additional error codes if needed.  The\n\n        error message should be a developer-facing English message that helps\n\n        developers *understand* and *resolve* the error. If a localized user-facing\n\n        error message is needed, put the localized message in the error details or\n\n        localize it in the client. The optional error details may contain arbitrary\n\n        information about the error. There is a predefined set of error detail types\n\n        in the package `google.rpc` that can be used for common error conditions.\n\n\n        # Language mapping\n\n\n        The `Status` message is the logical representation of the error model, but it\n\n        is not necessarily the actual wire format. When the `Status` message is\n\n        exposed in different client libraries and different wire protocols, it can be\n\n        mapped differently. For example, it will likely be mapped to some exceptions\n\n        in Java, but more likely mapped to some error codes in C.\n\n\n        # Other uses\n\n\n        The error model and the `Status` message can be used in a variety of\n\n        environments, either with or without APIs, to provide a\n\n        consistent developer experience across different environments.\n\n\n        Example uses of this error model include:\n\n\n        - Partial errors. If a service needs to return partial errors to the client,\n            it may embed the `Status` in the normal response to indicate the partial\n            errors.\n\n        - Workflow errors. A typical workflow has multiple steps. Each step may\n            have a `Status` message for error reporting.\n\n        - Batch operations. If a client uses batch request and batch response, the\n            `Status` message should be used directly inside batch response, one for\n            each error sub-response.\n\n        - Asynchronous operations. If an API call embeds asynchronous operation\n            results in its response, the status of those operations should be\n            represented directly using the `Status` message.\n\n        - Logging. If some API errors are stored in logs, the message `Status` could\n            be used directly after any stripping needed for security/privacy reasons.\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: |-\n            A list of messages that carry the error details.  There will be a\n            common set of message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        message:\n          description: |-\n            A developer-facing error message, which should be in English. Any\n            user-facing error message should be localized and sent in the\n            google.rpc.Status.details field, or localized by the client.\n          type: string\n      type: object\n    TimeEvent:\n      description: A time-stamped annotation or network event in the Span.\n      properties:\n        annotation:\n          $ref: \"#/components/schemas/Annotation\"\n        networkEvent:\n          $ref: \"#/components/schemas/NetworkEvent\"\n        time:\n          description: The timestamp indicating the time the event occurred.\n          format: google-datetime\n          type: string\n      type: object\n    TimeEvents:\n      description: |-\n        A collection of `TimeEvent`s. A `TimeEvent` is a time-stamped annotation\n        on the span, consisting of either user-supplied key:value pairs, or\n        details of an RPC message sent/received on the network.\n      properties:\n        droppedAnnotationsCount:\n          description: |-\n            The number of dropped annotations in all the included time events.\n            If the value is 0, then no annotations were dropped.\n          format: int32\n          type: integer\n        droppedNetworkEventsCount:\n          description: \u003e-\n            The number of dropped network events in all the included time\n            events.\n\n            If the value is 0, then no network events were dropped.\n          format: int32\n          type: integer\n        timeEvent:\n          description: A collection of `TimeEvent`s.\n          items:\n            $ref: \"#/components/schemas/TimeEvent\"\n          type: array\n      type: object\n    Trace:\n      description: |-\n        A trace describes how long it takes for an application to perform some\n        operations. It consists of a set of spans, each representing\n        an operation and including time information and operation details.\n      properties:\n        name:\n          description: \u003e-\n            The resource name of the trace in the following format:\n\n                projects/[PROJECT_ID]/traces/TRACE_ID is a unique identifier for a trace within a project.\n            The ID is assigned when the trace is created.\n          type: string\n      type: object\n    TruncatableString:\n      description: Represents a string that might be shortened to a specified length.\n      properties:\n        truncatedByteCount:\n          description: |-\n            The number of bytes removed from the original string. If this\n            value is 0, then the string was not shortened.\n          format: int32\n          type: integer\n        value:\n          description: \u003e-\n            The shortened string. For example, if the original string was 500\n\n            bytes long and the limit of the string was 128 bytes, then this\n\n            value contains the first 128 bytes of the 500-byte string. Note that\n\n            truncation always happens on the character boundary, to ensure that\n\n            truncated string is still valid UTF8. In case of multi-byte characters,\n\n            size of truncated string can be less than truncation limit.\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-tracing-v2-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-tracing-v2-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v2/{name}\": put: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}