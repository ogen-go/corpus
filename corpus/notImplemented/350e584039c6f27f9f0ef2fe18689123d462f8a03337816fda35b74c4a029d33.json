{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-datastore-v1beta1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-datastore-v1beta1-swagger.yaml",
			"byteSize": 26885,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  description: \u003e\n    Accesses the schemaless NoSQL database to provide fully managed, robust,\n    scalable storage for your application.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Cloud Datastore\n  version: v1beta1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n    - storage\n  x-logo:\n    url: https://cloud.google.com/_static/images/new-gcp-logo.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: google\n      url: https://datastore.googleapis.com/$discovery/rest?version=v1beta1\n      version: v1\n  x-preferred: false\n  x-providerName: googleapis.com\n  x-serviceName: datastore\nexternalDocs:\n  url: https://cloud.google.com/datastore/\ntags:\n  - name: projects\npaths:\n  \"/v1beta1/projects/{projectId}:export\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Exports a copy of all or a subset of entities from Google Cloud\n        Datastore\n\n        to another storage system, such as Google Cloud Storage. Recent updates to\n\n        entities may not be reflected in the export. The export occurs in the\n\n        background and its progress can be monitored and managed via the\n\n        Operation resource that is created. The output of an export may only be\n\n        used once the associated operation is done. If an export operation is\n\n        cancelled before completion it may leave partial data behind in Google\n\n        Cloud Storage.\n      operationId: datastore.projects.export\n      parameters:\n        - description: Project ID against which to make the request.\n          in: path\n          name: projectId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GoogleDatastoreAdminV1beta1ExportEntities\\\n                Request\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/GoogleLongrunningOperation\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/datastore\n          Oauth2c:\n            - https://www.googleapis.com/auth/datastore\n      tags:\n        - projects\n  \"/v1beta1/projects/{projectId}:import\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Imports entities into Google Cloud Datastore. Existing entities with the\n        same key are overwritten. The import occurs in the background and its\n        progress can be monitored and managed via the Operation resource that is\n        created. If an ImportEntities operation is cancelled, it is possible\n        that a subset of the data has already been imported to Cloud Datastore.\n      operationId: datastore.projects.import\n      parameters:\n        - description: Project ID against which to make the request.\n          in: path\n          name: projectId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GoogleDatastoreAdminV1beta1ImportEntities\\\n                Request\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/GoogleLongrunningOperation\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/datastore\n          Oauth2c:\n            - https://www.googleapis.com/auth/datastore\n      tags:\n        - projects\nservers:\n  - url: https://datastore.googleapis.com/\ncomponents:\n  parameters:\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n          - media\n          - proto\n        default: json\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be\n        any arbitrary string assigned to a user, but should not exceed 40\n        characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        type: string\n        enum:\n          - \"1\"\n          - \"2\"\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n            https://www.googleapis.com/auth/datastore: View and manage your Google Cloud Datastore data\n    Oauth2c:\n      description: Oauth 2.0 accessCode authentication\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n            https://www.googleapis.com/auth/datastore: View and manage your Google Cloud Datastore data\n  schemas:\n    GoogleDatastoreAdminV1CommonMetadata:\n      description: Metadata common to all Datastore Admin operations.\n      properties:\n        endTime:\n          description: The time the operation ended, either successfully or otherwise.\n          format: google-datetime\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: \u003e-\n            The client-assigned labels which were provided when the operation\n            was\n\n            created. May also include additional labels.\n          type: object\n        operationType:\n          description: |-\n            The type of the operation. Can be used as a filter in\n            ListOperationsRequest.\n          enum:\n            - OPERATION_TYPE_UNSPECIFIED\n            - EXPORT_ENTITIES\n            - IMPORT_ENTITIES\n            - CREATE_INDEX\n            - DELETE_INDEX\n          type: string\n        startTime:\n          description: The time that work began on the operation.\n          format: google-datetime\n          type: string\n        state:\n          description: The current state of the Operation.\n          enum:\n            - STATE_UNSPECIFIED\n            - INITIALIZING\n            - PROCESSING\n            - CANCELLING\n            - FINALIZING\n            - SUCCESSFUL\n            - FAILED\n            - CANCELLED\n          type: string\n      type: object\n    GoogleDatastoreAdminV1EntityFilter:\n      description: \u003e-\n        Identifies a subset of entities in a project. This is specified as\n\n        combinations of kinds and namespaces (either or both of which may be all, as\n\n        described in the following examples).\n\n        Example usage:\n\n\n        Entire project:\n          kinds=[], namespace_ids=[]\n\n        Kinds Foo and Bar in all namespaces:\n          kinds=['Foo', 'Bar'], namespace_ids=[]\n\n        Kinds Foo and Bar only in the default namespace:\n          kinds=['Foo', 'Bar'], namespace_ids=['']\n\n        Kinds Foo and Bar in both the default and Baz namespaces:\n          kinds=['Foo', 'Bar'], namespace_ids=['', 'Baz']\n\n        The entire Baz namespace:\n          kinds=[], namespace_ids=['Baz']\n      properties:\n        kinds:\n          description: If empty, then this represents all kinds.\n          items:\n            type: string\n          type: array\n        namespaceIds:\n          description: \u003e-\n            An empty list represents all namespaces. This is the preferred\n\n            usage for projects that don't use namespaces.\n\n\n            An empty string element represents the default namespace. This should be\n\n            used if the project has data in non-default namespaces, but doesn't want to\n\n            include them.\n\n            Each namespace in this list must be unique.\n          items:\n            type: string\n          type: array\n      type: object\n    GoogleDatastoreAdminV1ExportEntitiesMetadata:\n      description: Metadata for ExportEntities operations.\n      properties:\n        common:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1CommonMetadata\"\n        entityFilter:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1EntityFilter\"\n        outputUrlPrefix:\n          description: \u003e-\n            Location for the export metadata and data files. This will be the\n            same\n\n            value as the\n\n            google.datastore.admin.v1.ExportEntitiesRequest.output_url_prefix\n\n            field. The final output location is provided in\n\n            google.datastore.admin.v1.ExportEntitiesResponse.output_url.\n          type: string\n        progressBytes:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1Progress\"\n        progressEntities:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1Progress\"\n      type: object\n    GoogleDatastoreAdminV1ExportEntitiesResponse:\n      description: |-\n        The response for\n        google.datastore.admin.v1.DatastoreAdmin.ExportEntities.\n      properties:\n        outputUrl:\n          description: \u003e-\n            Location of the output metadata file. This can be used to begin an\n            import\n\n            into Cloud Datastore (this project or another project). See\n\n            google.datastore.admin.v1.ImportEntitiesRequest.input_url.\n\n            Only present if the operation completed successfully.\n          type: string\n      type: object\n    GoogleDatastoreAdminV1ImportEntitiesMetadata:\n      description: Metadata for ImportEntities operations.\n      properties:\n        common:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1CommonMetadata\"\n        entityFilter:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1EntityFilter\"\n        inputUrl:\n          description: \u003e-\n            The location of the import metadata file. This will be the same\n            value as\n\n            the google.datastore.admin.v1.ExportEntitiesResponse.output_url field.\n          type: string\n        progressBytes:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1Progress\"\n        progressEntities:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1Progress\"\n      type: object\n    GoogleDatastoreAdminV1IndexOperationMetadata:\n      description: Metadata for Index operations.\n      properties:\n        common:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1CommonMetadata\"\n        indexId:\n          description: The index resource ID that this operation is acting on.\n          type: string\n        progressEntities:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1Progress\"\n      type: object\n    GoogleDatastoreAdminV1Progress:\n      description: Measures the progress of a particular metric.\n      properties:\n        workCompleted:\n          description: \u003e-\n            The amount of work that has been completed. Note that this may be\n            greater\n\n            than work_estimated.\n          format: int64\n          type: string\n        workEstimated:\n          description: \u003e-\n            An estimate of how much work needs to be performed. May be zero if\n            the\n\n            work estimate is unavailable.\n          format: int64\n          type: string\n      type: object\n    GoogleDatastoreAdminV1beta1CommonMetadata:\n      description: Metadata common to all Datastore Admin operations.\n      properties:\n        endTime:\n          description: The time the operation ended, either successfully or otherwise.\n          format: google-datetime\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: \u003e-\n            The client-assigned labels which were provided when the operation\n            was\n\n            created. May also include additional labels.\n          type: object\n        operationType:\n          description: |-\n            The type of the operation. Can be used as a filter in\n            ListOperationsRequest.\n          enum:\n            - OPERATION_TYPE_UNSPECIFIED\n            - EXPORT_ENTITIES\n            - IMPORT_ENTITIES\n          type: string\n        startTime:\n          description: The time that work began on the operation.\n          format: google-datetime\n          type: string\n        state:\n          description: The current state of the Operation.\n          enum:\n            - STATE_UNSPECIFIED\n            - INITIALIZING\n            - PROCESSING\n            - CANCELLING\n            - FINALIZING\n            - SUCCESSFUL\n            - FAILED\n            - CANCELLED\n          type: string\n      type: object\n    GoogleDatastoreAdminV1beta1EntityFilter:\n      description: \u003e-\n        Identifies a subset of entities in a project. This is specified as\n\n        combinations of kinds and namespaces (either or both of which may be all, as\n\n        described in the following examples).\n\n        Example usage:\n\n\n        Entire project:\n          kinds=[], namespace_ids=[]\n\n        Kinds Foo and Bar in all namespaces:\n          kinds=['Foo', 'Bar'], namespace_ids=[]\n\n        Kinds Foo and Bar only in the default namespace:\n          kinds=['Foo', 'Bar'], namespace_ids=['']\n\n        Kinds Foo and Bar in both the default and Baz namespaces:\n          kinds=['Foo', 'Bar'], namespace_ids=['', 'Baz']\n\n        The entire Baz namespace:\n          kinds=[], namespace_ids=['Baz']\n      properties:\n        kinds:\n          description: If empty, then this represents all kinds.\n          items:\n            type: string\n          type: array\n        namespaceIds:\n          description: \u003e-\n            An empty list represents all namespaces. This is the preferred\n\n            usage for projects that don't use namespaces.\n\n\n            An empty string element represents the default namespace. This should be\n\n            used if the project has data in non-default namespaces, but doesn't want to\n\n            include them.\n\n            Each namespace in this list must be unique.\n          items:\n            type: string\n          type: array\n      type: object\n    GoogleDatastoreAdminV1beta1ExportEntitiesMetadata:\n      description: Metadata for ExportEntities operations.\n      properties:\n        common:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1beta1CommonMetadata\"\n        entityFilter:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1beta1EntityFilter\"\n        outputUrlPrefix:\n          description: \u003e-\n            Location for the export metadata and data files. This will be the\n            same\n\n            value as the\n\n            google.datastore.admin.v1beta1.ExportEntitiesRequest.output_url_prefix\n\n            field. The final output location is provided in\n\n            google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url.\n          type: string\n        progressBytes:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1beta1Progress\"\n        progressEntities:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1beta1Progress\"\n      type: object\n    GoogleDatastoreAdminV1beta1ExportEntitiesRequest:\n      description: |-\n        The request for\n        google.datastore.admin.v1beta1.DatastoreAdmin.ExportEntities.\n      properties:\n        entityFilter:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1beta1EntityFilter\"\n        labels:\n          additionalProperties:\n            type: string\n          description: Client-assigned labels.\n          type: object\n        outputUrlPrefix:\n          description: \u003e-\n            Location for the export metadata and data files.\n\n\n            The full resource URL of the external storage location. Currently, only\n\n            Google Cloud Storage is supported. So output_url_prefix should be of the\n\n            form: `gs://BUCKET_NAME[/NAMESPACE_PATH]`, where `BUCKET_NAME` is the\n\n            name of the Cloud Storage bucket and `NAMESPACE_PATH` is an optional Cloud\n\n            Storage namespace path (this is not a Cloud Datastore namespace). For more\n\n            information about Cloud Storage namespace paths, see\n\n            [Object name\n\n            considerations](https://cloud.google.com/storage/docs/naming#object-considerations).\n\n\n            The resulting files will be nested deeper than the specified URL prefix.\n\n            The final output URL will be provided in the\n\n            google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url\n\n            field. That value should be used for subsequent ImportEntities operations.\n\n\n            By nesting the data files deeper, the same Cloud Storage bucket can be used\n\n            in multiple ExportEntities operations without conflict.\n          type: string\n      type: object\n    GoogleDatastoreAdminV1beta1ExportEntitiesResponse:\n      description: |-\n        The response for\n        google.datastore.admin.v1beta1.DatastoreAdmin.ExportEntities.\n      properties:\n        outputUrl:\n          description: \u003e-\n            Location of the output metadata file. This can be used to begin an\n            import\n\n            into Cloud Datastore (this project or another project). See\n\n            google.datastore.admin.v1beta1.ImportEntitiesRequest.input_url.\n\n            Only present if the operation completed successfully.\n          type: string\n      type: object\n    GoogleDatastoreAdminV1beta1ImportEntitiesMetadata:\n      description: Metadata for ImportEntities operations.\n      properties:\n        common:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1beta1CommonMetadata\"\n        entityFilter:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1beta1EntityFilter\"\n        inputUrl:\n          description: \u003e-\n            The location of the import metadata file. This will be the same\n            value as\n\n            the google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url\n\n            field.\n          type: string\n        progressBytes:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1beta1Progress\"\n        progressEntities:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1beta1Progress\"\n      type: object\n    GoogleDatastoreAdminV1beta1ImportEntitiesRequest:\n      description: |-\n        The request for\n        google.datastore.admin.v1beta1.DatastoreAdmin.ImportEntities.\n      properties:\n        entityFilter:\n          $ref: \"#/components/schemas/GoogleDatastoreAdminV1beta1EntityFilter\"\n        inputUrl:\n          description: \u003e-\n            The full resource URL of the external storage location. Currently,\n            only\n\n            Google Cloud Storage is supported. So input_url should be of the form:\n\n            `gs://BUCKET_NAME[/NAMESPACE_PATH]/OVERALL_EXPORT_METADATA_FILE`, where\n\n            `BUCKET_NAME` is the name of the Cloud Storage bucket, `NAMESPACE_PATH` is\n\n            an optional Cloud Storage namespace path (this is not a Cloud Datastore\n\n            namespace), and `OVERALL_EXPORT_METADATA_FILE` is the metadata file written\n\n            by the ExportEntities operation. For more information about Cloud Storage\n\n            namespace paths, see\n\n            [Object name\n\n            considerations](https://cloud.google.com/storage/docs/naming#object-considerations).\n\n\n            For more information, see\n\n            google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url.\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: Client-assigned labels.\n          type: object\n      type: object\n    GoogleDatastoreAdminV1beta1Progress:\n      description: Measures the progress of a particular metric.\n      properties:\n        workCompleted:\n          description: \u003e-\n            The amount of work that has been completed. Note that this may be\n            greater\n\n            than work_estimated.\n          format: int64\n          type: string\n        workEstimated:\n          description: \u003e-\n            An estimate of how much work needs to be performed. May be zero if\n            the\n\n            work estimate is unavailable.\n          format: int64\n          type: string\n      type: object\n    GoogleLongrunningOperation:\n      description: \u003e-\n        This resource represents a long-running operation that is the result of\n        a\n\n        network API call.\n      properties:\n        done:\n          description: \u003e-\n            If the value is `false`, it means the operation is still in\n            progress.\n\n            If `true`, the operation is completed, and either `error` or `response` is\n\n            available.\n          type: boolean\n        error:\n          $ref: \"#/components/schemas/Status\"\n        metadata:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: \u003e-\n            Service-specific metadata associated with the operation.  It\n            typically\n\n            contains progress information and common metadata such as create time.\n\n            Some services might not provide such metadata.  Any method that returns a\n\n            long-running operation should document the metadata type, if any.\n          type: object\n        name:\n          description: \u003e-\n            The server-assigned name, which is only unique within the same\n            service that\n\n            originally returns it. If you use the default HTTP mapping, the\n\n            `name` should be a resource name ending with `operations/{unique_id}`.\n          type: string\n        response:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: \u003e-\n            The normal response of the operation in case of success.  If the\n            original\n\n            method returns no data on success, such as `Delete`, the response is\n\n            `google.protobuf.Empty`.  If the original method is standard\n\n            `Get`/`Create`/`Update`, the response should be the resource.  For other\n\n            methods, the response should have the type `XxxResponse`, where `Xxx`\n\n            is the original method name.  For example, if the original method name\n\n            is `TakeSnapshot()`, the inferred response type is\n\n            `TakeSnapshotResponse`.\n          type: object\n      type: object\n    Status:\n      description: \u003e-\n        The `Status` type defines a logical error model that is suitable for\n\n        different programming environments, including REST APIs and RPC APIs. It is\n\n        used by [gRPC](https://github.com/grpc). Each `Status` message contains\n\n        three pieces of data: error code, error message, and error details.\n\n\n        You can find out more about this error model and how to work with it in the\n\n        [API Design Guide](https://cloud.google.com/apis/design/errors).\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: \u003e-\n            A list of messages that carry the error details.  There is a common\n            set of\n\n            message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        message:\n          description: |-\n            A developer-facing error message, which should be in English. Any\n            user-facing error message should be localized and sent in the\n            google.rpc.Status.details field, or localized by the client.\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-datastore-v1beta1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-datastore-v1beta1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1beta1/projects/{projectId}:export\": post: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}