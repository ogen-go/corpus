{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/waarzitjenu/server"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "api/swagger.yaml",
			"byteSize": 8445,
			"content": "openapi: 3.0.1\ninfo:\n  title: waarzitjenu/server\n  description: \u003e-\n    This is the API specification of waarzitjenu/server, an app built to\n    receive location updates from the OsmAnd app on iOS and Android devices.\n    \u003cbr\u003e\u003cbr\u003e The location tracker is not limited to OsmAnd, it is also possible\n    to submit and retrieve location updates from other sources.\n  license:\n    name: EUPL v1.2\n    url: 'https://github.com/waarzitjenu/server/blob/master/LICENSE.txt'\n  version: 1.1.0\nexternalDocs:\n  description: View the source code on GitHub\n  url: 'https://github.com/waarzitjenu/server'\ntags:\n  - name: tracking\n    description: Submitting and retrieving location updates\ncomponents:\n  schemas:\n    unix_timestamp_millis:\n      description: The current Unix timestamp with millisecond precision.\n      type: number\n      format: uint64\n      example: 1602512754000\n    latitude:\n      description: The current latitude in decimal degrees.\n      type: number\n      format: float64\n      minimum: -90\n      maximum: 90\n      example: -4.916161356915467\n    longitude:\n      description: The current longitude in decimal degrees.\n      type: number\n      format: float64\n      minimum: -180\n      maximum: 180\n      example: -160.2222180986629\n    altitude:\n      description: The current altitude in meters above sea level.\n      type: number\n      format: float64\n      example: 134.20841187793522\n    hdop:\n      description: Horizontal dilution of precision.\n      type: number\n      format: float64\n      example: 1.1547510249347204\n    speed:\n      description: The current speed in meters/second.\n      type: number\n      format: float64\n      example: 64.77147256992421\n    LocationUpdate:\n      type: object\n      required:\n        - latitude\n        - longitude\n        - timestamp\n      properties:\n        timestamp:\n          $ref: '#/components/schemas/unix_timestamp_millis'\n        latitude:\n          $ref: '#/components/schemas/latitude'\n        longitude:\n          $ref: '#/components/schemas/longitude'\n        altitude:\n          $ref: '#/components/schemas/altitude'\n        hdop:\n          $ref: '#/components/schemas/hdop'\n        speed:\n          $ref: '#/components/schemas/speed'\n    LocationUpdates:\n      type: array\n      items:\n        $ref: '#/components/schemas/LocationUpdate'\n    DatabaseEntry:\n      type: object\n      required:\n        - ID\n        - Timestamp\n        - Data\n      properties:\n        ID:\n          type: number\n          format: uint64\n        Timestamp:\n          $ref: '#/components/schemas/unix_timestamp_millis'\n        Data:\n          $ref: '#/components/schemas/LocationUpdate'\n    DatabaseEntries:\n      type: array\n      items:\n        $ref: '#/components/schemas/DatabaseEntry'\n  parameters:\n    lat:\n      name: lat\n      in: query\n      description: The current latitude in decimal degrees.\n      schema:\n        $ref: '#/components/schemas/latitude'\n    lon:\n      name: lon\n      in: query\n      description: The current longitude in decimal degrees.\n      schema:\n        $ref: '#/components/schemas/longitude'\n    timestamp:\n      name: timestamp\n      in: query\n      description: The current Unix timestamp with millisecond precision.\n      schema:\n        $ref: '#/components/schemas/unix_timestamp_millis'\n    hdop:\n      name: hdop\n      in: query\n      description: Horizontal dilution of precision.\n      schema:\n        $ref: '#/components/schemas/hdop'\n    alt:\n      name: alt\n      in: query\n      description: Altitude in meters above sea-level.\n      schema:\n        $ref: '#/components/schemas/altitude'\n    speed:\n      name: speed\n      in: query\n      description: Speed in m/s.\n      schema:\n        $ref: '#/components/schemas/speed'\n  responses:\n    SubmitLocationUpdate:\n      description: \u003e-\n        Location has been submitted. A response containing the database entry is\n        shown.\n      content:\n        application/json:\n          examples:\n            Single update:\n              value:\n                - ID: 102\n                  Timestamp: 1602512754000\n                  Data:\n                    latitude: -4.916161356915467\n                    longitude: -160.22221809866298\n                    timestamp: 1602512754\n                    hdop: 1.1547510249347204\n                    altitude: 134.20841187793522\n                    speed: 64.77147256992421\n    RetrieveLocationUpdates:\n      description: Retrieving last known location(s) successful.\n      content:\n        application/json:\n          examples:\n            Single location update:\n              value:\n                - ID: 102\n                  Timestamp: 1602512754000\n                  Data:\n                    latitude: -4.916161356915467\n                    longitude: -160.2222180986629\n                    timestamp: 1602512754\n                    hdop: 1.1547510249347204\n                    altitude: 134.20841187793522\n                    speed: 64.77147256992421\n            Multiple location updates (using the count parameter):\n              value:\n                - ID: 102\n                  Timestamp: 1602512754\n                  Data:\n                    latitude: -4.916161356915467\n                    longitude: -160.2222180986629\n                    timestamp: 1602512754000\n                    hdop: 1.1547510249347204\n                    altitude: 134.20841187793522\n                    speed: 64.77147256992421\n                - ID: 101\n                  Timestamp: 1602512754\n                  Data:\n                    latitude: 33.97124421257169\n                    longitude: 160.0357362345378\n                    timestamp: 1602512754\n                    hdop: 13.786868053846266\n                    altitude: 1681.498893225688\n                    speed: 53.014155880294894\n                - ID: 100\n                  Timestamp: 1602512753\n                  Data:\n                    latitude: -60.01392249824546\n                    longitude: 98.42609160095583\n                    timestamp: 1602512753\n                    hdop: 14.713819682956101\n                    altitude: 885.1180921964191\n                    speed: 51.32874621010568\npaths:\n  /submit:\n    summary: Submit a location update to the server\n    get:\n      summary: Submit a single location update (for OsmAnd)\n      description: The GET request is used for backwards compatability with the OsmAnd app.\n      operationId: ''\n      parameters:\n        - $ref: '#/components/parameters/timestamp'\n        - $ref: '#/components/parameters/lat'\n        - $ref: '#/components/parameters/lon'\n        - $ref: '#/components/parameters/hdop'\n        - $ref: '#/components/parameters/alt'\n        - $ref: '#/components/parameters/speed'\n      responses:\n        '204':\n          description: No content. OsmAnd does not need it.\n        '401':\n          description: Not authenticated.\n      tags:\n        - tracking\n    post:\n      summary: Submit a single or multiple location updates\n      description: \u003e-\n        With POST /submit, the user could submit a single or multiple status\n        updates. The request body should contain the update(s), wrapped as\n        object(s) within an array, as JSON.\u003cbr\u003e\u003cbr\u003e Upon success, the server\n        will return the HTTP Status 201 CREATED and it shows the value that has\n        been added to the database.\n      operationId: ''\n      requestBody:\n        description: Single location update\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LocationUpdates'\n      responses:\n        '201':\n          $ref: '#/components/responses/RetrieveLocationUpdates'\n        '401':\n          description: Not authenticated.\n      tags:\n        - tracking\n  /retrieve:\n    summary: Retrieves location updates\n    get:\n      summary: Retrieves the last known location\n      description: ''\n      operationId: ''\n      responses:\n        '200':\n          $ref: '#/components/responses/RetrieveLocationUpdates'\n        '204':\n          description: No location update has been submitted to the database yet.\n        '401':\n          description: Not authenticated.\n      tags:\n        - tracking\n      parameters:\n        - in: query\n          name: count\n          required: false\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 65535\n          description: The number of items to return.\nservers:\n  - url: 'http://localhost:8080/'\n    variables: {}\n\n",
			"canonicalURL": "/github.com/waarzitjenu/server@331ca6adee2465e385044202146722aa904ec6e8/-/blob/api/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/waarzitjenu/server/blob/331ca6adee2465e385044202146722aa904ec6e8/api/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/retrieve\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}