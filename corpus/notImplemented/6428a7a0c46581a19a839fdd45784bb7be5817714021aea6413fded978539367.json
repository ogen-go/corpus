{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hyperledger-labs/fabric-operations-console"
		},
		"file": {
			"name": "ibp_openapi_v2.yaml",
			"size": 0,
			"path": "packages/athena/json_docs/json_validation/ibp_openapi_v2.yaml",
			"byteSize": 390604,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: IBM Blockchain Platform APIs\n  description: This doc lists APIs that you can use to interact with your IBM Blockchain Platform console (IBP console)\n  contact:\n    name: Blockchain Service Support\n    url: https://cloud.ibm.com/docs/blockchain/ibmblockchain_support.html#ibmblockchain_support\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 2.5.0\n  x-alternate-name: blockchain\n  x-codegen-config:\n    go:\n      apiPackage: 'github.ibm.com/ibmcloud/blockchain-go-sdk'\n  x-try-it-out-enabled:\n    enabled: false\n\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\n\nservers:\n  - url: https://{instance_id}.{cluster_id}.blockchain.cloud.ibm.com\n    variables:\n      instance_id:\n        description: The id of the instance of the blockchain service\n        default: my-instance-id\n      cluster_id:\n        description: The id of the cluster where the blockchain service is located\n        default: my-cluster-id\n\nsecurity:\n  - BearerAuth: []\n\ntags:\n  - name: Manage component\n    description: APIs to get, create, import, edit, or delete a component.\n  - name: Manage multiple components\n    description: APIs to get \u0026 delete multiple components.\n  - name: Administer the IBP console\n    description: APIs to change or monitor the IBP console.\n  - name: Download examples\n    description: APIs to get postman collections and swagger files.\n  - name: IBP Software APIs\n    description: APIs that are only available for IBP Software (OpenShift Container Platform or IBM Cloud Private)\n#\n#\n#\n#.\n# -------------------------------------------------------------------------------------------------------------------------------------------------------------\n# All the error messages from input validation\n# -------------------------------------------------------------------------------------------------------------------------------------------------------------\nx-validate_error_messages:\n  # when a required key is not sent\n  missing_required: \"Expected parameter '$PROPERTY_NAME' to exist.\"\n\n  # when the sent value is of the wrong datatype\n  invalid_type: \"Expected parameter '$PROPERTY_NAME' to be of type: '$PROPERTY_TYPE', but instead was: '$TYPE'.\"\n\n  # when the numeric value is too large or too small\n  too_large: \"Parameter '$PROPERTY_NAME' is out of range. Must be \u003c= $MAX.\"\n  too_small: \"Parameter '$PROPERTY_NAME' is out of range. Must be \u003e= $MIN.\"\n\n  # when the value is not one of the approved values\n  invalid_value: \"Expected parameter '$PROPERTY_NAME' to be one of these values: $VALUES.\"\n\n  # when the value is one of the not-allowed values\n  illegal_value: \"Parameter '$PROPERTY_NAME' cannot be any of these values: $VALUES.\"\n\n  # when the value for key cannot be set or edited\n  illegal_key: \"Parameter '$PROPERTY_NAME' is automatically populated. It can not be set.\"\n  illegal_key_edit: \"Parameter '$PROPERTY_NAME' is either never editable or not editable via this api.\"\n\n  # when the string length is too short or too long\n  str_too_small: \"Expected parameter '$PROPERTY_NAME' is too short. Must be \u003e= $MIN characters.\"\n  str_too_large: \"Expected parameter '$PROPERTY_NAME' is too long. Must be \u003c= $MAX characters.\"\n\n  # when the PEM cert is not parsable\n  invalid_certificate: \"Expected parameter '$PROPERTY_NAME' to be a Base64 encoded PEM-string.\"\n\n  # when the resource units are bad, OR the value is crazy (too high or negative)\n  invalid_cpu_units: \"Parameter '$PROPERTY_NAME' must be a valid CPU value. Try values similar to '250m' or '0.25'.\"\n  invalid_memory_units: \"Parameter '$PROPERTY_NAME' must be a valid memory value. Try values similar to '1GiB' or '1024MiB'.\"\n  invalid_storage_units: \"Parameter '$PROPERTY_NAME' must be a valid storage value. Try values similar to '128GiB' or '131072MiB'.\"\n\n  # when the deployment resource requests are less than the upper limits\n  invalid_requests_for_limits: \"Parameter '$PROPERTY_NAME' is invalid. 'requests' must be \u003c= 'limits'. requests: '$REQUESTS', limits: '$LIMITS'.\"\n\n  # when the duration string (like 1s) units are bad, or the value is crazy (too high or negative)\n  invalid_duration_units: \"Parameter '$PROPERTY_NAME' must be a valid duration string. Try values similar to '1h' or '3600s'.\"\n\n  # regular expression failures on the value\n  regex_fail_full_url: The field '$PROPERTY_NAME' must be a url including the protocol, hostname/ip and port.\n  regex_invalid_msp_id: The field '$PROPERTY_NAME' can only contain alphanumerics characters, dashes, and dots.\n  regex_invalid_enroll_chars: The field '$PROPERTY_NAME' cannot contain white space or these characters :\\\u003c\u003e#{}%`[]\\^~|\"\n  regex_fail_host_and_port: The field '$PROPERTY_NAME' must be a url including the hostname/ip and port. Do not include the protocol.\n  regex_fail_start_non_letter: The field '$PROPERTY_NAME' must start with a letter.\n  regex_fail_valid_id: The field '$PROPERTY_NAME' must start with a letter, be lowercase and only contain letters, numbers, dashes or underscores.\n\n  # fall back regular expression failure (when the desired regex error message is not found, like I forgot to write one)\n  regex_generic_error: \"Parameter '$PROPERTY_NAME' is malformed.\"\n\n  # when the object has an unknown key AND unknown keys are not allowed\n  no_extra_keys: \"Parameter '$PROPERTY_NAME' is an unknown key for object.\"\n\n  # when the component type is not found anywhere, thus we don't know how to validate the request\n  missing_type: \"Expected the component 'type' to be in the body or route.\"\n\n  # when the query parameter should have been a array of strings, but was not\n  invalid_query_param_arr_str: \"Expected the query parameter '$PROPERTY_NAME' to be an array of strings. Try values similar to ?filter_orderers=['my-orderer.ibp.us-south.containers.appdomain.cloud']\"\n\n  # when the array length is too short or too long\n  arr_too_small: \"Expected parameter '$PROPERTY_NAME' is too small. Array must have \u003e= $MIN element(s).\"\n  arr_too_large: \"Expected parameter '$PROPERTY_NAME' is too large. Array must have \u003c= $MAX element(s).\"\n\n  # query parameter is not supported by api\n  unsupported_query: \"The query parameter '$PROPERTY_NAME' is not supported by this route.\"\n\n  # query parameter is not applicable to the component in the api\n  invalid_query_param_import: \"The query parameter '$PROPERTY_NAME' with value '$VALUE' is not applicable on imported components.\"\n\n  # this api is not applicable to imported components\n  invalid_on_imported_comps: \"This api is not applicable on imported components.\"\n\n  # this array is not the same length as the master array field\n  unmatched_lengths: \"Expected array '$PROPERTY_NAME' to be the same length as '$MASTER_PROPERTY' ($LEN elements).\"\n\n  # it is invalid to have this parameter and another parameter in the same body.\n  invalid_combo_not_exist: \"Parameter '$PROPERTY_NAME' is incompatible with parameter '$CONFLICT_PROPERTY'. Only one of these fields can exist.\"\n\n  # it is invalid to have this parameter and NOT have another parameter in the same body.\n  invalid_combo_missing: \"Parameter '$PROPERTY_NAME' is missing companion parameter '$COMPANION_PROPERTY'. Both fields must exist.\"\n\n  # it is invalid to set this field if using a free k8s plan - doesn't apply to IBP software\n  invalid_key_on_free_plan: \"A *free* IBM Cloud Kubernetes cluster cannot use the parameter '$PROPERTY_NAME'.\"\n\n  # it is invalid to set more than 1 key in this body\n  too_many_keys: \"Too many fields in body. This API only supports 1 field in the body. Use multiple apis to update multiple fields.\"\n\n  # this value must be a known hostname, typically from an imported or deployed CA\n  unknown_enroll_host: \"The parameter '$PROPERTY_NAME' was not found in the list of known hostnames. Import the CA using this hostname or use a hostname that is already known.\"\n\n  # it is invalid to upgrade fabric from version x to y\n  invalid_fabric_upgrade: \"Invalid '$PROPERTY_NAME' value. Upgrading Fabric from '$VALUE' to '$VALUE2' is a potentially breaking update. Read the Fabric docs for details. You can override this by setting \\\"ignore_warnings\\\" to true.\"\n\n#\n#\n#\n#.\n# ------------------------------------------------------------------------------------------------------------------------------------------------------------\n# Paths\n# ------------------------------------------------------------------------------------------------------------------------------------------------------------\npaths:\n  /ak/api/v2/components/{id}:\n    get:\n      tags:\n        - Manage component\n      summary: Get component data\n      description: Get the IBP console's data on a component (peer, CA, orderer, or MSP). The component might be imported or created.\n      operationId: get_component\n      parameters:\n        - $ref: '#/components/parameters/PathIdGet'\n        - $ref: '#/components/parameters/QueryDeploymentAttrs'\n        - $ref: '#/components/parameters/QueryParsedCerts'\n        - $ref: '#/components/parameters/QueryCache'\n        - $ref: '#/components/parameters/QueryCaAttrs'\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \"https://{API-Endpoint}/ak/api/v2/components/{Component-ID}?cache=skip\u0026deployment_attrs=included\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Get data for component \"{Component-ID}\"\n                      opts := service.NewGetComponentOptions(\"{Component-ID}\")\n                      result, detailedResponse, err := service.GetComponent(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericComponentResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n        404:\n          description: Component in request was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFound'\n\n    delete:\n      tags:\n        - Manage component\n      summary: Remove imported component\n      description: |\n        Remove a single component from the IBP console.\n        - Using this api on an **imported** component removes it from the IBP console.\n        - Using this api on a **created** component removes it from the IBP console **but** it will **not** delete the component from the Kubernetes cluster where it resides. Thus it orphans the Kubernetes deployment (if it exists). Instead use the [Delete component](#delete-component) API to delete the Kubernetes deployment and the IBP console data at once.\n      operationId: remove_component\n      parameters:\n        - name: id\n          in: path\n          description: The `id` of the imported component to remove. Use the [Get all components](#get-all-components) API to determine the component id.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X DELETE \"https://{API-Endpoint}/ak/api/v2/components/{Component-ID}\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Remove component\n                      opts := service.NewRemoveComponentOptions(\"myca\")\n                      result, detailedResponse, err := service.RemoveComponent(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteComponentResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/kubernetes/components/{id}:\n    delete:\n      deprecated: true # not available in opensource console\n      tags:\n        - Manage component\n      summary: Delete component\n      description: |\n        Removes a single component from the IBP console **and** it deletes the Kubernetes deployment.\n        - Using this api on an **imported** component will *error out* since its Kubernetes deployment is unknown and cannot be removed. Instead use the [Remove imported component](#remove-imported-component) API to remove imported components.\n        - Using this api on a **created** component removes it from the IBP console **and** it will delete the component from the Kubernetes cluster where it resides. The Kubernetes delete must succeed before the component will be removed from the IBP console.\n      operationId: delete_component\n      parameters:\n        - name: id\n          in: path\n          description: The `id` of the component to delete. Use the [Get all components](#get-all-components) API to determine the id of the component to be deleted.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X DELETE \"https://{API-Endpoint}/ak/api/v2/kubernetes/components/{Component-ID}\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                       authenticator := \u0026core.IamAuthenticator{\n                           ApiKey: \"{API-Key}\",\n                       }\n\n                       // Create an instance of the \"BlockchainV2Options\" struct\n                       options := \u0026blockchainv2.BlockchainV2Options{\n                           Authenticator: authenticator,\n                           URL: \"https://{API-Endpoint}\",\n                       }\n\n                       // Create an instance of the \"BlockchainV2\" service client.\n                       service, err := blockchainv2.NewBlockchainV2(options)\n                       if err != nil {\n                           return\n                       }\n\n                       // Delete component\n                       opts := service.NewDeleteComponentOptions(\"myca\")\n                       replace, detailedResponse, err := service.DeleteComponent(opts)\n                       fmt.Println(\"result:\", replace)\n                       fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteComponentResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n        404:\n          description: Component in request was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFound'\n\n  /ak/api/v2/kubernetes/components/fabric-ca:\n    post:\n      deprecated: true # not available in opensource console\n      tags:\n        - Manage component\n      summary: Create a CA\n      description: Create a Hyperledger Fabric Certificate Authority (CA) in your Kubernetes cluster.\n      operationId: create_ca\n      requestBody:\n        description: Create a CA in your Kubernetes cluster.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCaBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \"https://{API-Endpoint}/ak/api/v2/kubernetes/components/fabric-ca\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"display_name\\\": \\\"My CA\\\",\n                            \\\"config_override\\\":{\n                              \\\"ca\\\":{\n                                \\\"registry\\\":{\n                                  \\\"maxenrollments\\\": -1,\n                                  \\\"identities\\\": [{\n                                    \\\"name\\\": \\\"admin\\\",\n                                    \\\"pass\\\": \\\"password\\\",\n                                    \\\"type\\\": \\\"client\\\",\n                                    \\\"affiliation\\\": \\\"\\\",\n                                    \\\"attrs\\\":{\n                                            \\\"hf.Registrar.Roles\\\": \\\"*\\\",\n                                            \\\"hf.Registrar.DelegateRoles\\\": \\\"*\\\",\n                                            \\\"hf.Revoker\\\": true,\n                                            \\\"hf.IntermediateCA\\\": true,\n                                            \\\"hf.GenCRL\\\": true,\n                                            \\\"hf.Registrar.Attributes\\\": \\\"*\\\",\n                                            \\\"hf.AffiliationMgr\\\": true\n                                    }\n                                  }]\n                                }\n                              }\n                            }\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Create CA\n                      var identities []blockchainv2.ConfigCARegistryIdentitiesItem\n                      svc, err := service.NewConfigCARegistryIdentitiesItem(\"{User_Name}\", \"{Secret}\", \"{Type}\")\n                      if err != nil {\n                        return //err\n                      }\n                      identities = append(identities, *svc)\n                      registry, err := service.NewConfigCARegistry(-1, identities)\n                      if err != nil {\n                        return\n                      }\n                      ca_config_create, err := service.NewConfigCACreate(registry)\n                      if err != nil {\n                        return\n                      }\n                      config_override, err := service.NewCreateCaBodyConfigOverride(ca_config_create)\n                      if err != nil {\n                        return\n                      }\n                      opts := service.NewCreateCaOptions(\"{ Display_Name }\", config_override)\n                      result, detailedResponse, err := service.CreateCa(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CaResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/components/fabric-ca:\n    post:\n      deprecated: true # not available in opensource console\n      tags:\n        - Manage component\n      summary: Import a CA\n      description: Import an existing Certificate Authority (CA) to your IBP console. It is recommended to only import components that were created by this or another IBP console.\n      operationId: import_ca\n      requestBody:\n        description: Import a CA.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImportCaBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \"https://{API-Endpoint}/ak/api/v2/components/fabric-ca\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"name\\\": \\\"My Imported CA\\\",\n                            \\\"api_url\\\": \\\"https://n3a3ec3-myca.ibp.us-south.containers.appdomain.cloud:7054\\\",\n                            \\\"operations_url\\\": \\\"https://n3a3ec3-myca.ibp.us-south.containers.appdomain.cloud:9443\\\",\n                            \\\"ca_name\\\": \\\"ca\\\",\n                            \\\"tlsca_name\\\": \\\"tlsca\\\",\n                            \\\"tls_cert\\\": \\\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\\\",\n                            \\\"location\\\": \\\"ibmcloud\\\"\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Import CA\n                      opts := service.NewImportCaOptions(\"{Display_Name}\", \"{API_URL}\", \"{CA_Name}\", \"{TLS_CA_Name}\", \"{TLS_Cert}\")\n                      result, detailedResponse, err := service.ImportCa(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CaResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/kubernetes/components/fabric-ca/{id}:\n    put:\n      deprecated: true # not available in opensource console\n      tags:\n        - Manage component\n      summary: Update a CA\n      description: Update Kubernetes deployment attributes of a Hyperledger Fabric Certificate Authority (CA) in your cluster.\n      operationId: update_ca\n      parameters:\n        - $ref: '#/components/parameters/PathIdEdit'\n      requestBody:\n        description: Update a CA in your Kubernetes cluster. **Only set 1 root body field.** Use multiple API requests to change multiple fields.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCaBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \"https://{API-Endpoint}/ak/api/v2/kubernetes/components/fabric-ca/{Component-ID}\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"resources\\\":{\n                              \\\"ca\\\":{\n                                \\\"requests\\\":{\n                                  \\\"cpu\\\": \\\"200m\\\",\n                                  \\\"memory\\\":\\\"256Mi\\\"\n                                }\n                              }\n                             }\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                        ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                        Authenticator: authenticator,\n                        URL:           \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                        return\n                      }\n\n                      // Update CA\n                      cpu := \"200m\"\n                      memory := \"256Mi\"\n                      resourceRequests := blockchainv2.ResourceRequests{Cpu: \u0026cpu, Memory: \u0026memory}\n                      resourceObject, err := service.NewResourceObject(\u0026resourceRequests)\n                      if err != nil {\n                        return\n                      }\n\n                      caBodyResources, err := service.NewUpdateCaBodyResources(resourceObject)\n                      if err != nil {\n                        return\n                      }\n\n                      opts := service.NewUpdateCaOptions(\"{ CA_Id }\")\n                      opts.SetResources(caBodyResources)\n                      result, detailedResponse, err := service.UpdateCa(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CaResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n        404:\n          description: Component in request was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFound'\n\n  /ak/api/v2/components/fabric-ca/{id}:\n    put:\n      deprecated: true # not available in opensource console\n      tags:\n        - Manage component\n      summary: Edit data about a CA\n      description: Modify local metadata fields of a Certificate Authority (CA). For example, the \"display_name\" field. This API will **not** change any Kubernetes deployment attributes for the CA.\n      operationId: edit_ca\n      parameters:\n        - $ref: '#/components/parameters/PathIdEdit'\n      requestBody:\n        description: Edit local metadata about a CA. All body fields are optional (only send the fields that you want to change).\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditCaDataBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \"https://{API-Endpoint}/ak/api/v2/components/{Component-ID}\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"display_name\\\": \\\"My Other CA\\\",\n                            \\\"tags\\\": [\\\"fabric-ca\\\", \\\"ibm_saas\\\", \\\"blue_team\\\", \\\"dev\\\"]\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                        ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                        Authenticator: authenticator,\n                        URL:           \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                        return\n                      }\n\n                      // Edit CA Data\n                      tags := [4]string{\"fabric-ca\", \"ibm_sass\", \"blue_team\", \"dev\"}\n                      opts := service.NewEditCaOptions(\"{CA_Id}\")\n                      opts.SetCaName(\"My Ca Edited\")\n                      opts.SetTags(tags[:])\n                      result, detailedResponse, err := service.EditCa(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CaResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n        404:\n          description: Component in request was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFound'\n\n  /ak/api/v2/kubernetes/components/fabric-peer:\n    post:\n      deprecated: true # not available in opensource console\n      tags:\n        - Manage component\n      summary: Create a peer\n      description: Create a Hyperledger Fabric peer in your Kubernetes cluster.\n      operationId: create_peer\n      requestBody:\n        description: Create a Hyperledger Fabric peer in your Kubernetes cluster.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePeerBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \"https://{API-Endpoint}/ak/api/v2/kubernetes/components/fabric-peer\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"display_name\\\": \\\"My Peer\\\",\n                            \\\"msp_id\\\": \\\"org2\\\",\n                            \\\"config\\\": {\n                              \\\"enrollment\\\": {\n                                \\\"component\\\": {\n                                  \\\"cahost\\\": \\\"n3a3ec3-myca.ibp.us-south.containers.appdomain.cloud\\\",\n                                  \\\"caport\\\": \\\"7054\\\",\n                                  \\\"caname\\\": \\\"ca\\\",\n                                  \\\"catls\\\": {\n                                    \\\"cacert\\\": \\\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\\\"\n                                  },\n                                  \\\"enrollid\\\": \\\"admin\\\",\n                                  \\\"enrollsecret\\\": \\\"password\\\",\n                                  \\\"admincerts\\\": [\n                                    \\\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkFkbWluIGNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\\\"\n                                  ]\n                                },\n                                \\\"tls\\\": {\n                                  \\\"cahost\\\": \\\"n3a3ec3-myca.ibp.us-south.containers.appdomain.cloud\\\",\n                                  \\\"caport\\\": \\\"7054\\\",\n                                  \\\"caname\\\": \\\"tlsca\\\",\n                                  \\\"catls\\\": {\n                                    \\\"cacert\\\": \\\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\\\"\n                                  },\n                                  \\\"enrollid\\\": \\\"admin\\\",\n                                  \\\"enrollsecret\\\": \\\"password\\\",\n                                  \\\"admincerts\\\": [\n                                    \\\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkFkbWluIGNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\\\"\n                                  ]\n                                }\n                              }\n                            },\n                            \\\"config_override\\\": {\n                              \\\"chaincode\\\": {\n                                \\\"startuptimeout\\\": \\\"480s\\\",\n                                \\\"executetimeout\\\": \\\"120s\\\"\n                              }\n                            }\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                        ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                        Authenticator: authenticator,\n                        URL:           \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                        return\n                      }\n\n                      // Create Peer\n                      cacerts := [1]string{\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\"}\n                      component, err := service.NewMspConfigData(\n                        \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\",\n                        \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\",\n                        cacerts[:])\n                      if err != nil {\n                        return\n                      }\n\n                      tls, err := service.NewMspConfigData(\n                        \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\",\n                        \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\",\n                        cacerts[:])\n                      if err != nil {\n                        return\n                      }\n\n                      configObjectMsp, err := service.NewConfigObjectMsp(component, tls)\n                      if err != nil {\n                        return\n                      }\n                      configObject := blockchainv2.ConfigObject{Msp: configObjectMsp}\n                      opts := service.NewCreatePeerOptions(\"{MSP_Name}\", \"{Peer_Name}\", \u0026configObject)\n                      result, detailedResponse, err := service.CreatePeer(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PeerResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/components/fabric-peer:\n    post:\n      tags:\n        - Manage component\n      summary: Import a peer\n      description: Import an existing peer into your IBP console. It is recommended to only import components that were created by this or another IBP console.\n      operationId: import_peer\n      requestBody:\n        description: Import a peer.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImportPeerBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \"https://{API-Endpoint}/ak/api/v2/components/fabric-peer\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"display_name\\\": \\\"My Imported Peer\\\",\n                            \\\"location\\\": \\\"ibm cloud\\\",\n                            \\\"api_url\\\": \\\"grpcs://n3a3ec3-mypeer.ibp.us-south.containers.appdomain.cloud:7051\\\",\n                            \\\"msp_id\\\": \\\"PeerOrg1\\\",\n                            \\\"operations_url\\\": \\\"https://n3a3ec3-mypeer.ibp.us-south.containers.appdomain.cloud:9443\\\",\n                            \\\"grpcwp_url\\\": \\\"https://n3a3ec3-mypeer-proxy.ibp.us-south.containers.appdomain.cloud:8084\\\",\n                            \\\"tls_cert\\\": \\\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\\\",\n                            \\\"tls_ca_root_cert\\\": \\\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkRpZmZlcmVudCBkYXRhIGhlcmUgaWYgdGhpcyB3YXMgcmVhbAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\\\"\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                        ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                        Authenticator: authenticator,\n                        URL:           \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                        return\n                      }\n\n                      // Import Peer\n                      opts := service.NewImportPeerOptions(\"{Display_Name}\", \"{MSP_ID}\", \"GRPCWP_URL\", \"{TLS_CA_ROOT_CERT}\")\n                      result, detailedResponse, err := service.ImportPeer(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PeerResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/components/fabric-peer/{id}:\n    put:\n      tags:\n        - Manage component\n      summary: Edit data about a peer\n      description: Modify local metadata fields of a peer. For example, the \"display_name\" field. This API will **not** change any Kubernetes deployment attributes for the peer.\n      operationId: edit_peer\n      parameters:\n        - $ref: '#/components/parameters/PathIdEdit'\n      requestBody:\n        description: Edit local metadata about a peer. All body fields are optional (only send the fields that you want to change).\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditPeerBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \"https://{API-Endpoint}/ak/api/v2/components/fabric-peer/{Component-ID}\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"display_name\\\": \\\"My Other Peer\\\",\n                            \\\"msp_id\\\": \\\"peermsp\\\",\n                            \\\"tags\\\": [\\\"fabric-peer\\\", \\\"ibm_saas\\\", \\\"red_team\\\", \\\"prod\\\"]\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                        ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                        Authenticator: authenticator,\n                        URL:           \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                        return\n                      }\n\n                      // Edit Peer Data\n                      tags := [4]string{\"fabric-peer\", \"ibm_sass\", \"red_team\", \"dev\"}\n                      opts := service.NewEditPeerOptions(\"{Peer_Id}\")\n                      opts.SetDisplayName(\"My Other Peer\")\n                      opts.SetMspID(\"peermsp\")\n                      opts.SetTags(tags[:])\n                      result, detailedResponse, err := service.EditPeer(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PeerResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n        404:\n          description: Component in request was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFound'\n\n  /ak/api/v2/kubernetes/components/fabric-peer/{id}:\n    put:\n      deprecated: true # not available in opensource console\n      tags:\n        - Manage component\n      summary: Update a peer\n      description: Update Kubernetes deployment attributes of a Hyperledger Fabric Peer node.\n      operationId: update_peer\n      parameters:\n        - $ref: '#/components/parameters/PathIdEdit'\n      requestBody:\n        description: Update a peer in your Kubernetes cluster. **Only set 1 root body field.** Use multiple API requests to change multiple fields.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdatePeerBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \"https://{API-Endpoint}/ak/api/v2/kubernetes/components/fabric-peer/{Component-ID}\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"resources\\\":{\n                              \\\"peer\\\":{\n                                \\\"requests\\\":{\n                                  \\\"cpu\\\": \\\"400m\\\",\n                                  \\\"memory\\\":\\\"800Mi\\\"\n                                }\n                              }\n                            }\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                        ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                        Authenticator: authenticator,\n                        URL:           \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                        return\n                      }\n\n                      // Update Peer\n                      cpu := \"400m\"\n                      memory := \"800Mi\"\n                      resourceRequests := blockchainv2.ResourceRequests{Cpu: \u0026cpu, Memory: \u0026memory}\n                      resourceObject, err := service.NewResourceObject(\u0026resourceRequests)\n                      if err != nil {\n                        return\n                      }\n\n                      peerBodyResources := \u0026blockchainv2.PeerResources{Peer: resourceObject}\n\n                      opts := service.NewUpdatePeerOptions(\"{Peer_Id}\")\n                      opts.SetResources(peerBodyResources)\n                      result, detailedResponse, err := service.UpdatePeer(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PeerResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n        404:\n          description: Component in request was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFound'\n\n  /ak/api/v2/kubernetes/components/fabric-orderer:\n    post:\n      deprecated: true # not available in opensource console\n      tags:\n        - Manage component\n      summary: Create an ordering service\n      description: Create a Hyperledger Ordering Service (OS) in your Kubernetes cluster. Currently, only raft ordering nodes are supported.\n      operationId: create_orderer\n      requestBody:\n        description: Create an ordering service in your Kubernetes cluster.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrdererRaftBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \"https://{API-Endpoint}/ak/api/v2/kubernetes/components/fabric-orderer\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"orderer_type\\\": \\\"raft\\\",\n                            \\\"msp_id\\\": \\\"orderermsp\\\",\n                            \\\"config\\\": [\u003cConfigObject-Node-1\u003e, \u003cConfigObject-Node-2\u003e, \u003cConfigObject-Node-3\u003e, \u003cConfigObject-Node-4\u003e, \u003cConfigObject-Node-5\u003e],\n                            \\\"cluster_name\\\": \\\"My three Node Raft\\\",\n                            \\\"display_name\\\": \\\"ordering service node\\\"\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                        ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                        Authenticator: authenticator,\n                        URL:           \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                        return\n                      }\n\n                      // Create Ordering Service\n                      cacert, err := service.NewConfigObjectEnrollmentComponentCatls(\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\")\n                      if err != nil {\n                      \treturn\n                      }\n\n                      caTlsCert, err := service.NewConfigObjectEnrollmentTlsCatls(\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\")\n                      if err != nil {\n                      \treturn\n                      }\n\n                      enrollmentComponent, err := service.NewConfigObjectEnrollmentComponent(\"localhost\", float64(3000), \"myca\", cacert, \"admin\", \"password\")\n                      if err != nil {\n                      \treturn\n                      }\n\n                      tlsEnrollment, err := service.NewConfigObjectEnrollmentTls(\"localhost\", float64(3000), \"myca\", caTlsCert)\n                      if err != nil {\n                      \treturn\n                      }\n\n                      objectEnrollment, err := service.NewConfigObjectEnrollment(enrollmentComponent, tlsEnrollment)\n                      if err != nil {\n                      \treturn\n                      }\n\n                      configObject := blockchainv2.ConfigObject{Enrollment: objectEnrollment}\n                      configObjectArray := [1]blockchainv2.ConfigObject{configObject}\n                      opts := service.NewCreateOrdererOptions(\"{Orderer_Type}\", \"{Msp_Id}\", \"{Display_Name}\", configObjectArray[:])\n                      opts.SetOrdererType(\"raft\")\n                      opts.SetMspID(\"orderermsp\")\n                      opts.SetConfig(configObjectArray[:])\n                      opts.SetClusterName(\"My three Node Raft\")\n                      opts.SetDisplayName(\"ordering service node\")\n                      result, detailedResponse, err := service.CreateOrderer(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrdererResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/components/fabric-orderer:\n    post:\n      tags:\n        - Manage component\n      summary: Import an ordering service\n      description: Import an existing Ordering Service (OS) to your IBP console. It is recommended to only import components that were created by this or another IBP console.\n      operationId: import_orderer\n      requestBody:\n        description: Import an ordering service.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImportOrdererBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \"https://{API-Endpoint}/ak/api/v2/components/fabric-orderer\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                          \\\"display-name\\\": \\\"orderer node\\\",\n                          \\\"cluster_id\\\": \\\"abcde\\\",\n                          \\\"cluster_name\\\": \\\"My Raft OS\\\",\n                          \\\"grpcwp_url\\\": \\\"https://n3a3ec3-myorderer-proxy.ibp.us-south.containers.appdomain.cloud:443\\\",\n                          \\\"api_url\\\": \\\"grpcs://n3a3ec3-myorderer.ibp.us-south.containers.appdomain.cloud:7050\\\",\n                          \\\"operations_url\\\": \\\"https://n3a3ec3-myorderer.ibp.us-south.containers.appdomain.cloud:8443\\\",\n                          \\\"msp_id\\\": \\\"org1\\\",\n                          \\\"system_channel_id\\\": \\\"testchainid\\\",\n                          \\\"tls_cert\\\": \\\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\\\",\n                          \\\"tls_ca_root_cert\\\": \\\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkRpZmZlcmVudCBkYXRhIGhlcmUgaWYgdGhpcyB3YXMgcmVhbAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\\\"\n                        }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                        ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                        Authenticator: authenticator,\n                        URL:           \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                        return\n                      }\n\n                      // Import Ordering Service\n                      opts := service.NewImportOrdererOptions(\"{Cluster_Name}\", \"{Display_Name}\", \"{MSP_Id}\", \"{GRPCWP_URL}\", \"{TLS_CA_Root_Cert}\")\n                      opts.SetClusterID(\"abcde\")\n                      opts.SetApiURL(\"grpcs://n3a3ec3-myorderer.ibp.us-south.containers.appdomain.cloud:7050\")\n                      opts.SetOperationsURL(\"https://n3a3ec3-myorderer.ibp.us-south.containers.appdomain.cloud:8443\")\n                      opts.SetSystemChannelID(\"testchainid\")\n                      opts.SetTlsCert(\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\")\n                      result, detailedResponse, err := service.ImportOrderer(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrdererResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/components/fabric-orderer/{id}:\n    put:\n      tags:\n        - Manage component\n      summary: Edit data about an orderer\n      description: Modify local metadata fields of a single node in an Ordering Service (OS). For example, the \"display_name\" field. This API will **not** change any Kubernetes deployment attributes for the node.\n      operationId: edit_orderer\n      parameters:\n        - $ref: '#/components/parameters/PathIdEdit'\n      requestBody:\n        description: Edit local metadata about an Orderer. All body fields are optional (only send the fields that you want to change).\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditOrdererDataBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \"https://{API-Endpoint}/ak/api/v2/components/fabric-orderer/{Component-ID}\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"cluster_name\\\": \\\"My Other OS\\\",\n                            \\\"display_name\\\": \\\"ordering node\\\",\n                            \\\"msp_id\\\": \\\"orderermsp\\\"\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                        ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                        Authenticator: authenticator,\n                        URL:           \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                        return\n                      }\n\n                      // Edit Orderer Data\n                      opts := service.NewEditOrdererOptions(\"{Ordering_Service_name}\")\n                      opts.SetClusterName(\"My Other OS\")\n                      opts.SetDisplayName(\"ordering node\")\n                      opts.SetMspID(\"orderermsp\")\n                      result, detailedResponse, err := service.EditOrderer(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrdererResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n        404:\n          description: Component in request was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFound'\n\n  /ak/api/v2/kubernetes/components/fabric-orderer/{id}:\n    put:\n      deprecated: true # not available in opensource console\n      tags:\n        - Manage component\n      summary: Update an orderer node\n      description: Update Kubernetes deployment attributes of a Hyperledger Fabric Ordering node.\n      operationId: update_orderer\n      parameters:\n        - $ref: '#/components/parameters/PathIdEdit'\n      requestBody:\n        description: Update an orderer node in your Kubernetes cluster. **Only set 1 root body field.** Use multiple API requests to change multiple fields.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateOrdererBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \"https://{API-Endpoint}/ak/api/v2/kubernetes/components/fabric-orderer/{Component-ID}\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"resources\\\":{\n                              \\\"orderer\\\":{\n                                \\\"requests\\\":{\n                                  \\\"cpu\\\": \\\"500m\\\",\n                                  \\\"memory\\\":\\\"1024Mi\\\"\n                                }\n                              }\n                            }\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                        ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                        Authenticator: authenticator,\n                        URL:           \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                        return\n                      }\n\n                      // Update Orderer\n                      cpu := \"500m\"\n                      memory := \"1024Mi\"\n                      requests := \u0026blockchainv2.ResourceRequests{Cpu: \u0026cpu, Memory: \u0026memory}\n\n                      resourceObject, err := service.NewResourceObject(requests)\n                      if err != nil {\n                        return\n                      }\n\n                      ordererResources := \u0026blockchainv2.UpdateOrdererBodyResources{Orderer: resourceObject}\n                      opts := service.NewUpdateOrdererOptions(\"{Orderer_Name}\")\n                      opts.SetResources(ordererResources)\n                      result, detailedResponse, err := service.UpdateOrderer(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrdererResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n        404:\n          description: Component in request was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFound'\n\n  /ak/api/v2/kubernetes/components/{id}/config:\n    put:\n      deprecated: true # not available in opensource console\n      tags:\n        - Manage component\n      summary: Submit config block to orderer\n      description: |\n        Send a config block (or genesis block) to a pre-created raft orderer node. Use this api to finish the raft-append flow and finalize a pre-created orderer. This is the final step to append a node to a raft cluster. The orderer will restart, load this block, and connect to the other orderers listed in said block.\n\n        The full flow to append a raft node:\n          1. Pre-create the orderer with the [Create an ordering service](#create-an-ordering-service) API (setting `cluster_id` is how you turn the normal create-orderer api into a pre-create-orderer api).\n          2. Retrieve the pre-created node's tls cert with the [Get component data](#get-component-data) API (set the `deployment_attrs=included` parameter).\n          3. Get the latest config block for the system-channel by using the Fabric API (use a Fabric CLI or another Fabric tool).\n          4. Edit the config block for the system-channel and add the pre-created orderer's tls cert and api url as a consenter.\n          5. Create and marshal a Fabric [ConfigUpdate](https://github.com/hyperledger/fabric/blob/release-1.4/protos/common/configtx.proto#L78) proposal with [configtxlator](https://hyperledger-fabric.readthedocs.io/en/release-1.4/commands/configtxlator.html#configtxlator-compute-update) using the old and new block.\n          6. Sign the `ConfigUpdate` proposal and create a [ConfigSignature](https://github.com/hyperledger/fabric/blob/release-1.4/protos/common/configtx.proto#L111). Create a set of signatures that will satisfy the system channel's update policy.\n          7. Build a [SignedProposal](https://github.com/hyperledger/fabric/blob/release-1.4/protos/peer/proposal.proto#L105) out of the `ConfigUpdate` \u0026 `ConfigSignature`. Submit the `SignedProposal` to an existing ordering node (do not use the pre-created node).\n          8. After the `SignedProposal` transaction is committed to a block, pull the latest config block (for the system-channel) from an existing ordering node (use a Fabric CLI or another Fabric tool).\n          9. Submit the latest config block to your pre-created node with the 'Submit config block to orderer' API (which is this api!)\n          10. Use the [Edit data about an orderer](#edit-data-about-an-orderer) API to change the pre-created node's field `consenter_proposal_fin` to `true`. This changes the status icon on the IBP console.\n      operationId: submit_block\n      parameters:\n        - $ref: '#/components/parameters/PathIdEdit'\n      requestBody:\n        description: Send a config block.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubmitConfigBlock'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \"https://{API-Endpoint}/ak/api/v2/kubernetes/components/{Component-ID}/config\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"b64_block\\\":\\\"bWFzc2l2ZSBiaW5hcnkgb2YgYSBjb25maWcgYmxvY2sgd291bGQgYmUgaGVyZSBpZiB0aGlzIHdhcyByZWFs\\\"\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                        ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                        Authenticator: authenticator,\n                        URL:           \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                        return\n                      }\n\n                      // Submit Config Block\n                      opts := service.NewSubmitBlockOptions(\"{Orderer_Id}\")\n                      opts.SetB64Block(\"bWFzc2l2ZSBiaW5hcnkgb2YgYSBjb25maWcgYmxvY2sgd291bGQgYmUgaGVyZSBpZiB0aGlzIHdhcyByZWFs\")\n                      result, detailedResponse, err := service.SubmitBlock(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GenericComponentResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/components/msp:\n    post:\n      tags:\n        - Manage component\n      summary: Import an MSP\n      description: Create or import a Membership Service Provider (MSP) definition into your IBP console. This definition represents an organization that controls a peer or OS (Ordering Service).\n      operationId: import_msp\n      requestBody:\n        description: Create or import an MSP.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImportMSPBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \"https://{API-Endpoint}/ak/api/v2/components/msp\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"msp_id\\\": \\\"org1\\\",\n                            \\\"display_name\\\": \\\"My First Org\\\",\n                            \\\"root_certs\\\": [\\\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\\\"],\n                            \\\"admins\\\": [\\\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkFkbWluIGNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\\\"],\n                            \\\"tls_root_certs\\\": [\n                              \\\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\\\"\n                            ]\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                        ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                        Authenticator: authenticator,\n                        URL:           \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                        return\n                      }\n\n                      // Import MSP Definition\n                      rootCerts := [1]string{\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\"}\n                      admins := [1]string{\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkFkbWluIGNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"}\n                      tlsRootCerts := [1]string{\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo\"}\n                      opts := service.NewImportMspOptions(\"{MSP_ID}\", \"{Display_Name}\", rootCerts[:])\n                      opts.SetAdmins(admins[:])\n                      opts.SetTlsRootCerts(tlsRootCerts[:])\n                      result, detailedResponse, err := service.ImportMsp(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MspResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/components/msp/{id}:\n    put:\n      tags:\n        - Manage component\n      summary: Edit an MSP\n      description: Modify local metadata fields of a Membership Service Provider (MSP) definition. For example, the \"display_name\" property.\n      operationId: edit_msp\n      parameters:\n        - $ref: '#/components/parameters/PathIdEdit'\n      requestBody:\n        description: Edit an MSP.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditMspBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \"https://{API-Endpoint}/ak/api/v2/components/{Component-ID}\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"display_name\\\": \\\"My Other MSP\\\"\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                        ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                        Authenticator: authenticator,\n                        URL:           \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                        return\n                      }\n\n                      // Edit MSP\n                      opts := service.NewEditMspOptions(\"{Msp_Id}\")\n                      opts.SetDisplayName(\"My Other MSP\")\n                      result, detailedResponse, err := service.EditMsp(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MspResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n        404:\n          description: Component in request was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFound'\n\n  /ak/api/v2/components/msps/{msp_id}:\n    get:\n      tags:\n        - Manage component\n      summary: Get MSP's public certificates\n      description: External IBP consoles can use this API to get the public certificate for your given MSP id.\n      operationId: get_msp_certificate\n      parameters:\n        - name: msp_id\n          in: path\n          description: The `msp_id` to fetch\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/QueryCache'\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \"https://{API-Endpoint}/ak/api/v2/components/msps/{Component-ID}\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Get msp id data for msp \"{Component-ID}\"\n                      opts := service.NewGetMspCertificateOptions(\"{Component-ID}\")\n                      result, detailedResponse, err := service.GetMspCertificate(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMSPCertificateResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n        404:\n          description: Component in request was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFound'\n\n  /ak/api/v2/settings:\n    get:\n      tags:\n        - Administer the IBP console\n      summary: Get public IBP console settings\n      description: Retrieve all public (non-sensitive) settings for the IBP console. Use this API for debugging purposes. It shows what behavior to expect and confirms whether the desired settings are active.\n      operationId: get_settings\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \"https://{API-Endpoint}/ak/api/v2/settings\" \\\n                      -H \"Content-Type: application/json\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Get IBP settings\n                      opts := service.NewGetSettingsOptions()\n                      result, detailedResponse, err := service.GetSettings(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetPublicSettingsResponse'\n    put:\n      tags:\n        - Administer the IBP console\n      summary: Change IBP console settings\n      description: Edit a few IBP console settings (such as the rate limit and timeout settings). **Some edits will trigger an automatic server restart.**\n      operationId: edit_settings\n      requestBody:\n        description: IBP console settings that can be edited. Each setting field is optional.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditSettingsBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \"https://{API-Endpoint}/ak/api/v2/settings\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"max_req_per_min_ak\\\": 50,\n                            \\\"fabric_install_cc_timeout_ms\\\": 350000,\n                            \\\"file_logging\\\":{\n                              \\\"client\\\": {\n                                \\\"enabled\\\": true,\n                                \\\"level\\\": \\\"debug\\\",\n                                \\\"unique_name\\\": false\n                              },\n                              \\\"server\\\": {\n                                \\\"enabled\\\": true,\n                                \\\"level\\\": \\\"info\\\",\n                                \\\"unique_name\\\": false\n                              }\n                            }\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Create variables that require a reference\n                      boolean_false := false\n                      boolean_true := true\n                      type_float64 := float64(89999)\n                      debug_level := \"debug\"\n                      info_level := \"info\"\n\n                      // Create logging service structs\n                      clientLoggingSettings := \u0026blockchainv2.LoggingSettingsClient{Enabled: \u0026boolean_true, Level: \u0026debug_level, UniqueName: \u0026boolean_false}\n                      serverLoggingSettings := \u0026blockchainv2.LoggingSettingsServer{Enabled: \u0026boolean_true, Level: \u0026info_level, UniqueName: \u0026boolean_false}\n\n                      // Set and edit settings options\n                      opts := service.NewEditSettingsOptions()\n                      opts.SetMaxReqPerMin(float64(50))\n                      opts.SetInactivityTimeouts(\u0026blockchainv2.EditSettingsBodyInactivityTimeouts{Enabled: \u0026boolean_false, MaxIdleTime: \u0026type_float64})\n                      opts.SetFileLogging(\u0026blockchainv2.EditLogSettingsBody{Client: clientLoggingSettings, Server: serverLoggingSettings})\n                      opts.SetFabricLcGetCcTimeoutMs(float64(350000))\n                      result, detailedResponse, err := service.EditSettings(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetPublicSettingsResponse'\n\n  /ak/api/v2/kubernetes/fabric/versions:\n    get:\n      deprecated: true # not available in opensource console\n      tags:\n        - Administer the IBP console\n      summary: Get supported Fabric versions\n      description: Get list of supported Fabric versions by each component type. These are the Fabric versions your IBP console can use when creating or upgrading components.\n      operationId: get_fab_versions\n      parameters:\n        - $ref: '#/components/parameters/QueryCache'\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \"https://{API-Endpoint}/ak/api/v2/kubernetes/fabric/versions\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Get supported Fabric options\n                      opts := service.NewGetFabVersionsOptions()\n                      result, detailedResponse, err := service.GetFabVersions(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetFabricVersionsResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/health:\n    get:\n      tags:\n        - Administer the IBP console\n      summary: Get IBP console health stats\n      description: See statistics of the IBP console process such as memory usage, CPU usage, up time, cache, and operating system stats.\n      operationId: get_health\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \"https://{API-Endpoint}/ak/api/v2/health\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Get health stats on the IBP console\n                      opts := service.NewGetHealthOptions()\n                      result, detailedResponse, err := service.GetHealth(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAthenaHealthStatsResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/notifications:\n    get:\n      tags:\n        - Administer the IBP console\n      summary: Get all notifications\n      description: Retrieve all notifications. This API supports pagination through the query parameters. Notifications are generated from actions such as creating a component, deleting a component, server restart, and so on.\n      operationId: list_notifications\n      parameters:\n        - name: limit\n          in: query\n          description: The number of notifications to return. The default value is 100.\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: number\n            minimum: 1\n            maximum: 1024\n        - name: skip\n          in: query\n          description: '`skip` is used to paginate through a long list of sorted entries. For example, if there are 100 notifications, you can issue the API with limit=10 and skip=0 to get the first 1-10. To get the next 10, you can set limit=10 and skip=10 so that the values of entries 11-20 are returned.'\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: number\n            minimum: 1\n            maximum: 1024\n        - $ref: '#/components/parameters/QueryComponentId'\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \"https://{API-Endpoint}/ak/api/v2/notifications?limit=20\u0026skip=0\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Get notifications\n                      opts := service.NewListNotificationsOptions()\n                      result, detailedResponse, err := service.ListNotifications(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetNotificationsResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/signature_collections:\n    get:\n      x-visible-environment: staging # not visible on prod since only Solutions needs this api...\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - Administer the IBP console\n      summary: Get signature collection txs\n      description: Get all signature collection transactions. These transactions involve creating or editing Fabric channels. The only transactions that are listed are ones that involved this IBP console. Channels that are edited or created outside of the IBP console are not discoverable.\n      operationId: get_sig_txs\n      parameters:\n        - $ref: '#/components/parameters/QuerySigTxDetails'\n        - $ref: '#/components/parameters/QueryFilterByOrderers'\n        - $ref: '#/components/parameters/QueryGroupByChannelName'\n        - $ref: '#/components/parameters/QueryCache'\n        - $ref: '#/components/parameters/QueryStatus'\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \"https://{API-Endpoint}/ak/api/v2/signature_collections?cache=skip\u0026full_details=omitted\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSignatureCollectionsResponse'\n        210:\n          description: Request was successful (alternative response).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSignatureCollectionsByChannelResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n    post:\n      x-visible-environment: hidden # not visible anywhere, api is only used by apollo. the spec is still used by the validator.\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - Administer the IBP console\n      summary: Create a signature collection tx\n      description: Create a signature collection transaction. These transactions involve creating or editing Fabric channels \u0026 chaincode approvals.\n      operationId: create_sig_tx\n      requestBody:\n        description: Create sig collection.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSignatureCollectionBody'\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \"https://{API-Endpoint}/ak/api/v2/signature_collections\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"tx_id\\\": \\\"abcd\\\",\n                            \\\"proposal\\\": \\\"\u003cbase 64 encoded proposal here\u003e\\\",\n                            \\\"distribute\\\": \\\"all\\\",\n                            \\\"channel\\\": \\\"MyChannel\\\",\n                            \\\"orderers\\\": [\n                              \\\"192.168.1.0:3000\\\"\n                            ],\n                            \\\"orgs2sign\\\": [\n                              {\n                                \\\"msp_id\\\": \\\"Org1MSP\\\",\n                                \\\"optools_url\\\": \\\"http://localhost:3000/api/v2\\\",\n                                \\\"timeout_ms\\\": 10000,\n                                \\\"signature\\\": \\\"\\\",\n                                \\\"admin\\\": false\n                              }\n                            ],\n                            \\\"orderers2sign\\\": [],\n                            \\\"authorize\\\": {\n                              \\\"msp_id\\\": \\\"Org1MSP\\\",\n                              \\\"certificate\\\": \\\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\\\",\n                              \\\"hash_ver\\\": \\\"v2\\\"\n                            },\n                            \\\"originator_msp\\\": \\\"Org1MSP\\\",\n                            \\\"json_diff\\\": {},\n                            \\\"current_policy\\\": {\n                              \\\"number_of_signatures\\\": 1\n                            }\n                          }\"\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignatureCollectionResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/signature_collections/{id}:\n    put:\n      x-visible-environment: hidden # not visible anywhere, api is only used by apollo. the spec is still used by the validator.\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - Administer the IBP console\n      summary: Edit a signature collection tx\n      description: Edit or redistribute a signature collection transaction. These transactions involve creating or editing Fabric channels \u0026 chaincode approvals.\n      operationId: edit_sig_tx\n      parameters:\n        - $ref: '#/components/parameters/PathTxId'\n      requestBody:\n        description: Edit sig collection.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditSignatureCollectionBody'\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \"https://{API-Endpoint}/ak/api/v2/signature_collections/{Transaction-ID}\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"distribute\\\": \\\"none\\\",\n                            \\\"orgs2sign\\\": [\n                                {\n                                    \\\"msp_id\\\": \\\"Org1MSP\\\",\n                                    \\\"optools_url\\\": \\\"http://localhost:3000/api/v2\\\",\n                                    \\\"signature\\\": \\\"\u003cbase 64 encoded signature here\u003e\\\",\n                                }\n                            ],\n                            \\\"authorize\\\": {\n                                \\\"msp_id\\\": \\\"Org1MSP\\\",\n                                \\\"certificate\\\": \\\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\\\",\n                                \\\"hash_ver\\\": \\\"v2\\\"\n                            }\n                        }\"\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignatureCollectionResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n    delete:\n      tags:\n        - Administer the IBP console\n      summary: Delete a signature collection tx\n      description: Delete a signature collection transaction. These transactions involve creating or editing Fabric channels \u0026 chaincode approvals. This request is not distributed to external IBP consoles, thus the signature collection transaction is only deleted locally.\n      operationId: delete_sig_tx\n      parameters:\n        - $ref: '#/components/parameters/PathTxId'\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X DELETE \"https://{API-Endpoint}/ak/api/v2/signature_collections/{Transaction-ID}\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Delete a signature collection tx\n                      opts := service.NewDeleteSigTxOptions(\"{Transaction_Id}\")\n                      result, detailedResponse, err := service.DeleteSigTx(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteSignatureCollectionResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/notifications/bulk:\n    post:\n      tags:\n        - Administer the IBP console\n      summary: Archive notifications\n      description: Archive 1 or more notifications. Archived notifications will no longer appear in the default [Get all notifications](#get-all-notifications) API.\n      operationId: archive_notifications\n      requestBody:\n        description: Archive notifications.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ArchiveNotificationsBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \"https://{API-Endpoint}/ak/api/v2/notifications/bulk\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"notification_ids\\\": [\n                                \\\"edf0c5e0b76d49ccadb8eee3eec88a48\\\",\n                                \\\"c9d00ebf849051e4f102008dc0be2488\\\",\n                                \\\"d7d831ddcd8d8c5bf87f4d972f675096\\\"\n                            ]\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Archive Notifications\n                      notifications := [3]string{\"edf0c5e0b76d49ccadb8eee3eec88a48\", \"c9d00ebf849051e4f102008dc0be2488\", \"d7d831ddcd8d8c5bf87f4d972f675096\"}\n                      opts := service.NewArchiveNotificationsOptions(notifications[:])\n                      result, detailedResponse, err := service.ArchiveNotifications(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArchiveResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/components:\n    get:\n      tags:\n        - Manage multiple components\n      summary: Get all components\n      description: Get the IBP console's data on all components (peers, CAs, orderers, and MSPs). The component might be imported or created.\n      operationId: list_components\n      parameters:\n        - $ref: '#/components/parameters/QueryDeploymentAttrs'\n        - $ref: '#/components/parameters/QueryParsedCerts'\n        - $ref: '#/components/parameters/QueryCache'\n        - $ref: '#/components/parameters/QueryCaAttrs'\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \"https://{API-Endpoint}/ak/api/v2/components\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Get all component data\n                      opts := service.NewListComponentsOptions()\n                      result, detailedResponse, err := service.ListComponents(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMultiComponentsResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n        222:\n          description: Request was successful (zero components were found).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyArrayResponse'\n\n  /ak/api/v2/components/types/{component-type}:\n    get:\n      tags:\n        - Manage multiple components\n      summary: Get components of a type\n      description: Get the IBP console's data on components that are a specific type. The component might be imported or created.\n      operationId: get_components_by_type\n      parameters:\n        - $ref: '#/components/parameters/PathType'\n        - $ref: '#/components/parameters/QueryDeploymentAttrs'\n        - $ref: '#/components/parameters/QueryParsedCerts'\n        - $ref: '#/components/parameters/QueryCache'\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \"https://{API-Endpoint}/ak/api/v2/components/types/{Component-Type}\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n          - name: Example request\n            example:\n              - type: code\n                lang: go\n                source:\n                  - |-\n                    // Create an authenticator\n                    authenticator := \u0026core.IamAuthenticator{\n                        ApiKey: \"{API-Key}\",\n                    }\n\n                    // Create an instance of the \"BlockchainV2Options\" struct\n                    options := \u0026blockchainv2.BlockchainV2Options{\n                        Authenticator: authenticator,\n                        URL: \"https://{API-Endpoint}\",\n                    }\n\n                    // Create an instance of the \"BlockchainV2\" service client.\n                    service, err := blockchainv2.NewBlockchainV2(options)\n                    if err != nil {\n                        return\n                    }\n\n                    // Get data for components with this type \"{Component-Type}\"\n                    opts := service.NewGetComponentsByTypeOptions(\"{Component-Type}\")\n                    result, detailedResponse, err := service.GetComponentsByType(opts)\n                    fmt.Println(\"result:\", result)\n                    fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMultiComponentsResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n        222:\n          description: Request was successful (zero components were found).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyArrayResponse'\n\n  /ak/api/v2/components/tags/{tag}:\n    get:\n      tags:\n        - Manage multiple components\n      summary: Get components with tag\n      description: Get the IBP console's data on components that have a specific tag. The component might be imported or created. Tags are not case-sensitive.\n      operationId: get_component_by_tag\n      parameters:\n        - $ref: '#/components/parameters/PathTag'\n        - $ref: '#/components/parameters/QueryDeploymentAttrs'\n        - $ref: '#/components/parameters/QueryParsedCerts'\n        - $ref: '#/components/parameters/QueryCache'\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \"https://{API-Endpoint}/ak/api/v2/components/tags/{Tag}\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Get data for components with tag \"{Tag}\"\n                      opts := service.NewGetComponentByTagOptions(\"{Tag}\")\n                      result, detailedResponse, err := service.GetComponentByTag(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMultiComponentsResponse'\n        222:\n          description: Request was successful (zero components were found).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyArrayResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n    delete:\n      tags:\n        - Manage multiple components\n      summary: Remove components with tag\n      description: |\n        Removes components with the matching tag from the IBP console. Tags are not case-sensitive.\n        - Using this api on **imported** components removes them from the IBP console.\n        - Using this api on **created** components removes them from the IBP console **but** it will **not** delete the components from the Kubernetes cluster where they reside. Thus it orphans the Kubernetes deployments (if it exists). Instead use the [Delete components with tag](#delete-component-s-with-tag) API to delete the Kubernetes deployment and the IBP console data at once.\n      operationId: remove_components_by_tag\n      parameters:\n        - $ref: '#/components/parameters/PathTag'\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X DELETE \"https://{API-Endpoint}/ak/api/v2/components/{Tag}\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Get all component data\n                      opts := service.NewRemoveComponentsByTagOptions(\"{Tag}\")\n                      result, detailedResponse, err := service.RemoveComponentsByTag(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoveMultiComponentsResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/kubernetes/components/tags/{tag}:\n    delete:\n      deprecated: true # not available in opensource console\n      tags:\n        - Manage multiple components\n      summary: Delete components with tag\n      description: |\n        Removes components with the matching tag from the IBP console **and** it deletes the Kubernetes deployment. Tags are not case-sensitive.\n        - Using this api on **imported** components will be skipped over since their Kubernetes deployment is unknown and cannot be removed. Instead use the [Remove components with tag](#remove-component-s-with-tag) API to remove imported components with a tag.\n        - Using this api on **created** components removes them from the IBP console **and** it will delete the components from the Kubernetes cluster where they reside. The Kubernetes delete must succeed before the component will be removed from the IBP console.\n      operationId: delete_components_by_tag\n      parameters:\n        - $ref: '#/components/parameters/PathTag'\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X DELETE \"https://{API-Endpoint}/ak/api/v2/kubernetes/components/tags/{Tag}\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Get all component data\n                      opts := service.NewDeleteComponentsByTagOptions(\"{Tag}\")\n                      result, detailedResponse, err := service.DeleteComponentsByTag(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteMultiComponentsResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/kubernetes/components/purge:\n    delete:\n      deprecated: true # not available in opensource console\n      tags:\n        - Manage multiple components\n      summary: Delete all components\n      description: Removes all components from the IBP console **and** their Kubernetes deployments (if applicable). Works on imported and created components (peers, CAs, orderers, MSPs, and signature collection transactions). This api attempts to effectively reset the IBP console to its initial (empty) state (except for logs \u0026 notifications, those will remain).\n      operationId: delete_all_components\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X DELETE \"https://{API-Endpoint}/ak/api/v2/kubernetes/components/purge\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Get all component data\n                      opts := service.NewDeleteAllComponentsOptions()\n                      result, detailedResponse, err := service.DeleteAllComponents(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteMultiComponentsResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/restart:\n    post:\n      tags:\n        - Administer the IBP console\n      summary: Restart the IBP console\n      description: Restart IBP console processes. This causes a small outage (10 - 30 seconds) which is possibly disruptive to active user sessions.\n      operationId: restart\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \"https://{API-Endpoint}/ak/api/v2/restart\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Restart\n                      opts := service.NewRestartOptions()\n                      result, detailedResponse, err := service.Restart(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestartAthenaResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/logs/file_settings:\n    put:\n      x-visible-environment: hidden # not visible anywhere, use `/ak/api/v2/settings` instead. api still exists \u0026 this spec is still used by the validator.\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - Administer the IBP console\n      summary: Change logging settings\n      description: Change your **IBP console's** file logging settings. Settings that are omitted from the request body will remain as is.\n      operationId: update_file_settings\n      requestBody:\n        description: Include only the settings that you want to change, and the other settings will remain as is.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditLogSettingsBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \"https://{API-Endpoint}/ak/api/v2/logs/file_settings\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"client\\\": {\n                              \\\"enabled\\\": true,\n                              \\\"level\\\": \\\"debug\\\",\n                              \\\"unique_name\\\": false\n                            },\n                            \\\"server\\\": {\n                              \\\"enabled\\\": true,\n                              \\\"level\\\": \\\"info\\\",\n                              \\\"unique_name\\\": false\n                            }\n                          }\"\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogSettingsResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/sessions:\n    delete:\n      tags:\n        - Administer the IBP console\n      summary: Delete all IBP console sessions\n      description: Delete all client sessions in IBP console. Use this API to clear any active logins and force everyone to log in again. This API is useful for debugging purposes and when changing roles of a user. It forces any role changes to take effect immediately. Otherwise, permission or role changes will take effect during the user's next login or session expiration.\n      operationId: delete_all_sessions\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X DELETE \"https://{API-Endpoint}/ak/api/v2/sessions\" \\\n                        -H \"Content-Type: application/json\" \\\n                        -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Delete Sessions\n                      opts := service.NewDeleteAllSessionsOptions()\n                      result, detailedResponse, err := service.DeleteAllSessions(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteAllSessionsResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/notifications/purge:\n    delete:\n      tags:\n        - Administer the IBP console\n      summary: Delete all notifications\n      description: Delete all notifications. This API is intended for administration.\n      operationId: delete_all_notifications\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X DELETE \"https://{API-Endpoint}/ak/api/v2/notifications/purge\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Delete Notifications\n                      opts := service.NewDeleteAllNotificationsOptions()\n                      result, detailedResponse, err := service.DeleteAllNotifications(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteAllNotificationsResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/cache:\n    delete:\n      tags:\n        - Administer the IBP console\n      summary: Clear IBP console caches\n      description: Clear the in-memory caches across all IBP console server processes. No effect on caches that are currently disabled.\n      operationId: clear_caches\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X DELETE \"https://{API-Endpoint}/ak/api/v2/cache\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Clear Caches\n                      opts := service.NewClearCachesOptions()\n                      result, detailedResponse, err := service.ClearCaches(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CacheFlushResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/kubernetes/components/{id}/certs:\n    put:\n      deprecated: true # not available in opensource console\n      tags:\n        - Manage component\n      summary: Edit admin certs on a component\n      description: |\n        This api will append or remove admin certs to the components' file system.\n        Certificates will be parsed.\n        If invalid they will be skipped.\n        Duplicate certificates will also be skipped.\n        To view existing admin certificate use the [Get component data](#get-component-data) API with the query parameters: `?deployment_attrs=included\u0026cache=skip`.\n\n        **This API will not work on *imported* components.**\n      operationId: edit_admin_certs\n      parameters:\n        - name: id\n          in: path\n          description: The `id` of the component to edit. Use the [Get all components](#get-all-components) API to determine the id of the component.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        description: Edit certificates.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditAdminCertsBody'\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \"https://{API-Endpoint}/ak/api/v2/kubernetes/components/{Component-ID}/certs\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"append_admin_certs\\\": [\\\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\\\"],\n                            \\\"remove_admin_certs\\\": []\n                          }\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                        ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                        Authenticator: authenticator,\n                        URL:           \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                        return\n                      }\n\n                      // Edit Admin Certs\n                      appendAdminCerts := [1]string{\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"}\n                      removeAdminCerts := []string{}\n                      opts := service.NewEditAdminCertsOptions(\"orderernode\")\n                      opts.SetAppendAdminCerts(appendAdminCerts[:])\n                      opts.SetRemoveAdminCerts(appendAdminCerts[:])\n                      result, detailedResponse, err := service.EditAdminCerts(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EditAdminCertsResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n        404:\n          description: Component in request was not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFound'\n\n  /ak/api/v2/postman:\n    get:\n      tags:\n        - Download examples\n      summary: Generate Postman collection\n      description: |\n        Generate and download a Postman API Collection. The JSON contains all the APIs available in the IBP console. It can be imported to the [Postman](https://www.postman.com/downloads) desktop application. **The examples in the collection will be pre-populated with authorization credentials.** The authorization credentials to use must be provided to this API. See the query parameters for available options.\n\n        Choose an auth strategy that matches your environment \u0026 concerns:\n\n        - **IAM Bearer Auth** - *[Available on IBM Cloud]* - This is the recommended auth strategy. The same bearer token used to authenticate this request will be copied into the Postman collection examples. Since the bearer token expires the auth embedded in the collection will also expire. At that point the collection might be deleted \u0026 regenerated, or manually edited to refresh the authorization header values. To use this strategy set `auth_type` to `bearer`.\n        - **IAM Api Key Auth** - *[Available on IBM Cloud]* - The IAM api key will be copied into the Postman collection examples. This means the auth embedded in the collection will never expire. To use this strategy set `auth_type` to `api_key`.\n        - **Basic Auth** - *[Available on OpenShift \u0026 IBM Cloud Private]* - A basic auth username and password will be copied into the Postman collection examples. This is **not** available for an IBP SaaS instance on IBM Cloud. To use this strategy set `auth_type` to `basic`.\n\n      operationId: get_postman\n      parameters:\n        - $ref: '#/components/parameters/AuthType'\n        - $ref: '#/components/parameters/AuthToken'\n        - $ref: '#/components/parameters/AuthApiKey'\n        - $ref: '#/components/parameters/AuthUsername'\n        - $ref: '#/components/parameters/AuthPassword'\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \"https://{API-Endpoint}/ak/api/v2/postman?auth_type=bearer\u0026token={Access-Token}\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n          - name: Example request\n            example:\n              - type: code\n                lang: go\n                source:\n                  - |-\n                    // Create an authenticator\n                    authenticator := \u0026core.IamAuthenticator{\n                        ApiKey: \"{API-Key}\",\n                    }\n\n                    // Create an instance of the \"BlockchainV2Options\" struct\n                    options := \u0026blockchainv2.BlockchainV2Options{\n                        Authenticator: authenticator,\n                        URL: \"https://{API-Endpoint}\",\n                    }\n\n                    // Create an instance of the \"BlockchainV2\" service client.\n                    service, err := blockchainv2.NewBlockchainV2(options)\n                    if err != nil {\n                        return\n                    }\n\n                    // Get a postman collection using {Auth-Type}\n                    opts := service.NewGetPostmanOptions(\"{Auth-Type}\")\n                    result, detailedResponse, err := service.GetPostman(opts)\n                    fmt.Println(\"result:\", result)\n                    fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetPostmanResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/openapi:\n    get:\n      tags:\n        - Download examples\n      summary: Download OpenAPI file\n      description: Download the [OpenAPI](https://swagger.io/specification/) specification YAML file (aka swagger file) for the IBP console. This is the same file that was used to generate the APIs on this page. This file documents APIs offered by the IBP console.\n      operationId: get_swagger\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \"https://{API-Endpoint}/ak/api/v2/openapi\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n          go:\n            - name: Example request\n              example:\n                - type: code\n                  lang: go\n                  source:\n                    - |-\n                      // Create an authenticator\n                      authenticator := \u0026core.IamAuthenticator{\n                          ApiKey: \"{API-Key}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2Options\" struct\n                      options := \u0026blockchainv2.BlockchainV2Options{\n                          Authenticator: authenticator,\n                          URL: \"https://{API-Endpoint}\",\n                      }\n\n                      // Create an instance of the \"BlockchainV2\" service client.\n                      service, err := blockchainv2.NewBlockchainV2(options)\n                      if err != nil {\n                          return\n                      }\n\n                      // Get the swagger file for all apis\n                      opts := service.NewGetSwaggerOptions()\n                      result, detailedResponse, err := service.GetSwagger(opts)\n                      fmt.Println(\"result:\", result)\n                      fmt.Println(\"response:\", detailedResponse)\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GetSwaggerResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/backups:\n    get:\n      x-visible-environment: hidden # not visible anywhere, api is still being worked out.\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - Administer the IBP console\n      summary: Get backup ids\n      description: Get the ids of all database backups.\n      operationId: get_db_backups\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \"https://{API-Endpoint}/ak/api/v2/backups\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GetBackupsResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n    post:\n      x-visible-environment: hidden # not visible anywhere, api is still being worked out.\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - Administer the IBP console\n      summary: Start a database backup\n      description: Start a backup of IBP console databases. The api will return before the backup is complete.\n      operationId: start_db_backup\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \"https://{API-Endpoint}/ak/api/v2/backups\" \\\n                      -H \"Authorization: Bearer {Access-Token}\"\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/StartBackupResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n    put:\n      x-visible-environment: hidden # not visible anywhere, api is still being worked out.\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - Administer the IBP console\n      summary: Restore databases via backup data\n      description: Restore the contents of a backup by sending the backup data in the body. The api will return before the restore is complete.\n      operationId: start_db_restore\n      requestBody:\n        description: Data that should be attached to a backup.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RestoreBackupDataBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \"https://{API-Endpoint}/ak/api/v2/backups\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                          \\\"dbs\\\": {\n                            \\\"athena_components\\\": {\n                              \\\"docs\\\": [{}]\n                            },\n                            \\\"athena_sessions\\\": {\n                              \\\"docs\\\": [{}]\n                            },\n                            \\\"athena_system\\\": {\n                              \\\"docs\\\": [{}]\n                            }\n                          }\n                        }\"\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/StartRestoreResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/backups/{id}:\n    put:\n      x-visible-environment: hidden # not visible anywhere, api is still being worked out.\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - Administer the IBP console\n      summary: Restore databases via backup id\n      description: Restore the contents of a backup by sending the backup id. The api will return before the restore is complete.\n      operationId: start_db_restore_id\n      parameters:\n        - $ref: '#/components/parameters/PathBackupId'\n      requestBody:\n        description: Optional client webhook url.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RestoreBackupIdBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \"https://{API-Endpoint}/ak/api/v2/backups/03_ibp_db_backup_1592924104038\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/StartRestoreResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n    get:\n      x-visible-environment: hidden # not visible anywhere, api is still being worked out.\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - Administer the IBP console\n      summary: Get a database backup\n      description: Download a database backup. Includes attachments.\n      operationId: get_db_backup\n      parameters:\n        - $ref: '#/components/parameters/PathBackupId'\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \"https://{API-Endpoint}/ak/api/v2/backups/03_ibp_db_backup_1592924104038\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GetBackupResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/backups/{id}/attachments/{att_name}:\n    put:\n      x-visible-environment: hidden # not visible anywhere, api is still being worked out.\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - Administer the IBP console\n      summary: Attach data to a backup\n      description: Attach custom data to a IBP console backup. If the attachment name already exist the data will be replaced.\n      operationId: attach_db_backup\n      parameters:\n        - $ref: '#/components/parameters/PathBackupId'\n        - $ref: '#/components/parameters/PathBackupAttachment'\n      requestBody:\n        description: Data that should be attached to a backup.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AttachBackupBody'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \"https://{API-Endpoint}/ak/api/v2/backups/03_ibp_db_backup_1592924104038/attatchments/my-attachement\" \\\n                      -H \"Content-Type: application/json\" \\\n                      -H \"Authorization: Bearer {Access-Token}\" \\\n                      -d \"{\n                            \\\"attachment\\\": \\\"dGhpcyBpcyBzb21lIGRhdGEgaSB3YW50ZWQgc3RvcmVk\\\",\n                          }\"\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/AttachBackupResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  #\n  #\n  #\n  #.\n  # -----------------------------------------------------------------------------------------------------------------------------------------------------------\n  # Software APIs - ! not applicable for IBP SaaS on IBM Cloud !\n  # -----------------------------------------------------------------------------------------------------------------------------------------------------------\n  /ak/api/v2/permissions/keys:\n    post:\n      x-visible-environment: hidden\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - IBP Software APIs\n      summary: (Software) - Create an IBP api key\n      description: (IBP Software only) - Create an IBP api key. This key can be used to authenticate and call other APIs. Only users or api keys with a `manager` role can call this api. The `api_secret` in the response must be saved by the user. It is unrecoverable. API keys do not expire but can be deleted.\n      operationId: create_ibp_api_key\n      requestBody:\n        description: Pass the desired roles for the new api key. Valid roles - \"reader\", \"writer\", \"manager\".\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateApiKeyBody'\n        required: true\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateApiKeyResponse'\n        400:\n          description: Request is bad (invalid syntax).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n    get:\n      x-visible-environment: hidden\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - IBP Software APIs\n      summary: (Software) - List IBP api keys\n      description: (IBP Software only) - List all IBP api keys and their descriptions. The api secrets will not be in the response.\n      operationId: get_ibp_api_keys\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetApiKeyResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/permissions/keys/{key_id}:\n    delete:\n      x-visible-environment: hidden\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - IBP Software APIs\n      summary: (Software) - Delete an api key\n      description: (IBP Software only) - Delete a single IBP api key. The key becomes unusable immediately.\n      operationId: delete_ibp_api_key\n      parameters:\n        - name: key_id\n          in: path\n          description: The `api_key` to delete.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteApiKeyResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/permissions/users:\n    post:\n      x-visible-environment: hidden\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - IBP Software APIs\n      summary: (Software) - Add users\n      description: (IBP Software only) - Add new users to the IBP console. Users can log in and perform operations IBP console operations. Only users or api keys with a `manager` role can call this api.\n      operationId: add_ibp_users\n      requestBody:\n        description: Pass the desired roles for the usernames. Valid roles - \"reader\", \"writer\", \"manager\".\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddUserBody'\n        required: true\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddUserResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n    delete:\n      x-visible-environment: hidden\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - IBP Software APIs\n      summary: (Software) - Delete users\n      description: (IBP Software only) - Delete existing users by uuid. Only users or api keys with a `manager` role can call this api. Note that uuids are expected, not usernames.\n      operationId: delete_ibp_users\n      parameters:\n        - $ref: '#/components/parameters/QueryUuids'\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteUserResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n    put:\n      x-visible-environment: hidden\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - IBP Software APIs\n      summary: (Software) - Edit users\n      description: (IBP Software only) - Edit existing users by uuid. Only users or api keys with a `manager` role can call this api. Note that uuids are expected, not usernames.\n      operationId: edit_ibp_user_roles\n      requestBody:\n        description: Pass the desired roles for the usernames. Valid roles - \"reader\", \"writer\", \"manager\".\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditUserBody'\n        required: true\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EditUserResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n    get:\n      x-visible-environment: hidden\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - IBP Software APIs\n      summary: (Software) - List users\n      description: (IBP Software only) - List users of the IBP console. Includes the user's roles and the timestamp of when it was added.\n      operationId: get_ibp_users\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetUsersResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n\n  /ak/api/v2/permissions/users/password/reset:\n    put:\n      x-visible-environment: hidden\n      x-sdk-exclude: true\n      x-cli-exclude: true\n      tags:\n        - IBP Software APIs\n      summary: (Software) - Reset users' passwords\n      description: (IBP Software only) - Reset multiple user passwords to the default password. The default password was chosen when IBP console was initially set up. Only users or api keys with a `manager` role can call this api.\n      operationId: reset_ibp_user_passwords\n      requestBody:\n        description: Pass an array of uuids to reset.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResetPassBody'\n        required: true\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResetPassResponse'\n        401:\n          description: Request is unauthorized (invalid credentials).\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n        403:\n          description: Request is forbidden (credentials lack permission).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forbidden'\n#\n#\n#\n#.\n# -------------------------------------------------------------------------------------------------------------------------------------------------------------\n# ref components\n# -------------------------------------------------------------------------------------------------------------------------------------------------------------\ncomponents:\n  schemas:\n    message_ok:\n      type: string\n      example: ok\n      description: Response message. \"ok\" indicates the api completed successfully.\n    dep_component_id:\n      type: string\n      example: admin\n      description: The unique id for the component in Kubernetes. Not available if component was imported.\n    version:\n      type: string\n      example: 1.4.6-1\n      description: The cached Hyperledger Fabric release version.\n    version_desired:\n      type: string\n      example: 1.4.6-1\n      description: The Hyperledger Fabric release version to use.\n    version_edit:\n      type: string\n      example: 1.4.6-1\n      description: The Hyperledger Fabric release version to use.\n    timestamp_creation:\n      type: number\n      description: UTC UNIX timestamp of component onboarding to the UI. In milliseconds.\n      example: 1537262855753\n    component_id:\n      type: string\n      example: component1\n      description: The unique identifier of this component. Must start with a letter, be lowercase and only contain letters and numbers. If `id` is not provide a component id will be generated using the field `display_name` as the base.\n      minLength: 3  # seems like a good idea to have a min\n      maxLength: 64 # couchdb performance limiter\n      x-validate_regex_must_pass: is_valid_id\n      x-validate_regex_error_msg: regex_fail_valid_id\n    type:\n      type: string\n      example: fabric-peer\n      description: 'The type of this component. Such as: \"fabric-peer\", \"fabric-ca\", \"fabric-orderer\", etc.'\n    enroll_id:\n      type: string\n      example: admin\n      description: The username of the enroll id.\n      x-validate_regex_must_fail: invalid_enroll_characters # fabric-ca does not support these characters - (can't find source of claim)\n      x-validate_regex_error_msg: regex_invalid_enroll_chars # fabric-ca does not support these characters - (can't find source of claim)\n      maxLength: 255 # CA's user table can only hold 255 - https://github.com/hyperledger/fabric-ca/blob/master/lib/server/db/mysql/mysql.go#L153\n    enroll_secret:\n      type: string\n      example: password\n      description: The password of the enroll id.\n      x-validate_regex_must_fail: invalid_enroll_characters # fabric-ca does not support these characters - (can't find source of claim)\n      x-validate_regex_error_msg: regex_invalid_enroll_chars # fabric-ca does not support these characters - (can't find source of claim)\n      maxLength: 255 # not sure of real limit, using the same limit as enroll id...\n    location_saas:\n      type: string\n      example: ibmcloud\n      description: Indicates where the component is running.\n      maxLength: 1024 # spam prevention limit\n      x-validate_illegal_values:\n        - ibm_saas\n    system_channel_id:\n      type: string\n      example: testchainid\n      description: The name of the system channel. Defaults to `testchainid`.\n      maxLength: 256 # spam prevention limit\n    tls_cert:\n      type: string\n      example: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='\n      description: The TLS certificate as base 64 encoded PEM. Certificate is used to secure/validate a TLS connection.\n      x-validate_base64_certificate: true\n    tls_cert_orderer:\n      type: string\n      example: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='\n      description: |\n        This field is used by IBP console when adding the node as a consenter to the system channel. The field indicates what certificate the orderer will use when establishing mutual tls connections between other orderers when acting as the **server or client**. The certificate should be base 64 encoded PEM.\n\n        When setting `tls_cert` the fields `client_tls_cert` and `server_tls_cert` are not allowed.\n      x-validate_base64_certificate: true\n      x-validate_key_combination:\n        client_tls_cert:\n          key_should_not_exist: true\n        server_tls_cert:\n          key_should_not_exist: true\n    tls_ca_root_cert:\n      type: string\n      example: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkRpZmZlcmVudCBkYXRhIGhlcmUgaWYgdGhpcyB3YXMgcmVhbAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=='\n      description: The TLS CA's root certificate as base 64 encoded PEM.\n      x-validate_base64_certificate: true\n    server_tls_cert:\n      type: string\n      example: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='\n      description: |\n        This field is used by IBP console when adding the node as a consenter to the system channel. The field indicates what certificate the orderer will use when establishing mutual tls connections between other orderers when acting as the **server**. The certificate should be base 64 encoded PEM.\n\n        When setting `server_tls_cert` the field `client_tls_cert` is required and `tls_cert` is not allowed.\n      x-validate_base64_certificate: true\n      x-validate_key_combination:\n        #tls_cert: # don't need this defined twice, the tls_cert_orderer validation covers it\n        #  key_should_not_exist: true\n        client_tls_cert:\n          key_should_exist: true\n    client_tls_cert:\n      type: string\n      example: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='\n      description: |\n        This field is used by IBP console when adding the node as a consenter to the system channel. The field indicates what certificate the orderer will use when establishing mutual tls connections between other orderers when acting as the **client**. The certificate should be base 64 encoded PEM.\n\n        When setting `client_tls_cert` the field `server_tls_cert` is required and `tls_cert` is not allowed.\n      x-validate_base64_certificate: true\n      x-validate_key_combination:\n        #tls_cert: # don't need this defined twice, the tls_cert_orderer validation covers it\n        #  key_should_not_exist: true\n        server_tls_cert:\n          key_should_exist: true\n    tls_root_cert:\n      type: string\n      example: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='\n      description: The TLS root certificate as base 64 encoded PEM.\n      x-validate_base64_certificate: true\n    admin_cert:\n      type: string\n      example: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='\n      description: A certificate as base 64 encoded PEM. Also known as the signing certificate of an organization admin.\n      x-validate_base64_certificate: true\n    root_cert:\n      type: string\n      example: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='\n      description: A root certificate as base 64 encoded PEM.\n      x-validate_base64_certificate: true\n    k8s_zone:\n      type: string\n      description: 'Specify the Kubernetes zone for the deployment. The deployment will use a k8s node in this zone. Find the list of possible zones by retrieving your Kubernetes node labels: `kubectl get nodes --show-labels`. [More information](https://kubernetes.io/docs/setup/best-practices/multiple-zones)'\n    k8s_region:\n      type: string\n      description: 'Specify the Kubernetes region for the deployment. The deployment will use a k8s node in this region. Find the list of possible regions by retrieving your Kubernetes node labels: `kubectl get nodes --show-labels`. [More info](https://kubernetes.io/docs/setup/best-practices/multiple-zones)'\n    ca_name:\n      type: string\n      description: The CA's \"CAName\" attribute.\n      example: ca\n    tls_ca_name: # same as \"ca_name\" but the example is different b/c its for the tls ca...\n      type: string\n      description: The TLS CA's \"CAName\" attribute.\n      example: tlsca\n    tags:\n      type: array\n      minLength: 0\n      maxLength: 32 # dsh spam prevention limit\n      items:\n        type: string\n        description: User defined strings that can be used to search/filter components. When editing this field set the complete (desired) tags array. Will always conform to lowercase.\n        maxLength: 32 # artificial limit, we want users to use short tags\n    display_name_ca:\n      type: string\n      description: A descriptive name for this CA. The IBP console tile displays this name.\n      example: My CA\n      maxLength: 64 # UI overflow limiter\n    display_name_orderer:\n      type: string\n      description: A descriptive base name for each ordering node. One or more child IBP console tiles display this name.\n      example: orderer\n      maxLength: 64 # UI overflow limiter\n    display_name_peer:\n      type: string\n      description: A descriptive name for this peer. The IBP console tile displays this name.\n      example: My Peer\n      maxLength: 64 # UI overflow limiter\n    display_name_msp:\n      type: string\n      description: A descriptive name for this MSP. The IBP console tile displays this name.\n      example: My Peer\n      maxLength: 64 # UI overflow limiter\n    cluster_name_orderer:\n      type: string\n      description: A descriptive name for an ordering service. The parent IBP console tile displays this name.\n      example: ordering service 1\n      maxLength: 64 # UI overflow limiter\n    client_keyfile:\n      type: string\n      description: The TLS private key for client TLS as base 64 encoded PEM.\n      x-validate_case_insensitive: true\n    client_certfile:\n      type: string\n      description: The TLS certificate for client TLS as base 64 encoded PEM.\n      x-validate_base64_certificate: true\n      x-validate_case_insensitive: true\n    keyfile:\n      type: string\n      x-validate_case_insensitive: true\n      description: The CA's private key as base 64 encoded PEM.\n    certfile:\n      type: string\n      x-validate_case_insensitive: true\n      description: The CA's certificate as base 64 encoded PEM.\n      x-validate_base64_certificate: true\n    chainfile:\n      type: string\n      x-validate_case_insensitive: true\n      description: The CA's certificate chain as base 64 encoded PEM.\n    replicas:\n      type: number\n      description: The number of replica pods running at any given time.\n      example: 1\n      minimum: 0\n      maximum: 1024 # spam prevention limiter\n    consenter_proposal_fin:\n      type: boolean\n      description: The state of a pre-created orderer node. A value of `true` means that the orderer node was added as a system channel consenter. This is a manual field. Set it yourself after finishing the raft append flow to indicate that this node is ready for use. See the [Submit config block to orderer](#submit-config-block-to-orderer) API description for more details about appending raft nodes.\n      example: true\n    connTimeout:\n      type: string\n      description: The timeout for a network connection.\n      example: 2s\n      x-validate_duration: true\n      x-minimum: 1e6 # 1 millisecond\n      x-maximum: 3.6e12 # 1 hour - dsh shrug\n      x-validate_case_insensitive: true\n    node_ou_general:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          example: true\n          description: Indicates if node OUs are enabled or not. [Available on peer/orderer components w/query parameter 'deployment_attrs']\n    node_ou:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          example: true\n          description: Indicates if node OUs are enabled or not.\n    dry_run_mode:\n      type: boolean\n      example: false\n      description: If true the request will be validated only. It will not execute, it will not make changes.\n    ecert_obj_general:\n      type: object\n      properties:\n        cert:\n          type: string\n          example: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='\n          description: A certificate as base 64 encoded PEM. [Available on peer/orderer components w/query parameter 'deployment_attrs']\n        cacert:\n          type: string\n          example: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='\n          description: A certificate as base 64 encoded PEM. [Available on peer/orderer components w/query parameter 'deployment_attrs']\n    ecert_obj:\n      type: object\n      properties:\n        cert:\n          type: string\n          example: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='\n          description: A certificate as base 64 encoded PEM.\n        cacert:\n          type: string\n          example: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='\n          description: A certificate as base 64 encoded PEM.\n\n    orderer_type:\n      type: string\n      example: raft\n      description: The type of Fabric orderer. Currently, only the type `\"raft\"` is supported. [etcd/raft](/docs/blockchain?topic=blockchain-ibp-console-build-network#ibp-console-build-network-ordering-console)\n      enum:\n        - raft\n    operations_url_ca:\n      type: string\n      description: The operations URL for the CA. Include the protocol, hostname/ip and port.\n      example: https://n3a3ec3-myca.ibp.us-south.containers.appdomain.cloud:9443\n      x-validate_regex_must_pass: is_http_url\n      x-validate_regex_error_msg: regex_fail_full_url\n    operations_url_orderer:\n      type: string\n      description: Used by Fabric health checker to monitor health status of the node. For more information, see [Fabric documentation](https://hyperledger-fabric.readthedocs.io/en/release-1.4/operations_service.html). Include the protocol, hostname/ip and port.\n      example: https://n3a3ec3-myorderer.ibp.us-south.containers.appdomain.cloud:8443\n      x-validate_regex_must_pass: is_http_url\n      x-validate_regex_error_msg: regex_fail_full_url\n    operations_url_peer:\n      type: string\n      description: Used by Fabric health checker to monitor health status of the node. For more information, see [Fabric documentation](https://hyperledger-fabric.readthedocs.io/en/release-1.4/operations_service.html). Include the protocol, hostname/ip and port.\n      example: https://n3a3ec3-mypeer.ibp.us-south.containers.appdomain.cloud:9443\n      x-validate_regex_must_pass: is_http_url\n      x-validate_regex_error_msg: regex_fail_full_url\n    msp_id:\n      type: string\n      example: Org1\n      description: The MSP id that is related to this component.\n      x-validate_regex_must_fail: invalid_msp_id # fabric-ca does not support these characters - (can't find source of claim)\n      x-validate_regex_error_msg: regex_invalid_msp_id # fabric-ca does not support these characters - (can't find source of claim)\n      maxLength: 250 # fabric-ca does not support - (can't find source of claim)\n      x-validate_illegal_values:\n        - '.'\n        - '..'\n    api_url_ca:\n      type: string\n      description: The URL for the CA. Typically, client applications would send requests to this URL. Include the protocol, hostname/ip and port.\n      example: https://n3a3ec3-myca.ibp.us-south.containers.appdomain.cloud:7054\n      x-validate_regex_must_pass: is_http_url\n      x-validate_regex_error_msg: regex_fail_full_url\n    api_url_orderer:\n      type: string\n      description: The gRPC URL for the orderer. Typically, client applications would send requests to this URL. Include the protocol, hostname/ip and port.\n      example: grpcs://n3a3ec3-myorderer.ibp.us-south.containers.appdomain.cloud:7050\n      x-validate_regex_must_pass: is_grpc_url\n      x-validate_regex_error_msg: regex_fail_full_url\n    api_url_peer:\n      type: string\n      description: The gRPC URL for the peer. Typically, client applications would send requests to this URL. Include the protocol, hostname/ip and port.\n      example: grpcs://n3a3ec3-mypeer.ibp.us-south.containers.appdomain.cloud:7051\n      x-validate_regex_must_pass: is_grpc_url\n      x-validate_regex_error_msg: regex_fail_full_url\n    grpcwp_url_orderer:\n      type: string\n      description: The gRPC web proxy URL in front of the orderer. Include the protocol, hostname/ip and port.\n      example: https://n3a3ec3-myorderer-proxy.ibp.us-south.containers.appdomain.cloud:443\n      x-validate_regex_must_pass: is_http_url\n      x-validate_regex_error_msg: regex_fail_full_url\n    grpcwp_url_peer:\n      type: string\n      description: The gRPC web proxy URL in front of the peer. Include the protocol, hostname/ip and port.\n      example: https://n3a3ec3-mypeer-proxy.ibp.us-south.containers.appdomain.cloud:8084\n      x-validate_regex_must_pass: is_http_url\n      x-validate_regex_error_msg: regex_fail_full_url\n    cahost:\n      type: string\n      example: n3a3ec3-myca.ibp.us-south.containers.appdomain.cloud\n      description: The CA's hostname. Do not include protocol or port. Must be a hostname from a known CA.\n      maxLength: 1024 # spam prevention limit\n      x-validate_known_hostname: true\n    caport:\n      type: number\n      example: 7054\n      description: The CA's port.\n      maximum: 65536\n      minimum: 1\n    state_db:\n      type: string\n      example: couchdb\n      description: Select the state database for the peer. Can be either \"couchdb\" or \"leveldb\". The default is \"couchdb\".\n      enum:\n        - couchdb\n        - leveldb\n    log_levels:\n      type: string\n      description: 'Valid log levels: \"error\", \"warn\", \"info\", \"verbose\", \"debug\", or \"silly\".'\n      example: silly\n      enum:\n        - error\n        - warn\n        - info\n        - verbose\n        - debug\n        - silly\n    identity_attrs:\n      type: object\n      properties:\n        hf.Registrar.Roles:\n          type: string\n          example: '*'\n          x-validate_case_insensitive: true\n          x-validate_overwrite_key: hf.Registrar.Roles\n        hf.Registrar.DelegateRoles:\n          type: string\n          example: '*'\n          x-validate_case_insensitive: true\n          x-validate_overwrite_key: hf.Registrar.DelegateRoles\n        hf.Revoker:\n          type: boolean\n          example: true\n          x-validate_case_insensitive: true\n          x-validate_overwrite_key: hf.Revoker\n        hf.IntermediateCA:\n          type: boolean\n          example: true\n          x-validate_case_insensitive: true\n          x-validate_overwrite_key: hf.IntermediateCA\n        hf.GenCRL:\n          type: boolean\n          example: true\n          x-validate_case_insensitive: true\n          x-validate_overwrite_key: hf.GenCRL\n        hf.Registrar.Attributes:\n          type: string\n          example: '*'\n          x-validate_case_insensitive: true\n          x-validate_overwrite_key: hf.Registrar.Attributes\n        hf.AffiliationMgr:\n          type: boolean\n          example: true\n          x-validate_case_insensitive: true\n          x-validate_overwrite_key: hf.AffiliationMgr\n    hsm:\n      type: object\n      description: The connection details of the HSM (Hardware Security Module).\n      required:\n        - pkcs11endpoint\n      x-validate_no_extra_keys: true\n      properties:\n        pkcs11endpoint:\n          type: string\n          description: The url to the HSM. Include the protocol, hostname, and port.\n          example: 'tcp://example.com:666'\n          x-validate_regex_must_pass: is_url\n          x-validate_regex_error_msg: regex_fail_full_url\n    scheme_version:\n      type: string\n      description: The versioning of the IBP console format of this JSON.\n      example: v1\n    config_override_response:\n      type: object\n      description: The **cached** configuration override that was set for the Kubernetes deployment. Field does not exist if an override was not set of if the component was imported.\n\n    ImportMSPBody:\n      type: object\n      description: Body schema for importing an MSP\n      required:\n        - msp_id\n        - display_name\n        - root_certs\n      properties:\n        msp_id:\n          $ref: '#/components/schemas/msp_id'\n        display_name:\n          $ref: '#/components/schemas/display_name_msp'\n        root_certs:\n          $ref: '#/components/schemas/MSPRootCerts'\n        intermediate_certs:\n          $ref: '#/components/schemas/IntermediateCerts'\n        admins:\n          $ref: '#/components/schemas/AdminCerts'\n        tls_root_certs:\n          $ref: '#/components/schemas/TlsRootCerts'\n        # removed 02/25/2020 - fields have no effect in the UI, even though they are valid MSP fields its confusing to list them in the api\n        #revocation_list:\n        #  $ref: '#/components/schemas/RevocationCerts'\n        #organizational_unit_identifiers:\n        #  $ref: '#/components/schemas/OrganizationalUnitIdentifiers'\n        #fabric_node_ous:\n        #  $ref: '#/components/schemas/FabricNodeOus'\n\n    EditLogSettingsBody:\n      description: File system logging settings. All body fields are optional (only send the fields that you want to change). _Changes to this field will restart the IBP console server(s)_\n      type: object\n      x-validate_no_extra_keys: true\n      properties:\n        client:\n          $ref: '#/components/schemas/LoggingSettingsClient'\n        server:\n          $ref: '#/components/schemas/LoggingSettingsServer'\n\n    LogSettingsResponse:\n      description: The logging settings for the client and server.\n      type: object\n      properties:\n        client:\n          $ref: '#/components/schemas/LoggingSettingsClient'\n        server:\n          $ref: '#/components/schemas/LoggingSettingsServer'\n\n    BadRequest:\n      description: Invalid request.\n      type: object\n      properties:\n        statusCode:\n          type: number\n          example: 400\n          enum:\n            - 400\n        msgs:\n          type: array\n          items:\n            type: string\n            description: A descriptive message of what is wrong with the request.\n            example:\n              - \"Expected parameter '$PROPERTY_NAME' to exist.\"\n              - \"Expected parameter '$PROPERTY_NAME' to be of type: '$PROPERTY_TYPE', but instead was: '$TYPE'.\"\n              - \"Expected parameter '$PROPERTY_NAME' to be a Base64 encoded PEM-string.\"\n              - \"Expected parameter '$PROPERTY_NAME' to be one of these values: $VALUES.\"\n\n    CreateCaBody:\n      description: Body schema for creating a CA\n      required:\n        - display_name\n        - config_override\n      type: object\n      x-validate_no_extra_keys: true\n      properties:\n        id:\n          $ref: '#/components/schemas/component_id'\n        display_name:\n          $ref: '#/components/schemas/display_name_ca'\n        resources:\n          type: object\n          description: CPU and memory properties. This feature is not available if using a free Kubernetes cluster.\n          required:\n            - ca\n          x-validate_no_extra_keys: true\n          x-validate_paid_plan_feature: true\n          properties:\n            ca:\n              $ref: '#/components/schemas/ResourceObject'\n        storage:\n          type: object\n          description: Disk space properties. This feature is not available if using a free Kubernetes cluster.\n          required:\n            - ca\n          x-validate_no_extra_keys: true\n          x-validate_paid_plan_feature: true\n          properties:\n            ca:\n              $ref: '#/components/schemas/StorageObject'\n        zone:\n          $ref: '#/components/schemas/k8s_zone'\n        config_override:\n          type: object\n          description: |\n            Set `config_override` to create the root/initial enroll id and enroll secret as well as enabling custom CA configurations (such as using postgres). See the [Fabric CA configuration file](https://hyperledger-fabric-ca.readthedocs.io/en/release-1.4/serverconfig.html) for more information about each parameter.\n\n            The field `tlsca` is optional. The IBP console will copy the value of `config_override.ca` into `config_override.tlsca` if `config_override.tlsca` is omitted (which is recommended).\n\n            *The nested field **names** below are not case-sensitive.*\n          required:\n            - ca\n          x-validate_no_extra_keys: true\n          properties:\n            ca:\n              $ref: '#/components/schemas/ConfigCACreate'\n            tlsca:\n              $ref: '#/components/schemas/ConfigCACreate'\n        replicas:\n          $ref: '#/components/schemas/replicas'\n        tags:\n          $ref: '#/components/schemas/tags'\n        hsm:\n          $ref: '#/components/schemas/hsm'\n        region:\n          $ref: '#/components/schemas/k8s_region'\n        version:\n          $ref: '#/components/schemas/version_desired'\n\n        # removed 02/11/2020 - use config_override.registry.identities[0].name\n        #enroll_id:\n        #  $ref: '#/components/schemas/enroll_id'\n        #\n        # removed 02/11/2020 - use config_override.registry.identities[0].pass\n        #enroll_secret:\n        #  $ref: '#/components/schemas/enroll_secret'\n\n    # ca property reference: https://github.com/hyperledger/fabric-ca/blob/master/docs/source/servercli.rst\n    # also https://github.com/hyperledger/fabric-ca/blob/master/cmd/fabric-ca-server/config.go\n    ConfigCACreate:\n      type: object\n      x-validate_illegal_keys:\n        - version\n        - port\n        - signing\n        - caount\n        - cafiles\n        - operations\n        - ldap # temp adding field as invalid, issue https://github.ibm.com/IBM-Blockchain/OpTools/issues/3548\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      required:\n        - registry\n      properties:\n        cors:\n          $ref: '#/components/schemas/ConfigCA_cors'\n        debug:\n          $ref: '#/components/schemas/ConfigCA_debug'\n        crlsizelimit:\n          $ref: '#/components/schemas/ConfigCA_crlsizelimit'\n        tls:\n          $ref: '#/components/schemas/ConfigCA_tls'\n        ca:\n          $ref: '#/components/schemas/ConfigCA_ca'\n        crl:\n          $ref: '#/components/schemas/ConfigCA_crl'\n        registry:\n          $ref: '#/components/schemas/ConfigCA_registry'\n        db:\n          $ref: '#/components/schemas/ConfigCA_db'\n        #ldap: # removing for now, issue https://github.ibm.com/IBM-Blockchain/OpTools/issues/3548\n        #  $ref: '#/components/schemas/ConfigCA_ldap'\n        affiliations:\n          $ref: '#/components/schemas/ConfigCA_affiliations'\n        csr:\n          $ref: '#/components/schemas/ConfigCA_csr'\n        idemix:\n          $ref: '#/components/schemas/ConfigCA_idemix'\n        BCCSP: # using upper case even though ca's doc say lower (peer \u0026 orderer's bccsp uses upper case, so this is more consistent)\n          $ref: '#/components/schemas/Bccsp'\n        intermediate:\n          $ref: '#/components/schemas/ConfigCA_intermediate'\n        cfg:\n          $ref: '#/components/schemas/ConfigCA_cfg'\n        metrics:\n          $ref: '#/components/schemas/Metrics'\n\n    ConfigCA_cors:\n      type: object\n      required:\n        - enabled\n        - origins\n      x-validate_case_insensitive: true\n      properties:\n        enabled:\n          type: boolean\n          example: true\n          x-validate_case_insensitive: true\n        origins:\n          type: array\n          x-validate_case_insensitive: true\n          items:\n            type: string\n            example: '*'\n            description: The origins that will be allowed to use the REST endpoints on the CA (CORS enforcement).\n\n    ConfigCA_debug:\n      type: boolean\n      description: Enable debug to debug the CA.\n      example: false\n      x-validate_case_insensitive: true\n\n    ConfigCA_crlsizelimit:\n      type: number\n      description: Max size of an acceptable CRL in bytes\n      example: 512000\n      minimum: 1024\n      maximum: 1073741824 # not sure of real limit, use a spam prevention limit\n      x-validate_case_insensitive: true\n\n    ConfigCA_tls:\n      type: object\n      required:\n        - certfile\n        - keyfile\n      x-validate_illegal_keys:\n        - enabled\n      x-validate_case_insensitive: true\n      properties:\n        keyfile:\n          $ref: '#/components/schemas/keyfile'\n        certfile:\n          $ref: '#/components/schemas/certfile'\n        clientauth:\n          type: object\n          required:\n            - type\n            - certfiles\n          x-validate_case_insensitive: true\n          properties:\n            type:\n              type: string\n              example: noclientcert\n              x-validate_case_insensitive: true\n            certfiles:\n              type: array\n              x-validate_case_insensitive: true\n              items:\n                $ref: '#/components/schemas/client_certfile'\n\n    ConfigCA_ca:\n      type: object\n      x-validate_case_insensitive: true\n      x-validate_illegal_keys:\n        - name\n      properties:\n        keyfile:\n          $ref: '#/components/schemas/keyfile'\n        certfile:\n          $ref: '#/components/schemas/certfile'\n        chainfile:\n          $ref: '#/components/schemas/chainfile'\n\n    ConfigCA_crl:\n      type: object\n      required:\n        - expiry\n      x-validate_case_insensitive: true\n      properties:\n        expiry:\n          type: string\n          example: 24h\n          description: Expiration of the CRL (Certificate Revocation List) generated by the 'gencrl' requests.\n          x-minimum: 6e10 # 1 minute\n          x-maximum: 3.154e16 # 1 year - dsh shrug\n          x-validate_case_insensitive: true\n          x-validate_duration: true\n\n    ConfigCA_registry:\n      type: object\n      required:\n        - maxenrollments\n        - identities\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      x-validate_overwrite_key: registry\n      properties:\n        maxenrollments: # field may seem like a duplicate of the other one by the same name but this one has more usage/visibility in the CA's docs\n          type: number\n          description: Default maximum number of enrollments per id. Set -1 for infinite.\n          minimum: -1\n          example: -1\n          x-validate_case_insensitive: true\n          x-validate_overwrite_key: maxenrollments\n        identities:\n          type: array\n          minLength: 1\n          maxLength: 1024 # spam prevention limit\n          x-validate_case_insensitive: true\n          x-validate_overwrite_key: identities\n          items:\n            type: object\n            required:\n              - name\n              - pass\n              - type\n            x-validate_no_extra_keys: true\n            x-validate_case_insensitive: true\n            properties:\n              name:\n                type: string\n                example: admin\n                description: The ID for the identity, aka enroll id.\n                minLength: 4 # CA id's have no minimum length, artificial minimum decided by dsh, test team doesn't want it long\n                maxLength: 255 # CA's user table can only hold 255 - https://github.com/hyperledger/fabric-ca/blob/master/lib/server/db/mysql/mysql.go#L153\n                x-validate_case_insensitive: true\n                x-validate_overwrite_key: name\n              pass:\n                type: string\n                example: password\n                description: The password for the identity, aka enroll secret.\n                minLength: 4 # CA id secrets' have no minimum length, artificial minimum decided by dsh, test team doesn't want it long\n                maxLength: 255 # not sure of real limit, using the same limit as enroll id...\n                x-validate_case_insensitive: true\n                x-validate_overwrite_key: pass\n              type:\n                type: string\n                example: client\n                description: The type of identity.\n                maxLength: 256 # CA's user table can only hold 256 - https://github.com/hyperledger/fabric-ca/blob/master/lib/server/db/mysql/mysql.go#L153\n                x-validate_case_insensitive: true\n                x-validate_overwrite_key: type\n                enum:\n                  - client\n                  - peer\n                  - orderer\n                  - user\n                  - admin\n              maxenrollments: # CA does not doc this version of this field in their yaml but pretty sure it exists, see test: https://github.com/hyperledger/fabric-ca/blob/release-1.4/testdata/ca/rootca/ca1/fabric-ca-server-config.yaml#L53\n                type: number\n                description: Maximum number of enrollments for id. Set -1 for infinite.\n                minimum: -1\n                example: -1\n                x-validate_case_insensitive: true\n                x-validate_overwrite_key: maxenrollments\n              affiliation:\n                type: string\n                description: The affiliation data for the identity.\n                maxLength: 1024 # CA's user table can only hold 1024 - https://github.com/hyperledger/fabric-ca/blob/master/lib/server/db/mysql/mysql.go#L153\n                x-validate_case_insensitive: true\n                x-validate_overwrite_key: affiliation\n              attrs:\n                $ref: '#/components/schemas/identity_attrs'\n\n    ConfigCA_db:\n      type: object\n      required:\n        - datasource\n        - type\n      x-validate_case_insensitive: true\n      properties:\n        type:\n          type: string\n          example: postgres\n          description: The type of database. Either 'sqlite3', 'postgres', 'mysql'. Defaults 'sqlite3'.\n          x-validate_case_insensitive: true\n          enum:\n            - sqlite3\n            - postgres\n            - mysql\n        datasource:\n          type: string\n          description: Build this string - \"host=\\\u003chostname\u003e port=\\\u003cport\u003e user=\\\u003cusername\u003e password=\\\u003cpassword\u003e dbname=ibmclouddb sslmode=verify-full\"\n          example: host=fake.databases.appdomain.cloud port=31941 user=ibm_cloud password=password dbname=ibmclouddb sslmode=verify-full\n          maxLength: 1024 # spam prevention limit\n          x-validate_case_insensitive: true\n        tls:\n          type: object\n          x-validate_case_insensitive: true\n          properties:\n            certfiles:\n              type: array\n              items:\n                type: string\n                description: The TLS certificate as base 64 encoded PEM.\n                x-validate_base64_certificate: true\n                x-validate_case_insensitive: true\n            client:\n              type: object\n              required:\n                - certfile\n                - keyfile\n              x-validate_case_insensitive: true\n              properties:\n                certfile:\n                  $ref: '#/components/schemas/client_certfile'\n                keyfile:\n                  $ref: '#/components/schemas/client_keyfile'\n            enabled:\n              type: boolean\n              example: false\n              description: Set to true if TLS is to be used between the CA and its database, else false.\n              x-validate_case_insensitive: true\n\n    ConfigCA_ldap:\n      type: object\n      required:\n        - enabled\n        - url\n        - tls\n        - attribute\n      properties:\n        enabled:\n          type: object\n          example: false\n          description: Enable the LDAP client for authentication and attributes.\n        url:\n          type: string\n          example: ldap://\u003cusername\u003e:\u003cpassword\u003e@\u003chost\u003e:\u003cport\u003e/\u003croute\u003e\n          description: 'The LDAP client URL. Include the protocol, basic auth, hostname, port, and route: `ldap://username:password@host:port/route`'\n          x-validate_regex_must_pass: is_basic_auth_url\n          x-validate_regex_error_msg: regex_fail_full_url\n        tls:\n          type: object\n          required:\n            - certfiles\n          properties:\n            certfiles:\n              type: array\n              items:\n                type: string\n                description: The TLS certificate as base 64 encoded PEM.\n                x-validate_base64_certificate: true\n            client:\n              type: object\n              required:\n                - certfile\n                - keyfile\n              properties:\n                certfile:\n                  $ref: '#/components/schemas/client_certfile'\n                keyfile:\n                  $ref: '#/components/schemas/client_keyfile'\n        attribute:\n          type: object\n          properties:\n            names:\n              type: array\n              description: An array of strings containing the LDAP attribute names of an entry in the LDAP server.\n              items:\n                type: string\n                example: member\n            converters: # see https://github.com/hyperledger/fabric-ca/blob/master/cmd/fabric-ca-server/config.go#L213\n              type: array\n              description: This is used to convert an LDAP entry to the value of a Fabric CA attribute. For details see comments in [core.go.](https://github.com/hyperledger/fabric-ca/blob/release-1.4/cmd/fabric-ca-server/config.go#L221)\n              items:\n                type: object\n                properties:\n                  name:\n                    type: string\n                    example: hf.Revoker\n                  value:\n                    type: string\n                    example: attr(\"uid\") =~ \"revoker*\"\n            maps: # see https://github.com/hyperledger/fabric-ca/blob/master/cmd/fabric-ca-server/config.go#L230\n              type: array\n              description: This is used to convert an LDAP entry to the value of a Fabric CA attribute. For details see comments in [core.go.](https://github.com/hyperledger/fabric-ca/blob/release-1.4/cmd/fabric-ca-server/config.go#L221)\n              items:\n                type: object\n                properties:\n                  name:\n                    type: string\n                    example: dn1\n                  value:\n                    type: string\n                    example: peer\n\n    ConfigCA_affiliations:\n      type: object\n      description: Set the keys to the desired affiliation parent names. The keys 'org1' and 'org2' are examples.\n      additionalProperties: true\n      x-validate_case_insensitive: true\n      properties:\n        org1:\n          type: array\n          items:\n            type: string\n            example: department1\n            description: The case sensitive name of a child affiliation of 'org1'.\n        org2:\n          type: array\n          items:\n            type: string\n            example: department1\n            description: The case sensitive name of a child affiliation of 'org2'.\n\n    ConfigCA_csr:\n      type: object\n      required:\n        - cn\n        - names\n        - ca\n      x-validate_case_insensitive: true\n      properties:\n        cn:\n          type: string\n          example: ca\n          description: The Common Name for the CSRs.\n          x-maximum: 1024 # spam prevention limiter\n          x-validate_case_insensitive: true\n        keyrequest:\n          type: object\n          required:\n            - algo\n            - size\n          x-validate_case_insensitive: true\n          properties:\n            algo:\n              type: string\n              example: ecdsa\n              description: The algorithm to use for CSRs.\n              x-maximum: 1024 # spam prevention limiter\n              x-validate_case_insensitive: true\n            size:\n              type: number\n              example: 256\n              description: The size of the key for CSRs.\n              maximum: 1048576 # spam prevention limiter\n              minimum: 128\n              x-validate_case_insensitive: true\n        names:\n          type: array\n          items:\n            type: object\n            required:\n              - C\n              - ST\n              - O\n            properties:\n              C:\n                type: string\n                example: US\n                x-validate_case_insensitive: true\n                x-validate_overwrite_key: C\n              ST:\n                type: string\n                example: North Carolina\n                x-validate_case_insensitive: true\n                x-validate_overwrite_key: ST\n              L:\n                type: string\n                example: Raleigh\n                x-validate_case_insensitive: true\n                x-validate_overwrite_key: L\n              O:\n                type: string\n                example: Hyperledger\n                x-validate_case_insensitive: true\n                x-validate_overwrite_key: O\n              OU:\n                type: string\n                example: Fabric\n                x-validate_case_insensitive: true\n                x-validate_overwrite_key: OU\n        hosts:\n          type: array\n          items:\n            type: string\n            example: localhost\n        ca:\n          type: object\n          properties:\n            expiry:\n              type: string\n              example: 131400h\n              description: The expiration for the root CA certificate.\n              x-validate_duration: true\n              x-minimum: 2.628e15 # 1 month\n              x-maximum: 3.154e18 # 1 year - dsh shrug\n            pathlength:\n              type: number\n              description: The pathlength field is used to limit CA certificate hierarchy. 0 means that the CA cannot issue CA certs, only entity certificates. 1 means that the CA can issue both.\n              minimum: 0\n              maximum: 1024 # spam prevention limiter\n\n    ConfigCA_idemix:\n      type: object\n      required:\n        - rhpoolsize\n        - nonceexpiration\n        - noncesweepinterval\n      x-validate_case_insensitive: true\n      properties:\n        rhpoolsize:\n          type: number\n          example: 100\n          description: Specifies the revocation pool size.\n          minimum: 0\n          maximum: 100000 # spam prevention limiter\n          x-validate_case_insensitive: true\n        nonceexpiration:\n          type: string\n          example: 15s\n          description: Specifies the expiration for the nonces.\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 8.64e13 # 1 day - dsh shrug\n          x-validate_case_insensitive: true\n        noncesweepinterval:\n          type: string\n          example: 15m\n          description: Specifies frequency at which expired nonces are removed from data store.\n          x-validate_duration: true\n          x-minimum: 1e9 # 1 second\n          x-maximum: 2.628e15 # 1 month - dsh shrug\n          x-validate_case_insensitive: true\n\n    ConfigCA_intermediate:\n      type: object\n      x-validate_case_insensitive: true\n      required:\n        - parentserver\n      properties:\n        parentserver:\n          type: object\n          required:\n            - url\n            - caname\n          x-validate_case_insensitive: true\n          properties:\n            url:\n              type: string\n              description: The url of the parent server. Include the protocol, hostname/ip and port.\n              x-validate_regex_must_pass: is_http_url_with_auth\n              x-validate_regex_error_msg: regex_fail_full_url\n              x-validate_case_insensitive: true\n            caname:\n              type: string\n              description: The name of the CA to enroll within the server.\n              maxLength: 1024 # spam prevention limiter\n              minLength: 1\n              x-validate_case_insensitive: true\n        enrollment:\n          type: object\n          required:\n            - hosts\n            - profile\n            - label\n          x-validate_case_insensitive: true\n          properties:\n            hosts:\n              type: string\n              description: Hosts to set when issuing the certificate. # dsh not sure if this is right...\n              example: localhost\n              x-validate_case_insensitive: true\n            profile:\n              type: string\n              description: Name of the signing profile to use when issuing the certificate.\n              x-validate_case_insensitive: true\n            label:\n              type: string\n              description: Label to use in HSM operations.\n              x-validate_case_insensitive: true\n        tls:\n          type: object\n          x-validate_case_insensitive: true\n          required:\n            - certfiles\n          properties:\n            certfiles:\n              type: array\n              x-validate_case_insensitive: true\n              items:\n                type: string\n                description: The TLS certificate as base 64 encoded PEM.\n            client:\n              type: object\n              required:\n                - certfile\n                - keyfile\n              x-validate_case_insensitive: true\n              properties:\n                certfile:\n                  $ref: '#/components/schemas/client_certfile'\n                keyfile:\n                  $ref: '#/components/schemas/client_keyfile'\n\n    ConfigCA_cfg:\n      type: object\n      required:\n        - identities\n      x-validate_case_insensitive: true\n      properties:\n        identities:\n          type: object\n          required:\n            - passwordattempts\n          x-validate_case_insensitive: true\n          properties:\n            passwordattempts:\n              type: number\n              example: 10\n              description: The maximum number of incorrect password attempts allowed per identity.\n              minimum: 1\n              maximum: 1000000 # spam prevention limiter\n              x-validate_case_insensitive: true\n            allowremove:\n              type: boolean\n              example: false\n              description: Set to `true` to allow deletion of identities. Defaults `false`.\n              x-validate_case_insensitive: true\n\n    Metrics:\n      type: object\n      x-validate_case_insensitive: true\n      required:\n        - provider\n      properties:\n        provider:\n          type: string\n          example: prometheus\n          description: Metrics provider to use. Can be either 'statsd', 'prometheus', or 'disabled'.\n          x-validate_case_insensitive: true\n          enum:\n            - statsd\n            - prometheus\n            - disabled\n        statsd:\n          type: object\n          required:\n            - network\n            - address\n            - writeInterval\n            - prefix\n          x-validate_case_insensitive: true\n          properties:\n            network:\n              type: string\n              example: udp\n              description: Either UDP or TCP.\n              x-validate_case_insensitive: true\n              enum:\n                - udp\n                - tcp\n            address:\n              $ref: '#/components/schemas/Statsd_address'\n            writeInterval:\n              $ref: '#/components/schemas/Statsd_writeInterval'\n            prefix:\n              $ref: '#/components/schemas/Statsd_prefix'\n\n    Statsd_address:\n      type: string\n      description: The address of the statsd server. Include hostname/ip and port.\n      example: 127.0.0.1:8125\n      maxLength: 1024 # spam prevention limiter\n      x-validate_case_insensitive: true\n\n    Statsd_writeInterval:\n      type: string\n      description: The frequency at which locally cached counters and gauges are pushed to statsd.\n      example: 10s\n      x-validate_duration: true\n      x-minimum: 1e6 # 1 millisecond\n      x-maximum: 8.64e13 # 1 day - dsh shrug\n      x-validate_case_insensitive: true\n\n    Statsd_prefix:\n      type: string\n      description: The string that is prepended to all emitted statsd metrics.\n      example: server\n      maxLength: 1024 # spam prevention limiter\n      x-validate_case_insensitive: true\n\n    # orderer yaml property reference: https://github.com/hyperledger/fabric/blob/release-1.4/sampleconfig/orderer.yaml\n    # orderer deployer property reference: https://github.ibm.com/IBM-Blockchain/ibp-operator/blob/master/docs/overrides/orderer-yaml.md\n    ConfigOrdererCreate:\n      type: object\n      description: |\n        Override the [Fabric Orderer configuration file](https://github.com/hyperledger/fabric/blob/release-1.4/sampleconfig/orderer.yaml) if you want use custom attributes to configure the Orderer. Omit if not.\n\n        *The nested field **names** below are not case-sensitive.*\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      x-validate_illegal_keys:\n        - FileLedger\n        - Kafka\n        - Operations\n        - Consensus\n      properties:\n        General:\n          $ref: '#/components/schemas/ConfigOrderer_general'\n        Debug:\n          $ref: '#/components/schemas/ConfigOrderer_debug'\n        Metrics:\n          $ref: '#/components/schemas/ConfigOrderer_metrics'\n\n    ConfigOrdererUpdate:\n      type: object\n      description: |\n        Update the [Fabric Orderer configuration file](https://github.com/hyperledger/fabric/blob/release-1.4/sampleconfig/orderer.yaml) if you want use custom attributes to configure the Orderer. Omit if not.\n\n        *The nested field **names** below are not case-sensitive.*\n        *The nested fields sent will be merged with the existing settings.*\n      x-validate_no_extra_keys: true\n      x-validate_illegal_keys:\n        - FileLedger\n        - Kafka\n        - Operations\n        - Consensus\n      properties:\n        General:\n          $ref: '#/components/schemas/ConfigOrderer_general_update'\n        Debug:\n          $ref: '#/components/schemas/ConfigOrderer_debug'\n        Metrics:\n          $ref: '#/components/schemas/ConfigOrderer_metrics'\n\n    ConfigOrderer_general:\n      type: object\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      x-validate_illegal_keys:\n        - LedgerType\n        - ListenAddress\n        - ListenPort\n        - TLS\n        - Cluster\n        - GenesisMethod\n        - GenesisProfile\n        - GenesisFile\n        - LocalMSPDir\n        - LocalMSPID\n        - Profile\n      properties:\n        Keepalive:\n          $ref: '#/components/schemas/ConfigOrderer_keepalive'\n        BCCSP:\n          $ref: '#/components/schemas/Bccsp'\n        Authentication:\n          $ref: '#/components/schemas/ConfigOrderer_authentication'\n\n    ConfigOrderer_general_update:\n      type: object\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      properties:\n        Keepalive:\n          $ref: '#/components/schemas/ConfigOrderer_keepalive'\n        Authentication:\n          $ref: '#/components/schemas/ConfigOrderer_authentication'\n\n    ConfigOrderer_keepalive:\n      type: object\n      description: Keep alive settings for the GRPC server.\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      properties:\n        ServerMinInterval:\n          type: string\n          description: The minimum time between client pings. If a client sends pings more frequently the server will disconnect from the client.\n          example: 60s\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 8.64e13 # 1 day - dsh shrug\n          x-validate_case_insensitive: true\n        ServerInterval:\n          type: string\n          description: The time between pings to clients.\n          example: 2h\n          x-validate_duration: true\n          x-minimum: 6e10 # 1 minute\n          x-maximum: 3.154e16 # 1 year - dsh shrug\n          x-validate_case_insensitive: true\n        ServerTimeout:\n          type: string\n          description: The duration the server will wait for a response from a client before closing the connection.\n          example: 20s\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 8.64e13 # 1 day - dsh shrug\n          x-validate_case_insensitive: true\n\n    Bccsp:\n      type: object\n      description: Configures the Blockchain Crypto Service Providers (bccsp).\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      x-validate_overwrite_key: BCCSP\n      properties:\n        Default:\n          type: string\n          description: The name of the crypto library implementation to use for the BlockChain Crypto Service Provider (bccsp). Defaults to `SW`.\n          example: SW\n          x-validate_case_insensitive: true\n          enum:\n            - SW\n            - PKCS11\n        SW:\n          type: object\n          description: Software based blockchain crypto provider.\n          required:\n            - Hash\n            - Security\n          x-validate_illegal_keys:\n            - FileKeyStore\n          x-validate_case_insensitive: true\n          properties:\n            Hash:\n              $ref: '#/components/schemas/Bccsp_hash'\n            Security:\n              $ref: '#/components/schemas/Bccsp_security'\n            #FileKeyStore:\n            #  $ref: '#/components/schemas/Bccsp_FileKeyStore'\n        PKCS11:\n          type: object\n          description: Hardware-based blockchain crypto provider.\n          required:\n            - Pin\n            - Label\n          x-validate_illegal_keys:\n            - FileKeyStore\n            - Library\n          x-validate_case_insensitive: true\n          properties:\n            #Library:\n            #  type: string\n            #  description: Location of the PKCS11 module library to use.\n            Label:\n              type: string\n              description: Token Label.\n              x-validate_case_insensitive: true\n            Pin:\n              type: string\n              description: The user PIN.\n              x-validate_case_insensitive: true\n            Hash:\n              $ref: '#/components/schemas/Bccsp_hash'\n            Security:\n              $ref: '#/components/schemas/Bccsp_security'\n            #FileKeyStore:\n            #  $ref: '#/components/schemas/Bccsp_FileKeyStore'\n\n    Bccsp_hash:\n      type: string\n      example: SHA2\n      description: The hash family to use for the BlockChain Crypto Service Provider (bccsp)\n      minLength: 2\n      maxLength: 128 # spam prevention limiter\n      x-validate_case_insensitive: true\n\n    Bccsp_security:\n      type: number\n      example: 256\n      description: The length of hash to use for the BlockChain Crypto Service Provider (bccsp)\n      minimum: 32\n      maximum: 1024\n      x-validate_case_insensitive: true\n\n    Bccsp_FileKeyStore:\n      type: object\n      x-validate_case_insensitive: true\n      properties:\n        KeyStore:\n          type: string\n          description: The location of the keystore. If unset the location will be `'LocalMSPDir'/keystore`.\n          minLength: 1\n          maxLength: 1024 # spam prevention limiter\n          x-validate_case_insensitive: true\n\n    ConfigOrderer_authentication:\n      type: object\n      description: Contains configuration parameters that are related to authenticating client messages.\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      properties:\n        TimeWindow:\n          $ref: '#/components/schemas/TimeWindow'\n        NoExpirationChecks:\n          $ref: '#/components/schemas/NoExpirationChecks'\n\n    TimeWindow:\n      type: string\n      description: The maximum acceptable difference between the current server time and the client's time.\n      example: 15m\n      x-validate_duration: true\n      x-minimum: 1e9 # 1 second\n      x-maximum: 2.628e15 # 1 month - dsh shrug\n      x-validate_case_insensitive: true\n\n    NoExpirationChecks:\n      type: boolean\n      description: Indicates if the orderer should ignore expired identities. Should only be used temporarily to recover from an extreme event such as the expiration of administrators. Defaults `false`.\n      example: false\n      x-validate_case_insensitive: true\n\n    ConfigOrderer_debug:\n      type: object\n      description: Controls the debugging options for the orderer.\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      properties:\n        BroadcastTraceDir:\n          type: string\n          description: Path to directory. If set will cause each request to the Broadcast service to be written to a file in this directory.\n          example: null\n          maxLength: 1024 # spam prevention limit\n          x-validate_case_insensitive: true\n        DeliverTraceDir:\n          type: string\n          description: Path to directory. If set will cause each request to the Deliver service to be written to a file in this directory.\n          example: null\n          maxLength: 1024 # spam prevention limit\n          x-validate_case_insensitive: true\n\n    ConfigOrderer_metrics:\n      type: object\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      properties:\n        Provider:\n          type: string\n          description: The metrics provider to use.\n          example: disabled\n          x-validate_case_insensitive: true\n          enum:\n            - disabled\n            - statsd\n            - prometheus\n        Statsd:\n          type: object\n          description: The statsd configuration.\n          x-validate_case_insensitive: true\n          properties:\n            Network:\n              type: string\n              description: Network protocol to use.\n              example: udp\n              x-validate_case_insensitive: true\n              enum:\n                - udp\n                - tcp\n            Address:\n              $ref: '#/components/schemas/Statsd_address'\n            WriteInterval:\n              $ref: '#/components/schemas/Statsd_writeInterval'\n            Prefix:\n              $ref: '#/components/schemas/Statsd_prefix'\n\n    # peer yaml property reference: https://github.com/hyperledger/fabric/blob/release-1.4/sampleconfig/core.yaml\n    # peer deployer property reference: https://github.ibm.com/IBM-Blockchain/ibp-operator/blob/master/docs/overrides/core-yaml.md\n    ConfigPeerCreate:\n      type: object\n      description: |\n        Override the [Fabric Peer configuration file](https://github.com/hyperledger/fabric/blob/release-1.4/sampleconfig/core.yaml) if you want use custom attributes to configure the Peer. Omit if not.\n\n        *The nested field **names** below are not case-sensitive.*\n      x-validate_no_extra_keys: true\n      x-validate_illegal_keys:\n        - vm\n        - ledger\n        - operations\n      properties:\n        peer:\n          type: object\n          x-validate_no_extra_keys: true\n          x-validate_case_insensitive: true\n          x-validate_illegal_keys:\n            - listenAddress\n            - address\n            - addressAutoDetect\n            - gomaxprocs\n            - tls\n            - fileSystemPath\n            - localMspType\n            - profile\n          properties:\n            id:\n              $ref: '#/components/schemas/ConfigPeer_id'\n            networkId:\n              $ref: '#/components/schemas/ConfigPeer_networkId'\n            keepalive:\n              $ref: '#/components/schemas/ConfigPeer_keepalive'\n            gossip:\n              $ref: '#/components/schemas/ConfigPeer_gossip'\n            authentication:\n              $ref: '#/components/schemas/ConfigPeer_authentication'\n            BCCSP:\n              $ref: '#/components/schemas/Bccsp'\n            client:\n              $ref: '#/components/schemas/ConfigPeer_client'\n            deliveryclient:\n              $ref: '#/components/schemas/ConfigPeer_deliveryclient'\n            adminService:\n              $ref: '#/components/schemas/ConfigPeer_adminService'\n            validatorPoolSize:\n              $ref: '#/components/schemas/ConfigPeer_validatorPoolSize'\n            discovery:\n              $ref: '#/components/schemas/ConfigPeer_discovery'\n            limits:\n              $ref: '#/components/schemas/ConfigPeer_limits'\n            # temp removed (not yet supported by deployer) - 05/28/2020\n            #handlers:\n            #  $ref: '#/components/schemas/ConfigPeer_handlers'\n        chaincode:\n          $ref: '#/components/schemas/ConfigPeer_chaincode'\n        metrics:\n          $ref: '#/components/schemas/Metrics'\n\n    ConfigPeerUpdate:\n      type: object\n      description: |\n        Update the [Fabric Peer configuration file](https://github.com/hyperledger/fabric/blob/release-1.4/sampleconfig/core.yaml) if you want use custom attributes to configure the Peer. Omit if not.\n\n        *The nested field **names** below are not case-sensitive.*\n        *The nested fields sent will be merged with the existing settings.*\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      x-validate_illegal_keys:\n        - vm\n        - ledger\n        - operations\n      properties:\n        peer:\n          type: object\n          x-validate_no_extra_keys: true\n          x-validate_case_insensitive: true\n          x-validate_illegal_keys:\n            - listenAddress\n            - address\n            - addressAutoDetect\n            - gomaxprocs\n            - tls\n            - fileSystemPath\n            - localMspType\n            - profile\n            - BCCSP\n          properties:\n            id:\n              $ref: '#/components/schemas/ConfigPeer_id'\n            networkId:\n              $ref: '#/components/schemas/ConfigPeer_networkId'\n            keepalive:\n              $ref: '#/components/schemas/ConfigPeer_keepalive'\n            gossip:\n              $ref: '#/components/schemas/ConfigPeer_gossip'\n            authentication:\n              $ref: '#/components/schemas/ConfigPeer_authentication'\n            client:\n              $ref: '#/components/schemas/ConfigPeer_client'\n            deliveryclient:\n              $ref: '#/components/schemas/ConfigPeer_deliveryclient'\n            adminService:\n              $ref: '#/components/schemas/ConfigPeer_adminService'\n            validatorPoolSize:\n              $ref: '#/components/schemas/ConfigPeer_validatorPoolSize'\n            discovery:\n              $ref: '#/components/schemas/ConfigPeer_discovery'\n            limits:\n              $ref: '#/components/schemas/ConfigPeer_limits'\n            # temp removed (not yet supported by deployer) - 05/28/2020\n            #handlers:\n            #  $ref: '#/components/schemas/ConfigPeer_handlers'\n        chaincode:\n          $ref: '#/components/schemas/ConfigPeer_chaincode'\n        metrics:\n          $ref: '#/components/schemas/Metrics'\n\n    ConfigPeer_id:\n      type: string\n      description: A unique id used to identify this instance.\n      example: john-doe\n      minLength: 1\n      maxLength: 128 # spam prevention limiter\n      x-validate_case_insensitive: true\n\n    ConfigPeer_networkId:\n      type: string\n      description: The ID to logically separate one network from another.\n      example: dev\n      minLength: 1\n      maxLength: 128 # spam prevention limiter\n      x-validate_case_insensitive: true\n\n    ConfigPeer_keepalive:\n      type: object\n      description: Keep alive settings between the peer server and clients.\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      properties:\n        minInterval:\n          type: string\n          example: 60s\n          description: The minimum time between client pings. If a client sends pings more frequently the server disconnects from the client.\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 8.64e13 # 1 day - dsh shrug\n          x-validate_case_insensitive: true\n        client:\n          type: object\n          x-validate_no_extra_keys: true\n          x-validate_case_insensitive: true\n          properties:\n            interval:\n              type: string\n              example: 60s\n              description: The time between pings to other peer nodes. Must greater than or equal to the minInterval.\n              # dsh todo can you enforce this?\n              x-validate_duration: true\n              x-minimum: 1e6 # 1 millisecond\n              x-maximum: 8.64e13 # 1 day - dsh shrug\n              x-validate_case_insensitive: true\n            timeout:\n              type: string\n              example: 20s\n              description: The duration a client waits for a peer's response before it closes the connection.\n              x-validate_duration: true\n              x-minimum: 1e6 # 1 millisecond\n              x-maximum: 8.64e13 # 1 day - dsh shrug\n              x-validate_case_insensitive: true\n        deliveryClient:\n          type: object\n          x-validate_no_extra_keys: true\n          x-validate_case_insensitive: true\n          properties:\n            interval:\n              type: string\n              example: 60s\n              description: The time between pings to ordering nodes. Must greater than or equal to the minInterval\n              # dsh todo can you enforce this?\n              x-validate_duration: true\n              x-minimum: 1e6 # 1 millisecond\n              x-maximum: 8.64e13 # 1 day - dsh shrug\n              x-validate_case_insensitive: true\n            timeout:\n              type: string\n              example: 20s\n              description: The duration a client waits for an orderer's response before it closes the connection.\n              x-validate_duration: true\n              x-minimum: 1e6 # 1 millisecond\n              x-maximum: 8.64e13 # 1 day - dsh shrug\n              x-validate_case_insensitive: true\n\n    ConfigPeer_gossip:\n      type: object\n      x-validate_illegal_keys:\n        - bootstrap\n        - endpoint\n        - externalEndpoint\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      properties:\n        useLeaderElection:\n          type: boolean\n          description: Decides whether a peer will use a dynamic algorithm for \"leader\" selection (instead of a static leader). The leader is the peer that establishes a connection with the ordering service (OS). The leader pulls ledger blocks from the OS. It is recommended to use leader election for large networks of peers.\n          example: true\n          x-validate_case_insensitive: true\n        orgLeader:\n          type: boolean\n          description: Decides whether this peer should be an organization \"leader\". It maintains a connection with the ordering service and disseminate blocks to peers in its own organization.\n          example: false\n          x-validate_case_insensitive: true\n        membershipTrackerInterval:\n          type: string\n          description: The frequency to poll on membershipTracker.\n          example: 5s\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 3.6e12 # 1 hour - dsh shrug\n          x-validate_case_insensitive: true\n        maxBlockCountToStore:\n          type: number\n          description: Maximum number of blocks that can be stored in memory.\n          example: 100\n          minimum: 1\n          maximum: 10000 # dsh made up limitation\n          x-validate_case_insensitive: true\n        maxPropagationBurstLatency:\n          type: string\n          description: Maximum time between consecutive message pushes.\n          example: 10ms\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 3.6e12 # 1 hour - dsh shrug\n          x-validate_case_insensitive: true\n        maxPropagationBurstSize:\n          type: number\n          description: Maximum number of messages that are stored until a push to remote peers is triggered.\n          minimum: 1\n          maximum: 1000 # dsh made up limitation\n          example: 10\n          x-validate_case_insensitive: true\n        propagateIterations:\n          type: number\n          description: Number of times a message is pushed to remote peers.\n          minimum: 1\n          maximum: 100 # dsh made up limitation\n          example: 3\n          x-validate_case_insensitive: true\n        pullInterval:\n          type: string\n          description: Determines the frequency of pull phases.\n          example: 4s\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 3.6e12 # 1 hour - dsh shrug\n          x-validate_case_insensitive: true\n        pullPeerNum:\n          type: number\n          description: Number of peers to pull from.\n          example: 3\n          minimum: 0\n          maximum: 1000 # dsh made up limitation\n          x-validate_case_insensitive: true\n        requestStateInfoInterval:\n          type: string\n          description: Determines the frequency of pulling stateInfo messages from peers.\n          example: 4s\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 3.6e12 # 1 hour - dsh shrug\n          x-validate_case_insensitive: true\n        publishStateInfoInterval:\n          type: string\n          description: Determines the frequency of pushing stateInfo messages to peers.\n          example: 4s\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 8.64e13 # 1 day - dsh shrug\n          x-validate_case_insensitive: true\n        stateInfoRetentionInterval:\n          type: string\n          description: Maximum time a stateInfo message is kept.\n          example: 0s # there are no examples of this field, made up 0s\n          x-validate_duration: true\n          x-validate_case_insensitive: true\n        publishCertPeriod:\n          type: string\n          description: Time after startup to start including certificates in Alive messages.\n          example: 10s\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 8.64e13 # 1 day - dsh shrug\n          x-validate_case_insensitive: true\n        skipBlockVerification:\n          type: boolean\n          description: Decides whether the peer should skip the verification of block messages.\n          example: false\n          x-validate_case_insensitive: true\n        dialTimeout:\n          type: string\n          description: The timeout for dialing a network request.\n          example: 3s\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 3.6e12 # 1 hour - dsh shrug\n          x-validate_case_insensitive: true\n        connTimeout:\n          $ref: '#/components/schemas/connTimeout'\n        recvBuffSize:\n          type: number\n          description: Number of received messages to hold in buffer.\n          minimum: 1\n          maximum: 1000\n          example: 20\n          x-validate_case_insensitive: true\n        sendBuffSize:\n          type: number\n          description: Number of sent messages to hold in buffer.\n          minimum: 1\n          maximum: 10000\n          example: 200\n          x-validate_case_insensitive: true\n        digestWaitTime:\n          type: string\n          description: Time to wait before the pull-engine processes incoming digests. Should be slightly smaller than requestWaitTime.\n          example: 1s\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 3.6e12 # 1 hour - dsh shrug\n          x-validate_case_insensitive: true\n        requestWaitTime:\n          type: string\n          description: Time to wait before pull-engine removes the incoming nonce. Should be slightly bigger than digestWaitTime.\n          example: 1500ms\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 3.6e12 # 1 hour - dsh shrug\n          x-validate_case_insensitive: true\n        responseWaitTime:\n          type: string\n          description: Time to wait before the pull-engine ends.\n          example: 2s\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 3.6e12 # 1 hour - dsh shrug\n          x-validate_case_insensitive: true\n        aliveTimeInterval:\n          type: string\n          description: Alive check frequency.\n          example: 5s\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 3.6e12 # 1 hour - dsh shrug\n          x-validate_case_insensitive: true\n        aliveExpirationTimeout:\n          type: string\n          description: Alive expiration timeout.\n          example: 25s\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 8.64e13 # 1 day - dsh shrug\n          x-validate_case_insensitive: true\n        reconnectInterval:\n          type: string\n          description: Reconnect frequency.\n          example: 25s\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 8.64e13 # 1 day - dsh shrug\n          x-validate_case_insensitive: true\n        election:\n          type: object\n          description: Leader election service configuration.\n          x-validate_no_extra_keys: true\n          x-validate_case_insensitive: true\n          properties:\n            startupGracePeriod:\n              type: string\n              description: Longest time the peer will wait for stable membership during leader election startup.\n              example: 15s\n              x-validate_duration: true\n              x-minimum: 1e6 # 1 millisecond\n              x-maximum: 8.64e13 # 1 day - dsh shrug\n              x-validate_case_insensitive: true\n            membershipSampleInterval:\n              type: string\n              description: Frequency that gossip membership samples to check its stability.\n              example: 1s\n              x-validate_duration: true\n              x-minimum: 1e6 # 1 millisecond\n              x-maximum: 3.6e12 # 1 hour - dsh shrug\n              x-validate_case_insensitive: true\n            leaderAliveThreshold:\n              type: string\n              description: Amount of time after the last declaration message for the peer to perform another leader election.\n              example: 10s\n              x-validate_duration: true\n              x-minimum: 1e6 # 1 millisecond\n              x-maximum: 8.64e13 # 1 day - dsh shrug\n              x-validate_case_insensitive: true\n            leaderElectionDuration:\n              type: string\n              description: Amount of time between the peer sending a propose message and it declaring itself as a leader.\n              example: 5s\n              x-validate_duration: true\n              x-minimum: 1e6 # 1 millisecond\n              x-maximum: 3.6e12 # 1 hour - dsh shrug\n              x-validate_case_insensitive: true\n        pvtData:\n          type: object\n          x-validate_no_extra_keys: true\n          x-validate_case_insensitive: true\n          properties:\n            pullRetryThreshold:\n              type: string\n              description: Determines the maximum time to attempt to pull private data for a block before that block is committed without the private data.\n              example: 60s\n              x-validate_duration: true\n              x-minimum: 1e6 # 1 millisecond\n              x-maximum: 8.64e13 # 1 day - dsh shrug\n              x-validate_case_insensitive: true\n            transientstoreMaxBlockRetention:\n              type: number\n              description: As private data enters the transient store, it is associated with the peer's current ledger's height. This field defines the maximum difference between the current ledger's height on commit, and the private data residing inside the transient store. Private data outside this range is not guaranteed to exist and will be purged periodically.\n              example: 1000\n              minimum: 1\n              maximum: 1000000 # dsh made up limitation\n              x-validate_case_insensitive: true\n            pushAckTimeout:\n              type: string\n              description: Maximum time to wait for an acknowledgment from each peer's private data push.\n              example: 3s\n              x-validate_duration: true\n              x-minimum: 1e6 # 1 millisecond\n              x-maximum: 3.6e12 # 1 hour - dsh shrug\n              x-validate_case_insensitive: true\n            btlPullMargin:\n              type: number\n              description: Block to live pulling margin. Used as a buffer to prevent peers from trying to pull private data from others peers that are soon to be purged. \"Soon\" defined as blocks that will be purged in the next N blocks. This helps a newly joined peer catch up quicker.\n              example: 10\n              minimum: 0\n              maximum: 1000 # dsh made up limitation\n              x-validate_case_insensitive: true\n            reconcileBatchSize:\n              type: number\n              description: Determines the maximum batch size of missing private data that will be reconciled in a single iteration. The process of reconciliation is done in an endless loop. The \"reconciler\" in each iteration tries to pull from the other peers with the most recent missing blocks and this maximum batch size limitation.\n              example: 10\n              minimum: 0\n              maximum: 1000 # dsh made up limitation\n              x-validate_case_insensitive: true\n            reconcileSleepInterval:\n              type: string\n              description: Determines the time \"reconciler\" sleeps from the end of an iteration until the beginning of the next iteration.\n              example: 1m\n              x-validate_duration: true\n              x-minimum: 1e6 # 1 millisecond\n              x-maximum: 8.64e13 # 1 day - dsh shrug\n              x-validate_case_insensitive: true\n            reconciliationEnabled:\n              type: boolean\n              description: Determines whether private data reconciliation is enabled or not.\n              example: true\n              x-validate_case_insensitive: true\n            skipPullingInvalidTransactionsDuringCommit:\n              type: boolean\n              description: Controls whether pulling invalid transaction's private data from other peers need to be skipped during the commit time. If `true` it will be pulled through \"reconciler\".\n              example: false\n              x-validate_case_insensitive: true\n            implicitCollectionDisseminationPolicy: # fabric v2 only\n              type: object\n              x-validate_no_extra_keys: true\n              x-validate_case_insensitive: true\n              properties:\n                requiredPeerCount:\n                  type: number\n                  description: Defines the minimum number of peers to successfully disseminate private data during endorsement.\n                  example: 0\n                  minimum: 0\n                  maximum: 1000 # dsh made up limitation\n                  x-validate_case_insensitive: true\n                maxPeerCount:\n                  type: number\n                  description: Defines the maximum number of peers to attempt to disseminate private data during endorsement.\n                  example: 1\n                  minimum: 1\n                  maximum: 1000 # dsh made up limitation\n                  x-validate_case_insensitive: true\n        state:\n          type: object\n          description: Gossip state transfer related configuration.\n          x-validate_no_extra_keys: true\n          x-validate_case_insensitive: true\n          properties:\n            enabled:\n              type: boolean\n              description: Controls if the state transfer is enabled or not. If state transfer is active, it syncs up missing blocks and allows lagging peers to catch up with the rest of the network.\n              example: true\n              x-validate_case_insensitive: true\n            checkInterval:\n              type: string\n              description: The frequency to check whether a peer is lagging behind enough to request blocks by using state transfer from another peer.\n              example: 10s\n              x-validate_duration: true\n              x-minimum: 1e6 # 1 millisecond\n              x-maximum: 8.64e13 # 1 day - dsh shrug\n              x-validate_case_insensitive: true\n            responseTimeout:\n              type: string\n              description: Amount of time to wait for state transfer responses from other peers.\n              example: 3s\n              x-validate_duration: true\n              x-minimum: 1e6 # 1 millisecond\n              x-maximum: 3.6e12 # 1 hour - dsh shrug\n              x-validate_case_insensitive: true\n            batchSize:\n              type: number\n              description: Number of blocks to request by using state transfer from another peer.\n              example: 10\n              minimum: 1\n              maximum: 1000 # dsh made up limitation\n              x-validate_case_insensitive: true\n            blockBufferSize:\n              type: number\n              description: Maximum difference between the lowest and highest block sequence number. In order to ensure that there are no holes the actual buffer size is twice this distance.\n              example: 100\n              minimum: 1\n              maximum: 100000 # dsh made up limitation\n              x-validate_case_insensitive: true\n            maxRetries:\n              type: number\n              description: Maximum number of retries of a single state transfer request.\n              example: 3\n              minimum: 1\n              maximum: 1000 # dsh made up limitation\n              x-validate_case_insensitive: true\n\n    ConfigPeer_authentication:\n      type: object\n      x-validate_case_insensitive: true\n      required:\n        - timewindow\n      properties:\n        timewindow:\n          $ref: '#/components/schemas/TimeWindow'\n\n    ConfigPeer_client:\n      type: object\n      x-validate_case_insensitive: true\n      required:\n        - connTimeout\n      properties:\n        connTimeout:\n          $ref: '#/components/schemas/connTimeout'\n\n    ConfigPeer_deliveryclient:\n      type: object\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      properties:\n        reconnectTotalTimeThreshold:\n          type: string\n          description: Total time to spend retrying connections to ordering nodes before giving up and returning an error.\n          example: 60m\n          x-validate_duration: true\n          x-minimum: 1e9 # 1 second\n          x-maximum: 2.628e15 # 1 month - dsh shrug\n          x-validate_case_insensitive: true\n        connTimeout:\n          $ref: '#/components/schemas/connTimeout'\n        reConnectBackoffThreshold:\n          type: string\n          description: Maximum delay between consecutive connection retry attempts to ordering nodes.\n          example: 60m\n          x-validate_duration: true\n          x-minimum: 1e9 # 1 second\n          x-maximum: 2.628e15 # 1 month - dsh shrug\n          x-validate_case_insensitive: true\n        addressOverrides:\n          type: array\n          description: A list of orderer endpoint addresses in channel configurations that should be overridden. Typically used when the original orderer addresses no longer exist.\n          x-validate_case_insensitive: true\n          x-validate_overwrite_key: addressOverrides\n          items:\n            type: object\n            x-validate_no_extra_keys: true\n            x-validate_case_insensitive: true\n            properties:\n              from:\n                type: string\n                description: The address in the channel configuration that will be overridden.\n                example: n3a3ec3-myorderer.ibp.us-south.containers.appdomain.cloud:7050\n                x-validate_regex_must_pass: only_host_and_port\n                x-validate_regex_error_msg: regex_fail_host_and_port\n                x-validate_case_insensitive: true\n              to:\n                type: string\n                description: The address to use.\n                example: n3a3ec3-myorderer2.ibp.us-south.containers.appdomain.cloud:7050\n                x-validate_regex_must_pass: only_host_and_port\n                x-validate_regex_error_msg: regex_fail_host_and_port\n                x-validate_case_insensitive: true\n              caCertsFile:\n                type: string\n                description: The path to the CA's cert file.\n                example: my-data/cert.pem\n                minLength: 1\n                x-validate_case_insensitive: true\n\n    ConfigPeer_adminService:\n      type: object\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      required:\n        - listenAddress\n      description: Used for administrative operations such as control over logger levels. Only peer administrators can use the service.\n      properties:\n        listenAddress:\n          type: string\n          description: The interface and port on which the admin server will listen on. Defaults to the same address as the peer's listen address and port 7051.\n          example: 0.0.0.0:7051\n          minLength: 1\n          x-validate_case_insensitive: true\n\n    ConfigPeer_validatorPoolSize:\n      type: number\n      description: Number of go-routines that will execute transaction validation in parallel. By default, the peer chooses the number of CPUs on the machine. It is recommended to use the default values and not set this field.\n      example: 8\n      minimum: 1\n      maximum: 100 # dsh made up limitation\n      x-validate_case_insensitive: true\n\n    ConfigPeer_discovery:\n      type: object\n      description: The discovery service is used by clients to query information about peers. Such as - which peers have joined a channel, what is the latest channel config, and what possible sets of peers satisfy the endorsement policy (given a smart contract and a channel).\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      properties:\n        enabled:\n          type: boolean\n          description: Determines whether the discover service is available or not.\n          example: true\n          x-validate_case_insensitive: true\n        authCacheEnabled:\n          type: boolean\n          description: Determines whether the authentication cache is enabled or not.\n          example: true\n          x-validate_case_insensitive: true\n        authCacheMaxSize:\n          type: number\n          description: Maximum size of the cache. If exceeded a purge takes place.\n          minimum: 1\n          maximum: 100000 # spam prevention limit\n          example: 1000\n          x-validate_case_insensitive: true\n        authCachePurgeRetentionRatio:\n          type: number\n          description: The proportion (0 - 1) of entries that remain in the cache after the cache is purged due to overpopulation.\n          minimum: 0\n          maximum: 1\n          example: 0.75\n          x-validate_case_insensitive: true\n        orgMembersAllowedAccess:\n          type: boolean\n          description: Whether to allow non-admins to perform non-channel scoped queries. When `false`, it means that only peer admins can perform non-channel scoped queries.\n          example: false\n          x-validate_case_insensitive: true\n\n    ConfigPeer_limits: # fabric v2 only\n      type: object\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      properties:\n        concurrency:\n          type: object\n          x-validate_no_extra_keys: true\n          x-validate_case_insensitive: true\n          properties:\n            endorserService:\n              type: object\n              description: Limits the number of concurrent requests to the endorser service. The endorser service handles application and system chaincode deployment and invocations (including queries).\n              example: 2500\n              minimum: 1\n              maximum: 1000000 # spam prevention limit\n              x-validate_case_insensitive: true\n            deliverService:\n              type: object\n              description: Limits the number of concurrent requests to the deliver service. The deliver service handles block and transaction events.\n              example: 2500\n              minimum: 1\n              maximum: 1000000 # spam prevention limit\n              x-validate_case_insensitive: true\n\n    ConfigPeer_handlers:\n      type: object\n      x-validate_no_extra_keys: true\n      description: Defines custom handlers that can filter and mutate objects passing within the peer.\n      properties:\n        authFilters:\n          type: array\n          description: Handlers that will reject or forward proposals from clients.\n          items:\n            type: object\n            x-validate_no_extra_keys: true\n            properties:\n              name:\n                type: string\n                description: Name of the handler\n                example: DefaultAuth\n\n    ConfigPeer_chaincode:\n      type: object\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      x-validate_illegal_keys:\n        - id\n        - builder\n        - pull\n        - car\n        - java\n        - node\n      properties:\n        golang:\n          type: object\n          x-validate_no_extra_keys: true\n          x-validate_case_insensitive: true\n          x-validate_illegal_keys:\n            - runtime\n          properties:\n            dynamicLink:\n              type: boolean\n              description: Controls if golang chaincode should be built with dynamic linking or static linking. Defaults `false` (static).\n              example: false\n              x-validate_case_insensitive: true\n        externalBuilders: # fabric v2 only\n          type: array\n          description: List of directories to treat as external builders/launches of chaincode.\n          x-validate_case_insensitive: true\n          items:\n            type: object\n            properties:\n              path:\n                type: string\n                description: The path to a build directory.\n                example: /path/to/directory\n                x-validate_case_insensitive: true\n              name:\n                type: string\n                description: The name of this builder.\n                example: descriptive-build-name\n                x-validate_case_insensitive: true\n              environmentWhitelist:\n                type: array\n                x-validate_case_insensitive: true\n                items:\n                  type: string\n                  description: An entry in the environment's white list.\n                  example: GOPROXY\n                  x-validate_case_insensitive: true\n        installTimeout: # fabric v2 only\n          type: string\n          description: Maximum duration to wait for the chaincode build and install process to complete.\n          example: 300s\n          x-validate_duration: true\n          x-minimum: 1e9 # 1 second\n          x-maximum: 2.628e15 # 1 month - dsh shrug\n          x-validate_case_insensitive: true\n        startuptimeout:\n          type: string\n          description: Time for starting up a container and waiting for Register to come through.\n          example: 300s\n          x-validate_duration: true\n          x-minimum: 1e9 # 1 second\n          x-maximum: 2.628e15 # 1 month - dsh shrug\n          x-validate_case_insensitive: true\n        executetimeout:\n          type: string\n          description: Time for Invoke and Init calls to return. This timeout is used by all chaincodes in all the channels, including system chaincodes. Note that if the image is not available the peer needs to build the image, which will take additional time.\n          example: 30s\n          x-validate_duration: true\n          x-minimum: 1e6 # 1 millisecond\n          x-maximum: 8.64e13 # 1 day - dsh shrug\n          x-validate_case_insensitive: true\n        system:\n          type: object\n          description: The complete whitelist for system chaincodes. To append a new chaincode add the new id to the default list.\n          x-validate_case_insensitive: true\n          properties:\n            cscc:\n              type: boolean\n              description: Adds the system chaincode `cscc` to the whitelist.\n              example: true\n              x-validate_case_insensitive: true\n              x-validate_overwrite_key: cscc\n            lscc:\n              type: boolean\n              description: Adds the system chaincode `lscc` to the whitelist.\n              example: true\n              x-validate_case_insensitive: true\n              x-validate_overwrite_key: lscc\n            escc:\n              type: boolean\n              description: Adds the system chaincode `escc` to the whitelist.\n              example: true\n              x-validate_case_insensitive: true\n              x-validate_overwrite_key: escc\n            vscc:\n              type: boolean\n              description: Adds the system chaincode `vscc` to the whitelist.\n              example: true\n              x-validate_case_insensitive: true\n              x-validate_overwrite_key: vscc\n            qscc:\n              type: boolean\n              description: Adds the system chaincode `qscc` to the whitelist.\n              example: true\n              x-validate_case_insensitive: true\n              x-validate_overwrite_key: qscc\n        # temp removed (not yet supported by deployer) - 05/28/2020\n        #systemPlugins:\n        #  type: array\n        #  description: Array of system chaincodes that can be loaded as GoLang plugins. [Fabric's plugins doc](https://hyperledger-fabric.readthedocs.io/en/release-1.4/systemchaincode.html).\n        #  items:\n        #    type: object\n        #    x-validate_no_extra_keys: true\n        #    properties:\n        #      enabled:\n        #        type: boolean\n        #        description: Enabled or disable the plugin.\n        #        example: true\n        #      name:\n        #        type: string\n        #        description: Name of the chaincode.\n        #        example: myscc\n        #      path:\n        #        type: string\n        #        description: File location of the chaincode.\n        #        example: /opt/lib/myscc.so\n        #      invokableExternal:\n        #        type: boolean\n        #        description: Controls if the chaincode can be invoked externally.\n        #        example: true\n        #      invokableCC2CC:\n        #        type: boolean\n        #        description: Controls if the chaincode ca be invoked from another chaincode.\n        #        example: true\n        logging:\n          type: object\n          x-validate_case_insensitive: true\n          properties:\n            level:\n              type: string\n              description: Default logging level for loggers within chaincode containers.\n              example: info\n              x-validate_case_insensitive: true\n              enum:\n                - fatal\n                - panic\n                - error\n                - warning\n                - info\n                - debug\n            shim:\n              type: string\n              description: Override default level for the 'shim' logger.\n              example: warning\n              x-validate_case_insensitive: true\n              enum:\n                - fatal\n                - panic\n                - error\n                - warning\n                - info\n                - debug\n            format:\n              type: string\n              description: Override the default log format for chaincode container logs.\n              example: '%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -\u003e %{level:.4s} %{id:03x}%{color:reset} %{message}'\n              minLength: 1\n              maxLength: 1024 # spam prevention limit\n              x-validate_case_insensitive: true\n\n    CreateOrdererRaftBody:\n      type: object\n      description: Body schema for creating an ordering service w/raft\n      required:\n        - config\n        - msp_id\n        - display_name\n        - orderer_type\n      # x-validate_no_extra_keys: true - commenting this out b/c we want to allow apollo only fields like system_channel_data\n      properties:\n        orderer_type:\n          $ref: '#/components/schemas/orderer_type'\n        msp_id:\n          $ref: '#/components/schemas/msp_id'\n        cluster_name:\n          type: string\n          description: |\n            A descriptive name for an ordering service. The parent IBP console tile displays this name.\n\n            This field should only be set if you are creating a new OS cluster or when appending to an unknown (external) OS cluster. An unknown/external cluster is one that this IBP console has not imported or created.\n          example: ordering service 1\n        id:\n          $ref: '#/components/schemas/component_id'\n        display_name:\n          $ref: '#/components/schemas/display_name_orderer'\n        cluster_id:\n          type: string\n          description: |\n            This field should only be set if you are appending a new raft node to an **existing** raft cluster. When appending to a known (internal) OS cluster set `cluster_id` to the same value used by the OS cluster. When appending to an unknown (external) OS cluster set `cluster_id` to a unique string.\n\n            Setting this field means the `config` array should be of length 1, since it is not possible to add multiple raft nodes at the same time in Fabric.\n\n            If this field is set the orderer will be \"pre-created\" and start without a genesis block. It is effectively dead until it is configured. This is the first step to **append** a node to a raft cluster. The next step is to add this node as a consenter to the system-channel by using Fabric-APIs. Then, init this node by sending the updated system-channel config-block with the [Submit config block to orderer](#submit-config-block-to-orderer) API. The node will not be usable until these steps are completed.\n          example: abcde\n        external_append:\n          type: string\n          description: Set to `true` only if you are appending to an unknown (external) OS cluster. Else set it to `false` or omit the field. An unknown/external cluster is one that this IBP console has not imported or created.\n          example: false\n        config:\n          type: array\n          minLength: 1\n          maxLength: 100 # dsh spam prevention limit\n          description: |\n            An array of config objects. When creating a new OS (Ordering Service) the array must have one object per desired raft node. 1 or 5 nodes are recommended.\n\n            **When appending to an existing OS only an array of size 1 is supported.**\n\n            See this [topic](/docs/blockchain?topic=blockchain-ibp-v2-apis#ibp-v2-apis-config) for instructions on how to build a config object.\n          items:\n            $ref: '#/components/schemas/ConfigObject'\n        config_override:\n          type: array\n          minLength: 0\n          maxLength: 100 # dsh spam prevention limit\n          description: An array of configuration override objects. 1 object per component. Must be the same size as the `config` array.\n          x-validate_matching_lengths: config\n          items:\n            $ref: '#/components/schemas/ConfigOrdererCreate'\n        resources:\n          type: object\n          description: CPU and memory properties. This feature is not available if using a free Kubernetes cluster.\n          x-validate_no_extra_keys: true\n          x-validate_paid_plan_feature: true\n          required:\n            - orderer\n          properties:\n            orderer:\n              $ref: '#/components/schemas/ResourceObject'\n            proxy:\n              $ref: '#/components/schemas/ResourceObject'\n        storage:\n          type: object\n          description: Disk space properties. This feature is not available if using a free Kubernetes cluster.\n          x-validate_no_extra_keys: true\n          x-validate_paid_plan_feature: true\n          required:\n            - orderer\n          properties:\n            orderer:\n              $ref: '#/components/schemas/StorageObject'\n        system_channel_id:\n          $ref: '#/components/schemas/system_channel_id'\n        zone:\n          type: array\n          minLength: 0\n          maxLength: 100 # dsh spam prevention limit\n          description: An array of Kubernetes zones for the deployment. 1 zone per component. Must be the same size as the `config` array.\n          x-validate_matching_lengths: config\n          items:\n            $ref: '#/components/schemas/k8s_zone'\n        tags:\n          $ref: '#/components/schemas/tags'\n        region:\n          type: array\n          minLength: 0\n          maxLength: 100 # dsh spam prevention limit\n          description: An array of Kubernetes regions for the deployment. One region per component. Must be the same size as the `config` array.\n          x-validate_matching_lengths: config\n          items:\n            $ref: '#/components/schemas/k8s_region'\n        hsm:\n          $ref: '#/components/schemas/hsm'\n        version:\n          $ref: '#/components/schemas/version_desired'\n\n    CreatePeerBody:\n      type: object\n      description: Body schema for creating a peer\n      required:\n        - config\n        - msp_id\n        - display_name\n      x-validate_no_extra_keys: true\n      properties:\n        msp_id:\n          $ref: '#/components/schemas/msp_id'\n        id:\n          $ref: '#/components/schemas/component_id'\n        display_name:\n          $ref: '#/components/schemas/display_name_peer'\n        config:\n          type: object\n          description: See this [topic](/docs/blockchain?topic=blockchain-ibp-v2-apis#ibp-v2-apis-config) for instructions on how to build a config object.\n          $ref: '#/components/schemas/ConfigObject'\n        config_override:\n          $ref: '#/components/schemas/ConfigPeerCreate'\n        resources:\n          $ref: '#/components/schemas/PeerResources'\n        storage:\n          type: object\n          description: Disk space properties. This feature is not available if using a free Kubernetes cluster.\n          required:\n            - peer\n          x-validate_paid_plan_feature: true\n          properties:\n            peer:\n              $ref: '#/components/schemas/StorageObject'\n            statedb: # storage uses \"statedb\" key, unlike resources (\"couchdb\")\n              $ref: '#/components/schemas/StorageObject'\n        zone:\n          $ref: '#/components/schemas/k8s_zone'\n        state_db:\n          $ref: '#/components/schemas/state_db'\n        tags:\n          $ref: '#/components/schemas/tags'\n        hsm:\n          $ref: '#/components/schemas/hsm'\n        region:\n          $ref: '#/components/schemas/k8s_region'\n        version:\n          $ref: '#/components/schemas/version_desired'\n\n    EditCaDataBody:\n      description: Body schema to edit local data on a CA\n      type: object\n      x-validate_illegal_keys:\n        - resources\n        - storage\n        - zone\n        - config_override\n        - replicas\n        - version\n        - _id\n        - id\n        - _rev\n        - type\n        - cluster_id\n        - timestamp\n        - edited_timestamp\n      x-validate_no_extra_keys: true\n      properties:\n        display_name:\n          $ref: '#/components/schemas/display_name_ca'\n        api_url:\n          $ref: '#/components/schemas/api_url_ca'\n        operations_url:\n          $ref: '#/components/schemas/operations_url_ca'\n        ca_name:\n          $ref: '#/components/schemas/ca_name'\n        location:\n          $ref: '#/components/schemas/location_saas'\n        tags:\n          $ref: '#/components/schemas/tags'\n\n    EditOrdererDataBody:\n      description: Body schema to edit local data on an orderer node\n      type: object\n      x-validate_no_extra_keys: true\n      properties:\n        cluster_name:\n          $ref: '#/components/schemas/cluster_name_orderer'\n        display_name:\n          $ref: '#/components/schemas/display_name_orderer'\n        api_url:\n          $ref: '#/components/schemas/api_url_orderer'\n        operations_url:\n          $ref: '#/components/schemas/operations_url_orderer'\n        grpcwp_url:\n          $ref: '#/components/schemas/grpcwp_url_orderer'\n        msp_id:\n          $ref: '#/components/schemas/msp_id'\n        consenter_proposal_fin:\n          $ref: '#/components/schemas/consenter_proposal_fin'\n        location:\n          $ref: '#/components/schemas/location_saas'\n        system_channel_id:\n          $ref: '#/components/schemas/system_channel_id'\n        tags:\n          $ref: '#/components/schemas/tags'\n        tls_cert:\n          $ref: '#/components/schemas/tls_cert_orderer'\n        tls_ca_root_cert:\n          $ref: '#/components/schemas/tls_ca_root_cert'\n        server_tls_cert:\n          $ref: '#/components/schemas/server_tls_cert'\n        client_tls_cert:\n          $ref: '#/components/schemas/client_tls_cert'\n\n    EditPeerBody:\n      description: Body schema to edit local data on a peer\n      type: object\n      x-validate_no_extra_keys: true\n      properties:\n        display_name:\n          $ref: '#/components/schemas/display_name_peer'\n        api_url:\n          $ref: '#/components/schemas/api_url_peer'\n        operations_url:\n          $ref: '#/components/schemas/operations_url_peer'\n        grpcwp_url:\n          $ref: '#/components/schemas/grpcwp_url_peer'\n        msp_id:\n          $ref: '#/components/schemas/msp_id'\n        location:\n          $ref: '#/components/schemas/location_saas'\n        tags:\n          $ref: '#/components/schemas/tags'\n\n    EditMspBody:\n      description: Body schema to edit local data on an MSP\n      type: object\n      properties:\n        msp_id:\n          $ref: '#/components/schemas/msp_id'\n        display_name:\n          $ref: '#/components/schemas/display_name_msp'\n        root_certs:\n          $ref: '#/components/schemas/MSPRootCerts'\n        intermediate_certs:\n          $ref: '#/components/schemas/IntermediateCerts'\n        admins:\n          $ref: '#/components/schemas/AdminCerts'\n        tls_root_certs:\n          $ref: '#/components/schemas/TlsRootCerts'\n        # removed 02/25/2020 - fields have no effect in the UI, even though they are valid MSP fields its confusing to list them in the api\n        #revocation_list:\n        #  $ref: '#/components/schemas/RevocationCerts'\n        #organizational_unit_identifiers:\n        #  $ref: '#/components/schemas/OrganizationalUnitIdentifiers'\n        #fabric_node_ous:\n        #  $ref: '#/components/schemas/FabricNodeOus'\n\n    EditSettingsBody:\n      description: Body schema to edit IBP console settings. Each setting field is optional.\n      type: object\n      x-validate_no_extra_keys: true\n      properties:\n        inactivity_timeouts:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n              description: Indicates if the auto log out logic is enabled or disabled. Defaults `false`. _Refresh browser after changes_\n              example: false\n            max_idle_time:\n              type: number\n              description: Maximum time in milliseconds for a browser client to be idle. Once exceeded the user is logged out. Defaults to `90000` ms (1.5 minutes). _Refresh browser after changes_\n              minimum: 60000  # 1 minute - a \"large\" minimum delay prevents immediate logout (which would be a lockout of sorts)\n              maximum: 28800000 # 8 hours\n              example: 90000\n        file_logging:\n          $ref: '#/components/schemas/EditLogSettingsBody'\n        max_req_per_min:\n          type: number\n          description: The base limit for the maximum number of `/api/*` API requests (aka UI requests) in 1 minute. Defaults `25`. [Rate Limits](#rate-limits). _Changes to this field will restart the IBP console server(s)_\n          minimum: 1\n          maximum: 1000\n          example: 25\n        max_req_per_min_ak:\n          type: number\n          description: The base limit for the maximum number of `/ak/api/*` API requests (aka external api key requests) in 1 minute. Defaults `25`. [Rate Limits](#rate-limits). _Changes to this field will restart the IBP console server(s)_\n          minimum: 1\n          maximum: 1000\n          example: 25\n        fabric_get_block_timeout_ms:\n          type: number\n          description: Maximum time in milliseconds to wait for a get-block transaction. Defaults to `10000` ms (10 seconds). _Refresh browser after changes_\n          minimum: 1000  # 1 second - a \"large\" minimum delay prevents immediate timeout\n          maximum: 36000000 # 10 hours - dsh shrug\n          example: 10000\n        fabric_instantiate_timeout_ms:\n          type: number\n          description: Maximum time in milliseconds to wait for a instantiate chaincode transaction. Defaults to `300000` ms (5 minutes). _Refresh browser after changes_\n          minimum: 1000  # 1 second - a \"large\" minimum delay prevents immediate timeout\n          maximum: 36000000 # 10 hours - dsh shrug\n          example: 300000\n        fabric_join_channel_timeout_ms:\n          type: number\n          description: Maximum time in milliseconds to wait for a join-channel transaction. Defaults to `25000` ms (25 seconds). _Refresh browser after changes_\n          minimum: 1000  # 1 second - a \"large\" minimum delay prevents immediate timeout\n          maximum: 36000000 # 10 hours - dsh shrug\n          example: 25000\n        fabric_install_cc_timeout_ms:\n          type: number\n          description: Maximum time in milliseconds to wait for a install chaincode transaction (Fabric v1.x). Defaults to `300000` ms (5 minutes). _Refresh browser after changes_\n          minimum: 1000  # 1 second - a \"large\" minimum delay prevents immediate timeout\n          maximum: 36000000 # 10 hours - dsh shrug\n          example: 300000\n        fabric_lc_install_cc_timeout_ms:\n          type: number\n          description: Maximum time in milliseconds to wait for a install chaincode transaction (Fabric v2.x). Defaults to `300000` ms (5 minutes). _Refresh browser after changes_\n          minimum: 1000  # 1 second - a \"large\" minimum delay prevents immediate timeout\n          maximum: 36000000 # 10 hours - dsh shrug\n          example: 300000\n        fabric_lc_get_cc_timeout_ms:\n          type: number\n          description: Maximum time in milliseconds to wait for a get-chaincode transaction (Fabric v2.x). Defaults to `180000` ms (3 minutes). _Refresh browser after changes_\n          minimum: 1000  # 1 second - a \"large\" minimum delay prevents immediate timeout\n          maximum: 36000000 # 10 hours - dsh shrug\n          example: 180000\n        fabric_general_timeout_ms:\n          type: number\n          description: Default maximum time in milliseconds to wait for a Fabric transaction. Defaults to `10000` ms (10 seconds). _Refresh browser after changes_\n          minimum: 1000  # 1 second - a \"large\" minimum delay prevents immediate timeout\n          maximum: 36000000 # 10 hours - dsh shrug\n          example: 10000\n\n    UpdateCaBody:\n      description: Body schema for updating k8 attributes of a CA\n      type: object\n      x-validate_illegal_keys:\n        - display_name\n        - api_url\n        - operations_url\n        - ca_name\n        - location\n        - tags\n        - _id\n        - id\n        - _rev\n        - type\n        - cluster_id\n        - timestamp\n        - edited_timestamp\n        - storage\n      x-validate_no_extra_keys: true\n      x-validate_only_one_key: all\n      properties:\n        resources:\n          type: object\n          description: CPU and memory properties. This feature is not available if using a free Kubernetes cluster.\n          x-validate_paid_plan_feature: true\n          required:\n            - ca\n          properties:\n            ca:\n              $ref: '#/components/schemas/ResourceObject'\n        zone:\n          $ref: '#/components/schemas/k8s_zone'\n        config_override:\n          type: object\n          description: |\n            Update the [Fabric CA configuration file](https://hyperledger-fabric-ca.readthedocs.io/en/release-1.4/serverconfig.html) if you want use custom attributes to configure advanced CA features. Omit if not.\n\n            *The nested field **names** below are not case-sensitive.*\n            *The nested fields sent will be merged with the existing settings.*\n          required:\n            - ca\n          properties:\n            ca:\n              $ref: '#/components/schemas/ConfigCAUpdate'\n        dry_run_mode:\n          $ref: '#/components/schemas/dry_run_mode'\n        replicas:\n          $ref: '#/components/schemas/replicas'\n        version:\n          $ref: '#/components/schemas/version_edit'\n\n    UpdateOrdererBody:\n      description: Body schema for updating k8 attributes of an orderer\n      type: object\n      x-validate_illegal_keys:\n        - display_name\n        - api_url\n        - operations_url\n        - ca_name\n        - location\n        - tags\n        - _id\n        - id\n        - _rev\n        - type\n        - cluster_id\n        - timestamp\n        - edited_timestamp\n        - storage\n      x-validate_no_extra_keys: true\n      x-validate_only_one_key: ak\n      properties:\n        config_override:\n          $ref: '#/components/schemas/ConfigOrdererUpdate'\n        dry_run_mode:\n          $ref: '#/components/schemas/dry_run_mode'\n        resources:\n          type: object\n          description: CPU and memory properties. This feature is not available if using a free Kubernetes cluster.\n          x-validate_no_extra_keys: true\n          x-validate_paid_plan_feature: true\n          properties:\n            orderer:\n              $ref: '#/components/schemas/ResourceObject'\n            proxy:\n              $ref: '#/components/schemas/ResourceObject'\n        zone:\n          $ref: '#/components/schemas/k8s_zone'\n        version:\n          $ref: '#/components/schemas/version_edit'\n\n    UpdatePeerBody:\n      description: Body schema for updating k8 attributes of a peer\n      type: object\n      x-validate_illegal_keys:\n        - display_name\n        - api_url\n        - operations_url\n        - ca_name\n        - location\n        - tags\n        - _id\n        - id\n        - _rev\n        - type\n        - cluster_id\n        - timestamp\n        - edited_timestamp\n        - storage\n      x-validate_no_extra_keys: true\n      x-validate_only_one_key: ak\n      properties:\n        config_override:\n          $ref: '#/components/schemas/ConfigPeerUpdate'\n        dry_run_mode:\n          $ref: '#/components/schemas/dry_run_mode'\n        resources:\n          $ref: '#/components/schemas/PeerResources'\n        zone:\n          $ref: '#/components/schemas/k8s_zone'\n        version:\n          $ref: '#/components/schemas/version_edit'\n\n    # ca property reference: https://github.com/hyperledger/fabric-ca/blob/master/docs/source/servercli.rst\n    # also https://github.com/hyperledger/fabric-ca/blob/master/cmd/fabric-ca-server/config.go\n    ConfigCAUpdate:\n      type: object\n      x-validate_illegal_keys:\n        - version\n        - port\n        - signing\n        - caount\n        - cafiles\n        - operations\n        - ldap # temp adding field as invalid, issue https://github.ibm.com/IBM-Blockchain/OpTools/issues/3548\n      x-validate_no_extra_keys: true\n      x-validate_case_insensitive: true\n      properties:\n        cors:\n          $ref: '#/components/schemas/ConfigCA_cors'\n        debug:\n          $ref: '#/components/schemas/ConfigCA_debug'\n        crlsizelimit:\n          $ref: '#/components/schemas/ConfigCA_crlsizelimit'\n        tls:\n          $ref: '#/components/schemas/ConfigCA_tls'\n        ca:\n          $ref: '#/components/schemas/ConfigCA_ca'\n        crl:\n          $ref: '#/components/schemas/ConfigCA_crl'\n        registry:\n          $ref: '#/components/schemas/ConfigCA_registry'\n        db:\n          $ref: '#/components/schemas/ConfigCA_db'\n        #ldap: # removing for now, issue https://github.ibm.com/IBM-Blockchain/OpTools/issues/3548\n        #  $ref: '#/components/schemas/ConfigCA_ldap'\n        affiliations:\n          $ref: '#/components/schemas/ConfigCA_affiliations'\n        csr:\n          $ref: '#/components/schemas/ConfigCA_csr'\n        idemix:\n          $ref: '#/components/schemas/ConfigCA_idemix'\n        BCCSP: # using upper case even though ca's doc say lower (peer \u0026 orderer's bccsp uses upper case, so this is more consistent)\n          $ref: '#/components/schemas/Bccsp'\n        intermediate:\n          $ref: '#/components/schemas/ConfigCA_intermediate'\n        cfg:\n          $ref: '#/components/schemas/ConfigCA_cfg'\n        metrics:\n          $ref: '#/components/schemas/Metrics'\n\n    GetMultiComponentsResponse:\n      description: Contains the details of multiple components the UI has onboarded.\n      type: object\n      properties:\n        components:\n          type: array\n          description: Array of components the UI has onboarded.\n          items:\n            $ref: '#/components/schemas/GenericComponentResponse'\n\n    GenericComponentResponse:\n      type: object\n      description: Contains the details of a component. Not all components have the same fields, see description of each field for details.\n      properties:\n        id:\n          type: string\n          description: The unique identifier of this component. [Available on all component types]\n          example: myca-2\n        type:\n          type: string\n          description: 'The type of this component [Available on all component types]'\n          enum:\n            - fabric-peer\n            - fabric-ca\n            - fabric-orderer\n          example: fabric-ca\n        display_name:\n          type: string\n          description: The displayed name of this component. [Available on all component types]\n          example: Example CA\n        grpcwp_url:\n          type: string\n          description: The URL for the grpc web proxy for this component. [Available on peer/orderer components]\n          example: https://n3a3ec3-mypeer-proxy.ibp.us-south.containers.appdomain.cloud:8084\n        api_url:\n          type: string\n          description: The gRPC URL for the component. Typically, client applications would send requests to this URL. [Available on ca/peer/orderer components]\n          example: grpcs://n3a3ec3-mypeer.ibp.us-south.containers.appdomain.cloud:7051\n        operations_url:\n          type: string\n          description: Used by Fabric health checker to monitor health status of the node. For more information, see [Fabric documentation](https://hyperledger-fabric.readthedocs.io/en/release-1.4/operations_service.html). [Available on ca/peer/orderer components]\n          example: https://n3a3ec3-mypeer.ibp.us-south.containers.appdomain.cloud:9443\n        msp_id:\n          type: string\n          example: Org1\n          description: The MSP id that is related to this component. [Available on all components]\n        location:\n          $ref: '#/components/schemas/location_saas'\n        ca_name:\n          type: string\n          description: The CA's \"CAName\" attribute. [Available on ca components]\n          example: ca\n        admin_certs:\n          type: array\n          description: The Fabric \"admin certificates\" for the component. [Available on peer/orderer components w/query parameter 'deployment_attrs']\n          items:\n            $ref: '#/components/schemas/admin_cert'\n        node_ou:\n          $ref: '#/components/schemas/node_ou_general'\n        ecert:\n          $ref: '#/components/schemas/ecert_obj_general'\n        state_db:\n          type: string\n          description: The type of ledger database for a peer. [Available on peer components w/query parameter 'deployment_attrs']\n          example: couchdb\n        timestamp:\n          type: number\n          description: UNIX timestamp of component creation, UTC, ms. [Available on all components]\n          example: 1537262855753\n        resources:\n          type: object\n          description: The **cached** Kubernetes resource attributes for this component. [Available on ca/peer/orderer components w/query parameter 'deployment_attrs']\n          properties:\n            ca:\n              $ref: '#/components/schemas/GenericResources'\n            peer:\n              $ref: '#/components/schemas/GenericResources'\n            orderer:\n              $ref: '#/components/schemas/GenericResources'\n            proxy:\n              $ref: '#/components/schemas/GenericResources'\n            statedb:\n              $ref: '#/components/schemas/GenericResources'\n        scheme_version:\n          $ref: '#/components/schemas/scheme_version'\n        storage:\n          type: object\n          description: The **cached** Kubernetes storage attributes for this component. [Available on ca/peer/orderer components w/query parameter 'deployment_attrs']\n          properties:\n            ca:\n              $ref: '#/components/schemas/StorageObject'\n            peer:\n              $ref: '#/components/schemas/StorageObject'\n            orderer:\n              $ref: '#/components/schemas/StorageObject'\n            statedb:\n              $ref: '#/components/schemas/StorageObject'\n        tags:\n          $ref: '#/components/schemas/tags'\n        tls_cert:\n          $ref: '#/components/schemas/tls_cert'\n        version:\n          type: string\n          description: The cached Hyperledger Fabric version for this component. [Available on ca/peer/orderer components w/query parameter 'deployment_attrs']\n        zone:\n          type: string\n          description: The Kubernetes zone of this component's deployment. [Available on ca/peer/orderer components w/query parameter 'deployment_attrs']\n\n    PeerResponse:\n      type: object\n      description: Contains the details of a peer.\n      properties:\n        id:\n          $ref: '#/components/schemas/component_id'\n        dep_component_id:\n          $ref: '#/components/schemas/dep_component_id'\n        type:\n          $ref: '#/components/schemas/type'\n        display_name:\n          $ref: '#/components/schemas/display_name_peer'\n        grpcwp_url:\n          $ref: '#/components/schemas/grpcwp_url_peer'\n        api_url:\n          $ref: '#/components/schemas/api_url_peer'\n        operations_url:\n          $ref: '#/components/schemas/operations_url_peer'\n        msp_id:\n          $ref: '#/components/schemas/msp_id'\n        config_override:\n          $ref: '#/components/schemas/config_override_response'\n        node_ou:\n          $ref: '#/components/schemas/node_ou'\n        ecert:\n          $ref: '#/components/schemas/ecert_obj'\n        location:\n          $ref: '#/components/schemas/location_saas'\n        state_db:\n          $ref: '#/components/schemas/state_db'\n        timestamp:\n          $ref: '#/components/schemas/timestamp_creation'\n        resources:\n          type: object\n          description: The **cached** Kubernetes resource attributes for this component. Not available if peer was imported.\n          properties:\n            peer:\n              $ref: '#/components/schemas/GenericResources'\n            proxy:\n              $ref: '#/components/schemas/GenericResources'\n            statedb:\n              $ref: '#/components/schemas/GenericResources'\n        scheme_version:\n          $ref: '#/components/schemas/scheme_version'\n        storage:\n          type: object\n          description: The **cached** Kubernetes storage attributes for this component. Not available if peer was imported.\n          properties:\n            peer:\n              $ref: '#/components/schemas/StorageObject'\n            statedb:\n              $ref: '#/components/schemas/StorageObject'\n        tags:\n          $ref: '#/components/schemas/tags'\n        tls_cert:\n          $ref: '#/components/schemas/tls_cert'\n        version:\n          $ref: '#/components/schemas/version'\n        zone:\n          $ref: '#/components/schemas/k8s_zone'\n\n    CaResponse:\n      type: object\n      description: Contains the details of a CA.\n      properties:\n        id:\n          $ref: '#/components/schemas/component_id'\n        dep_component_id:\n          $ref: '#/components/schemas/dep_component_id'\n        ca_name:\n          $ref: '#/components/schemas/ca_name'\n        display_name:\n          $ref: '#/components/schemas/display_name_ca'\n        api_url:\n          $ref: '#/components/schemas/api_url_peer'\n        operations_url:\n          $ref: '#/components/schemas/operations_url_ca'\n        config_override:\n          $ref: '#/components/schemas/config_override_response'\n        location:\n          $ref: '#/components/schemas/location_saas'\n        timestamp:\n          $ref: '#/components/schemas/timestamp_creation'\n        resources:\n          type: object\n          description: The **cached** Kubernetes resource attributes for this component. Not available if CA was imported.\n          properties:\n            ca:\n              $ref: '#/components/schemas/GenericResources'\n        scheme_version:\n          $ref: '#/components/schemas/scheme_version'\n        storage:\n          type: object\n          description: The **cached** Kubernetes storage attributes for this component. Not available if CA was imported.\n          properties:\n            ca:\n              $ref: '#/components/schemas/StorageObject'\n        tags:\n          $ref: '#/components/schemas/tags'\n        tls_cert:\n          $ref: '#/components/schemas/tls_cert'\n        version:\n          $ref: '#/components/schemas/version'\n        zone:\n          $ref: '#/components/schemas/k8s_zone'\n\n    OrdererResponse:\n      type: object\n      description: Contains the details of an ordering node.\n      properties:\n        id:\n          $ref: '#/components/schemas/component_id'\n        dep_component_id:\n          $ref: '#/components/schemas/dep_component_id'\n        type:\n          $ref: '#/components/schemas/type'\n        display_name:\n          $ref: '#/components/schemas/display_name_orderer'\n        grpcwp_url:\n          $ref: '#/components/schemas/grpcwp_url_orderer'\n        api_url:\n          $ref: '#/components/schemas/api_url_orderer'\n        operations_url:\n          $ref: '#/components/schemas/operations_url_orderer'\n        msp_id:\n          $ref: '#/components/schemas/msp_id'\n        config_override:\n          $ref: '#/components/schemas/config_override_response'\n        consenter_proposal_fin:\n          $ref: '#/components/schemas/consenter_proposal_fin'\n        node_ou:\n          $ref: '#/components/schemas/node_ou'\n        ecert:\n          $ref: '#/components/schemas/ecert_obj'\n        location:\n          $ref: '#/components/schemas/location_saas'\n        timestamp:\n          $ref: '#/components/schemas/timestamp_creation'\n        resources:\n          type: object\n          description: The **cached** Kubernetes resource attributes for this component. Not available if orderer was imported.\n          properties:\n            orderer:\n              $ref: '#/components/schemas/GenericResources'\n            proxy:\n              $ref: '#/components/schemas/GenericResources'\n        scheme_version:\n          $ref: '#/components/schemas/scheme_version'\n        storage:\n          type: object\n          description: The **cached** Kubernetes storage attributes for this component. Not available if orderer was imported.\n          properties:\n            orderer:\n              $ref: '#/components/schemas/StorageObject'\n        system_channel_id:\n          $ref: '#/components/schemas/system_channel_id'\n        tags:\n          $ref: '#/components/schemas/tags'\n        tls_cert:\n          $ref: '#/components/schemas/tls_cert_orderer'\n        server_tls_cert:\n          $ref: '#/components/schemas/server_tls_cert'\n        client_tls_cert:\n          $ref: '#/components/schemas/client_tls_cert'\n        orderer_type:\n          $ref: '#/components/schemas/orderer_type'\n        version:\n          $ref: '#/components/schemas/version'\n        zone:\n          $ref: '#/components/schemas/k8s_zone'\n\n    MspResponse:\n      type: object\n      description: Contains the details of an MSP (Membership Service Provider).\n      properties:\n        id:\n          $ref: '#/components/schemas/component_id'\n        type:\n          $ref: '#/components/schemas/type'\n        display_name:\n          $ref: '#/components/schemas/display_name_msp'\n        msp_id:\n          $ref: '#/components/schemas/msp_id'\n        timestamp:\n          $ref: '#/components/schemas/timestamp_creation'\n        tags:\n          $ref: '#/components/schemas/tags'\n        root_certs:\n          $ref: '#/components/schemas/MSPRootCerts'\n        intermediate_certs:\n          $ref: '#/components/schemas/IntermediateCerts'\n        admins:\n          $ref: '#/components/schemas/AdminCerts'\n        scheme_version:\n          $ref: '#/components/schemas/scheme_version'\n        tls_root_certs:\n          $ref: '#/components/schemas/TlsRootCerts'\n\n    GetPublicSettingsResponse:\n      type: object\n      description: Contains the details of all public settings for the UI\n      properties:\n        ACTIVITY_TRACKER_PATH:\n          type: string\n          description: The path to the activity tracker file. This file holds details of all activity. Defaults to '?' (disabled).\n          example: '/logs'\n        ATHENA_ID:\n          type: string\n          description: Random/unique id for the process running the IBP console server.\n          example: 17v7e\n        AUTH_SCHEME:\n          type: string\n          description: The type of auth protecting the UI.\n          example: iam\n        CALLBACK_URI:\n          type: string\n          description: Route used for an SSO callback uri. Only used if AUTH_SCHEME is \"iam\".\n          example: /auth/cb\n        CLUSTER_DATA:\n          type: object\n          properties:\n            type:\n              type: string\n              example: 'paid'\n              description: Indicates whether this is a paid or free IBP console.\n        CONFIGTXLATOR_URL:\n          type: string\n          description: URL used for a configtxlator rest server.\n          example: https://n3a3ec3-configtxlator.ibp.us-south.containers.appdomain.cloud\n        CRN:\n          type: object\n          description: metadata about the IBM Cloud service instance. [Only populated if using IBM Cloud]\n          properties:\n            account_id:\n              type: string\n              example: a/abcd\n            c_name:\n              type: string\n              example: staging\n            c_type:\n              type: string\n              example: public\n            instance_id:\n              type: string\n              example: abc123\n            location:\n              type: string\n              example: us-south\n            resource_id:\n              type: string\n            resource_type:\n              type: string\n            service_name:\n              type: string\n              example: blockchain\n            version:\n              type: string\n              example: v1\n        CRN_STRING:\n          type: string\n          example: 'crn:v1:staging:public:blockchain:us-south:a/abcd:abc123::'\n        CSP_HEADER_VALUES:\n          type: array\n          description: array of strings that define the Content Security Policy headers for the IBP console.\n          items:\n            type: string\n        DB_SYSTEM:\n          type: string\n          description: The id of the database for internal documents.\n          example: 'system'\n        DEPLOYER_URL:\n          type: string\n          example: https://api.dev.blockchain.cloud.ibm.com\n          description: URL of the companion application for the IBP console.\n        DOMAIN:\n          type: string\n          description: Browser cookies will use this value for their domain property. Thus it should match the URL's domain in the browser. `null` is valid if serving over http.\n        ENVIRONMENT:\n          type: string\n          description: Either \"dev\" \"staging\" or \"prod\". Controls different security settings and minor things such as the amount of time to cache content.\n        FABRIC_CAPABILITIES:\n          type: object\n          description: Contains the Hyperledger Fabric capabilities flags that should be used.\n          properties:\n            application:\n              type: array\n              items:\n                type: string\n                example: 'V1_1'\n            channel:\n              type: array\n              items:\n                type: string\n                example: 'V1_1'\n            orderer:\n              type: array\n              items:\n                type: string\n                example: 'V1_1'\n        FEATURE_FLAGS:\n          type: object\n          description: Configures th IBP console to enable/disable features.\n        FILE_LOGGING:\n          type: object\n          properties:\n            server:\n              $ref: '#/components/schemas/LogSettingsResponse'\n            client:\n              $ref: '#/components/schemas/LogSettingsResponse'\n          description: File logging settings.\n        HOST_URL:\n          type: string\n          description: The external URL to reach the IBP console.\n          example: http://localhost:3000\n        IAM_CACHE_ENABLED:\n          type: boolean\n          description: If true an in memory cache will be used to interface with the IBM IAM (an authorization) service. [Only applies if IBP is running in IBM Cloud]\n          example: true\n        IAM_URL:\n          type: string\n          description: The URL to reach the IBM IAM service. [Only applies if IBP is running in IBM Cloud]\n        IBM_ID_CALLBACK_URL:\n          type: string\n          description: The URL to use during SSO login with the IBM IAM service. [Only applies if IBP is running in IBM Cloud]\n        IGNORE_CONFIG_FILE:\n          type: boolean\n          description: If true the config file will not be loaded during startup. Thus settings in the config file will not take effect.\n        INACTIVITY_TIMEOUTS:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n              example: true\n            max_idle_time:\n              type: number\n              description: How long to wait before auto-logging out a user. In milliseconds.\n              example: 60000\n        INFRASTRUCTURE:\n          type: string\n          description: What type of infrastructure is being used to run the IBP console. \"ibmcloud\", \"azure\", \"other\"\n          example: ibmcloud\n        LANDING_URL:\n          type: string\n          example: http://localhost:3000\n        LOGIN_URI:\n          type: string\n          example: /auth/login\n          description: path for user login\n        LOGOUT_URI:\n          type: string\n          example: /auth/logout\n          description: path for user logout\n        MAX_REQ_PER_MIN:\n          type: number\n          description: The number of `/api/*` requests per minute to allow. Exceeding this limit results in 429 error responses.\n          example: 25\n        MAX_REQ_PER_MIN_AK:\n          type: number\n          description: The number of `/ak/api/*` requests per minute to allow. Exceeding this limit results in 429 error responses.\n          example: 25\n        MEMORY_CACHE_ENABLED:\n          type: boolean\n          description: If true an in memory cache will be used against couchdb requests.\n          example: true\n        PORT:\n          type: string\n          description: Internal port that IBP console is running on.\n          example: '3000'\n        PROXY_CACHE_ENABLED:\n          type: boolean\n          description: If true an in memory cache will be used for internal proxy requests.\n          example: true\n        PROXY_TLS_FABRIC_REQS:\n          type: string\n          description: |\n            If `\"always\"` requests to Fabric components will go through the IBP console server.\n            If `true` requests to Fabric components with IP based URLs will go through the IBP console server, while Fabric components with hostname based URLs will go directly from the browser to the component.\n            If `false` all requests to Fabric components will go directly from the browser to the component.\n        PROXY_TLS_HTTP_URL:\n          type: string\n          description: The URL to use to proxy an http request to a Fabric component.\n        PROXY_TLS_WS_URL:\n          description: The URL to use to proxy WebSocket request to a Fabric component.\n        REGION:\n          type: string\n          description: If it's \"local\", things like https are disabled.\n        SESSION_CACHE_ENABLED:\n          type: boolean\n          description: If true an in memory cache will be used for browser session data.\n          example: true\n        TIMEOUTS:\n          type: object\n          description: Various timeouts for different Fabric operations\n        TIMESTAMPS:\n          $ref: '#/components/schemas/SettingsTimestampData'\n        TRANSACTION_VISIBILITY:\n          type: object\n          description: Controls if Fabric transaction details are visible on the UI.\n        TRUST_PROXY:\n          type: string\n          description: Controls if proxy headers such as `X-Forwarded-*` should be parsed to gather data such as the client's IP.\n          example: loopback\n        TRUST_UNKNOWN_CERTS:\n          type: boolean\n          description: Controls if signatures in a signature collection APIs should skip verification or not.\n          example: true\n        VERSIONS:\n          type: object\n          description: The various commit hashes of components powering this IBP console.\n          properties:\n            apollo:\n              type: string\n              example: 65f3cbfd\n              description: The commit hash of Apollo code (front-end)\n            athena:\n              type: string\n              example: 1198f94\n              description: The commit hash of Athena code (back-end)\n            stitch:\n              type: string\n              example: 0f1a0c6\n              description: The commit hash of Stitch code (fabric-sdk)\n            tag:\n              type: string\n              example: v0.4.31\n              description: The tag of the build powering this IBP console\n\n    GetNotificationsResponse:\n      type: object\n      properties:\n        total:\n          type: number\n          description: Number of notifications in database.\n          example: 10\n        returning:\n          type: number\n          description: Number of notifications returned.\n          example: 3\n        notifications:\n          type: array\n          description: This array is ordered by creation date.\n          items:\n            $ref: '#/components/schemas/NotificationData'\n\n    ImportCaBody:\n      type: object\n      description: Body schema to import a CA\n      required:\n        - ca_name\n        - display_name\n        - tlsca_name\n        - api_url\n        - tls_cert\n      x-validate_no_extra_keys: true\n      properties:\n        id:\n          $ref: '#/components/schemas/component_id'\n        display_name:\n          type: string\n          description: A descriptive name for this component.\n          example: Sample CA\n        location:\n          $ref: '#/components/schemas/location_saas'\n        api_url:\n          $ref: '#/components/schemas/api_url_ca'\n        operations_url:\n          $ref: '#/components/schemas/operations_url_ca'\n        ca_name:\n          type: string\n          example: org1CA\n        tags:\n          $ref: '#/components/schemas/tags'\n        tlsca_name:\n          type: string\n          example: org1CA\n        tls_cert:\n          $ref: '#/components/schemas/tls_cert'\n\n    ImportOrdererBody:\n      type: object\n      description: Body schema to import an orderer cluster (raft)\n      required:\n        - msp_id\n        - cluster_name\n        - display_name\n        - grpcwp_url\n        - tls_ca_root_cert\n      x-validate_no_extra_keys: true\n      properties:\n        cluster_name:\n          $ref: '#/components/schemas/cluster_name_orderer'\n        id:\n          $ref: '#/components/schemas/component_id'\n        display_name:\n          $ref: '#/components/schemas/display_name_orderer'\n        location:\n          $ref: '#/components/schemas/location_saas'\n        api_url:\n          $ref: '#/components/schemas/api_url_orderer'\n        msp_id:\n          $ref: '#/components/schemas/msp_id'\n        operations_url:\n          $ref: '#/components/schemas/operations_url_orderer'\n        grpcwp_url:\n          $ref: '#/components/schemas/grpcwp_url_orderer'\n        system_channel_id:\n          $ref: '#/components/schemas/system_channel_id'\n        tags:\n          $ref: '#/components/schemas/tags'\n        tls_cert:\n          $ref: '#/components/schemas/tls_cert_orderer'\n        tls_ca_root_cert:\n          $ref: '#/components/schemas/tls_ca_root_cert'\n        server_tls_cert:\n          $ref: '#/components/schemas/server_tls_cert'\n        client_tls_cert:\n          $ref: '#/components/schemas/client_tls_cert'\n        cluster_id:\n          type: string\n          description: A unique id to identify this rafter cluster. Generated if not provided.\n\n    ImportPeerBody:\n      type: object\n      description: Body schema to import a peer\n      required:\n        - msp_id\n        - display_name\n        - grpcwp_url\n        - tls_ca_root_cert\n      x-validate_no_extra_keys: true\n      properties:\n        id:\n          $ref: '#/components/schemas/component_id'\n        display_name:\n          $ref: '#/components/schemas/display_name_peer'\n        location:\n          $ref: '#/components/schemas/location_saas'\n        api_url:\n          $ref: '#/components/schemas/api_url_peer'\n        msp_id:\n          $ref: '#/components/schemas/msp_id'\n        operations_url:\n          $ref: '#/components/schemas/operations_url_peer'\n        grpcwp_url:\n          $ref: '#/components/schemas/grpcwp_url_peer'\n        tags:\n          $ref: '#/components/schemas/tags'\n        tls_cert:\n          $ref: '#/components/schemas/tls_cert'\n        tls_ca_root_cert:\n          $ref: '#/components/schemas/tls_ca_root_cert'\n\n    DeleteComponentResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: deleted\n        type:\n          $ref: '#/components/schemas/type'\n        id:\n          $ref: '#/components/schemas/component_id'\n        display_name:\n          $ref: '#/components/schemas/display_name_peer'\n\n    DeleteMultiComponentsResponse:\n      type: object\n      properties:\n        deleted:\n          type: array\n          items:\n            $ref: '#/components/schemas/DeleteComponentResponse'\n\n    RemoveMultiComponentsResponse:\n      type: object\n      properties:\n        removed:\n          type: array\n          items:\n            $ref: '#/components/schemas/DeleteComponentResponse'\n\n    DeleteAllNotificationsResponse:\n      type: object\n      properties:\n        message:\n          $ref: '#/components/schemas/message_ok'\n        details:\n          type: string\n          description: Text showing what was deleted.\n          example: deleted 101 notification(s)\n\n    RestartAthenaResponse:\n      type: object\n      description: Describes the outcome of the api.\n      properties:\n        message:\n          type: string\n          example: restarting - give me 10 seconds\n          description: Text describing the outcome of the api.\n\n    DeleteAllSessionsResponse:\n      type: object\n      description: Describes the outcome of the api.\n      properties:\n        message:\n          $ref: '#/components/schemas/message_ok'\n        deleted:\n          type: number\n          example: 42\n          description: How many session entries that were deleted.\n\n    LoggingSettingsClient:\n      type: object\n      description: The client side (browser) logging settings. _Changes to this field will restart the IBP console server(s)_\n      properties:\n        enabled:\n          type: boolean\n          description: If `true` logging will be stored to a file on the file system.\n          example: true\n        level:\n          $ref: '#/components/schemas/log_levels'\n        unique_name:\n          type: boolean\n          description: If `true` log file names will have a random suffix.\n          example: false\n\n    LoggingSettingsServer:\n      type: object\n      description: The server side logging settings. _Changes to this field will restart the IBP console server(s)_\n      properties:\n        enabled:\n          type: boolean\n          description: If `true` logging will be stored to a file on the file system.\n          example: true\n        level:\n          $ref: '#/components/schemas/log_levels'\n        unique_name:\n          type: boolean\n          description: If `true` log file names will have a random suffix.\n          example: false\n\n    GenericResourcesRequests:\n      type: object\n      properties:\n        cpu:\n          type: string\n          example: 100m\n        memory:\n          type: string\n          example: 256M\n\n    GenericResourceLimits:\n      type: object\n      properties:\n        cpu:\n          type: string\n          example: 8000m\n        memory:\n          type: string\n          example: 16384M\n\n    GenericResources:\n      type: object\n      properties:\n        requests:\n          $ref: '#/components/schemas/GenericResourcesRequests'\n        limits:\n          $ref: '#/components/schemas/GenericResourceLimits'\n\n    SettingsTimestampData:\n      type: object\n      properties:\n        now:\n          type: number\n          description: UTC UNIX timestamp of the current time according to the server. In milliseconds.\n          example: 1542746836056\n        born:\n          type: number\n          description: UTC UNIX timestamp of when the server started. In milliseconds.\n          example: 1542746836056\n        next_settings_update:\n          type: string\n          description: Time remaining until the server performs a hard-refresh of its settings.\n          example: 1.2 mins\n        up_time:\n          type: string\n          description: Total time the IBP console server has been running.\n          example: 30 days\n\n    NotificationData:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique id for the notification.\n          example: '60d84819bfa17adb4174ff3a1c52b5d6'\n        type:\n          type: string\n          description: Values can be \"notification\", \"webhook_tx\" or \"other\".\n          example: notification\n        status:\n          type: string\n          description: Values can be \"pending\", \"error\", or \"success\".\n          example: pending\n        by:\n          type: string\n          description: The end user who initiated the action for the notification.\n        message:\n          type: string\n          description: Text describing the outcome of the transaction.\n          example: Restarting application\n        ts_display:\n          type: number\n          description: UTC UNIX timestamp of the notification's creation. In milliseconds.\n          example: 1537262855753\n\n    CacheData:\n      type: object\n      properties:\n        hits:\n          type: number\n          description: Number of cache hits\n          example: 42\n        misses:\n          type: number\n          description: Number of cache misses\n          example: 11\n        keys:\n          type: number\n          description: Number of entries in the cache\n        cache_size:\n          type: string\n          description: Approximate size of the in memory cache\n\n    GetAthenaHealthStatsResponse:\n      type: object\n      description: Contains various health statistics like up time and cache sizes.\n      properties:\n        OPTOOLS:\n          type: object\n          properties:\n            instance_id:\n              type: string\n              example: p59ta\n              description: Random/unique id for a process running IBP console.\n            now:\n              type: number\n              description: UTC UNIX timestamp of the current time according to the server. In milliseconds.\n              example: 1542746836056\n            born:\n              type: number\n              description: UTC UNIX timestamp of when the server started. In milliseconds.\n              example: 1542746836056\n            up_time:\n              type: string\n              description: Total time the IBP console server has been running.\n              example: 30 days\n            memory_usage:\n              type: object\n              properties:\n                rss:\n                  type: string\n                  example: 56.1 MB\n                  description: Resident set size - total memory allocated for the process\n                heapTotal:\n                  type: string\n                  example: 34.4 MB\n                  description: Memory allocated for the heap of V8\n                heapUsed:\n                  type: string\n                  example: 28.4 MB\n                  description: Current heap used by V8\n                external:\n                  type: string\n                  example: 369.3 KB\n                  description: Memory used by bound C++ objects\n            session_cache_stats:\n              $ref: '#/components/schemas/CacheData'\n            couch_cache_stats:\n              $ref: '#/components/schemas/CacheData'\n            iam_cache_stats:\n              $ref: '#/components/schemas/CacheData'\n            proxy_cache:\n              $ref: '#/components/schemas/CacheData'\n        OS:\n          type: object\n          properties:\n            arch:\n              type: string\n              example: x64\n              description: CPU architecture\n            type:\n              type: string\n              example: Windows_NT\n              description: Operating system name\n            endian:\n              type: string\n              example: LE\n              description: Endianness of the CPU. LE = Little Endian, BE = Big Endian\n            loadavg:\n              type: string\n              example: [0, 0, 0]\n              description: CPU load in 1, 5, \u0026 15 minute averages. n/a on windows\n            cpus:\n              type: array\n              items:\n                $ref: '#/components/schemas/CpuHealthStats'\n            total_memory:\n              type: string\n              example: 31.7 GB\n              description: Total memory known to the operating system\n            free_memory:\n              type: string\n              example: 21.9 GB\n              description: Free memory on the operating system\n            up_time:\n              type: string\n              example: 4.9 days\n              description: Time operating system has been running\n\n    CpuHealthStats:\n      type: object\n      properties:\n        model:\n          type: string\n          example: Intel(R) Core(TM) i7-8850H CPU @ 2.60GHz\n          description: Model of CPU core\n        speed:\n          type: string\n          example: 2592\n          description: Speed of core in MHz\n        times:\n          type: object\n          properties:\n            idle:\n              type: number\n              example: 131397203\n              description: ms CPU is in idle\n            irq:\n              type: number\n              example: 6068640\n              description: ms CPU is in irq\n            nice:\n              type: number\n              example: 0\n              description: ms CPU is in nice\n            sys:\n              type: number\n              example: 9652328\n              description: ms CPU is in sys\n            user:\n              type: number\n              example: 4152187\n              description: ms CPU is in user\n\n    GetMSPCertificateResponse:\n      type: object\n      properties:\n        msps:\n          type: array\n          items:\n            $ref: '#/components/schemas/MspPublicData'\n\n    MspPublicData:\n      type: object\n      properties:\n        msp_id:\n          $ref: '#/components/schemas/msp_id'\n        root_certs:\n          $ref: '#/components/schemas/MSPRootCerts'\n        admins:\n          $ref: '#/components/schemas/AdminCerts'\n        tls_root_certs:\n          $ref: '#/components/schemas/TlsRootCerts'\n\n    PeerResources:\n      type: object\n      description: CPU and memory properties. This feature is not available if using a free Kubernetes cluster.\n      x-validate_paid_plan_feature: true\n      x-validate_no_extra_keys: true\n      properties:\n        chaincodelauncher:\n          $ref: '#/components/schemas/ResourceObjectFabV2'\n        couchdb: # even if this peer is using level db, the key was \"couchdb\", 07-15-2020 now legacy, use statedb\n          $ref: '#/components/schemas/ResourceObjectCouchDb'\n        statedb:\n          $ref: '#/components/schemas/ResourceObject'\n        dind:\n          $ref: '#/components/schemas/ResourceObjectFabV1'\n        fluentd:\n          $ref: '#/components/schemas/ResourceObjectFabV1'\n        peer:\n          $ref: '#/components/schemas/ResourceObject'\n        proxy:\n          $ref: '#/components/schemas/ResourceObject'\n\n    ResourceObjectFabV1:\n      type: object\n      description: This field requires the use of Fabric v1.4.* and **lower**.\n      required:\n        - requests\n      properties:\n        requests:\n          $ref: '#/components/schemas/ResourceRequests'\n        limits:\n          $ref: '#/components/schemas/ResourceLimits'\n\n    ResourceObjectFabV2:\n      type: object\n      description: This field requires the use of Fabric v2.1.* and higher.\n      required:\n        - requests\n      properties:\n        requests:\n          $ref: '#/components/schemas/ResourceRequests'\n        limits:\n          $ref: '#/components/schemas/ResourceLimits'\n\n    ResourceObject:\n      type: object\n      description: This field requires the use of Fabric v1.4.* and higher.\n      required:\n        - requests\n      properties:\n        requests:\n          $ref: '#/components/schemas/ResourceRequests'\n        limits:\n          $ref: '#/components/schemas/ResourceLimits'\n\n    ResourceObjectCouchDb:\n      type: object\n      description: |\n        *Legacy field name* Use the field `statedb` instead. This field requires the use of Fabric v1.4.* and higher.\n      required:\n        - requests\n      properties:\n        requests:\n          $ref: '#/components/schemas/ResourceRequests'\n        limits:\n          $ref: '#/components/schemas/ResourceLimits'\n\n    ResourceRequests:\n      type: object\n      properties:\n        cpu:\n          type: string\n          example: 100m\n          x-validate_cpu: true\n          x-minimum: 0.01\n          x-maximum: 100\n          description: Desired CPU for subcomponent. [Resource details](/docs/blockchain?topic=blockchain-ibp-console-govern-components#ibp-console-govern-components-allocate-resources)\n        memory:\n          type: string\n          example: 256MiB\n          x-validate_memory: true\n          x-minimum: 1\n          x-maximum: 107374182400\n          description: Desired memory for subcomponent. [Resource details](/docs/blockchain?topic=blockchain-ibp-console-govern-components#ibp-console-govern-components-allocate-resources)\n\n    ResourceLimits:\n      type: object\n      properties:\n        cpu:\n          type: string\n          example: 100m\n          x-validate_cpu: true\n          x-minimum: 0.01\n          x-maximum: 100\n          description: Maximum CPU for subcomponent. Must be \u003e= \"requests.cpu\". Defaults to the same value in \"requests.cpu\". [Resource details](/docs/blockchain?topic=blockchain-ibp-console-govern-components#ibp-console-govern-components-allocate-resources)\n        memory:\n          type: string\n          example: 256MiB\n          x-validate_memory: true\n          x-minimum: 1\n          x-maximum: 107374182400\n          description: Maximum memory for subcomponent. Must be \u003e= \"requests.memory\". Defaults to the same value in \"requests.memory\". [Resource details](/docs/blockchain?topic=blockchain-ibp-console-govern-components#ibp-console-govern-components-allocate-resources)\n\n    StorageObject:\n      type: object\n      properties:\n        size:\n          type: string\n          example: 4GiB\n          x-minimum: 1\n          x-maximum: 10995116277760\n          x-validate_storage: true\n          description: Maximum disk space for subcomponent. [Resource details](/docs/blockchain?topic=blockchain-ibp-console-govern-components#ibp-console-govern-components-allocate-resources)\n        class:\n          type: string\n          example: default\n          description: Kubernetes storage class for subcomponent's disk space.\n\n    ConfigObject:\n      type: object\n      x-validate_no_extra_keys: true\n      properties:\n        enrollment:\n          type: object\n          description: This `enrollment` field contains data that allows a component to enroll an identity for itself. Use `enrollment` or `msp`, not both.\n          required:\n            - component\n            - tls\n          x-validate_key_combination:\n            config.msp:\n              key_should_not_exist: true\n          properties:\n            component:\n              type: object\n              required:\n                - cahost\n                - caport\n                - caname\n                - catls\n                - enrollid\n                - enrollsecret\n              properties:\n                cahost:\n                  $ref: '#/components/schemas/cahost'\n                caport:\n                  $ref: '#/components/schemas/caport'\n                caname:\n                  $ref: '#/components/schemas/ca_name'\n                catls:\n                  type: object\n                  required:\n                    - cacert\n                  properties:\n                    cacert:\n                      $ref: '#/components/schemas/tls_cert'\n                enrollid:\n                  $ref: '#/components/schemas/enroll_id'\n                enrollsecret:\n                  $ref: '#/components/schemas/enroll_secret'\n                admincerts:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/admin_cert'\n            tls:\n              type: object\n              required:\n                - cahost\n                - caport\n                - caname\n                - catls\n              properties:\n                cahost:\n                  $ref: '#/components/schemas/cahost'\n                caport:\n                  $ref: '#/components/schemas/caport'\n                caname:\n                  $ref: '#/components/schemas/tls_ca_name'\n                catls:\n                  type: object\n                  required:\n                    - cacert\n                  properties:\n                    cacert:\n                      $ref: '#/components/schemas/tls_cert'\n                enrollid:\n                  $ref: '#/components/schemas/enroll_id'\n                enrollsecret:\n                  $ref: '#/components/schemas/enroll_secret'\n                admincerts:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/admin_cert'\n                csr:\n                  type: object\n                  required:\n                    - hosts\n                  properties:\n                    hosts:\n                      type: array\n                      items:\n                        type: string\n                        description: Hostnames\n        msp:\n          type: object\n          description: The `msp` field contains data to allow a component to configure its MSP with an already enrolled identity. Use `msp` or `enrollment`, not both.\n          required:\n            - component\n            - tls\n          #x-validate_key_combination:\n          #  config.enrollment: # don't need this defined twice, the config.enrollment validation covers it\n          #    key_should_not_exist: true\n          properties:\n            component:\n              $ref: '#/components/schemas/MspConfigData'\n            tls:\n              $ref: '#/components/schemas/MspConfigData'\n            clientauth:\n              $ref: '#/components/schemas/MspConfigData'\n\n    MspConfigData:\n      type: object\n      required:\n        - keystore\n        - signcerts\n        - cacerts\n      properties:\n        keystore: # the name of this field is odd, see deployer doc: https://github.ibm.com/IBM-Blockchain/fabric_images/blob/v1.2/v1/fabric/alpine/msp_structure.md\n          type: string\n          description: An identity private key (base 64 encoded PEM) for this component.\n        signcerts:\n          type: string\n          description: An identity certificate (base 64 encoded PEM) for this component that was signed by the CA.\n          example: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='\n          x-validate_base64_certificate: true\n        cacerts:\n          type: array\n          description: An array that contains one or more base 64 encoded PEM CA root certificates.\n          # ibm cloud api-docs does not show the \"example\" defined in a item reference, so making the example at this level\n          example:\n            [\n              'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkRhdGEgaGVyZSBpZiB0aGlzIHdhcyByZWFsCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K',\n            ]\n          minLength: 1\n          maxLength: 100 # dsh spam prevention limit\n          items:\n            $ref: '#/components/schemas/tls_cert'\n        intermediatecerts:\n          type: array\n          description: An array that contains base 64 encoded PEM intermediate CA certificates.\n          # ibm cloud api-docs does not show the \"example\" defined in a item reference, so making the example at this level\n          example:\n            [\n              'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkRhdGEgaGVyZSBpZiB0aGlzIHdhcyByZWFsCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K',\n            ]\n          minLength: 0\n          maxLength: 100 # dsh spam prevention limit\n          items:\n            type: string\n            description: A certificate as base 64 encoded PEM.\n            x-validate_base64_certificate: true\n        admincerts:\n          type: array\n          description: An array that contains base 64 encoded PEM identity certificates for administrators. Also known as signing certificates of an organization administrator.\n          # ibm cloud api-docs does not show the \"example\" defined in a item reference, so making the example at this level\n          example:\n            [\n              'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkRhdGEgaGVyZSBpZiB0aGlzIHdhcyByZWFsCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K',\n            ]\n          minLength: 0\n          maxLength: 100 # spam prevention limit\n          items:\n            $ref: '#/components/schemas/admin_cert'\n\n    MSPRootCerts:\n      type: array\n      description: An array that contains one or more base 64 encoded PEM root certificates for the MSP.\n      # ibm cloud api-docs does not show the \"example\" defined in a item reference, so making the example at this level\n      example:\n        [\n          'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkRhdGEgaGVyZSBpZiB0aGlzIHdhcyByZWFsCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K',\n        ]\n      minLength: 1\n      maxLength: 100 # dsh spam prevention limit\n      items:\n        $ref: '#/components/schemas/root_cert'\n\n    IntermediateCerts: # dsh should this be removed?\n      type: array\n      description: An array that contains base 64 encoded PEM intermediate certificates.\n      # ibm cloud api-docs does not show the \"example\" defined in a item reference, so making the example at this level\n      example:\n        [\n          'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkRhdGEgaGVyZSBpZiB0aGlzIHdhcyByZWFsCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K',\n        ]\n      minLength: 0\n      maxLength: 100 # dsh spam prevention limit\n      items:\n        type: string\n        description: A certificate as base 64 encoded PEM.\n        x-validate_base64_certificate: true\n\n    TlsRootCerts:\n      type: array\n      description: An array that contains one or more base 64 encoded PEM TLS root certificates.\n      # ibm cloud api-docs does not show the \"example\" defined in a item reference, so making the example at this level\n      example:\n        [\n          'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkRhdGEgaGVyZSBpZiB0aGlzIHdhcyByZWFsCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K',\n        ]\n      minLength: 1\n      maxLength: 100 # dsh spam prevention limit\n      items:\n        $ref: '#/components/schemas/tls_root_cert'\n\n    AdminCerts:\n      type: array\n      description: An array that contains base 64 encoded PEM identity certificates for administrators. Also known as signing certificates of an organization administrator.\n      # ibm cloud api-docs does not show the \"example\" defined in a item reference, so making the example at this level\n      example:\n        [\n          'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkRhdGEgaGVyZSBpZiB0aGlzIHdhcyByZWFsCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K',\n        ]\n      minLength: 0\n      maxLength: 100 # dsh spam prevention limit\n      items:\n        $ref: '#/components/schemas/admin_cert'\n\n    # removed 02/25/2020 - fields have no effect in the UI, even though they are valid MSP fields its confusing to list them in the api\n    #RevocationCerts: # dsh should this be removed?\n    #  type: array\n    #  items:\n    #    type: string\n    #    description: A certificate as base 64 encoded PEM. These certificates are no longer valid. For X.509-based identities, these identifiers are pairs of strings known as Subject Key Identifier (SKI) and Authority Access Identifier (AKI), and are checked whenever the X.509 certificate is being used to verify that the certificate has not been revoked.\n    #    example: '[\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkRhdGEgaGVyZSBpZiB0aGlzIHdhcyByZWFsCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\"]'\n\n    #OrganizationalUnitIdentifiers: # dsh should this be removed?\n    #  type: array\n    #  items:\n    #    type: string\n    #    description: A list of Organizational Units (OU) that members of this MSP should include in their X.509 certificate. An organization is often divided up into multiple organizational units (OUs), each of which has a certain set of responsibilities. When a CA issues X.509 certificates, the OU field in the certificate specifies the line of business to which the identity belongs.\n    #    example: '[\"oui id 1\"]'\n\n    #FabricNodeOus: # dsh should this be removed?\n    #  type: array\n    #  items:\n    #    type: string\n    #    description: Fabric-specific OUs that enable identity classification. NodeOUs contain information on how to distinguish clients, peers, and orderers based on their OU. If the check is enforced, by setting Enabled to `true`, the MSP will consider an identity valid if it is an identity of a client or a peer. An identity should have only one of these special OUs.\n    #    example: '[\"ous id 1\"]'\n\n    CacheFlushResponse:\n      type: object\n      properties:\n        message:\n          $ref: '#/components/schemas/message_ok'\n        flushed:\n          type: array\n          description: The name of the caches that were cleared.\n          items:\n            type: string\n            enum:\n              - couch_cache\n              - iam_cache\n              - proxy_cache\n              - session_cache\n\n    EditAdminCertsBody:\n      type: object\n      x-validate_no_extra_keys: true\n      properties:\n        append_admin_certs:\n          type: array\n          minLength: 0\n          maxLength: 100 # dsh spam prevention limit\n          description: The admin certificates to add to the file system.\n          items:\n            $ref: '#/components/schemas/admin_cert'\n        remove_admin_certs:\n          type: array\n          minLength: 0\n          maxLength: 100 # dsh spam prevention limit\n          description: The admin certificates to remove from the file system. To see the current list run the [Get a component](#get-component-data) API with the `deployment_attrs=included` parameter.\n          items:\n            $ref: '#/components/schemas/admin_cert'\n\n    EditAdminCertsResponse:\n      type: object\n      properties:\n        changes_made:\n          type: number\n          example: 1\n          description: The total number of admin certificate additions and deletions.\n        set_admin_certs:\n          type: array\n          description: Array of certs there were set.\n          items:\n            type: object\n            properties:\n              base_64_pem:\n                $ref: '#/components/schemas/admin_cert'\n              issuer:\n                type: string\n                description: The issuer string in the certificate\n                example: /C=US/ST=North Carolina/O=Hyperledger/OU=Fabric/CN=fabric-ca-server\n              not_after_ts:\n                type: number\n                description: UTC timestamp of the last ms the certificate is valid\n                example: 1597770420000\n              not_before_ts:\n                type: number\n                description: UTC timestamp of the earliest ms the certificate is valid\n                example: 1566234120000\n              serial_number_hex:\n                type: string\n                description: The \"unique\" id of the certificates\n                example: 649a1206fd0bc8be994886dd715cecb0a7a21276\n              signature_algorithm:\n                type: string\n                description: The crypto algorithm that signed the public key in the certificate\n                example: SHA256withECDSA\n              subject:\n                type: string\n                description: The subject string in the certificate\n                example: /OU=client/CN=admin\n              X509_version:\n                type: number\n                description: The X.509 version/format\n                example: 3\n              time_left:\n                type: string\n                description: A friendly (human readable) duration until certificate expiration\n\n    GetFabricVersionsResponse:\n      type: object\n      properties:\n        versions:\n          type: object\n          properties:\n            ca:\n              $ref: '#/components/schemas/FabricVersionDictionary'\n            peer:\n              $ref: '#/components/schemas/FabricVersionDictionary'\n            orderer:\n              $ref: '#/components/schemas/FabricVersionDictionary'\n\n    FabricVersionDictionary:\n      type: object\n      description: A supported release of Fabric for this component type.\n      additionalProperties: true\n      properties:\n        1.4.6-2:\n          $ref: '#/components/schemas/FabVersionObject'\n        2.1.0-0:\n          $ref: '#/components/schemas/FabVersionObject'\n\n    FabVersionObject:\n      type: object\n      properties:\n        default:\n          type: boolean\n          description: Indicates if this is the Fabric version that will be used if none is selected.\n          example: true\n        version:\n          type: string\n          description: The Fabric version.\n          example: 1.4.6-2\n        image:\n          type: object\n          description: Detailed image information for this Fabric release.\n\n    Unauthorized:\n      type: string\n      example: Unauthorized\n      description: The client has failed to authenticate the request\n\n    Forbidden:\n      type: object\n      description: The client has failed to authorize the request\n      properties:\n        authorized:\n          type: boolean\n          example: false\n        error:\n          type: string\n          example: user is not authorized for these action(s)\n        attempted_actions:\n          type: array\n          description: Array of actions that are needed for this api\n          items:\n            type: string\n        iid:\n          type: string\n          description: The service's instance id\n          example: abc123\n        tx_id:\n          type: string\n          example: abcde\n          description: A transaction ID that can help debug this api failure\n\n    NotFound:\n      type: object\n      description: The component id was not found\n      properties:\n        statusCode:\n          type: number\n          example: 404\n          enum:\n            - 404\n        msg:\n          type: string\n          example: no components by this id exist\n          enum:\n            - no components by this id exist\n            - no components by tag exist\n        reason:\n          type: string\n          description: \"'missing' if the id never existed. 'deleted' if the id has been deleted.\"\n          example: deleted\n          enum:\n            - missing\n            - deleted\n\n    EmptyArrayResponse:\n      type: object\n      description: No components were found or exist.\n      properties:\n        components:\n          type: array\n          items:\n            type: object\n        msg:\n          type: string\n          example: no components exist\n          enum:\n            - no components exist\n            - no components by tag exist\n            - no components by type exist\n        reason:\n          type: string\n          example: missing\n\n    DistributionResponse:\n      type: array\n      items:\n        type: object\n        properties:\n          msp_id:\n            $ref: '#/components/schemas/msp_id'\n          resp:\n            type: object\n            properties:\n              statusCode:\n                type: number\n                example: 200\n                description: The http status code from the distribution request\n\n    org2signEdit:\n      type: array\n      description: The details for a MSP/Org that is adding their signature.\n      items:\n        type: object\n        required:\n          - msp_id\n          - signature\n        properties:\n          admin:\n            $ref: '#/components/schemas/SignatureAdmin'\n          certificate:\n            $ref: '#/components/schemas/root_cert'\n          optools_url:\n            $ref: '#/components/schemas/SignatureOptools_url'\n          package_id:\n            $ref: '#/components/schemas/SigTxPackageId'\n          peers:\n            $ref: '#/components/schemas/SigTxPeer'\n          msp_id:\n            $ref: '#/components/schemas/msp_id'\n          signature: # do not base64 validation to this field, for a ccd tx it will be a simple string\n            $ref: '#/components/schemas/SignatureSignature'\n          timestamp:\n            $ref: '#/components/schemas/SignatureTimestamp'\n\n    org2sign:\n      type: array\n      description: The details for a MSP/Org that should be asked to sign.\n      items:\n        type: object\n        required:\n          - msp_id\n          - optools_url\n        properties:\n          admin:\n            $ref: '#/components/schemas/SignatureAdmin'\n          certificate:\n            $ref: '#/components/schemas/root_cert'\n          optools_url:\n            $ref: '#/components/schemas/SignatureOptools_url'\n          package_id:\n            $ref: '#/components/schemas/SigTxPackageId'\n          peers:\n            $ref: '#/components/schemas/SigTxPeer'\n          msp_id:\n            $ref: '#/components/schemas/msp_id'\n          signature: # do not base64 validation to this field, for a ccd tx it will be a simple string\n            $ref: '#/components/schemas/SignatureSignature'\n          timestamp:\n            $ref: '#/components/schemas/SignatureTimestamp'\n\n    SignatureAdmin:\n      type: boolean\n      example: true\n      description: '**(exclusive param for channel txs)** Indicates if this MSP/Org is an administrator on the channel.'\n\n    SignatureOptools_url:\n      type: string\n      description: The url of the IBP console for this org. Include protocol, port, \u0026 hostname. Field is parsed during request distribution. The path/route to use during request distribution will be decided internally by the paths availability (`/api/v1/*` or `/api/v2/*`).\n      example: http://localhost:3000\n\n    SignatureSignature: # do not base64 validation to this field, for a ccd tx it will be a simple string\n      type: string\n      example: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='\n      description: |\n        - channel transaction - the signature for this MSP/Org over the proposal formatted in base 64.\n        - ccd transaction - the string \"signed\"\n\n    SignatureTimestamp:\n      type: number\n      description: UNIX timestamp of when the signature was created. UTC, ms.\n      example: 1537262855753\n\n    GetSignatureCollectionsResponse:\n      type: object\n      properties:\n        signature_collections:\n          $ref: '#/components/schemas/SignatureCollections'\n\n    SignatureCollections:\n      type: array\n      items:\n        $ref: '#/components/schemas/SignatureCollectionObj'\n\n    SignatureCollectionObj:\n      type: object\n      properties:\n        ccd:\n          $ref: '#/components/schemas/SigTxCcd'\n        channel:\n          $ref: '#/components/schemas/SigTxChannel'\n        current_policy:\n          $ref: '#/components/schemas/SigTxCurrentPolicy'\n        consenters:\n          $ref: '#/components/schemas/SigTxConsenters'\n        distribution_responses:\n          type: array\n          description: Details about the outcome of each signature collection distribution attempt.\n          items:\n            $ref: '#/components/schemas/SigDistribution'\n        reference_component_ids:\n          $ref: '#/components/schemas/SigTxRefs'\n        orderers:\n          $ref: '#/components/schemas/SigTxOrderers'\n        orderers2sign:\n          $ref: '#/components/schemas/org2sign'\n        orgs2sign:\n          $ref: '#/components/schemas/org2sign'\n        originator_msp:\n          $ref: '#/components/schemas/SigTxOriginator'\n        proposal:\n          $ref: '#/components/schemas/SigTxProposal'\n        status:\n          $ref: '#/components/schemas/SigTxStatus'\n        timestamp:\n          $ref: '#/components/schemas/SigTxTimestamp'\n        tx_id:\n          $ref: '#/components/schemas/SigTxId'\n        tx_type:\n          $ref: '#/components/schemas/SigTxType'\n        visibility:\n          $ref: '#/components/schemas/SigTxVisibility'\n\n    SigTxPackageId:\n      type: string\n      description: '**(exclusive param for ccd txs)** Id of the chaincode package (only present if the org has installed the cc)'\n      example: marbles_1:92321c359d1efcd65dc34c6ee334e37870a4a2130889473173fad3ddf7c02249\n\n    SigTxPeer:\n      type: array\n      description: '**(exclusive param for ccd txs)** array of peer urls. can be an empty array'\n      items:\n        type: string\n        description: A peer grpc web proxy url including the protocol, hostname \u0026 port.\n        example: https://n3a3ec3-mypeer-proxy.ibp.us-south.containers.appdomain.cloud:8084\n\n    SigTxChannel:\n      type: string\n      description: The name of the channel where this transaction applies.\n      example: MyFirstChannel\n\n    SigTxConsenters:\n      type: array\n      items:\n        type: string\n        description: '**(exclusive param for channel txs)** A current/existing channel consenter.'\n        example: 192.168.5.0:3000\n\n    SigTxCurrentPolicy:\n      type: object\n      description: 'Contains details of the current channel signature policy.'\n      properties:\n        number_of_signatures:\n          type: number\n          example: 1\n          description: The number of signatures to edit the channel's policy.\n\n    SigTxRefs:\n      type: array\n      items:\n        type: string\n        description: '**(exclusive param for channel txs)** Component ids of the raft nodes that are being added as a consenter in this update.'\n\n    SigTxOrderers:\n      type: array\n      items:\n        type: string\n        description: The orderer hostname + port to submit this transaction to when it is complete.\n        example: https://n3a3ec3-myorderer.ibp.us-south.containers.appdomain.cloud:7050\n\n    SigTxOriginator:\n      type: string\n      example: Org1\n      description: The MSP id who created the signature collection transaction.\n\n    SigTxProposal:\n      type: string\n      description: '**(exclusive param for channel txs)** The Fabric proposal to create or edit a channel. Encoded as base 64.'\n\n    SigTxStatus:\n      type: string\n      description: The state of the transaction. Either 'open' or 'closed'.\n      example: open\n      enum:\n        - open\n        - closed\n\n    SigTxTimestamp:\n      type: number\n      description: UNIX timestamp of the creation of this transaction. UTC, ms.\n      example: 1537262855753\n\n    SigTxVisibility:\n      type: string\n      description: Where the transaction appears in the IBP console. Either `inbox` or `archive`.\n      example: inbox\n      enum:\n        - inbox\n        - archive\n\n    SigTxType:\n      type: string\n      description: The type of transaction. Channel updates use `channel`, ChainCode Definitions use `ccd`.\n      example: channel\n      enum:\n        - channel\n        - ccd\n\n    SigTxId:\n      type: string\n      description: The unique transaction ID of this signature collection. Must start with a letter.\n      example: abcde\n      x-validate_regex_must_fail: starts_with_non_letter\n      x-validate_regex_error_msg: regex_fail_start_non_letter\n\n    SigDistribution:\n      type: object\n      properties:\n        distribute:\n          $ref: '#/components/schemas/SigDistribute'\n        errors:\n          $ref: '#/components/schemas/DistributionResponse'\n        successes:\n          $ref: '#/components/schemas/DistributionResponse'\n        timestamp:\n          type: number\n          description: UNIX timestamp of the distribution attempt. UTC, ms.\n          example: 1537262855753\n\n    SigDistribute:\n      type: string\n      description: The type of distribution or redistribution that was performed (`'none'`, `'all'`, `'missing'`).\n      example: all\n\n    SigTxCcd:\n      type: object\n      description: '**(exclusive param for ccd txs)** The chaincode definition that needs to be approved.'\n      required:\n        - chaincode_sequence\n        - chaincode_id\n        - chaincode_version\n      x-validate_key_combination:\n        proposal:\n          key_should_not_exist: true\n        consenters:\n          key_should_not_exist: true\n      properties:\n        chaincode_sequence:\n          type: number\n          description: Tracks the number of times a chaincode def has been defined or updated\n          example: 1\n        chaincode_id:\n          type: string\n          description: The chaincode id/name\n          example: marbles\n        chaincode_version:\n          type: string\n          description: The chaincode version\n          example: v1\n        endorsement_plugin:\n          type: string\n          description: The system chaincode id/name to use to check endorsements\n          example: escc\n        init_required:\n          type: boolean\n          description: Controls if the first invoke should be \"init\" or not\n          example: true\n        # removed b/c it will vary org to org, moved to orgs2sign entry\n        #package_id:\n        #  type: string\n        #  description: Id of the chaincode package (only present if the org has installed the cc)\n        #  example: marbles_1:92321c359d1efcd65dc34c6ee334e37870a4a2130889473173fad3ddf7c02249\n        validation_plugin:\n          type: string\n          description: The system chaincode id/name to use to validate\n          example: vscc\n        validation_parameter:\n          $ref: '#/components/schemas/ApplicationPolicy'\n        collections_obj:\n          type: array\n          items:\n            type: object\n            description: The static collection config (scc) to apply to this chaincode. Conforms to the Fabric message in `peer/collection.proto `.\n            required:\n              - name\n            properties:\n              name:\n                type: string\n                description: Name of the StaticCollectionConfig message\n                example: myCollection-v1\n              required_peer_count:\n                type: number\n                description: Minimum number of peers that must get the private data to successfully endorse\n                example: 1\n              maximum_peer_count:\n                type: number\n                description: Max number of peers the endorsing peer can try to send private data to\n                example: 1\n              member_orgs_policy:\n                type: string\n                description: Signature policy controlling which orgs must endorse private data changes.\n                example: AND('Org1.admin', 'Org2.member')\n              block_to_live:\n                type: number\n                description: When to expire private data.\n                example: 10\n              member_only_read:\n                type: boolean\n                description: If true, only collection member clients can read private data\n                example: false\n              member_only_write:\n                type: boolean\n                description: If true, only collection member clients can read private data\n                example: false\n              endorsement_policy:\n                $ref: '#/components/schemas/ApplicationPolicy'\n\n    ApplicationPolicy:\n      type: string\n      description: |\n        Signature policy controlling which orgs must endorse chaincode proposals.\n\n        Two formats are supported.\n        This can be either the name of a channel's signature policy (string) such as:\n        `\"/Channel/Application/Endorsement\"`.\n        Or it can be a signature policy in the peer CLI format (string) such as:\n        `\"AND('Org1.admin', 'Org2.member')\"`.\n\n        [CLI format docs](https://hyperledgendary.github.io/unstable-fabric-docs/endorsement-policies.html#endorsement-policy-syntax)\n      example: AND('Org1.admin', 'Org2.member')\n\n    GetSignatureCollectionsByChannelResponse:\n      type: object\n      properties:\n        signature_collections:\n          type: object\n          properties:\n            channels:\n              type: object\n              description: The keys are channel names. The values hold the signature collection transaction details.\n              properties:\n                MyFirstChannel:\n                  $ref: '#/components/schemas/SignatureCollections'\n\n    CreateSignatureCollectionBody:\n      type: object\n      required:\n        - authorize\n        - channel\n        - orderers\n        - orgs2sign\n        - originator_msp\n        - tx_id\n      properties:\n        authorize:\n          $ref: '#/components/schemas/SigTxAuth'\n        ccd:\n          $ref: '#/components/schemas/SigTxCcd'\n        channel:\n          $ref: '#/components/schemas/SigTxChannel'\n        current_policy:\n          $ref: '#/components/schemas/SigTxCurrentPolicy'\n        consenters:\n          $ref: '#/components/schemas/SigTxConsenters'\n        #distribute: # this field can be a string or an object, swagger won't accept that so not going to doc this field. ok b/c api is hidden.\n        #  type: any\n        reference_component_ids:\n          $ref: '#/components/schemas/SigTxRefs'\n        orderers:\n          $ref: '#/components/schemas/SigTxOrderers'\n        orderers2sign:\n          $ref: '#/components/schemas/org2sign'\n        orgs2sign:\n          $ref: '#/components/schemas/org2sign'\n        originator_msp:\n          $ref: '#/components/schemas/SigTxOriginator'\n        proposal:\n          $ref: '#/components/schemas/SigTxProposal'\n        tx_id:\n          $ref: '#/components/schemas/SigTxId'\n        tx_type:\n          $ref: '#/components/schemas/SigTxType'\n        visibility:\n          $ref: '#/components/schemas/SigTxVisibility'\n\n    SigTxAuth:\n      type: object\n      required:\n        - msp_id\n        - certificate\n      properties:\n        msp_id:\n          type: string\n          description: The msp of the identity that created the authorization header.\n          example: PeerOrg1\n        certificate:\n          type: string\n          description: The matching certificate for the identity that created the authorization header. Base 64 encoded PEM.\n          x-validate_base64_certificate: true\n        hash_ver:\n          type: string\n          description: The version of the hash function over this request. IBP consoles v2.5.* and higher should use \"v2\".\n          example: v2\n          enum:\n            - v2\n            - v1\n\n    EditSignatureCollectionBody:\n      type: object\n      required:\n        - authorize\n      properties:\n        authorize:\n          $ref: '#/components/schemas/SigTxAuth'\n        #distribute: # this field can be a string or an object, swagger won't accept that so not going to doc this field. ok b/c api is hidden.\n        #  type: any\n        orderers2sign:\n          $ref: '#/components/schemas/org2signEdit'\n        orgs2sign:\n          $ref: '#/components/schemas/org2signEdit'\n        status:\n          $ref: '#/components/schemas/SigTxStatus'\n        visibility:\n          $ref: '#/components/schemas/SigTxVisibility'\n\n    DeleteSignatureCollectionResponse:\n      type: object\n      properties:\n        message:\n          $ref: '#/components/schemas/message_ok'\n        tx_id:\n          $ref: '#/components/schemas/SigTxId'\n\n    SignatureCollectionResponse:\n      type: object\n      properties:\n        message:\n          $ref: '#/components/schemas/message_ok'\n        distribution_responses:\n          $ref: '#/components/schemas/SigDistribution'\n        ccd:\n          $ref: '#/components/schemas/SigTxCcd'\n        channel:\n          $ref: '#/components/schemas/SigTxChannel'\n        current_policy:\n          $ref: '#/components/schemas/SigTxCurrentPolicy'\n        consenters:\n          $ref: '#/components/schemas/SigTxConsenters'\n        reference_component_ids:\n          $ref: '#/components/schemas/SigTxRefs'\n        orderers:\n          $ref: '#/components/schemas/SigTxOrderers'\n        orderers2sign:\n          $ref: '#/components/schemas/org2sign'\n        orgs2sign:\n          $ref: '#/components/schemas/org2sign'\n        originator_msp:\n          $ref: '#/components/schemas/SigTxOriginator'\n        proposal:\n          $ref: '#/components/schemas/SigTxProposal'\n        tx_id:\n          $ref: '#/components/schemas/SigTxId'\n        tx_type:\n          $ref: '#/components/schemas/SigTxType'\n        visibility:\n          $ref: '#/components/schemas/SigTxVisibility'\n\n    GetPostmanResponse:\n      type: object\n      description: Response contains JSON following the Postman v2.1 collection spec. The Postman JSON structure is not documented here for brevity. Save the JSON as a file and import the file into your [Postman](https://www.postman.com/downloads) desktop application.\n\n    GetSwaggerResponse:\n      type: string\n      description: Response contains a YAML file following the OpenAPI v3.0.0 spec. The OpenAPI/Swagger structure is not documented here for brevity. Once the YAML file is saved it could be imported into various OpenAPI tools.\n\n    GetBackupsResponse:\n      type: object\n      properties:\n        ids:\n          type: array\n          items:\n            type: string\n            description: A backup id.\n            example: 03_ibp_db_backup_1592924104038\n\n    StartBackupResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Indicates if this backup was started or not.\n          example: in-progress\n        id:\n          type: string\n          description: The identifier for this backup.\n          example: 03_ibp_db_backup_1592924104038\n        url:\n          type: string\n          description: A api url to use to download the backup and see its progress.\n          example: http://localhost:3000/ak/api/v2/backups/03_ibp_db_backup_1592924104038\n\n    AttachBackupResponse:\n      type: object\n      properties:\n        message:\n          $ref: '#/components/schemas/message_ok'\n        att_name:\n          type: string\n          description: The name of the attachment.\n          example: my-attachment\n\n    AttachBackupBody:\n      type: object\n      required:\n        - attachment\n      x-validate_no_extra_keys: true\n      properties:\n        attachment:\n          type: string\n          description: The data to attach. Binary data should be hex or base 64 encoded.\n          example: dGhpcyBpcyBzb21lIGRhdGEgaSB3YW50ZWQgc3RvcmVk\n\n    StartRestoreResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Indicates if this restore was started or not.\n          example: in-progress\n        url:\n          type: string\n          description: A api url to use to checkup on the status of the restore.\n          example: http://localhost:3000/ak/api/v1/webhooks/txs/nboqur\n\n    RestoreBackupDataBody:\n      type: object\n      properties:\n        dbs:\n          type: object\n          properties:\n            athena_components:\n              $ref: '#/components/schemas/DbBackupObject'\n            athena_sessions:\n              $ref: '#/components/schemas/DbBackupObject'\n            athena_system:\n              $ref: '#/components/schemas/DbBackupObject'\n\n    DbBackupObject:\n      type: object\n      properties:\n        docs:\n          type: array\n          items:\n            type: object\n            description: A couchdb document (JSON).\n\n    RestoreBackupIdBody:\n      type: object\n      x-validate_no_extra_keys: true\n      properties:\n        client_webhook_url:\n          type: string\n          description: Provide a webhook url. This url will receive a POST request when the restore is complete. Embedded basic auth supported.\n          example: http://localhost:3000/api/v1/example/webhooks/asdf\"\n\n    GetBackupResponse:\n      type: object\n\n    ArchiveNotificationsBody:\n      type: object\n      required:\n        - notification_ids\n      properties:\n        notification_ids:\n          type: array\n          description: Array of notification IDs to archive.\n          minLength: 1\n          maxLength: 1024 # spam prevention limiter\n          items:\n            type: string\n            description: An id.\n            example: c9d00ebf849051e4f102008dc0be2488\n            minLength: 1\n            maxLength: 64\n\n    ArchiveResponse:\n      type: object\n      properties:\n        message:\n          $ref: '#/components/schemas/message_ok'\n        details:\n          type: string\n          description: Text with the number of notifications that were archived.\n          example: archived 3 notification(s)\n    #\n    #\n    #\n    #.\n    # ---------------------------------------------------------------------------------------------------------------------------------------------------------\n    # Software Schemas - ! not applicable for IBP SaaS on IBM Cloud !\n    # ---------------------------------------------------------------------------------------------------------------------------------------------------------\n    api_key:\n      type: string\n      description: The api key. Used to authenticate APIs on IBP Software.\n      example: \u003capi_key here\u003e\n    api_roles:\n      type: array\n      description: Array of all roles for the api key.\n      items:\n        type: string\n        description: A role for the api key.\n        example: reader\n        enum:\n          - reader\n          - writer\n          - manager\n    api_key_description:\n      type: string\n      description: User defined description can go here.\n      example: Batman's key\n    user_ids:\n      type: array\n      minLength: 1\n      maxLength: 128 # spam prevention limit\n      items:\n        type: string\n        description: A unique user id of a user (uuid).\n        example: b26e67a3-8f4c-40e4-b5e2-6303ad2979fc\n        minLength: 8\n        maxLength: 40 # node uuids are 36 characters\n    CreateApiKeyBody:\n      type: object\n      required:\n        - roles\n      properties:\n        roles:\n          $ref: '#/components/schemas/api_roles'\n        description:\n          $ref: '#/components/schemas/api_key_description'\n    CreateApiKeyResponse:\n      type: object\n      properties:\n        api_key:\n          $ref: '#/components/schemas/api_key'\n        api_secret:\n          type: string\n          example: \u003capi_secret here\u003e\n        roles:\n          $ref: '#/components/schemas/api_roles'\n    GetApiKeyResponse:\n      type: object\n      properties:\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/KeysResponse'\n    KeysResponse:\n      type: object\n      properties:\n        api_key:\n          $ref: '#/components/schemas/api_key'\n        ts_created:\n          type: number\n          description: UNIX timestamp of component creation, UTC, ms.\n          example: 1549490200312\n        roles:\n          $ref: '#/components/schemas/api_roles'\n        description:\n          $ref: '#/components/schemas/api_key_description'\n    DeleteApiKeyResponse:\n      type: object\n      properties:\n        deleted:\n          type: string\n          description: The value of the api key that was deleted.\n          example: \u003capi_key here\u003e\n    AddUserBody:\n      type: object\n      required:\n        - users\n      properties:\n        users:\n          type: object\n          description: The keys in this object are usernames that should be added.\n          properties:\n            someone@gmail.com:\n              type: object\n              description: The keys in this object are usernames that should be added.\n              additionalProperties: true\n              required:\n                - roles\n              properties:\n                roles:\n                  $ref: '#/components/schemas/api_roles'\n    AddUserResponse:\n      type: object\n      properties:\n        message:\n          $ref: '#/components/schemas/message_ok'\n    DeleteUserResponse:\n      type: object\n      properties:\n        uuids:\n          $ref: '#/components/schemas/user_ids'\n    EditUserBody:\n      type: object\n      required:\n        - uuids\n      properties:\n        uuids:\n          type: object\n          description: The keys in this object are uuids.\n          properties:\n            b26e67a3-8f4c-40e4-b5e2-6303ad2979fc:\n              type: object\n              properties:\n                roles:\n                  $ref: '#/components/schemas/api_roles'\n    EditUserResponse:\n      type: object\n      properties:\n        uuids:\n          $ref: '#/components/schemas/user_ids'\n    GetUsersResponse:\n      type: object\n      properties:\n        uuids:\n          $ref: '#/components/schemas/user_ids'\n    ResetPassBody:\n      type: object\n      required:\n        - uuids\n      properties:\n        uuids:\n          $ref: '#/components/schemas/user_ids'\n    ResetPassResponse:\n      type: object\n      properties:\n        uuids:\n          $ref: '#/components/schemas/user_ids'\n\n    SubmitConfigBlock:\n      type: object\n      properties:\n        b64_block:\n          type: string\n          description: The latest config block of the system channel. Base 64 encoded. To obtain this block, you must use a **Fabric API**. This config block should list this ordering node as a valid consenter on the system-channel.\n          example: bWFzc2l2ZSBiaW5hcnkgb2YgYSBjb25maWcgYmxvY2sgd291bGQgYmUgaGVyZSBpZiB0aGlzIHdhcyByZWFs\n  #\n  #\n  #\n  #.\n  # -----------------------------------------------------------------------------------------------------------------------------------------------------------\n  # Parameters\n  # -----------------------------------------------------------------------------------------------------------------------------------------------------------\n  parameters:\n    PathIdEdit:\n      name: id\n      in: path\n      description: The `id` of the component to modify. Use the [Get all components](#get-all-components) API to determine the component id.\n      required: true\n      schema:\n        type: string\n\n    PathTag:\n      name: tag\n      in: path\n      description: The tag to filter components on. Not case-sensitive.\n      required: true\n      schema:\n        type: string\n\n    PathType:\n      name: component-type\n      in: path\n      description: The type to filter components on.\n      required: true\n      schema:\n        type: string\n        enum:\n          - fabric-peer\n          - fabric-orderer\n          - fabric-ca\n          - msp\n\n    PathIdGet:\n      name: id\n      in: path\n      description: The `id` of the component to retrieve. Use the [Get all components](#get-all-components) API to determine the component id.\n      required: true\n      schema:\n        type: string\n\n    PathTxId:\n      name: id\n      in: path\n      description: The unique transaction ID of this signature collection.\n      required: true\n      schema:\n        type: string\n\n    QueryDeploymentAttrs:\n      name: deployment_attrs\n      in: query\n      description: |\n        Set to 'included' if the response should include Kubernetes deployment attributes such as 'resources', 'storage', 'zone', 'region', 'admin_certs', etc. Default responses will not include these fields.\n\n        **This parameter will not work on *imported* components.**\n\n        It's recommended to use `cache=skip` as well if up-to-date deployment data is needed.\n      required: false\n      schema:\n        type: string\n        example: included\n        enum:\n          - included\n          - omitted\n        x-validate_comp_not_imported: true\n\n    QueryParsedCerts:\n      name: parsed_certs\n      in: query\n      description: Set to 'included' if the response should include parsed PEM data along with base 64 encoded PEM string. Parsed certificate data will include fields such as the serial number, issuer, expiration, subject, subject alt names, etc. Default responses will not include these fields.\n      required: false\n      schema:\n        type: string\n        example: included\n        enum:\n          - included\n          - omitted\n\n    QueryCache:\n      name: cache\n      in: query\n      description: Set to 'skip' if the response should skip local data and fetch live data wherever possible. Expect longer response times if the cache is skipped. Default responses will use the cache.\n      required: false\n      schema:\n        type: string\n        example: skip\n        enum:\n          - skip\n          - use\n\n    QuerySigTxDetails:\n      name: full_details\n      in: query\n      description: Set to 'omitted' if the responses should be kept short and include only a summary of the transaction. The default response will include the long details.\n      required: false\n      schema:\n        type: string\n        example: included\n        enum:\n          - included\n          - omitted\n\n    QueryGroupByChannelName:\n      name: group_by\n      in: query\n      description: Set to 'channels' if an alternative response format should be used where transactions are bucketed by channel names (A 210 status code and response will be sent). The default response will not group transactions.\n      required: false\n      schema:\n        type: string\n        example: included\n        enum:\n          - channels\n          - none\n\n    QueryFilterByOrderers:\n      name: filter_orderers\n      in: query\n      description: Filter response to only contain transactions of certain orderer hostnames. Include the hostname and port of one or more orderers. The default response will not filter out transactions. The query parameter should resemble an array of strings.\n      required: false\n      schema:\n        type: string\n        example: '[\"my-orderer.ibp.us-south.containers.appdomain.cloud:3010\"]'\n\n    QueryStatus:\n      name: status\n      in: query\n      description: Filter response to only contain transactions in a desired status state. The default response will not filter out transactions.\n      required: false\n      schema:\n        type: string\n        example: all\n        enum:\n          - all\n          - closed\n          - open\n\n    QueryComponentId:\n      name: component_id\n      in: query\n      description: Filter response to only contain notifications for a particular component id. The default response will include all notifications.\n      required: false\n      schema:\n        type: string\n        example: MyPeer\n\n    QueryCaAttrs:\n      name: ca_attrs\n      in: query\n      description: |\n        Set to 'included' if the response should fetch CA attributes, inspect certificates, and append extra fields to CA and MSP component responses.\n        - CA components will have fields appended/updated with data fetched from the `/cainfo?ca=ca` endpoint of a CA, such as: `ca_name`, `root_cert`, `fabric_version`, `issuer_public_key` and `issued_known_msps`. The field `issued_known_msps` indicates imported IBP MSPs that this CA has issued. Meaning the MSP's root cert contains a signature that is derived from this CA's root cert. Only imported MSPs are checked. Default responses will not include these fields.\n        - MSP components will have the field `issued_by_ca_id` appended. This field indicates the id of an IBP console CA that issued this MSP. Meaning the MSP's root cert contains a signature that is derived from this CA's root cert. Only imported/created CAs are checked. Default responses will not include these fields.\n      required: false\n      schema:\n        type: string\n        example: included\n        enum:\n          - included\n          - omitted\n\n    QueryUuids:\n      name: uuids\n      in: query\n      description: Pass the desired uuids to delete. The query parameter should resemble an array of strings.\n      required: true\n      schema:\n        type: string\n        example: '[\"b26e67a3-8f4c-40e4-b5e2-6303ad2979fc\"]'\n\n    AuthType:\n      name: auth_type\n      in: query\n      description: |\n        - **bearer** - IAM Bearer Auth - *[Available on IBM Cloud]* - The same bearer token used to authenticate this request will be copied into the Postman collection examples. The query parameter `token` must also be set with your IAM bearer/access token value.\n        - **api_key** - IAM Api Key Auth - *[Available on IBM Cloud]* - The IAM api key will be copied into the Postman collection examples. The query parameter `api_key` must also be set with your IAM API Key value.\n        - **basic** - Basic Auth - *[Available on OpenShift \u0026 IBM Cloud Private]* - A basic auth username and password will be copied into the Postman collection examples. The query parameters `username` \u0026 `password` must also be set with your IBP api key credentials. The IBP api key is the username and the api secret is the password.\n      required: true\n      schema:\n        type: string\n        example: bearer\n        enum:\n          - bearer\n          - api_key\n          - basic\n\n    AuthUsername:\n      name: username\n      in: query\n      description: The basic auth username to use for auth in the collection.\n      required: false\n      schema:\n        type: string\n        example: admin\n\n    AuthPassword:\n      name: password\n      in: query\n      description: The basic auth password to use for auth in the collection.\n      required: false\n      schema:\n        type: string\n        example: password\n\n    AuthToken:\n      name: token\n      in: query\n      description: The IAM access/bearer token to use for auth in the collection.\n      required: false\n      schema:\n        type: string\n\n    AuthApiKey:\n      name: api_key\n      in: query\n      description: The IAM api key to use for auth in the collection.\n      required: false\n      schema:\n        type: string\n\n    PathBackupId:\n      name: id\n      in: path\n      description: The `id` of the backup.\n      required: true\n      schema:\n        type: string\n\n    PathBackupAttachment:\n      name: att_name\n      in: path\n      description: The name of the attachment.\n      required: true\n      schema:\n        type: string\n  #\n  #\n  #\n  #.\n  # -----------------------------------------------------------------------------------------------------------------------------------------------------------\n  # Security\n  # -----------------------------------------------------------------------------------------------------------------------------------------------------------\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n",
			"canonicalURL": "/github.com/hyperledger-labs/fabric-operations-console@de53e5ae5eea7b13969f1005d0383b53d0c1d4fc/-/blob/packages/athena/json_docs/json_validation/ibp_openapi_v2.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hyperledger-labs/fabric-operations-console/blob/de53e5ae5eea7b13969f1005d0383b53d0c1d4fc/packages/athena/json_docs/json_validation/ibp_openapi_v2.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/ak/api/v2/notifications\": get: responses: 401: contents: unsupported content types: [text/html]",
	"NotImplemented": [
		"unsupported content types"
	]
}