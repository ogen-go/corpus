{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/fredliporace/cbers-2-stac"
		},
		"file": {
			"name": "openapi_compiled_integrated.yaml",
			"size": 0,
			"path": "cbers2stac/openapi/openapi_compiled_integrated.yaml",
			"byteSize": 16873,
			"content": "components:\n  responses:\n    LandingPage:\n      content:\n        application/json:\n          example:\n            conformsTo:\n            - https://api.stacspec.org/v1.0.0-beta.1/core\n            description: Catalog of Copernicus Sentinel 1 and 2 imagery.\n            id: sentinel\n            links:\n            - href: http://data.example.org/\n              rel: self\n              title: this document\n              type: application/json\n            - href: http://data.example.org/api\n              rel: service-desc\n              title: the API definition\n              type: application/vnd.oai.openapi+json;version=3.0\n            - href: http://data.example.org/api.html\n              rel: service-doc\n              title: the API documentation\n              type: text/html\n            - href: http://data.example.org/sentinel-1\n              rel: child\n              title: Sentinel 1 Catalog\n              type: application/json\n            - href: http://data.example.org/sentinel-2\n              rel: child\n              title: Sentinel 2 Catalog\n              type: application/json\n            stac_version: 1.0.0-beta.1\n            title: Copernicus Sentinel Imagery\n          schema:\n            allOf:\n            - properties:\n                description:\n                  type: string\n                id:\n                  type: string\n                links:\n                  items:\n                    properties:\n                      body:\n                        description: For POST requests, the resource can specify the\n                          HTTP body as a JSON object.\n                        type: object\n                      headers:\n                        description: Object key values pairs they map to headers\n                        example:\n                          Accept: application/json\n                        type: object\n                      href:\n                        description: The location of the resource\n                        format: uri\n                        type: string\n                      merge:\n                        default: false\n                        description: 'This is only valid when the server is responding\n                          to POST request.\n\n\n                          If merge is true, the client is expected to merge the body\n                          value\n\n                          into the current request body before following the link.\n\n                          This avoids passing large post bodies back and forth when\n                          following\n\n                          links, particularly for navigating pages through the `POST\n                          /search`\n\n                          endpoint.\n\n\n                          NOTE: To support form encoding it is expected that a client\n                          be able\n\n                          to merge in the key value pairs specified as JSON\n\n                          `{\"next\": \"token\"}` will become `\u0026next=token`.'\n                        type: boolean\n                      method:\n                        default: GET\n                        description: Specifies the HTTP method that the resource expects\n                        enum:\n                        - GET\n                        - POST\n                        type: string\n                      rel:\n                        description: Relation type of the link\n                        type: string\n                      title:\n                        description: Title of the resource\n                        type: string\n                      type:\n                        description: The media type of the resource\n                        type: string\n                    required:\n                    - href\n                    - rel\n                    title: Link\n                    type: object\n                  type: array\n                stac_extensions:\n                  items:\n                    anyOf:\n                    - format: uri\n                      title: Reference to a JSON Schema\n                      type: string\n                    - title: Reference to a core extension\n                      type: string\n                  title: STAC extensions\n                  type: array\n                  uniqueItems: true\n                stac_version:\n                  example: 1.0.0-beta.2\n                  title: STAC version\n                  type: string\n                title:\n                  type: string\n              required:\n              - stac_version\n              - id\n              - description\n              - links\n              type: object\n            - properties:\n                conformsTo:\n                  description: A list of all conformance classes implemented by the\n                    server. In addition to the STAC-specific conformance classes,\n                    all OGC-related conformance classes listed at `GET /conformances`\n                    must be listed here. This entry should mirror what `GET /conformances`\n                    returns, if implemented.\n                  items:\n                    type: string\n                  type: array\n              required:\n              - conformsTo\n              type: object\n      description: 'The landing page provides links to the API definition\n\n        (link relations `service-desc` and `service-doc`)\n\n        and the Feature Collections (path `/collections`, link relation\n\n        `data`).'\n  schemas:\n    landingPage:\n      allOf:\n      - properties:\n          description:\n            type: string\n          id:\n            type: string\n          links:\n            items:\n              properties:\n                body:\n                  description: For POST requests, the resource can specify the HTTP\n                    body as a JSON object.\n                  type: object\n                headers:\n                  description: Object key values pairs they map to headers\n                  example:\n                    Accept: application/json\n                  type: object\n                href:\n                  description: The location of the resource\n                  format: uri\n                  type: string\n                merge:\n                  default: false\n                  description: 'This is only valid when the server is responding to\n                    POST request.\n\n\n                    If merge is true, the client is expected to merge the body value\n\n                    into the current request body before following the link.\n\n                    This avoids passing large post bodies back and forth when following\n\n                    links, particularly for navigating pages through the `POST /search`\n\n                    endpoint.\n\n\n                    NOTE: To support form encoding it is expected that a client be\n                    able\n\n                    to merge in the key value pairs specified as JSON\n\n                    `{\"next\": \"token\"}` will become `\u0026next=token`.'\n                  type: boolean\n                method:\n                  default: GET\n                  description: Specifies the HTTP method that the resource expects\n                  enum:\n                  - GET\n                  - POST\n                  type: string\n                rel:\n                  description: Relation type of the link\n                  type: string\n                title:\n                  description: Title of the resource\n                  type: string\n                type:\n                  description: The media type of the resource\n                  type: string\n              required:\n              - href\n              - rel\n              title: Link\n              type: object\n            type: array\n          stac_extensions:\n            items:\n              anyOf:\n              - format: uri\n                title: Reference to a JSON Schema\n                type: string\n              - title: Reference to a core extension\n                type: string\n            title: STAC extensions\n            type: array\n            uniqueItems: true\n          stac_version:\n            example: 1.0.0-beta.2\n            title: STAC version\n            type: string\n          title:\n            type: string\n        required:\n        - stac_version\n        - id\n        - description\n        - links\n        type: object\n      - properties:\n          conformsTo:\n            description: A list of all conformance classes implemented by the server.\n              In addition to the STAC-specific conformance classes, all OGC-related\n              conformance classes listed at `GET /conformances` must be listed here.\n              This entry should mirror what `GET /conformances` returns, if implemented.\n            items:\n              type: string\n            type: array\n        required:\n        - conformsTo\n        type: object\ninfo:\n  contact:\n    name: STAC Specification\n    url: http://stacspec.org\n  description: This is an OpenAPI definition of the core SpatioTemporal Asset Catalog\n    API specification. Any service that implements this endpoint to allow discovery\n    of spatiotemporal assets can be considered a STAC API.\n  license:\n    name: Apache License 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0\n  title: The SpatioTemporal Asset Catalog API - Core\n  version: 1.0.0-beta.1\nopenapi: 3.0.3\npaths:\n  /:\n    get:\n      description: 'Returns the root STAC Catalog or STAC Collection that is the entry\n        point\n\n        for users to browse with STAC Browser or for search engines to crawl.\n\n        This can either return a single STAC Collection or more commonly a STAC\n\n        catalog.\n\n\n        The landing page provides links to the\n\n        API definition (link relations `service-desc` and `service-doc`)\n\n        and the STAC records such as collections/catalogs (link relation `child`)\n\n        or items (link relation `item`).\n\n\n        Extensions may add additional links with new relation types.'\n      operationId: getLandingPage\n      responses:\n        '200':\n          content:\n            application/json:\n              example:\n                conformsTo:\n                - https://api.stacspec.org/v1.0.0-beta.1/core\n                description: Catalog of Copernicus Sentinel 1 and 2 imagery.\n                id: sentinel\n                links:\n                - href: http://data.example.org/\n                  rel: self\n                  title: this document\n                  type: application/json\n                - href: http://data.example.org/api\n                  rel: service-desc\n                  title: the API definition\n                  type: application/vnd.oai.openapi+json;version=3.0\n                - href: http://data.example.org/api.html\n                  rel: service-doc\n                  title: the API documentation\n                  type: text/html\n                - href: http://data.example.org/sentinel-1\n                  rel: child\n                  title: Sentinel 1 Catalog\n                  type: application/json\n                - href: http://data.example.org/sentinel-2\n                  rel: child\n                  title: Sentinel 2 Catalog\n                  type: application/json\n                stac_version: 1.0.0-beta.1\n                title: Copernicus Sentinel Imagery\n              schema:\n                allOf:\n                - properties:\n                    description:\n                      type: string\n                    id:\n                      type: string\n                    links:\n                      items:\n                        properties:\n                          body:\n                            description: For POST requests, the resource can specify\n                              the HTTP body as a JSON object.\n                            type: object\n                          headers:\n                            description: Object key values pairs they map to headers\n                            example:\n                              Accept: application/json\n                            type: object\n                          href:\n                            description: The location of the resource\n                            format: uri\n                            type: string\n                          merge:\n                            default: false\n                            description: 'This is only valid when the server is responding\n                              to POST request.\n\n\n                              If merge is true, the client is expected to merge the\n                              body value\n\n                              into the current request body before following the link.\n\n                              This avoids passing large post bodies back and forth\n                              when following\n\n                              links, particularly for navigating pages through the\n                              `POST /search`\n\n                              endpoint.\n\n\n                              NOTE: To support form encoding it is expected that a\n                              client be able\n\n                              to merge in the key value pairs specified as JSON\n\n                              `{\"next\": \"token\"}` will become `\u0026next=token`.'\n                            type: boolean\n                          method:\n                            default: GET\n                            description: Specifies the HTTP method that the resource\n                              expects\n                            enum:\n                            - GET\n                            - POST\n                            type: string\n                          rel:\n                            description: Relation type of the link\n                            type: string\n                          title:\n                            description: Title of the resource\n                            type: string\n                          type:\n                            description: The media type of the resource\n                            type: string\n                        required:\n                        - href\n                        - rel\n                        title: Link\n                        type: object\n                      type: array\n                    stac_extensions:\n                      items:\n                        anyOf:\n                        - format: uri\n                          title: Reference to a JSON Schema\n                          type: string\n                        - title: Reference to a core extension\n                          type: string\n                      title: STAC extensions\n                      type: array\n                      uniqueItems: true\n                    stac_version:\n                      example: 1.0.0-beta.2\n                      title: STAC version\n                      type: string\n                    title:\n                      type: string\n                  required:\n                  - stac_version\n                  - id\n                  - description\n                  - links\n                  type: object\n                - properties:\n                    conformsTo:\n                      description: A list of all conformance classes implemented by\n                        the server. In addition to the STAC-specific conformance classes,\n                        all OGC-related conformance classes listed at `GET /conformances`\n                        must be listed here. This entry should mirror what `GET /conformances`\n                        returns, if implemented.\n                      items:\n                        type: string\n                      type: array\n                  required:\n                  - conformsTo\n                  type: object\n          description: 'The landing page provides links to the API definition\n\n            (link relations `service-desc` and `service-doc`)\n\n            and the Feature Collections (path `/collections`, link relation\n\n            `data`).'\n        '500':\n          content:\n            application/json:\n              schema:\n                description: 'Information about the exception: an error code plus\n                  an optional description.'\n                properties:\n                  code:\n                    type: string\n                  description:\n                    type: string\n                required:\n                - code\n                type: object\n          description: An error occurred.\n      summary: landing page\n      tags:\n      - Core\n      x-amazon-apigateway-integration:\n        type: aws_proxy\n        httpMethod: post\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LandingEndpointLambda.Arn}/invocations\n\ntags:\n- description: essential characteristics of a STAC API\n  name: Core\n",
			"canonicalURL": "/github.com/fredliporace/cbers-2-stac@821818b522a6582972a08d67dd59333ef72f258b/-/blob/cbers2stac/openapi/openapi_compiled_integrated.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/fredliporace/cbers-2-stac/blob/821818b522a6582972a08d67dd59333ef72f258b/cbers2stac/openapi/openapi_compiled_integrated.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/\": get: responses: 200: contents: application/json: generate schema: allOf: field stac_extensions: item: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}