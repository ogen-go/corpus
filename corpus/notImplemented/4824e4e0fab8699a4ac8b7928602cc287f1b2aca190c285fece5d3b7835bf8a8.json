{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "clarify.io-1.3.7-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/clarify.io-1.3.7-swagger.yaml",
			"byteSize": 60064,
			"content": "openapi: 3.0.0\ninfo:\n  description: The API to Search and Understand Audio \u0026 Video Data.\n  title: api.clarify.io\n  version: 1.3.7\n  x-apisguru-categories:\n    - search\n  x-logo:\n    backgroundColor: \"#65A8B5\"\n    url: https://twitter.com/clarifyio/profile_image?size=original\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.18\n      format: swagger\n      url: https://api.clarify.io/api-docs\n      version: \"1.2\"\n  x-providerName: clarify.io\ntags:\n  - name: bundles\n  - name: reports\n  - name: search\npaths:\n  /v1/bundles:\n    get:\n      description: Gets the list of bundles. Links to each item are in the _links with link\n        relation \u003cb\u003eitems\u003c/b\u003e.\u003cbr/\u003e\u003cbr/\u003eAfter getting the initial list, use the\n        \u003cb\u003efirst\u003c/b\u003e, \u003cb\u003elast\u003c/b\u003e, \u003cb\u003enext\u003c/b\u003e, \u003cb\u003eprev\u003c/b\u003e link relations to\n        get more bundles in the list. Note that \u003cb\u003enext\u003c/b\u003e will not be\n        available at the end of the list and \u003cb\u003eprev\u003c/b\u003e will not be available\n        at the start of the list. If the results are exactly one page neither\n        \u003cb\u003eprev\u003c/b\u003e nor \u003cb\u003enext\u003c/b\u003e will be available.\u003cbr/\u003e\u003cbr/\u003eThe \u003cb\u003eembed\u003c/b\u003e\n        parameter specifies link relations to embed in the results. The models\n        for the specified link relations will be in an array in the embedded\n        object with the link relation as the key. For example, if you do\n        embed=items, _embedded will contain a property \u003cb\u003eitems\u003c/b\u003e whose value\n        is the array of bundle models. For link relations that are curies (ex.\n        \"clarify:metadata\"), you may simply use the base name (ex. \"metadata\").\n      parameters:\n        - description: limit results to specified number of bundles. Default is 10. Max 100.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - description: \"list of link relations to embed in the result collection. Zero or\n            more of: items, tracks, metadata, insights. List is space or comma\n            separated single string or an array of strings\"\n          in: query\n          name: embed\n          required: false\n          schema:\n            type: string\n        - description: optional opaque value, automatically provided in next/prev links, or\n            literal \"first\", \"last\"\n          in: query\n          name: iterator\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Collection\"\n        \"400\":\n          description: Bad request\n      summary: List bundles\n      tags:\n        - bundles\n    post:\n      description: 'Create a new bundle with the specified name, media url, and optional\n        JSON metadata.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003ename\u003c/b\u003e can be any string you wish to\n        associate with the bundle.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003emedia_url\u003c/b\u003e must be a publicly\n        accessible url to a media file. It will be fetched asynchronously after\n        the REST call returns. The audio can be mono or\n        stereo.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003eaudio_channel\u003c/b\u003e is used to specify audio channels\n        if the media is a stereo file. A value of \u003ci\u003eleft\u003c/i\u003e or \u003ci\u003eright\u003c/i\u003e\n        signifies that only the specified channel will be used. If no value or\n        an empty string is specified for \u003cb\u003eaudio_channel\u003c/b\u003e, all channels will\n        be used in a single track. If your stereo channels were recorded\n        separately with each channel containing distinct content (for example if\n        2 legs of a phone call were recorded separately and combined into a\n        single stereo file), for best speech recognition, create two tracks,\n        with \u003cb\u003eaudio_channel\u003c/b\u003e set to \u003ci\u003eleft\u003c/i\u003e and \u003ci\u003eright\u003c/i\u003e in each\n        track respectively. If your stereo file is simply a recording made with\n        a stereo microphone, \u003cb\u003eaudio_channel\u003c/b\u003e should be set to an empty\n        string (or not be specified.) If you have audio channels as separate\n        media files, after creating the bundle with one \u003cb\u003emedia_url\u003c/b\u003e, POST\n        another \u003cb\u003emedia_url\u003c/b\u003e to\n        /bundles/{bundle_id}/tracks.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003eaudio_language\u003c/b\u003e can be used\n        to specify the language of the audio media. This is an optional\n        parameter and if not specified or an empty string, the language of the\n        track will be automatically detected. If specified, it must be a\n        language code as described in RFC5646 (see \u003ca\n        href=\"http://tools.ietf.org/html/rfc5646\"\n        target=\"_blank\"\u003ehttp://tools.ietf.org/html/rfc5646\u003c/a\u003e). Supported\n        languages: en-US, en-UK, es, fr.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003elabel\u003c/b\u003e is a short name\n        for the track.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003emetadata\u003c/b\u003e is a single-level JSON object of\n        your own definition, containing key-values that can be searched and\n        filtered on. Metadata can be used to hold text such as names, titles,\n        descriptions and values for segregating bundles, for example by user,\n        topic, folder name etc. The keys (property names) can be up to 64\n        characters and must contain only alphanumeric characters and underscore\n        (but not start with underscore) and must not be a reserved name.\n        Reserved names are \u0026quot;true\u0026quot;, \u0026quot;false\u0026quot;, and\n        \u0026quot;null\u0026quot;. Values can be strings, numbers, boolean true/false,\n        date-times represented as a string in ISO 8601 format (ex.\n        \u0026quot;2014-02-25T14:23:45.000Z\u0026quot;), or an array of these primitive\n        types. Strings can be up to 2000 characters and strings in arrays can be\n        up to 128 characters each. Nested objects are not allowed. Metadata can\n        contain up to 50 key-value pairs up to a total JSON size of 4000\n        characters.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003estart_time\u003c/b\u003e a time in seconds that the media\n        starts, relative to start time of the bundle. This allows you to specify\n        sequential parts of media. If not specified, the default is\n        0.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003eparts_pending\u003c/b\u003e a boolean flag specifying if more media\n        parts will subsequently be added to the track. If true, a subsequent API\n        call must be made to signify that the track is complete. If not\n        specified, the default is false.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003eexternal_id\u003c/b\u003e is an\n        optional parameter that can be used to logically link a bundle to an\n        item in an external system. The \u003cb\u003eexternal_id\u003c/b\u003e can be whatever you\n        use to identify items in your own database.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003enotify_url\u003c/b\u003e\n        is a webhook. It must be a publicly accessible url (http or https) on\n        your server to which notifications for the bundle will be POSTed. There\n        are three types of notifications: Track Notifications, Insight\n        Notifications and Bundle Notifications. For more information on the\n        content of notifications and when they are sent, see the \u003ca\n        href=\"http://docs.clarify.io/overview/#notifications\"\n        target=\"clarify\"\u003enotification docs page\u003c/a\u003e.\u003cbr/\u003e\u003cbr/\u003eIf a track was\n        created along with the budle, the link relation \u003cb\u003eclarify:track\u003c/b\u003e\n        will be included with a link to the new track.'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Name of the bundle. Up to 128 characters.\n                  type: string\n                media_url:\n                  description: URL of a media (audio or video) file for this bundle. Up to\n                    2083 characters.\n                  type: string\n                audio_channel:\n                  description: The audio channel to use for the track ( \"\" | left | right\n                    ). Default is empty string which means all channels of audio\n                    in the media file are used for the track.\n                  type: string\n                  enum:\n                    - left\n                    - right\n                audio_language:\n                  description: Language of the audio in the track, specified with an\n                    RFC5646 code.\n                  type: string\n                  enum:\n                    - en-US\n                    - en-UK\n                    - es\n                    - fr\n                start_time:\n                  description: Time offset in seconds that the media starts relative to the\n                    bundle. Default is 0.\n                  type: number\n                parts_pending:\n                  description: Set to true if more media parts will be added to the track.\n                    Default is false.\n                  type: boolean\n                label:\n                  description: Label for the track (if media_url is specified.) Up to 128\n                    characters.\n                  type: string\n                metadata:\n                  description: User-defined JSON data associated with the bundle. Must be\n                    valid JSON, up to 4000 characters.\n                  type: string\n                notify_url:\n                  description: URL for notifications on this bundle. Up to 2083 characters.\n                  type: string\n                external_id:\n                  description: A string that can refer to an item in an external system. Up\n                    to 128 characters.\n                  type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Ref_of_Bundle_\"\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad request\n      summary: Create a bundle\n      tags:\n        - bundles\n  \"/v1/bundles/{bundle_id}\":\n    delete:\n      description: Delete a bundle and its related metadata and tracks. This will only\n        delete media stored on Clarify systems and not delete the source media\n        on remote systems.\u003cbr/\u003e\u003cbr/\u003eSuccessful response will be a HTTP code 204\n        with an empty body.\n      parameters:\n        - description: id of a bundle\n          in: path\n          name: bundle_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n        \"204\":\n          description: No Content (success)\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n      summary: Delete a bundle\n      tags:\n        - bundles\n    get:\n      description: Get a bundle that has previously been created.\n      parameters:\n        - description: id of a bundle\n          in: path\n          name: bundle_id\n          required: true\n          schema:\n            type: string\n        - description: \"list of link relations to embed in the result bundle. Zero or more\n            of: tracks, metadata, insights. List is space or comma separated\n            single string or an array of strings\"\n          in: query\n          name: embed\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Bundle\"\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n      summary: Get a bundle\n      tags:\n        - bundles\n    put:\n      description: \"Update a bundle. To update the tracks, media, or metadata of a bundle,\n        use the tracks and metadata endpoints.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003ename\u003c/b\u003e can be any\n        string you wish to associate with the\n        bundle.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003eexternal_id\u003c/b\u003e is an optional parameter that can be\n        used to logically link a bundle to an item in an external system. The\n        \u003cb\u003eexternal_id\u003c/b\u003e can be whatever you use to identify items in your own\n        database.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003enotify_url\u003c/b\u003e is a webhook. It must be a publicly\n        accessible url (http or https) on your server to which notifications for\n        the bundle will be POSTed. There are three types of notifications: Track\n        Notifications, Insight Notifications and Bundle Notifications. For more\n        information on the content of notifications and when they are sent, see\n        the \u003ca href=\\\"http://docs.clarify.io/overview/#notifications\\\"\n        target=\\\"clarify\\\"\u003enotification docs page\u003c/a\u003e.\u003cbr/\u003e\u003cbr/\u003eIf\n        \u003cb\u003eversion\u003c/b\u003e is specified, the bundle will only be updated if the\n        current version matches this parameter value. If the version doesn't\n        match, a 409 Conflict error will be returned. If version not specified,\n        the bundle will always be updated.\"\n      parameters:\n        - description: id of a bundle\n          in: path\n          name: bundle_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Name of the bundle. Up to 128 characters.\n                  type: string\n                notify_url:\n                  description: URL for notifications on this bundle. Up to 2083 characters.\n                  type: string\n                external_id:\n                  description: A string that can refer to an item in an external system. Up\n                    to 128 characters.\n                  type: string\n                version:\n                  description: Object version.\n                  type: integer\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Ref_of_Bundle_\"\n        \"202\":\n          description: Accepted\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n        \"409\":\n          description: Conflict\n      summary: Update a bundle\n      tags:\n        - bundles\n  \"/v1/bundles/{bundle_id}/insights\":\n    get:\n      description: Gets the insights for a bundle.\u003cbr/\u003e\u003cbr/\u003eURLs of the available insights\n        for the bundle are in the _links object, with the link relations (keys)\n        of the format \u003cb\u003einsight:insight_name\u003c/b\u003e.\u003cbr/\u003e\u003cbr/\u003eDocumentation on the\n        insights available and the data returned can be found at \u003ca\n        target=\"clarify\"\n        href=\"http://docs.clarify.io/insights/\"\u003ehttp://docs.clarify.io/insights/\u003c/a\u003e\n      parameters:\n        - description: id of a bundle\n          in: path\n          name: bundle_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Insights\"\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n      summary: Get bundle insights\n      tags:\n        - bundles\n    post:\n      description: Request an insight to be run on a bundle. Note that most insights are\n        set to automatically run on all bundles so you commonly won\u0026apos;t need\n        to call this endpoint except to request transcripts. To configure which\n        insights are automatically run for an app, visit the \u003ca\n        href=\"https://developer.clarify.io\" target=\"clarify\"\u003eClarify Developer\n        Portal\u003c/a\u003e.\u003cbr/\u003e\u003cbr/\u003e Insights that are not configured to autorun can be\n        requested to run on an individual bundle using this endpoint. The\n        following insights can be requested:\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003etranscript_r9\u003c/b\u003e -\n        High-accuracy transcript of the speech in audio\n        media.\u003cbr/\u003e\u003cbr/\u003eTranscripts will produced on the mixed audio of all\n        tracks in the bundle and are charged per minute (rounded up for partial\n        minutes), based on the duration of the longest track. If the request has\n        already been made, this method has no effect other than to return the\n        existing insight.\u003cbr/\u003e\u003cbr/\u003eTranscripts will typically take about 48\n        hours. When the transcript is ready, an InsightNotification webhook will\n        be POSTed to the bundle \u003cb\u003enotify_url\u003c/b\u003e.\u003cbr/\u003e\u003cbr/\u003eFor more information\n        see \u003ca href=\"http://docs.clarify.io/quickstarts/human-transcripts.html\"\n        title=\"human transcripts\" target=\"clarify\"\u003eHuman Transcripts Quick\n        Start\u003c/a\u003e.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003ecaptions_r9\u003c/b\u003e - High-accuracy captions of the\n        speech in video media.\u003cbr/\u003e\u003cbr/\u003eCaptions will be generated on the first\n        track in the bundle. and are charged per minute (rounded up for partial\n        minutes), based on the duration of the media.  See the \u003ca\n        href=\"http://clarify.io/pricing\" title=\"pricing\"\n        target=\"clarify\"\u003epricing page\u003c/a\u003e. If the request has already been made,\n        this method has no effect other than to return the existing\n        insight.\u003cbr/\u003e\u003cbr/\u003eCaptions will typically take about 72 hours. When the\n        captions are ready, an InsightNotification webhook will be POSTed to the\n        bundle \u003cb\u003enotify_url\u003c/b\u003e.\u003cbr/\u003e\u003cbr/\u003eFor more information see \u003ca\n        href=\"http://docs.clarify.io/quickstarts/closed-captions.html\"\n        title=\"captions\" target=\"clarify\"\u003eCaptions Quick\n        Start\u003c/a\u003e.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003espoken_keywords\u003c/b\u003e - Spoken words of interest\n        found in audio media. \u003cb\u003eNote:\u003c/b\u003e Normally spoken_keywords is set to\n        autorun so you do not need to run it\n        explicitly.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003espoken_topics\u003c/b\u003e - Topics spoken about in the\n        audio media.\n      parameters:\n        - description: id of a bundle\n          in: path\n          name: bundle_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                insight:\n                  description: \"name of the insight: transcript_r9, captions_r9,\n                    spoken_keywords, spoken_topics, spoken_words\"\n                  type: string\n                  enum:\n                    - transcript_r9\n                    - captions_r9\n                    - spoken_keywords\n                    - spoken_topics\n                    - spoken_words\n              required:\n                - insight\n      responses:\n        \"200\":\n          description: OK if the insight already exists\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Insight\"\n        \"202\":\n          description: Accepted if the insight has been requested and is queued for\n            processing\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n        \"409\":\n          description: Conflict if tracks have a status of error\n      summary: Request an insight to be run\n      tags:\n        - bundles\n  \"/v1/bundles/{bundle_id}/insights/{insight_id}\":\n    get:\n      description: Gets a particular insight for a bundle. Typically, you will hit this\n        endpoint from a link contained in a response to\n        \u003cb\u003e/v1/bundles/{bundle_id}/insights\u003c/b\u003e\u003cbr/\u003e\u003cbr/\u003eThe insight response\n        may contain a \u003cb\u003edata\u003c/b\u003e object containing insight-specific data and/or\n        an array of objects called \u003cb\u003etrack_data\u003c/b\u003e, where the array indexes\n        correspond to the tracks in the bundle. Each object in the array\n        contains the \u003cb\u003etrack_id\u003c/b\u003e, \u003cb\u003etrack_label\u003c/b\u003e and insight-specific\n        data related to that insight. For example, in the \u003cb\u003espoken_words\u003c/b\u003e\n        insight, the \u003cb\u003etrack_data\u003c/b\u003e objects contain the field\n        \u003cb\u003eword_count\u003c/b\u003e which is the number of spoken words found in the\n        track.\u003cbr/\u003e\u003cbr/\u003eDocumentation on the insights available and the data\n        returned can be found at \u003ca target=\"clarify\"\n        href=\"http://docs.clarify.io/insights/\"\u003ehttp://docs.clarify.io/insights/\u003c/a\u003e\u003cbr/\u003e\u003cbr/\u003eInsights\n        that contain data in different file formats (such as for video captions)\n        will have one or more link relations in the _links array for the\n        corresponding data. Note that the href URLs in these links have a\n        limited lifespan and should not be stored locally.\n      operationId: v1bundlesbundle_idinsightsinsight_id\n      parameters:\n        - description: id of a bundle\n          in: path\n          name: bundle_id\n          required: true\n          schema:\n            type: string\n        - description: id of an insight\n          in: path\n          name: insight_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Insight\"\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n      summary: Get bundle insight\n      tags:\n        - bundles\n  \"/v1/bundles/{bundle_id}/metadata\":\n    delete:\n      description: Delete the metadata of a bundle and set data to {} (empty object.) This\n        is functionally equivalent to an update metadata request with data set\n        to {}.\u003cbr/\u003e\u003cbr/\u003eSuccessful response will be a HTTP code 204 with an\n        empty body.\n      parameters:\n        - description: id of a bundle\n          in: path\n          name: bundle_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n        \"204\":\n          description: No Content (success)\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n      summary: Delete bundle metadata\n      tags:\n        - bundles\n    get:\n      description: Gets the metadata for a bundle.\n      parameters:\n        - description: id of a bundle\n          in: path\n          name: bundle_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n      summary: Get bundle metadata\n      tags:\n        - bundles\n    put:\n      description: Update the metadata for a bundle.\u003cbr/\u003e\u003cbr/\u003eThe metadata is a\n        single-level JSON object of your own definition, containing key-values\n        that can be searched and filtered on. Metadata can be used to hold text\n        such as names, titles, descriptions and values for segregating bundles,\n        for example by user, topic, folder name etc. The keys (property names)\n        can be up to 64 characters and must contain only alphanumeric characters\n        and underscore (but not start with underscore) and must not be a\n        reserved name. Reserved names are \u0026quot;true\u0026quot;, \u0026quot;false\u0026quot;,\n        and \u0026quot;null\u0026quot;. Values can be strings, numbers, boolean\n        true/false, date-times represented as a string in ISO 8601 format (ex.\n        \u0026quot;2014-02-25T14:23:45.000Z\u0026quot;), or an array of these primitive\n        types. Strings can be up to 2000 characters and strings in arrays can be\n        up to 128 characters each. Nested objects are not allowed. Metadata can\n        contain up to 50 key-value pairs up to a total JSON size of 4000\n        characters.\u003cbr/\u003e\u003cbr/\u003eTo clear the metadata for a bundle, send\n        \u003cb\u003edata\u003c/b\u003e={}.\u003cbr/\u003e\u003cbr/\u003eIf \u003cb\u003eversion\u003c/b\u003e specified, the metadata will\n        only be updated if the current version matches this parameter value. If\n        the version doesn't match, a 409 Conflict will be returned. If version\n        not specified, the metadata will always be updated.\n      parameters:\n        - description: id of a bundle\n          in: path\n          name: bundle_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                data:\n                  description: User-defined JSON data associated with the bundle. Must be\n                    valid JSON, up to 4000 characters.\n                  type: string\n                version:\n                  description: Object version.\n                  type: integer\n              required:\n                - data\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Ref\"\n        \"202\":\n          description: Accepted\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n        \"409\":\n          description: Conflict\n      summary: Update bundle metadata\n      tags:\n        - bundles\n  \"/v1/bundles/{bundle_id}/tracks\":\n    delete:\n      description: Delete tracks of a bundle. This will only delete media stored on Clarify\n        systems and not delete the source media on remote\n        systems.\u003cbr/\u003e\u003cbr/\u003eSuccessful response will be a HTTP code 204 with an\n        empty body.\n      parameters:\n        - description: id of a bundle\n          in: path\n          name: bundle_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n        \"204\":\n          description: No Content (success)\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n      summary: Delete bundle tracks\n      tags:\n        - bundles\n    get:\n      description: Gets the array of tracks for a bundle. This includes the specification\n        of the media and the status of fetching and processing\n        it.\u003cbr/\u003e\u003cbr/\u003eMedia for tracks is fetched asynchronously. Until media has\n        been retrieved, a track\u0026apos;s \u003cb\u003eduration\u003c/b\u003e and \u003cb\u003esize\u003c/b\u003e will both\n        be set to -1.\n      parameters:\n        - description: id of a bundle\n          in: path\n          name: bundle_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Tracks\"\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n      summary: Get bundle tracks\n      tags:\n        - bundles\n    post:\n      description: \"Add a new track to a bundle. This will insert or append a new track in\n        the tracks array or return an error if the maximum number of tracks (12)\n        has been reached or the track number specifies an invalid\n        index.\u003cbr/\u003e\u003cbr/\u003eOnce all media parts have been added to a track it is\n        immutable, meaning it cannot be modified. If you wish to modify a track,\n        simply add a new one and delete the existing one.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003elabel\u003c/b\u003e\n        is a short name for the track.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003emedia_url\u003c/b\u003e must be a\n        publicly accessible url to a media file. It will be fetched\n        asynchronously after the REST call returns. The audio can be mono or\n        stereo.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003eaudio_channel\u003c/b\u003e is used to specify audio channels\n        if the media is a stereo file. A value of \u003ci\u003eleft\u003c/i\u003e or \u003ci\u003eright\u003c/i\u003e\n        signifies that only the specified channel will be used. If no value or\n        an empty string is specified for \u003cb\u003eaudio_channel\u003c/b\u003e, all channels will\n        be used in a single track. If your stereo channels were recorded\n        separately with each channel containing distinct content (for example if\n        2 legs of a phone call were recorded separately and combined into a\n        single stereo file), for best speech recognition, create two tracks with\n        \u003cb\u003eaudio_channel\u003c/b\u003e to be \u003ci\u003eleft\u003c/i\u003e and \u003ci\u003eright\u003c/i\u003e. If your stereo\n        file is simply a recording made with a stereo microphone,\n        \u003cb\u003eaudio_channel\u003c/b\u003e should be set to an empty string (or not be\n        specified.)\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003eaudio_language\u003c/b\u003e can be used to specify the\n        language of the audio media. This is an optional parameter and if not\n        specified or an empty string, the language of the track will be\n        automatically detected. If specified, it must be a language code as\n        described in RFC5646 (see \u003ca href=\\\"http://tools.ietf.org/html/rfc5646\\\"\n        target=\\\"_blank\\\"\u003ehttp://tools.ietf.org/html/rfc5646\u003c/a\u003e). Supported\n        languages: en-US, en-UK, es, fr.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003estart_time\u003c/b\u003e a time in\n        seconds that the media starts, relative to start time of the bundle.\n        This allows you to specify sequential parts of media. If not specified,\n        the default is 0.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003eparts_pending\u003c/b\u003e a boolean flag\n        specifying if more media parts will subsequently be added to the track.\n        If true, a subsequent API call must be made to signify that the track is\n        complete. If not specified, the default is false.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003etrack\u003c/b\u003e\n        is the index in the tracks array where the new track will be added.\n        Track numbers start at 0. If this parameter is not specified the new\n        track will always be appended to the end of the array. If the track\n        specified is greater than the last index of the array + 1, an error will\n        be returned.\u003cbr/\u003e\u003cbr/\u003eIf \u003cb\u003eversion\u003c/b\u003e specified, the track will only\n        be added if the current version matches this parameter value. If the\n        version doesn't match, a 409 Conflict error will be returned. If version\n        not specified, the track will always be updated.\"\n      parameters:\n        - description: id of a bundle\n          in: path\n          name: bundle_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                label:\n                  description: Label for the track. Up to 128 characters.\n                  type: string\n                media_url:\n                  description: URL of a media file for this bundle. Up to 2083 characters.\n                  type: string\n                audio_channel:\n                  description: The audio channel to use for the track ( \"\" | left | right\n                    ). Default is empty string which means all channels of audio\n                    in the media file are used for the track.\n                  type: string\n                  enum:\n                    - left\n                    - right\n                audio_language:\n                  description: Language of the audio in the track, specified with an\n                    RFC5646 code.\n                  type: string\n                  enum:\n                    - en-US\n                    - en-UK\n                    - es\n                    - fr\n                start_time:\n                  description: Time offset in seconds that the media starts relative to the\n                    bundle. Default is 0.\n                  type: number\n                parts_pending:\n                  description: Set to true if more media parts will be added to the track.\n                    Default is false.\n                  type: boolean\n                track:\n                  description: Track number specifies the index of the new track in the\n                    tracks array. An integer from 0 to 11. If not specified, the\n                    new track is appended to the array.\n                  type: integer\n                  maximum: 11\n                version:\n                  description: Object version.\n                  type: integer\n              required:\n                - media_url\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Ref_of_Track_\"\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n        \"409\":\n          description: Conflict\n      summary: Add a track for a bundle\n      tags:\n        - bundles\n    put:\n      description: Update tracks for a bundle.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003eparts_complete\u003c/b\u003e a boolean\n        \u003ccode\u003etrue\u003c/code\u003e or \u003ccade\u003efalse\u003c/code\u003e. If true, any tracks in the\n        PENDING state will be queued for processing and no more media parts may\n        be added to the tracks. Default is false.\u003cbr/\u003e\u003cbr/\u003eIf \u003cb\u003eversion\u003c/b\u003e\n        specified, the track will only be updated if the current version matches\n        this parameter value. If the version doesn't match, a 409 Conflict error\n        will be returned. If version not specified, the track will always be\n        updated.\n      parameters:\n        - description: id of a bundle\n          in: path\n          name: bundle_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                parts_complete:\n                  description: Set to true if media parts in all tracks are complete.\n                    Default is false.\n                  type: boolean\n                version:\n                  description: Object version.\n                  type: integer\n              required:\n                - parts_complete\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Ref\"\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n        \"409\":\n          description: Conflict\n      summary: Update a tracks for a bundle\n      tags:\n        - bundles\n  \"/v1/bundles/{bundle_id}/tracks/{track_id}\":\n    delete:\n      description: Delete a track of a bundle. This will only delete media stored on\n        Clarify systems and not delete the source media on remote\n        systems.\u003cbr/\u003e\u003cbr/\u003eSuccessful response will be a HTTP code 204 with an\n        empty body.\n      parameters:\n        - description: id of a bundle\n          in: path\n          name: bundle_id\n          required: true\n          schema:\n            type: string\n        - description: id of a track\n          in: path\n          name: track_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n        \"204\":\n          description: No Content (success)\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n      summary: Delete a bundle track\n      tags:\n        - bundles\n    get:\n      description: Gets a single track in a bundle. This includes the specification of the\n        media and the status of fetching and processing it.\u003cbr/\u003e\u003cbr/\u003eMedia for a\n        track is fetched asynchronously. Until media has been retrieved, a\n        track\u0026apos;s \u003cb\u003eduration\u003c/b\u003e and \u003cb\u003esize\u003c/b\u003e will both be set to -1.\n      parameters:\n        - description: id of a bundle\n          in: path\n          name: bundle_id\n          required: true\n          schema:\n            type: string\n        - description: id of a track\n          in: path\n          name: track_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Track\"\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n      summary: Get bundle track\n      tags:\n        - bundles\n    put:\n      description: \"Add media to an existing track of a bundle. This can only be called on\n        a track that currently has no media set or has parts\n        pending.\u003cbr/\u003e\u003cbr/\u003eOnce all media parts have been added to a track it is\n        immutable, meaning it cannot be modified. If you wish to modify a track,\n        simply add a new one and delete the existing\n        one.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003emedia_url\u003c/b\u003e must be a publicly accessible url to a\n        media file. It will be fetched asynchronously after the REST call\n        returns. The audio can be mono or stereo.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003eaudio_channel\u003c/b\u003e\n        is used to specify audio channels if the media is a stereo file. A value\n        of \u003ci\u003eleft\u003c/i\u003e or \u003ci\u003eright\u003c/i\u003e signifies that only the specified channel\n        will be used. If no value or an empty string is specified for\n        \u003cb\u003eaudio_channel\u003c/b\u003e, all channels will be used in a single track. If\n        your stereo channels were recorded separately with each channel\n        containing distinct content (for example if 2 legs of a phone call were\n        recorded separately and combined into a single stereo file), for best\n        speech recognition, create two tracks with \u003cb\u003eaudio_channel\u003c/b\u003e to be\n        \u003ci\u003eleft\u003c/i\u003e and \u003ci\u003eright\u003c/i\u003e. If your stereo file is simply a recording\n        made with a stereo microphone, \u003cb\u003eaudio_channel\u003c/b\u003e should be set to an\n        empty string (or not be specified.)\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003eaudio_language\u003c/b\u003e can\n        be used to specify the language of the audio media. This is an optional\n        parameter and if not specified or an empty string, the language of the\n        track will be automatically detected. If specified, it must be a\n        language code as described in RFC5646 (see \u003ca\n        href=\\\"http://tools.ietf.org/html/rfc5646\\\"\n        target=\\\"_blank\\\"\u003ehttp://tools.ietf.org/html/rfc5646\u003c/a\u003e). Supported\n        languages: en-US, en-UK, es, fr.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003estart_time\u003c/b\u003e a time in\n        seconds that the media starts, relative to start time of the bundle.\n        This allows you to specify sequential parts of media. If not specified,\n        the default is 0.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003eparts_pending\u003c/b\u003e a boolean flag\n        specifying if more media parts will subsequently be added to the track.\n        If true, a subsequent API call must be made to signify that the track is\n        complete. If not specified, the default is false.\u003cbr/\u003e\u003cbr/\u003eIf\n        \u003cb\u003eversion\u003c/b\u003e specified, the track will only be added if the current\n        version matches this parameter value. If the version doesn't match, a\n        409 Conflict error will be returned. If version not specified, the track\n        will always be updated.\"\n      parameters:\n        - description: id of a bundle\n          in: path\n          name: bundle_id\n          required: true\n          schema:\n            type: string\n        - description: id of a track\n          in: path\n          name: track_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                media_url:\n                  description: URL of a media file for this bundle. Up to 2083 characters.\n                  type: string\n                audio_channel:\n                  description: The audio channel to use for the track ( \"\" | left | right\n                    ). Default is empty string which means all channels of audio\n                    in the media file are used for the track.\n                  type: string\n                  enum:\n                    - left\n                    - right\n                audio_language:\n                  description: Language of the audio in the track, specified with an\n                    RFC5646 code.\n                  type: string\n                  enum:\n                    - en-US\n                    - en-UK\n                    - es\n                    - fr\n                start_time:\n                  description: Time offset in seconds that the media starts relative to the\n                    bundle. Default is 0.\n                  type: number\n                parts_pending:\n                  description: Set to true if more media parts will be added to the track.\n                    Default is false.\n                  type: boolean\n                version:\n                  description: Object version.\n                  type: integer\n              required:\n                - media_url\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/Ref_of_Track_\"\n        \"202\":\n          description: Accepted\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n        \"409\":\n          description: Conflict\n      summary: Add media to a track\n      tags:\n        - bundles\n  /v1/reports/scores:\n    get:\n      description: \"Analyzes bundle content over a series of time periods grouped by the\n        value of \u003cb\u003egroup_field\u003c/b\u003e metadata field and generates a report of top\n        scores.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003einterval\u003c/b\u003e specifies the duration of each time\n        period in the report. For example, you can generate a report that gives\n        monthly statistics. If there are no bundles for a given period, that\n        period will not be present in the report.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003escore_field\u003c/b\u003e\n        specifies a bundle, insights, or metadata field to use as a score. The\n        scores will be averaged across the group and listed in descending\n        order.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003egroup_field\u003c/b\u003e specifies a metadata field by which\n        to group statistics. Typically the field will represent a user or team\n        id to get a report of the scores for the top users or\n        teams.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003efilter\u003c/b\u003e is used to limit the bundles in the report\n        according to specific criteria based on metadata and bundle values.  A\n        report filter behaves in the same way as a search filter. It uses an\n        expression syntax similar to Javascript boolean expressions. An\n        expression is made up of zero or more terms joined by logical operators\n        with each term having a field, a comparison operator, and a literal\n        value. Parentheses can be used to logically group terms.\u003cbr/\u003e\u003cbr/\u003e\u003cdiv\n        class=\\\"notes-indent\\\"\u003eA filter term is of the form:\n        \u003cb\u003e\u003ci\u003e\u003ccode\u003efield-name comparison-operator literal-value\u003c/code\u003e\u003c/b\u003e\u003c/i\u003e\n        where:\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003e\u003ci\u003e\u003ccode\u003efield-name\u003c/code\u003e\u003c/i\u003e\u003c/b\u003e is a metadata\n        field or \u003ccode\u003ebundle.name\u003c/code\u003e, \u003ccode\u003ebundle.id\u003c/code\u003e,\n        \u003ccode\u003ebundle.external_id\u003c/code\u003e, \u003ccode\u003ebundle.created\u003c/code\u003e, or\n        \u003ccode\u003ebundle.updated\u003c/code\u003e.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003e\u003ci\u003e\u003ccode\u003ecomparison-operator\u003c/\\\n        code\u003e\u003c/i\u003e\u003c/b\u003e is \u003ccode\u003e==\u003c/code\u003e, \u003ccode\u003e\u0026lt;\u003c/code\u003e, \u003ccode\u003e\u0026gt;\u003c/code\u003e,\n        \u003ccode\u003e\u0026lt;=\u003c/code\u003e, \u003ccode\u003e\u0026gt=\u003c/code\u003e, or\n        \u003ccode\u003e!=\u003c/code\u003e\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003e\u003ci\u003e\u003ccode\u003eliteral-value\u003c/code\u003e\u003c/i\u003e\u003c/b\u003e is a\n        number (integer or decimal), boolean \u003ccode\u003e\u003ci\u003etrue\u003c/i\u003e\u003c/code\u003e or\n        \u003ccode\u003e\u003ci\u003efalse\u003c/i\u003e\u003c/code\u003e, or a string with either double quotes\n        (\u003ccode\u003e\\\"\u003c/code\u003e) or single quotes (\u003ccode\u003e'\u003c/code\u003e).\u003cbr/\u003e\u003cbr/\u003eLogical\n        operators between terms (and groups of terms) can be \u003ccode\u003e\u0026\u0026\u003c/code\u003e\n        (logical AND), \u003ccode\u003e||\u003c/code\u003e (logical OR). A logical NOT is\n        \u003ccode\u003e!\u003c/code\u003e and can be placed before a term (or group of\n        terms.)\u003c/div\u003e\u003cbr/\u003e\u003cbr/\u003eAn example filter expression (assuming you have\n        used metadata fields category and tag): \u003c/p\u003e\u003cbr\u003e\u003cdiv\n        class=\\\"notes-indent\\\"\u003e\u003ccode\u003ecategory==\\\"music\\\" \u0026\u0026 (tag == \\\"soft\\\" ||\n        tag == \\\"smooth\\\") \u0026\u0026 tag != \\\"jazz\\\" \u0026\u0026 bundle.created \u003e\n        \\\"2014-03-15T00:00:00.0Z\\\"\u003c/code\u003e\u003c/div\u003e\u003cbr/\u003e\u003cbr/\u003e\u003cp\u003e\u003cb\u003elanguage\u003c/b\u003e\n        parameter specifies the language to use for analyzing the report. This\n        value is only relevant for language-related insight data. Supported\n        languages: en, en-UK, en-US, es, fr.\"\n      operationId: v1reportsscores\n      parameters:\n        - description: Duration of report periods. Default is month.\n          in: query\n          name: interval\n          required: true\n          schema:\n            type: string\n            enum:\n              - year\n              - quarter\n              - month\n              - week\n              - day\n              - hour\n        - description: A bundle/metadata field to use as a score. Ex.\n            insights.spoken_words.listener_score.\n          in: query\n          name: score_field\n          required: true\n          schema:\n            type: string\n        - description: A metadata field by which to group scores, typically a user or team\n            id field.\n          in: query\n          name: group_field\n          required: true\n          schema:\n            type: string\n        - description: filter expression, typically programmatically generated based on\n            input controls and data segregation rules etc. Up to 500 characters.\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n        - description: Language to search in, specified with an RFC5646 code. Default is\n            \"en\"\n          in: query\n          name: language\n          required: false\n          schema:\n            type: string\n            enum:\n              - en\n              - en-UK\n              - en-US\n              - es\n              - fr\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/BundleReport\"\n        \"400\":\n          description: Bad request\n      summary: Generate Group Report \u003cspan class=\"label\"\u003ebeta\u003c/span\u003e\n      tags:\n        - reports\n  /v1/reports/trends:\n    get:\n      description: \"Analyzes bundle content over a series of time periods and generates a\n        trend report.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003einterval\u003c/b\u003e specifies the duration of each\n        time period in the report. For example, you can generate a report that\n        gives monthly statistics. If there are no bundles for a given period,\n        that period will not be present in the report.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003econtent\u003c/b\u003e\n        specifies the content type to analyze and include in the report. These\n        can include tracks and insights. Multiple values can be specified to\n        generate a rich report. If \u003cb\u003econtent\u003c/b\u003e is not specified, only bundle\n        counts are included in the report.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003efilter\u003c/b\u003e is used to\n        limit the bundles in the report according to specific criteria based on\n        metadata and bundle values.  A report filter behaves in the same way as\n        a search filter. It uses an expression syntax similar to Javascript\n        boolean expressions. An expression is made up of zero or more terms\n        joined by logical operators with each term having a field, a comparison\n        operator, and a literal value. Parentheses can be used to logically\n        group terms.\u003cbr/\u003e\u003cbr/\u003e\u003cdiv class=\\\"notes-indent\\\"\u003eA filter term is of\n        the form: \u003cb\u003e\u003ci\u003e\u003ccode\u003efield-name comparison-operator\n        literal-value\u003c/code\u003e\u003c/b\u003e\u003c/i\u003e\n        where:\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003e\u003ci\u003e\u003ccode\u003efield-name\u003c/code\u003e\u003c/i\u003e\u003c/b\u003e is a metadata\n        field or \u003ccode\u003ebundle.name\u003c/code\u003e, \u003ccode\u003ebundle.id\u003c/code\u003e,\n        \u003ccode\u003ebundle.external_id\u003c/code\u003e, \u003ccode\u003ebundle.created\u003c/code\u003e, or\n        \u003ccode\u003ebundle.updated\u003c/code\u003e.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003e\u003ci\u003e\u003ccode\u003ecomparison-operator\u003c/\\\n        code\u003e\u003c/i\u003e\u003c/b\u003e is \u003ccode\u003e==\u003c/code\u003e, \u003ccode\u003e\u0026lt;\u003c/code\u003e, \u003ccode\u003e\u0026gt;\u003c/code\u003e,\n        \u003ccode\u003e\u0026lt;=\u003c/code\u003e, \u003ccode\u003e\u0026gt=\u003c/code\u003e, or\n        \u003ccode\u003e!=\u003c/code\u003e\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003e\u003ci\u003e\u003ccode\u003eliteral-value\u003c/code\u003e\u003c/i\u003e\u003c/b\u003e is a\n        number (integer or decimal), boolean \u003ccode\u003e\u003ci\u003etrue\u003c/i\u003e\u003c/code\u003e or\n        \u003ccode\u003e\u003ci\u003efalse\u003c/i\u003e\u003c/code\u003e, or a string with either double quotes\n        (\u003ccode\u003e\\\"\u003c/code\u003e) or single quotes (\u003ccode\u003e'\u003c/code\u003e).\u003cbr/\u003e\u003cbr/\u003eLogical\n        operators between terms (and groups of terms) can be \u003ccode\u003e\u0026\u0026\u003c/code\u003e\n        (logical AND), \u003ccode\u003e||\u003c/code\u003e (logical OR). A logical NOT is\n        \u003ccode\u003e!\u003c/code\u003e and can be placed before a term (or group of\n        terms.)\u003c/div\u003e\u003cbr/\u003e\u003cbr/\u003eAn example filter expression (assuming you have\n        used metadata fields category and tag): \u003c/p\u003e\u003cbr\u003e\u003cdiv\n        class=\\\"notes-indent\\\"\u003e\u003ccode\u003ecategory==\\\"music\\\" \u0026\u0026 (tag == \\\"soft\\\" ||\n        tag == \\\"smooth\\\") \u0026\u0026 tag != \\\"jazz\\\" \u0026\u0026 bundle.created \u003e\n        \\\"2014-03-15T00:00:00.0Z\\\"\u003c/code\u003e\u003c/div\u003e\u003cbr/\u003e\u003cbr/\u003e\u003cp\u003e\u003cb\u003elanguage\u003c/b\u003e\n        parameter specifies the language to use for analyzing the report. This\n        value is only relevant for language-related insight data. Supported\n        languages: en, en-UK, en-US, es, fr.\"\n      operationId: v1reportstrends\n      parameters:\n        - description: Duration of report periods. Default is month.\n          in: query\n          name: interval\n          required: true\n          schema:\n            type: string\n            enum:\n              - year\n              - quarter\n              - month\n              - week\n              - day\n              - hour\n        - description: Content reported in each period. Zero or more of tracks,\n            spoken_words, spoken_keywords. List is space or comma separated\n            single string or an array of strings.\n          in: query\n          name: content\n          required: false\n          schema:\n            type: string\n        - description: filter expression, typically programmatically generated based on\n            input controls and data segregation rules etc. Up to 500 characters.\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n        - description: Language to search in, specified with an RFC5646 code. Default is\n            \"en\"\n          in: query\n          name: language\n          required: false\n          schema:\n            type: string\n            enum:\n              - en\n              - en-UK\n              - en-US\n              - es\n              - fr\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/BundleReport\"\n        \"400\":\n          description: Bad request\n      summary: Generate Trends Report \u003cspan class=\"label\"\u003ebeta\u003c/span\u003e\n      tags:\n        - reports\n  /v1/search:\n    get:\n      description: \"Searches the bundles and returns a list of matching bundles, along with\n        what matched and where for each bundle.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003equery\u003c/b\u003e is used to\n        search for text in the audio and metadata. It uses a simple query\n        language similar to Google. At its simplest, it can be a space separated\n        list of words (ex. \u003ccode\u003eopen voice\u003c/code\u003e) which will find all bundles\n        matching all the words. To search for a phrase, put it in quotes (ex.\n        \u003ccode\u003e\\\"open source\\\"\u003c/code\u003e) You can exclude bundles that contain a\n        word by putting a minus (hyphen) in front of the word (ex.\n        \u003ccode\u003e-opaque\u003c/code\u003e) To search for one word or another, use\n        \u003ccode\u003eOR\u003c/code\u003e (in uppercase) between the words (ex. \u003ccode\u003epizza OR\n        pasta\u003c/code\u003e). As an alternative to \u003ccode\u003eOR\u003c/code\u003e, you can use\n        \u003ccode\u003e\u003cb\u003e|\u003c/b\u003e\u003c/code\u003e (pipe character). A full query could look\n        something like: \u003ccode\u003erestaurant \\\"little italy\\\" pizza OR pasta\n        -mushrooms\u003c/code\u003e\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003equery_fields\u003c/b\u003e is used to specify what\n        data in a bundle the query will search. It can contain one or more of\n        \u003ci\u003einsights.spoken_words\u003c/i\u003e, metadata fields, and/or bundle fields.\n        Multiple values can be either an array of strings or a comma or space\n        separated single string. By default (if the \u003cb\u003equery_fields\u003c/b\u003e param is\n        not included in a request or is a single empty string) all data will be\n        searched.\u003cbr/\u003e\u003cbr/\u003e\u003ctable\u003e\u003ctr\u003e\u003ctd\u003e\u003cb\u003equery_fields\u003c/b\u003e\u003c/td\u003e\u003ctd\u003e\u003cb\u003eBundle\\\n        \u0026nbsp;data\u0026nbsp;searched\u003c/b\u003e\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e*\u003c/td\u003e\u003ctd\u003eall\n        data\u003c/td\u003e\u003ctd\u003eThis is the default\n        value.\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003einsights.spoken_words\u003c/td\u003e\u003ctd\u003e\u003ci\u003e[spoken\n        words]\u003c/i\u003e\u003c/td\u003e\u003ctd\u003eAll audio tracks are\n        searched.\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003ci\u003efieldname\u003c/i\u003e\u003c/td\u003e\u003ctd\u003emetadata.\u003ci\u003efieldna\\\n        me\u003c/i\u003e\u003c/td\u003e\u003ctd\u003eYour custom metadata field. Wildcard metadata.* searches\n        all metadata\n        fields.\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003ebundle.\u003ci\u003efieldname\u003c/i\u003e\u003c/td\u003e\u003ctd\u003ebundle.\u003ci\u003efiel\\\n        dname\u003c/i\u003e\u003c/td\u003e\u003ctd\u003eThe searchable bundle fieldnames are name, id,\n        external_id, created and updated. Wildcard bundle.* searches all bundle\n        fields\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\u003cbr\u003eAs an example, suppose you have metadata\n        fields \u003cb\u003ename\u003c/b\u003e and \u003cb\u003edescription\u003c/b\u003e that you would like to search\n        and other metadata fields you don\u0026apos;t want to search. You also want\n        to search the audio words, so you could specify \u003cb\u003equery_fields\u003c/b\u003e =\n        \u0026quot;insights.spoken_words, name,\n        description\u0026quot;.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003efilter\u003c/b\u003e is used to limit the search\n        results according to specific criteria based on metadata and bundle\n        values. It uses an expression syntax similar to Javascript boolean\n        expressions. An expression is made up of zero or more terms joined by\n        logical operators with each term having a field, a comparison operator,\n        and a literal value. Parentheses can be used to logically group\n        terms.\u003cbr/\u003e\u003cbr/\u003e\u003cdiv class=\\\"notes-indent\\\"\u003eA filter term is of the\n        form: \u003cb\u003e\u003ci\u003e\u003ccode\u003efield-name comparison-operator\n        literal-value\u003c/code\u003e\u003c/b\u003e\u003c/i\u003e\n        where:\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003e\u003ci\u003e\u003ccode\u003efield-name\u003c/code\u003e\u003c/i\u003e\u003c/b\u003e is a metadata\n        field or \u003ccode\u003ebundle.name\u003c/code\u003e, \u003ccode\u003ebundle.id\u003c/code\u003e,\n        \u003ccode\u003ebundle.external_id\u003c/code\u003e, \u003ccode\u003ebundle.created\u003c/code\u003e, or\n        \u003ccode\u003ebundle.updated\u003c/code\u003e.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003e\u003ci\u003e\u003ccode\u003ecomparison-operator\u003c/\\\n        code\u003e\u003c/i\u003e\u003c/b\u003e is \u003ccode\u003e==\u003c/code\u003e, \u003ccode\u003e\u0026lt;\u003c/code\u003e, \u003ccode\u003e\u0026gt;\u003c/code\u003e,\n        \u003ccode\u003e\u0026lt;=\u003c/code\u003e, \u003ccode\u003e\u0026gt=\u003c/code\u003e, or\n        \u003ccode\u003e!=\u003c/code\u003e\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003e\u003ci\u003e\u003ccode\u003eliteral-value\u003c/code\u003e\u003c/i\u003e\u003c/b\u003e is a\n        number (integer or decimal), boolean \u003ccode\u003e\u003ci\u003etrue\u003c/i\u003e\u003c/code\u003e or\n        \u003ccode\u003e\u003ci\u003efalse\u003c/i\u003e\u003c/code\u003e, or a string with either double quotes\n        (\u003ccode\u003e\\\"\u003c/code\u003e) or single quotes (\u003ccode\u003e'\u003c/code\u003e).\u003cbr/\u003e\u003cbr/\u003eLogical\n        operators between terms (and groups of terms) can be \u003ccode\u003e\u0026\u0026\u003c/code\u003e\n        (logical AND), \u003ccode\u003e||\u003c/code\u003e (logical OR). A logical NOT is\n        \u003ccode\u003e!\u003c/code\u003e and can be placed before a term (or group of\n        terms.)\u003c/div\u003e\u003cbr/\u003e\u003cbr/\u003eAn example filter expression (assuming you have\n        used metadata fields category and tag): \u003c/p\u003e\u003cbr\u003e\u003cdiv\n        class=\\\"notes-indent\\\"\u003e\u003ccode\u003ecategory==\\\"music\\\" \u0026\u0026 (tag == \\\"soft\\\" ||\n        tag == \\\"smooth\\\") \u0026\u0026 tag != \\\"jazz\\\" \u0026\u0026 bundle.created \u003e\n        \\\"2014-03-15T00:00:00.0Z\\\"\u003c/code\u003e\u003c/div\u003e\u003cbr/\u003e\u003cbr/\u003e\u003cp\u003e\u003cb\u003elanguage\u003c/b\u003e\n        parameter specifies the language of the words in the search query. This\n        value is used for word-stemming etc. while searching text. Regardless of\n        what you set for this parameter, all your bundles will be searched, no\n        matter what language content they contain. Supported languages: en,\n        en-UK, en-US, es, fr.\u003cbr/\u003e\u003cbr/\u003eAfter getting the initial list, use the\n        \u003cb\u003efirst\u003c/b\u003e, \u003cb\u003enext\u003c/b\u003e, \u003cb\u003eprev\u003c/b\u003e link relations to get more\n        bundles in the list. Note that \u003cb\u003enext\u003c/b\u003e will not be available at the\n        end of the list and \u003cb\u003eprev\u003c/b\u003e will not be available at the start of\n        the list. A maximum of \u003cb\u003elimit\u003c/b\u003e items will be returned. If the\n        results are exactly one page neither \u003cb\u003eprev\u003c/b\u003e nor \u003cb\u003enext\u003c/b\u003e will be\n        available.\u003cbr/\u003e\u003cbr/\u003eThe \u003cb\u003eembed\u003c/b\u003e parameter specifies link relations\n        to embed in the results. For link relations that are curies (ex.\n        \\\"clarify:metadata\\\"), you may simply use the base name (ex.\n        \\\"metadata\\\").\u003c/p\u003e\"\n      operationId: v1search\n      parameters:\n        - description: search terms, typically as typed into a search field. Up to 120\n            characters.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: list of insights, metadata, and bundle fields to search with the\n            query. Use insights.spoken_words for searching audio, metadata.* for\n            all metadata fields, bundle.* for all bundle fields, * for audio and\n            all fields. Default is insights.spoken_words and metadata.*. List is\n            space or comma separated single string or an array of strings. If\n            single string, up to 1024 characters.\n          in: query\n          name: query_fields\n          required: false\n          schema:\n            type: string\n        - description: filter expression, typically programmatically generated based on\n            input controls and data segregation rules etc. Up to 500 characters.\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n        - description: Language to search in, specified with an RFC5646 code. Default is\n            \"en\"\n          in: query\n          name: language\n          required: false\n          schema:\n            type: string\n            enum:\n              - en\n              - en-UK\n              - en-US\n              - es\n              - fr\n        - description: limit results to specified number of bundles. Default is 10. Max 100.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - description: \"list of link relations to embed in the result collection. Zero or\n            more of: items, tracks, metadata, insights. List is space or comma\n            separated single string or an array of strings\"\n          in: query\n          name: embed\n          required: false\n          schema:\n            type: string\n        - description: opaque value, automatically provided in next/prev links\n          in: query\n          name: iterator\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: \"#/components/schemas/SearchCollection\"\n        \"400\":\n          description: Bad request\n      summary: Search bundles\n      tags:\n        - search\nservers:\n  - url: https://api.clarify.io/\ncomponents:\n  schemas:\n    Bundle:\n      $ref: \"#/components/schemas/object\"\n    BundleReport:\n      $ref: \"#/components/schemas/object\"\n    Collection:\n      $ref: \"#/components/schemas/object\"\n    Insight:\n      $ref: \"#/components/schemas/object\"\n    Insights:\n      $ref: \"#/components/schemas/object\"\n    ItemResult:\n      $ref: \"#/components/schemas/object\"\n    MatchHit:\n      $ref: \"#/components/schemas/object\"\n    Metadata:\n      $ref: \"#/components/schemas/object\"\n    Ref:\n      $ref: \"#/components/schemas/object\"\n    ReportPeriod:\n      $ref: \"#/components/schemas/object\"\n    ReportPeriodBundle:\n      $ref: \"#/components/schemas/object\"\n    SearchCollection:\n      $ref: \"#/components/schemas/object\"\n    SearchTerm:\n      $ref: \"#/components/schemas/object\"\n    TermMatch:\n      $ref: \"#/components/schemas/object\"\n    TermResult:\n      $ref: \"#/components/schemas/object\"\n    Track:\n      $ref: \"#/components/schemas/object\"\n    Tracks:\n      $ref: \"#/components/schemas/object\"\n    object:\n      type: object\n    Ref_of_Bundle_: {}\n    Ref_of_Track_: {}\n    Ref__of_Bundle_:\n      $ref: \"#/components/schemas/object\"\n    Ref__of_Track_:\n      $ref: \"#/components/schemas/object\"\n    Track__array_item_:\n      $ref: \"#/components/schemas/object\"\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/clarify.io-1.3.7-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/clarify.io-1.3.7-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/reports/scores\": get: responses: 200: contents: unsupported content types: [application/hal+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}