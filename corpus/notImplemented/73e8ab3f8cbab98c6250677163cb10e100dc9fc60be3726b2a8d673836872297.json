{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/AbsaOSS/spline-spark-agent"
		},
		"file": {
			"name": "producer.api.v1.2.json",
			"size": 0,
			"path": "core/src/main/resources/producer.api.v1.2.json",
			"byteSize": 24647,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"description\": \"Api Documentation\",\n        \"version\": \"1.0\",\n        \"title\": \"Api Documentation\",\n        \"termsOfService\": \"urn:tos\",\n        \"contact\": {},\n        \"license\": {\n            \"name\": \"Apache 2.0\",\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0\"\n        }\n    },\n    \"tags\": [\n        {\n            \"name\": \"ingestion-controller\",\n            \"description\": \"Ingestion Controller\"\n        },\n        {\n            \"name\": \"status\",\n            \"description\": \"Status Controller\"\n        }\n    ],\n    \"paths\": {\n        \"/execution-events\": {\n            \"post\": {\n                \"tags\": [\n                    \"ingestion-controller\"\n                ],\n                \"summary\": \"Save Execution Events\",\n                \"description\": \"\\n        Saves a list of Execution Events.\\n\\n        Payload format:\\n\\n        [\\n          {\\n            // Reference to the execution plan Id that was triggered\\n            planId: \u003cUUID\u003e,\\n\\n            // [Optional] A label that logically distinguish a group of one of multiple execution plans from another group.\\n            // If set, it has to match the discriminator of the associated execution plan.\\n            // The property is used for UUID collision detection.\\n            discriminator: \u003cstring\u003e,\\n\\n            // [Optional] An object that consists of string key-multi-value pairs associated with the given execution plan.\\n            // The labels can be used later for searching/filtering/grouping the plans on the Consumer/UI side.\\n            labels: {\\n               \u003ckey\u003e: [\u003cvalues\u003e]\\n            },\\n\\n            // Time (milliseconds since Epoch) when the execution finished\\n            timestamp: \u003cnumber\u003e,\\n\\n            // [Optional] Duration (in nanoseconds) of the execution\\n            durationNs: \u003cnumber\u003e,\\n            // [Optional] Additional info about the error (in case there was an error during the execution)\\n            error: {...},\\n\\n            // [Optional] Any other extra information related to the given execution event\\n            extra: {...}\\n          },\\n          ...\\n        ]\\n      \",\n                \"operationId\": \"eventsHandlerUsingPOST\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/vnd.absa.spline.producer.v1.2+json\": {\n                            \"schema\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/ExecutionEvent\"\n                                }\n                            }\n                        }\n                    },\n                    \"description\": \"eventDTOs\",\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"All execution Events are successfully stored\",\n                        \"content\": {\n                            \"*/*\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/BoxedUnit\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    }\n                },\n                \"deprecated\": false\n            }\n        },\n        \"/execution-plans\": {\n            \"post\": {\n                \"tags\": [\n                    \"ingestion-controller\"\n                ],\n                \"summary\": \"Save Execution Plan\",\n                \"description\": \"\\n        Saves an Execution Plan and returns its new UUID.\\n\\n        Payload format:\\n\\n        {\\n          // [Optional] Global unique identifier of the execution plan. If omitted, will be generated by the server.\\n          id: \u003cUUID\u003e,\\n\\n          // [Optional] A name of the application (script, job etc) that this execution plan represents.\\n          name: \u003cstring\u003e,\\n\\n          // [Optional] A label that logically distinguish a group of one of multiple execution plans from another group.\\n          // If set, it has to match the discriminator of the associated execution events.\\n          // The property is used for UUID collision detection.\\n          discriminator: \u003cstring\u003e,\\n\\n          // [Optional] An object that consists of string key-multi-value pairs associated with the given execution plan.\\n          // The labels can be used later for searching/filtering/grouping the plans on the Consumer/UI side.\\n          labels: {\\n             \u003ckey\u003e: [\u003cvalues\u003e]\\n          },\\n\\n          // Operation level lineage info\\n          operations: {\\n\\n            // Write operation\\n            write: {\\n              // Operation ID (should be unique in the scope of the current execution plan)\\n              id: \u003cstring\u003e,\\n              // [Optional] Operation name\\n              name: \u003cstring\u003e,\\n              // Destination URI, where the data has been written to\\n              outputSource: \u003cURI\u003e,\\n              // Shows if the write operation appended or replaced the data in the target destination\\n              append: \u003cboolean\u003e,\\n              // Array of preceding operations IDs,\\n              // i.e. operations that serves as an input for the current operation\\n              childIds: [\u003cstring\u003e],\\n              // [Optional] Operation parameters\\n              params: {...},\\n              // [Optional] Custom info about the operation\\n              extra: {...}\\n            },\\n\\n            // Array of read operations\\n            reads: [\\n              {\\n                // Operation ID (see above)\\n                id: \u003cstring\u003e,\\n                // [Optional] Operation name\\n                name: \u003cstring\u003e,\\n                // Source URIs, where the data has been read from\\n                inputSources: [\u003cURI\u003e],\\n                // [Optional] Output attribute IDs\\n                output: [\u003cstring\u003e],\\n                // [Optional] Operation parameters\\n                params: {...},\\n                // [Optional] Custom info about the operation\\n                extra: {...}\\n              },\\n              ...\\n            ],\\n\\n            // Other operations\\n            other: [\\n              {\\n                // Operation ID (see above)\\n                id: \u003cstring\u003e,\\n                // [Optional] Operation name\\n                name: \u003cstring\u003e,\\n                // Array of preceding operations IDs (see above)\\n                childIds: [\u003cstring\u003e],\\n                // [Optional] Output attribute IDs. If output is undefined the server will try to infer it from the child operations' output.\\n                output: [\u003cstring\u003e],\\n                // [Optional] Operation parameters\\n                params: {...},\\n                // [Optional] Custom info about the operation\\n                extra: {...}\\n              },\\n              ...\\n            ]\\n          },\\n\\n          // [Optional] Attribute definitions\\n          attributes: [\\n            {\\n              id: \u003cstring\u003e,\\n              // Attribute name\\n              name: \u003cstring\u003e,\\n              // [Optional] References to other attributes, expressions or constants that this attribute is computed from\\n              childRefs: [ { __exprId: \u003cstring\u003e } | { __attrId: \u003cstring\u003e } ],\\n              // [Optional] Custom info\\n              extra: {...}\\n            }\\n          ],\\n\\n          // [Optional] Attribute level lineage info\\n          expressions: {\\n\\n            // Function definitions\\n            functions: [\\n              {\\n                id: \u003cstring\u003e,\\n                // Function name\\n                name: \u003cstring\u003e,\\n                // [Optional] References to operands (expressions, constants or attributes)\\n                childRefs: [ { __exprId: \u003cstring\u003e } | { __attrId: \u003cstring\u003e } ],\\n                // [Optional] Named expression parameters\\n                params: {...},\\n                // [Optional] Custom meta info\\n                extra: {...}\\n              }\\n            ],\\n\\n            // Constant/Literal definitions\\n            constants: {\\n              {\\n                id: \u003cstring\u003e,\\n                // constant value\\n                value: \u003cany\u003e,\\n                // [Optional] Custom meta info\\n                extra: {...}\\n              }\\n            }\\n          },\\n\\n          // Information about the data framework in use (e.g. Spark, StreamSets etc)\\n          systemInfo: {\\n            name: \u003cstring\u003e,\\n            version: \u003cstring\u003e\\n          },\\n\\n          // [Optional] Spline agent information\\n          agentInfo: {\\n            name: \u003cstring\u003e,\\n            version: \u003cstring\u003e\\n          },\\n\\n          // [Optional] Any other extra info associated with the current execution plan\\n          extraInfo: {...}\\n        }\\n      \",\n                \"operationId\": \"planHandlerUsingPOST\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/vnd.absa.spline.producer.v1.2+json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ExecutionPlan\"\n                            }\n                        }\n                    },\n                    \"description\": \"planDTO\",\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Execution Plan is stored with the UUID returned in a response body\",\n                        \"content\": {\n                            \"*/*\": {\n                                \"schema\": {\n                                    \"type\": \"string\",\n                                    \"format\": \"uuid\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    }\n                },\n                \"deprecated\": false\n            }\n        },\n        \"/status\": {\n            \"head\": {\n                \"tags\": [\n                    \"status\"\n                ],\n                \"summary\": \"Server health status\",\n                \"description\": \"Check that producer is running and that the database is accessible and initialized\",\n                \"operationId\": \"statusHeadUsingHEAD\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Everything's working\",\n                        \"content\": {\n                            \"*/*\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    },\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"503\": {\n                        \"description\": \"There is a problem\"\n                    }\n                },\n                \"deprecated\": false\n            }\n        }\n    },\n    \"servers\": [\n        {\n            \"url\": \"//localhost/\"\n        }\n    ],\n    \"components\": {\n        \"schemas\": {\n            \"AttrOrExprRef\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"__attrId\": {\n                        \"type\": \"string\"\n                    },\n                    \"__exprId\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"title\": \"AttrOrExprRef\"\n            },\n            \"Attribute\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"name\"\n                ],\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"dataType\": {\n                        \"type\": \"object\"\n                    },\n                    \"childRefs\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/AttrOrExprRef\"\n                        }\n                    },\n                    \"extra\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"title\": \"Attribute\"\n            },\n            \"BoxedUnit\": {\n                \"type\": \"object\",\n                \"title\": \"BoxedUnit\"\n            },\n            \"DataOperation\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\"\n                ],\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"childIds\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"output\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"params\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"extra\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"title\": \"DataOperation\"\n            },\n            \"ExecutionEvent\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"planId\",\n                    \"timestamp\"\n                ],\n                \"properties\": {\n                    \"planId\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                    },\n                    \"labels\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"timestamp\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    },\n                    \"durationNs\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    },\n                    \"discriminator\": {\n                        \"type\": \"string\"\n                    },\n                    \"error\": {\n                        \"type\": \"object\"\n                    },\n                    \"extra\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"title\": \"ExecutionEvent\"\n            },\n            \"ExecutionPlan\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"operations\",\n                    \"systemInfo\"\n                ],\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"discriminator\": {\n                        \"type\": \"string\"\n                    },\n                    \"labels\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"operations\": {\n                        \"$ref\": \"#/components/schemas/Operations\"\n                    },\n                    \"attributes\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Attribute\"\n                        }\n                    },\n                    \"expressions\": {\n                        \"$ref\": \"#/components/schemas/Expressions\"\n                    },\n                    \"systemInfo\": {\n                        \"$ref\": \"#/components/schemas/NameAndVersion\"\n                    },\n                    \"agentInfo\": {\n                        \"$ref\": \"#/components/schemas/NameAndVersion\"\n                    },\n                    \"extraInfo\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"title\": \"ExecutionPlan\"\n            },\n            \"Expressions\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"functions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/FunctionalExpression\"\n                        }\n                    },\n                    \"constants\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Literal\"\n                        }\n                    }\n                },\n                \"title\": \"Expressions\"\n            },\n            \"FunctionalExpression\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"name\"\n                ],\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"dataType\": {\n                        \"type\": \"object\"\n                    },\n                    \"childRefs\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/AttrOrExprRef\"\n                        }\n                    },\n                    \"extra\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"params\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"title\": \"FunctionalExpression\"\n            },\n            \"Literal\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"value\"\n                ],\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"dataType\": {\n                        \"type\": \"object\"\n                    },\n                    \"extra\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"value\": {\n                        \"type\": \"object\"\n                    }\n                },\n                \"title\": \"Literal\"\n            },\n            \"NameAndVersion\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\",\n                    \"version\"\n                ],\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"version\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"title\": \"NameAndVersion\"\n            },\n            \"Operations\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"write\"\n                ],\n                \"properties\": {\n                    \"write\": {\n                        \"$ref\": \"#/components/schemas/WriteOperation\"\n                    },\n                    \"reads\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ReadOperation\"\n                        }\n                    },\n                    \"other\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DataOperation\"\n                        }\n                    }\n                },\n                \"title\": \"Operations\"\n            },\n            \"ReadOperation\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"inputSources\"\n                ],\n                \"properties\": {\n                    \"inputSources\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"output\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"params\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"extra\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"title\": \"ReadOperation\"\n            },\n            \"WriteOperation\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"append\",\n                    \"childIds\",\n                    \"id\",\n                    \"outputSource\"\n                ],\n                \"properties\": {\n                    \"outputSource\": {\n                        \"type\": \"string\"\n                    },\n                    \"append\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"childIds\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"params\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"extra\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"title\": \"WriteOperation\"\n            }\n        }\n    }\n}\n",
			"canonicalURL": "/github.com/AbsaOSS/spline-spark-agent@61673d5adea7d9f050be99e943b85a23a1bed349/-/blob/core/src/main/resources/producer.api.v1.2.json",
			"externalURLs": [
				{
					"url": "https://github.com/AbsaOSS/spline-spark-agent/blob/61673d5adea7d9f050be99e943b85a23a1bed349/core/src/main/resources/producer.api.v1.2.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/execution-plans\": post: requestBody: contents: unsupported content types: [application/vnd.absa.spline.producer.v1.2+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}