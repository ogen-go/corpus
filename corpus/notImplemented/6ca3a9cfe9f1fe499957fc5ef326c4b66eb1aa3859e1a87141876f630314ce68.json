{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mikaelvesavuori/catalogist"
		},
		"file": {
			"name": "schema.yml",
			"size": 0,
			"path": "api/schema.yml",
			"byteSize": 9903,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Catalogist\n  description: Catalogist is the easy way to catalog and make your software and (micro)services visible to your organization in a lightweight and developer-friendly way.\n\nservers:\n  - url: https://RANDOM.execute-api.REGION.amazonaws.com/shared/\n    description: API server\n\npaths:\n  /records:\n    get:\n      description: Get records\n      responses:\n        default:\n          $ref: '#/components/responses/401'\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Manifest'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '406':\n          $ref: '#/components/responses/406'\n        '429':\n          $ref: '#/components/responses/429'\n      parameters:\n        - in: query\n          name: lifecycleStage\n          description: What lifecycleStage should be used?\n          required: false\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 50\n            pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n        - in: query\n          name: serviceName\n          description: What are the service name(s)?\n          required: false\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 500\n            pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n      security:\n        - apiKey: []\n\n  /record:\n    post:\n      description: Create record\n      responses:\n        default:\n          $ref: '#/components/responses/403'\n        '204':\n          description: Successful response\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '406':\n          $ref: '#/components/responses/406'\n        '429':\n          $ref: '#/components/responses/429'\n      requestBody:\n        $ref: '#/components/requestBodies/CreateRecord'\n      security:\n        - apiKey: []\n\ncomponents:\n  securitySchemes:\n    apiKey:\n      type: apiKey\n      name: Authorization\n      in: header\n  schemas:\n    Manifest:\n      type: object\n      additionalProperties: false\n      properties:\n        spec:\n          $ref: '#/components/schemas/Spec'\n        support:\n          $ref: '#/components/schemas/Support'\n        slo:\n          $ref: '#/components/schemas/Slo'\n        api:\n          $ref: '#/components/schemas/Api'\n        metadata:\n          $ref: '#/components/schemas/Metadata'\n        links:\n          $ref: '#/components/schemas/Links'\n    Spec:\n      type: object\n      required:\n        - \"serviceName\"\n      additionalProperties: false\n      properties:\n        serviceName:\n          type: string\n          description: The service name.\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n        serviceType:\n          type: string\n          description: Describes which type of solution this is.\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n        lifecycleStage:\n          type: string\n          description: Describes which stage of the lifecycle this solution is in. Defaults to \"production\".\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n        version:\n          type: string\n          description: The version of the service.\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n        description:\n          type: string\n          description: Description of the service.\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n        responsible:\n          type: string\n          description: Who is responsible for the solution?\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n        team:\n          type: string\n          description: The team that owns this solution.\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n        system:\n          type: string\n          description: The system this solution is part of.\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n        domain:\n          type: string\n          description: The domain this solution/system is part of.\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n        dataSensitivity:\n          type: string\n          description: The overall data sensitivity of this solution.\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n        tags:\n          type: array\n          maxItems: 10\n          items:\n            type: string\n            minLength: 1\n            maxLength: 50\n            pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n    Relations:\n      type: array\n      maxItems: 100\n      items:\n        type: string\n        minLength: 1\n        maxLength: 50\n        pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n    Support:\n      type: object\n      additionalProperties:\n        type: string\n        minLength: 1\n        maxLength: 50\n        pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n    Slo:\n      type: array\n      maxItems: 10\n      items:\n        $ref: '#/components/schemas/SloItem'\n    SloItem:\n      type: object\n      required:\n        - \"description\"\n      additionalProperties:\n        type: string\n        minLength: 1\n        maxLength: 50\n        pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n      properties:\n        description:\n          type: string\n          description: Description of the service-level objective.\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n        level:\n          type: string\n          description: What is the level of the SLO?\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n        percentile:\n          type: string\n          description: The percentile to represent this SLO.\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n        maxLatency:\n          type: string\n          description: Max latency of the SLO.\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n    Api:\n      type: array\n      maxItems: 10\n      items:\n        $ref: '#/components/schemas/ApiItem'\n    ApiItem:\n      type: object\n      additionalProperties:\n        type: string\n        minLength: 1\n        maxLength: 50\n        pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n      properties:\n        serviceName:\n          type: string\n          description: The name of the API.\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n    Metadata:\n      type: object\n      additionalProperties:\n        type: string\n        minLength: 1\n        maxLength: 50\n        pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n    Links:\n      type: array\n      maxItems: 10\n      items:\n        $ref: '#/components/schemas/LinkItem'\n    LinkItem:\n      type: object\n      additionalProperties: false\n      required:\n        - \"url\"\n        - \"title\"\n        - \"icon\"\n      properties:\n        url:\n          type: string\n          description: URL for the link.\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n        title:\n          type: string\n          description: Title and description of the link.\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n        icon:\n          type: string\n          description: What type of icon should represent this?\n          minLength: 1\n          maxLength: 50\n          pattern: /[^a-z0-9@åäöøáéíóúñü\\.\\-_]/\n\n  requestBodies:\n    CreateRecord:\n      description: Create record request body\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Manifest\"\n\n  responses:\n    \"401\":\n      description: Unauthorized\n      content:\n        text/plain:\n          schema:\n            title: Unauthorized\n            type: string\n            example: Unauthorized\n            minLength: 3\n            maxLength: 50\n            pattern: ^[A-Za-z0-9.!\\s]{3,30}$\n    \"403\":\n      description: Forbidden\n      content:\n        text/plain:\n          schema:\n            title: Forbidden\n            type: string\n            example: Forbidden\n            minLength: 3\n            maxLength: 50\n            pattern: ^[A-Za-z0-9.!\\s]{3,30}$\n    \"404\":\n      description: Not found\n      content:\n        text/plain:\n          schema:\n            title: Not found\n            type: string\n            example: Not found\n            minLength: 3\n            maxLength: 50\n            pattern: ^[A-Za-z0-9.!\\s]{3,30}$\n    \"406\":\n      description: Not acceptable\n      content:\n        text/plain:\n          schema:\n            title: Not acceptable\n            type: string\n            example: Not acceptable\n            minLength: 3\n            maxLength: 50\n            pattern: ^[A-Za-z0-9.!\\s]{3,30}$\n    \"429\":\n      description: Too many requests\n      content:\n        text/plain:\n          schema:\n            title: Too many requests\n            type: string\n            example: Too many requests\n            minLength: 3\n            maxLength: 50\n            pattern: ^[A-Za-z0-9.!\\s]{3,30}$",
			"canonicalURL": "/github.com/mikaelvesavuori/catalogist@7a7bfc9faf91292854297d5733b94f3b35f18760/-/blob/api/schema.yml",
			"externalURLs": [
				{
					"url": "https://github.com/mikaelvesavuori/catalogist/blob/7a7bfc9faf91292854297d5733b94f3b35f18760/api/schema.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/record\": post: responses: 401: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}