{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "npm/openapi-to-postmanv2"
		},
		"file": {
			"name": "petstore.yaml",
			"size": 0,
			"path": "test/data/valid_openapi31X/yaml/petstore.yaml",
			"byteSize": 4938,
			"content": "openapi: 3.1.0\ninfo:\n  title: Sample Pet Store App\n  summary: A pet store manager.\n  description: This is a sample server for a pet store.\n  termsOfService: https://example.com/terms/\n  contact:\n    name: API Support\n    url: https://www.example.com/support\n    email: support@example.com\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.1\nservers:\n- url: https://{username}.gigantic-server.com:{port}/{basePath}\n  description: The production API server\n  variables:\n    username:\n      # note! no enum here means it is an open value\n      default: demo\n      description: this value is assigned by the service provider, in this example `gigantic-server.com`\n    port:\n      enum:\n        - '8443'\n        - '443'\n      default: '8443'\n    basePath:\n      # open meaning there is the opportunity to use special base paths as assigned by the provider, default is `v2`\n      default: v2\ntags:\n  - name: pet\n    description: Everything about your Pets\n    externalDocs:\n      description: Find out more\n      url: 'http://swagger.io'\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      description: ''\n      operationId: listPets\n      tags:\n        - pet\n      parameters:\n        - name: limit\n          in: header\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: variable\n          in: query\n          description: random variable\n          style: form\n          schema:\n            type: array\n            items:\n              type: string\n        - name: variable2\n          in: query\n          description: another random variable\n          style: spaceDelimited\n          schema:\n            type: array\n            items:\n              type: integer\n              format: int64\n      responses:\n        '200':\n          description: An paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pets'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: Create a pet\n      operationId: createPets\n      tags:\n        - pet\n      responses:\n        '201':\n          description: Null response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pets'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    parameters:\n      - name: petId\n        in: path\n        description: The id of the pet to retrieve\n        required: true\n        schema:\n          type: string\n  /pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pet\n      parameters:\n        - name: petId\n          in: path\n          description: The id of the pet to retrieve\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /pets/{petId}/uploadImage:\n    post:\n      summary: Uploads an image\n      description: ''\n      operationId: uploadFile\n      tags:\n        - pet\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet to update\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/octet-stream: {}\n      responses:\n        '201':\n          description: Null response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pets'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  schemas:\n    Pet:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n    Pets:\n      type: array\n      items:\n        $ref: '#/components/schemas/Pet'\n    Error:\n      required:\n        - code\n        - mesage\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string",
			"canonicalURL": "/npm/openapi-to-postmanv2@8662e530a1fe4e843e6779d4e062197c292df425/-/blob/test/data/valid_openapi31X/yaml/petstore.yaml",
			"externalURLs": []
		}
	},
	"Error": "notImplemented: spaceDelimited parameter style not implemented",
	"NotImplemented": [
		"spaceDelimited parameter style"
	]
}