{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stcarrez/swagger-ada"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "regtests/swagger.yaml",
			"byteSize": 10292,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://localhost:8082/v1'\n  - url: 'http://localhost:8082/v1'\ninfo:\n  description: API to validate\n  version: 1.0.0\n  title: REST API Validation\n  termsOfService: 'https://github.com/terms/'\n  contact:\n    email: Stephane.Carrez@gmail.com\n  license:\n    name: Apache Licence\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: tickets\n    description: Tickets operations\npaths:\n  /tickets:\n    get:\n      tags:\n        - tickets\n      summary: List the tickets\n      description: |\n        List the tickets created for the project.\n      operationId: do_list_tickets\n      parameters:\n        - name: status\n          in: query\n          description: The ticket status\n          required: false\n          schema:\n            type: string\n            enum:\n              - open\n              - onhold\n              - assigned\n              - closed\n              - rejected\n        - name: owner\n          in: query\n          description: The owner\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Ticket'\n        '400':\n          description: Invalid status value\n      security:\n        - ticket_auth:\n            - 'read:ticket'\n    post:\n      tags:\n        - ticket\n      summary: Create a ticket\n      description: ''\n      operationId: do_create_ticket\n      responses:\n        '201':\n          description: ticket created\n          headers:\n            Location:\n              description: The URL of the new ticket\n              schema:\n                type: string\n        '405':\n          description: Invalid input\n      security:\n        - ticket_auth:\n            - 'write:ticket'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                owner:\n                  description: Ticket owner\n                  type: string\n                status:\n                  description: Ticket status\n                  type: string\n                  enum:\n                    - open\n                    - assigned\n                    - closed\n                title:\n                  description: Ticket title\n                  type: string\n                description:\n                  description: Ticket description\n                  type: string\n              required:\n                - title\n    head:\n      tags:\n        - ticket\n      summary: List the tickets\n      description: ''\n      operationId: do_head_ticket\n      responses:\n        '200':\n          description: successful operation\n      security:\n        - ticket_auth:\n            - 'read:ticket'\n  '/tickets/{tid}':\n    get:\n      tags:\n        - tickets\n      summary: Get a ticket\n      description: Get a ticket\n      operationId: do_get_ticket\n      parameters:\n        - name: tid\n          in: path\n          description: Ticket identifier\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Ticket'\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Ticket not found\n      security:\n        - ticket_auth:\n            - 'read:ticket'\n    put:\n      tags:\n        - ticket\n      summary: Update a ticket\n      description: ''\n      operationId: do_update_ticket\n      parameters:\n        - name: tid\n          in: path\n          description: Ticket identifier\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Ticket'\n        '405':\n          description: Invalid input\n      security:\n        - ticket_auth:\n            - 'write:ticket'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                owner:\n                  description: Ticket owner\n                  type: string\n                status:\n                  description: Ticket status\n                  type: string\n                  enum:\n                    - open\n                    - onhold\n                    - assigned\n                    - closed\n                    - rejected\n                title:\n                  description: Ticket title\n                  type: string\n                description:\n                  description: Ticket description\n                  type: string\n    patch:\n      tags:\n        - ticket\n      summary: Patch a ticket\n      description: ''\n      operationId: do_patch_ticket\n      parameters:\n        - name: tid\n          in: path\n          description: Ticket identifier\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Ticket'\n        '405':\n          description: Invalid input\n      security:\n        - ticket_auth:\n            - 'write:ticket'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                owner:\n                  description: Ticket owner\n                  type: string\n                status:\n                  description: Ticket status\n                  type: string\n                  enum:\n                    - open\n                    - onhold\n                    - assigned\n                    - closed\n                    - rejected\n                title:\n                  description: Ticket title\n                  type: string\n                description:\n                  description: Ticket description\n                  type: string\n    delete:\n      tags:\n        - ticket\n      summary: Delete a ticket\n      description: ''\n      operationId: do_delete_ticket\n      parameters:\n        - name: tid\n          in: path\n          description: Ticket identifier\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '204':\n          description: No content.\n        '404':\n          description: Invalid ticket identifier.\n      security:\n        - ticket_auth:\n            - 'write:ticket'\n    options:\n      tags:\n        - tickets\n      summary: Get a ticket\n      description: Get a ticket\n      operationId: do_options_ticket\n      parameters:\n        - name: tid\n          in: path\n          description: Ticket identifier\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Ticket'\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Ticket not found\n      security:\n        - ticket_auth:\n            - 'read:ticket'\n  /orchestration:\n    post:\n      description: Query an orchestrated service instance\n      operationId: orchStore\n      responses:\n        '200':\n          description: Response to a service orchestration request\n        default:\n          description: Unexpected error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                requestedQoS:\n                  $ref: '#/components/schemas/stringsMap'\n                commands:\n                  $ref: '#/components/schemas/stringsMap'\n        description: Requests an orchestrated service instance\n        required: true\n  /testTextResponse:\n    get:\n      operationId: testTextResponse\n      parameters:\n        - name: options\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\nexternalDocs:\n  description: Find out more about Swagger\n  url: 'http://swagger.io'\ncomponents:\n  securitySchemes:\n    ticket_auth:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: /oauth/authorize\n          scopes:\n            'write:ticket': Update a ticket\n            'read:ticket': Read a ticket\n  schemas:\n    Ticket:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        title:\n          type: string\n          description: Title of the ticket\n        description:\n          type: string\n          description: Description of the ticket\n        owner:\n          type: string\n          description: The ticket owner\n        create_date:\n          type: string\n          format: date-time\n          description: Ticket creation date\n        end_date:\n          type: string\n          format: date-time\n          description: Ticket deadline date\n        update_date:\n          type: string\n          format: date-time\n          description: Ticket last change date\n        status:\n          type: string\n          description: Ticket status\n          enum:\n            - open\n            - onhold\n            - assigned\n            - closed\n            - rejected\n      required:\n        - id\n        - title\n        - create_date\n        - status\n        - description\n      title: Information about a ticket\n      xml:\n        name: Ticket\n    stringsMap:\n      type: object\n      properties:\n        key:\n          type: string\n    Options:\n      type: object\n      properties:\n        a:\n          type: array\n          items:\n            type: string\n            pattern: '^[A-Z].*'\n",
			"canonicalURL": "/github.com/stcarrez/swagger-ada@c7caa85b718575dbd2572cd22b9cc34f7fbe9d78/-/blob/regtests/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stcarrez/swagger-ada/blob/c7caa85b718575dbd2572cd22b9cc34f7fbe9d78/regtests/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/testTextResponse\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"oauth2 security",
		"unsupported content types"
	]
}