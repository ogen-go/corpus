{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "issues.yaml",
			"size": 0,
			"path": "providers/src/github/v0.3.0/services/issues.yaml",
			"byteSize": 247454,
			"content": "paths:\n  /issues:\n    get:\n      summary: List issues assigned to the authenticated user\n      description: |-\n        List issues assigned to the authenticated user across all visible repositories including owned repositories, member\n        repositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not\n        necessarily assigned to you.\n\n\n        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\n        reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\n        the `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\n        request id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.\n      tags:\n        - issues\n      operationId: issues/list\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#list-issues-assigned-to-the-authenticated-user\n      parameters:\n        - name: filter\n          description: |-\n            Indicates which sorts of issues to return. Can be one of:  \n            \\* `assigned`: Issues assigned to you  \n            \\* `created`: Issues created by you  \n            \\* `mentioned`: Issues mentioning you  \n            \\* `subscribed`: Issues you're subscribed to updates for  \n            \\* `all` or `repos`: All issues the authenticated user can see, regardless of participation or creation\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - assigned\n              - created\n              - mentioned\n              - subscribed\n              - repos\n              - all\n            default: assigned\n        - name: state\n          description: Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - open\n              - closed\n              - all\n            default: open\n        - $ref: '#/components/parameters/labels'\n        - name: sort\n          description: What to sort results by. Can be either `created`, `updated`, `comments`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - created\n              - updated\n              - comments\n            default: created\n        - $ref: '#/components/parameters/direction'\n        - $ref: '#/components/parameters/since'\n        - name: collab\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: orgs\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: owned\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: pulls\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/issue'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue-with-repo-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: issues\n        subcategory: null\n  /orgs/{org}/issues:\n    get:\n      summary: List organization issues assigned to the authenticated user\n      description: |-\n        List issues in an organization assigned to the authenticated user.\n\n        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\n        reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\n        the `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\n        request id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.\n      tags:\n        - issues\n      operationId: issues/list-for-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#list-organization-issues-assigned-to-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - name: filter\n          description: |-\n            Indicates which sorts of issues to return. Can be one of:  \n            \\* `assigned`: Issues assigned to you  \n            \\* `created`: Issues created by you  \n            \\* `mentioned`: Issues mentioning you  \n            \\* `subscribed`: Issues you're subscribed to updates for  \n            \\* `all` or `repos`: All issues the authenticated user can see, regardless of participation or creation\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - assigned\n              - created\n              - mentioned\n              - subscribed\n              - repos\n              - all\n            default: assigned\n        - name: state\n          description: Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - open\n              - closed\n              - all\n            default: open\n        - $ref: '#/components/parameters/labels'\n        - name: sort\n          description: What to sort results by. Can be either `created`, `updated`, `comments`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - created\n              - updated\n              - comments\n            default: created\n        - $ref: '#/components/parameters/direction'\n        - $ref: '#/components/parameters/since'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/issue'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue-with-repo-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: issues\n        subcategory: null\n  /repos/{owner}/{repo}/assignees:\n    get:\n      summary: List assignees\n      description: Lists the [available assignees](https://docs.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/) for issues in a repository.\n      tags:\n        - issues\n      operationId: issues/list-assignees\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#list-assignees\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: assignees\n  /repos/{owner}/{repo}/assignees/{assignee}:\n    get:\n      summary: Check if a user can be assigned\n      description: |-\n        Checks if a user has permission to be assigned to an issue in this repository.\n\n        If the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.\n\n        Otherwise a `404` status code is returned.\n      tags:\n        - issues\n      operationId: issues/check-user-can-be-assigned\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#check-if-a-user-can-be-assigned\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: assignee\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: If the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.\n        '404':\n          description: Otherwise a `404` status code is returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/basic-error'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: assignees\n  /repos/{owner}/{repo}/issues:\n    get:\n      summary: List repository issues\n      description: |-\n        List issues in a repository.\n\n        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\n        reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\n        the `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\n        request id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.\n      tags:\n        - issues\n      operationId: issues/list-for-repo\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#list-repository-issues\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: milestone\n          description: If an `integer` is passed, it should refer to a milestone by its `number` field. If the string `*` is passed, issues with any milestone are accepted. If the string `none` is passed, issues without milestones are returned.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: state\n          description: Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - open\n              - closed\n              - all\n            default: open\n        - name: assignee\n          description: Can be the name of a user. Pass in `none` for issues with no assigned user, and `*` for issues assigned to any user.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: creator\n          description: The user that created the issue.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: mentioned\n          description: A user that's mentioned in the issue.\n          in: query\n          required: false\n          schema:\n            type: string\n        - $ref: '#/components/parameters/labels'\n        - name: sort\n          description: What to sort results by. Can be either `created`, `updated`, `comments`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - created\n              - updated\n              - comments\n            default: created\n        - $ref: '#/components/parameters/direction'\n        - $ref: '#/components/parameters/since'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/issue'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '301':\n          $ref: '#/components/responses/moved_permanently'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: null\n    post:\n      summary: Create an issue\n      description: |-\n        Any user with pull access to a repository can create an issue. If [issues are disabled in the repository](https://docs.github.com/articles/disabling-issues/), the API returns a `410 Gone` status.\n\n        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n      tags:\n        - issues\n      operationId: issues/create\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#create-an-issue\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                title:\n                  oneOf:\n                    - type: string\n                    - type: integer\n                  description: The title of the issue.\n                body:\n                  type: string\n                  description: The contents of the issue.\n                assignee:\n                  type: string\n                  description: 'Login for the user that this issue should be assigned to. _NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. **This field is deprecated.**_'\n                  nullable: true\n                milestone:\n                  oneOf:\n                    - type: string\n                    - type: integer\n                      description: 'The `number` of the milestone to associate this issue with. _NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise._'\n                  nullable: true\n                labels:\n                  type: array\n                  description: 'Labels to associate with this issue. _NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise._'\n                  items:\n                    oneOf:\n                      - type: string\n                      - type: object\n                        properties:\n                          id:\n                            type: integer\n                          name:\n                            type: string\n                          description:\n                            type: string\n                            nullable: true\n                          color:\n                            type: string\n                            nullable: true\n                assignees:\n                  type: array\n                  description: 'Logins for Users to assign to this issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._'\n                  items:\n                    type: string\n              required:\n                - title\n            example:\n              title: Found a bug\n              body: I'm having a problem with this.\n              assignees:\n                - octocat\n              milestone: 1\n              labels:\n                - bug\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/issue'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue'\n          headers:\n            Location:\n              example: https://api.github.com/repos/octocat/Hello-World/issues/1347\n              schema:\n                type: string\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '410':\n          $ref: '#/components/responses/gone'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n        '503':\n          $ref: '#/components/responses/service_unavailable'\n      x-github:\n        triggersNotification: true\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: null\n  /repos/{owner}/{repo}/issues/comments:\n    get:\n      summary: List issue comments for a repository\n      description: By default, Issue Comments are ordered by ascending ID.\n      tags:\n        - issues\n      operationId: issues/list-comments-for-repo\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#list-issue-comments-for-a-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/sort'\n        - name: direction\n          description: Either `asc` or `desc`. Ignored without the `sort` parameter.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - $ref: '#/components/parameters/since'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/issue-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue-comment-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: comments\n  /repos/{owner}/{repo}/issues/comments/{comment_id}:\n    get:\n      summary: Get an issue comment\n      description: ''\n      tags:\n        - issues\n      operationId: issues/get-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#get-an-issue-comment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/comment-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/issue-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue-comment'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: comments\n    patch:\n      summary: Update an issue comment\n      description: ''\n      tags:\n        - issues\n      operationId: issues/update-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#update-an-issue-comment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/comment-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                body:\n                  type: string\n                  description: The contents of the comment.\n              required:\n                - body\n            example:\n              body: Me too\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/issue-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue-comment'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: comments\n    delete:\n      summary: Delete an issue comment\n      description: ''\n      tags:\n        - issues\n      operationId: issues/delete-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#delete-an-issue-comment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/comment-id'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: comments\n  /repos/{owner}/{repo}/issues/events:\n    get:\n      summary: List issue events for a repository\n      description: ''\n      tags:\n        - issues\n      operationId: issues/list-events-for-repo\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#list-issue-events-for-a-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/issue-event'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue-event-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: events\n  /repos/{owner}/{repo}/issues/events/{event_id}:\n    get:\n      summary: Get an issue event\n      description: ''\n      tags:\n        - issues\n      operationId: issues/get-event\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#get-an-issue-event\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: event_id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/issue-event'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue-event'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '410':\n          $ref: '#/components/responses/gone'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: events\n  /repos/{owner}/{repo}/issues/{issue_number}:\n    get:\n      summary: Get an issue\n      description: |-\n        The API returns a [`301 Moved Permanently` status](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-redirects-redirects) if the issue was\n        [transferred](https://docs.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If\n        the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API\n        returns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read\n        access, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe\n        to the [`issues`](https://docs.github.com/webhooks/event-payloads/#issues) webhook.\n\n        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\n        reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\n        the `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\n        request id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.\n      tags:\n        - issues\n      operationId: issues/get\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#get-an-issue\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/issue'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue'\n        '301':\n          $ref: '#/components/responses/moved_permanently'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '410':\n          $ref: '#/components/responses/gone'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: null\n    patch:\n      summary: Update an issue\n      description: Issue owners and users with push access can edit an issue.\n      tags:\n        - issues\n      operationId: issues/update\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues/#update-an-issue\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                title:\n                  oneOf:\n                    - type: string\n                    - type: integer\n                  description: The title of the issue.\n                  nullable: true\n                body:\n                  type: string\n                  description: The contents of the issue.\n                  nullable: true\n                assignee:\n                  type: string\n                  nullable: true\n                  description: Login for the user that this issue should be assigned to. **This field is deprecated.**\n                state:\n                  type: string\n                  description: State of the issue. Either `open` or `closed`.\n                  enum:\n                    - open\n                    - closed\n                milestone:\n                  oneOf:\n                    - type: string\n                    - type: integer\n                      description: 'The `number` of the milestone to associate this issue with or `null` to remove current. _NOTE: Only users with push access can set the milestone for issues. The milestone is silently dropped otherwise._'\n                  nullable: true\n                labels:\n                  type: array\n                  description: 'Labels to associate with this issue. Pass one or more Labels to _replace_ the set of Labels on this Issue. Send an empty array (`[]`) to clear all Labels from the Issue. _NOTE: Only users with push access can set labels for issues. Labels are silently dropped otherwise._'\n                  items:\n                    oneOf:\n                      - type: string\n                      - type: object\n                        properties:\n                          id:\n                            type: integer\n                          name:\n                            type: string\n                          description:\n                            type: string\n                            nullable: true\n                          color:\n                            type: string\n                            nullable: true\n                assignees:\n                  type: array\n                  description: 'Logins for Users to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this Issue. Send an empty array (`[]`) to clear all assignees from the Issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._'\n                  items:\n                    type: string\n            example:\n              title: Found a bug\n              body: I'm having a problem with this.\n              assignees:\n                - octocat\n              milestone: 1\n              state: open\n              labels:\n                - bug\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/issue'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue'\n        '301':\n          $ref: '#/components/responses/moved_permanently'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '410':\n          $ref: '#/components/responses/gone'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n        '503':\n          $ref: '#/components/responses/service_unavailable'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: null\n  /repos/{owner}/{repo}/issues/{issue_number}/assignees:\n    post:\n      summary: Add assignees to an issue\n      description: Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.\n      tags:\n        - issues\n      operationId: issues/add-assignees\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#add-assignees-to-an-issue\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                assignees:\n                  type: array\n                  description: 'Usernames of people to assign this issue to. _NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise._'\n                  items:\n                    type: string\n            example:\n              assignees:\n                - hubot\n                - other_user\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/issue'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: assignees\n    delete:\n      summary: Remove assignees from an issue\n      description: Removes one or more assignees from an issue.\n      tags:\n        - issues\n      operationId: issues/remove-assignees\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#remove-assignees-from-an-issue\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                assignees:\n                  type: array\n                  description: 'Usernames of assignees to remove from an issue. _NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise._'\n                  items:\n                    type: string\n            example:\n              assignees:\n                - hubot\n                - other_user\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/issue'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: assignees\n  /repos/{owner}/{repo}/issues/{issue_number}/comments:\n    get:\n      summary: List issue comments\n      description: Issue Comments are ordered by ascending ID.\n      tags:\n        - issues\n      operationId: issues/list-comments\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#list-issue-comments\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n        - $ref: '#/components/parameters/since'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/issue-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue-comment-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '410':\n          $ref: '#/components/responses/gone'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: comments\n    post:\n      summary: Create an issue comment\n      description: This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n      tags:\n        - issues\n      operationId: issues/create-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#create-an-issue-comment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                body:\n                  type: string\n                  description: The contents of the comment.\n              required:\n                - body\n            example:\n              body: Me too\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/issue-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue-comment'\n          headers:\n            Location:\n              example: https://api.github.com/repos/octocat/Hello-World/issues/comments/1\n              schema:\n                type: string\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '410':\n          $ref: '#/components/responses/gone'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        triggersNotification: true\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: comments\n  /repos/{owner}/{repo}/issues/{issue_number}/events:\n    get:\n      summary: List issue events\n      description: ''\n      tags:\n        - issues\n      operationId: issues/list-events\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#list-issue-events\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/issue-event-for-issue'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue-event-for-issue-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '410':\n          $ref: '#/components/responses/gone'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: events\n  /repos/{owner}/{repo}/issues/{issue_number}/labels:\n    get:\n      summary: List labels for an issue\n      description: ''\n      tags:\n        - issues\n      operationId: issues/list-labels-on-issue\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#list-labels-for-an-issue\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/label'\n              examples:\n                default:\n                  $ref: '#/components/examples/label-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '410':\n          $ref: '#/components/responses/gone'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: labels\n    post:\n      summary: Add labels to an issue\n      description: ''\n      tags:\n        - issues\n      operationId: issues/add-labels\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#add-labels-to-an-issue\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    labels:\n                      type: array\n                      minItems: 1\n                      description: The names of the labels to add to the issue's existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a `string` or an `array` of labels directly, but GitHub recommends passing an object with the `labels` key. You can also replace all of the labels for an issue. For more information, see \"[Set labels for an issue](https://docs.github.com/rest/reference/issues#set-labels-for-an-issue).\"\n                      items:\n                        type: string\n                - type: array\n                  minItems: 1\n                  items:\n                    type: string\n                - type: object\n                  properties:\n                    labels:\n                      type: array\n                      minItems: 1\n                      items:\n                        type: object\n                        properties:\n                          name:\n                            type: string\n                        required:\n                          - name\n                - type: array\n                  minItems: 1\n                  items:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                    required:\n                      - name\n                - type: string\n            example:\n              labels:\n                - bug\n                - enhancement\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/label'\n              examples:\n                default:\n                  $ref: '#/components/examples/label-items'\n        '410':\n          $ref: '#/components/responses/gone'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: labels\n    put:\n      summary: Set labels for an issue\n      description: Removes any previous labels and sets the new labels for an issue.\n      tags:\n        - issues\n      operationId: issues/set-labels\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#set-labels-for-an-issue\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    labels:\n                      type: array\n                      minItems: 1\n                      description: The names of the labels to set for the issue. The labels you set replace any existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a `string` or an `array` of labels directly, but GitHub recommends passing an object with the `labels` key. You can also add labels to the existing labels for an issue. For more information, see \"[Add labels to an issue](https://docs.github.com/rest/reference/issues#add-labels-to-an-issue).\"\n                      items:\n                        type: string\n                - type: array\n                  minItems: 1\n                  items:\n                    type: string\n                - type: object\n                  properties:\n                    labels:\n                      type: array\n                      minItems: 1\n                      items:\n                        type: object\n                        properties:\n                          name:\n                            type: string\n                        required:\n                          - name\n                - type: array\n                  minItems: 1\n                  items:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                    required:\n                      - name\n                - type: string\n            example:\n              labels:\n                - bug\n                - enhancement\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/label'\n              examples:\n                default:\n                  $ref: '#/components/examples/label-items'\n        '410':\n          $ref: '#/components/responses/gone'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: labels\n    delete:\n      summary: Remove all labels from an issue\n      description: ''\n      tags:\n        - issues\n      operationId: issues/remove-all-labels\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#remove-all-labels-from-an-issue\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n      responses:\n        '204':\n          description: Response\n        '410':\n          $ref: '#/components/responses/gone'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: labels\n  /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}:\n    delete:\n      summary: Remove a label from an issue\n      description: Removes the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a `404 Not Found` status if the label does not exist.\n      tags:\n        - issues\n      operationId: issues/remove-label\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#remove-a-label-from-an-issue\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n        - name: name\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/label'\n              examples:\n                default:\n                  $ref: '#/components/examples/label-items-2'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '410':\n          $ref: '#/components/responses/gone'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: labels\n  /repos/{owner}/{repo}/issues/{issue_number}/lock:\n    put:\n      summary: Lock an issue\n      description: |-\n        Users with push access can lock an issue or pull request's conversation.\n\n        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n      tags:\n        - issues\n      operationId: issues/lock\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#lock-an-issue\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              nullable: true\n              properties:\n                lock_reason:\n                  type: string\n                  description: |-\n                    The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:  \n                    \\* `off-topic`  \n                    \\* `too heated`  \n                    \\* `resolved`  \n                    \\* `spam`\n                  enum:\n                    - off-topic\n                    - too heated\n                    - resolved\n                    - spam\n      responses:\n        '204':\n          description: Response\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '410':\n          $ref: '#/components/responses/gone'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: null\n    delete:\n      summary: Unlock an issue\n      description: Users with push access can unlock an issue's conversation.\n      tags:\n        - issues\n      operationId: issues/unlock\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#unlock-an-issue\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n      responses:\n        '204':\n          description: Response\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: null\n  /repos/{owner}/{repo}/issues/{issue_number}/timeline:\n    get:\n      summary: List timeline events for an issue\n      description: ''\n      tags:\n        - issues\n      operationId: issues/list-events-for-timeline\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#list-timeline-events-for-an-issue\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/timeline-issue-events'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '410':\n          $ref: '#/components/responses/gone'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: timeline\n  /repos/{owner}/{repo}/labels:\n    get:\n      summary: List labels for a repository\n      description: ''\n      tags:\n        - issues\n      operationId: issues/list-labels-for-repo\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#list-labels-for-a-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/label'\n              examples:\n                default:\n                  $ref: '#/components/examples/label-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: labels\n    post:\n      summary: Create a label\n      description: ''\n      tags:\n        - issues\n      operationId: issues/create-label\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#create-a-label\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png \":strawberry:\"). For a full list of available emoji and codes, see \"[Emoji cheat sheet](https://github.com/ikatyang/emoji-cheat-sheet).\"\n                color:\n                  type: string\n                  description: The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`.\n                description:\n                  type: string\n                  description: A short description of the label. Must be 100 characters or fewer.\n              required:\n                - name\n            example:\n              name: bug\n              description: Something isn't working\n              color: f29513\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/label'\n              examples:\n                default:\n                  $ref: '#/components/examples/label'\n          headers:\n            Location:\n              example: https://api.github.com/repos/octocat/Hello-World/labels/bug\n              schema:\n                type: string\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: labels\n  /repos/{owner}/{repo}/labels/{name}:\n    get:\n      summary: Get a label\n      description: ''\n      tags:\n        - issues\n      operationId: issues/get-label\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#get-a-label\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: name\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/label'\n              examples:\n                default:\n                  $ref: '#/components/examples/label'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: labels\n    patch:\n      summary: Update a label\n      description: ''\n      tags:\n        - issues\n      operationId: issues/update-label\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#update-a-label\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: name\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                new_name:\n                  type: string\n                  description: The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png \":strawberry:\"). For a full list of available emoji and codes, see \"[Emoji cheat sheet](https://github.com/ikatyang/emoji-cheat-sheet).\"\n                color:\n                  type: string\n                  description: The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`.\n                description:\n                  type: string\n                  description: A short description of the label. Must be 100 characters or fewer.\n            example:\n              new_name: 'bug :bug:'\n              description: Small bug fix required\n              color: b01f26\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/label'\n              examples:\n                default:\n                  $ref: '#/components/examples/label-2'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: labels\n    delete:\n      summary: Delete a label\n      description: ''\n      tags:\n        - issues\n      operationId: issues/delete-label\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#delete-a-label\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: name\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: labels\n  /repos/{owner}/{repo}/milestones:\n    get:\n      summary: List milestones\n      description: ''\n      tags:\n        - issues\n      operationId: issues/list-milestones\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#list-milestones\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: state\n          description: The state of the milestone. Either `open`, `closed`, or `all`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - open\n              - closed\n              - all\n            default: open\n        - name: sort\n          description: What to sort results by. Either `due_on` or `completeness`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - due_on\n              - completeness\n            default: due_on\n        - name: direction\n          description: The direction of the sort. Either `asc` or `desc`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: asc\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/milestone'\n              examples:\n                default:\n                  $ref: '#/components/examples/milestone-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: milestones\n    post:\n      summary: Create a milestone\n      description: ''\n      tags:\n        - issues\n      operationId: issues/create-milestone\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#create-a-milestone\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                title:\n                  type: string\n                  description: The title of the milestone.\n                state:\n                  type: string\n                  description: The state of the milestone. Either `open` or `closed`.\n                  enum:\n                    - open\n                    - closed\n                  default: open\n                description:\n                  type: string\n                  description: A description of the milestone.\n                due_on:\n                  type: string\n                  format: date-time\n                  description: 'The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'\n              required:\n                - title\n            example:\n              title: v1.0\n              state: open\n              description: Tracking milestone for version 1.0\n              due_on: '2012-10-09T23:39:01Z'\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/milestone'\n              examples:\n                default:\n                  $ref: '#/components/examples/milestone'\n          headers:\n            Location:\n              example: https://api.github.com/repos/octocat/Hello-World/milestones/1\n              schema:\n                type: string\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: milestones\n  /repos/{owner}/{repo}/milestones/{milestone_number}:\n    get:\n      summary: Get a milestone\n      description: ''\n      tags:\n        - issues\n      operationId: issues/get-milestone\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#get-a-milestone\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/milestone-number'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/milestone'\n              examples:\n                default:\n                  $ref: '#/components/examples/milestone'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: milestones\n    patch:\n      summary: Update a milestone\n      description: ''\n      tags:\n        - issues\n      operationId: issues/update-milestone\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#update-a-milestone\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/milestone-number'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                title:\n                  type: string\n                  description: The title of the milestone.\n                state:\n                  type: string\n                  description: The state of the milestone. Either `open` or `closed`.\n                  enum:\n                    - open\n                    - closed\n                  default: open\n                description:\n                  type: string\n                  description: A description of the milestone.\n                due_on:\n                  type: string\n                  format: date-time\n                  description: 'The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'\n            example:\n              title: v1.0\n              state: open\n              description: Tracking milestone for version 1.0\n              due_on: '2012-10-09T23:39:01Z'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/milestone'\n              examples:\n                default:\n                  $ref: '#/components/examples/milestone'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: milestones\n    delete:\n      summary: Delete a milestone\n      description: ''\n      tags:\n        - issues\n      operationId: issues/delete-milestone\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#delete-a-milestone\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/milestone-number'\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: milestones\n  /repos/{owner}/{repo}/milestones/{milestone_number}/labels:\n    get:\n      summary: List labels for issues in a milestone\n      description: ''\n      tags:\n        - issues\n      operationId: issues/list-labels-for-milestone\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#list-labels-for-issues-in-a-milestone\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/milestone-number'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/label'\n              examples:\n                default:\n                  $ref: '#/components/examples/label-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: issues\n        subcategory: labels\n  /user/issues:\n    get:\n      summary: List user account issues assigned to the authenticated user\n      description: |-\n        List issues across owned and member repositories assigned to the authenticated user.\n\n        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\n        reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\n        the `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\n        request id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.\n      tags:\n        - issues\n      operationId: issues/list-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/issues#list-user-account-issues-assigned-to-the-authenticated-user\n      parameters:\n        - name: filter\n          description: |-\n            Indicates which sorts of issues to return. Can be one of:  \n            \\* `assigned`: Issues assigned to you  \n            \\* `created`: Issues created by you  \n            \\* `mentioned`: Issues mentioning you  \n            \\* `subscribed`: Issues you're subscribed to updates for  \n            \\* `all` or `repos`: All issues the authenticated user can see, regardless of participation or creation\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - assigned\n              - created\n              - mentioned\n              - subscribed\n              - repos\n              - all\n            default: assigned\n        - name: state\n          description: Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - open\n              - closed\n              - all\n            default: open\n        - $ref: '#/components/parameters/labels'\n        - name: sort\n          description: What to sort results by. Can be either `created`, `updated`, `comments`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - created\n              - updated\n              - comments\n            default: created\n        - $ref: '#/components/parameters/direction'\n        - $ref: '#/components/parameters/since'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/issue'\n              examples:\n                default:\n                  $ref: '#/components/examples/issue-with-repo-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: issues\n        subcategory: null\ncomponents:\n  schemas:\n    issue:\n      title: Issue\n      description: Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          description: URL for the issue\n          example: https://api.github.com/repositories/42/issues/1\n          type: string\n          format: uri\n        repository_url:\n          type: string\n          format: uri\n        labels_url:\n          type: string\n        comments_url:\n          type: string\n          format: uri\n        events_url:\n          type: string\n          format: uri\n        html_url:\n          type: string\n          format: uri\n        number:\n          description: Number uniquely identifying the issue within its repository\n          example: 42\n          type: integer\n        state:\n          description: State of the issue; either 'open' or 'closed'\n          example: open\n          type: string\n        title:\n          description: Title of the issue\n          example: Widget creation fails in Safari on OS X 10.8\n          type: string\n        body:\n          description: Contents of the issue\n          example: It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?\n          type: string\n          nullable: true\n        user:\n          $ref: '#/components/schemas/nullable-simple-user'\n        labels:\n          description: Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository\n          example:\n            - bug\n            - registration\n          type: array\n          items:\n            oneOf:\n              - type: string\n              - type: object\n                properties:\n                  id:\n                    type: integer\n                    format: int64\n                  node_id:\n                    type: string\n                  url:\n                    type: string\n                    format: uri\n                  name:\n                    type: string\n                  description:\n                    type: string\n                    nullable: true\n                  color:\n                    type: string\n                    nullable: true\n                  default:\n                    type: boolean\n        assignee:\n          $ref: '#/components/schemas/nullable-simple-user'\n        assignees:\n          type: array\n          items:\n            $ref: '#/components/schemas/simple-user'\n          nullable: true\n        milestone:\n          $ref: '#/components/schemas/nullable-milestone'\n        locked:\n          type: boolean\n        active_lock_reason:\n          type: string\n          nullable: true\n        comments:\n          type: integer\n        pull_request:\n          type: object\n          properties:\n            merged_at:\n              type: string\n              format: date-time\n              nullable: true\n            diff_url:\n              type: string\n              format: uri\n              nullable: true\n            html_url:\n              type: string\n              format: uri\n              nullable: true\n            patch_url:\n              type: string\n              format: uri\n              nullable: true\n            url:\n              type: string\n              format: uri\n              nullable: true\n          required:\n            - diff_url\n            - html_url\n            - patch_url\n            - url\n        closed_at:\n          type: string\n          format: date-time\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        draft:\n          type: boolean\n        closed_by:\n          $ref: '#/components/schemas/nullable-simple-user'\n        body_html:\n          type: string\n        body_text:\n          type: string\n        timeline_url:\n          type: string\n          format: uri\n        repository:\n          $ref: '#/components/schemas/repository'\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        author_association:\n          $ref: '#/components/schemas/author_association'\n        reactions:\n          $ref: '#/components/schemas/reaction-rollup'\n      required:\n        - assignee\n        - closed_at\n        - comments\n        - comments_url\n        - events_url\n        - html_url\n        - id\n        - node_id\n        - labels\n        - labels_url\n        - milestone\n        - number\n        - repository_url\n        - state\n        - locked\n        - title\n        - url\n        - user\n        - author_association\n        - created_at\n        - updated_at\n    nullable-simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n      nullable: true\n    simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n    nullable-milestone:\n      title: Milestone\n      description: A collection of related issues and pull requests.\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/milestones/1\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/milestones/v1.0\n        labels_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\n        id:\n          type: integer\n          example: 1002604\n        node_id:\n          type: string\n          example: MDk6TWlsZXN0b25lMTAwMjYwNA==\n        number:\n          description: The number of the milestone.\n          type: integer\n          example: 42\n        state:\n          description: The state of the milestone.\n          example: open\n          type: string\n          enum:\n            - open\n            - closed\n          default: open\n        title:\n          description: The title of the milestone.\n          example: v1.0\n          type: string\n        description:\n          type: string\n          example: Tracking milestone for version 1.0\n          nullable: true\n        creator:\n          $ref: '#/components/schemas/nullable-simple-user'\n        open_issues:\n          type: integer\n          example: 4\n        closed_issues:\n          type: integer\n          example: 8\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-04-10T20:09:31Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2014-03-03T18:58:10Z'\n        closed_at:\n          type: string\n          format: date-time\n          example: '2013-02-12T13:22:01Z'\n          nullable: true\n        due_on:\n          type: string\n          format: date-time\n          example: '2012-10-09T23:39:01Z'\n          nullable: true\n      required:\n        - closed_issues\n        - creator\n        - description\n        - due_on\n        - closed_at\n        - id\n        - node_id\n        - labels_url\n        - html_url\n        - number\n        - open_issues\n        - state\n        - title\n        - url\n        - created_at\n        - updated_at\n      nullable: true\n    repository:\n      title: Repository\n      description: A git repository\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the repository\n          example: 42\n          type: integer\n        node_id:\n          type: string\n          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name:\n          description: The name of the repository.\n          type: string\n          example: Team Environment\n        full_name:\n          type: string\n          example: octocat/Hello-World\n        license:\n          $ref: '#/components/schemas/nullable-license-simple'\n        organization:\n          $ref: '#/components/schemas/nullable-simple-user'\n        forks:\n          type: integer\n        permissions:\n          type: object\n          properties:\n            admin:\n              type: boolean\n            pull:\n              type: boolean\n            triage:\n              type: boolean\n            push:\n              type: boolean\n            maintain:\n              type: boolean\n          required:\n            - admin\n            - pull\n            - push\n        owner:\n          $ref: '#/components/schemas/simple-user'\n        private:\n          description: Whether the repository is private or public.\n          default: false\n          type: boolean\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World\n        description:\n          type: string\n          example: This your first repo!\n          nullable: true\n        fork:\n          type: boolean\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World\n        archive_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/downloads\n        events_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/events\n        forks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url:\n          type: string\n          example: git:github.com/octocat/Hello-World.git\n        issue_comment_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/languages\n        merges_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url:\n          type: string\n          example: git@github.com:octocat/Hello-World.git\n        stargazers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/tags\n        teams_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/teams\n        trees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url:\n          type: string\n          example: https://github.com/octocat/Hello-World.git\n        mirror_url:\n          type: string\n          format: uri\n          example: git:git.example.com/octocat/Hello-World\n          nullable: true\n        hooks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url:\n          type: string\n          format: uri\n          example: https://svn.github.com/octocat/Hello-World\n        homepage:\n          type: string\n          format: uri\n          example: https://github.com\n          nullable: true\n        language:\n          type: string\n          nullable: true\n        forks_count:\n          type: integer\n          example: 9\n        stargazers_count:\n          type: integer\n          example: 80\n        watchers_count:\n          type: integer\n          example: 80\n        size:\n          type: integer\n          example: 108\n        default_branch:\n          description: The default branch of the repository.\n          type: string\n          example: master\n        open_issues_count:\n          type: integer\n          example: 0\n        is_template:\n          description: Whether this repository acts as a template that can be used to generate new repositories.\n          default: false\n          type: boolean\n          example: true\n        topics:\n          type: array\n          items:\n            type: string\n        has_issues:\n          description: Whether issues are enabled.\n          default: true\n          type: boolean\n          example: true\n        has_projects:\n          description: Whether projects are enabled.\n          default: true\n          type: boolean\n          example: true\n        has_wiki:\n          description: Whether the wiki is enabled.\n          default: true\n          type: boolean\n          example: true\n        has_pages:\n          type: boolean\n        has_downloads:\n          description: Whether downloads are enabled.\n          default: true\n          type: boolean\n          example: true\n        archived:\n          description: Whether the repository is archived.\n          default: false\n          type: boolean\n        disabled:\n          type: boolean\n          description: Returns whether or not this repository disabled.\n        visibility:\n          description: 'The repository visibility: public, private, or internal.'\n          default: public\n          type: string\n        pushed_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:06:43Z'\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:01:12Z'\n          nullable: true\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:14:43Z'\n          nullable: true\n        allow_rebase_merge:\n          description: Whether to allow rebase merges for pull requests.\n          default: true\n          type: boolean\n          example: true\n        template_repository:\n          nullable: true\n          type: object\n          properties:\n            id:\n              type: integer\n            node_id:\n              type: string\n            name:\n              type: string\n            full_name:\n              type: string\n            owner:\n              type: object\n              properties:\n                login:\n                  type: string\n                id:\n                  type: integer\n                node_id:\n                  type: string\n                avatar_url:\n                  type: string\n                gravatar_id:\n                  type: string\n                url:\n                  type: string\n                html_url:\n                  type: string\n                followers_url:\n                  type: string\n                following_url:\n                  type: string\n                gists_url:\n                  type: string\n                starred_url:\n                  type: string\n                subscriptions_url:\n                  type: string\n                organizations_url:\n                  type: string\n                repos_url:\n                  type: string\n                events_url:\n                  type: string\n                received_events_url:\n                  type: string\n                type:\n                  type: string\n                site_admin:\n                  type: boolean\n            private:\n              type: boolean\n            html_url:\n              type: string\n            description:\n              type: string\n            fork:\n              type: boolean\n            url:\n              type: string\n            archive_url:\n              type: string\n            assignees_url:\n              type: string\n            blobs_url:\n              type: string\n            branches_url:\n              type: string\n            collaborators_url:\n              type: string\n            comments_url:\n              type: string\n            commits_url:\n              type: string\n            compare_url:\n              type: string\n            contents_url:\n              type: string\n            contributors_url:\n              type: string\n            deployments_url:\n              type: string\n            downloads_url:\n              type: string\n            events_url:\n              type: string\n            forks_url:\n              type: string\n            git_commits_url:\n              type: string\n            git_refs_url:\n              type: string\n            git_tags_url:\n              type: string\n            git_url:\n              type: string\n            issue_comment_url:\n              type: string\n            issue_events_url:\n              type: string\n            issues_url:\n              type: string\n            keys_url:\n              type: string\n            labels_url:\n              type: string\n            languages_url:\n              type: string\n            merges_url:\n              type: string\n            milestones_url:\n              type: string\n            notifications_url:\n              type: string\n            pulls_url:\n              type: string\n            releases_url:\n              type: string\n            ssh_url:\n              type: string\n            stargazers_url:\n              type: string\n            statuses_url:\n              type: string\n            subscribers_url:\n              type: string\n            subscription_url:\n              type: string\n            tags_url:\n              type: string\n            teams_url:\n              type: string\n            trees_url:\n              type: string\n            clone_url:\n              type: string\n            mirror_url:\n              type: string\n            hooks_url:\n              type: string\n            svn_url:\n              type: string\n            homepage:\n              type: string\n            language:\n              type: string\n            forks_count:\n              type: integer\n            stargazers_count:\n              type: integer\n            watchers_count:\n              type: integer\n            size:\n              type: integer\n            default_branch:\n              type: string\n            open_issues_count:\n              type: integer\n            is_template:\n              type: boolean\n            topics:\n              type: array\n              items:\n                type: string\n            has_issues:\n              type: boolean\n            has_projects:\n              type: boolean\n            has_wiki:\n              type: boolean\n            has_pages:\n              type: boolean\n            has_downloads:\n              type: boolean\n            archived:\n              type: boolean\n            disabled:\n              type: boolean\n            visibility:\n              type: string\n            pushed_at:\n              type: string\n            created_at:\n              type: string\n            updated_at:\n              type: string\n            permissions:\n              type: object\n              properties:\n                admin:\n                  type: boolean\n                maintain:\n                  type: boolean\n                push:\n                  type: boolean\n                triage:\n                  type: boolean\n                pull:\n                  type: boolean\n            allow_rebase_merge:\n              type: boolean\n            temp_clone_token:\n              type: string\n            allow_squash_merge:\n              type: boolean\n            allow_auto_merge:\n              type: boolean\n            delete_branch_on_merge:\n              type: boolean\n            allow_update_branch:\n              type: boolean\n            allow_merge_commit:\n              type: boolean\n            subscribers_count:\n              type: integer\n            network_count:\n              type: integer\n        temp_clone_token:\n          type: string\n        allow_squash_merge:\n          description: Whether to allow squash merges for pull requests.\n          default: true\n          type: boolean\n          example: true\n        allow_auto_merge:\n          description: Whether to allow Auto-merge to be used on pull requests.\n          default: false\n          type: boolean\n          example: false\n        delete_branch_on_merge:\n          description: Whether to delete head branches when pull requests are merged\n          default: false\n          type: boolean\n          example: false\n        allow_merge_commit:\n          description: Whether to allow merge commits for pull requests.\n          default: true\n          type: boolean\n          example: true\n        allow_forking:\n          description: Whether to allow forking this repo\n          type: boolean\n        subscribers_count:\n          type: integer\n        network_count:\n          type: integer\n        open_issues:\n          type: integer\n        watchers:\n          type: integer\n        master_branch:\n          type: string\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:42Z\"'\n      required:\n        - archive_url\n        - assignees_url\n        - blobs_url\n        - branches_url\n        - collaborators_url\n        - comments_url\n        - commits_url\n        - compare_url\n        - contents_url\n        - contributors_url\n        - deployments_url\n        - description\n        - downloads_url\n        - events_url\n        - fork\n        - forks_url\n        - full_name\n        - git_commits_url\n        - git_refs_url\n        - git_tags_url\n        - hooks_url\n        - html_url\n        - id\n        - node_id\n        - issue_comment_url\n        - issue_events_url\n        - issues_url\n        - keys_url\n        - labels_url\n        - languages_url\n        - merges_url\n        - milestones_url\n        - name\n        - notifications_url\n        - owner\n        - private\n        - pulls_url\n        - releases_url\n        - stargazers_url\n        - statuses_url\n        - subscribers_url\n        - subscription_url\n        - tags_url\n        - teams_url\n        - trees_url\n        - url\n        - clone_url\n        - default_branch\n        - forks\n        - forks_count\n        - git_url\n        - has_downloads\n        - has_issues\n        - has_projects\n        - has_wiki\n        - has_pages\n        - homepage\n        - language\n        - archived\n        - disabled\n        - mirror_url\n        - open_issues\n        - open_issues_count\n        - license\n        - pushed_at\n        - size\n        - ssh_url\n        - stargazers_count\n        - svn_url\n        - watchers\n        - watchers_count\n        - created_at\n        - updated_at\n    nullable-integration:\n      title: GitHub app\n      description: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the GitHub app\n          example: 37\n          type: integer\n        slug:\n          description: The slug name of the GitHub app\n          example: probot-owners\n          type: string\n        node_id:\n          type: string\n          example: MDExOkludGVncmF0aW9uMQ==\n        owner:\n          $ref: '#/components/schemas/nullable-simple-user'\n        name:\n          description: The name of the GitHub app\n          example: Probot Owners\n          type: string\n        description:\n          type: string\n          example: The description of the app.\n          nullable: true\n        external_url:\n          type: string\n          format: uri\n          example: https://example.com\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/apps/super-ci\n        created_at:\n          type: string\n          format: date-time\n          example: '2017-07-08T16:18:44-04:00'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2017-07-08T16:18:44-04:00'\n        permissions:\n          description: The set of permissions for the GitHub app\n          type: object\n          properties:\n            issues:\n              type: string\n            checks:\n              type: string\n            metadata:\n              type: string\n            contents:\n              type: string\n            deployments:\n              type: string\n          additionalProperties:\n            type: string\n          example:\n            issues: read\n            deployments: write\n        events:\n          description: The list of events for the GitHub app\n          example:\n            - label\n            - deployment\n          type: array\n          items:\n            type: string\n        installations_count:\n          description: The number of installations associated with the GitHub app\n          example: 5\n          type: integer\n        client_id:\n          type: string\n          example: '\"Iv1.25b5d1e65ffc4022\"'\n        client_secret:\n          type: string\n          example: '\"1d4b2097ac622ba702d19de498f005747a8b21d3\"'\n        webhook_secret:\n          type: string\n          example: '\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\"'\n          nullable: true\n        pem:\n          type: string\n          example: '\"-----BEGIN RSA PRIVATE KEY-----\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\n-----END RSA PRIVATE KEY-----\\n\"'\n      required:\n        - id\n        - node_id\n        - owner\n        - name\n        - description\n        - external_url\n        - html_url\n        - created_at\n        - updated_at\n        - permissions\n        - events\n      nullable: true\n    author_association:\n      title: author_association\n      type: string\n      example: OWNER\n      description: How the author is associated with the repository.\n      enum:\n        - COLLABORATOR\n        - CONTRIBUTOR\n        - FIRST_TIMER\n        - FIRST_TIME_CONTRIBUTOR\n        - MANNEQUIN\n        - MEMBER\n        - NONE\n        - OWNER\n    reaction-rollup:\n      title: Reaction Rollup\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        total_count:\n          type: integer\n        '+1':\n          type: integer\n        '-1':\n          type: integer\n        laugh:\n          type: integer\n        confused:\n          type: integer\n        heart:\n          type: integer\n        hooray:\n          type: integer\n        eyes:\n          type: integer\n        rocket:\n          type: integer\n      required:\n        - url\n        - total_count\n        - '+1'\n        - '-1'\n        - laugh\n        - confused\n        - heart\n        - hooray\n        - eyes\n        - rocket\n    basic-error:\n      title: Basic Error\n      description: Basic Error\n      type: object\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        url:\n          type: string\n        status:\n          type: string\n    validation-error:\n      title: Validation Error\n      description: Validation Error\n      type: object\n      required:\n        - message\n        - documentation_url\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        errors:\n          type: array\n          items:\n            type: object\n            required:\n              - code\n            properties:\n              resource:\n                type: string\n              field:\n                type: string\n              message:\n                type: string\n              code:\n                type: string\n              index:\n                type: integer\n              value:\n                oneOf:\n                  - type: string\n                    nullable: true\n                  - type: integer\n                    nullable: true\n                  - type: array\n                    nullable: true\n                    items:\n                      type: string\n    nullable-license-simple:\n      title: License Simple\n      description: License Simple\n      type: object\n      properties:\n        key:\n          type: string\n          example: mit\n        name:\n          type: string\n          example: MIT License\n        url:\n          type: string\n          nullable: true\n          format: uri\n          example: https://api.github.com/licenses/mit\n        spdx_id:\n          type: string\n          nullable: true\n          example: MIT\n        node_id:\n          type: string\n          example: MDc6TGljZW5zZW1pdA==\n        html_url:\n          type: string\n          format: uri\n      required:\n        - key\n        - name\n        - url\n        - spdx_id\n        - node_id\n      nullable: true\n    issue-comment:\n      title: Issue Comment\n      description: Comments provide a way for people to collaborate on an issue.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the issue comment\n          example: 42\n          type: integer\n        node_id:\n          type: string\n        url:\n          description: URL for the issue comment\n          example: https://api.github.com/repositories/42/issues/comments/1\n          type: string\n          format: uri\n        body:\n          description: Contents of the issue comment\n          example: What version of Safari were you using when you observed this bug?\n          type: string\n        body_text:\n          type: string\n        body_html:\n          type: string\n        html_url:\n          type: string\n          format: uri\n        user:\n          $ref: '#/components/schemas/nullable-simple-user'\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-04-14T16:00:49Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-04-14T16:00:49Z'\n        issue_url:\n          type: string\n          format: uri\n        author_association:\n          $ref: '#/components/schemas/author_association'\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        reactions:\n          $ref: '#/components/schemas/reaction-rollup'\n      required:\n        - id\n        - node_id\n        - html_url\n        - issue_url\n        - author_association\n        - user\n        - url\n        - created_at\n        - updated_at\n    issue-event:\n      title: Issue Event\n      description: Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDEwOklzc3VlRXZlbnQx\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/issues/events/1\n        actor:\n          $ref: '#/components/schemas/nullable-simple-user'\n        event:\n          type: string\n          example: closed\n        commit_id:\n          type: string\n          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n          nullable: true\n        commit_url:\n          type: string\n          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-04-14T16:00:49Z'\n        issue:\n          $ref: '#/components/schemas/nullable-issue'\n        label:\n          $ref: '#/components/schemas/issue-event-label'\n        assignee:\n          $ref: '#/components/schemas/nullable-simple-user'\n        assigner:\n          $ref: '#/components/schemas/nullable-simple-user'\n        review_requester:\n          $ref: '#/components/schemas/nullable-simple-user'\n        requested_reviewer:\n          $ref: '#/components/schemas/nullable-simple-user'\n        requested_team:\n          $ref: '#/components/schemas/team'\n        dismissed_review:\n          $ref: '#/components/schemas/issue-event-dismissed-review'\n        milestone:\n          $ref: '#/components/schemas/issue-event-milestone'\n        project_card:\n          $ref: '#/components/schemas/issue-event-project-card'\n        rename:\n          $ref: '#/components/schemas/issue-event-rename'\n        author_association:\n          $ref: '#/components/schemas/author_association'\n        lock_reason:\n          type: string\n          nullable: true\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n      required:\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n    nullable-issue:\n      title: Issue\n      description: Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          description: URL for the issue\n          example: https://api.github.com/repositories/42/issues/1\n          type: string\n          format: uri\n        repository_url:\n          type: string\n          format: uri\n        labels_url:\n          type: string\n        comments_url:\n          type: string\n          format: uri\n        events_url:\n          type: string\n          format: uri\n        html_url:\n          type: string\n          format: uri\n        number:\n          description: Number uniquely identifying the issue within its repository\n          example: 42\n          type: integer\n        state:\n          description: State of the issue; either 'open' or 'closed'\n          example: open\n          type: string\n        title:\n          description: Title of the issue\n          example: Widget creation fails in Safari on OS X 10.8\n          type: string\n        body:\n          description: Contents of the issue\n          example: It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?\n          type: string\n          nullable: true\n        user:\n          $ref: '#/components/schemas/nullable-simple-user'\n        labels:\n          description: Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository\n          example:\n            - bug\n            - registration\n          type: array\n          items:\n            oneOf:\n              - type: string\n              - type: object\n                properties:\n                  id:\n                    type: integer\n                    format: int64\n                  node_id:\n                    type: string\n                  url:\n                    type: string\n                    format: uri\n                  name:\n                    type: string\n                  description:\n                    type: string\n                    nullable: true\n                  color:\n                    type: string\n                    nullable: true\n                  default:\n                    type: boolean\n        assignee:\n          $ref: '#/components/schemas/nullable-simple-user'\n        assignees:\n          type: array\n          items:\n            $ref: '#/components/schemas/simple-user'\n          nullable: true\n        milestone:\n          $ref: '#/components/schemas/nullable-milestone'\n        locked:\n          type: boolean\n        active_lock_reason:\n          type: string\n          nullable: true\n        comments:\n          type: integer\n        pull_request:\n          type: object\n          properties:\n            merged_at:\n              type: string\n              format: date-time\n              nullable: true\n            diff_url:\n              type: string\n              format: uri\n              nullable: true\n            html_url:\n              type: string\n              format: uri\n              nullable: true\n            patch_url:\n              type: string\n              format: uri\n              nullable: true\n            url:\n              type: string\n              format: uri\n              nullable: true\n          required:\n            - diff_url\n            - html_url\n            - patch_url\n            - url\n        closed_at:\n          type: string\n          format: date-time\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        draft:\n          type: boolean\n        closed_by:\n          $ref: '#/components/schemas/nullable-simple-user'\n        body_html:\n          type: string\n        body_text:\n          type: string\n        timeline_url:\n          type: string\n          format: uri\n        repository:\n          $ref: '#/components/schemas/repository'\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        author_association:\n          $ref: '#/components/schemas/author_association'\n        reactions:\n          $ref: '#/components/schemas/reaction-rollup'\n      required:\n        - assignee\n        - closed_at\n        - comments\n        - comments_url\n        - events_url\n        - html_url\n        - id\n        - node_id\n        - labels\n        - labels_url\n        - milestone\n        - number\n        - repository_url\n        - state\n        - locked\n        - title\n        - url\n        - user\n        - author_association\n        - created_at\n        - updated_at\n      nullable: true\n    issue-event-label:\n      title: Issue Event Label\n      description: Issue Event Label\n      type: object\n      properties:\n        name:\n          type: string\n          nullable: true\n        color:\n          type: string\n          nullable: true\n      required:\n        - name\n        - color\n    team:\n      title: Team\n      description: Groups of organization members that gives permissions on specified repositories.\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        name:\n          type: string\n        slug:\n          type: string\n        description:\n          type: string\n          nullable: true\n        privacy:\n          type: string\n        permission:\n          type: string\n        permissions:\n          type: object\n          properties:\n            pull:\n              type: boolean\n            triage:\n              type: boolean\n            push:\n              type: boolean\n            maintain:\n              type: boolean\n            admin:\n              type: boolean\n          required:\n            - pull\n            - triage\n            - push\n            - maintain\n            - admin\n        url:\n          type: string\n          format: uri\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/orgs/rails/teams/core\n        members_url:\n          type: string\n        repositories_url:\n          type: string\n          format: uri\n        parent:\n          $ref: '#/components/schemas/nullable-team-simple'\n      required:\n        - id\n        - node_id\n        - url\n        - members_url\n        - name\n        - description\n        - permission\n        - html_url\n        - repositories_url\n        - slug\n        - parent\n    issue-event-dismissed-review:\n      title: Issue Event Dismissed Review\n      type: object\n      properties:\n        state:\n          type: string\n        review_id:\n          type: integer\n        dismissal_message:\n          type: string\n          nullable: true\n        dismissal_commit_id:\n          type: string\n          nullable: true\n      required:\n        - state\n        - review_id\n        - dismissal_message\n    issue-event-milestone:\n      title: Issue Event Milestone\n      description: Issue Event Milestone\n      type: object\n      properties:\n        title:\n          type: string\n      required:\n        - title\n    issue-event-project-card:\n      title: Issue Event Project Card\n      description: Issue Event Project Card\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        id:\n          type: integer\n        project_url:\n          type: string\n          format: uri\n        project_id:\n          type: integer\n        column_name:\n          type: string\n        previous_column_name:\n          type: string\n      required:\n        - url\n        - id\n        - project_url\n        - project_id\n        - column_name\n    issue-event-rename:\n      title: Issue Event Rename\n      description: Issue Event Rename\n      type: object\n      properties:\n        from:\n          type: string\n        to:\n          type: string\n      required:\n        - from\n        - to\n    nullable-team-simple:\n      title: Team Simple\n      description: Groups of organization members that gives permissions on specified repositories.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the team\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VGVhbTE=\n        url:\n          description: URL for the team\n          type: string\n          format: uri\n          example: https://api.github.com/organizations/1/team/1\n        members_url:\n          type: string\n          example: https://api.github.com/organizations/1/team/1/members{/member}\n        name:\n          description: Name of the team\n          type: string\n          example: Justice League\n        description:\n          description: Description of the team\n          type: string\n          nullable: true\n          example: A great team.\n        permission:\n          description: Permission that the team will have for its repositories\n          type: string\n          example: admin\n        privacy:\n          description: The level of privacy this team should have\n          type: string\n          example: closed\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/orgs/rails/teams/core\n        repositories_url:\n          type: string\n          format: uri\n          example: https://api.github.com/organizations/1/team/1/repos\n        slug:\n          type: string\n          example: justice-league\n        ldap_dn:\n          description: Distinguished Name (DN) that team maps to within LDAP environment\n          example: uid=example,ou=users,dc=github,dc=com\n          type: string\n      required:\n        - id\n        - node_id\n        - url\n        - members_url\n        - name\n        - description\n        - permission\n        - html_url\n        - repositories_url\n        - slug\n      nullable: true\n    issue-event-for-issue:\n      title: Issue Event for Issue\n      description: Issue Event for Issue\n      anyOf:\n        - $ref: '#/components/schemas/labeled-issue-event'\n        - $ref: '#/components/schemas/unlabeled-issue-event'\n        - $ref: '#/components/schemas/assigned-issue-event'\n        - $ref: '#/components/schemas/unassigned-issue-event'\n        - $ref: '#/components/schemas/milestoned-issue-event'\n        - $ref: '#/components/schemas/demilestoned-issue-event'\n        - $ref: '#/components/schemas/renamed-issue-event'\n        - $ref: '#/components/schemas/review-requested-issue-event'\n        - $ref: '#/components/schemas/review-request-removed-issue-event'\n        - $ref: '#/components/schemas/review-dismissed-issue-event'\n        - $ref: '#/components/schemas/locked-issue-event'\n        - $ref: '#/components/schemas/added-to-project-issue-event'\n        - $ref: '#/components/schemas/moved-column-in-project-issue-event'\n        - $ref: '#/components/schemas/removed-from-project-issue-event'\n        - $ref: '#/components/schemas/converted-note-to-issue-issue-event'\n    labeled-issue-event:\n      title: Labeled Issue Event\n      description: Labeled Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        label:\n          type: object\n          properties:\n            name:\n              type: string\n            color:\n              type: string\n          required:\n            - name\n            - color\n      required:\n        - label\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n    unlabeled-issue-event:\n      title: Unlabeled Issue Event\n      description: Unlabeled Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        label:\n          type: object\n          properties:\n            name:\n              type: string\n            color:\n              type: string\n          required:\n            - name\n            - color\n      required:\n        - label\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n    assigned-issue-event:\n      title: Assigned Issue Event\n      description: Assigned Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/integration'\n        assignee:\n          $ref: '#/components/schemas/simple-user'\n        assigner:\n          $ref: '#/components/schemas/simple-user'\n      required:\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n        - assignee\n        - assigner\n    unassigned-issue-event:\n      title: Unassigned Issue Event\n      description: Unassigned Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        assignee:\n          $ref: '#/components/schemas/simple-user'\n        assigner:\n          $ref: '#/components/schemas/simple-user'\n      required:\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n        - assignee\n        - assigner\n    milestoned-issue-event:\n      title: Milestoned Issue Event\n      description: Milestoned Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        milestone:\n          type: object\n          properties:\n            title:\n              type: string\n          required:\n            - title\n      required:\n        - milestone\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n    demilestoned-issue-event:\n      title: Demilestoned Issue Event\n      description: Demilestoned Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        milestone:\n          type: object\n          properties:\n            title:\n              type: string\n          required:\n            - title\n      required:\n        - milestone\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n    renamed-issue-event:\n      title: Renamed Issue Event\n      description: Renamed Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        rename:\n          type: object\n          properties:\n            from:\n              type: string\n            to:\n              type: string\n          required:\n            - from\n            - to\n      required:\n        - rename\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n    review-requested-issue-event:\n      title: Review Requested Issue Event\n      description: Review Requested Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        review_requester:\n          $ref: '#/components/schemas/simple-user'\n        requested_team:\n          $ref: '#/components/schemas/team'\n        requested_reviewer:\n          $ref: '#/components/schemas/simple-user'\n      required:\n        - review_requester\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n    review-request-removed-issue-event:\n      title: Review Request Removed Issue Event\n      description: Review Request Removed Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        review_requester:\n          $ref: '#/components/schemas/simple-user'\n        requested_team:\n          $ref: '#/components/schemas/team'\n        requested_reviewer:\n          $ref: '#/components/schemas/simple-user'\n      required:\n        - review_requester\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n    review-dismissed-issue-event:\n      title: Review Dismissed Issue Event\n      description: Review Dismissed Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        dismissed_review:\n          type: object\n          properties:\n            state:\n              type: string\n            review_id:\n              type: integer\n            dismissal_message:\n              nullable: true\n              type: string\n            dismissal_commit_id:\n              type: string\n          required:\n            - state\n            - review_id\n            - dismissal_message\n      required:\n        - dismissed_review\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n    locked-issue-event:\n      title: Locked Issue Event\n      description: Locked Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        lock_reason:\n          type: string\n          example: '\"off-topic\"'\n          nullable: true\n      required:\n        - lock_reason\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n    added-to-project-issue-event:\n      title: Added to Project Issue Event\n      description: Added to Project Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        project_card:\n          type: object\n          properties:\n            id:\n              type: integer\n            url:\n              type: string\n              format: uri\n            project_id:\n              type: integer\n            project_url:\n              type: string\n              format: uri\n            column_name:\n              type: string\n            previous_column_name:\n              type: string\n          required:\n            - id\n            - url\n            - project_id\n            - project_url\n            - column_name\n      required:\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n    moved-column-in-project-issue-event:\n      title: Moved Column in Project Issue Event\n      description: Moved Column in Project Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        project_card:\n          type: object\n          properties:\n            id:\n              type: integer\n            url:\n              type: string\n              format: uri\n            project_id:\n              type: integer\n            project_url:\n              type: string\n              format: uri\n            column_name:\n              type: string\n            previous_column_name:\n              type: string\n          required:\n            - id\n            - url\n            - project_id\n            - project_url\n            - column_name\n      required:\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n    removed-from-project-issue-event:\n      title: Removed from Project Issue Event\n      description: Removed from Project Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        project_card:\n          type: object\n          properties:\n            id:\n              type: integer\n            url:\n              type: string\n              format: uri\n            project_id:\n              type: integer\n            project_url:\n              type: string\n              format: uri\n            column_name:\n              type: string\n            previous_column_name:\n              type: string\n          required:\n            - id\n            - url\n            - project_id\n            - project_url\n            - column_name\n      required:\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n    converted-note-to-issue-issue-event:\n      title: Converted Note to Issue Issue Event\n      description: Converted Note to Issue Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/integration'\n        project_card:\n          type: object\n          properties:\n            id:\n              type: integer\n            url:\n              type: string\n              format: uri\n            project_id:\n              type: integer\n            project_url:\n              type: string\n              format: uri\n            column_name:\n              type: string\n            previous_column_name:\n              type: string\n          required:\n            - id\n            - url\n            - project_id\n            - project_url\n            - column_name\n      required:\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n    integration:\n      title: GitHub app\n      description: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the GitHub app\n          example: 37\n          type: integer\n        slug:\n          description: The slug name of the GitHub app\n          example: probot-owners\n          type: string\n        node_id:\n          type: string\n          example: MDExOkludGVncmF0aW9uMQ==\n        owner:\n          $ref: '#/components/schemas/nullable-simple-user'\n        name:\n          description: The name of the GitHub app\n          example: Probot Owners\n          type: string\n        description:\n          type: string\n          example: The description of the app.\n          nullable: true\n        external_url:\n          type: string\n          format: uri\n          example: https://example.com\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/apps/super-ci\n        created_at:\n          type: string\n          format: date-time\n          example: '2017-07-08T16:18:44-04:00'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2017-07-08T16:18:44-04:00'\n        permissions:\n          description: The set of permissions for the GitHub app\n          type: object\n          properties:\n            issues:\n              type: string\n            checks:\n              type: string\n            metadata:\n              type: string\n            contents:\n              type: string\n            deployments:\n              type: string\n          additionalProperties:\n            type: string\n          example:\n            issues: read\n            deployments: write\n        events:\n          description: The list of events for the GitHub app\n          example:\n            - label\n            - deployment\n          type: array\n          items:\n            type: string\n        installations_count:\n          description: The number of installations associated with the GitHub app\n          example: 5\n          type: integer\n        client_id:\n          type: string\n          example: '\"Iv1.25b5d1e65ffc4022\"'\n        client_secret:\n          type: string\n          example: '\"1d4b2097ac622ba702d19de498f005747a8b21d3\"'\n        webhook_secret:\n          type: string\n          example: '\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\"'\n          nullable: true\n        pem:\n          type: string\n          example: '\"-----BEGIN RSA PRIVATE KEY-----\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\n-----END RSA PRIVATE KEY-----\\n\"'\n      required:\n        - id\n        - node_id\n        - owner\n        - name\n        - description\n        - external_url\n        - html_url\n        - created_at\n        - updated_at\n        - permissions\n        - events\n    label:\n      title: Label\n      description: Color-coded labels help you categorize and filter your issues (just like labels in Gmail).\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 208045946\n        node_id:\n          type: string\n          example: MDU6TGFiZWwyMDgwNDU5NDY=\n        url:\n          description: URL for the label\n          example: https://api.github.com/repositories/42/labels/bug\n          type: string\n          format: uri\n        name:\n          description: The name of the label.\n          example: bug\n          type: string\n        description:\n          type: string\n          example: Something isn't working\n          nullable: true\n        color:\n          description: '6-character hex code, without the leading #, identifying the color'\n          example: FFFFFF\n          type: string\n        default:\n          type: boolean\n          example: true\n      required:\n        - id\n        - node_id\n        - url\n        - name\n        - description\n        - color\n        - default\n    timeline-issue-events:\n      title: Timeline Event\n      description: Timeline Event\n      type: object\n      anyOf:\n        - $ref: '#/components/schemas/labeled-issue-event'\n        - $ref: '#/components/schemas/unlabeled-issue-event'\n        - $ref: '#/components/schemas/milestoned-issue-event'\n        - $ref: '#/components/schemas/demilestoned-issue-event'\n        - $ref: '#/components/schemas/renamed-issue-event'\n        - $ref: '#/components/schemas/review-requested-issue-event'\n        - $ref: '#/components/schemas/review-request-removed-issue-event'\n        - $ref: '#/components/schemas/review-dismissed-issue-event'\n        - $ref: '#/components/schemas/locked-issue-event'\n        - $ref: '#/components/schemas/added-to-project-issue-event'\n        - $ref: '#/components/schemas/moved-column-in-project-issue-event'\n        - $ref: '#/components/schemas/removed-from-project-issue-event'\n        - $ref: '#/components/schemas/converted-note-to-issue-issue-event'\n        - $ref: '#/components/schemas/timeline-comment-event'\n        - $ref: '#/components/schemas/timeline-cross-referenced-event'\n        - $ref: '#/components/schemas/timeline-committed-event'\n        - $ref: '#/components/schemas/timeline-reviewed-event'\n        - $ref: '#/components/schemas/timeline-line-commented-event'\n        - $ref: '#/components/schemas/timeline-commit-commented-event'\n        - $ref: '#/components/schemas/timeline-assigned-issue-event'\n        - $ref: '#/components/schemas/timeline-unassigned-issue-event'\n    timeline-comment-event:\n      title: Timeline Comment Event\n      description: Timeline Comment Event\n      type: object\n      properties:\n        event:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        id:\n          description: Unique identifier of the issue comment\n          example: 42\n          type: integer\n        node_id:\n          type: string\n        url:\n          description: URL for the issue comment\n          example: https://api.github.com/repositories/42/issues/comments/1\n          type: string\n          format: uri\n        body:\n          description: Contents of the issue comment\n          example: What version of Safari were you using when you observed this bug?\n          type: string\n        body_text:\n          type: string\n        body_html:\n          type: string\n        html_url:\n          type: string\n          format: uri\n        user:\n          $ref: '#/components/schemas/simple-user'\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-04-14T16:00:49Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-04-14T16:00:49Z'\n        issue_url:\n          type: string\n          format: uri\n        author_association:\n          $ref: '#/components/schemas/author_association'\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        reactions:\n          $ref: '#/components/schemas/reaction-rollup'\n      required:\n        - event\n        - actor\n        - id\n        - node_id\n        - html_url\n        - issue_url\n        - author_association\n        - user\n        - url\n        - created_at\n        - updated_at\n    timeline-cross-referenced-event:\n      title: Timeline Cross Referenced Event\n      description: Timeline Cross Referenced Event\n      type: object\n      properties:\n        event:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        source:\n          type: object\n          properties:\n            type:\n              type: string\n            issue:\n              $ref: '#/components/schemas/issue'\n      required:\n        - event\n        - created_at\n        - updated_at\n        - source\n    timeline-committed-event:\n      title: Timeline Committed Event\n      description: Timeline Committed Event\n      type: object\n      properties:\n        event:\n          type: string\n        sha:\n          description: SHA for the commit\n          example: 7638417db6d59f3c431d3e1f261cc637155684cd\n          type: string\n        node_id:\n          type: string\n        url:\n          type: string\n          format: uri\n        author:\n          description: Identifying information for the git-user\n          type: object\n          properties:\n            date:\n              description: Timestamp of the commit\n              example: '2014-08-09T08:02:04+12:00'\n              format: date-time\n              type: string\n            email:\n              type: string\n              description: Git email address of the user\n              example: monalisa.octocat@example.com\n            name:\n              description: Name of the git user\n              example: Monalisa Octocat\n              type: string\n          required:\n            - email\n            - name\n            - date\n        committer:\n          description: Identifying information for the git-user\n          type: object\n          properties:\n            date:\n              description: Timestamp of the commit\n              example: '2014-08-09T08:02:04+12:00'\n              format: date-time\n              type: string\n            email:\n              type: string\n              description: Git email address of the user\n              example: monalisa.octocat@example.com\n            name:\n              description: Name of the git user\n              example: Monalisa Octocat\n              type: string\n          required:\n            - email\n            - name\n            - date\n        message:\n          description: Message describing the purpose of the commit\n          example: 'Fix #42'\n          type: string\n        tree:\n          type: object\n          properties:\n            sha:\n              description: SHA for the commit\n              example: 7638417db6d59f3c431d3e1f261cc637155684cd\n              type: string\n            url:\n              type: string\n              format: uri\n          required:\n            - sha\n            - url\n        parents:\n          type: array\n          items:\n            type: object\n            properties:\n              sha:\n                description: SHA for the commit\n                example: 7638417db6d59f3c431d3e1f261cc637155684cd\n                type: string\n              url:\n                type: string\n                format: uri\n              html_url:\n                type: string\n                format: uri\n            required:\n              - sha\n              - url\n              - html_url\n        verification:\n          type: object\n          properties:\n            verified:\n              type: boolean\n            reason:\n              type: string\n            signature:\n              type: string\n              nullable: true\n            payload:\n              type: string\n              nullable: true\n          required:\n            - verified\n            - reason\n            - signature\n            - payload\n        html_url:\n          type: string\n          format: uri\n      required:\n        - sha\n        - node_id\n        - url\n        - html_url\n        - author\n        - committer\n        - tree\n        - message\n        - parents\n        - verification\n    timeline-reviewed-event:\n      title: Timeline Reviewed Event\n      description: Timeline Reviewed Event\n      type: object\n      properties:\n        event:\n          type: string\n        id:\n          description: Unique identifier of the review\n          example: 42\n          type: integer\n        node_id:\n          type: string\n          example: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\n        user:\n          $ref: '#/components/schemas/simple-user'\n        body:\n          nullable: true\n          description: The text of the review.\n          example: This looks great.\n          type: string\n        state:\n          type: string\n          example: CHANGES_REQUESTED\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\n        pull_request_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/pulls/12\n        _links:\n          type: object\n          properties:\n            html:\n              type: object\n              properties:\n                href:\n                  type: string\n              required:\n                - href\n            pull_request:\n              type: object\n              properties:\n                href:\n                  type: string\n              required:\n                - href\n          required:\n            - html\n            - pull_request\n        submitted_at:\n          type: string\n          format: date-time\n        commit_id:\n          description: A commit SHA for the review.\n          example: 54bb654c9e6025347f57900a4a5c2313a96b8035\n          type: string\n        body_html:\n          type: string\n        body_text:\n          type: string\n        author_association:\n          $ref: '#/components/schemas/author_association'\n      required:\n        - event\n        - id\n        - node_id\n        - user\n        - body\n        - state\n        - commit_id\n        - html_url\n        - pull_request_url\n        - _links\n        - author_association\n    timeline-line-commented-event:\n      title: Timeline Line Commented Event\n      description: Timeline Line Commented Event\n      type: object\n      properties:\n        event:\n          type: string\n        node_id:\n          type: string\n        comments:\n          type: array\n          items:\n            $ref: '#/components/schemas/pull-request-review-comment'\n    timeline-commit-commented-event:\n      title: Timeline Commit Commented Event\n      description: Timeline Commit Commented Event\n      type: object\n      properties:\n        event:\n          type: string\n        node_id:\n          type: string\n        commit_id:\n          type: string\n        comments:\n          type: array\n          items:\n            $ref: '#/components/schemas/commit-comment'\n    timeline-assigned-issue-event:\n      title: Timeline Assigned Issue Event\n      description: Timeline Assigned Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        assignee:\n          $ref: '#/components/schemas/simple-user'\n      required:\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n        - assignee\n    timeline-unassigned-issue-event:\n      title: Timeline Unassigned Issue Event\n      description: Timeline Unassigned Issue Event\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          type: string\n        actor:\n          $ref: '#/components/schemas/simple-user'\n        event:\n          type: string\n        commit_id:\n          type: string\n          nullable: true\n        commit_url:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        assignee:\n          $ref: '#/components/schemas/simple-user'\n      required:\n        - id\n        - node_id\n        - url\n        - actor\n        - event\n        - commit_id\n        - commit_url\n        - created_at\n        - performed_via_github_app\n        - assignee\n    pull-request-review-comment:\n      title: Pull Request Review Comment\n      description: Pull Request Review Comments are comments on a portion of the Pull Request's diff.\n      type: object\n      properties:\n        url:\n          description: URL for the pull request review comment\n          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\n          type: string\n        pull_request_review_id:\n          description: The ID of the pull request review to which the comment belongs.\n          example: 42\n          type: integer\n          nullable: true\n        id:\n          description: The ID of the pull request review comment.\n          example: 1\n          type: integer\n        node_id:\n          description: The node ID of the pull request review comment.\n          type: string\n          example: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\n        diff_hunk:\n          description: The diff of the line that the comment refers to.\n          type: string\n          example: '@@ -16,33 +16,40 @@ public class Connection : IConnection...'\n        path:\n          description: The relative path of the file to which the comment applies.\n          example: config/database.yaml\n          type: string\n        position:\n          description: The line index in the diff to which the comment applies.\n          example: 1\n          type: integer\n        original_position:\n          description: The index of the original line in the diff to which the comment applies.\n          example: 4\n          type: integer\n        commit_id:\n          description: The SHA of the commit to which the comment applies.\n          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n          type: string\n        original_commit_id:\n          description: The SHA of the original commit to which the comment applies.\n          example: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\n          type: string\n        in_reply_to_id:\n          description: The comment ID to reply to.\n          example: 8\n          type: integer\n        user:\n          $ref: '#/components/schemas/simple-user'\n        body:\n          description: The text of the comment.\n          example: We should probably include a check for null values here.\n          type: string\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-04-14T16:00:49Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-04-14T16:00:49Z'\n        html_url:\n          description: HTML URL for the pull request review comment.\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\n        pull_request_url:\n          description: URL for the pull request that the review comment belongs to.\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/pulls/1\n        author_association:\n          $ref: '#/components/schemas/author_association'\n        _links:\n          type: object\n          properties:\n            self:\n              type: object\n              properties:\n                href:\n                  type: string\n                  format: uri\n                  example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\n              required:\n                - href\n            html:\n              type: object\n              properties:\n                href:\n                  type: string\n                  format: uri\n                  example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\n              required:\n                - href\n            pull_request:\n              type: object\n              properties:\n                href:\n                  type: string\n                  format: uri\n                  example: https://api.github.com/repos/octocat/Hello-World/pulls/1\n              required:\n                - href\n          required:\n            - self\n            - html\n            - pull_request\n        start_line:\n          type: integer\n          description: The first line of the range for a multi-line comment.\n          example: 2\n          nullable: true\n        original_start_line:\n          type: integer\n          description: The first line of the range for a multi-line comment.\n          example: 2\n          nullable: true\n        start_side:\n          type: string\n          description: The side of the first line of the range for a multi-line comment.\n          enum:\n            - LEFT\n            - RIGHT\n          default: RIGHT\n          nullable: true\n        line:\n          description: The line of the blob to which the comment applies. The last line of the range for a multi-line comment\n          example: 2\n          type: integer\n        original_line:\n          description: The line of the blob to which the comment applies. The last line of the range for a multi-line comment\n          example: 2\n          type: integer\n        side:\n          description: The side of the diff to which the comment applies. The side of the last line of the range for a multi-line comment\n          enum:\n            - LEFT\n            - RIGHT\n          default: RIGHT\n          type: string\n        reactions:\n          $ref: '#/components/schemas/reaction-rollup'\n        body_html:\n          type: string\n          example: '\"\u003cp\u003ecomment body\u003c/p\u003e\"'\n        body_text:\n          type: string\n          example: '\"comment body\"'\n      required:\n        - url\n        - id\n        - node_id\n        - pull_request_review_id\n        - diff_hunk\n        - path\n        - position\n        - original_position\n        - commit_id\n        - original_commit_id\n        - user\n        - body\n        - created_at\n        - updated_at\n        - html_url\n        - pull_request_url\n        - author_association\n        - _links\n    commit-comment:\n      title: Commit Comment\n      description: Commit Comment\n      type: object\n      properties:\n        html_url:\n          type: string\n          format: uri\n        url:\n          type: string\n          format: uri\n        id:\n          type: integer\n        node_id:\n          type: string\n        body:\n          type: string\n        path:\n          type: string\n          nullable: true\n        position:\n          type: integer\n          nullable: true\n        line:\n          type: integer\n          nullable: true\n        commit_id:\n          type: string\n        user:\n          $ref: '#/components/schemas/nullable-simple-user'\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        author_association:\n          $ref: '#/components/schemas/author_association'\n        reactions:\n          $ref: '#/components/schemas/reaction-rollup'\n      required:\n        - url\n        - html_url\n        - id\n        - node_id\n        - user\n        - position\n        - line\n        - path\n        - commit_id\n        - body\n        - author_association\n        - created_at\n        - updated_at\n    milestone:\n      title: Milestone\n      description: A collection of related issues and pull requests.\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/milestones/1\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/milestones/v1.0\n        labels_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\n        id:\n          type: integer\n          example: 1002604\n        node_id:\n          type: string\n          example: MDk6TWlsZXN0b25lMTAwMjYwNA==\n        number:\n          description: The number of the milestone.\n          type: integer\n          example: 42\n        state:\n          description: The state of the milestone.\n          example: open\n          type: string\n          enum:\n            - open\n            - closed\n          default: open\n        title:\n          description: The title of the milestone.\n          example: v1.0\n          type: string\n        description:\n          type: string\n          example: Tracking milestone for version 1.0\n          nullable: true\n        creator:\n          $ref: '#/components/schemas/nullable-simple-user'\n        open_issues:\n          type: integer\n          example: 4\n        closed_issues:\n          type: integer\n          example: 8\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-04-10T20:09:31Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2014-03-03T18:58:10Z'\n        closed_at:\n          type: string\n          format: date-time\n          example: '2013-02-12T13:22:01Z'\n          nullable: true\n        due_on:\n          type: string\n          format: date-time\n          example: '2012-10-09T23:39:01Z'\n          nullable: true\n      required:\n        - closed_issues\n        - creator\n        - description\n        - due_on\n        - closed_at\n        - id\n        - node_id\n        - labels_url\n        - html_url\n        - number\n        - open_issues\n        - state\n        - title\n        - url\n        - created_at\n        - updated_at\n  parameters:\n    labels:\n      name: labels\n      description: 'A list of comma separated label names. Example: `bug,ui,@high`'\n      in: query\n      required: false\n      schema:\n        type: string\n    direction:\n      name: direction\n      description: One of `asc` (ascending) or `desc` (descending).\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - asc\n          - desc\n        default: desc\n    since:\n      name: since\n      description: 'Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'\n      in: query\n      required: false\n      schema:\n        type: string\n        format: date-time\n    per-page:\n      name: per_page\n      description: Results per page (max 100)\n      in: query\n      schema:\n        type: integer\n        default: 30\n    page:\n      name: page\n      description: Page number of the results to fetch.\n      in: query\n      schema:\n        type: integer\n        default: 1\n    org:\n      name: org\n      in: path\n      required: true\n      schema:\n        type: string\n    owner:\n      name: owner\n      in: path\n      required: true\n      schema:\n        type: string\n    repo:\n      name: repo\n      in: path\n      required: true\n      schema:\n        type: string\n    sort:\n      name: sort\n      description: One of `created` (when the repository was starred) or `updated` (when it was last pushed to).\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - created\n          - updated\n        default: created\n    comment-id:\n      name: comment_id\n      description: comment_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    issue-number:\n      name: issue_number\n      description: issue_number parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    milestone-number:\n      name: milestone_number\n      description: milestone_number parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n  responses:\n    not_modified:\n      description: Not modified\n    not_found:\n      description: Resource not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    validation_failed:\n      description: Validation failed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/validation-error'\n    moved_permanently:\n      description: Moved permanently\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    gone:\n      description: Gone\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    service_unavailable:\n      description: Service unavailable\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              code:\n                type: string\n              message:\n                type: string\n              documentation_url:\n                type: string\n  securitySchemes: {}\n  callbacks: {}\n  examples:\n    issue-with-repo-items:\n      value:\n        - id: 1\n          node_id: MDU6SXNzdWUx\n          url: https://api.github.com/repos/octocat/Hello-World/issues/1347\n          repository_url: https://api.github.com/repos/octocat/Hello-World\n          labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\n          events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events\n          html_url: https://github.com/octocat/Hello-World/issues/1347\n          number: 1347\n          state: open\n          title: Found a bug\n          body: I'm having a problem with this.\n          user:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          labels:\n            - id: 208045946\n              node_id: MDU6TGFiZWwyMDgwNDU5NDY=\n              url: https://api.github.com/repos/octocat/Hello-World/labels/bug\n              name: bug\n              description: Something isn't working\n              color: f29513\n              default: true\n          assignee:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          assignees:\n            - login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n          milestone:\n            url: https://api.github.com/repos/octocat/Hello-World/milestones/1\n            html_url: https://github.com/octocat/Hello-World/milestones/v1.0\n            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\n            id: 1002604\n            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==\n            number: 1\n            state: open\n            title: v1.0\n            description: Tracking milestone for version 1.0\n            creator:\n              login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n            open_issues: 4\n            closed_issues: 8\n            created_at: '2011-04-10T20:09:31Z'\n            updated_at: '2014-03-03T18:58:10Z'\n            closed_at: '2013-02-12T13:22:01Z'\n            due_on: '2012-10-09T23:39:01Z'\n          locked: true\n          active_lock_reason: too heated\n          comments: 0\n          pull_request:\n            url: https://api.github.com/repos/octocat/Hello-World/pulls/1347\n            html_url: https://github.com/octocat/Hello-World/pull/1347\n            diff_url: https://github.com/octocat/Hello-World/pull/1347.diff\n            patch_url: https://github.com/octocat/Hello-World/pull/1347.patch\n          closed_at: null\n          created_at: '2011-04-22T13:33:48Z'\n          updated_at: '2011-04-22T13:33:48Z'\n          repository:\n            id: 1296269\n            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n            name: Hello-World\n            full_name: octocat/Hello-World\n            owner:\n              login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n            private: false\n            html_url: https://github.com/octocat/Hello-World\n            description: This your first repo!\n            fork: false\n            url: https://api.github.com/repos/octocat/Hello-World\n            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n            events_url: https://api.github.com/repos/octocat/Hello-World/events\n            forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n            git_url: git:github.com/octocat/Hello-World.git\n            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n            languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n            merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n            ssh_url: git@github.com:octocat/Hello-World.git\n            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n            tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n            teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n            clone_url: https://github.com/octocat/Hello-World.git\n            mirror_url: git:git.example.com/octocat/Hello-World\n            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n            svn_url: https://svn.github.com/octocat/Hello-World\n            homepage: https://github.com\n            language: null\n            forks_count: 9\n            stargazers_count: 80\n            watchers_count: 80\n            size: 108\n            default_branch: master\n            open_issues_count: 0\n            is_template: true\n            topics:\n              - octocat\n              - atom\n              - electron\n              - api\n            has_issues: true\n            has_projects: true\n            has_wiki: true\n            has_pages: false\n            has_downloads: true\n            archived: false\n            disabled: false\n            visibility: public\n            pushed_at: '2011-01-26T19:06:43Z'\n            created_at: '2011-01-26T19:01:12Z'\n            updated_at: '2011-01-26T19:14:43Z'\n            permissions:\n              admin: false\n              push: false\n              pull: true\n            allow_rebase_merge: true\n            template_repository: null\n            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n            allow_squash_merge: true\n            allow_auto_merge: false\n            delete_branch_on_merge: true\n            allow_merge_commit: true\n            subscribers_count: 42\n            network_count: 0\n            license:\n              key: mit\n              name: MIT License\n              url: https://api.github.com/licenses/mit\n              spdx_id: MIT\n              node_id: MDc6TGljZW5zZW1pdA==\n              html_url: https://github.com/licenses/mit\n            forks: 1\n            open_issues: 1\n            watchers: 1\n          author_association: COLLABORATOR\n    simple-user-items:\n      value:\n        - login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n    issue-items:\n      value:\n        - id: 1\n          node_id: MDU6SXNzdWUx\n          url: https://api.github.com/repos/octocat/Hello-World/issues/1347\n          repository_url: https://api.github.com/repos/octocat/Hello-World\n          labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\n          events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events\n          html_url: https://github.com/octocat/Hello-World/issues/1347\n          number: 1347\n          state: open\n          title: Found a bug\n          body: I'm having a problem with this.\n          user:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          labels:\n            - id: 208045946\n              node_id: MDU6TGFiZWwyMDgwNDU5NDY=\n              url: https://api.github.com/repos/octocat/Hello-World/labels/bug\n              name: bug\n              description: Something isn't working\n              color: f29513\n              default: true\n          assignee:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          assignees:\n            - login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n          milestone:\n            url: https://api.github.com/repos/octocat/Hello-World/milestones/1\n            html_url: https://github.com/octocat/Hello-World/milestones/v1.0\n            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\n            id: 1002604\n            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==\n            number: 1\n            state: open\n            title: v1.0\n            description: Tracking milestone for version 1.0\n            creator:\n              login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n            open_issues: 4\n            closed_issues: 8\n            created_at: '2011-04-10T20:09:31Z'\n            updated_at: '2014-03-03T18:58:10Z'\n            closed_at: '2013-02-12T13:22:01Z'\n            due_on: '2012-10-09T23:39:01Z'\n          locked: true\n          active_lock_reason: too heated\n          comments: 0\n          pull_request:\n            url: https://api.github.com/repos/octocat/Hello-World/pulls/1347\n            html_url: https://github.com/octocat/Hello-World/pull/1347\n            diff_url: https://github.com/octocat/Hello-World/pull/1347.diff\n            patch_url: https://github.com/octocat/Hello-World/pull/1347.patch\n          closed_at: null\n          created_at: '2011-04-22T13:33:48Z'\n          updated_at: '2011-04-22T13:33:48Z'\n          closed_by:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          author_association: COLLABORATOR\n    issue:\n      value:\n        id: 1\n        node_id: MDU6SXNzdWUx\n        url: https://api.github.com/repos/octocat/Hello-World/issues/1347\n        repository_url: https://api.github.com/repos/octocat/Hello-World\n        labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\n        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\n        events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events\n        html_url: https://github.com/octocat/Hello-World/issues/1347\n        number: 1347\n        state: open\n        title: Found a bug\n        body: I'm having a problem with this.\n        user:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        labels:\n          - id: 208045946\n            node_id: MDU6TGFiZWwyMDgwNDU5NDY=\n            url: https://api.github.com/repos/octocat/Hello-World/labels/bug\n            name: bug\n            description: Something isn't working\n            color: f29513\n            default: true\n        assignee:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        assignees:\n          - login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n        milestone:\n          url: https://api.github.com/repos/octocat/Hello-World/milestones/1\n          html_url: https://github.com/octocat/Hello-World/milestones/v1.0\n          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\n          id: 1002604\n          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==\n          number: 1\n          state: open\n          title: v1.0\n          description: Tracking milestone for version 1.0\n          creator:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          open_issues: 4\n          closed_issues: 8\n          created_at: '2011-04-10T20:09:31Z'\n          updated_at: '2014-03-03T18:58:10Z'\n          closed_at: '2013-02-12T13:22:01Z'\n          due_on: '2012-10-09T23:39:01Z'\n        locked: true\n        active_lock_reason: too heated\n        comments: 0\n        pull_request:\n          url: https://api.github.com/repos/octocat/Hello-World/pulls/1347\n          html_url: https://github.com/octocat/Hello-World/pull/1347\n          diff_url: https://github.com/octocat/Hello-World/pull/1347.diff\n          patch_url: https://github.com/octocat/Hello-World/pull/1347.patch\n        closed_at: null\n        created_at: '2011-04-22T13:33:48Z'\n        updated_at: '2011-04-22T13:33:48Z'\n        closed_by:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        author_association: COLLABORATOR\n    issue-comment-items:\n      value:\n        - id: 1\n          node_id: MDEyOklzc3VlQ29tbWVudDE=\n          url: https://api.github.com/repos/octocat/Hello-World/issues/comments/1\n          html_url: https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\n          body: Me too\n          user:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          created_at: '2011-04-14T16:00:49Z'\n          updated_at: '2011-04-14T16:00:49Z'\n          issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347\n          author_association: COLLABORATOR\n    issue-comment:\n      value:\n        id: 1\n        node_id: MDEyOklzc3VlQ29tbWVudDE=\n        url: https://api.github.com/repos/octocat/Hello-World/issues/comments/1\n        html_url: https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\n        body: Me too\n        user:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        created_at: '2011-04-14T16:00:49Z'\n        updated_at: '2011-04-14T16:00:49Z'\n        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347\n        author_association: COLLABORATOR\n    issue-event-items:\n      value:\n        - id: 1\n          node_id: MDEwOklzc3VlRXZlbnQx\n          url: https://api.github.com/repos/octocat/Hello-World/issues/events/1\n          actor:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          event: closed\n          commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n          commit_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n          created_at: '2011-04-14T16:00:49Z'\n          issue:\n            id: 1\n            node_id: MDU6SXNzdWUx\n            url: https://api.github.com/repos/octocat/Hello-World/issues/1347\n            repository_url: https://api.github.com/repos/octocat/Hello-World\n            labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\n            comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\n            events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events\n            html_url: https://github.com/octocat/Hello-World/issues/1347\n            number: 1347\n            state: open\n            title: Found a bug\n            body: I'm having a problem with this.\n            user:\n              login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n            labels:\n              - id: 208045946\n                node_id: MDU6TGFiZWwyMDgwNDU5NDY=\n                url: https://api.github.com/repos/octocat/Hello-World/labels/bug\n                name: bug\n                description: Something isn't working\n                color: f29513\n                default: true\n            assignee:\n              login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n            assignees:\n              - login: octocat\n                id: 1\n                node_id: MDQ6VXNlcjE=\n                avatar_url: https://github.com/images/error/octocat_happy.gif\n                gravatar_id: ''\n                url: https://api.github.com/users/octocat\n                html_url: https://github.com/octocat\n                followers_url: https://api.github.com/users/octocat/followers\n                following_url: https://api.github.com/users/octocat/following{/other_user}\n                gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n                subscriptions_url: https://api.github.com/users/octocat/subscriptions\n                organizations_url: https://api.github.com/users/octocat/orgs\n                repos_url: https://api.github.com/users/octocat/repos\n                events_url: https://api.github.com/users/octocat/events{/privacy}\n                received_events_url: https://api.github.com/users/octocat/received_events\n                type: User\n                site_admin: false\n            milestone:\n              url: https://api.github.com/repos/octocat/Hello-World/milestones/1\n              html_url: https://github.com/octocat/Hello-World/milestones/v1.0\n              labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\n              id: 1002604\n              node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==\n              number: 1\n              state: open\n              title: v1.0\n              description: Tracking milestone for version 1.0\n              creator:\n                login: octocat\n                id: 1\n                node_id: MDQ6VXNlcjE=\n                avatar_url: https://github.com/images/error/octocat_happy.gif\n                gravatar_id: ''\n                url: https://api.github.com/users/octocat\n                html_url: https://github.com/octocat\n                followers_url: https://api.github.com/users/octocat/followers\n                following_url: https://api.github.com/users/octocat/following{/other_user}\n                gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n                subscriptions_url: https://api.github.com/users/octocat/subscriptions\n                organizations_url: https://api.github.com/users/octocat/orgs\n                repos_url: https://api.github.com/users/octocat/repos\n                events_url: https://api.github.com/users/octocat/events{/privacy}\n                received_events_url: https://api.github.com/users/octocat/received_events\n                type: User\n                site_admin: false\n              open_issues: 4\n              closed_issues: 8\n              created_at: '2011-04-10T20:09:31Z'\n              updated_at: '2014-03-03T18:58:10Z'\n              closed_at: '2013-02-12T13:22:01Z'\n              due_on: '2012-10-09T23:39:01Z'\n            locked: true\n            active_lock_reason: too heated\n            comments: 0\n            pull_request:\n              url: https://api.github.com/repos/octocat/Hello-World/pulls/1347\n              html_url: https://github.com/octocat/Hello-World/pull/1347\n              diff_url: https://github.com/octocat/Hello-World/pull/1347.diff\n              patch_url: https://github.com/octocat/Hello-World/pull/1347.patch\n            closed_at: null\n            created_at: '2011-04-22T13:33:48Z'\n            updated_at: '2011-04-22T13:33:48Z'\n            author_association: COLLABORATOR\n    issue-event:\n      value:\n        id: 1\n        node_id: MDEwOklzc3VlRXZlbnQx\n        url: https://api.github.com/repos/octocat/Hello-World/issues/events/1\n        actor:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        event: closed\n        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n        commit_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n        created_at: '2011-04-14T16:00:49Z'\n        issue:\n          id: 1\n          node_id: MDU6SXNzdWUx\n          url: https://api.github.com/repos/octocat/Hello-World/issues/1347\n          repository_url: https://api.github.com/repos/octocat/Hello-World\n          labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\n          events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events\n          html_url: https://github.com/octocat/Hello-World/issues/1347\n          number: 1347\n          state: open\n          title: Found a bug\n          body: I'm having a problem with this.\n          user:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          labels:\n            - id: 208045946\n              node_id: MDU6TGFiZWwyMDgwNDU5NDY=\n              url: https://api.github.com/repos/octocat/Hello-World/labels/bug\n              name: bug\n              description: Something isn't working\n              color: f29513\n              default: true\n          assignee:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          assignees:\n            - login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n          milestone:\n            url: https://api.github.com/repos/octocat/Hello-World/milestones/1\n            html_url: https://github.com/octocat/Hello-World/milestones/v1.0\n            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\n            id: 1002604\n            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==\n            number: 1\n            state: open\n            title: v1.0\n            description: Tracking milestone for version 1.0\n            creator:\n              login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n            open_issues: 4\n            closed_issues: 8\n            created_at: '2011-04-10T20:09:31Z'\n            updated_at: '2014-03-03T18:58:10Z'\n            closed_at: '2013-02-12T13:22:01Z'\n            due_on: '2012-10-09T23:39:01Z'\n          locked: true\n          performed_via_github_app:\n            id: 1\n            slug: octoapp\n            node_id: MDExOkludGVncmF0aW9uMQ==\n            owner:\n              login: github\n              id: 1\n              node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n              url: https://api.github.com/orgs/github\n              repos_url: https://api.github.com/orgs/github/repos\n              events_url: https://api.github.com/orgs/github/events\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: true\n            name: Octocat App\n            description: ''\n            external_url: https://example.com\n            html_url: https://github.com/apps/octoapp\n            created_at: '2017-07-08T16:18:44-04:00'\n            updated_at: '2017-07-08T16:18:44-04:00'\n            permissions:\n              metadata: read\n              contents: read\n              issues: write\n              single_file: write\n            events:\n              - push\n              - pull_request\n          comments: 0\n          pull_request:\n            url: https://api.github.com/repos/octocat/Hello-World/pulls/1347\n            html_url: https://github.com/octocat/Hello-World/pull/1347\n            diff_url: https://github.com/octocat/Hello-World/pull/1347.diff\n            patch_url: https://github.com/octocat/Hello-World/pull/1347.patch\n          closed_at: null\n          created_at: '2011-04-22T13:33:48Z'\n          updated_at: '2011-04-22T13:33:48Z'\n          author_association: COLLABORATOR\n    issue-event-for-issue-items:\n      value:\n        - id: 1\n          node_id: MDEwOklzc3VlRXZlbnQx\n          url: https://api.github.com/repos/octocat/Hello-World/issues/events/1\n          actor:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          event: closed\n          commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n          commit_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n          created_at: '2011-04-14T16:00:49Z'\n          performed_via_github_app: null\n          label:\n            name: label\n            color: red\n    label-items:\n      value:\n        - id: 208045946\n          node_id: MDU6TGFiZWwyMDgwNDU5NDY=\n          url: https://api.github.com/repos/octocat/Hello-World/labels/bug\n          name: bug\n          description: Something isn't working\n          color: f29513\n          default: true\n        - id: 208045947\n          node_id: MDU6TGFiZWwyMDgwNDU5NDc=\n          url: https://api.github.com/repos/octocat/Hello-World/labels/enhancement\n          name: enhancement\n          description: New feature or request\n          color: a2eeef\n          default: false\n    label-items-2:\n      value:\n        - id: 208045946\n          node_id: MDU6TGFiZWwyMDgwNDU5NDY=\n          url: https://api.github.com/repos/octocat/Hello-World/labels/bug\n          name: bug\n          description: Something isn't working\n          color: f29513\n          default: true\n    label:\n      value:\n        id: 208045946\n        node_id: MDU6TGFiZWwyMDgwNDU5NDY=\n        url: https://api.github.com/repos/octocat/Hello-World/labels/bug\n        name: bug\n        description: Something isn't working\n        color: f29513\n        default: true\n    label-2:\n      value:\n        id: 208045946\n        node_id: MDU6TGFiZWwyMDgwNDU5NDY=\n        url: 'https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:'\n        name: 'bug :bug:'\n        description: Small bug fix required\n        color: b01f26\n        default: true\n    milestone-items:\n      value:\n        - url: https://api.github.com/repos/octocat/Hello-World/milestones/1\n          html_url: https://github.com/octocat/Hello-World/milestones/v1.0\n          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\n          id: 1002604\n          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==\n          number: 1\n          state: open\n          title: v1.0\n          description: Tracking milestone for version 1.0\n          creator:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          open_issues: 4\n          closed_issues: 8\n          created_at: '2011-04-10T20:09:31Z'\n          updated_at: '2014-03-03T18:58:10Z'\n          closed_at: '2013-02-12T13:22:01Z'\n          due_on: '2012-10-09T23:39:01Z'\n    milestone:\n      value:\n        url: https://api.github.com/repos/octocat/Hello-World/milestones/1\n        html_url: https://github.com/octocat/Hello-World/milestones/v1.0\n        labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\n        id: 1002604\n        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==\n        number: 1\n        state: open\n        title: v1.0\n        description: Tracking milestone for version 1.0\n        creator:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        open_issues: 4\n        closed_issues: 8\n        created_at: '2011-04-10T20:09:31Z'\n        updated_at: '2014-03-03T18:58:10Z'\n        closed_at: '2013-02-12T13:22:01Z'\n        due_on: '2012-10-09T23:39:01Z'\n  requestBodies: {}\n  headers:\n    link:\n      example: \u003chttps://api.github.com/resource?page=2\u003e; rel=\"next\", \u003chttps://api.github.com/resource?page=5\u003e; rel=\"last\"\n      schema:\n        type: string\n  links: {}\n  x-stackQL-resources:\n    issues:\n      id: github.issues.issues\n      name: issues\n      title: Issues\n      methods:\n        list:\n          operation:\n            $ref: '#/paths/~1issues/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_for_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1issues/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_for_repo:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        lock:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1lock/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        unlock:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1lock/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1issues/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/issues/methods/get'\n          - $ref: '#/components/x-stackQL-resources/issues/methods/list_for_repo'\n          - $ref: '#/components/x-stackQL-resources/issues/methods/list_for_org'\n          - $ref: '#/components/x-stackQL-resources/issues/methods/list'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/issues/methods/create'\n        update: []\n        delete: []\n    assignees:\n      id: github.issues.assignees\n      name: assignees\n      title: Assignees\n      methods:\n        list_assignees:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1assignees/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        check_user_can_be_assigned:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1assignees~1{assignee}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        add_assignees:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1assignees/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        remove_assignees:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1assignees/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/assignees/methods/list_assignees'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/assignees/methods/add_assignees'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/assignees/methods/remove_assignees'\n    comments:\n      id: github.issues.comments\n      name: comments\n      title: Comments\n      methods:\n        list_comments_for_repo:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1comments/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1comments~1{comment_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1comments~1{comment_id}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1comments~1{comment_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_comments:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1comments/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1comments/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/comments/methods/get_comment'\n          - $ref: '#/components/x-stackQL-resources/comments/methods/list_comments'\n          - $ref: '#/components/x-stackQL-resources/comments/methods/list_comments_for_repo'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/comments/methods/create_comment'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/comments/methods/delete_comment'\n    events_for_issues:\n      id: github.issues.events_for_issues\n      name: events_for_issues\n      title: Events for Issues\n      methods:\n        list_events:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1events/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/events_for_issues/methods/list_events'\n        insert: []\n        update: []\n        delete: []\n    events:\n      id: github.issues.events\n      name: events\n      title: Events\n      methods:\n        list_events_for_repo:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1events/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_event:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1events~1{event_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/events/methods/get_event'\n          - $ref: '#/components/x-stackQL-resources/events/methods/list_events_for_repo'\n        insert: []\n        update: []\n        delete: []\n    labels:\n      id: github.issues.labels\n      name: labels\n      title: Labels\n      methods:\n        list_labels_on_issue:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1labels/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        add_labels:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1labels/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        set_labels:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1labels/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        remove_all_labels:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1labels/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        remove_label:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1labels~1{name}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_labels_for_repo:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1labels/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_label:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1labels/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_label:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1labels~1{name}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_label:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1labels~1{name}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_label:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1labels~1{name}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_labels_for_milestone:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1milestones~1{milestone_number}~1labels/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/labels/methods/list_labels_on_issue'\n          - $ref: '#/components/x-stackQL-resources/labels/methods/get_label'\n          - $ref: '#/components/x-stackQL-resources/labels/methods/list_labels_for_milestone'\n          - $ref: '#/components/x-stackQL-resources/labels/methods/list_labels_for_repo'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/labels/methods/add_labels'\n          - $ref: '#/components/x-stackQL-resources/labels/methods/create_label'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/labels/methods/remove_label'\n          - $ref: '#/components/x-stackQL-resources/labels/methods/remove_all_labels'\n          - $ref: '#/components/x-stackQL-resources/labels/methods/delete_label'\n    timeline:\n      id: github.issues.timeline\n      name: timeline\n      title: Timeline\n      methods:\n        list_events_for_timeline:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1timeline/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/timeline/methods/list_events_for_timeline'\n        insert: []\n        update: []\n        delete: []\n    milestones:\n      id: github.issues.milestones\n      name: milestones\n      title: Milestones\n      methods:\n        list_milestones:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1milestones/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_milestone:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1milestones/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_milestone:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1milestones~1{milestone_number}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_milestone:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1milestones~1{milestone_number}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_milestone:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1milestones~1{milestone_number}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/milestones/methods/get_milestone'\n          - $ref: '#/components/x-stackQL-resources/milestones/methods/list_milestones'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/milestones/methods/create_milestone'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/milestones/methods/delete_milestone'\nopenapi: 3.0.3\nservers:\n  - url: https://api.github.com\ntags:\n  - name: actions\n    description: Endpoints to manage GitHub Actions using the REST API.\n  - name: activity\n    description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  - name: apps\n    description: Information for integrations and installations.\n  - name: billing\n    description: Monitor charges and usage from Actions and Packages.\n  - name: checks\n    description: Rich interactions with checks run by your integrations.\n  - name: code-scanning\n    description: Retrieve code scanning alerts from a repository.\n  - name: codes-of-conduct\n    description: Insight into codes of conduct for your communities.\n  - name: codespaces\n    description: Endpoints to manage Codespaces using the REST API.\n  - name: emojis\n    description: List emojis available to use on GitHub.\n  - name: enterprise-admin\n    description: Administer a GitHub enterprise.\n  - name: dependabot\n    description: Endpoints to manage Dependabot.\n  - name: gists\n    description: View, modify your gists.\n  - name: git\n    description: Raw Git functionality.\n  - name: gitignore\n    description: View gitignore templates\n  - name: interactions\n    description: Owner or admin management of users interactions.\n  - name: issues\n    description: Interact with GitHub Issues.\n  - name: licenses\n    description: View various OSS licenses.\n  - name: markdown\n    description: Render GitHub flavored markdown\n  - name: meta\n    description: Endpoints that give information about the API.\n  - name: migrations\n    description: Move projects to or from GitHub.\n  - name: oauth-authorizations\n    description: Manage access of OAuth applications\n  - name: orgs\n    description: Interact with GitHub Orgs.\n  - name: packages\n    description: Manage packages for authenticated users and organizations.\n  - name: projects\n    description: Interact with GitHub Projects.\n  - name: pulls\n    description: Interact with GitHub Pull Requests.\n  - name: rate-limit\n    description: Check your current rate limit status\n  - name: reactions\n    description: Interact with reactions to various GitHub entities.\n  - name: repos\n    description: Interact with GitHub Repos.\n  - name: scim\n    description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  - name: search\n    description: Look for stuff on GitHub.\n  - name: secret-scanning\n    description: Retrieve secret scanning alerts from a repository.\n  - name: server-statistics\n    description: GHES statistics\n  - name: teams\n    description: Interact with GitHub Teams.\n  - name: users\n    description: Interact with and view information about users and also current user.\nexternalDocs:\n  description: GitHub v3 REST API\n  url: https://docs.github.com/rest/\ninfo:\n  version: 1.1.4\n  title: GitHub v3 REST API - issues\n  description: Interact with GitHub Issues.\n  license:\n    name: MIT\n    url: https://spdx.org/licenses/MIT\n  termsOfService: https://docs.github.com/articles/github-terms-of-service\n  contact:\n    name: Support\n    url: https://support.github.com/contact?tags=dotcom-rest-api\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/github/v0.3.0/services/issues.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/github/v0.3.0/services/issues.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/repos/{owner}/{repo}/issues/{issue_number}/labels\": put: requestBody: contents: application/json: generate schema: oneOf: oneOf IssuesSetLabelsReq: variant StringArray: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"complex anyOf",
		"discriminator inference"
	]
}