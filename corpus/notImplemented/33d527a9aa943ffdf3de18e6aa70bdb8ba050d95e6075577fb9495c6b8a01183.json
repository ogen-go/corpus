{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eclipse-dataspaceconnector/DataSpaceConnector"
		},
		"file": {
			"name": "transferprocess.yaml",
			"size": 0,
			"path": "resources/openapi/yaml/transferprocess.yaml",
			"byteSize": 5090,
			"content": "openapi: 3.0.1\npaths:\n  /transferprocess:\n    get:\n      operationId: getAllTransferProcesses\n      parameters:\n      - in: query\n        name: offset\n        schema:\n          type: integer\n          format: int32\n      - in: query\n        name: limit\n        schema:\n          type: integer\n          format: int32\n      - in: query\n        name: filter\n        schema:\n          type: string\n      - in: query\n        name: sort\n        schema:\n          type: string\n          enum:\n          - ASC\n          - DESC\n      - in: query\n        name: sortField\n        schema:\n          type: string\n      responses:\n        default:\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TransferProcessDto'\n          description: default response\n      tags:\n      - Transfer Process\n    post:\n      operationId: initiateTransfer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransferRequestDto'\n      responses:\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransferId'\n          description: default response\n      tags:\n      - Transfer Process\n  /transferprocess/{id}:\n    get:\n      operationId: getTransferProcess\n      parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransferProcessDto'\n          description: default response\n      tags:\n      - Transfer Process\n  /transferprocess/{id}/cancel:\n    post:\n      operationId: cancelTransferProcess\n      parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          content:\n            application/json: {}\n          description: default response\n      tags:\n      - Transfer Process\n  /transferprocess/{id}/deprovision:\n    post:\n      operationId: deprovisionTransferProcess\n      parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          content:\n            application/json: {}\n          description: default response\n      tags:\n      - Transfer Process\n  /transferprocess/{id}/state:\n    get:\n      operationId: getTransferProcessState\n      parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransferState'\n          description: default response\n      tags:\n      - Transfer Process\ncomponents:\n  schemas:\n    DataAddress:\n      type: object\n      properties:\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n    DataAddressInformationDto:\n      type: object\n      properties:\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n    DataRequestDto:\n      type: object\n      properties:\n        assetId:\n          type: string\n        connectorId:\n          type: string\n        contractId:\n          type: string\n    TransferId:\n      type: object\n      properties:\n        id:\n          type: string\n    TransferProcessDto:\n      type: object\n      properties:\n        createdTimestamp:\n          type: integer\n          format: int64\n        dataDestination:\n          $ref: '#/components/schemas/DataAddressInformationDto'\n        dataRequest:\n          $ref: '#/components/schemas/DataRequestDto'\n        errorDetail:\n          type: string\n        id:\n          type: string\n        state:\n          type: string\n        stateTimestamp:\n          type: integer\n          format: int64\n        type:\n          type: string\n    TransferRequestDto:\n      type: object\n      properties:\n        assetId:\n          type: string\n        connectorAddress:\n          type: string\n        connectorId:\n          type: string\n        contractId:\n          type: string\n        dataDestination:\n          $ref: '#/components/schemas/DataAddress'\n        id:\n          type: string\n        managedResources:\n          type: boolean\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n        protocol:\n          type: string\n        transferType:\n          $ref: '#/components/schemas/TransferType'\n      required:\n      - assetId\n      - connectorAddress\n      - connectorId\n      - contractId\n      - dataDestination\n      - id\n      - protocol\n      - transferType\n    TransferState:\n      type: object\n      properties:\n        state:\n          type: string\n    TransferType:\n      type: object\n      properties:\n        contentType:\n          type: string\n        isFinite:\n          type: boolean\n",
			"canonicalURL": "/github.com/eclipse-dataspaceconnector/DataSpaceConnector@fb4dd6757031c256573696e1c63e9ec98f53eb6f/-/blob/resources/openapi/yaml/transferprocess.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/eclipse-dataspaceconnector/DataSpaceConnector/blob/fb4dd6757031c256573696e1c63e9ec98f53eb6f/resources/openapi/yaml/transferprocess.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/transferprocess/{id}/cancel\": post: responses: default: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}