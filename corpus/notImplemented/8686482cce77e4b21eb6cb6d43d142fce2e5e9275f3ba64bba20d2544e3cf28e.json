{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hyperledger/cactus"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "packages/cactus-plugin-ledger-connector-besu/src/main/json/openapi.json",
			"byteSize": 51135,
			"content": "{\n    \"openapi\": \"3.0.3\",\n    \"info\": {\n        \"title\": \"Hyperledger Cactus Plugin - Connector Besu\",\n        \"description\": \"Can perform basic tasks on a Besu ledger\",\n        \"version\": \"0.0.1\",\n        \"license\": {\n            \"name\": \"Apache 2.0\",\n            \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"GetBalanceV1Response\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"balance\"                    \n                ],\n                \"properties\": {\n                    \"balance\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"GetBalanceV1Request\": {\n                \"type\": \"object\",\n                \"required\":[\n                    \"address\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"address\": {\n                        \"type\":\"string\"\n                    },\n                    \"defaultBlock\": {\n                    }\n                }\n            },\n            \"EvmBlock\":{\n                \"type\":\"object\",\n                \"properties\":{\n                    \"number\":{\n                        \"type\":\"number\"\n                    },\n                    \"hash\":{\n                        \"type\":\"string\"\n                    },\n                    \"parentHash\":{\n                        \"type\":\"string\"\n                    },\n                    \"nonce\":{\n                        \"type\":\"string\"\n                    },\n                    \"sha3Uncles\":{\n                        \"type\":\"string\"\n                    },\n                    \"logsBloom\":{\n                        \"type\":\"string\"\n                    },\n                    \"transactionsRoot\":{\n                        \"type\":\"string\"\n                    },\n                    \"stateRoot\":{\n                        \"type\":\"string\"\n                    },\n                    \"miner\":{\n                        \"type\":\"string\"\n                    },\n                    \"difficulty\":{\n                        \"type\":\"number\"\n                    },\n                    \"totalDifficulty\":{\n                        \"type\":\"number\"\n                    },\n                    \"extraData\":{\n                        \"type\":\"string\"\n                    },\n                    \"size\":{\n                        \"type\":\"number\"\n                    },\n                    \"gasLimit\":{\n                        \"type\":\"number\"\n                    },\n                    \"gasUsed\":{\n                        \"type\":\"number\"\n                    },\n                    \"timestamp\":{\n                    },\n                    \"transactions\":{\n                        \"type\":\"array\",\n                        \"items\":{}\n                    },\n                    \"uncles\":{\n                        \"type\":\"array\",\n                        \"items\":{}\n                    }\n                }\n            },\n            \"GetBlockV1Response\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"block\"                    \n                ],\n                \"properties\": {\n                    \"block\": {\n                        \"$ref\":\"#/components/schemas/EvmBlock\"\n                    }\n\n                }\n            },\n            \"EvmTransaction\":{\n                \"type\":\"object\",\n                \"properties\":{\n                    \"hash\":{\n                        \"type\":\"string\"\n                    },\n                    \"nonce\":{\n                        \"type\":\"number\"\n                    },\n                    \"blockHash\":{\n                    },\n                    \"blockNumber\":{\n                    },\n                    \"transactionIndex\":{\n                    },\n                    \"from\":{\n                        \"type\":\"string\"\n                    },\n                    \"to\":{\n                    },\n                    \"value\":{\n                        \"type\":\"string\"\n                    },\n                    \"gasPrice\":{\n                        \"type\":\"string\"\n                    },\n                    \"gas\":{\n                        \"type\":\"number\"\n                    },\n                    \"input\":{\n                        \"type\":\"string\"\n                    }\n                }\n            },\n            \"GetTransactionV1Response\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"transaction\"                    \n                ],\n                \"properties\": {\n                    \"transaction\": {\n                        \"$ref\":\"#/components/schemas/EvmTransaction\"\n                    }\n                }\n            },\n            \"GetTransactionV1Request\": {\n                \"type\": \"object\",\n                \"required\": [\"transactionHash\"],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"transactionHash\":{\n                        \"type\": \"string\"\n                    }\n                }\n            },       \n            \"GetPastLogsV1Response\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"logs\"                    \n                ],\n                \"properties\": {\n                    \"logs\": {\n                        \"type\": \"array\", \n                        \"items\":{\n                            \"$ref\": \"#/components/schemas/EvmLog\"\n                        }\n                    }\n                   \n                }\n            },\n            \"GetPastLogsV1Request\": {\n                \"type\": \"object\",\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"toBlock\": {\n                    },\n                    \"fromBlock\": {\n                    \n                    },\n                    \"address\": {\n                    },\n                    \"topics\": {\n                        \"type\" : \"array\",\n                        \"items\":{\n\n                        }\n                    }\n\n                }\n            },\n            \"EvmLog\":{\n                \"type\" : \"object\",\n                \"required\": [\n                  \"address\",\n                  \"data\",\n                  \"blockHash\",\n                  \"transactionHash\",\n                  \"topics\",\n                  \"logIndex\",\n                  \"transactionIndex\",\n                  \"blockNumber\"\n                ],\n                \"properties\": {\n                  \"address\":{\n                    \"type\": \"string\"\n                  },\n                  \"data\":{\n                    \"type\": \"string\"\n                  },\n                  \"blockHash\":{\n                    \"type\": \"string\"\n                  },\n                  \"transactionHash\":{\n                    \"type\": \"string\"\n                  },\n                  \"topics\":{\n                    \"type\": \"array\",\n                    \"items\":{\n                      \"type\" :\"string\" \n                      \n                    }\n                  },\n                  \"logIndex\":{\n                    \"type\": \"number\"\n                  },\n                  \"transactionIndex\":{\n                    \"type\": \"number\"\n                  },\n                  \"blockNumber\":{\n                    \"type\": \"number\"\n                  }\n              }\n            },\n            \"GetBlockV1Request\": {\n                \"required\": [\"blockHashOrBlockNumber\"],\n                \"additionalProperties\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                    \"blockHashOrBlockNumber\": {\n                }\n                }\n            },\n            \"WatchBlocksV1\": {\n                \"type\": \"string\",\n                \"enum\": [\n                    \"org.hyperledger.cactus.api.async.besu.WatchBlocksV1.Subscribe\",\n                    \"org.hyperledger.cactus.api.async.besu.WatchBlocksV1.Next\",\n                    \"org.hyperledger.cactus.api.async.besu.WatchBlocksV1.Unsubscribe\",\n                    \"org.hyperledger.cactus.api.async.besu.WatchBlocksV1.Error\",\n                    \"org.hyperledger.cactus.api.async.besu.WatchBlocksV1.Complete\"\n                ],\n                \"x-enum-varnames\": [\n                    \"Subscribe\",\n                    \"Next\",\n                    \"Unsubscribe\",\n                    \"Error\",\n                    \"Complete\"\n                ]\n            },\n            \"Web3BlockHeader\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"number\",\n                    \"hash\",\n                    \"parentHash\",\n                    \"nonce\",\n                    \"sha3Uncles\",\n                    \"logsBloom\",\n                    \"transactionRoot\",\n                    \"stateRoot\",\n                    \"receiptRoot\",\n                    \"miner\",\n                    \"extraData\",\n                    \"gasLimit\",\n                    \"gasUsed\",\n                    \"timestamp\"\n                ],\n                \"properties\": {\n                    \"number\": {\n                        \"type\": \"number\"\n                    },\n                    \"hash\": {\n                        \"type\": \"string\"\n                    },\n                    \"parentHash\": {\n                        \"type\": \"string\"\n                    },\n                    \"nonce\": {\n                        \"type\": \"string\"\n                    },\n                    \"sha3Uncles\": {\n                        \"type\": \"string\"\n                    },\n                    \"logsBloom\": {\n                        \"type\": \"string\"\n                    },\n                    \"transactionRoot\": {\n                        \"type\": \"string\"\n                    },\n                    \"stateRoot\": {\n                        \"type\": \"string\"\n                    },\n                    \"receiptRoot\": {\n                        \"type\": \"string\"\n                    },\n                    \"miner\": {\n                        \"type\": \"string\"\n                    },\n                    \"extraData\": {\n                        \"type\": \"string\"\n                    },\n                    \"gasLimit\": {\n                        \"type\": \"integer\"\n                    },\n                    \"gasUsed\": {\n                        \"type\": \"integer\"\n                    },\n                    \"timestamp\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    }\n                }\n            },\n            \"WatchBlocksV1Progress\": {\n                \"type\": \"object\",\n                \"required\": [\"blockHeader\"],\n                \"properties\": {\n                    \"blockHeader\": {\n                        \"$ref\": \"#/components/schemas/Web3BlockHeader\"\n                    } \n                }\n            },\n            \"ReceiptType\": {\n                \"description\": \"Enumerates the possible types of receipts that can be waited for by someone or something that has requested the execution of a transaction on a ledger.\",\n                \"type\": \"string\",\n                \"enum\": [\n                    \"NODE_TX_POOL_ACK\",\n                    \"LEDGER_BLOCK_ACK\"\n                ]\n            },\n            \"ConsistencyStrategy\": {\n                \"type\": \"object\",\n                \"required\": [\"receiptType\", \"blockConfirmations\"],\n                \"properties\": {\n                    \"receiptType\": {\n                        \"$ref\": \"#/components/schemas/ReceiptType\"\n                    },\n                    \"timeoutMs\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The amount of milliseconds to wait for the receipt to arrive to the connector. Defaults to 0 which means to wait for an unlimited amount of time. Note that this wait may be interrupted still by other parts of the infrastructure such as load balancers cutting of HTTP requests after some time even if they are the type that is supposed to be kept alive. The question of re-entrance is a broader topic not in scope to discuss here, but it is important to mention it.\",\n                        \"minimum\": 0\n                    },\n                    \"blockConfirmations\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 0,\n                        \"description\": \"The number of blocks to wait to be confirmed in addition to the block containing the transaction in question. Note that if the receipt type is set to only wait for node transaction pool ACK and this parameter is set to anything, but zero then the API will not accept the request due to conflicting parameters.\"\n                    }\n                }\n            },\n            \"Web3SigningCredential\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\"\n                ],\n                \"discriminator\": {\n                    \"propertyName\": \"type\"\n                },\n                \"oneOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredentialCactusKeychainRef\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredentialPrivateKeyHex\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredentialNone\"\n                    }\n                ],\n                \"properties\": {\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredentialType\"\n                    }\n                }\n            },\n            \"Web3SigningCredentialCactusKeychainRef\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\",\n                    \"ethAccount\",\n                    \"keychainId\",\n                    \"keychainEntryKey\"\n                ],\n                \"properties\": {\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredentialType\"\n                    },\n                    \"ethAccount\": {\n                        \"type\": \"string\",\n                        \"description\": \"The ethereum account (public key) that the credential  belongs to. Basically the username in the traditional  terminology of authentication.\",\n                        \"minLength\": 64,\n                        \"maxLength\": 64,\n                        \"nullable\": false\n                    },\n                    \"keychainEntryKey\": {\n                        \"type\": \"string\",\n                        \"description\": \"The key to use when looking up the the keychain entry holding the secret pointed to by the  keychainEntryKey parameter.\",\n                        \"minLength\": 0,\n                        \"maxLength\": 1024\n                    },\n                    \"keychainId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The keychain ID to use when looking up the the keychain plugin instance that will be used to retrieve the secret pointed to by the keychainEntryKey parameter.\",\n                        \"minLength\": 0,\n                        \"maxLength\": 1024\n                    }\n                }\n            },\n            \"Web3SigningCredentialPrivateKeyHex\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\",\n                    \"ethAccount\",\n                    \"secret\"\n                ],\n                \"properties\": {\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredentialType\"\n                    },\n                    \"ethAccount\": {\n                        \"type\": \"string\",\n                        \"description\": \"The ethereum account (public key) that the credential belongs to. Basically the username in the traditional terminology of authentication.\",\n                        \"minLength\": 64,\n                        \"maxLength\": 64,\n                        \"nullable\": false\n                    },\n                    \"secret\": {\n                        \"type\": \"string\",\n                        \"description\": \"The HEX encoded private key of an eth account.\",\n                        \"minLength\": 0,\n                        \"maxLength\": 65535\n                    }\n                }\n            },\n            \"Web3SigningCredentialNone\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\"\n                ],\n                \"description\": \"Using this denotes that there is no signing required because the transaction is pre-signed.\",\n                \"properties\": {\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredentialType\"\n                    }\n                }\n            },\n            \"Web3SigningCredentialType\": {\n                \"type\": \"string\",\n                \"enum\": [\n                    \"CACTUS_KEYCHAIN_REF\",\n                    \"GETH_KEYCHAIN_PASSWORD\",\n                    \"PRIVATE_KEY_HEX\",\n                    \"NONE\"\n                ]\n            },\n            \"EthContractInvocationType\": {\n                \"type\": \"string\",\n                \"enum\": [\n                    \"SEND\",\n                    \"CALL\"\n                ]\n            },\n            \"SolidityContractJsonArtifact\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"contractName\"\n                ],\n                \"properties\": {\n                    \"contractName\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"metadata\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"bytecode\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"deployedBytecode\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"sourceMap\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"deployedSourceMap\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"sourcePath\": {\n                        \"type\": \"string\"\n                    },\n                    \"compiler\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true,\n                        \"properties\": {\n                            \"name\": {\n                                \"type\": \"string\"\n                            },\n                            \"version\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"functionHashes\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                    },\n                    \"gasEstimates\": {\n                        \"properties\": {\n                            \"creation\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"codeDepositCost\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"executionCost\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"totalCost\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"external\": {\n                                \"type\": \"object\",\n                                \"additionalProperties\": true\n                            }\n                        }\n                    }\n                }\n            },\n            \"BesuTransactionConfig\": {\n                \"type\": \"object\",\n                \"additionalProperties\": true,\n                \"properties\": {\n                    \"rawTransaction\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"from\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"to\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    \"value\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"gas\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"gasPrice\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"nonce\": {\n                        \"type\": \"number\"\n                    },\n                    \"data\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                }\n            },\n            \"BesuPrivateTransactionConfig\" : {\n                \"type\": \"object\",\n                \"required\" : [\n                    \"privateFrom\",\n                    \"privateFor\"\n                ],\n                \"properties\" : {\n                    \"privateFrom\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"privateFor\": {\n                        \"type\": \"array\",\n                        \"default\": [],\n                        \"items\": {},\n                        \"nullable\": false\n                    }\n\n                }\n            },\n            \"Web3TransactionReceipt\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"blockHash\",\n                    \"blockNumber\",\n                    \"transactionHash\",\n                    \"transactionIndex\",\n                    \"status\",\n                    \"from\",\n                    \"to\",\n                    \"gasUsed\"\n                ],\n                \"additionalProperties\": true,\n                \"properties\": {\n                    \"status\": {\n                        \"type\": \"boolean\",\n                        \"nullable\": false\n                    },\n                    \"transactionHash\": {\n                        \"type\": \"string\",\n                        \"minLength\": 66,\n                        \"maxLength\": 66,\n                        \"pattern\": \"^0x([A-Fa-f0-9]{64})$\"\n                    },\n                    \"transactionIndex\": {\n                        \"type\": \"number\",\n                        \"nullable\": false\n                    },\n                    \"blockHash\": {\n                        \"type\": \"string\",\n                        \"minLength\": 66,\n                        \"maxLength\": 66,\n                        \"pattern\": \"^0x([A-Fa-f0-9]{64})$\"\n                    },\n                    \"blockNumber\": {\n                        \"type\": \"number\",\n                        \"nullable\": false\n                    },\n                    \"gasUsed\": {\n                        \"type\": \"number\",\n                        \"nullable\": false\n                    },\n                    \"contractAddress\": {\n                        \"type\": \"string\",\n                        \"nullable\": true\n                    },\n                    \"from\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"to\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"RunTransactionRequest\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"web3SigningCredential\",\n                    \"transactionConfig\",\n                    \"consistencyStrategy\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"web3SigningCredential\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredential\",\n                        \"nullable\": false\n                    },\n                    \"transactionConfig\": {\n                        \"$ref\": \"#/components/schemas/BesuTransactionConfig\",\n                        \"nullable\": false\n                    },\n                    \"consistencyStrategy\": {\n                        \"$ref\": \"#/components/schemas/ConsistencyStrategy\"\n                    },\n                    \"privateTransactionConfig\": {\n                        \"$ref\": \"#/components/schemas/BesuPrivateTransactionConfig\"\n                    }\n                }\n            },\n            \"RunTransactionResponse\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"transactionReceipt\"\n                ],\n                \"properties\": {\n                    \"transactionReceipt\": {\n                        \"$ref\": \"#/components/schemas/Web3TransactionReceipt\"\n                    }\n                }\n            },\n            \"DeployContractSolidityBytecodeV1Request\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"contractName\",\n                    \"contractAbi\",\n                    \"bytecode\",\n                    \"web3SigningCredential\",\n                    \"keychainId\",\n                    \"constructorArgs\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"contractName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The contract name for retrieve the contracts json on the keychain.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 100,\n                        \"nullable\": false\n                    },\n                    \"contractAbi\": {\n                        \"description\": \"The application binary interface of the solidity contract\",\n                        \"type\": \"array\",\n                        \"items\": {},\n                        \"nullable\": false\n                    },\n                    \"constructorArgs\": {\n                        \"type\": \"array\",\n                        \"items\": {},\n                        \"default\": []\n                    },\n                    \"web3SigningCredential\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredential\",\n                        \"nullable\": false\n                    },\n                    \"bytecode\": {\n                        \"type\": \"string\",\n                        \"nullable\": false,\n                        \"minLength\": 1,\n                        \"maxLength\": 24576,\n                        \"description\": \"See https://ethereum.stackexchange.com/a/47556 regarding the maximum length of the bytecode\"\n                    },\n                    \"keychainId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The keychainId for retrieve the contracts json.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 100,\n                        \"nullable\": false\n                    },\n                    \"gas\": {\n                        \"type\": \"number\",\n                        \"nullable\": false\n                    },\n                    \"gasPrice\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"timeoutMs\": {\n                        \"type\": \"number\",\n                        \"description\": \"The amount of milliseconds to wait for a transaction receipt with theaddress of the contract(which indicates successful deployment) beforegiving up and crashing.\",\n                        \"minimum\": 0,\n                        \"default\": 60000,\n                        \"nullable\": false\n                    },\n                    \"privateTransactionConfig\": {\n                        \"$ref\": \"#/components/schemas/BesuPrivateTransactionConfig\"\n                    }\n                }\n            },\n            \"DeployContractSolidityBytecodeV1Response\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"transactionReceipt\"\n                ],\n                \"properties\": {\n                    \"transactionReceipt\": {\n                        \"$ref\": \"#/components/schemas/Web3TransactionReceipt\"\n                    }\n                }\n            },\n            \"InvokeContractV1Request\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"contractName\",\n                    \"signingCredential\",\n                    \"invocationType\",\n                    \"methodName\",\n                    \"params\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"contractName\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"signingCredential\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredential\",\n                        \"nullable\": false\n                    },\n                    \"invocationType\": {\n                        \"$ref\": \"#/components/schemas/EthContractInvocationType\",\n                        \"nullable\": false,\n                        \"description\": \"Indicates wether it is a CALL or a SEND type of  invocation where only SEND ends up creating an actual transaction on the ledger.\"\n                    },\n                    \"methodName\": {\n                        \"description\": \"The name of the contract method to invoke.\",\n                        \"type\": \"string\",\n                        \"nullable\": false,\n                        \"minLength\": 1,\n                        \"maxLength\": 2048\n                    },\n                    \"params\": {\n                        \"description\": \"The list of arguments to pass in to the contract method being invoked.\",\n                        \"type\": \"array\",\n                        \"default\": [],\n                        \"items\": {}\n                    },\n                    \"contractAbi\": {\n                        \"description\": \"The application binary interface of the solidity contract, optional parameter\",\n                        \"type\": \"array\",\n                        \"items\": {},\n                        \"nullable\": false\n                    },\n                    \"contractAddress\": {\n                        \"description\": \"Address of the solidity contract, optional parameter\",\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"value\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"gas\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"gasPrice\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"nonce\": {\n                        \"type\": \"number\"\n                    },\n                    \"timeoutMs\": {\n                        \"type\": \"number\",\n                        \"description\": \"The amount of milliseconds to wait for a transaction receipt beforegiving up and crashing. Only has any effect if the invocation type is SEND\",\n                        \"minimum\": 0,\n                        \"default\": 60000,\n                        \"nullable\": false\n                    },\n                    \"keychainId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The keychainId for retrieve the contracts json.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 100\n                    },\n                    \"privateTransactionConfig\": {\n                        \"$ref\": \"#/components/schemas/BesuPrivateTransactionConfig\"\n                    }\n                }\n            },\n            \"InvokeContractV1Response\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"success\"\n                ],\n                \"properties\": {\n                    \"transactionReceipt\": {\n                        \"$ref\": \"#/components/schemas/Web3TransactionReceipt\"\n                    },\n                    \"callOutput\": {},\n                    \"success\": {\n                        \"type\": \"boolean\",\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"SignTransactionRequest\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"transactionHash\",\n                    \"keychainId\",\n                    \"keychainRef\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"keychainId\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1,\n                        \"maxLength\": 100,\n                        \"nullable\": false\n                    },\n                    \"keychainRef\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1,\n                        \"maxLength\": 100,\n                        \"nullable\": false\n                    },\n                    \"transactionHash\": {\n                        \"description\": \"The transaction hash of ledger will be used to fetch the contain.\",\n                        \"type\": \"string\",\n                        \"minLength\": 0,\n                        \"maxLength\": 2048,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"SignTransactionResponse\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"signature\"\n                ],\n                \"properties\": {\n                    \"signature\": {\n                        \"description\": \"The signatures of ledger from the corresponding transaction hash.\",\n                        \"type\": \"string\",\n                        \"minLength\": 0,\n                        \"maxLength\": 2048,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"PrometheusExporterMetricsResponse\": {\n                \"type\": \"string\",\n                \"nullable\": false\n            },\n            \"GetBesuRecordV1Request\":{\n                \"type\": \"object\",\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"invokeCall\": {\n                        \"$ref\": \"#/components/schemas/InvokeContractV1Request\"\n                    },\n                    \"transactionHash\": {\n                        \"type\": \"string\",\n                        \"minLength\": 66,\n                        \"maxLength\": 66,\n                        \"pattern\": \"^0x([A-Fa-f0-9]{64})$\"\n                    }\n                }\n            },\n            \"GetBesuRecordV1Response\":{\n                \"type\": \"object\",\n                \"properties\": {\n                    \"ledgerId\":{\n                        \"type\":\"string\"\n                    },\n                    \"stateContract\":{\n                        \"type\":\"string\"\n                    },\n                    \"transactionInputData\":{},\n                    \"callOutput\":{}\n                }\n            }\n        }\n    },\n    \"paths\": {\n        \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/deploy-contract-solidity-bytecode\": {\n            \"post\": {\n                \"x-hyperledger-cactus\": {\n                    \"http\": {\n                        \"verbLowerCase\": \"post\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/deploy-contract-solidity-bytecode\"\n                    }\n                },\n                \"operationId\": \"deployContractSolBytecodeV1\",\n                \"summary\": \"Deploys the bytecode of a Solidity contract.\",\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/DeployContractSolidityBytecodeV1Request\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/DeployContractSolidityBytecodeV1Response\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/get-balance\": {\n            \"post\": {\n                \"x-hyperledger-cactus\": { \n                    \"http\": {\n                        \"verbLowerCase\": \"post\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/get-balance\"\n                    }\n                },\n                \"operationId\": \"getBalanceV1\",\n                \"summary\": \"Return balance of an address of a given block\",\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/GetBalanceV1Request\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/GetBalanceV1Response\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/get-block\": {\n            \"post\": {\n                \"x-hyperledger-cactus\": {\n                    \"http\": {\n                        \"verbLowerCase\": \"post\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/get-block\"\n                    }\n                },\n                \"operationId\": \"getBlockV1\",\n                \"summary\": \"Returns a block matching the block\",\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/GetBlockV1Request\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/GetBlockV1Response\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/run-transaction\": {\n            \"post\": {\n                \"x-hyperledger-cactus\": {\n                    \"http\": {\n                        \"verbLowerCase\": \"post\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/run-transaction\"\n                    }\n                },\n                \"operationId\": \"runTransactionV1\",\n                \"summary\": \"Executes a transaction on a besu ledger\",\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/RunTransactionRequest\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/RunTransactionResponse\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/get-transaction\": {\n            \"post\": {\n                \"x-hyperledger-cactus\": {\n                    \"http\": {\n                        \"verbLowerCase\": \"post\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/get-transaction\"\n                    }\n                },\n                \"operationId\": \"getTransactionV1\",\n                \"summary\": \"Executes a transaction on a besu ledger\",\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/GetTransactionV1Request\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/GetTransactionV1Response\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/get-past-logs\": {\n            \"post\": {\n                \"x-hyperledger-cactus\": {\n                    \"http\": {\n                        \"verbLowerCase\": \"post\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/get-past-logs\"\n                    }\n                },\n                \"operationId\": \"getPastLogsV1\",\n                \"summary\": \"Gets past logs, matching the given options.\",\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/GetPastLogsV1Request\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n\n                                    \"$ref\": \"#/components/schemas/GetPastLogsV1Response\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/invoke-contract\": {\n            \"post\": {\n                \"x-hyperledger-cactus\": {\n                    \"http\": {\n                        \"verbLowerCase\": \"post\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/invoke-contract\"\n                    }\n                },\n                \"operationId\": \"invokeContractV1\",\n                \"summary\": \"Invokes a contract on a besu ledger\",\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/InvokeContractV1Request\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/InvokeContractV1Response\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/sign-transaction\": {\n            \"post\": {\n                \"x-hyperledger-cactus\": {\n                    \"http\": {\n                        \"verbLowerCase\": \"post\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/sign-transaction\"\n                    }\n                },\n                \"operationId\": \"signTransactionV1\",\n                \"summary\": \"Obtain signatures of ledger from the corresponding transaction hash.\",\n                \"description\": \"Obtain signatures of ledger from the corresponding transaction hash.\",\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/SignTransactionRequest\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SignTransactionResponse\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Not able to find the corresponding tranaction from the transaction hash\"\n                    }\n                }\n            }\n        },\n        \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/get-prometheus-exporter-metrics\": {\n            \"get\": {\n                \"x-hyperledger-cactus\": {\n                    \"http\": {\n                        \"verbLowerCase\": \"get\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/get-prometheus-exporter-metrics\"\n                    }\n                },\n                \"operationId\": \"getPrometheusMetricsV1\",\n                \"summary\": \"Get the Prometheus Metrics\",\n                \"parameters\": [],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"text/plain\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/PrometheusExporterMetricsResponse\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/get-besu-record\": {\n            \"post\": {\n                \"x-hyperledger-cactus\": {\n                    \"http\": {\n                        \"verbLowerCase\": \"post\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/get-besu-record\"\n                    }\n                },\n                \"operationId\": \"getBesuRecordV1\",\n                \"summary\": \"Retrieves an arbitrary record (any piece of information) from the ledger. Ledger records can be call outputs, transaction input, etc.\",\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/GetBesuRecordV1Request\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"text/plain\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/GetBesuRecordV1Response\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
			"canonicalURL": "/github.com/hyperledger/cactus@a69a9578c4e8f1334758690f77c35ee75ccc0884/-/blob/packages/cactus-plugin-ledger-connector-besu/src/main/json/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/hyperledger/cactus/blob/a69a9578c4e8f1334758690f77c35ee75ccc0884/packages/cactus-plugin-ledger-connector-besu/src/main/json/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-besu/get-prometheus-exporter-metrics\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}