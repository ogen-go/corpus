{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tfranzel/drf-spectacular"
		},
		"file": {
			"name": "test_examples.yml",
			"size": 0,
			"path": "tests/test_examples.yml",
			"byteSize": 5670,
			"content": "openapi: 3.0.3\ninfo:\n  title: ''\n  version: 0.0.0\npaths:\n  /schema/:\n    get:\n      operationId: schema_list\n      parameters:\n      - in: query\n        name: artist\n        schema:\n          type: string\n        description: Filter by artist\n        examples:\n          ArtistQueryExample1:\n            value: prince\n            summary: Artist Query Example 1\n            description: description for artist query example 1\n          ArtistQueryExample2:\n            value: miles davis\n            summary: Artist Query Example 2\n            description: description for artist query example 2\n      tags:\n      - schema\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/C'\n              examples:\n                SerializerCExampleRO:\n                  value:\n                  - field: 111\n                  summary: Serializer C Example RO\n          description: ''\n    post:\n      operationId: schema_create\n      tags:\n      - schema\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/A'\n            examples:\n              CreateExampleWO:\n                value:\n                  field: 22\n                summary: Create Example WO\n              CreateExampleRW:\n                value:\n                  field: 33\n                summary: Create Example RW\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/A'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/A'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/B'\n              examples:\n                CreateExampleRO:\n                  value:\n                    field: 11\n                  summary: Create Example RO\n                CreateExampleRW:\n                  value:\n                    field: 33\n                  summary: Create Example RW\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n        '403':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n              examples:\n                CreateError403Example:\n                  value:\n                    field: error\n                  summary: Create Error 403 Example\n          description: ''\n  /schema/{id}/:\n    get:\n      operationId: schema_retrieve\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this simple model.\n        required: true\n        examples:\n          ExampleID1:\n            value: 1\n            summary: Example ID 1\n          ExampleID2:\n            value: 2\n            summary: Example ID 2\n      tags:\n      - schema\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/B'\n          description: ''\n  /schema/override_extend_schema_action/:\n    post:\n      operationId: schema_override_extend_schema_action_create\n      tags:\n      - schema\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/A'\n            examples:\n              SerializerAExampleWO:\n                value:\n                  field: 2\n                summary: Serializer A Example WO\n              SerializerAExampleRW:\n                value:\n                  field: 3\n                summary: Serializer A Example RW custom summary\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/A'\n            examples:\n              SerializerAExampleRWExternal:\n                externalValue: https://example.com/example_a.txt\n                summary: Serializer A Example RW External\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/A'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/B'\n          description: ''\n  /schema/raw_action/:\n    get:\n      operationId: schema_raw_action_retrieve\n      tags:\n      - schema\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/B'\n          description: ''\ncomponents:\n  schemas:\n    A:\n      type: object\n      properties:\n        field:\n          type: integer\n      required:\n      - field\n    B:\n      type: object\n      properties:\n        field:\n          type: integer\n      required:\n      - field\n    C:\n      type: object\n      properties:\n        field:\n          type: integer\n      required:\n      - field\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n    cookieAuth:\n      type: apiKey\n      in: cookie\n      name: sessionid\n",
			"canonicalURL": "/github.com/tfranzel/drf-spectacular@df9e115ca9b9a3ec84d60df942be28ce3cda13fa/-/blob/tests/test_examples.yml",
			"externalURLs": [
				{
					"url": "https://github.com/tfranzel/drf-spectacular/blob/df9e115ca9b9a3ec84d60df942be28ce3cda13fa/tests/test_examples.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/schema/\": get: security: security \"cookieAuth\" (index 0): cookie security not implemented",
	"NotImplemented": [
		"cookie security"
	]
}