{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/googleapis.com/language/v1beta1/openapi.yaml",
			"byteSize": 28839,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://language.googleapis.com/\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: Provides natural language understanding technologies, such as sentiment analysis, entity recognition, entity sentiment analysis, and other text annotations, to developers.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Cloud Natural Language API\n  version: v1beta1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n    - analytics\n    - media\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - format: openapi\n      url: https://language.googleapis.com/$discovery/rest?version=v1beta1\n      version: \"3.0\"\n  x-providerName: googleapis.com\n  x-serviceName: language\n  x-preferred: true\nexternalDocs:\n  url: https://cloud.google.com/natural-language/\ntags:\n  - name: documents\npaths:\n  /v1beta1/documents:analyzeEntities:\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      description: Finds named entities (currently proper names and common nouns) in the text along with entity types, salience, mentions for each entity, and other properties.\n      operationId: language.documents.analyzeEntities\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AnalyzeEntitiesRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnalyzeEntitiesResponse\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-language\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-language\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - documents\n  /v1beta1/documents:analyzeSentiment:\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      description: Analyzes the sentiment of the provided text.\n      operationId: language.documents.analyzeSentiment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AnalyzeSentimentRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnalyzeSentimentResponse\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-language\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-language\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - documents\n  /v1beta1/documents:analyzeSyntax:\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      description: Analyzes the syntax of the text and provides sentence boundaries and tokenization along with part of speech tags, dependency trees, and other properties.\n      operationId: language.documents.analyzeSyntax\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AnalyzeSyntaxRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnalyzeSyntaxResponse\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-language\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-language\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - documents\n  /v1beta1/documents:annotateText:\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      description: A convenience method that provides all the features that analyzeSentiment, analyzeEntities, and analyzeSyntax provide in one call.\n      operationId: language.documents.annotateText\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AnnotateTextRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnnotateTextResponse\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-language\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-language\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - documents\ncomponents:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n          - \"1\"\n          - \"2\"\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n          - json\n          - media\n          - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    AnalyzeEntitiesRequest:\n      description: The entity analysis request message.\n      properties:\n        document:\n          $ref: \"#/components/schemas/Document\"\n          description: Input document.\n        encodingType:\n          description: The encoding type used by the API to calculate offsets.\n          enum:\n            - NONE\n            - UTF8\n            - UTF16\n            - UTF32\n          type: string\n      type: object\n    AnalyzeEntitiesResponse:\n      description: The entity analysis response message.\n      properties:\n        entities:\n          description: The recognized entities in the input document.\n          items:\n            $ref: \"#/components/schemas/Entity\"\n          type: array\n        language:\n          description: The language of the text, which will be the same as the language specified in the request or, if not specified, the automatically-detected language. See Document.language field for more details.\n          type: string\n      type: object\n    AnalyzeSentimentRequest:\n      description: The sentiment analysis request message.\n      properties:\n        document:\n          $ref: \"#/components/schemas/Document\"\n          description: Input document.\n        encodingType:\n          description: The encoding type used by the API to calculate sentence offsets for the sentence sentiment.\n          enum:\n            - NONE\n            - UTF8\n            - UTF16\n            - UTF32\n          type: string\n      type: object\n    AnalyzeSentimentResponse:\n      description: The sentiment analysis response message.\n      properties:\n        documentSentiment:\n          $ref: \"#/components/schemas/Sentiment\"\n          description: The overall sentiment of the input document.\n        language:\n          description: The language of the text, which will be the same as the language specified in the request or, if not specified, the automatically-detected language. See Document.language field for more details.\n          type: string\n        sentences:\n          description: The sentiment for all the sentences in the document.\n          items:\n            $ref: \"#/components/schemas/Sentence\"\n          type: array\n      type: object\n    AnalyzeSyntaxRequest:\n      description: The syntax analysis request message.\n      properties:\n        document:\n          $ref: \"#/components/schemas/Document\"\n          description: Input document.\n        encodingType:\n          description: The encoding type used by the API to calculate offsets.\n          enum:\n            - NONE\n            - UTF8\n            - UTF16\n            - UTF32\n          type: string\n      type: object\n    AnalyzeSyntaxResponse:\n      description: The syntax analysis response message.\n      properties:\n        language:\n          description: The language of the text, which will be the same as the language specified in the request or, if not specified, the automatically-detected language. See Document.language field for more details.\n          type: string\n        sentences:\n          description: Sentences in the input document.\n          items:\n            $ref: \"#/components/schemas/Sentence\"\n          type: array\n        tokens:\n          description: Tokens, along with their syntactic information, in the input document.\n          items:\n            $ref: \"#/components/schemas/Token\"\n          type: array\n      type: object\n    AnnotateTextRequest:\n      description: The request message for the text annotation API, which can perform multiple analysis types (sentiment, entities, and syntax) in one call.\n      properties:\n        document:\n          $ref: \"#/components/schemas/Document\"\n          description: Input document.\n        encodingType:\n          description: The encoding type used by the API to calculate offsets.\n          enum:\n            - NONE\n            - UTF8\n            - UTF16\n            - UTF32\n          type: string\n        features:\n          $ref: \"#/components/schemas/Features\"\n          description: The enabled features.\n      type: object\n    AnnotateTextResponse:\n      description: The text annotations response message.\n      properties:\n        documentSentiment:\n          $ref: \"#/components/schemas/Sentiment\"\n          description: The overall sentiment for the document. Populated if the user enables AnnotateTextRequest.Features.extract_document_sentiment.\n        entities:\n          description: Entities, along with their semantic information, in the input document. Populated if the user enables AnnotateTextRequest.Features.extract_entities.\n          items:\n            $ref: \"#/components/schemas/Entity\"\n          type: array\n        language:\n          description: The language of the text, which will be the same as the language specified in the request or, if not specified, the automatically-detected language. See Document.language field for more details.\n          type: string\n        sentences:\n          description: Sentences in the input document. Populated if the user enables AnnotateTextRequest.Features.extract_syntax.\n          items:\n            $ref: \"#/components/schemas/Sentence\"\n          type: array\n        tokens:\n          description: Tokens, along with their syntactic information, in the input document. Populated if the user enables AnnotateTextRequest.Features.extract_syntax.\n          items:\n            $ref: \"#/components/schemas/Token\"\n          type: array\n      type: object\n    DependencyEdge:\n      description: Represents dependency parse tree information for a token.\n      properties:\n        headTokenIndex:\n          description: Represents the head of this token in the dependency tree. This is the index of the token which has an arc going to this token. The index is the position of the token in the array of tokens returned by the API method. If this token is a root token, then the `head_token_index` is its own index.\n          format: int32\n          type: integer\n        label:\n          description: The parse label for the token.\n          enum:\n            - UNKNOWN\n            - ABBREV\n            - ACOMP\n            - ADVCL\n            - ADVMOD\n            - AMOD\n            - APPOS\n            - ATTR\n            - AUX\n            - AUXPASS\n            - CC\n            - CCOMP\n            - CONJ\n            - CSUBJ\n            - CSUBJPASS\n            - DEP\n            - DET\n            - DISCOURSE\n            - DOBJ\n            - EXPL\n            - GOESWITH\n            - IOBJ\n            - MARK\n            - MWE\n            - MWV\n            - NEG\n            - NN\n            - NPADVMOD\n            - NSUBJ\n            - NSUBJPASS\n            - NUM\n            - NUMBER\n            - P\n            - PARATAXIS\n            - PARTMOD\n            - PCOMP\n            - POBJ\n            - POSS\n            - POSTNEG\n            - PRECOMP\n            - PRECONJ\n            - PREDET\n            - PREF\n            - PREP\n            - PRONL\n            - PRT\n            - PS\n            - QUANTMOD\n            - RCMOD\n            - RCMODREL\n            - RDROP\n            - REF\n            - REMNANT\n            - REPARANDUM\n            - ROOT\n            - SNUM\n            - SUFF\n            - TMOD\n            - TOPIC\n            - VMOD\n            - VOCATIVE\n            - XCOMP\n            - SUFFIX\n            - TITLE\n            - ADVPHMOD\n            - AUXCAUS\n            - AUXVV\n            - DTMOD\n            - FOREIGN\n            - KW\n            - LIST\n            - NOMC\n            - NOMCSUBJ\n            - NOMCSUBJPASS\n            - NUMC\n            - COP\n            - DISLOCATED\n            - ASP\n            - GMOD\n            - GOBJ\n            - INFMOD\n            - MES\n            - NCOMP\n          type: string\n      type: object\n    Document:\n      description: \"################################################################ # Represents the input to API methods.\"\n      properties:\n        content:\n          description: The content of the input in string format. Cloud audit logging exempt since it is based on user data.\n          type: string\n        gcsContentUri:\n          description: \"The Google Cloud Storage URI where the file content is located. This URI must be of the form: gs://bucket_name/object_name. For more details, see https://cloud.google.com/storage/docs/reference-uris. NOTE: Cloud Storage object versioning is not supported.\"\n          type: string\n        language:\n          description: The language of the document (if not specified, the language is automatically detected). Both ISO and BCP-47 language codes are accepted. [Language Support](https://cloud.google.com/natural-language/docs/languages) lists currently supported languages for each API method. If the language (either specified by the caller or automatically detected) is not supported by the called API method, an `INVALID_ARGUMENT` error is returned.\n          type: string\n        type:\n          description: Required. If the type is not set or is `TYPE_UNSPECIFIED`, returns an `INVALID_ARGUMENT` error.\n          enum:\n            - TYPE_UNSPECIFIED\n            - PLAIN_TEXT\n            - HTML\n          type: string\n      type: object\n    Entity:\n      description: Represents a phrase in the text that is a known entity, such as a person, an organization, or location. The API associates information, such as salience and mentions, with entities.\n      properties:\n        mentions:\n          description: The mentions of this entity in the input document. The API currently supports proper noun mentions.\n          items:\n            $ref: \"#/components/schemas/EntityMention\"\n          type: array\n        metadata:\n          additionalProperties:\n            type: string\n          description: Metadata associated with the entity. Currently, Wikipedia URLs and Knowledge Graph MIDs are provided, if available. The associated keys are \"wikipedia_url\" and \"mid\", respectively.\n          type: object\n        name:\n          description: The representative name for the entity.\n          type: string\n        salience:\n          description: The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.\n          format: float\n          type: number\n        type:\n          description: The entity type.\n          enum:\n            - UNKNOWN\n            - PERSON\n            - LOCATION\n            - ORGANIZATION\n            - EVENT\n            - WORK_OF_ART\n            - CONSUMER_GOOD\n            - OTHER\n          type: string\n      type: object\n    EntityMention:\n      description: Represents a mention for an entity in the text. Currently, proper noun mentions are supported.\n      properties:\n        text:\n          $ref: \"#/components/schemas/TextSpan\"\n          description: The mention text.\n        type:\n          description: The type of the entity mention.\n          enum:\n            - TYPE_UNKNOWN\n            - PROPER\n            - COMMON\n          type: string\n      type: object\n    Features:\n      description: All available features for sentiment, syntax, and semantic analysis. Setting each one to true will enable that specific analysis for the input.\n      properties:\n        extractDocumentSentiment:\n          description: Extract document-level sentiment.\n          type: boolean\n        extractEntities:\n          description: Extract entities.\n          type: boolean\n        extractSyntax:\n          description: Extract syntax information.\n          type: boolean\n      type: object\n    PartOfSpeech:\n      description: Represents part of speech information for a token.\n      properties:\n        aspect:\n          description: The grammatical aspect.\n          enum:\n            - ASPECT_UNKNOWN\n            - PERFECTIVE\n            - IMPERFECTIVE\n            - PROGRESSIVE\n          type: string\n        case:\n          description: The grammatical case.\n          enum:\n            - CASE_UNKNOWN\n            - ACCUSATIVE\n            - ADVERBIAL\n            - COMPLEMENTIVE\n            - DATIVE\n            - GENITIVE\n            - INSTRUMENTAL\n            - LOCATIVE\n            - NOMINATIVE\n            - OBLIQUE\n            - PARTITIVE\n            - PREPOSITIONAL\n            - REFLEXIVE_CASE\n            - RELATIVE_CASE\n            - VOCATIVE\n          type: string\n        form:\n          description: The grammatical form.\n          enum:\n            - FORM_UNKNOWN\n            - ADNOMIAL\n            - AUXILIARY\n            - COMPLEMENTIZER\n            - FINAL_ENDING\n            - GERUND\n            - REALIS\n            - IRREALIS\n            - SHORT\n            - LONG\n            - ORDER\n            - SPECIFIC\n          type: string\n        gender:\n          description: The grammatical gender.\n          enum:\n            - GENDER_UNKNOWN\n            - FEMININE\n            - MASCULINE\n            - NEUTER\n          type: string\n        mood:\n          description: The grammatical mood.\n          enum:\n            - MOOD_UNKNOWN\n            - CONDITIONAL_MOOD\n            - IMPERATIVE\n            - INDICATIVE\n            - INTERROGATIVE\n            - JUSSIVE\n            - SUBJUNCTIVE\n          type: string\n        number:\n          description: The grammatical number.\n          enum:\n            - NUMBER_UNKNOWN\n            - SINGULAR\n            - PLURAL\n            - DUAL\n          type: string\n        person:\n          description: The grammatical person.\n          enum:\n            - PERSON_UNKNOWN\n            - FIRST\n            - SECOND\n            - THIRD\n            - REFLEXIVE_PERSON\n          type: string\n        proper:\n          description: The grammatical properness.\n          enum:\n            - PROPER_UNKNOWN\n            - PROPER\n            - NOT_PROPER\n          type: string\n        reciprocity:\n          description: The grammatical reciprocity.\n          enum:\n            - RECIPROCITY_UNKNOWN\n            - RECIPROCAL\n            - NON_RECIPROCAL\n          type: string\n        tag:\n          description: The part of speech tag.\n          enum:\n            - UNKNOWN\n            - ADJ\n            - ADP\n            - ADV\n            - CONJ\n            - DET\n            - NOUN\n            - NUM\n            - PRON\n            - PRT\n            - PUNCT\n            - VERB\n            - X\n            - AFFIX\n          type: string\n        tense:\n          description: The grammatical tense.\n          enum:\n            - TENSE_UNKNOWN\n            - CONDITIONAL_TENSE\n            - FUTURE\n            - PAST\n            - PRESENT\n            - IMPERFECT\n            - PLUPERFECT\n          type: string\n        voice:\n          description: The grammatical voice.\n          enum:\n            - VOICE_UNKNOWN\n            - ACTIVE\n            - CAUSATIVE\n            - PASSIVE\n          type: string\n      type: object\n    Sentence:\n      description: Represents a sentence in the input document.\n      properties:\n        sentiment:\n          $ref: \"#/components/schemas/Sentiment\"\n          description: For calls to AnalyzeSentiment or if AnnotateTextRequest.Features.extract_document_sentiment is set to true, this field will contain the sentiment for the sentence.\n        text:\n          $ref: \"#/components/schemas/TextSpan\"\n          description: The sentence text.\n      type: object\n    Sentiment:\n      description: Represents the feeling associated with the entire text or entities in the text.\n      properties:\n        magnitude:\n          description: A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment regardless of score (positive or negative).\n          format: float\n          type: number\n        polarity:\n          description: DEPRECATED FIELD - This field is being deprecated in favor of score. Please refer to our documentation at https://cloud.google.com/natural-language/docs for more information.\n          format: float\n          type: number\n        score:\n          description: Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).\n          format: float\n          type: number\n      type: object\n    Status:\n      description: \"The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).\"\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        message:\n          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.\n          type: string\n      type: object\n    TextSpan:\n      description: Represents an output piece of text.\n      properties:\n        beginOffset:\n          description: The API calculates the beginning offset of the content in the original document according to the EncodingType specified in the API request.\n          format: int32\n          type: integer\n        content:\n          description: The content of the output text.\n          type: string\n      type: object\n    Token:\n      description: Represents the smallest syntactic building block of the text.\n      properties:\n        dependencyEdge:\n          $ref: \"#/components/schemas/DependencyEdge\"\n          description: Dependency tree parse for this token.\n        lemma:\n          description: \"[Lemma](https://en.wikipedia.org/wiki/Lemma_%28morphology%29) of the token.\"\n          type: string\n        partOfSpeech:\n          $ref: \"#/components/schemas/PartOfSpeech\"\n          description: Parts of speech tag for this token.\n        text:\n          $ref: \"#/components/schemas/TextSpan\"\n          description: The token text.\n      type: object\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-language: Apply machine learning models to reveal the structure and meaning of text\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.\n      type: oauth2\n    Oauth2c:\n      description: Oauth 2.0 authorizationCode authentication\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-language: Apply machine learning models to reveal the structure and meaning of text\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n      type: oauth2\nsource:\n  url: {}\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/googleapis.com/language/v1beta1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/googleapis.com/language/v1beta1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1beta1/documents:annotateText\": post: security: security \"Oauth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}