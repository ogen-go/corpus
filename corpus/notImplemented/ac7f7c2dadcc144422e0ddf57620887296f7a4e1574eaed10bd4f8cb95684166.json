{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/edgexfoundry/edgex-go"
		},
		"file": {
			"name": "support-scheduler.yaml",
			"size": 0,
			"path": "openapi/v2/support-scheduler.yaml",
			"byteSize": 39556,
			"content": "openapi: 3.0.0\ninfo:\n  title: Edgex Foundry - Support Scheduler API\n  description: This is the definition of the API for the Support Scheduler service in the EdgeX Foundry IOT microservice platform. Support Scheduler provides functionality for scheduling different actions in the EdgeX Foundry platform.\n  version: 2.3.0\n  \nservers:\n  - url: http://localhost:59861/api/v2\n    description: URL for local development and testing\n  \ncomponents:\n  schemas:\n    AddIntervalRequest:\n      allOf:\n      - $ref: '#/components/schemas/BaseRequest'\n      type: object\n      properties:\n        interval:\n          $ref: '#/components/schemas/Interval'\n      required:\n      - interval\n    AddIntervalResponse:\n      allOf:\n      - $ref: '#/components/schemas/BaseResponse'\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n    AddIntervalActionRequest:\n      allOf:\n      - $ref: '#/components/schemas/BaseRequest'\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/IntervalAction'\n      required:\n      - action\n    AddIntervalActionResponse:\n      allOf:\n      - $ref: '#/components/schemas/BaseResponse'\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n    BaseRequest:\n      description: \"Defines basic properties which all use-case specific request DTO instances should support.\"\n      type: object\n      properties:\n        requestId:\n          description: \"Uniquely identifies this request. For implementation, recommend this value be generated by the type's constructor.\"\n          type: string\n          format: uuid\n          example: \"e6e8a2f4-eb14-4649-9e2b-175247911369\"\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n          example: v2\n      required:\n        - apiVersion\n    BaseResponse:\n      description: \"Defines basic properties which all use-case specific response DTO instances should support\"\n      type: object\n      properties:\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n        requestId:\n          description: \"Uniquely identifies the request that resulted in this response.\"\n          type: string\n          format: uuid\n          example: \"e6e8a2f4-eb14-4649-9e2b-175247911369\"\n        statusCode:\n          description: \"A numeric code signifying the operational status of the response.\"\n          type: integer\n        message:\n          description: \"A field that can contain a free-form message, such as an error message.\"\n          type: string\n    BaseWithTotalCountResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n      description: \"Defines basic properties which all use-case specific response DTO instances should support\"\n      type: object\n      properties:\n        totalCount:\n          description: \"The total count of all multi instances.\"\n          type: integer\n    ErrorResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n      description: \"A response type for returning a generic error to the caller.\"\n      type: object\n    ConfigResponse:\n      description: \"An object containing the service's configuration. Please refer the configuration documentation of each service for more details at [EdgeX Foundry Documentation](https://docs.edgexfoundry.org).\"\n      type: object\n      properties:\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n          example: v2\n        serviceName:\n          description: \"Outputs the name of the service the response is from\"\n          type: string\n        config:\n          description: \"A string-ified representation of the service's configuration. For purposes of this specification, a string has been used since configuration structure differs from service to service.\"\n          type: object\n    Interval:\n      description: \"Defines the interval at which some action should occur.\"\n      type: object\n      properties:\n        created:\n          description: \"A timestamp indicating when the interval was created.\"\n          type: integer\n        end:\n          description: \"Start time in ISO 8601 format YYYYMMDD'T'HHmmss \t@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \\\"yyyymmdd'T'HHmmss\\\")\"\n          type: string\n          example: \"20221016T200000\"\n        interval:\n          description: Interval indicates how often the specific resource needs to be polled. It represents as a duration string. The format of this field is to be an unsigned integer followed by a unit which may be \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\" representing nanoseconds, microseconds, milliseconds, seconds, minutes or hours. Eg, \"100ms\", \"24h\"\n          type: string\n          example: \"100m\"\n        id:\n          description: \"Uniquely identifies the interval\"\n          type: string\n          format: uuid\n        modified:\n          description: \"A timestamp indicating when the interval was last modified.\"\n          type: integer\n        name:\n          description: \"Non-database identifier for an interval (*must be unique)\"\n          type: string\n          example: \"test interval\"\n        start:\n          description: \"Start time in ISO 8601 format YYYYMMDD'T'HHmmss \t@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \\\"yyyymmdd'T'HHmmss\\\")\"\n          type: string\n          example: \"20211016T200000\"\n      required:\n        - name\n        - interval\n    UpdateInterval:\n      description: \"Defines the interval at which some action should occur.\"\n      type: object\n      properties:\n        id:\n          description: \"Uniquely identifies the interval, either id or name should be specified.\"\n          type: string\n          format: uuid\n        name:\n          description: \"Non-database identifier for an interval (*must be unique), either id or name should be specified.\"\n          type: string\n        start:\n          description: \"Start time in ISO 8601 format YYYYMMDD'T'HHmmss \t@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \\\"yyyymmdd'T'HHmmss\\\")\"\n          type: string\n        end:\n          description: \"Start time in ISO 8601 format YYYYMMDD'T'HHmmss \t@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \\\"yyyymmdd'T'HHmmss\\\")\"\n          type: string\n        interval:\n          description: Interval indicates how often the specific resource needs to be polled. It represents as a duration string. The format of this field is to be an unsigned integer followed by a unit which may be \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\" representing nanoseconds, microseconds, milliseconds, seconds, minutes or hours. Eg, \"100ms\", \"24h\"\n          type: string\n      required:\n        - id\n        - name\n    IntervalAction:\n      description: \"Defines the action to be taken at a specified interval.\"\n      type: object\n      properties:\n        created:\n          description: \"A timestamp indicating when the interval action was created.\"\n          type: integer\n        modified:\n          description: \"A timestamp indicating when the interval action was last modified.\"\n          type: integer\n        id:\n          description: \"Uniquely identifies the interval action\"\n          type: string\n          format: uuid\n        name:\n          description: \"Non-database identifier for an interval action\"\n          type: string\n        intervalName:\n          description: \"The name of the interval to which the action is associated.\"\n          type: string\n        address:\n          oneOf:\n            - $ref: '#/components/schemas/RESTAddress'\n          example:\n            type: \"REST\"\n            host: \"192.168.0.102\"\n            port: 8080\n            httpMethod: \"GET\"\n            path: \"/api/v2/ping\"\n        content:\n          description: \"The actual content to be sent as the body\"\n          type: string\n        contentType:\n          description: \"Indicates which request contentType should be used (i.e. text/html, application/json), the default is application/json\"\n          type: string\n        adminState:\n          type: string\n          description: Admin state\n          enum:\n            - LOCKED\n            - UNLOCKED\n      required:\n        - name\n        - intervalName\n        - address\n        - adminState\n    UpdateIntervalAction:\n      description: \"Defines the action to be taken at a specified interval.\"\n      type: object\n      properties:\n        id:\n          description: \"Uniquely identifies the interval action, either id or name should be specified.\"\n          type: string\n          format: uuid\n        name:\n          description: \"Non-database identifier for an interval action, either id or name should be specified.\"\n          type: string\n        intervalName:\n          description: \"The name of the interval to which the action is associated.\"\n          type: string\n        address:\n          oneOf:\n            - $ref: '#/components/schemas/RESTAddress'\n          example:\n            type: \"REST\"\n            host: \"192.168.0.102\"\n            port: 8080\n            httpMethod: \"GET\"\n            path: \"/api/v2/ping\"\n        content:\n          description: \"The actual content to be sent as the body\"\n          type: string\n        contentType:\n          description: \"Indicates which request contentType should be used (i.e. text/html, application/json), the default is application/json\"\n          type: string\n        adminState:\n          type: string\n          description: Admin state\n          enum:\n            - LOCKED\n            - UNLOCKED\n      required:\n        - id\n        - name\n    IntervalActionResponse:\n      allOf:\n      - $ref: '#/components/schemas/BaseResponse'\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/IntervalAction'\n    MultiIntervalActionsResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseWithTotalCountResponse'\n      type: object\n      properties:\n        actions:\n          type: array\n          items:\n            $ref: '#/components/schemas/IntervalAction'\n    IntervalResponse:\n      allOf:\n      - $ref: '#/components/schemas/BaseResponse'\n      type: object\n      properties:\n        interval:\n          $ref: '#/components/schemas/Interval'\n    MultiIntervalsResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseWithTotalCountResponse'\n      type: object\n      properties:\n        intervals:\n          type: array\n          items:\n            $ref: '#/components/schemas/Interval'\n    MetricsResponse:\n      description: \"A response from the /metrics endpoint providing memory and cpu utilization stats.\"\n      type: object\n      properties:\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n        serviceName:\n          description: \"Outputs the name of the service the response is from\"\n          type: string\n        metrics:\n          type: object\n          properties:\n            memAlloc:\n              description: \"Alloc is bytes of allocated heap objects.\"\n              type: integer\n            memFrees:\n              description: \"Frees is the cumulative count of heap objects freed.\"\n              type: integer\n            memLiveObjects:\n              description: \"The number of live objects is Mallocs - Frees.\"\n              type: integer\n            memMallocs:\n              description: \"The cumulative count of heap objects allocated.\"\n              type: integer\n            memSys:\n              description: \"The total bytes of memory obtained from the OS.\"\n              type: integer\n            memTotalAlloc:\n              description: \"Cumulative bytes allocated for heap objects.\"\n              type: integer\n            cpuBusyAvg:\n              description: \"Indicates the average level of CPU utilization\"\n              type: number\n    PingResponse:\n      type: object\n      properties:\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n          example: v2\n        timestamp:\n          description: \"Outputs the current server timestamp in RFC1123 format\"\n          example: \"Mon, 02 Jan 2006 15:04:05 MST\"\n          type: string\n        serviceName:\n          description: \"Outputs the name of the service the response is from\"\n          type: string\n    RequestEnvelope:\n      description: \"A wrapper type for use when sending a request to the /batch endpoint. Each individual request type in the HTTP request should be wrapped in an envelope to facilitate instantiation of the correct routing handler. See property descriptions below for more details.\"\n      type: object\n      properties:\n        action:\n          type: string\n          description: \"Indicates the type of operation applicable to the wrapped request. Valid values are 'create','read','update','delete', and 'command'\"\n        content:\n          type: string\n          format: byte\n          description: \"A byte array containing a marshalled request type instance. This is the specific, semantically identifiable request -- such as an AddDeviceRequest.\"\n        strategy:\n          type: string\n          description: \"Indicates the expectation of whether a response should be produced synchronously or asynchronously. If asynchronously, desire for either a polling or push/callback should be provided. Valid values are 'sync','async-push','async-poll'\"\n        type:\n          type: string\n          description: \"The name of the type applicable to the request instance contained in the 'content' property.\"\n        version:\n          description: \"Proposed field for explicitly defining version of request DTO. This is for advertising compatibility between a publisher/subscriber or requester/receiver\"\n          type: string\n          example: \"2.0.x\"\n      required:\n        - action\n        - content\n        - strategy\n        - type\n        - version\n    ResponseEnvelope:\n      description: \"A wrapper type for use when receiving a response from the /batch endpoint. Each individual response type in the HTTP response should be wrapped in an envelope to facilitate unmarshalling by the client. See property descriptions below for more details.\"\n      type: object\n      properties:\n        action:\n          type: string\n          description: \"Indicates the type of operation applicable to the wrapped response. This should be recapitulated from the originating request. Valid values are 'create','read','update','delete', and 'command'\"\n        content:\n          type: string\n          format: byte\n          description: \"A byte array containing a marshalled response type instance. This is the specific, semantically identifiable response -- such as an AddDeviceResponse.\"\n        strategy:\n          type: string\n          description: \"Recapitulates the expectation with regard to the delivery of response that was specified on the originating request. Valid values are 'sync','async-push','async-poll'\"\n        type:\n          type: string\n          description: \"The name of the type applicable to the response instance contained in the 'content' property.\"\n        version:\n          description: \"Proposed field for explicitly defining version of response DTO. This is for advertising compatibility between a publisher/subscriber or requester/receiver\"\n          type: string\n          example: \"2.0.x\"\n      required:\n        - action\n        - content\n        - strategy\n        - type\n        - version\n    UpdateIntervalRequest:\n      allOf:\n      - $ref: '#/components/schemas/BaseRequest'\n      type: object\n      properties:\n        interval:\n          $ref: '#/components/schemas/UpdateInterval'\n      required:\n        - interval\n    UpdateIntervalResponse:\n      allOf:\n      - $ref: '#/components/schemas/BaseRequest'\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n    UpdateIntervalActionRequest:\n      allOf:\n      - $ref: '#/components/schemas/BaseRequest'\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/UpdateIntervalAction'\n      required:\n        - action\n    UpdateIntervalActionResponse:\n      allOf:\n      - $ref: '#/components/schemas/BaseResponse'\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n    Address:\n      description: \"The address shows the information indicating how to contact a specific endpoint.\"\n      type: object\n      properties:\n        type:\n          description: \"Indicates which protocol should be used.\"\n          type: string\n          enum:\n            - REST\n        host:\n          description: \"The host targeted by the action.\"\n          type: string\n        port:\n          description: \"The port to address on the targeted host.\"\n          type: integer\n      required:\n        - type\n        - host\n        - port\n    RESTAddress:\n      description: \"The REST address shows the information indicating how to contact a specific endpoint by HTTP protocol.\"\n      allOf:\n        - $ref: '#/components/schemas/Address'\n        - type: object\n          properties:\n            path:\n              description: \"The HTTP path at the targeted host for fulfillment of the action.\"\n              type: string\n            httpMethod:\n              description: \"Indicates which Http verb should be used for the REST endpoint.\"\n              type: string\n          required:\n            - httpMethod\n    VersionResponse:\n      description: \"A response returned from the /version endpoint whose purpose is to report out the latest version supported by the service.\"\n      type: object\n      properties:\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n          example: v2\n        version:\n          description: \"The latest version supported by the service.\"\n          type: string\n        serviceName:\n          description: \"Outputs the name of the service the response is from\"\n          type: string\n  parameters:\n    offsetParam:\n      in: query\n      name: offset\n      required: false\n      schema:\n        type: integer\n        minimum: 0\n        default: 0\n      description: \"The number of items to skip before starting to collect the result set.\"\n    limitParam:\n      in: query\n      name: limit\n      required: false\n      schema:\n        type: integer\n        minimum: -1\n        default: 20\n      description: \"The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.\"\n    correlatedRequestHeader:\n      in: header\n      name: X-Correlation-ID\n      description: \"A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.\"\n      schema:\n        type: string\n        format: uuid\n      example: \"14a42ea6-c394-41c3-8bcd-a29b9f5e6835\"\n  headers:\n    correlatedResponseHeader:\n      description: \"A response header that returns the unique correlation ID used to initiate the request.\"\n      schema:\n        type: string\n        format: uuid\n      example: \"14a42ea6-c394-41c3-8bcd-a29b9f5e6835\"\n  examples:\n    400Example:\n      value:\n        apiVersion: \"v2\"\n        statusCode: 400\n        message: \"Bad Request\"\n    500Example:\n      value:\n        apiVersion: \"v2\"\n        statusCode: 500\n        message: \"Internal Server Error\"\n    MultiIntervalsExample:\n      value:\n        apiVersion: \"v2\"\n        statusCode: 200\n        totalCount: 3\n        intervals:\n          - created: 1634279367311\n            modified: 1634279367311\n            id: \"debade10-7838-44bd-9c09-1283813db6c8\"\n            name: \"interval_4\"\n            start: \"20211015T200000\"\n            end: \"20211016T200000\"\n            interval: \"100m\"\n          - created: 1634279236873\n            modified: 1634279236873\n            id: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n            name: \"interval_1\"\n            start: \"20211015T200000\"\n            end: \"20211016T200000\"\n            interval: \"100m\"\n    MultiIntervalActionsExample:\n      value:\n        apiVersion: \"v2\"\n        statusCode: 200\n        totalCount: 3\n        actions:\n          - created: 1634279367311\n            modified: 1634279367311\n            id: \"debade10-7838-44bd-9c09-1283813db6c8\"\n            name: \"action_2\"\n            intervalName: \"interval_1\"\n            address:\n              type: \"REST\"\n              host: \"192.168.0.102\"\n              port: 8080\n              httpMethod: \"GET\"\n              path: \"/api/v2/ping\"\n            adminState: \"UNLOCKED\"\n          - created: 1634280525302\n            modified: 1634280525302\n            id: \"7b9c6908-0929-498d-9f81-c25abdedd93f\"\n            name: \"action_1\"\n            intervalName: \"interval_1\"\n            address:\n              type: \"REST\"\n              host: \"192.168.0.102\"\n              port: 8080\n              httpMethod: \"GET\"\n              path: \"/api/v2/test\"\n            adminState: \"UNLOCKED\"\npaths:\n  /interval:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n    post:\n      summary: \"Add one or more new Intervals - name on each request must be unique.\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/AddIntervalRequest'\n      responses:\n        '207':\n          description: \"Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/ErrorResponse'\n                    - $ref: '#/components/schemas/AddIntervalResponse'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '500':\n          description: An unexpected error occurred on the server\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n    patch:\n      summary: \"Update one or more existing Intervals\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/UpdateIntervalRequest'\n      responses:\n        '207':\n          description: \"Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/ErrorResponse'\n                    - $ref: '#/components/schemas/UpdateIntervalResponse'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '500':\n          description: An unexpected error occurred on the server\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /interval/all:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Given the entire range of intervals sorted by last modified descending, returns a portion of that range according to the offset and limit parameters.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultiIntervalsResponse'\n              examples:\n                MultiIntervalsExample:\n                  $ref: '#/components/examples/MultiIntervalsExample'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ErrorResponse'\n  /interval/name/{name}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The unique name of an interval\"\n    get:\n      summary: \"Returns an interval according to the specified name\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntervalResponse'\n        '404':\n          description: \"The requested resource does not exist\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      summary: \"Deletes an interval according to the specified name. Associated actions will also be deleted.\"\n      responses:\n        '200':\n          description: \"Delete successful\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n        '404':\n          description: \"The requested resource does not exist\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /intervalaction:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n    post:\n      summary: \"Add one or more new IntervalActions - name on each request must be unique.\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/AddIntervalActionRequest'\n      responses:\n        '207':\n          description: \"Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/ErrorResponse'\n                    - $ref: '#/components/schemas/AddIntervalActionResponse'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '500':\n          description: An unexpected error occurred on the server\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n    patch:\n      summary: \"Update one or more existing IntervalActions\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/UpdateIntervalActionRequest'\n      responses:\n        '207':\n          description: \"Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/ErrorResponse'\n                    - $ref: '#/components/schemas/UpdateIntervalActionResponse'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '500':\n          description: An unexpected error occurred on the server\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /intervalaction/all:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Given the entire range of interval actions sorted by last modified descending, returns a portion of that range according to the offset and limit parameters.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultiIntervalActionsResponse'\n              examples:\n                MultiIntervalActionsExample:\n                  $ref: '#/components/examples/MultiIntervalActionsExample'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ErrorResponse'\n  /intervalaction/name/{name}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The name of an interval action\"\n    get:\n      summary: \"Returns an interval action according to the specified name\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntervalActionResponse'\n        '404':\n          description: \"The requested resource does not exist\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      summary: \"Deletes an interval action by name\"\n      responses:\n        '200':\n          description: \"Delete successful\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n        '404':\n          description: \"The requested resource does not exist\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /config:\n    get:\n      summary: \"Returns the current configuration of the service.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigResponse'\n        '500':\n          description: \"Interval Server Error\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /metrics:\n    get:\n      summary: \"An endpoint that can be used to obtain CPU/Memory usage stats for a given service.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsResponse'\n              example:\n                apiVersion: \"v2\"\n                metrics:\n                  memAlloc: 877192\n                  memFrees: 2248915\n                  memLiveObjects: 6522\n                  memMallocs: 2255437\n                  memSys: 72876280\n                  memTotalAlloc: 203821192\n                  cpuBusyAvg: 2.2521221920656003\n        '500':\n          description: \"Interval Server Error\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /ping:\n    get:\n      summary: \"A simple 'ping' endpoint that can be used as a service healthcheck\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PingResponse'\n              example:\n                apiVersion: \"v2\"\n                timestamp: \"Mon, 02 Jan 2006 15:04:05 MST\"\n        '500':\n          description: \"Interval Server Error\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /version:\n    get:\n      summary: \"A simple 'version' endpoint that will return the current version of the service\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VersionResponse'\n              example:\n                apiVersion: \"v2\"\n                version: \"2.0.0-dev.13\"\n        '500':\n          description: \"Interval Server Error\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'",
			"canonicalURL": "/github.com/edgexfoundry/edgex-go@e2bcede5a0d4e7e9b0fcf2d4a4892af33f93e0b1/-/blob/openapi/v2/support-scheduler.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/edgexfoundry/edgex-go/blob/e2bcede5a0d4e7e9b0fcf2d4a4892af33f93e0b1/openapi/v2/support-scheduler.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/interval\": post: responses: 207: contents: application/json: generate schema: item: anyOf: collect variants: IntervalPostMultiStatusItem: sum types with same names not implemented",
	"NotImplemented": [
		"complex anyOf",
		"sum types with same names"
	]
}