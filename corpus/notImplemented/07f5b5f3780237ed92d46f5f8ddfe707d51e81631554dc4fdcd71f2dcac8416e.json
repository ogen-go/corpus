{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/factset/enterprise-sdk"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "code/java/CompanyLogoAPIforDigitalPortals/v2/api/openapi.yaml",
			"byteSize": 12653,
			"content": "openapi: 3.0.1\ninfo:\n  title: Prime Developer Trial\n  version: v1\nservers:\n- url: //api.factset.com/wealth/v1\nsecurity:\n- FactSetApiKey: []\n- FactSetOAuth2: []\ntags:\n- description: company endpoints\n  name: company\npaths:\n  /company/logo/getByInstrument:\n    get:\n      description: URLs of transparent company logos in different sizes. A small square\n        logo is 31x31 pixels. A small rectangular logo has a maximum width of 88 pixels\n        and a maximum height of 31 pixels. A medium or large logo has the size of\n        the small logo scaled up by 200% and 300% respectively. A vector logo can\n        be rendered at any size.\n      operationId: get/company/logo/getByInstrument\n      parameters:\n      - description: Identifier of an instrument.\n        in: query\n        name: id\n        required: true\n        schema:\n          format: id64\n          type: string\n          x-positive: true\n        x-positive: true\n      - description: Limit the attributes returned in the response to the specified\n          set.\n        explode: false\n        in: query\n        name: _attributes\n        schema:\n          items:\n            maxLength: 100\n            type: string\n          maxItems: 50\n          type: array\n          uniqueItems: true\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200'\n          description: Successful Response\n      summary: URLs of company logos.\n      tags:\n      - company\n      x-supportsOffsetBasedPaging: false\n      x-supportsOffsetBasedPagingWithoutTotal: false\n      x-supportsCursorBasedPaging: false\n      x-supportsCursorBasedPagingWithoutTotal: false\n      x-supportsPush: false\n      x-requiresUser: false\n      x-requiresInternalClient: false\n      x-disallowUser: false\n      x-no-merge: false\n      x-maxSortParameterCount: 10\n      x-supportsPermissionDeniedResponse: false\n      x-accepts: application/json\ncomponents:\n  responses:\n    ErrorResponse:\n      content:\n        application/json:\n          schema:\n            properties:\n              meta:\n                $ref: '#/components/schemas/ErrorMetaObject'\n              errors:\n                $ref: '#/components/schemas/ErrorObject'\n            type: object\n      description: Generic error response for all errors (400 ... 599 error codes)\n  schemas:\n    ErrorMetaObject:\n      properties:\n        status:\n          $ref: '#/components/schemas/StatusObject'\n      type: object\n    ErrorObject:\n      description: The errors member contains additional information about a failed\n        request.\n      items:\n        properties:\n          details:\n            description: A human-readable, unstructured explanation specific to this\n              occurrence of the failure.\n            type: string\n          encryptedDetails:\n            description: Base64-encoded, internal details about the error, in addition\n              to \"details\".\n            type: string\n          type:\n            description: Internal error type of the Foundation API protocol.\n            format: int32\n            type: number\n          attribute:\n            description: For a validation error, a reference to the request parameter\n              that failed validation; otherwise, an empty array.\n            items:\n              properties:\n                name:\n                  description: Element of the path denoting the request parameter.\n                  type: string\n                index:\n                  description: If the attribute \"name\" designates an array, index\n                    of the array element; otherwise the special value -1.\n                  format: int32\n                  type: number\n              type: object\n              x-property-sort:\n              - name\n              - index\n            type: array\n        type: object\n        x-property-sort:\n        - detail\n        - encryptedDetails\n        - type\n        - attribute\n      type: array\n    AttributesMember:\n      description: Limit the attributes returned in the response to the specified\n        set.\n      items:\n        maxLength: 100\n        type: string\n      maxItems: 50\n      type: array\n      uniqueItems: true\n    LanguageMember:\n      description: ISO 639-1 code of the language.\n      exclusiveMaximum: false\n      exclusiveMinimum: false\n      format: isoLanguage\n      maxLength: 2\n      minLength: 2\n      type: string\n    StatusObject:\n      description: The status member contains the status code of the response.\n      example:\n        code: 0.8008281904610115\n      properties:\n        code:\n          description: The HTTP status code of the response, mirroring the code from\n            the Status-Line of the HTTP response message (see [RFC2616] section 6.1).\n          format: int32\n          type: number\n      required:\n      - code\n      type: object\n    CursorBasedPaginationOutputObject:\n      description: Pagination attributes for the cursor-based pagination strategy.\n      properties:\n        total:\n          description: Total number of entries in the result set.\n          format: int32\n          type: number\n        isEstimatedTotal:\n          description: Flag indicating that the value of \"total\" is estimated.\n          type: boolean\n        next:\n          description: Cursor position to use in the attribute `pagination.cursor`\n            to retrieve the next page of results, if any, otherwise null.\n          type: string\n        previous:\n          description: Cursor position to use in the attribute `pagination.cursor`\n            to retrieve the previous page of results, if any, otherwise null.\n          type: string\n      required:\n      - isEstimatedTotal\n      - next\n      - previous\n      - total\n      type: object\n      x-property-sort:\n      - total\n      - isEstimatedTotal\n      - next\n      - previous\n    CursorBasedPaginationOutputObjectWithoutTotal:\n      description: Pagination attributes for the cursor-based pagination strategy;\n        a total element count is not supported.\n      properties:\n        next:\n          description: Cursor position to use in the attribute `pagination.cursor`\n            to retrieve the next page of results, if any, otherwise null.\n          type: string\n        previous:\n          description: Cursor position to use in the attribute `pagination.cursor`\n            to retrieve the previous page of results, if any, otherwise null.\n          type: string\n      required:\n      - next\n      - previous\n      type: object\n      x-property-sort:\n      - next\n      - previous\n    OffsetBasedPaginationOutputObject:\n      description: Pagination attributes for the offset-based pagination strategy.\n      properties:\n        total:\n          description: Total number of entries in the result set.\n          format: int32\n          type: number\n        isEstimatedTotal:\n          description: Flag indicating that the value of \"total\" is estimated.\n          type: boolean\n      required:\n      - isEstimatedTotal\n      - total\n      type: object\n      x-property-sort:\n      - total\n      - isEstimatedTotal\n    OffsetBasedPaginationOutputObjectWithoutTotal:\n      description: Pagination attributes for the offset-based pagination strategy;\n        a total element count is not supported.\n      properties:\n        hasNext:\n          description: Flag indicating that a subsequent request with the same parameters,\n            except that the parameter `pagination.offset` is incremented by `pagination.limit`,\n            would yield additional results.\n          type: boolean\n      required:\n      - hasNext\n      type: object\n      x-property-sort:\n      - hasNext\n    PartialOutputObject:\n      description: Object denoting that the endpoint response is possibly incomplete.\n      properties:\n        isPartial:\n          description: Flag indicating that the response is a possibly incomplete\n            array or an object containing a possibly incomplete array, due to hitting\n            a processing time limit. If `true`, some matching results might be missing\n            from the array, or elements for matching results might be incorrectly\n            included (for example, when priority sorting would have removed the element).\n            Depending on the use case, such a response may be unsuitable.\n          type: boolean\n      required:\n      - isPartial\n      type: object\n      x-property-sort:\n      - isPartial\n    inline_response_200_data_small:\n      description: Small logo.\n      example:\n        mimeType: mimeType\n        url: http://example.com/aeiou\n      properties:\n        url:\n          description: URL of the logo.\n          format: url\n          type: string\n        mimeType:\n          description: MIME type of the logo.\n          type: string\n      type: object\n      x-property-sort:\n      - url\n      - mimeType\n    inline_response_200_data_medium:\n      description: Medium logo.\n      example:\n        mimeType: mimeType\n        url: http://example.com/aeiou\n      properties:\n        url:\n          description: URL of the logo.\n          format: url\n          type: string\n        mimeType:\n          description: MIME type of the logo.\n          type: string\n      type: object\n      x-property-sort:\n      - url\n      - mimeType\n    inline_response_200_data_large:\n      description: Large logo.\n      example:\n        mimeType: mimeType\n        url: http://example.com/aeiou\n      properties:\n        url:\n          description: URL of the logo.\n          format: url\n          type: string\n        mimeType:\n          description: MIME type of the logo.\n          type: string\n      type: object\n      x-property-sort:\n      - url\n      - mimeType\n    inline_response_200_data_vector:\n      description: Vector logo.\n      example:\n        mimeType: mimeType\n        url: http://example.com/aeiou\n      properties:\n        url:\n          description: URL of the logo.\n          format: url\n          type: string\n        mimeType:\n          description: MIME type of the logo.\n          type: string\n      type: object\n      x-property-sort:\n      - url\n      - mimeType\n    inline_response_200_data:\n      description: URLs of company logos. All URLs are publicly available via HTTPS\n        and hosted by FactSet with a top-level domain `mdgms.com`. For possible values\n        of the attribute `mimeType`, see endpoint `/basic/media/type/list` with parameter\n        `filter.ids=1 (image)`.\n      example:\n        small:\n          mimeType: mimeType\n          url: http://example.com/aeiou\n        large:\n          mimeType: mimeType\n          url: http://example.com/aeiou\n        vector:\n          mimeType: mimeType\n          url: http://example.com/aeiou\n        medium:\n          mimeType: mimeType\n          url: http://example.com/aeiou\n      properties:\n        small:\n          $ref: '#/components/schemas/inline_response_200_data_small'\n        medium:\n          $ref: '#/components/schemas/inline_response_200_data_medium'\n        large:\n          $ref: '#/components/schemas/inline_response_200_data_large'\n        vector:\n          $ref: '#/components/schemas/inline_response_200_data_vector'\n      type: object\n      x-property-sort:\n      - small\n      - medium\n      - large\n      - vector\n    inline_response_200_meta:\n      description: The meta member contains the meta information of the response.\n      example:\n        status:\n          code: 0.8008281904610115\n      properties:\n        status:\n          $ref: '#/components/schemas/StatusObject'\n      type: object\n      x-property-sort:\n      - status\n    inline_response_200:\n      example:\n        data:\n          small:\n            mimeType: mimeType\n            url: http://example.com/aeiou\n          large:\n            mimeType: mimeType\n            url: http://example.com/aeiou\n          vector:\n            mimeType: mimeType\n            url: http://example.com/aeiou\n          medium:\n            mimeType: mimeType\n            url: http://example.com/aeiou\n        meta:\n          status:\n            code: 0.8008281904610115\n      properties:\n        data:\n          $ref: '#/components/schemas/inline_response_200_data'\n        meta:\n          $ref: '#/components/schemas/inline_response_200_meta'\n      type: object\n  securitySchemes:\n    FactSetApiKey:\n      scheme: basic\n      type: http\n    FactSetOAuth2:\n      flows:\n        clientCredentials:\n          scopes: {}\n          tokenUrl: https://auth.factset.com/as/token.oauth2\n      type: oauth2\nx-interface-version: 1\nx-documenter-version: 5.38.0\nx-api-version: 2.9.0\nx-original-swagger-version: \"2.0\"\n\n",
			"canonicalURL": "/github.com/factset/enterprise-sdk@dcf75a02daedc726c313912a349d2863114bc92c/-/blob/code/java/CompanyLogoAPIforDigitalPortals/v2/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/factset/enterprise-sdk/blob/dcf75a02daedc726c313912a349d2863114bc92c/code/java/CompanyLogoAPIforDigitalPortals/v2/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/company/logo/getByInstrument\": get: security: security \"FactSetOAuth2\" (index 1): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}