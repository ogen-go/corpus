{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/fungenerators.com/random-facts/1.5/openapi.yaml",
			"byteSize": 22826,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.fungenerators.com\ninfo:\n  contact:\n    name: Fun Generators\n    url: http://fungenerators.com/\n  description: |\n    A full featured Facts API. REST access with json/xml/jsonp result support. On this day birth and death support, random fact, keyword search support etc. Below is the documentation for the Random Facts API calls. You can try them out right here. [Click here to subscribe](http://fungenerators.com/api/facts/)\n  termsOfService: https://fungenerators.com/terms\n  title: Facts API\n  version: \"1.5\"\n  x-apisguru-categories:\n    - text\n  x-origin:\n    - format: swagger\n      url: https://fungenerators.com/yaml/facts.yaml\n      version: \"2.0\"\n  x-providerName: fungenerators.com\n  x-serviceName: random-facts\ntags:\n  - description: Get fact of the day on various categories. This is refreshed daily.\n    externalDocs:\n      description: Find out more\n      url: http://fungenerators.com/api/facts#fact-of-the-day\n    name: Fact of the day\n  - description: Get a random interesting fact about a number.\n    externalDocs:\n      description: Find out more\n      url: http://fungenerators.com/api/facts#number\n    name: Number Facts\n  - description: Get random facts based on category and other criteria.\n    externalDocs:\n      description: Find out more\n      url: http://fungenerators.com/api/facts#number\n    name: Random Facts\n  - description: On this day historical events for birth, death and other events.\n    externalDocs:\n      description: Find out more\n      url: http://fungenerators.com/api/facts#number\n    name: On this day\n  - description: Store and manage your own Facts online\n    externalDocs:\n      description: Find out more\n      url: http://fungenerators.com/api/facts#private\n    name: Private Facts\npaths:\n  /fact:\n    delete:\n      description: Delete a Fact entry identified by the id.\n      parameters:\n        - description: Fact ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"success\": {\n                            \"total\": 1\n                        },\n                        \"contents\": {\n                            \"mesg\": \"Fact 62D6iKM9GSlJxK5nrMf9XwrE is deleted\"\n                        }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - Private Facts\n    get:\n      description: Get a Fact belonging to the id.\n      parameters:\n        - description: ID of the fact to fetch\n          in: query\n          name: id\n          required: false\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\":{\"total\":1},\n                      \"contents\":{\n                        \"fact\":\"There are more than 1,100 known tributaries flowing into the Amazon River. Tributaries are sources of water such as a small river, stream  or other water flow that reaches the river.\",\n                        \"id\":\"LCN5KlSn6BMpcm3ruXhfGweF\",\n                        \"category\":null,\n                        \"subcategory\":null\n                        \n                      }\n\n                      \n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - Random Facts\n        - Private Facts\n    put:\n      description: Add a Fact entry to the database (private collection).\n      parameters:\n        - description: Fact Text\n          in: query\n          name: fact\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Category of the fact\n          in: query\n          name: category\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Sub Category of the fact\n          in: query\n          name: subcategory\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Tags\n          in: query\n          name: tags\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"success\": {\n                            \"total\": 1\n                        },\n                        \"contents\": {\n                            \"id\": \"62D6iKM9GSlJxK5nrMf9XwrE\"\n                        }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - Private Facts\n  /fact/categories:\n    get:\n      description: Get a random Fact.\n      parameters:\n        - description: start\n          in: query\n          name: start\n          required: false\n          schema:\n            format: integer\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"success\": {\n                            \"total\": 1\n                        },\n                        \"contents\": [\n                            {\n                                \"id\": \"VO_foToeaTPvaDn_utYcOweF\",\n                                \"question\": \"What is the unit of currency in the United States of America\",\n                                \"category\": \"usa\",\n                                \"category_name\": \"USA\",\n                                \"answer\": [\n                                    \"Dollar\"\n                                ]\n                            }\n                        ]\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - Random Facts\n  /fact/fod:\n    get:\n      description: Get fact of the day for the given category.\n      parameters:\n        - description: Category to get the fact of the day from. Must be one from the list returned from /fact/fod/categories\n          in: query\n          name: category\n          required: false\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": {\n                        \"facts\": [\n                          {\n                            \"description\": \"Science Fact of the day\",\n                            \"language\": \"en\",\n                            \"background\": \"\",\n                            \"category\": \"Science\",\n                            \"date\": \"2019-10-09\",\n                            \"fact\": \"In 1932 it was discovered that astronomical objects emit radio waves, and a system has been developed that makes it possible to create pictures from the radio waves. Astronomers use radio telescopes to study the radio waves being emitted from planets, dust, stars, gas clouds, comets, and other galaxies.\",\n                            \"subcategory\": \"Radio Waves\"\n                          }\n                        ],\n                        \"copyright\": \"2019-22 https://fungenerators.com\"\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }                                        \n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - Fact of the day\n  /fact/fod/categories:\n    get:\n      description: Get the list of supported fact of the day categories.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 2\n                      },\n                      \"contents\": {\n                        \"categories\": [\n                          {\n                            \"name\": \"random\",\n                            \"description\": \"Random Fact of the day\",\n                            \"language\": \"en\",\n                            \"background\": \"\"\n                          },\n                          {\n                            \"name\": \"science\",\n                            \"description\": \"Science Fact of the day\",\n                            \"language\": \"en\",\n                            \"background\": \"\"\n                          }\n                        ],\n                        \"copyright\": \"2019-22 https://fungenerators.com\"\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - Fact of the day\n  /fact/numbers:\n    get:\n      description: Get a random fact about a number\n      parameters:\n        - description: Number value\n          in: query\n          name: number\n          required: true\n          schema:\n            format: integer\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"copyright\": \"2019-22 https://fungenerators.com\",\n                      \"contents\": {\n                        \"number\": 11,\n                        \"fact\": \"11 is the largest known multiplicative persistence.\"\n                      }\n                    }\n          description: 200 Success response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }                                        \n          description: 401 Unauthorized response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - Number Facts\n  /fact/onthisday/born:\n    get:\n      description: Returns a random ( famous/ relatively famous ) person born on a given day and month\n      parameters:\n        - description: Optional month (1-12). Defaults to current month\n          in: query\n          name: month\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Optional day of the month (1- 28/30/31 based on the month). Defaults to current day of the month.\n          in: query\n          name: day\n          required: false\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": [\n                        {\n                          \"name\": \"Edward R. Bradley\",\n                          \"occupation\": \"American businessman and horse owner (1st to own 4 Kentucky Derby winners)\",\n                          \"notable\": null,\n                          \"born\": \"1859-12-12\",\n                          \"died\": \"1946-08-15\"\n                        }\n                      ]\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - On this day\n  /fact/onthisday/died:\n    get:\n      description: Returns a random ( famous/ relatively famous ) person died on a given day and month\n      parameters:\n        - description: Optional month (1-12). Defaults to current month\n          in: query\n          name: month\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Optional day of the month (1- 28/30/31 based on the month). Defaults to current day of the month.\n          in: query\n          name: day\n          required: false\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": [\n                        {\n                          \"name\": \"Edward R. Bradley\",\n                          \"occupation\": \"American businessman and horse owner (1st to own 4 Kentucky Derby winners)\",\n                          \"notable\": null,\n                          \"born\": \"1859-12-12\",\n                          \"died\": \"1946-08-15\"\n                        }\n                      ]\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - On this day\n  /fact/onthisday/event:\n    get:\n      description: Returns a random ( famous/ relatively famous ) historic event on a given day and month\n      parameters:\n        - description: Optional month (1-12). Defaults to current month\n          in: query\n          name: month\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Optional day of the month (1- 28/30/31 based on the month). Defaults to current day of the month.\n          in: query\n          name: day\n          required: false\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": {\n                        \"id\": \"KVlPpVL119DtLFtphgOxqQeF\",\n                        \"day\": \"26\",\n                        \"month\": \"8\",\n                        \"year\": \"1883\",\n                        \"date\": \"1883-8-26\",\n                        \"event_type\": \"event\",\n                        \"event\": \"The Indonesian island of Krakatoa erupts in the largest explosion recorded in history, heard 2,200 miles away in Madagascar. The resulting destruction sends volcanic ash up 50 miles into the atmosphere and kills almost 36,000 people–both on the island itself and from the resulting 131-foot tidal waves that obliterate 163 villages on the shores of nearby Java and Sumatra.\"\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - On this day\n  /fact/random:\n    get:\n      description: Get a random Fact for a given category(optional) and subcategory(optional).\n      parameters:\n        - description: Category to get the fact from\n          in: query\n          name: category\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Sub Category to get the fact from\n          in: query\n          name: subcategory\n          required: false\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\":{\"total\":1},\n                      \"contents\":{\n                        \"fact\":\"There are more than 1,100 known tributaries flowing into the Amazon River. Tributaries are sources of water such as a small river, stream  or other water flow that reaches the river.\",\n                        \"id\":\"LCN5KlSn6BMpcm3ruXhfGweF\",\n                        \"category\":null,\n                        \"subcategory\":null\n                        \n                      }\n\n                      \n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }                    \n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - Random Facts\n  /fact/search:\n    get:\n      description: Search for random Fact which has the text in the query, for a given category(optional) and subcategory(optional).\n      parameters:\n        - description: Text to search for in the facts\n          in: query\n          name: query\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Category to get the fact from\n          in: query\n          name: category\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Sub Category to get the fact from\n          in: query\n          name: subcategory\n          required: false\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\":{\"total\":1},\n                      \"contents\":{\n                        \"fact\":\"There are more than 1,100 known tributaries flowing into the Amazon River. Tributaries are sources of water such as a small river, stream  or other water flow that reaches the river.\",\n                        \"id\":\"LCN5KlSn6BMpcm3ruXhfGweF\",\n                        \"category\": \"Rivers\",\n                        \"subcategory\": \"Amazon River\"\n                        \n                      }\n\n                      \n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }                    \n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - Random Facts\ncomponents:\n  securitySchemes:\n    X-Fungenerators-Api-Secret:\n      in: header\n      name: X-Fungenerators-Api-Secret\n      type: apiKey\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/fungenerators.com/random-facts/1.5/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/fungenerators.com/random-facts/1.5/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/fact/fod/categories\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}