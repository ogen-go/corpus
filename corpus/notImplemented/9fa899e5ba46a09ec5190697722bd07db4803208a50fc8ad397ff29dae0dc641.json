{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/udevbe/greenfield"
		},
		"file": {
			"name": "compositor-proxy-api.yaml",
			"size": 0,
			"path": "compositor-module/compositor-proxy-api.yaml",
			"byteSize": 8617,
			"content": "openapi: 3.0.3\ninfo:\n  title: Compositor Proxy REST API\n  description: A set of REST API endpoints exposed by the Compositor Proxy.\n  version: 1.0.0\n\nservers:\n  - url: http://localhost:8080\n\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-Compositor-Session-Id\n  responses:\n    UnauthorizedError:\n      description: Authentication information is missing or invalid\n      content:\n        text/plain:\n          schema:\n            type: string\n  schemas:\n    WebFD:\n      description: \u003e\n        This type carefully matches the WebFD type as defined in the [Westfield Wayland protocol generator](https://github.com/udevbe/westfield).\n        It narrows the 'handle' property of the original WebFD type -which has type 'unknown'- to an 'integer' as to mimic a native file descriptor.\n      type: object\n      required:\n        - handle\n        - type\n        - host\n      properties:\n        handle:\n          description: The native FD\n          example: 12\n          type: integer\n          format: int32\n          minimum: 0\n          readOnly: true\n        type:\n          description: \u003e\n            The file type of the native FD. 'unknown' type means that FD was created by an external application, in which\n            case the 'type' should be manually updated to a more concrete type before doing any operations on the WebFD.\n          type: string\n          enum:\n            - pipe-read\n            - pipe-write\n            - shm\n            - unknown\n          readOnly: false\n        host:\n          description: The url where this WebFD originated from and where it can be accessed e.g. for reading.\n          example: 'https://proxy-endpoint.com:8081'\n          type: string\n          format: uri\n          pattern: '^(https?)://'\n          readOnly: true\n\npaths:\n  /mkfifo:\n    post:\n      tags:\n        - webfs\n      summary: Creates a new pipe and returns a read+write WebFD pair.\n      operationId: mkfifo\n      responses:\n        201:\n          description: Pipe pair was succesfully created.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WebFD'\n                example:\n                  - fd: 8\n                    type: pipe-read\n                    location: https://some.proxy.com:8181\n                  - fd: 9\n                    type: pipe-write\n                    location: https://some.proxy.com:8181\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n  /mkstemp-mmap:\n    post:\n      tags:\n        - webfs\n      summary: Creates a tempororay file and returns a memory mapped WebFD of the uploaded data.\n      operationId: mkstempMmap\n      requestBody:\n        required: true\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n      responses:\n        201:\n          description: Data was succesfully uploaded and mapped to a shared memory file.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebFD'\n              example:\n                fd: 10\n                type: shm\n                location: https://some.proxy.com:8181\n        400:\n          description: Bad request. Bad or no content.\n          content:\n            text/plain:\n              schema:\n                type: string\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n  /webfd/{fd}:\n    delete:\n      tags:\n        - webfs\n      summary: close the native fd.\n      operationId: close\n      parameters:\n        - in: path\n          name: fd\n          description: the native fd\n          required: true\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n      responses:\n        200:\n          description: File descriptor closed succesfully.\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        400:\n          description: Bad request. FD must be an integer greater than or equal to zero.\n          content:\n            text/plain:\n              schema:\n                type: string\n        404:\n          description: FD not known.\n          content:\n            text/plain:\n              schema:\n                type: string\n        5XX:\n          description: Unexpected error.\n          content:\n            text/plain:\n              schema:\n                type: string\n    get:\n      tags:\n        - webfs\n      summary: Read a chunk from a WebFD.\n      operationId: read\n      parameters:\n        - in: path\n          name: fd\n          description: the native fd\n          required: true\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n          description: Read up to count bytes from file descriptor fd.\n      responses:\n        200:\n          description: Content sent succesfully.\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        400:\n          description: Bad request. FD and count must be an integer greater than or equal to zero.\n          content:\n            text/plain:\n              schema:\n                type: string\n        404:\n          description: FD not known.\n          content:\n            text/plain:\n              schema:\n                type: string\n        5XX:\n          description: Unexpected error.\n          content:\n            text/plain:\n              schema:\n                type: string\n  /webfd/{fd}/stream:\n    put:\n      tags:\n        - webfs\n      summary: Write and stream all data to a WebFD until EOF.\n      operationId: writeStream\n      parameters:\n        - in: path\n          name: fd\n          description: the native fd\n          required: true\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - in: query\n          name: chunkSize\n          required: false\n          schema:\n            type: integer\n          description: Hint to the receiving end to indicate what chunk size will be used to stream. Defaults to 64 kilobytes.\n      requestBody:\n        required: true\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n      responses:\n        200:\n          description: All content sent succesfully.\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        400:\n          description: Bad request. FD and chunkSize must be an integer greater than or equal to zero.\n          content:\n            text/plain:\n              schema:\n                type: string\n        404:\n          description: FD not known.\n          content:\n            text/plain:\n              schema:\n                type: string\n        5XX:\n          description: Unexpected error.\n          content:\n            text/plain:\n              schema:\n                type: string\n    get:\n      tags:\n        - webfs\n      summary: Read and stream all data from a WebFD until EOF.\n      operationId: readStream\n      parameters:\n        - in: path\n          name: fd\n          description: the native fd\n          required: true\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - in: query\n          name: chunkSize\n          required: false\n          schema:\n            type: integer\n          description: Stream data in chunks with a maximum size. Defaults to 64 kilobytes.\n      responses:\n        200:\n          description: All content read succesfully.\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        400:\n          description: Bad request. FD and chunkSize must be an integer greater than or equal to zero.\n          content:\n            text/plain:\n              schema:\n                type: string\n        404:\n          description: FD not known.\n          content:\n            text/plain:\n              schema:\n                type: string\n        5XX:\n          description: Unexpected error.\n          content:\n            text/plain:\n              schema:\n                type: string\n",
			"canonicalURL": "/github.com/udevbe/greenfield@6f5d30b74623e8ce2ff2b299b6cdad3d3ee68aa0/-/blob/compositor-module/compositor-proxy-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/udevbe/greenfield/blob/6f5d30b74623e8ce2ff2b299b6cdad3d3ee68aa0/compositor-module/compositor-proxy-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/webfd/{fd}/stream\": get: responses: HTTP code pattern not implemented",
	"NotImplemented": [
		"HTTP code pattern",
		"unsupported content types"
	]
}