{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cloudmesh/cloudmesh-openapi"
		},
		"file": {
			"name": "image.yaml",
			"size": 0,
			"path": "tests/image-analysis/image.yaml",
			"byteSize": 1288,
			"content": "openapi: 3.0.0\ninfo:\n  title: image\n  description: \"No description provided\"\n  version: \"1.0\"\nservers:\n  - url: http://localhost:8080/cloudmesh\n    description: \"No description provided\"\npaths:\n  /image/detect_text_aws:\n     get:\n      summary: \"Function that detects text from image using AWS Rekognition\"\n      description: \"None (Optional extended description in CommonMark or HTML)\"\n      operationId: image.detect_text_aws\n      \n      responses:\n        '200':\n          description: \"OK\"\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /image/detect_text_google:\n     get:\n      summary: \"Detects text in the file using Google Vision API.\"\n      description: \"None (Optional extended description in CommonMark or HTML)\"\n      operationId: image.detect_text_google\n      \n      responses:\n        '200':\n          description: \"OK\"\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /image/path_expand:\n     get:\n      summary: \"returns a string with expanded variable.\"\n      description: \"None (Optional extended description in CommonMark or HTML)\"\n      operationId: image.path_expand\n      \n      responses:\n        '204':\n          description: \"This operation returns no response.\"",
			"canonicalURL": "/github.com/cloudmesh/cloudmesh-openapi@c866c4cbdad3adfdf3fe31591906ced8d71352ef/-/blob/tests/image-analysis/image.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cloudmesh/cloudmesh-openapi/blob/c866c4cbdad3adfdf3fe31591906ced8d71352ef/tests/image-analysis/image.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/image/detect_text_aws\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}