{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nutes-uepb/template-base-ts"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "example/activity-tracking/src/ui/swagger/api.yaml",
			"byteSize": 34523,
			"content": "openapi: 3.0.0\ninfo:\n  version: 'v1'\n  title: 'Activity Tracking Service - API Reference'\n  description: \u003e-\n    This is the **Activity Tracking Service** RESTful API documentation implemented\n    following the [template-base-ts](https://github.com/LIBE-NUTES/template-base-ts).\n  contact:\n    email: douglas.rafael@nutes.uepb.edu.br\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n\nservers:\n- description: Localhost\n  url: http://127.0.0.1/api/v1\n- description: SwaggerHub API Auto Mocking\n  url: https://virtserver.swaggerhub.com/douglas.rafael/template-base-typescript/v1\ntags:\n- name: users\n  description: Operations for the User resource.\n- name: users.activities\n  description: Operations for user Activity resource.\n\npaths:\n  /users:\n    get:\n      tags:\n      - users\n      summary: Recover users.\n      description: \u003e-\n        Returns list with users. The query supports Field Selection, Paging,\n        Sorting, and Filtering.\n      operationId: getAllUsers\n      parameters:\n      - $ref: '#/components/parameters/fieldsParam'\n      - $ref: '#/components/parameters/pageParam'\n      - $ref: '#/components/parameters/limitParam'\n      - $ref: '#/components/parameters/sortParam'\n      - $ref: '#/components/parameters/filterParam'\n      responses:\n        '200':\n          description: List of users.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/User'\n        '401':\n          description: Authentication failed due to invalid authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: User does not have permission to get users list.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: \u003e-\n            Specified resource does not exist. Usually when the URI is incorrect\n            or the resource is not found, or even no longer exists.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '406':\n          description: \u003e-\n            The server is not implementing the media type requested by the client\n            for the application response. Only application/json is currently\n            accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: The rate limit for requests exceeded.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: \u003e-\n            An internal server error occurred. Although the client appears to\n            provide a correct request, the server encountered an unexpected\n            condition that prevented it from responding to the request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - users\n      summary: Register user.\n      description: Register a new user.\n      operationId: addUser\n      responses:\n        '201':\n          description: User successfully registered.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '400':\n          description: \u003e-\n            Request can not be met, syntactically incorrect or violates the\n            schema. Normally it occurs due to validation issues, such as\n            fields that are expected in the request body and not passed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication failed due to invalid authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: User does not have permission to register users.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: \u003e-\n            Specified resource does not exist. Usually when the URI is incorrect\n            or the resource is not found, or even no longer exists.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '406':\n          description: \u003e-\n            The server is not implementing the media type requested by the client\n            for the application response. Only application/json is currently\n            accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '415':\n          description: \u003e-\n            The server does not support the requested payload format. Only\n            application/json is accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: The rate limit for requests exceeded.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: \u003e-\n            An internal server error occurred. Although the client appears to\n            provide a correct request, the server encountered an unexpected\n            condition that prevented it from responding to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        description: Data of the user to be saved.\n        required: true\n  '/users/{user_id}':\n    get:\n      tags:\n      - users\n      summary: Recover user data.\n      description: Recover the user data.\n      operationId: getUserById\n      parameters:\n      - name: user_id\n        in: path\n        required: true\n        description: User ID\n        example: 5accb6215ba48413e81e7853e\n        schema:\n          type: string\n      - $ref: '#/components/parameters/fieldsParam'\n      responses:\n        '200':\n          description: Requested user data.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '401':\n          description: Authentication failed due to invalid authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: User does not have permission to get user data.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: \u003e-\n            Specified resource does not exist. Usually when the URI is incorrect or the\n            resource is not found, or even no longer exists.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '406':\n          description: \u003e-\n            The server is not implementing the media type requested by the client for\n            the application response. Only application/json is currently accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: The rate limit for requests exceeded.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: \u003e-\n            An internal server error occurred. Although the client appears to provide a\n            correct request, the server encountered an unexpected condition that\n            prevented it from responding to the request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n      - users\n      summary: Update user data.\n      description: Update the user data.\n      operationId: updateUser\n      parameters:\n      - name: user_id\n        in: path\n        required: true\n        description: User ID\n        example: 5accb6215ba48413e81e7853e\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Updated user data.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '401':\n          description: Authentication failed due to invalid authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: User does not have permission to update user data.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: \u003e-\n            Specified resource does not exist. Usually when the URI is incorrect\n            or the resource is not found, or even no longer exists.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '406':\n          description: \u003e-\n            The server is not implementing the media type requested by the client\n            for the application response. Only application/json is currently\n            accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: -\u003e\n            Conflicts have probably occurred with data that can not be duplicated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '415':\n          description: \u003e-\n            The server does not support the requested payload format. Only\n            application/json is accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: The rate limit for requests exceeded.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: \u003e-\n            An internal server error occurred. Although the client appears to\n            provide a correct request, the server encountered an unexpected\n            condition that prevented it from responding to the request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        description: Data of the user to be updated.\n        required: true\n    delete:\n      tags:\n      - users\n      summary: Delete user data.\n      description: Delete the user data.\n      operationId: deleteUserById\n      parameters:\n      - name: user_id\n        in: path\n        required: true\n        description: User ID\n        example: 5accb6215ba48413e81e7853e\n        schema:\n          type: string\n      responses:\n        '204':\n          description: \u003e-\n            Operation performed successfully. There is no data to be returned\n        '401':\n          description: Authentication failed due to invalid authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: \"User does not have permission to delete activities.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: \u003e-\n            Specified resource does not exist. Usually when the URI is incorrect or the\n            resource is not found, or even no longer exists.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '406':\n          description: \u003e-\n            The server is not implementing the media type requested by the client for\n            the application response. Only application/json is currently accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: The rate limit for requests exceeded.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: \u003e-\n            An internal server error occurred. Although the client appears to provide a\n            correct request, the server encountered an unexpected condition that\n            prevented it from responding to the request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /users/{user_id}/activities:\n    get:\n      tags:\n      - users.activities\n      summary: Recover activities.\n      operationId: getAllActivities\n      description: Returns list with activities. The query supports Field Selection, Paging, Sorting, and Filtering.\n      parameters:\n      - in: path\n        name: user_id\n        required: true\n        description: Id of user.\n        example: 5a62be07d6f33400146c9b61\n        schema:\n          type: string\n      - $ref: '#/components/parameters/fieldsParam'\n      - $ref: '#/components/parameters/pageParam'\n      - $ref: '#/components/parameters/limitParam'\n      - $ref: '#/components/parameters/sortParam'\n      - $ref: '#/components/parameters/filterParam'\n      responses:\n        '200':\n          description: Successful requisition.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Activity'\n        '401':\n          description: Authentication failed due to invalid authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: User does not have permission to get activities.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: \u003e-\n            Specified resource does not exist. Usually when the URI is incorrect\n            or the resource is not found, or even no longer exists.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '406':\n          description: \u003e-\n            The server is not implementing the media type requested by the\n            client for the application response. Only application/json is\n            currently accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: The rate limit for requests exceeded.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: \u003e-\n            An internal server error occurred. Although the client appears to\n            provide a correct request, the server encountered an unexpected\n            condition that prevented it from responding to the request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - users.activities\n      summary: Register activity.\n      operationId: saveActivity\n      description: Register a new activity and associate it to an user.\n      parameters:\n      - in: path\n        name: user_id\n        required: true\n        description: Id of user.\n        example: 5a62be07d6f33400146c9b61\n        schema:\n          type: string\n      responses:\n        '201':\n          description: Activity logged sucessfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Activity'\n        '400':\n          description: \u003e-\n            Request can not be met, syntactically incorrect or violates the\n            schema. Normally it occurs due to validation issues, such as fields\n            that are expected in the request body and not passed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication failed due to invalid authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: User does not have permission to register activities.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: \u003e-\n            Specified resource does not exist. Usually when the URI is incorrect\n            or the resource is not found, or even no longer exists.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '406':\n          description: \u003e-\n            The server is not implementing the media type requested by the\n            client for the application response. Only application/json is\n            currently accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '415':\n          description: \u003e-\n            The server does not support the requested payload format. Only\n            application / json is accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: The rate limit for requests exceeded.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: \u003e-\n            An internal server error occurred. Although the client appears to\n            provide a correct request, the server encountered an unexpected\n            condition that prevented it from responding to the request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Activity'\n        description: Activity to be insert\n        required: true\n  /users/{user_id}/activities/{activity_id}:\n    get:\n      tags:\n      - users.activities\n      summary: Recover activity data.\n      operationId: getActivitiyById\n      description: Recover the activity data associated with an user.\n      parameters:\n      - in: path\n        name: user_id\n        required: true\n        description: Id of user.\n        example: 5a62be07d6f33400146c9b61\n        schema:\n          type: string\n      - in: path\n        name: activity_id\n        required: true\n        description: Id of activity.\n        example: 5a62be07d6e34500146d9c544\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Successful requisition.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Activity'\n        '401':\n          description: Authentication failed due to invalid authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: User does not have permission to get activities.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: \u003e-\n            Specified resource does not exist. Usually when the URI is incorrect\n            or the resource is not found, or even no longer exists.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '406':\n          description: \u003e-\n            The server is not implementing the media type requested by the\n            client for the application response. Only application/json is\n            currently accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: The rate limit for requests exceeded.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: \u003e-\n            An internal server error occurred. Although the client appears to\n            provide a correct request, the server encountered an unexpected\n            condition that prevented it from responding to the request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n      - users.activities\n      summary: Update activity data.\n      description: Update the activity data.\n      operationId: updateActivity\n      parameters:\n      - in: path\n        name: user_id\n        required: true\n        description: Id of user.\n        example: 5a62be07d6f33400146c9b61\n        schema:\n          type: string\n      - in: path\n        name: activity_id\n        required: true\n        description: Id of activity.\n        example: 5a62be07d6e34500146d9c544\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Updated activity data.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Activity'\n        '401':\n          description: Authentication failed due to invalid authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: User does not have permission to update activity data.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: \u003e-\n            Specified resource does not exist. Usually when the URI is incorrect\n            or the resource is not found, or even no longer exists.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '406':\n          description: \u003e-\n            The server is not implementing the media type requested by the client\n            for the application response. Only application/json is currently\n            accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: -\u003e\n            Conflicts have probably occurred with data that can not be duplicated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '415':\n          description: \u003e-\n            The server does not support the requested payload format. Only\n            application/json is accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: The rate limit for requests exceeded.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: \u003e-\n            An internal server error occurred. Although the client appears to\n            provide a correct request, the server encountered an unexpected\n            condition that prevented it from responding to the request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Activity'\n        description: Data of the activity to be updated.\n        required: true\n    delete:\n      tags:\n      - users.activities\n      summary: Delete activity data.\n      description: Delete the activity data.\n      operationId: deleteActivity\n      parameters:\n      - in: path\n        name: user_id\n        required: true\n        description: Id of user.\n        example: 5a62be07d6f33400146c9b61\n        schema:\n          type: string\n      - in: path\n        name: activity_id\n        required: true\n        description: Id of activity.\n        example: 5a62be07d6e34500146d9c544\n        schema:\n          type: string\n      responses:\n        '204':\n          description: Operation performed successfully. There is no data to be returned.\n        '401':\n          description: Authentication failed due to invalid authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: User does not have permission to delete activities.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: \u003e-\n            Specified resource does not exist. Usually when the URI is incorrect\n            or the resource is not found, or even no longer exists.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '406':\n          description: \u003e-\n            The server is not implementing the media type requested by the\n            client for the application response. Only application/json is\n            currently accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: The rate limit for requests exceeded.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: \u003e-\n            An internal server error occurred. Although the client appears to\n            provide a correct request, the server encountered an unexpected\n            condition that prevented it from responding to the request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  schemas:\n    User:\n      type: object\n      description: Representation of resource User.\n      required:\n      - name\n      - email\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: Automatically generated key field.\n          example: 5accb6215ba48413e81e7853e\n          readOnly: true\n        name:\n          type: string\n          description: Full name of user.\n          example: Lorem Ipsum\n        email:\n          type: string\n          description: User email.\n          example: loremipsum@mail.com\n        created_at:\n          type: string\n          format: date-time\n          description: \u003e-\n            Date and hour according to the UTC pattern, automatically generated\n            on moment that resource is saved on server.\n          readOnly: true\n    Activity:\n      type: object\n      required:\n      - name\n      - start_time\n      - duration\n      - intensity_level\n      - calories\n      - steps\n      properties:\n        id:\n          readOnly: true\n          type: string\n          format: uuid\n          description: Automatically generated key field.\n          example: 5a62be07de34500146d9c544\n        name:\n          type: string\n          description: Name of activity.\n          example: walk\n        start_time:\n          type: string\n          format: date-time\n          description: Activity start time according to the UTC.\n          example: '2018-08-07T08:25:00.28Z'\n        end_time:\n          type: string\n          format: date-time\n          description: Activity end time according to the UTC.\n          example: '2018-08-07T09:25:00.000'\n        duration:\n          type: integer\n          description: Total time spent on activity.\n          example: 1075000\n        max_intensity:\n          type: string\n          description: Maximum intensity reached in the activity.\n          example: very\n        max_intensity_duration:\n          type: number\n          description: 'Time spent in maximum activity intensity, in minutes.'\n          example: 60\n        calories:\n          type: integer\n          description: Calories spent during activity.\n          example: 123\n        steps:\n          type: integer\n          description: Number of steps taken during the activity.\n          example: 1701\n        user:\n          readOnly: true\n          type: string\n          format: uuid\n          description: User Id\n          example: 5a62be07de34500146d9c544\n        created_at:\n          type: string\n          format: date-time\n          description: \u003e-\n            Date and hour according to the UTC pattern, automatically generated\n            on moment that resource is saved on server.\n          readOnly: true\n    Error:\n      type: object\n      description: \u003e-\n        Default template for error message. All returned errors will follow this\n        template.\n      required:\n      - code\n      - message\n      - description\n      properties:\n        code:\n          type: integer\n          description: \u003e-\n            Unique API code that indicates specific details of the error, or\n            the actual status code of the response when the unique code is not\n            appropriate.\n        message:\n          type: string\n          description: Readable and short description of the error.\n        description:\n          type: string\n          description: Detailed description of the error.\n  parameters:\n    fieldsParam:\n      in: query\n      name: fields\n      required: false\n      description: \u003e-\n        Allows you to retrieve only the information you want. To do this,\n        simply provide the name of the attributes separated by commas.\n        For example: **_fields=field1,field2_** indicates that only\n        field1 and field2 should be listed in the query result.\n      schema:\n        type: array\n        items:\n          type: string\n    pageParam:\n      in: query\n      name: page\n      required: false\n      description: The page number.\n      schema:\n        type: integer\n        format: int32\n        minimum: 1\n        default: 1\n    limitParam:\n      in: query\n      name: limit\n      required: false\n      description: The number of items to return.\n      schema:\n        type: integer\n        format: int32\n        maximum: 100\n        default: 20\n    sortParam:\n      in: query\n      name: sort\n      required: false\n      description: \u003e-\n        Contains the names of the attributes, separated by commas, that\n        will be used to sort the result of the query. For ascending sort,\n        use the '+' character before the attribute name. For descending\n        sort, use the '-' character before the attribute name. By default,\n        the order is ascending, so the '+' symbol is optional, just enter\n        the attribute.\n      schema:\n        type: array\n        items:\n          type: string\n        default:\n        - created_at\n    filterParam:\n      in: query\n      name: ''\n      required: false\n      description: \u003e-\n        To filter a collection by multiple concurrent attributes or filter\n        multiple values for an attribute, simply use the attribute/property\n        name with an equal sign and the expected values, separated by a comma.\n        **_property=value1,value2,value3_**. The query is not case sensitive.\n        Example: **_?name=elvis,john_** to retrieve exactly the same users with\n        elvis or john name.\n        For filtering with logical operators, just follow the syntax:\n        **_property=operator:value_**. The available operators are:\n         - **gt** -\u003e Defines which value of the attribute is greater than\n                    (that is,\u003e) the specified value.\n         - **gte** -\u003e Defines which attribute value is greater than or equal to\n                    (that is,\u003e=) the specified value.\n         - **lt** -\u003e Define the value of the attribute to be less than (that is, \u003c)\n                    the specified value.\n         - **lte** -\u003e Defines which value of the attribute is less than or equal to\n                    (that is, \u003c=) the specified value.\n\n        Example: **_?field1=gte:80\u0026age=lt:100_** to recover the users with age\n        is greater than or equal to 80 and less then 100.\n\n      schema:\n        type: string\n    dateStartParam:\n      in: query\n      name: date_start\n      required: false\n      description: \u003e-\n        Define start date in format: YYYY-MM-DD ou YYYY-MM-DD hh:mm:ss. The\n        attribute used for the query will be the registration_date.\n      schema:\n        type: string\n    dateEndParam:\n      in: query\n      name: date_end\n      required: false\n      description: \u003e-\n        Define end date in format: YYYY-MM-DD ou YYYY-MM-DD hh:mm:ss.The\n        attribute used for the query will be the registration_date.\n      schema:\n        type: string\n        default: today\n    periodParam:\n      in: query\n      name: period\n      required: false\n      description: |-\n        Sets the period from the available ones:\n         - **[1..n]d** - Total days (1d, 2d, ...)\n         - **[1..n]w** - Total of weeks (1w, 2w, ...)\n         - **[1..n]m** - Total of months (1m, 2m, ...)\n         - **[1..n]y** - Total of years (1y, 2y, ...)\n\n        The attribute used for the query will be the registration_date.\n      schema:\n        type: string",
			"canonicalURL": "/github.com/nutes-uepb/template-base-ts@49f99666a979c2c8aa6ea3adb7ed52e7c1f91227/-/blob/example/activity-tracking/src/ui/swagger/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/nutes-uepb/template-base-ts/blob/49f99666a979c2c8aa6ea3adb7ed52e7c1f91227/example/activity-tracking/src/ui/swagger/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: parameter name: \"\": can't generate valid name: []: crypticName not implemented",
	"NotImplemented": [
		"crypticName"
	]
}