{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/change.local/v1/openapi.yaml",
			"byteSize": 13661,
			"content": "openapi: 3.0.1\nservers:\n  - url: http://change.local\n  - url: https://{defaultHost}\n    variables:\n      defaultHost:\n        default: api.getchange.io\ninfo:\n  title: API V1\n  version: v1\n  x-apisguru-categories:\n    - payment\n  x-origin:\n    - format: openapi\n      url: https://change-api-definition.s3-us-west-1.amazonaws.com/swagger.yaml\n      version: \"3.0\"\n  x-providerName: change.local\npaths:\n  /api/v1/donations/carbon_calculate:\n    get:\n      description: Calculates the donation amount (to CarbonFund 501\\(c\\)3) needed to offset a physical shipment. This calculation depends on the weight, primary transportation method, and distance of the shipment. Provide the distance of the shipment using the origin and destination address, or directly with the number of miles. For convenience, this endpoint also returns the id of the nonprofit CarbonFund, for making a subsequent donation to. See the [Carbon offsets guide](/recipes/carbon-offsets/) for more on using this endpoint.\n      parameters:\n        - description: The origin zip code (US only) of the shipment. If you send this parameter, also send `destination_address`.\n          examples:\n            illinois:\n              summary: An Illinois zip code.\n              value: 60148\n          in: query\n          name: origin_address\n          schema:\n            type: number\n        - description: The destination zip code (US only) of the shipment. If you send this parameter, also send `origin_address`.\n          examples:\n            california:\n              summary: A California zip code.\n              value: 94133\n          in: query\n          name: destination_address\n          schema:\n            type: number\n        - description: The total distance (in miles) of the shipment. You can use this parameter in place of `origin_address` and `destination_address`.\n          in: query\n          name: distance_mi\n          schema:\n            type: number\n        - description: The total weight (in pounds) of the shipment.\n          examples:\n            \"3.5\":\n              summary: A 3.5 pound shipment.\n              value: 3.5\n          in: query\n          name: weight_lb\n          required: true\n          schema:\n            type: number\n        - description: The primary transportation method of the shipment.\n          examples:\n            air:\n              summary: The shipment will be primarily by plane.\n              value: air\n          in: query\n          name: transportation_method\n          schema:\n            enum:\n              - air\n              - truck\n              - rail\n              - sea\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                amount: 18\n                nonprofit_id: n_l8vRRYrxhw0ei8AMYto5FzU1\n          description: successful\n      security:\n        - basic_auth: []\n      summary: Calculate shipping carbon offset\n  /api/v1/donations/carbon_stats:\n    get:\n      description: Measures your carbon offset impact in relatable terms. Provide the id of a donation to CarbonFund to see stats about that specific donation. If you omit the donation id, this endpoint returns aggregate stats for all of your CarbonFund donations.\n      parameters:\n        - description: The id of a donation to the CarbonFund nonprofit. Ids are returned when a donation is created. If an ID is not provided, the total stats for all donations to CarbonFund are returned.\n          examples:\n            donation:\n              summary: A donation id.\n              value: d_NuYL6M2C1kjecXpWzKVODw7W\n          in: query\n          name: id\n          schema:\n            type: number\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                amount: 107\n                co2_tonnes_offset: 0.107\n                trees: 1.8\n          description: successful\n      security:\n        - basic_auth: []\n      summary: Retrieve carbon offset stats\n  /api/v1/donations/create:\n    post:\n      description: Creates a donation to any nonprofit. CHANGE keeps track of your donations, bills you at the end of the month, and handles the nonprofit payouts for you.\n      parameters:\n        - description: The amount of the donation in cents.\n          examples:\n            five:\n              summary: A $5.00 donation.\n              value: 500\n          in: query\n          name: amount\n          required: true\n          schema:\n            type: string\n        - description: The id of a nonprofit from the CHANGE network.\n          examples:\n            watsi:\n              summary: The id for Watsi (https://watsi.org)\n              value: n_IfEoPCaPqVsFAUI5xl0CBUOx\n          in: query\n          name: nonprofit_id\n          required: true\n          schema:\n            type: string\n        - description: Source of the donation funds. If you are collecting payment from your customer for the donation, use `customer`.\n          examples:\n            customer:\n              summary: A customer-funded donation.\n              value: customer\n          in: query\n          name: funding_source\n          required: true\n          schema:\n            enum:\n              - merchant\n              - customer\n            type: string\n        - description: The customer's zip code. Provide this to unlock geographic insights.\n          examples:\n            valid:\n              summary: A valid zip code.\n              value: \"94104\"\n          in: query\n          name: zip_code\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                amount: 500\n                external_id: null\n                id: d_ZMHGi4XOLbIZNCcRdNQIYRMD\n                live_mode: true\n                merchant_id: m_ZRXrC36KAICbIBccukOYrpz2\n                nonprofit_id: n_t97eaBKgDzIiZpaB5miAGqmW\n                order_value: null\n                zip_code: \"94104\"\n          description: Donation successful\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: nonprofit_invalid\n                detail: nonprofit_id n_invalid is invalid.\n                status: 400\n                title: The nonprofit is invalid. Please reference a nonprofit in the CHANGE network.\n          description: Param `nonprofit_id` invalid\n      security:\n        - basic_auth: []\n      summary: Create a donation\n  /api/v1/donations/crypto_calculate:\n    get:\n      description: Calculates the donation amount (to CarbonFund 501\\(c\\)3) needed to offset a cryptocurrency transaction. For convenience, this endpoint also returns the id of the nonprofit CarbonFund, for making a subsequent donation to. See the [Carbon offsets guide](/recipes/carbon-offsets/) for more on using this endpoint.\n      parameters:\n        - description: The number of transactions to offset.\n          examples:\n            two:\n              summary: Represents two transactions.\n              value: 2\n          in: query\n          name: count\n          schema:\n            type: number\n        - description: The currency of the transaction.\n          examples:\n            ethereum:\n              summary: The ETH currency.\n              value: eth\n          in: query\n          name: currency\n          required: true\n          schema:\n            enum:\n              - eth\n              - btc\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                amount: 34\n                nonprofit_id: n_l8vRRYrxhw0ei8AMYto5FzU1\n          description: successful\n      security:\n        - basic_auth: []\n      summary: Calculate crypto carbon offset\n  /api/v1/donations/index:\n    get:\n      description: Retrieves a list of donations you've previously made. The donations are returned in order of creation, with the most recent donations appearing first. This endpoint is paginated.\n      parameters:\n        - description: Which page to return. This endpoint is paginated, and returns maximum 30 donations per page.\n          examples:\n            page 1:\n              summary: The first 30 donations.\n              value: \"1\"\n          in: query\n          name: page\n          schema:\n            type: number\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                donations:\n                  - amount: 234\n                    created_at: 2021-05-05T20:18:05.494Z\n                    customer_funded: true\n                    external_id: null\n                    id: 6236\n                    invoice_id: 3078\n                    merchant_id: 5966\n                    nonprofit_id: 8202\n                    order_value: 2526\n                    public_id: d_U0M2sPsQpsKXx6d3XOInsOu4\n                    region: null\n                    sandbox: false\n                    updated_at: 2021-05-05T20:18:05.494Z\n                    zip_code: 46076-9506\n                  - amount: 335\n                    created_at: 2021-05-05T20:18:05.482Z\n                    customer_funded: true\n                    external_id: null\n                    id: 6235\n                    invoice_id: 3078\n                    merchant_id: 5966\n                    nonprofit_id: 8201\n                    order_value: 2688\n                    public_id: d_nbvCMyqXdFyHvEFn98NZi281\n                    region: null\n                    sandbox: false\n                    updated_at: 2021-05-05T20:18:05.482Z\n                    zip_code: \"71778\"\n                page: 1\n          description: successful\n      security:\n        - basic_auth: []\n      summary: List your donations\n  /api/v1/donations/show:\n    get:\n      description: Retrieves the details of a donation you've previously made.\n      parameters:\n        - description: The id of a donation. Ids are returned when a donation is created.\n          examples:\n            donation:\n              summary: A donation id.\n              value: d_NuYL6M2C1kjecXpWzKVODw7W\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                amount: 296\n                external_id: null\n                id: d_lrUNd3aQfnwLYzSRu6mrk4ZA\n                live_mode: true\n                merchant_id: m_CgzKWshXuPcI8nPKH8QZoeqL\n                nonprofit_id: n_h3ni9x9pH7OAkHXyghL2wjSZ\n                order_value: 1007\n                zip_code: \"51689\"\n          description: successful\n      security:\n        - basic_auth: []\n      summary: Retrieve a donation\n  /api/v1/nonprofits/list:\n    get:\n      description: Retrieves a list of nonprofits whose names match the provided name. This endpoint is paginated.\n      parameters:\n        - description: A string to search.\n          examples:\n            some nonprofit:\n              summary: The name of some nonprofit.\n              value: Some Nonprofit\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: The page to return. This endpoint is paginated, and returns up to 30 nonprofits at a time.\n          examples:\n            page 1:\n              summary: The first 30 nonprofits.\n              value: \"1\"\n          in: query\n          name: page\n          schema:\n            type: number\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                nonprofits:\n                  - address_line: 7510 Sanford Mountain\n                    city: Reicheltown\n                    classification: Y18\n                    ein: \"158336879\"\n                    icon_url: https://nonprofit-icons.s3-us-west-1.amazonaws.com/Y.png\n                    id: n_Q0Pwyjw5H1GDCviVvJXbXAJF\n                    last_verified_at: null\n                    memo: null\n                    mission: Persistent 24 hour solution\n                    name: SOME NONPROFIT\n                    state: Tennessee\n                    website: http://abshire.info/ellsworth.kris\n                    zip_code: 07815-9329\n                page: 1\n          description: List successful\n      security:\n        - basic_auth: []\n      summary: Search a nonprofit\n  /api/v1/nonprofits/show:\n    get:\n      description: Retrieves information for a nonprofit.\n      parameters:\n        - description: The id of a nonprofit from the CHANGE network.\n          examples:\n            watsi:\n              summary: The id for Watsi (https://watsi.org)\n              value: n_IfEoPCaPqVsFAUI5xl0CBUOx\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                address_line: 8236 Leslie Gateway\n                city: Port Jasmineview\n                classification: C62\n                ein: \"057310526\"\n                icon_url: https://nonprofit-icons.s3-us-west-1.amazonaws.com/C.png\n                id: n_LLWKUimvwSZ9A01gTdFo0uJe\n                memo: null\n                mission: Triple-buffered disintermediate projection\n                name: BERNIER-GIBSON\n                state: New Jersey\n                website: http://ziemann.co/rosalind\n                zip_code: 16409-3215\n          description: Show successful\n      security:\n        - basic_auth: []\n      summary: Show a nonprofit\ncomponents:\n  securitySchemes:\n    basic_auth:\n      scheme: basic\n      type: http\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/change.local/v1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/change.local/v1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/v1/donations/index\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}