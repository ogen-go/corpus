{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Threagile/threagile"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "support/openapi.yaml",
			"byteSize": 8927,
			"content": "openapi: 3.0.3\n\ninfo:\n  title: Threagile API\n  description: \"\u003cb\u003eThreagile API\u003c/b\u003e for Agile Threat Modeling: visit \u003ca href=\\\"https://threagile.io\\\"\u003ehttps://threagile.io\u003c/a\u003e for more information.\"\n  version: 1.0.0\n\nservers:\n  - url: /\n    description: Threagile Server\n\ntags:\n  - name: \"direct\"\n    description: \"Direct one-shot calls for on-the-fly analyzing and checking of models\"\n  - name: \"meta\"\n    description: \"Meta infos about types and version\"\n  - name: \"auth\"\n    description: \"Auth calls for crypto key and token management\"\n  - name: \"models\"\n    description: \"Persistent model creation and handling stuff\"\n\npaths:\n  /meta/ping:\n    get:\n      tags:\n        - \"meta\"\n      summary: Simple health check ping\n      description: Used as health check in docker container as well\n      responses:\n        '200':\n          description: Simple pong response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: pong\n  /meta/version:\n    get:\n      tags:\n        - \"meta\"\n      summary: Version number\n      description: Version number\n      responses:\n        '200':\n          description: Version number\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  version:\n                    type: string\n                    example: 1.0.0\n                  build_timestamp:\n                    type: string\n                    example: 20200518160456\n  /meta/types:\n    get:\n      tags:\n        - \"meta\"\n      summary: Listing of all enum type values\n      description: Listing of all enum type values\n      responses:\n        '200':\n          description: Listing of all enum type values (example here shows just one)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  confidentiality:\n                    type: array\n                    items:\n                      type: string\n                    example: [public, internal, restricted, confidential, strictly-confidential]\n  /meta/stats:\n    get:\n      tags:\n        - \"meta\"\n      summary: Model statistics\n      description: Model statistics\n      responses:\n        '200':\n          description: Model statistics\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  key_count:\n                    type: integer\n                    example: 13\n                  model_count:\n                    type: integer\n                    example: 42\n                  success_count:\n                    type: integer\n                    example: 123\n                  error_count:\n                    type: integer\n                    example: 0\n  /direct/stub:\n    get:\n      tags:\n        - \"direct\"\n      summary: Stub model file\n      description: Stub model file (as a starting point)\n      responses:\n        '200':\n          description: Stub model file\n          content:\n            application/x-yaml:\n              schema:\n                type: string\n  /direct/check:\n    post:\n      tags:\n        - \"direct\"\n      summary: Direct model check call\n      description: Direct model check call\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        '200':\n          description: Model ok response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: model is ok\n        '400':\n          description: Model not ok response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: \"Missing referenced data asset target: some-stuff\"\n  /direct/analyze:\n    post:\n      tags:\n        - \"direct\"\n      summary: Direct model analyze call\n      description: Direct model analyze call\n      parameters:\n        - in: query\n          name: dpi\n          required: false\n          example: 120\n          schema:\n            type: integer\n          description: The DPI (resolution) to use for the diagram generation\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        '200':\n          description: Model analyzing result response (zipped)\n          content:\n            application/zip:\n              schema:\n                type: string\n                format: binary\n        '400':\n          description: Model not ok response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: \"Missing referenced data asset target: some-stuff\"\n  /auth/keys:\n    post:\n      tags:\n        - \"auth\"\n      summary: Create a new auth key\n      description: Create a new auth key\n      responses:\n        '201':\n          description: Key successfully created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  key:\n                    type: string\n                    example: BtM1Q7V47d4B3TrVSw1133CIyL1NUpUM2tJ92vfZMMQ\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: unable to create key\n    delete:\n      tags:\n        - \"auth\"\n      summary: Delete an auth key\n      description: Delete an auth key\n      parameters:\n        - in: header\n          name: key\n          schema:\n            type: string\n          required: true\n          example: BtM1Q7V47d4B3TrVSw1133CIyL1NUpUM2tJ92vfZMMQ\n      responses:\n        '200':\n          description: Key successfully deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: key deleted\n        '404':\n          description: Error\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: key not found\n  /auth/tokens:\n    post:\n      tags:\n        - \"auth\"\n      summary: Create a new (time limited) token from an auth key\n      description: Create a new (time limited) token from an auth key\n      parameters:\n        - in: header\n          name: key\n          schema:\n            type: string\n          required: true\n          example: BtM1Q7V47d4B3TrVSw1133CIyL1NUpUM2tJ92vfZMMQ\n      responses:\n        '201':\n          description: Token successfully created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n                    example: QrlcoMOtjy_h38T2N6JjrWpb4Kodg3Y7NnLN2yiDb69\n        '500':\n          description: Error\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: unable to create token\n    delete:\n      tags:\n        - \"auth\"\n      summary: Delete a token\n      description: Delete a token\n      parameters:\n        - in: header\n          name: token\n          schema:\n            type: string\n          required: true\n          example: QrlcoMOtjy_h38T2N6JjrWpb4Kodg3Y7NnLN2yiDb69\n      responses:\n        '200':\n          description: Token successfully deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: token deleted\n        '404':\n          description: Error\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: token not found\n",
			"canonicalURL": "/github.com/Threagile/threagile@3db6e96abb0a2d179eb24f03676e2fbc3fbd6a56/-/blob/support/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Threagile/threagile/blob/3db6e96abb0a2d179eb24f03676e2fbc3fbd6a56/support/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/direct/stub\": get: responses: 200: contents: unsupported content types: [application/x-yaml]",
	"NotImplemented": [
		"unsupported content types"
	]
}