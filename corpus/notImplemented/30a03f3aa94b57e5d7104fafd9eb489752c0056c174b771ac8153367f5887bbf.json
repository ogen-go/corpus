{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/light-docker"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "light-oauth2/sqlserver/config/oauth2-refresh-token/openapi.yaml",
			"byteSize": 3329,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: OAuth2 Refresh Token Management\n  description: OAuth2 refresh token management microservices endpoints.\n  contact:\n    email: stevehu@gmail.com\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\npaths:\n  /oauth2/refresh_token:\n    get:\n      description: Return all refresh tokens\n      operationId: getAllRefreshToken\n      parameters:\n        - name: page\n          in: query\n          description: Page number\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: pageSize\n          in: query\n          description: Pag size\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: userId\n          in: query\n          description: Partial userId for filter\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RefreshToken'\n      security:\n        - refresh_token_auth:\n            - oauth.refresh_token.r\n  '/oauth2/refresh_token/{refreshToken}':\n    delete:\n      description: Delete a refresh token\n      operationId: deleteRefreshToken\n      parameters:\n        - name: refreshToken\n          in: path\n          description: Refresh Token\n          required: true\n          schema:\n            type: string\n      responses:\n        '400':\n          description: Invalid refresh token supplied\n        '404':\n          description: Refresh token not found\n      security:\n        - refresh_token_auth:\n            - oauth.refresh_token.w\n    get:\n      description: Get a refresh token\n      operationId: getRefreshToken\n      parameters:\n        - name: refreshToken\n          in: path\n          description: Refresh token\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RefreshToken'\n        '400':\n          description: Invalid refresh token supplied\n        '404':\n          description: Refresh token not found\n      security:\n        - refresh_token_auth:\n            - oauth.refresh_token.r\n            - oauth.refresh_token.w\nservers:\n  - url: 'https://oauth2.networknt.com'\ncomponents:\n  securitySchemes:\n    refresh_token_auth:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: 'http://localhost:8888/oauth2/code'\n          scopes:\n            oauth.refresh_token.w: write oauth refresh token\n            oauth.refresh_token.r: read oauth refresh token\n  schemas:\n    RefreshToken:\n      type: object\n      required:\n        - refreshToken\n        - userId\n        - clientId\n      properties:\n        refreshToken:\n          type: string\n          description: refresh token\n        userId:\n          type: string\n          description: user id\n        clientId:\n          type: string\n          description: client id\n        scope:\n          type: string\n          description: service scopes separated by space",
			"canonicalURL": "/github.com/networknt/light-docker@781ec1d6ea78dbd6aa6391f9470936a6d779d4b0/-/blob/light-oauth2/sqlserver/config/oauth2-refresh-token/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/networknt/light-docker/blob/781ec1d6ea78dbd6aa6391f9470936a6d779d4b0/light-oauth2/sqlserver/config/oauth2-refresh-token/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/oauth2/refresh_token\": get: security: security \"refresh_token_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}