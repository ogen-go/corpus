{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/twilio.com/twilio_events_v1/1.29.2/openapi.yaml",
			"byteSize": 36384,
			"content": "openapi: 3.0.1\nservers:\n  - url: https://events.twilio.com\ninfo:\n  contact:\n    email: support@twilio.com\n    name: Twilio Support\n    url: https://support.twilio.com\n  description: This is the public Twilio REST API.\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  termsOfService: https://www.twilio.com/legal/tos\n  title: Twilio - Events\n  version: 1.29.2\n  x-apisguru-categories:\n    - telecom\n    - messaging\n  x-logo:\n    url: https://static1.twilio.com/marketing/bundles/marketing/img/logos/wordmark-red.svg\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/twilio/twilio-oai/main/spec/json/twilio_events_v1.json\n      version: \"3.0\"\n  x-providerName: twilio.com\n  x-serviceName: twilio_events_v1\npaths:\n  \"/v1/Schemas/{Id}\":\n    description: Versioned Schema definitions for Event Types\n    get:\n      description: Fetch a specific schema with its nested versions.\n      operationId: FetchSchema\n      parameters:\n        - description: The unique identifier of the schema. Each schema can have multiple versions, that share the same id.\n          in: path\n          name: Id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/events.v1.schema\"\n          description: OK\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    servers:\n      - url: https://events.twilio.com\n    x-twilio:\n      defaultOutputProperties:\n        - id\n      pathType: instance\n  \"/v1/Schemas/{Id}/Versions\":\n    description: Version of the Schema\n    get:\n      description: Retrieve a paginated list of versions of the schema.\n      operationId: ListSchemaVersion\n      parameters:\n        - description: The unique identifier of the schema. Each schema can have multiple versions, that share the same id.\n          in: path\n          name: Id\n          required: true\n          schema:\n            type: string\n        - description: How many resources to return in each list page. The default is 50, and the maximum is 1000.\n          in: query\n          name: PageSize\n          schema:\n            maximum: 1000\n            minimum: 1\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  meta:\n                    properties:\n                      first_page_url:\n                        format: uri\n                        type: string\n                      key:\n                        type: string\n                      next_page_url:\n                        format: uri\n                        type: string\n                      page:\n                        type: integer\n                      page_size:\n                        type: integer\n                      previous_page_url:\n                        format: uri\n                        type: string\n                      url:\n                        format: uri\n                        type: string\n                    type: object\n                  schema_versions:\n                    items:\n                      $ref: \"#/components/schemas/events.v1.schema.schema_version\"\n                    type: array\n                title: ListSchemaVersionResponse\n                type: object\n          description: OK\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    servers:\n      - url: https://events.twilio.com\n    x-twilio:\n      className: schema_version\n      defaultOutputProperties:\n        - id\n        - schema_version\n        - date_created\n      parent: /Schemas\n      pathType: list\n  \"/v1/Schemas/{Id}/Versions/{SchemaVersion}\":\n    description: Version of the Schema\n    get:\n      description: Fetch a specific schema and version.\n      operationId: FetchSchemaVersion\n      parameters:\n        - description: The unique identifier of the schema. Each schema can have multiple versions, that share the same id.\n          in: path\n          name: Id\n          required: true\n          schema:\n            type: string\n        - description: The version of the schema\n          in: path\n          name: SchemaVersion\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/events.v1.schema.schema_version\"\n          description: OK\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    servers:\n      - url: https://events.twilio.com\n    x-twilio:\n      className: schema_version\n      defaultOutputProperties:\n        - id\n        - schema_version\n        - date_created\n      parent: /Schemas\n      pathType: instance\n  /v1/Sinks:\n    description: Sink destination to send events to\n    get:\n      description: Retrieve a paginated list of Sinks belonging to the account used to make the request.\n      operationId: ListSink\n      parameters:\n        - description: A boolean query parameter filtering the results to return sinks used/not used by a subscription.\n          in: query\n          name: InUse\n          schema:\n            type: boolean\n        - description: A String query parameter filtering the results by status `initialized`, `validating`, `active` or `failed`.\n          in: query\n          name: Status\n          schema:\n            type: string\n        - description: How many resources to return in each list page. The default is 50, and the maximum is 1000.\n          in: query\n          name: PageSize\n          schema:\n            maximum: 1000\n            minimum: 1\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  meta:\n                    properties:\n                      first_page_url:\n                        format: uri\n                        type: string\n                      key:\n                        type: string\n                      next_page_url:\n                        format: uri\n                        type: string\n                      page:\n                        type: integer\n                      page_size:\n                        type: integer\n                      previous_page_url:\n                        format: uri\n                        type: string\n                      url:\n                        format: uri\n                        type: string\n                    type: object\n                  sinks:\n                    items:\n                      $ref: \"#/components/schemas/events.v1.sink\"\n                    type: array\n                title: ListSinkResponse\n                type: object\n          description: OK\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    post:\n      description: Create a new Sink\n      operationId: CreateSink\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                Description:\n                  description: A human readable description for the Sink **This value should not contain PII.**\n                  type: string\n                SinkConfiguration:\n                  description: The information required for Twilio to connect to the provided Sink encoded as JSON.\n                SinkType:\n                  description: The Sink type. Can only be \"kinesis\" or \"webhook\" currently.\n                  enum:\n                    - kinesis\n                    - webhook\n                    - segment\n                  type: string\n              required:\n                - Description\n                - SinkConfiguration\n                - SinkType\n              title: CreateSinkRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/events.v1.sink\"\n          description: Created\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    servers:\n      - url: https://events.twilio.com\n    x-twilio:\n      defaultOutputProperties:\n        - date_created\n        - date_updated\n        - description\n        - sid\n        - sink_configuration\n        - sink_type\n        - status\n      pathType: list\n  \"/v1/Sinks/{Sid}\":\n    delete:\n      description: Delete a specific Sink.\n      operationId: DeleteSink\n      parameters:\n        - description: A 34 character string that uniquely identifies this Sink.\n          in: path\n          name: Sid\n          required: true\n          schema:\n            maxLength: 34\n            minLength: 34\n            pattern: ^DG[0-9a-fA-F]{32}$\n            type: string\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    description: Sink destination to send events to\n    get:\n      description: Fetch a specific Sink.\n      operationId: FetchSink\n      parameters:\n        - description: A 34 character string that uniquely identifies this Sink.\n          in: path\n          name: Sid\n          required: true\n          schema:\n            maxLength: 34\n            minLength: 34\n            pattern: ^DG[0-9a-fA-F]{32}$\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/events.v1.sink\"\n          description: OK\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    post:\n      description: Update a specific Sink\n      operationId: UpdateSink\n      parameters:\n        - description: A 34 character string that uniquely identifies this Sink.\n          in: path\n          name: Sid\n          required: true\n          schema:\n            maxLength: 34\n            minLength: 34\n            pattern: ^DG[0-9a-fA-F]{32}$\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                Description:\n                  description: A human readable description for the Sink **This value should not contain PII.**\n                  type: string\n              required:\n                - Description\n              title: UpdateSinkRequest\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/events.v1.sink\"\n          description: OK\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    servers:\n      - url: https://events.twilio.com\n    x-twilio:\n      defaultOutputProperties:\n        - date_created\n        - date_updated\n        - description\n        - sid\n        - sink_configuration\n        - sink_type\n        - status\n      pathType: instance\n  \"/v1/Sinks/{Sid}/Test\":\n    description: Test sink\n    post:\n      description: Create a new Sink Test Event for the given Sink.\n      operationId: CreateSinkTest\n      parameters:\n        - description: A 34 character string that uniquely identifies the Sink to be Tested.\n          in: path\n          name: Sid\n          required: true\n          schema:\n            maxLength: 34\n            minLength: 34\n            pattern: ^DG[0-9a-fA-F]{32}$\n            type: string\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/events.v1.sink.sink_test\"\n          description: Created\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    servers:\n      - url: https://events.twilio.com\n    x-twilio:\n      className: sink_test\n      defaultOutputProperties:\n        - result\n      parent: /Sinks\n      pathType: list\n  \"/v1/Sinks/{Sid}/Validate\":\n    description: Validate sink\n    post:\n      description: Validate that a test event for a Sink was received.\n      operationId: CreateSinkValidate\n      parameters:\n        - description: A 34 character string that uniquely identifies the Sink being validated.\n          in: path\n          name: Sid\n          required: true\n          schema:\n            maxLength: 34\n            minLength: 34\n            pattern: ^DG[0-9a-fA-F]{32}$\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                TestId:\n                  description: A 34 character string that uniquely identifies the test event for a Sink being validated.\n                  type: string\n              required:\n                - TestId\n              title: CreateSinkValidateRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/events.v1.sink.sink_validate\"\n          description: Created\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    servers:\n      - url: https://events.twilio.com\n    x-twilio:\n      className: sink_validate\n      defaultOutputProperties:\n        - result\n      parent: /Sinks\n      pathType: list\n  /v1/Subscriptions:\n    description: Subscription to send Event Types to a Sink\n    get:\n      description: Retrieve a paginated list of Subscriptions belonging to the account used to make the request.\n      operationId: ListSubscription\n      parameters:\n        - description: The SID of the sink that the list of Subscriptions should be filtered by.\n          in: query\n          name: SinkSid\n          schema:\n            maxLength: 34\n            minLength: 34\n            pattern: ^DG[0-9a-fA-F]{32}$\n            type: string\n        - description: How many resources to return in each list page. The default is 50, and the maximum is 1000.\n          in: query\n          name: PageSize\n          schema:\n            maximum: 1000\n            minimum: 1\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  meta:\n                    properties:\n                      first_page_url:\n                        format: uri\n                        type: string\n                      key:\n                        type: string\n                      next_page_url:\n                        format: uri\n                        type: string\n                      page:\n                        type: integer\n                      page_size:\n                        type: integer\n                      previous_page_url:\n                        format: uri\n                        type: string\n                      url:\n                        format: uri\n                        type: string\n                    type: object\n                  subscriptions:\n                    items:\n                      $ref: \"#/components/schemas/events.v1.subscription\"\n                    type: array\n                title: ListSubscriptionResponse\n                type: object\n          description: OK\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    post:\n      description: Create a new Subscription.\n      operationId: CreateSubscription\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                Description:\n                  description: A human readable description for the Subscription **This value should not contain PII.**\n                  type: string\n                SinkSid:\n                  description: The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.\n                  maxLength: 34\n                  minLength: 34\n                  pattern: ^DG[0-9a-fA-F]{32}$\n                  type: string\n                Types:\n                  description: An array of objects containing the subscribed Event Types\n                  items: {}\n                  type: array\n              required:\n                - Description\n                - SinkSid\n                - Types\n              title: CreateSubscriptionRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/events.v1.subscription\"\n          description: Created\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    servers:\n      - url: https://events.twilio.com\n    x-twilio:\n      defaultOutputProperties:\n        - account_sid\n        - sid\n        - sink_sid\n        - date_created\n        - date_updated\n      pathType: list\n  \"/v1/Subscriptions/{Sid}\":\n    delete:\n      description: Delete a specific Subscription.\n      operationId: DeleteSubscription\n      parameters:\n        - description: A 34 character string that uniquely identifies this Subscription.\n          in: path\n          name: Sid\n          required: true\n          schema:\n            maxLength: 34\n            minLength: 34\n            pattern: ^DF[0-9a-fA-F]{32}$\n            type: string\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    description: Subscription to send Event Types to a Sink\n    get:\n      description: Fetch a specific Subscription.\n      operationId: FetchSubscription\n      parameters:\n        - description: A 34 character string that uniquely identifies this Subscription.\n          in: path\n          name: Sid\n          required: true\n          schema:\n            maxLength: 34\n            minLength: 34\n            pattern: ^DF[0-9a-fA-F]{32}$\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/events.v1.subscription\"\n          description: OK\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    post:\n      description: Update a Subscription.\n      operationId: UpdateSubscription\n      parameters:\n        - description: A 34 character string that uniquely identifies this Subscription.\n          in: path\n          name: Sid\n          required: true\n          schema:\n            maxLength: 34\n            minLength: 34\n            pattern: ^DF[0-9a-fA-F]{32}$\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                Description:\n                  description: A human readable description for the Subscription.\n                  type: string\n                SinkSid:\n                  description: The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.\n                  maxLength: 34\n                  minLength: 34\n                  pattern: ^DG[0-9a-fA-F]{32}$\n                  type: string\n              title: UpdateSubscriptionRequest\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/events.v1.subscription\"\n          description: OK\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    servers:\n      - url: https://events.twilio.com\n    x-twilio:\n      defaultOutputProperties:\n        - account_sid\n        - sid\n        - sink_sid\n        - date_created\n        - date_updated\n      pathType: instance\n  \"/v1/Subscriptions/{SubscriptionSid}/SubscribedEvents\":\n    description: Event subscribed to in the parent subscription\n    get:\n      description: Retrieve a list of all Subscribed Event types for a Subscription.\n      operationId: ListSubscribedEvent\n      parameters:\n        - description: The unique SID identifier of the Subscription.\n          in: path\n          name: SubscriptionSid\n          required: true\n          schema:\n            maxLength: 34\n            minLength: 34\n            pattern: ^DF[0-9a-fA-F]{32}$\n            type: string\n        - description: How many resources to return in each list page. The default is 50, and the maximum is 1000.\n          in: query\n          name: PageSize\n          schema:\n            maximum: 1000\n            minimum: 1\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  meta:\n                    properties:\n                      first_page_url:\n                        format: uri\n                        type: string\n                      key:\n                        type: string\n                      next_page_url:\n                        format: uri\n                        type: string\n                      page:\n                        type: integer\n                      page_size:\n                        type: integer\n                      previous_page_url:\n                        format: uri\n                        type: string\n                      url:\n                        format: uri\n                        type: string\n                    type: object\n                  types:\n                    items:\n                      $ref: \"#/components/schemas/events.v1.subscription.subscribed_event\"\n                    type: array\n                title: ListSubscribedEventResponse\n                type: object\n          description: OK\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    post:\n      description: Create a new Subscribed Event type for the subscription\n      operationId: CreateSubscribedEvent\n      parameters:\n        - description: The unique SID identifier of the Subscription.\n          in: path\n          name: SubscriptionSid\n          required: true\n          schema:\n            maxLength: 34\n            minLength: 34\n            pattern: ^DF[0-9a-fA-F]{32}$\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                SchemaVersion:\n                  description: The schema version that the subscription should use.\n                  type: integer\n                Type:\n                  description: Type of event being subscribed to.\n                  type: string\n              required:\n                - Type\n              title: CreateSubscribedEventRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/events.v1.subscription.subscribed_event\"\n          description: Created\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    servers:\n      - url: https://events.twilio.com\n    x-twilio:\n      defaultOutputProperties:\n        - type\n        - schema_version\n        - account_sid\n        - subscription_sid\n      parent: /Subscriptions\n      pathType: list\n  \"/v1/Subscriptions/{SubscriptionSid}/SubscribedEvents/{Type}\":\n    delete:\n      description: Remove an event type from a subscription.\n      operationId: DeleteSubscribedEvent\n      parameters:\n        - description: The unique SID identifier of the Subscription.\n          in: path\n          name: SubscriptionSid\n          required: true\n          schema:\n            maxLength: 34\n            minLength: 34\n            pattern: ^DF[0-9a-fA-F]{32}$\n            type: string\n        - description: Type of event being subscribed to.\n          in: path\n          name: Type\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    description: Event subscribed to in the parent subscription\n    get:\n      description: Read an Event for a Subscription.\n      operationId: FetchSubscribedEvent\n      parameters:\n        - description: The unique SID identifier of the Subscription.\n          in: path\n          name: SubscriptionSid\n          required: true\n          schema:\n            maxLength: 34\n            minLength: 34\n            pattern: ^DF[0-9a-fA-F]{32}$\n            type: string\n        - description: Type of event being subscribed to.\n          in: path\n          name: Type\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/events.v1.subscription.subscribed_event\"\n          description: OK\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    post:\n      description: Update an Event for a Subscription.\n      operationId: UpdateSubscribedEvent\n      parameters:\n        - description: The unique SID identifier of the Subscription.\n          in: path\n          name: SubscriptionSid\n          required: true\n          schema:\n            maxLength: 34\n            minLength: 34\n            pattern: ^DF[0-9a-fA-F]{32}$\n            type: string\n        - description: Type of event being subscribed to.\n          in: path\n          name: Type\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                SchemaVersion:\n                  description: The schema version that the subscription should use.\n                  type: integer\n              title: UpdateSubscribedEventRequest\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/events.v1.subscription.subscribed_event\"\n          description: OK\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    servers:\n      - url: https://events.twilio.com\n    x-twilio:\n      defaultOutputProperties:\n        - type\n        - schema_version\n        - account_sid\n        - subscription_sid\n      parent: /Subscriptions\n      pathType: instance\n  /v1/Types:\n    description: Event Types available\n    get:\n      description: Retrieve a paginated list of all the available Event Types.\n      operationId: ListEventType\n      parameters:\n        - description: A string parameter filtering the results to return only the Event Types using a given schema.\n          in: query\n          name: SchemaId\n          schema:\n            type: string\n        - description: How many resources to return in each list page. The default is 50, and the maximum is 1000.\n          in: query\n          name: PageSize\n          schema:\n            maximum: 1000\n            minimum: 1\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  meta:\n                    properties:\n                      first_page_url:\n                        format: uri\n                        type: string\n                      key:\n                        type: string\n                      next_page_url:\n                        format: uri\n                        type: string\n                      page:\n                        type: integer\n                      page_size:\n                        type: integer\n                      previous_page_url:\n                        format: uri\n                        type: string\n                      url:\n                        format: uri\n                        type: string\n                    type: object\n                  types:\n                    items:\n                      $ref: \"#/components/schemas/events.v1.event_type\"\n                    type: array\n                title: ListEventTypeResponse\n                type: object\n          description: OK\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    servers:\n      - url: https://events.twilio.com\n    x-twilio:\n      className: event_type\n      defaultOutputProperties:\n        - type\n        - schema_id\n        - description\n      pathType: list\n  \"/v1/Types/{Type}\":\n    description: Event Types available\n    get:\n      description: Fetch a specific Event Type.\n      operationId: FetchEventType\n      parameters:\n        - description: A string that uniquely identifies this Event Type.\n          in: path\n          name: Type\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/events.v1.event_type\"\n          description: OK\n      security:\n        - accountSid_authToken: []\n      x-maturity:\n        - Beta\n    servers:\n      - url: https://events.twilio.com\n    x-twilio:\n      className: event_type\n      defaultOutputProperties:\n        - type\n        - schema_id\n        - description\n      pathType: instance\ncomponents:\n  schemas:\n    events.v1.event_type:\n      properties:\n        date_created:\n          description: The date this Event Type was created.\n          format: date-time\n          nullable: true\n          type: string\n        date_updated:\n          description: The date this Event Type was updated.\n          format: date-time\n          nullable: true\n          type: string\n        description:\n          description: Event Type description.\n          nullable: true\n          type: string\n        links:\n          format: uri-map\n          nullable: true\n          type: object\n        schema_id:\n          description: The Schema identifier for this Event Type.\n          nullable: true\n          type: string\n        type:\n          description: The Event Type identifier.\n          nullable: true\n          type: string\n        url:\n          description: The URL of this resource.\n          format: uri\n          nullable: true\n          type: string\n      type: object\n    events.v1.schema:\n      properties:\n        id:\n          description: Schema Identifier.\n          nullable: true\n          type: string\n        latest_version:\n          description: Latest schema version.\n          nullable: true\n          type: integer\n        latest_version_date_created:\n          description: The date that the latest schema version was created.\n          format: date-time\n          nullable: true\n          type: string\n        links:\n          description: Nested resource URLs.\n          format: uri-map\n          nullable: true\n          type: object\n        url:\n          description: The URL of this resource.\n          format: uri\n          nullable: true\n          type: string\n      type: object\n    events.v1.schema.schema_version:\n      properties:\n        date_created:\n          description: The date the schema version was created.\n          format: date-time\n          nullable: true\n          type: string\n        id:\n          description: The unique identifier of the schema.\n          nullable: true\n          type: string\n        raw:\n          format: uri\n          nullable: true\n          type: string\n        schema_version:\n          description: The version of this schema.\n          nullable: true\n          type: integer\n        url:\n          description: The URL of this resource.\n          format: uri\n          nullable: true\n          type: string\n      type: object\n    events.v1.sink:\n      properties:\n        date_created:\n          description: The date this Sink was created\n          format: date-time\n          nullable: true\n          type: string\n        date_updated:\n          description: The date this Sink was updated\n          format: date-time\n          nullable: true\n          type: string\n        description:\n          description: Sink Description\n          nullable: true\n          type: string\n        links:\n          description: Nested resource URLs.\n          format: uri-map\n          nullable: true\n          type: object\n        sid:\n          description: A string that uniquely identifies this Sink.\n          maxLength: 34\n          minLength: 34\n          nullable: true\n          pattern: ^DG[0-9a-fA-F]{32}$\n          type: string\n        sink_configuration:\n          description: JSON Sink configuration.\n          nullable: true\n        sink_type:\n          description: Sink type.\n          enum:\n            - kinesis\n            - webhook\n            - segment\n          nullable: true\n          type: string\n        status:\n          description: The Status of this Sink\n          enum:\n            - initialized\n            - validating\n            - active\n            - failed\n          nullable: true\n          type: string\n        url:\n          description: The URL of this resource.\n          format: uri\n          nullable: true\n          type: string\n      type: object\n    events.v1.sink.sink_test:\n      properties:\n        result:\n          description: Feedback indicating whether the test event was generated.\n          nullable: true\n          type: string\n      type: object\n    events.v1.sink.sink_validate:\n      properties:\n        result:\n          description: Feedback indicating whether the given Sink was validated.\n          nullable: true\n          type: string\n      type: object\n    events.v1.subscription:\n      properties:\n        account_sid:\n          description: Account SID.\n          maxLength: 34\n          minLength: 34\n          nullable: true\n          pattern: ^AC[0-9a-fA-F]{32}$\n          type: string\n        date_created:\n          description: The date this Subscription was created\n          format: date-time\n          nullable: true\n          type: string\n        date_updated:\n          description: The date this Subscription was updated\n          format: date-time\n          nullable: true\n          type: string\n        description:\n          description: Subscription description\n          nullable: true\n          type: string\n        links:\n          description: Nested resource URLs.\n          format: uri-map\n          nullable: true\n          type: object\n        sid:\n          description: A string that uniquely identifies this Subscription.\n          maxLength: 34\n          minLength: 34\n          nullable: true\n          pattern: ^DF[0-9a-fA-F]{32}$\n          type: string\n        sink_sid:\n          description: Sink SID.\n          maxLength: 34\n          minLength: 34\n          nullable: true\n          pattern: ^DG[0-9a-fA-F]{32}$\n          type: string\n        url:\n          description: The URL of this resource.\n          format: uri\n          nullable: true\n          type: string\n      type: object\n    events.v1.subscription.subscribed_event:\n      properties:\n        account_sid:\n          description: Account SID.\n          maxLength: 34\n          minLength: 34\n          nullable: true\n          pattern: ^AC[0-9a-fA-F]{32}$\n          type: string\n        schema_version:\n          description: The schema version that the subscription should use.\n          nullable: true\n          type: integer\n        subscription_sid:\n          description: Subscription SID.\n          maxLength: 34\n          minLength: 34\n          nullable: true\n          pattern: ^DF[0-9a-fA-F]{32}$\n          type: string\n        type:\n          description: Type of event being subscribed to.\n          nullable: true\n          type: string\n        url:\n          description: The URL of this resource.\n          format: uri\n          nullable: true\n          type: string\n      type: object\n  securitySchemes:\n    accountSid_authToken:\n      scheme: basic\n      type: http\nx-maturity:\n  - description: PLEASE NOTE that this is a Beta product that is subject to change. Use it with caution.\n    name: Beta\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/twilio.com/twilio_events_v1/1.29.2/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/twilio.com/twilio_events_v1/1.29.2/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/Sinks\": post: requestBody: contents: application/x-www-form-urlencoded: form parameter \"SinkConfiguration\": any type parameter not implemented",
	"NotImplemented": [
		"any type parameter"
	]
}