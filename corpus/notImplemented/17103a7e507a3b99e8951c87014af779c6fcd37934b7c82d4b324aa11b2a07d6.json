{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nhsconnect/integration-adaptors"
		},
		"file": {
			"name": "MHS-Outbound.yaml",
			"size": 0,
			"path": "mhs/MHS-Outbound.yaml",
			"byteSize": 8202,
			"content": "openapi: 3.0.2\ninfo:\n  title: MHS Outbound Service API\n  version: 1.0.0\n  description: |\n    ## Summary\n    The MHS Outbound service is responsible for listening for requests from the wider local system context and transmitting these to Spine.\n\n    The MHS adaptor supports a number of patterns. For more information on these patterns then you may find it beneficial to familarise yourself with Spines EIS and in particular, Part 3 - Message Interaction Map.  \n    The [EIS](https://digital.nhs.uk/developer/api-specifications/spine-external-interface-specification) is a complete set of technical documents with the necessary information to connect to the Spine national services via HL7 V3 APIs.\n    \n    For more information about MHS then please visit the NHS Digital Developer portal.\n\n    ## Sync-Async\n    In this pattern, a request is made to Spine, but the response is not provided on the same connection. Instead, spine initiates a connection back to your MHS with the response. \n    I.e the response from Spine is delivered like a call back to your MHS. The MHS Adaptor has hidden all this asynchronous callback detail behind a synchronous interface, so your HTTP client just sees a simple HTTP request/response. \n    This is what the MHS Adaptor has termed the \"Wait for Response wrapper\". When you set the wait-for-response message header to true you are requesting the MHS Adaptor to hide this asynchronous response from you, and deliver the response in the same HTTP connection.\n\n    ## Environments and testing\n    As the MHS adaptor is implemented client side, there are no sandbox or integration environments to test this API directly against.\n\n  contact: \n    name: Contact Name for the Outbound Service\n    url: 'https://digital.nhs.uk/developer'\n    email: tbc\nservers:\n- url: https://virtserver.swaggerhub.com/petervdm/outbound/1.0.0\npaths:\n  /:\n    post:\n      summary: Make a request to the MHS\n      description: Make a request to the MHS\n      operationId: postMHS\n      parameters:\n      - name: Interaction-Id\n        in: header\n        description: |- \n          This is the unique ID of the interaction that you want to invoke. e.g. for the SCR PSIS Document List Data Request, the interaction ID is QUPC_IN160101UK05\n          The full list of interation ID's can be found within the [EIS](https://digital.nhs.uk/developer/api-specifications/spine-external-interface-specification) Part 3 Message Interaction Map.             \n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: wait-for-response\n        in: header\n        description: |-\n          ### Where Interactions support wait-for-response:\n          When you set the wait-for-response message header to true you are requesting the MHS Adaptor to hide this asynchronous response from you, and deliver the response in the same HTTP connection.\n          When setting to false for an async interaction, the HTTP response will be an acknowledgement that the request was successfully sent to Spine.  The Spine response will subsquently put onto the inbound queue.\n\n          ### Where interactions dont support wait-for-response:\n          This header must be set to false.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - \"true\"\n          - \"false\"\n      - name: from-asid\n        in: header\n        description: The ASID of the sending system. This should be the same as the\n          from-asid value within the HL7 payload. This header is optional and only\n          required/used for interactions that use the sync workflow.\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: Message-Id\n        in: header\n        description: |-\n          Message ID of the message to send to Spine. If not sent, the MHS generates a random message ID.\n          When performing async requests where the response is put on the inbound queue, the message ID will be put with the response on the queue.\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: Correlation-Id\n        in: header\n        description: |-\n          Correlation ID that is used when logging. If not passed, a random correlation ID is generated. The idea is that log messages produced by the MHS include this correlation ID which allows correlating logs relating to a single request together. \n          If the supplier system uses it's own correlation ID when producing it's logs, then that should be passed in here, so that logs for a single request can be tied together across the supplier system and the MHS.\n          When performing async requests where the response is put on the inbound queue, the correlation ID will be put with the response on the queue.\n          Note that this correlation ID gets sent to/from Spine.\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: ods-code\n        in: header\n        description: ODS Code receiving system. It defaults to Spines ODS Code if\n          not porvided and is primarily used for indirect messaging, i.e. forward\n          reliable for example, where the destination system is not Spine. The ODS\n          Code is used to lookup the constract properties in SDS.\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        description: The HL7 payload (and optional attachments) to be sent to Spine.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RequestBody'\n        required: true\n      responses:\n        \"200\":\n          description: Successful response from Spine.\n          content:\n            text/xml: {}\n        \"202\":\n          description: Acknowledgement that we successfully sent the message to Spine\n            (response will come asynchronously on the inbound queue).\n  /healthcheck:\n    get:\n      summary: Healthcheck endpoint\n      description: This endpoint just returns a HTTP 200 response and does no further\n        processing. This endpoint is intended to be used by load balancers/other infrastructure\n        to check that the server is running.\n      operationId: getHealthcheck\n      responses:\n        \"200\":\n          description: The only response this endpoint returns.\ncomponents:\n  schemas:\n    Attachment:\n      required:\n      - content_type\n      - description\n      - is_base64\n      - payload\n      type: object\n      properties:\n        is_base64:\n          type: boolean\n          description: Whether the attachment payload is base64-encoded or not. This\n            is only required for binary attachments eg images.\n        content_type:\n          type: string\n          description: Content type of the attachment\n          enum:\n          - text/plain\n          - text/html\n          - application/pdf\n          - text/xml\n          - application/xml\n          - text/rtf\n          - audio/basic\n          - audio/mpeg\n          - image/png\n          - image/gif\n          - image/jpeg\n          - image/tiff\n          - video/mpeg\n          - application/msword\n          - application/octet-stream\n        payload:\n          maxLength: 5000000\n          minLength: 1\n          type: string\n          description: The attachment, possibly base64-encoded as per is_base64.\n        description:\n          maxLength: 100\n          minLength: 1\n          type: string\n          description: Description of the attachment\n    RequestBody:\n      required:\n      - payload\n      type: object\n      properties:\n        attachments:\n          maxItems: 98\n          type: array\n          description: Optional attachments to send with the payload. Only for use\n            for interactions that support sending attachments.\n          items:\n            $ref: '#/components/schemas/Attachment'\n          default: []\n        payload:\n          maxLength: 5000000\n          minLength: 1\n          type: string\n          description: HL7 Payload to send to Spine\n",
			"canonicalURL": "/github.com/nhsconnect/integration-adaptors@8420d9d4b800223bff6a648015679684f5aba38c/-/blob/mhs/MHS-Outbound.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/nhsconnect/integration-adaptors/blob/8420d9d4b800223bff6a648015679684f5aba38c/mhs/MHS-Outbound.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/\": post: responses: 200: contents: unsupported content types: [text/xml]",
	"NotImplemented": [
		"unsupported content types"
	]
}