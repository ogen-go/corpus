{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/otto-de/marketplace-php-sdk"
		},
		"file": {
			"name": "products-interface.yml",
			"size": 0,
			"path": "openapi-doc/products-interface.yml",
			"byteSize": 48142,
			"content": "openapi: 3.0.0\ninfo:\n  description: |-\n    Manage your product data, send images and\n                      much more.\n  version: V2\n  title: Public Partner Product API\ntags:\n  - name: Brands\n  - name: Categories\n  - name: Marketplace Status\n  - name: Product Active Status\n  - name: Products\npaths:\n  /v2/products:\n    get:\n      tags:\n        - Products\n      summary: Read your product variations. The total number of results could be\n        limited by specifying query parameters. Generally the resulting product\n        variations will be paginated. The default page length is 100 product\n        variations per response, also the page size limit. The links specified\n        in the result can be used to page through the total result space.\n      description: \"\"\n      operationId: getPartnerProducts\n      parameters:\n        - name: sku\n          in: query\n          description: search for product variations by their sku value. Use this if your\n            sku values contain slash ('/') or dot ('.') characters.\n          required: false\n          schema:\n            type: string\n        - name: productReference\n          in: query\n          description: search for product variations by their productReference value\n          required: false\n          schema:\n            type: string\n        - name: category\n          in: query\n          description: search for product variations by their category value\n          required: false\n          schema:\n            type: string\n        - name: brand\n          in: query\n          description: search for product variations by their brand value\n          required: false\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: limit\n          in: query\n          description: proposed limit for the number of products per response page (at most\n            100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductVariationApiResult\"\n        \"401\":\n          description: The technical user could not be authenticated\n        \"403\":\n          description: The technical user is not authorized to read the specified product\n            variations. This may be the case, if the user has not the necessary\n            role.\n    post:\n      tags:\n        - Products\n      summary: Create or update your product variations and get a process-id to query\n        results. The limit for the number of product variations in one request\n        is 500.\n      description: \"\"\n      operationId: createOrUpdateProductVariations\n      parameters:\n        - name: X-Request-Timestamp\n          in: header\n          description: Holds the client side update request timestamp\n          required: false\n          schema:\n            type: string\n            format: date-time\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/ProductVariation\"\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductProcessProgress\"\n        \"202\":\n          description: The request for a modification of the specified product variations\n            was accepted and will be executed\n        \"401\":\n          description: The technical user could not be authenticated\n        \"403\":\n          description: The technical user is not authorized to modify the specified product\n            variations. This may be the case, if the user has not the necessary\n            role.\n  /v2/products/active-status:\n    get:\n      tags:\n        - Product Active Status\n      summary: Read the active status of your product variations. The total number of\n        results could be limited by specifying query parameters. Generally the\n        resulting active status values will be paginated. The default page\n        length is 100 active status entries per response, also the page size\n        limit. The links specified in the result can be used to page through the\n        total result space. Replaces corresponding online-status endpoint which\n        now is marked as deprecated.\n      description: \"\"\n      operationId: getActiveStatus\n      parameters:\n        - name: sku\n          in: query\n          description: search for product variations by their sku value. Use this if your\n            sku values contain slash ('/') or dot ('.') characters.\n          required: false\n          schema:\n            type: string\n        - name: productReference\n          in: query\n          description: search for product variations by their productReference value\n          required: false\n          schema:\n            type: string\n        - name: category\n          in: query\n          description: search for product variations by their category value\n          required: false\n          schema:\n            type: string\n        - name: brand\n          in: query\n          description: search for product variations by their brand value\n          required: false\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: limit\n          in: query\n          description: proposed limit for the number of active status values per response\n            page (at most 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ActiveStatusListResponse\"\n        \"401\":\n          description: The technical user could not be authenticated\n        \"403\":\n          description: The technical user is not authorized to read the active status of\n            the specified product variations. This may be the case, if the user\n            has not the necessary role.\n    post:\n      tags:\n        - Product Active Status\n      summary: Update the active status of your product variations and get a process-id\n        to query results.\n      description: \"\"\n      operationId: updateActiveStatus\n      parameters:\n        - name: X-Request-Timestamp\n          in: header\n          description: Holds the optional client side update request timestamp, in ISO\n            DateTime format\n          required: false\n          example: \"2000-10-31T01:30:10.000-05:00\"\n          schema:\n            type: string\n            format: yyyy-MM-dd'T'HH:mm:ss.SSSXXX\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ActiveStatusListRequest\"\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductProcessProgress\"\n        \"202\":\n          description: The request for a modification of the active date of the specified\n            product variation was accepted and will be executed\n        \"400\":\n          description: The request body is no valid JSON document\n        \"401\":\n          description: The technical user could not be authenticated\n        \"403\":\n          description: The technical user is not authorized to modify the active status of\n            the specified product variations. This may be the case, if the user\n            has not the necessary role.\n  /v2/products/brands:\n    get:\n      tags:\n        - Brands\n      summary: Read the list of brands that are known on the Otto market place.\n      description: \"\"\n      operationId: getBrands\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Brand\"\n        \"401\":\n          description: The technical user could not be authenticated\n        \"403\":\n          description: The technical user is not authorized to read a list of known brands.\n            This may be the case, if the user has not the necessary role.\n  /v2/products/categories:\n    get:\n      tags:\n        - Categories\n      summary: Read the product categories and associated attributes of the OTTO market\n        place. The total number of results could be limited by specifying query\n        parameters. Generally the resulting product categories values will be\n        paginated. The default page length is 100 product categories per\n        response, the page size limit is 2000. The links specified in the result\n        can be used to page through the total result space.\n      description: \"\"\n      operationId: getCategoryGroups\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: limit\n          in: query\n          description: proposed limit for the number of product categories per response\n            page  (at most 2000)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CategoryGroups\"\n        \"401\":\n          description: The technical user could not be authenticated\n        \"403\":\n          description: The technical user is not authorized to read the product categories.\n            This may be the case, if the user has not the necessary role.\n  /v2/products/marketplace-status:\n    get:\n      tags:\n        - Marketplace Status\n      summary: Read the marketplace status for your product variations. The total\n        number of results could be limited by specifying query parameters.\n        Generally the resulting marketplace status will be paginated. The\n        default page length is 100 product variations per response, also the\n        page size limit. The links specified in the result can be used to page\n        through the total result space.\n      description: \"\"\n      operationId: getMarketPlaceStatusList\n      parameters:\n        - name: sku\n          in: query\n          description: search for product variations by their sku value. Use this if your\n            sku values contain slash ('/') or dot ('.') characters.\n          required: false\n          schema:\n            type: string\n        - name: productReference\n          in: query\n          description: search marketplace status by the productReference value of the\n            related product variations\n          required: false\n          schema:\n            type: string\n        - name: category\n          in: query\n          description: search marketplace status by the category value of the related\n            product variations\n          required: false\n          schema:\n            type: string\n        - name: brand\n          in: query\n          description: search marketplace status by the brand value of the related product\n            variations\n          required: false\n          schema:\n            type: string\n        - name: page\n          in: query\n          description: page to load\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: limit\n          in: query\n          description: proposed limit for the number of marketplace status per response\n            page (at most 1000)\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: marketPlaceStatus\n          in: query\n          description: only include items that match any of the provided status\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - PENDING\n                - ONLINE\n                - RESTRICTED\n                - REJECTED\n                - INACTIVE\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MarketPlaceStatusApiResult\"\n        \"304\":\n          description: The request included an If-Modified-Since header, but the resource\n            has not been modified since the specified date.\n        \"401\":\n          description: The technical user could not be authenticated\n        \"403\":\n          description: The technical user is not authorized to read the specified\n            marketplace status. This may be the case, if the user has not the\n            necessary role.\n  \"/v2/products/update-tasks/{processUuid}\":\n    get:\n      tags:\n        - Products\n      summary: \"Request the results of a product data delivery. The response will\n        contain the links for the different parts of the result: products\n        successfully created or updated, products with failures, products which\n        did not contain any changes compared to the last sent version.\"\n      description: \"\"\n      operationId: progressByProcessId\n      parameters:\n        - name: processUuid\n          in: path\n          description: search for a product data delivery result by its processUuid.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ProductProcessProgress\"\n        \"401\":\n          description: The technical user could not be authenticated\n        \"403\":\n          description: The technical user is not authorized to read the specified product\n            variations. This may be the case, if the user has not the necessary\n            role.\n        \"404\":\n          description: The product data delivery results with the specified processUuid\n            value could not be found.\n  \"/v2/products/update-tasks/{processUuid}/failed\":\n    get:\n      tags:\n        - Products\n      summary: Request the failed products of the product data delivery with the linked\n        processUuid. The response will contain a list of failed products with\n        associated error details.\n      description: \"\"\n      operationId: failedByProcessId\n      parameters:\n        - name: processUuid\n          in: path\n          description: search for the failed products of a product data delivery identified\n            by its processUuid.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ProductProcessResult\"\n        \"401\":\n          description: The technical user could not be authenticated\n        \"403\":\n          description: The technical user is not authorized to read the specified product\n            variations. This may be the case, if the user has not the necessary\n            role.\n        \"404\":\n          description: The product data delivery results with the specified processUuid\n            value could not be found.\n  \"/v2/products/update-tasks/{processUuid}/succeeded\":\n    get:\n      tags:\n        - Products\n      summary: Request the succeeded products of the product data delivery with the\n        linked processUuid. The response will contain a list of successfully\n        delivered products.\n      description: \"\"\n      operationId: succeededByProcessId\n      parameters:\n        - name: processUuid\n          in: path\n          description: search for the succeeded products of a product data delivery\n            identified by its processUuid.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ProductProcessResult\"\n        \"401\":\n          description: The technical user could not be authenticated\n        \"403\":\n          description: The technical user is not authorized to read the specified product\n            variations. This may be the case, if the user has not the necessary\n            role.\n        \"404\":\n          description: The product data delivery results with the specified processUuid\n            value could not be found.\n  \"/v2/products/update-tasks/{processUuid}/unchanged\":\n    get:\n      tags:\n        - Products\n      summary: Request the unchanged products of the product data delivery with the\n        linked processUuid. The response will contain a list of unchanged\n        products.\n      description: \"\"\n      operationId: unchangedByProcessId\n      parameters:\n        - name: processUuid\n          in: path\n          description: search for the unchanged products of a product data delivery\n            identified by its processUuid.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ProductProcessResult\"\n        \"401\":\n          description: The technical user could not be authenticated\n        \"403\":\n          description: The technical user is not authorized to read the specified product\n            variations. This may be the case, if the user has not the necessary\n            role.\n        \"404\":\n          description: The product data delivery results with the specified processUuid\n            value could not be found.\n  \"/v2/products/{sku}\":\n    get:\n      tags:\n        - Products\n      summary: Read a single product variation.\n      description: \"\"\n      operationId: getProductVariation\n      parameters:\n        - name: sku\n          in: path\n          description: search for a product variation by its SKU value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductVariation\"\n        \"401\":\n          description: The technical user could not be authenticated\n        \"403\":\n          description: The technical user is not authorized to read the specified product\n            variations. This may be the case, if the user has not the necessary\n            role.\n        \"404\":\n          description: The product variation with the specified sku value could not be\n            found.\n  \"/v2/products/{sku}/active-status\":\n    get:\n      tags:\n        - Product Active Status\n      summary: Read the active status of a single product variation. Replaces\n        corresponding online-status endpoint which now is marked as deprecated.\n      description: \"\"\n      operationId: getVariationActiveStatus\n      parameters:\n        - name: sku\n          in: path\n          description: search for a product variation by its SKU value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ActiveStatus\"\n        \"401\":\n          description: The technical user could not be authenticated\n        \"403\":\n          description: The technical user is not authorized to read the active status of\n            the specified product variations. This may be the case, if the user\n            has not the necessary role.\n        \"404\":\n          description: The product variation with the specified sku value could not be\n            found.\n  \"/v2/products/{sku}/marketplace-status\":\n    get:\n      tags:\n        - Marketplace Status\n      summary: Read the marketplace status for a single product variation.\n      description: \"\"\n      operationId: getMarketPlaceStatus\n      parameters:\n        - name: sku\n          in: path\n          description: search for a marketplace status by its SKU value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MarketPlaceStatus\"\n        \"401\":\n          description: The technical user could not be authenticated\n        \"403\":\n          description: The technical user is not authorized to read the specified\n            marketplace status. This may be the case, if the user has not the\n            necessary role.\n        \"404\":\n          description: The product variation with the specified sku value could not be\n            found.\ncomponents:\n  schemas:\n    ActiveStatus:\n      type: object\n      properties:\n        sku:\n          type: string\n          example: 82388894-5883-488\n          description: Partner-unique identifier for a product variation provided by the\n            partner\n        active:\n          type: boolean\n          example: true\n          description: The product variation is supposed to be active or not\n        lastModified:\n          type: string\n          format: date-time\n          example: \"2019-06-18T06:12:36.000Z\"\n          description: the timestamp (GMT date and time) of the last modification of the\n            active status\n          readOnly: true\n    ActiveStatusListRequest:\n      type: object\n      properties:\n        status:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ActiveStatus\"\n    ActiveStatusListResponse:\n      type: object\n      properties:\n        status:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ActiveStatus\"\n        links:\n          type: array\n          description: a list of links that can be used for pagination (among others).\n          items:\n            $ref: \"#/components/schemas/Link\"\n    AdditionalRequirement:\n      type: object\n      properties:\n        name:\n          type: string\n          example: normPriceInfo\n          description: the name of the product attribute.\n        jsonPath:\n          type: string\n          example: $.productVariations[*].pricing.normPriceInfo\n          description: the JSON path leading to the specific product attribute.\n        description:\n          type: string\n          example: Die Produktkategorie fällt unter die Preisangabenverordnung, weshalb\n            ein Grundpreis angegeben werden muss.\n          description: a brief human readable description of the requirement\n        reference:\n          type: string\n          example: https://api.otto.market/docs/03_Products/v2/products-interface.html\n          description: a link to the official documentation that describes the requirement\n        condition:\n          $ref: \"#/components/schemas/Condition\"\n        featureRelevance:\n          type: array\n          example: [\"LEGAL\"]\n          description: a list of feature relevances that can describe the reason for the\n            requirement.\n          items:\n            type: string\n    Attribute:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Bundweite\n          description: The name of the describing attribute, like 'color' or 'size'.\n        values:\n          type: array\n          example: [\"34\"]\n          description: The value for the given name, like 'blue' or 'S', as a JSON array\n          items:\n            type: string\n        additional:\n          type: boolean\n          example: true\n          description: true, if the attribute is not defined by the marketplace.\n    AttributeDefinition:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Durchmesser\n          description: the name of the attribute. This attribute name has to be used within\n            the product description.\n        attributeGroup:\n          type: string\n          example: Maße \u0026 Gewicht\n          description: title of the attributes displayed in the product details in the shop.\n        type:\n          type: string\n          example: FLOAT\n          description: defines the format of the attribute value, such as string, integer,\n            etc.\n        multiValue:\n          type: boolean\n          example: true\n          description: if the value is true, several values can be transferred to this\n            attribute (polyvalence attribute); otherwise, only a single value\n            may be transferred to this attribute.\n        unit:\n          type: string\n          example: cm\n          description: the values must be transferred in the specified unit.\n        unitDisplayName:\n          type: string\n          example: Zentimeter\n          description: the value gets displayed with this unit in the shop.\n        allowedValues:\n          type: array\n          example: natur bunt grau ...\n          description: only the listed values are permitted for the attribute.\n          items:\n            type: string\n        featureRelevance:\n          type: array\n          example: FILTER\n          description: describes what the attribute can be used for and where it gets\n            displayed in the shop.\n          items:\n            type: string\n        relatedMediaAssets:\n          type: array\n          description: mandatory media assets for the category\n          items:\n            type: string\n        relevance:\n          type: string\n          example: HIGH\n          description: the relevance of the attribute.\n        description:\n          type: string\n          example: some textual description\n          description: additional information for the attribute.\n        exampleValues:\n          type: array\n          example: Edelstahl Aluminium Stahl\n          description: example values for the attribute.\n          items:\n            type: string\n        recommendedValues:\n          type: array\n          example: modern klassisch Landhaus Vintage\n          description: use the listed values to get full navigation and filter features on\n            otto.de. If no suitable value exists, then enter your own value.\n          items:\n            type: string\n        reference:\n          type: string\n          example: http://wikipedia.de/something\n          description: reference to further documentation.\n    Brand:\n      type: object\n      properties:\n        name:\n          type: string\n          example: adidas\n          description: the name of the brand as it is known on the OTTO marketplace.\n    CategoryGroup:\n      type: object\n      properties:\n        categoryGroup:\n          type: string\n          description: a category group defines a list of categories and the market place\n            attributes for these categories.\n        categories:\n          type: array\n          example: Farbe\n          description: the list of the categories for this category group.\n          items:\n            type: string\n        variationThemes:\n          type: array\n          description: overview of all attributes that can be used to create variantions.\n          items:\n            type: string\n        title:\n          type: string\n          description: shows how our product title is built\n        attributes:\n          type: array\n          description: list of the market place attributes for the categories of this group.\n          items:\n            $ref: \"#/components/schemas/AttributeDefinition\"\n        lastModified:\n          type: string\n          format: date-time\n          example: \"2021-07-02T01:35:57.181Z\"\n          description: last modification date of the category.\n        additionalRequirements:\n          type: array\n          description: a list of general requirements for certain product attributes that\n            apply to all categories in the category group\n          items:\n            $ref: \"#/components/schemas/AdditionalRequirement\"\n    CategoryGroups:\n      type: object\n      properties:\n        categoryGroups:\n          type: array\n          description: a list of the category groups defined on the OTTO market place.\n          items:\n            $ref: \"#/components/schemas/CategoryGroup\"\n        links:\n          type: array\n          description: a list of links that can be used for pagination (among others).\n          items:\n            $ref: \"#/components/schemas/Link\"\n    Condition:\n      type: object\n      properties:\n        name:\n          type: string\n          description: the name of an attribute.\n        jsonPath:\n          type: string\n          description: the JSON path that leads to the attribute value.\n        value:\n          type: string\n          description: the value of the attribute to which the requirement applies.\n    Delivery:\n      type: object\n      required:\n        - deliveryTime\n        - type\n      properties:\n        type:\n          type: string\n          example: PARCEL\n          description: The type of the delivery as described in the enumeration. Right now\n            we only support PARCEL, FORWARDER_PREFERREDLOCATION and\n            FORWARDER_CURBSIDE.\n          enum:\n            - PARCEL\n            - FORWARDER_PREFERREDLOCATION\n            - FORWARDER_CURBSIDE\n        deliveryTime:\n          type: integer\n          format: int32\n          example: 1\n          description: Mandatory. The delivery time in days, with allowed values from 1 to\n            999.\n    Link:\n      type: object\n      properties:\n        rel:\n          type: string\n          example: self\n          description: link relation type\n          enum:\n            - self\n            - prev\n            - next\n        href:\n          type: string\n          example: .../products?page=0\u0026limit=100\n          description: the linked reference as URI\n    Logistics:\n      type: object\n      properties:\n        packingUnitCount:\n          type: integer\n          format: int32\n          example: 3\n          description: The number of packing units.\n        packingUnits:\n          type: array\n          description: The measurements of the packing units in g and mm.\n          items:\n            $ref: \"#/components/schemas/PackingUnit\"\n    MarketPlaceStatus:\n      type: object\n      properties:\n        sku:\n          type: string\n          example: 82388894-5883-488\n          description: Partner-unique identifier for a product variation provided by the\n            partner\n        status:\n          type: string\n          example: RESTRICTED\n          description: the status of the variation on the OTTO market place\n          enum:\n            - PENDING\n            - ONLINE\n            - RESTRICTED\n            - REJECTED\n            - INACTIVE\n        errors:\n          type: array\n          description: errors that occurred when processing the variation\n          items:\n            $ref: \"#/components/schemas/MarketPlaceStatusError\"\n        information:\n          type: array\n          description: information for product optimization on the OTTO market place\n          items:\n            $ref: \"#/components/schemas/MarketPlaceStatusInformation\"\n        links:\n          type: array\n          description: contains the link to the partner variation data and to the product\n            in OTTO shop\n          items:\n            $ref: \"#/components/schemas/MarketPlaceStatusLink\"\n        lastModified:\n          type: string\n          format: date-time\n          example: \"2021-07-02T09:30:52.093Z\"\n          description: last change of the marketplace status\n    MarketPlaceStatusApiResult:\n      type: object\n      properties:\n        marketPlaceStatus:\n          type: array\n          items:\n            $ref: \"#/components/schemas/MarketPlaceStatus\"\n        links:\n          type: array\n          description: a list of links that can be used for pagination.\n          items:\n            $ref: \"#/components/schemas/Link\"\n    MarketPlaceStatusError:\n      type: object\n      properties:\n        code:\n          type: string\n          example: 800020 - PRODUCTDATASHEET_MISSING\n          description: code to identify the error\n        title:\n          type: string\n          example: Das Produktdatenblatt fehlt.\n          description: short description of the error\n    MarketPlaceStatusInformation:\n      type: object\n      properties:\n        code:\n          type: string\n          example: 300007 - INCOMPLETE_MEDIA_ASSET_IMPORT\n          description: code to identify the information\n        title:\n          type: string\n          example: Die Bilder werden zur Zeit verarbeitet. Wir bitten um etwas Geduld.\n            Wenn der Status sich innerhalb der nächsten 24 Stunden nicht\n            verändert, wenden Sie sich bitte an support@otto.market.\n          description: short description of the information\n    MarketPlaceStatusLink:\n      type: object\n      properties:\n        rel:\n          type: string\n          example: shop\n          description: link relation type\n          enum:\n            - variation\n            - shop\n        href:\n          type: string\n          example: https://www.otto.de/p/myProduct\n          description: the linked reference as URI\n    MediaAsset:\n      type: object\n      properties:\n        type:\n          type: string\n          example: IMAGE\n          description: The type of the provided media asset. At least one media asset of\n            type 'IMAGE' must be provided. The number of media assets of type\n            'IMAGE' is not limited.\n          enum:\n            - IMAGE\n            - DIMENSIONAL_DRAWING\n            - COLOR_VARIANT\n            - ENERGY_EFFICIENCY_LABEL\n            - MATERIAL_SAMPLE\n            - PRODUCT_DATASHEET\n            - USER_MANUAL\n            - MANUFACTURER_WARRANTY\n            - SAFETY_DATASHEET\n            - ASSEMBLY_INSTRUCTIONS\n            - WARNING_LABEL\n        location:\n          type: string\n          format: uri\n          example: http://apartners.url/image-location\n          description: The partners location of the media asset as a valid URL. OTTO market\n            will use the link for downloading the media asset and providing to\n            otto.de.\n    MonetaryAmount:\n      type: object\n      properties:\n        amount:\n          type: number\n          example: 19.95\n          description: Holds the value of the monetary amount expressed in a currency, e.g.\n            euros. The number format expects a decimal point, like 10.99.\n            Numbers without a decimal point are taken as a unit of the given\n            currency, e.g. 10 is taken as 10 euros.\n        currency:\n          type: string\n          example: EUR\n          description: Holds the currency of the monetary amount expressed as a shortcut\n            according to ISO 4217 and\n            http://publications.europa.eu/code/de/de-5000700.htm\n    NormPriceInfo:\n      type: object\n      properties:\n        normAmount:\n          type: integer\n          format: int32\n          example: 100\n          description: The norm packaging size.\n          enum:\n            - 1\n            - 100\n            - 1000\n        normUnit:\n          type: string\n          example: g\n          description: The name of the unit the norm price is based on.\n          enum:\n            - Stk\n            - qm\n            - kg\n            - l\n            - m\n            - ml\n            - g\n            - Paar\n            - RM\n            - dm3\n        salesAmount:\n          type: number\n          example: 500\n          description: The packaging size of the sales unit.\n        salesUnit:\n          type: string\n          example: g\n          description: The name of the unit the sales price is based on.\n          enum:\n            - Stk\n            - qm\n            - kg\n            - l\n            - m\n            - ml\n            - g\n            - Paar\n            - RM\n            - dm3\n      description: \"The information about normed prices, must be provided completely, or\n        not at all. The representation of the normprice have to contain from the\n        following values for normAmount and normUnit: 1 pcs,1 sqm,1 kg,1 l,1\n        m,100 ml,100 g,1 g,1000 g,1 pair,1 RM,1 dm3.\"\n    PackingUnit:\n      type: object\n      properties:\n        weight:\n          type: integer\n          format: int32\n          example: 365\n          description: The weight of a packing unit in grams.\n        width:\n          type: integer\n          format: int32\n          example: 600\n          description: The width of a packing unit in millimeters.\n        height:\n          type: integer\n          format: int32\n          example: 200\n          description: The height of a packing unit in millimeters.\n        length:\n          type: integer\n          format: int32\n          example: 300\n          description: The depth of a packing unit in millimeters.\n    Pricing:\n      type: object\n      required:\n        - standardPrice\n        - vat\n      properties:\n        standardPrice:\n          $ref: \"#/components/schemas/MonetaryAmount\"\n        vat:\n          type: string\n          example: FULL\n          description: The value added tax that is included in the sales price, currently\n            FULL or REDUCED\n          enum:\n            - FULL\n            - REDUCED\n            - FREE\n        msrp:\n          $ref: \"#/components/schemas/MonetaryAmount\"\n        sale:\n          $ref: \"#/components/schemas/Sale\"\n        normPriceInfo:\n          $ref: \"#/components/schemas/NormPriceInfo\"\n    ProductDescription:\n      type: object\n      required:\n        - brand\n        - category\n      properties:\n        category:\n          type: string\n          example: Outdoorjacke\n          description: Denotes the assortment type of the product, like 'bag' or 'shirt'.\n            Mandatory. Must be identical for all variants of a product. Must be\n            present in the Category service offered via Category endpoint\n        brand:\n          type: string\n          example: Adidas\n          description: Denotes the brand name of a product, like 'Levis'. Must be identical\n            for all variants of a product. Must be present in the Brand service\n            offered via Brand endpoint.\n        productLine:\n          type: string\n          example: \"501\"\n          description: Denotes the proper name of a product, like '501'. May contain a\n            maximum of 50 characters. If provided, it must be identical for all\n            variants of a product.\n        manufacturer:\n          type: string\n          example: 3M\n          description: Denotes the manufacturer of a product. If provided, it must be\n            identical for all variants of a product.\n        productionDate:\n          type: string\n          format: date-time\n          example: \"2021-07-02T09:30:52.093Z\"\n          description: Denotes the date of manufacture of a product variant.\n        multiPack:\n          type: boolean\n          example: true\n          description: \"If the product variant is part of a set: 'true'; otherwise 'false'\"\n        bundle:\n          type: boolean\n          example: false\n          description: \"If the product variant is part of a bundle: 'true'; otherwise\n            'false'\"\n        fscCertified:\n          type: boolean\n          example: true\n          description: \"If the product variant is certified by the Forest Stewardship\n            Council: 'true'; otherwise 'false'\"\n        disposal:\n          type: boolean\n          example: false\n          description: If true, otto.de will present information about the disposal of the\n            product (or parts of it).\n        productUrl:\n          type: string\n          example: http://myproduct.somewhere.com/productname/\n          description: Refers to a representation of the product variant in a shop of the\n            partner. Should be a valid URL.\n        description:\n          type: string\n          example: \u003cp\u003eSome example words...\u003cb\u003ein bold\u003c/b\u003e...some more\u003c/p\u003e\n          description: Represents a textual description of a product variant. May contain\n            HTML elements. May contain a maximum of 2000 characters. Relevant\n            for SEO.\n        bulletPoints:\n          type: array\n          example: [\"My top key information...\"]\n          description: At least one bullet point must be provided. Up to five\n            bullet points can be specified. May contain a minimum of 3 and a\n            maximum of 180 characters.\n          items:\n            type: string\n        attributes:\n          type: array\n          description: Lists all the descriptive information about a product variant a\n            partner can provide. Must be provided in the form of a key values\n            pair. Will be validated against the AttributeDefinitions from\n            Category endpoint provided by Otto market.\n          items:\n            $ref: \"#/components/schemas/Attribute\"\n      description: Extensive description of the product.\n    ProductLink:\n      type: object\n    ProductProcessProgress:\n      type: object\n      properties:\n        state:\n          type: string\n          description: the current state of the process\n          enum:\n            - pending\n            - done\n            - failed\n        message:\n          type: string\n          description: a human-readable message describing the current state of the process\n        progress:\n          type: integer\n          format: int32\n          description: the fraction of work that is already completed, as compared to the\n            total work\n        total:\n          type: integer\n          format: int32\n          description: the total work to complete for this process\n        pingAfter:\n          type: string\n          format: date-time\n          example: \"2020-05-13T10:40:01.815Z\"\n          description: recommendation when to poll this resource again to receive a\n            meaningful update\n        links:\n          type: array\n          description: a list of links that can be used to access detailed information\n            about the process result\n          items:\n            $ref: \"#/components/schemas/ProductProcessResultLink\"\n    ProductProcessResult:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ProductProcessTaskResult\"\n    ProductProcessResultLink:\n      type: object\n      properties:\n        rel:\n          type: string\n          description: link relation type\n          enum:\n            - self\n            - failed\n            - succeeded\n            - unchanged\n        href:\n          type: string\n          example: |\n\n            .../products/update-tasks/11111111-0003-4444-9999-bbbbbbbbbbbbb/succeeded\n\n            .../products/update-tasks/11111111-0003-4444-9999-bbbbbbbbbbbbb/failed\n\n            .../products/update-tasks/11111111-0003-4444-9999-bbbbbbbbbbbbb/unchanged\n          description: the linked reference as URI\n    ProductProcessTaskError:\n      type: object\n      properties:\n        code:\n          type: string\n        title:\n          type: string\n        path:\n          type: string\n        jsonPath:\n          type: string\n        logref:\n          type: string\n    ProductProcessTaskResult:\n      type: object\n      properties:\n        variation:\n          type: string\n        urlToShopProduct:\n          $ref: \"#/components/schemas/ProductLink\"\n        errors:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ProductProcessTaskError\"\n    ProductVariation:\n      type: object\n      required:\n        - delivery\n        - ean\n        - productReference\n        - sku\n      properties:\n        productReference:\n          type: string\n          example: UBN-11779\n          description: The productReference groups all variations, that you want to combine\n            into one product. This is not visible to the customer. The\n            productReference can be freely assigned and may consist of maximum\n            50 characters. You can only use the productReference once within\n            your product catalog. You should therefore use a value that makes\n            sense for all variations of the product and does not refer to any\n            specifics of a particular variation. You will find the product\n            reference, for example, in the product overview in the portal.\n        sku:\n          type: string\n          example: \"3858389911564\"\n          description: Identifier for a product variation, provided by the partner, must be\n            unique for a partner. It is mandatory and may consist of a maximum\n            of 50 characters.\n        ean:\n          type: string\n          example: \"3858389911564\"\n          description: External identifier of a product, must be unique in a partner\n            assortment, must not start with a 2.\n        isbn:\n          type: string\n          example: 978-3-16-148410-0\n          description: International Standard Book Number, internationally used for\n            identifying media artifacts, like books.\n        upc:\n          type: string\n          example: \"042100005264\"\n          description: Universal Product Code.\n        pzn:\n          type: string\n          example: PZN-4908802\n          description: Pharmazentralnummer, a german standard for identifying\n            pharmaceutical products.\n        mpn:\n          type: string\n          example: H2G2-42\n          description: Manufacturer part number, may consist of a maximum of 50 characters.\n        moin:\n          type: string\n          example: \"93992000200\"\n          description: My Otto Identification Number. The market place ID of the product,\n            is generated by the marketplace and returned to the partner, when\n            product is created on the market place.\n        offeringStartDate:\n          type: string\n          format: date-time\n          example: \"2019-10-19T09:30:00.000Z\"\n          description: Date to which the product can be ordered via OTTO marketplace.\n        releaseDate:\n          type: string\n          format: date-time\n          example: \"2019-10-19T09:30:00.000Z\"\n          description: Date to which the product is released by the manufacturer, e.g.\n            computer games.\n        maxOrderQuantity:\n          type: integer\n          format: int32\n          example: 5\n          description: The maximum allowed order quantity for the customer.\n        productDescription:\n          $ref: \"#/components/schemas/ProductDescription\"\n        mediaAssets:\n          type: array\n          items:\n            $ref: \"#/components/schemas/MediaAsset\"\n        delivery:\n          $ref: \"#/components/schemas/Delivery\"\n        pricing:\n          $ref: \"#/components/schemas/Pricing\"\n        logistics:\n          $ref: \"#/components/schemas/Logistics\"\n    ProductVariationApiResult:\n      type: object\n      properties:\n        productVariations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ProductVariation\"\n        links:\n          type: array\n          description: a list of links that can be used for pagination.\n          items:\n            $ref: \"#/components/schemas/Link\"\n    Sale:\n      type: object\n      properties:\n        salePrice:\n          $ref: \"#/components/schemas/MonetaryAmount\"\n        startDate:\n          type: string\n          format: date-time\n          example: \"2019-10-19T09:30:00.000Z\"\n          description: The start date for the sales.\n        endDate:\n          type: string\n          format: date-time\n          example: \"2019-10-19T09:30:00.000Z\"\n          description: The end date for the sales.\n",
			"canonicalURL": "/github.com/otto-de/marketplace-php-sdk@06c351db3d6db3cf0b8db0e3cd8d1d8b7ef98db1/-/blob/openapi-doc/products-interface.yml",
			"externalURLs": [
				{
					"url": "https://github.com/otto-de/marketplace-php-sdk/blob/06c351db3d6db3cf0b8db0e3cd8d1d8b7ef98db1/openapi-doc/products-interface.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v2/products/update-tasks/{processUuid}\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}