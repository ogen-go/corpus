{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/thingweb/thingweb-playground"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "packages/td_to_openAPI/examples/openapi.json",
			"byteSize": 7979,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"info\": {\n    \"title\": \"MyCoffeeMaker-Home\",\n    \"version\": \"unknown\",\n    \"description\": \"Order your coffee remotely!\",\n    \"x-@context\": [\n      \"https://www.w3.org/2019/wot/td/v1\",\n      {\n        \"cov\": \"http://www.example.org/coap-binding#\"\n      },\n      {\n        \"@language\": \"en\"\n      }\n    ],\n    \"x-@type\": \"Thing\",\n    \"x-id\": \"urn:dev:home:coff:type123-SNR123456\",\n    \"x-name\": \"MyCoffeeMaker\"\n  },\n  \"paths\": {\n    \"/status\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"description\": \"default success response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"enum\": [\n                    \"Standby\",\n                    \"Grinding\",\n                    \"Brewing\",\n                    \"Filling\",\n                    \"Error\"\n                  ],\n                  \"readOnly\": true,\n                  \"type\": \"string\"\n                },\n                \"example\": \"Brewing\"\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"some error\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"tags\": [\n          \"properties\"\n        ],\n        \"description\": \"op:readproperty\",\n        \"summary\": \"status\",\n        \"servers\": [\n          {\n            \"url\": \"http://mycoffeemaker.example.com\"\n          }\n        ]\n      }\n    },\n    \"/fillstates\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"description\": \"default success response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"readOnly\": true,\n                  \"properties\": {\n                    \"water\": {\n                      \"type\": \"number\",\n                      \"minimum\": 0,\n                      \"maximum\": 100\n                    },\n                    \"coffeebeans\": {\n                      \"type\": \"number\",\n                      \"minimum\": 0,\n                      \"maximum\": 100\n                    },\n                    \"bin\": {\n                      \"type\": \"number\",\n                      \"minimum\": 0,\n                      \"maximum\": 100\n                    }\n                  },\n                  \"type\": \"object\"\n                },\n                \"example\": {\n                  \"water\": 66.50774024967545,\n                  \"coffeebeans\": 66.9186659728265,\n                  \"bin\": 53.82116477802556\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"some error\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"tags\": [\n          \"properties\"\n        ],\n        \"description\": \"op:readproperty\",\n        \"summary\": \"fillstates\",\n        \"servers\": [\n          {\n            \"url\": \"http://mycoffeemaker.example.com\"\n          }\n        ]\n      }\n    },\n    \"/brewcoffee\": {\n      \"post\": {\n        \"responses\": {\n          \"200\": {\n            \"description\": \"default success response\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          },\n          \"default\": {\n            \"description\": \"some error\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"enum\": [\n                  \"Espresso\",\n                  \"EspressoDoppio\",\n                  \"Coffee\",\n                  \"HotWater\"\n                ],\n                \"type\": \"string\"\n              },\n              \"example\": \"Espresso\"\n            }\n          }\n        },\n        \"tags\": [\n          \"actions\"\n        ],\n        \"description\": \"op:invokeaction\",\n        \"summary\": \"brewCoffee\",\n        \"servers\": [\n          {\n            \"url\": \"http://mycoffeemaker.example.com\"\n          }\n        ]\n      }\n    },\n    \"/switchoff\": {\n      \"post\": {\n        \"responses\": {\n          \"200\": {\n            \"description\": \"default success response\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          },\n          \"default\": {\n            \"description\": \"some error\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {}\n          }\n        },\n        \"tags\": [\n          \"actions\"\n        ],\n        \"description\": \"op:invokeaction\",\n        \"summary\": \"switchOff\",\n        \"servers\": [\n          {\n            \"url\": \"http://mycoffeemaker.example.com\"\n          }\n        ]\n      }\n    },\n    \"/waterempty\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"description\": \"default success response\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          },\n          \"default\": {\n            \"description\": \"some error\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"tags\": [\n          \"events\"\n        ],\n        \"description\": \"The water fillstate is below a certain level!\\nop:subscribeevent\",\n        \"summary\": \"waterEmpty\",\n        \"servers\": [\n          {\n            \"url\": \"http://mycoffeemaker.example.com\"\n          }\n        ]\n      }\n    },\n    \"/coffeeempty\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"description\": \"default success response\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          },\n          \"default\": {\n            \"description\": \"some error\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"tags\": [\n          \"events\"\n        ],\n        \"description\": \"The coffee bean fillstate is below a certain amount!\\nop:subscribeevent\",\n        \"summary\": \"coffeeEmpty\",\n        \"servers\": [\n          {\n            \"url\": \"http://mycoffeemaker.example.com\"\n          }\n        ]\n      }\n    },\n    \"/binfull\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"description\": \"default success response\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          },\n          \"default\": {\n            \"description\": \"some error\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"tags\": [\n          \"events\"\n        ],\n        \"description\": \"The bin  fillstate is above a certain level!\\nop:subscribeevent\",\n        \"summary\": \"binFull\",\n        \"servers\": [\n          {\n            \"url\": \"http://mycoffeemaker.example.com\"\n          }\n        ]\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"name\": \"properties\",\n      \"description\": \"A property can expose a variable of a Thing, this variable might be readable, writable and/or observable.\",\n      \"externalDocs\": {\n        \"url\": \"https://www.w3.org/TR/wot-thing-description/#propertyaffordance\",\n        \"description\": \"Find out more about Property Affordances.\"\n      }\n    },\n    {\n      \"name\": \"actions\",\n      \"description\": \"An action can expose something to be executed by a Thing, an action can be invoked.\",\n      \"externalDocs\": {\n        \"url\": \"https://www.w3.org/TR/wot-thing-description/#actionaffordance\",\n        \"description\": \"Find out more about Action Affordances.\"\n      }\n    },\n    {\n      \"name\": \"events\",\n      \"description\": \"An event can expose a notification by a Thing, this notification can be subscribed and/or unsubscribed.\",\n      \"externalDocs\": {\n        \"url\": \"https://www.w3.org/TR/wot-thing-description/#eventaffordance\",\n        \"description\": \"Find out more about Event Affordances.\"\n      }\n    }\n  ],\n  \"components\": {\n    \"securitySchemes\": {\n      \"basic_sc\": {\n        \"type\": \"http\",\n        \"scheme\": \"basic\"\n      }\n    }\n  },\n  \"security\": [\n    {}\n  ]\n}",
			"canonicalURL": "/github.com/thingweb/thingweb-playground@3382b9fd4eec20520a7705a04ffdb2a84b2c77b7/-/blob/packages/td_to_openAPI/examples/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/thingweb/thingweb-playground/blob/3382b9fd4eec20520a7705a04ffdb2a84b2c77b7/packages/td_to_openAPI/examples/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/waterempty\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}