{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "docs-v1.yaml",
			"size": 0,
			"path": "providers/src/googleapis.com/v0.1.2/services/docs-v1.yaml",
			"byteSize": 178238,
			"content": "components:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n        - '1'\n        - '2'\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n        - json\n        - media\n        - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you\n        with API access, quota, and reports. Required unless you provide an OAuth\n        2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications.\n        Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    AutoText:\n      description: A ParagraphElement representing a spot in the text that is dynamically\n        replaced with content that can change over time, like a page number.\n      properties:\n        suggestedDeletionIds:\n          description: The suggested deletion IDs. If empty, then there are no suggested\n            deletions of this content.\n          items:\n            type: string\n          type: array\n        suggestedInsertionIds:\n          description: The suggested insertion IDs. An AutoText may have multiple\n            insertion IDs if it is a nested suggested change. If empty, then this\n            is not a suggested insertion.\n          items:\n            type: string\n          type: array\n        suggestedTextStyleChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedTextStyle'\n          description: The suggested text style changes to this AutoText, keyed by\n            suggestion ID.\n          type: object\n        textStyle:\n          $ref: '#/components/schemas/TextStyle'\n          description: The text style of this AutoText.\n        type:\n          description: The type of this auto text.\n          enum:\n          - TYPE_UNSPECIFIED\n          - PAGE_NUMBER\n          - PAGE_COUNT\n          type: string\n      type: object\n    Background:\n      description: Represents the background of a document.\n      properties:\n        color:\n          $ref: '#/components/schemas/OptionalColor'\n          description: The background color.\n      type: object\n    BackgroundSuggestionState:\n      description: A mask that indicates which of the fields on the base Background\n        have been changed in this suggestion. For any field set to true, the Backgound\n        has a new suggested value.\n      properties:\n        backgroundColorSuggested:\n          description: Indicates whether the current background color has been modified\n            in this suggestion.\n          type: boolean\n      type: object\n    BatchUpdateDocumentRequest:\n      description: Request message for BatchUpdateDocument.\n      properties:\n        requests:\n          description: A list of updates to apply to the document.\n          items:\n            $ref: '#/components/schemas/Request'\n          type: array\n        writeControl:\n          $ref: '#/components/schemas/WriteControl'\n          description: Provides control over how write requests are executed.\n      type: object\n    BatchUpdateDocumentResponse:\n      description: Response message from a BatchUpdateDocument request.\n      properties:\n        documentId:\n          description: The ID of the document to which the updates were applied to.\n          type: string\n        replies:\n          description: The reply of the updates. This maps 1:1 with the updates, although\n            replies to some requests may be empty.\n          items:\n            $ref: '#/components/schemas/Response'\n          type: array\n        writeControl:\n          $ref: '#/components/schemas/WriteControl'\n          description: The updated write control after applying the request.\n      type: object\n    Body:\n      description: The document body. The body typically contains the full document\n        contents except for headers, footers and footnotes.\n      properties:\n        content:\n          description: The contents of the body. The indexes for the body's content\n            begin at zero.\n          items:\n            $ref: '#/components/schemas/StructuralElement'\n          type: array\n      type: object\n    Bullet:\n      description: Describes the bullet of a paragraph.\n      properties:\n        listId:\n          description: The ID of the list this paragraph belongs to.\n          type: string\n        nestingLevel:\n          description: The nesting level of this paragraph in the list.\n          format: int32\n          type: integer\n        textStyle:\n          $ref: '#/components/schemas/TextStyle'\n          description: The paragraph specific text style applied to this bullet.\n      type: object\n    BulletSuggestionState:\n      description: A mask that indicates which of the fields on the base Bullet have\n        been changed in this suggestion. For any field set to true, there is a new\n        suggested value.\n      properties:\n        listIdSuggested:\n          description: Indicates if there was a suggested change to the list_id.\n          type: boolean\n        nestingLevelSuggested:\n          description: Indicates if there was a suggested change to the nesting_level.\n          type: boolean\n        textStyleSuggestionState:\n          $ref: '#/components/schemas/TextStyleSuggestionState'\n          description: A mask that indicates which of the fields in text style have\n            been changed in this suggestion.\n      type: object\n    Color:\n      description: A solid color.\n      properties:\n        rgbColor:\n          $ref: '#/components/schemas/RgbColor'\n          description: The RGB color value.\n      type: object\n    ColumnBreak:\n      description: A ParagraphElement representing a column break. A column break\n        makes the subsequent text start at the top of the next column.\n      properties:\n        suggestedDeletionIds:\n          description: The suggested deletion IDs. If empty, then there are no suggested\n            deletions of this content.\n          items:\n            type: string\n          type: array\n        suggestedInsertionIds:\n          description: The suggested insertion IDs. A ColumnBreak may have multiple\n            insertion IDs if it is a nested suggested change. If empty, then this\n            is not a suggested insertion.\n          items:\n            type: string\n          type: array\n        suggestedTextStyleChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedTextStyle'\n          description: The suggested text style changes to this ColumnBreak, keyed\n            by suggestion ID.\n          type: object\n        textStyle:\n          $ref: '#/components/schemas/TextStyle'\n          description: The text style of this ColumnBreak. Similar to text content,\n            like text runs and footnote references, the text style of a column break\n            can affect content layout as well as the styling of text inserted adjacent\n            to it.\n      type: object\n    CreateFooterRequest:\n      description: Creates a Footer. The new footer is applied to the SectionStyle\n        at the location of the SectionBreak if specificed, otherwise it is applied\n        to the DocumentStyle. If a footer of the specified type already exists, a\n        400 bad request error is returned.\n      properties:\n        sectionBreakLocation:\n          $ref: '#/components/schemas/Location'\n          description: The location of the SectionBreak immediately preceding the\n            section whose SectionStyle this footer should belong to. If this is unset\n            or refers to the first section break in the document, the footer applies\n            to the document style.\n        type:\n          description: The type of footer to create.\n          enum:\n          - HEADER_FOOTER_TYPE_UNSPECIFIED\n          - DEFAULT\n          type: string\n      type: object\n    CreateFooterResponse:\n      description: The result of creating a footer.\n      properties:\n        footerId:\n          description: The ID of the created footer.\n          type: string\n      type: object\n    CreateFootnoteRequest:\n      description: Creates a Footnote segment and inserts a new FootnoteReference\n        to it at the given location. The new Footnote segment will contain a space\n        followed by a newline character.\n      properties:\n        endOfSegmentLocation:\n          $ref: '#/components/schemas/EndOfSegmentLocation'\n          description: Inserts the footnote reference at the end of the document body.\n            Footnote references cannot be inserted inside a header, footer or footnote.\n            Since footnote references can only be inserted in the body, the segment\n            ID field must be empty.\n        location:\n          $ref: '#/components/schemas/Location'\n          description: Inserts the footnote reference at a specific index in the document.\n            The footnote reference must be inserted inside the bounds of an existing\n            Paragraph. For instance, it cannot be inserted at a table's start index\n            (i.e. between the table and its preceding paragraph). Footnote references\n            cannot be inserted inside an equation, header, footer or footnote. Since\n            footnote references can only be inserted in the body, the segment ID field\n            must be empty.\n      type: object\n    CreateFootnoteResponse:\n      description: The result of creating a footnote.\n      properties:\n        footnoteId:\n          description: The ID of the created footnote.\n          type: string\n      type: object\n    CreateHeaderRequest:\n      description: Creates a Header. The new header is applied to the SectionStyle\n        at the location of the SectionBreak if specificed, otherwise it is applied\n        to the DocumentStyle. If a header of the specified type already exists, a\n        400 bad request error is returned.\n      properties:\n        sectionBreakLocation:\n          $ref: '#/components/schemas/Location'\n          description: The location of the SectionBreak which begins the section this\n            header should belong to. If `section_break_location' is unset or if it\n            refers to the first section break in the document body, the header applies\n            to the DocumentStyle\n        type:\n          description: The type of header to create.\n          enum:\n          - HEADER_FOOTER_TYPE_UNSPECIFIED\n          - DEFAULT\n          type: string\n      type: object\n    CreateHeaderResponse:\n      description: The result of creating a header.\n      properties:\n        headerId:\n          description: The ID of the created header.\n          type: string\n      type: object\n    CreateNamedRangeRequest:\n      description: Creates a NamedRange referencing the given range.\n      properties:\n        name:\n          description: The name of the NamedRange. Names do not need to be unique.\n            Names must be at least 1 character and no more than 256 characters, measured\n            in UTF-16 code units.\n          type: string\n        range:\n          $ref: '#/components/schemas/Range'\n          description: The range to apply the name to.\n      type: object\n    CreateNamedRangeResponse:\n      description: The result of creating a named range.\n      properties:\n        namedRangeId:\n          description: The ID of the created named range.\n          type: string\n      type: object\n    CreateParagraphBulletsRequest:\n      description: Creates bullets for all of the paragraphs that overlap with the\n        given range. The nesting level of each paragraph will be determined by counting\n        leading tabs in front of each paragraph. To avoid excess space between the\n        bullet and the corresponding paragraph, these leading tabs are removed by\n        this request. This may change the indices of parts of the text. If the paragraph\n        immediately before paragraphs being updated is in a list with a matching preset,\n        the paragraphs being updated are added to that preceding list.\n      properties:\n        bulletPreset:\n          description: The kinds of bullet glyphs to be used.\n          enum:\n          - BULLET_GLYPH_PRESET_UNSPECIFIED\n          - BULLET_DISC_CIRCLE_SQUARE\n          - BULLET_DIAMONDX_ARROW3D_SQUARE\n          - BULLET_CHECKBOX\n          - BULLET_ARROW_DIAMOND_DISC\n          - BULLET_STAR_CIRCLE_SQUARE\n          - BULLET_ARROW3D_CIRCLE_SQUARE\n          - BULLET_LEFTTRIANGLE_DIAMOND_DISC\n          - BULLET_DIAMONDX_HOLLOWDIAMOND_SQUARE\n          - BULLET_DIAMOND_CIRCLE_SQUARE\n          - NUMBERED_DECIMAL_ALPHA_ROMAN\n          - NUMBERED_DECIMAL_ALPHA_ROMAN_PARENS\n          - NUMBERED_DECIMAL_NESTED\n          - NUMBERED_UPPERALPHA_ALPHA_ROMAN\n          - NUMBERED_UPPERROMAN_UPPERALPHA_DECIMAL\n          - NUMBERED_ZERODECIMAL_ALPHA_ROMAN\n          type: string\n        range:\n          $ref: '#/components/schemas/Range'\n          description: The range to apply the bullet preset to.\n      type: object\n    CropProperties:\n      description: The crop properties of an image. The crop rectangle is represented\n        using fractional offsets from the original content's four edges. - If the\n        offset is in the interval (0, 1), the corresponding edge of crop rectangle\n        is positioned inside of the image's original bounding rectangle. - If the\n        offset is negative or greater than 1, the corresponding edge of crop rectangle\n        is positioned outside of the image's original bounding rectangle. - If all\n        offsets and rotation angle are 0, the image is not cropped.\n      properties:\n        angle:\n          description: The clockwise rotation angle of the crop rectangle around its\n            center, in radians. Rotation is applied after the offsets.\n          format: float\n          type: number\n        offsetBottom:\n          description: The offset specifies how far inwards the bottom edge of the\n            crop rectangle is from the bottom edge of the original content as a fraction\n            of the original content's height.\n          format: float\n          type: number\n        offsetLeft:\n          description: The offset specifies how far inwards the left edge of the crop\n            rectangle is from the left edge of the original content as a fraction\n            of the original content's width.\n          format: float\n          type: number\n        offsetRight:\n          description: The offset specifies how far inwards the right edge of the\n            crop rectangle is from the right edge of the original content as a fraction\n            of the original content's width.\n          format: float\n          type: number\n        offsetTop:\n          description: The offset specifies how far inwards the top edge of the crop\n            rectangle is from the top edge of the original content as a fraction of\n            the original content's height.\n          format: float\n          type: number\n      type: object\n    CropPropertiesSuggestionState:\n      description: A mask that indicates which of the fields on the base CropProperties\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties:\n        angleSuggested:\n          description: Indicates if there was a suggested change to angle.\n          type: boolean\n        offsetBottomSuggested:\n          description: Indicates if there was a suggested change to offset_bottom.\n          type: boolean\n        offsetLeftSuggested:\n          description: Indicates if there was a suggested change to offset_left.\n          type: boolean\n        offsetRightSuggested:\n          description: Indicates if there was a suggested change to offset_right.\n          type: boolean\n        offsetTopSuggested:\n          description: Indicates if there was a suggested change to offset_top.\n          type: boolean\n      type: object\n    DeleteContentRangeRequest:\n      description: Deletes content from the document.\n      properties:\n        range:\n          $ref: '#/components/schemas/Range'\n          description: 'The range of content to delete. Deleting text that crosses\n            a paragraph boundary may result in changes to paragraph styles, lists,\n            positioned objects and bookmarks as the two paragraphs are merged. Attempting\n            to delete certain ranges can result in an invalid document structure in\n            which case a 400 bad request error is returned. Some examples of invalid\n            delete requests include: * Deleting one code unit of a surrogate pair.\n            * Deleting the last newline character of a Body, Header, Footer, Footnote,\n            TableCell or TableOfContents. * Deleting the start or end of a Table,\n            TableOfContents or Equation without deleting the entire element. * Deleting\n            the newline character before a Table, TableOfContents or SectionBreak\n            without deleting the element. * Deleting individual rows or cells of a\n            table. Deleting the content within a table cell is allowed.'\n      type: object\n    DeleteFooterRequest:\n      description: Deletes a Footer from the document.\n      properties:\n        footerId:\n          description: The id of the footer to delete. If this footer is defined on\n            DocumentStyle, the reference to this footer is removed, resulting in no\n            footer of that type for the first section of the document. If this footer\n            is defined on a SectionStyle, the reference to this footer is removed\n            and the footer of that type is now continued from the previous section.\n          type: string\n      type: object\n    DeleteHeaderRequest:\n      description: Deletes a Header from the document.\n      properties:\n        headerId:\n          description: The id of the header to delete. If this header is defined on\n            DocumentStyle, the reference to this header is removed, resulting in no\n            header of that type for the first section of the document. If this header\n            is defined on a SectionStyle, the reference to this header is removed\n            and the header of that type is now continued from the previous section.\n          type: string\n      type: object\n    DeleteNamedRangeRequest:\n      description: Deletes a NamedRange.\n      properties:\n        name:\n          description: The name of the range(s) to delete. All named ranges with the\n            given name will be deleted.\n          type: string\n        namedRangeId:\n          description: The ID of the named range to delete.\n          type: string\n      type: object\n    DeleteParagraphBulletsRequest:\n      description: Deletes bullets from all of the paragraphs that overlap with the\n        given range. The nesting level of each paragraph will be visually preserved\n        by adding indent to the start of the corresponding paragraph.\n      properties:\n        range:\n          $ref: '#/components/schemas/Range'\n          description: The range to delete bullets from.\n      type: object\n    DeletePositionedObjectRequest:\n      description: Deletes a PositionedObject from the document.\n      properties:\n        objectId:\n          description: The ID of the positioned object to delete.\n          type: string\n      type: object\n    DeleteTableColumnRequest:\n      description: Deletes a column from a table.\n      properties:\n        tableCellLocation:\n          $ref: '#/components/schemas/TableCellLocation'\n          description: The reference table cell location from which the column will\n            be deleted. The column this cell spans will be deleted. If this is a merged\n            cell that spans multiple columns, all columns that the cell spans will\n            be deleted. If no columns remain in the table after this deletion, the\n            whole table is deleted.\n      type: object\n    DeleteTableRowRequest:\n      description: Deletes a row from a table.\n      properties:\n        tableCellLocation:\n          $ref: '#/components/schemas/TableCellLocation'\n          description: The reference table cell location from which the row will be\n            deleted. The row this cell spans will be deleted. If this is a merged\n            cell that spans multiple rows, all rows that the cell spans will be deleted.\n            If no rows remain in the table after this deletion, the whole table is\n            deleted.\n      type: object\n    Dimension:\n      description: A magnitude in a single direction in the specified units.\n      properties:\n        magnitude:\n          description: The magnitude.\n          format: double\n          type: number\n        unit:\n          description: The units for magnitude.\n          enum:\n          - UNIT_UNSPECIFIED\n          - PT\n          type: string\n      type: object\n    Document:\n      description: A Google Docs document.\n      properties:\n        body:\n          $ref: '#/components/schemas/Body'\n          description: Output only. The main body of the document.\n        documentId:\n          description: Output only. The ID of the document.\n          type: string\n        documentStyle:\n          $ref: '#/components/schemas/DocumentStyle'\n          description: Output only. The style of the document.\n        footers:\n          additionalProperties:\n            $ref: '#/components/schemas/Footer'\n          description: Output only. The footers in the document, keyed by footer ID.\n          type: object\n        footnotes:\n          additionalProperties:\n            $ref: '#/components/schemas/Footnote'\n          description: Output only. The footnotes in the document, keyed by footnote\n            ID.\n          type: object\n        headers:\n          additionalProperties:\n            $ref: '#/components/schemas/Header'\n          description: Output only. The headers in the document, keyed by header ID.\n          type: object\n        inlineObjects:\n          additionalProperties:\n            $ref: '#/components/schemas/InlineObject'\n          description: Output only. The inline objects in the document, keyed by object\n            ID.\n          type: object\n        lists:\n          additionalProperties:\n            $ref: '#/components/schemas/List'\n          description: Output only. The lists in the document, keyed by list ID.\n          type: object\n        namedRanges:\n          additionalProperties:\n            $ref: '#/components/schemas/NamedRanges'\n          description: Output only. The named ranges in the document, keyed by name.\n          type: object\n        namedStyles:\n          $ref: '#/components/schemas/NamedStyles'\n          description: Output only. The named styles of the document.\n        positionedObjects:\n          additionalProperties:\n            $ref: '#/components/schemas/PositionedObject'\n          description: Output only. The positioned objects in the document, keyed\n            by object ID.\n          type: object\n        revisionId:\n          description: Output only. The revision ID of the document. Can be used in\n            update requests to specify which revision of a document to apply updates\n            to and how the request should behave if the document has been edited since\n            that revision. Only populated if the user has edit access to the document.\n            The format of the revision ID may change over time, so it should be treated\n            opaquely. A returned revision ID is only guaranteed to be valid for 24\n            hours after it has been returned and cannot be shared across users. If\n            the revision ID is unchanged between calls, then the document has not\n            changed. Conversely, a changed ID (for the same document and user) usually\n            means the document has been updated; however, a changed ID can also be\n            due to internal factors such as ID format changes.\n          type: string\n        suggestedDocumentStyleChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedDocumentStyle'\n          description: Output only. The suggested changes to the style of the document,\n            keyed by suggestion ID.\n          type: object\n        suggestedNamedStylesChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedNamedStyles'\n          description: Output only. The suggested changes to the named styles of the\n            document, keyed by suggestion ID.\n          type: object\n        suggestionsViewMode:\n          description: 'Output only. The suggestions view mode applied to the document.\n            Note: When editing a document, changes must be based on a document with\n            SUGGESTIONS_INLINE.'\n          enum:\n          - DEFAULT_FOR_CURRENT_ACCESS\n          - SUGGESTIONS_INLINE\n          - PREVIEW_SUGGESTIONS_ACCEPTED\n          - PREVIEW_WITHOUT_SUGGESTIONS\n          type: string\n        title:\n          description: The title of the document.\n          type: string\n      type: object\n    DocumentStyle:\n      description: The style of the document.\n      properties:\n        background:\n          $ref: '#/components/schemas/Background'\n          description: The background of the document. Documents cannot have a transparent\n            background color.\n        defaultFooterId:\n          description: The ID of the default footer. If not set, there is no default\n            footer. This property is read-only.\n          type: string\n        defaultHeaderId:\n          description: The ID of the default header. If not set, there is no default\n            header. This property is read-only.\n          type: string\n        evenPageFooterId:\n          description: The ID of the footer used only for even pages. The value of\n            use_even_page_header_footer determines whether to use the default_footer_id\n            or this value for the footer on even pages. If not set, there is no even\n            page footer. This property is read-only.\n          type: string\n        evenPageHeaderId:\n          description: The ID of the header used only for even pages. The value of\n            use_even_page_header_footer determines whether to use the default_header_id\n            or this value for the header on even pages. If not set, there is no even\n            page header. This property is read-only.\n          type: string\n        firstPageFooterId:\n          description: The ID of the footer used only for the first page. If not set\n            then a unique footer for the first page does not exist. The value of use_first_page_header_footer\n            determines whether to use the default_footer_id or this value for the\n            footer on the first page. If not set, there is no first page footer. This\n            property is read-only.\n          type: string\n        firstPageHeaderId:\n          description: The ID of the header used only for the first page. If not set\n            then a unique header for the first page does not exist. The value of use_first_page_header_footer\n            determines whether to use the default_header_id or this value for the\n            header on the first page. If not set, there is no first page header. This\n            property is read-only.\n          type: string\n        marginBottom:\n          $ref: '#/components/schemas/Dimension'\n          description: The bottom page margin. Updating the bottom page margin on\n            the document style clears the bottom page margin on all section styles.\n        marginFooter:\n          $ref: '#/components/schemas/Dimension'\n          description: The amount of space between the bottom of the page and the\n            contents of the footer.\n        marginHeader:\n          $ref: '#/components/schemas/Dimension'\n          description: The amount of space between the top of the page and the contents\n            of the header.\n        marginLeft:\n          $ref: '#/components/schemas/Dimension'\n          description: The left page margin. Updating the left page margin on the\n            document style clears the left page margin on all section styles. It may\n            also cause columns to resize in all sections.\n        marginRight:\n          $ref: '#/components/schemas/Dimension'\n          description: The right page margin. Updating the right page margin on the\n            document style clears the right page margin on all section styles. It\n            may also cause columns to resize in all sections.\n        marginTop:\n          $ref: '#/components/schemas/Dimension'\n          description: The top page margin. Updating the top page margin on the document\n            style clears the top page margin on all section styles.\n        pageNumberStart:\n          description: The page number from which to start counting the number of\n            pages.\n          format: int32\n          type: integer\n        pageSize:\n          $ref: '#/components/schemas/Size'\n          description: The size of a page in the document.\n        useCustomHeaderFooterMargins:\n          description: Indicates whether DocumentStyle margin_header, SectionStyle\n            margin_header and DocumentStyle margin_footer, SectionStyle margin_footer\n            are respected. When false, the default values in the Docs editor for header\n            and footer margin are used. This property is read-only.\n          type: boolean\n        useEvenPageHeaderFooter:\n          description: Indicates whether to use the even page header / footer IDs\n            for the even pages.\n          type: boolean\n        useFirstPageHeaderFooter:\n          description: Indicates whether to use the first page header / footer IDs\n            for the first page.\n          type: boolean\n      type: object\n    DocumentStyleSuggestionState:\n      description: A mask that indicates which of the fields on the base DocumentStyle\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties:\n        backgroundSuggestionState:\n          $ref: '#/components/schemas/BackgroundSuggestionState'\n          description: A mask that indicates which of the fields in background have\n            been changed in this suggestion.\n        defaultFooterIdSuggested:\n          description: Indicates if there was a suggested change to default_footer_id.\n          type: boolean\n        defaultHeaderIdSuggested:\n          description: Indicates if there was a suggested change to default_header_id.\n          type: boolean\n        evenPageFooterIdSuggested:\n          description: Indicates if there was a suggested change to even_page_footer_id.\n          type: boolean\n        evenPageHeaderIdSuggested:\n          description: Indicates if there was a suggested change to even_page_header_id.\n          type: boolean\n        firstPageFooterIdSuggested:\n          description: Indicates if there was a suggested change to first_page_footer_id.\n          type: boolean\n        firstPageHeaderIdSuggested:\n          description: Indicates if there was a suggested change to first_page_header_id.\n          type: boolean\n        marginBottomSuggested:\n          description: Indicates if there was a suggested change to margin_bottom.\n          type: boolean\n        marginFooterSuggested:\n          description: Indicates if there was a suggested change to margin_footer.\n          type: boolean\n        marginHeaderSuggested:\n          description: Indicates if there was a suggested change to margin_header.\n          type: boolean\n        marginLeftSuggested:\n          description: Indicates if there was a suggested change to margin_left.\n          type: boolean\n        marginRightSuggested:\n          description: Indicates if there was a suggested change to margin_right.\n          type: boolean\n        marginTopSuggested:\n          description: Indicates if there was a suggested change to margin_top.\n          type: boolean\n        pageNumberStartSuggested:\n          description: Indicates if there was a suggested change to page_number_start.\n          type: boolean\n        pageSizeSuggestionState:\n          $ref: '#/components/schemas/SizeSuggestionState'\n          description: A mask that indicates which of the fields in size have been\n            changed in this suggestion.\n        useCustomHeaderFooterMarginsSuggested:\n          description: Indicates if there was a suggested change to use_custom_header_footer_margins.\n          type: boolean\n        useEvenPageHeaderFooterSuggested:\n          description: Indicates if there was a suggested change to use_even_page_header_footer.\n          type: boolean\n        useFirstPageHeaderFooterSuggested:\n          description: Indicates if there was a suggested change to use_first_page_header_footer.\n          type: boolean\n      type: object\n    EmbeddedDrawingProperties:\n      description: The properties of an embedded drawing.\n      properties: {}\n      type: object\n    EmbeddedDrawingPropertiesSuggestionState:\n      description: A mask that indicates which of the fields on the base EmbeddedDrawingProperties\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties: {}\n      type: object\n    EmbeddedObject:\n      description: An embedded object in the document.\n      properties:\n        description:\n          description: The description of the embedded object. The `title` and `description`\n            are both combined to display alt text.\n          type: string\n        embeddedDrawingProperties:\n          $ref: '#/components/schemas/EmbeddedDrawingProperties'\n          description: The properties of an embedded drawing.\n        embeddedObjectBorder:\n          $ref: '#/components/schemas/EmbeddedObjectBorder'\n          description: The border of the embedded object.\n        imageProperties:\n          $ref: '#/components/schemas/ImageProperties'\n          description: The properties of an image.\n        linkedContentReference:\n          $ref: '#/components/schemas/LinkedContentReference'\n          description: A reference to the external linked source content. For example,\n            it contains a reference to the source Sheets chart when the embedded object\n            is a linked chart. If unset, then the embedded object is not linked.\n        marginBottom:\n          $ref: '#/components/schemas/Dimension'\n          description: The bottom margin of the embedded object.\n        marginLeft:\n          $ref: '#/components/schemas/Dimension'\n          description: The left margin of the embedded object.\n        marginRight:\n          $ref: '#/components/schemas/Dimension'\n          description: The right margin of the embedded object.\n        marginTop:\n          $ref: '#/components/schemas/Dimension'\n          description: The top margin of the embedded object.\n        size:\n          $ref: '#/components/schemas/Size'\n          description: The visible size of the image after cropping.\n        title:\n          description: The title of the embedded object. The `title` and `description`\n            are both combined to display alt text.\n          type: string\n      type: object\n    EmbeddedObjectBorder:\n      description: A border around an EmbeddedObject.\n      properties:\n        color:\n          $ref: '#/components/schemas/OptionalColor'\n          description: The color of the border.\n        dashStyle:\n          description: The dash style of the border.\n          enum:\n          - DASH_STYLE_UNSPECIFIED\n          - SOLID\n          - DOT\n          - DASH\n          type: string\n        propertyState:\n          description: The property state of the border property.\n          enum:\n          - RENDERED\n          - NOT_RENDERED\n          type: string\n        width:\n          $ref: '#/components/schemas/Dimension'\n          description: The width of the border.\n      type: object\n    EmbeddedObjectBorderSuggestionState:\n      description: A mask that indicates which of the fields on the base EmbeddedObjectBorder\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties:\n        colorSuggested:\n          description: Indicates if there was a suggested change to color.\n          type: boolean\n        dashStyleSuggested:\n          description: Indicates if there was a suggested change to dash_style.\n          type: boolean\n        propertyStateSuggested:\n          description: Indicates if there was a suggested change to property_state.\n          type: boolean\n        widthSuggested:\n          description: Indicates if there was a suggested change to width.\n          type: boolean\n      type: object\n    EmbeddedObjectSuggestionState:\n      description: A mask that indicates which of the fields on the base EmbeddedObject\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties:\n        descriptionSuggested:\n          description: Indicates if there was a suggested change to description.\n          type: boolean\n        embeddedDrawingPropertiesSuggestionState:\n          $ref: '#/components/schemas/EmbeddedDrawingPropertiesSuggestionState'\n          description: A mask that indicates which of the fields in embedded_drawing_properties\n            have been changed in this suggestion.\n        embeddedObjectBorderSuggestionState:\n          $ref: '#/components/schemas/EmbeddedObjectBorderSuggestionState'\n          description: A mask that indicates which of the fields in embedded_object_border\n            have been changed in this suggestion.\n        imagePropertiesSuggestionState:\n          $ref: '#/components/schemas/ImagePropertiesSuggestionState'\n          description: A mask that indicates which of the fields in image_properties\n            have been changed in this suggestion.\n        linkedContentReferenceSuggestionState:\n          $ref: '#/components/schemas/LinkedContentReferenceSuggestionState'\n          description: A mask that indicates which of the fields in linked_content_reference\n            have been changed in this suggestion.\n        marginBottomSuggested:\n          description: Indicates if there was a suggested change to margin_bottom.\n          type: boolean\n        marginLeftSuggested:\n          description: Indicates if there was a suggested change to margin_left.\n          type: boolean\n        marginRightSuggested:\n          description: Indicates if there was a suggested change to margin_right.\n          type: boolean\n        marginTopSuggested:\n          description: Indicates if there was a suggested change to margin_top.\n          type: boolean\n        sizeSuggestionState:\n          $ref: '#/components/schemas/SizeSuggestionState'\n          description: A mask that indicates which of the fields in size have been\n            changed in this suggestion.\n        titleSuggested:\n          description: Indicates if there was a suggested change to title.\n          type: boolean\n      type: object\n    EndOfSegmentLocation:\n      description: Location at the end of a body, header, footer or footnote. The\n        location is immediately before the last newline in the document segment.\n      properties:\n        segmentId:\n          description: The ID of the header, footer or footnote the location is in.\n            An empty segment ID signifies the document's body.\n          type: string\n      type: object\n    Equation:\n      description: A ParagraphElement representing an equation.\n      properties:\n        suggestedDeletionIds:\n          description: The suggested deletion IDs. If empty, then there are no suggested\n            deletions of this content.\n          items:\n            type: string\n          type: array\n        suggestedInsertionIds:\n          description: The suggested insertion IDs. A Equation may have multiple insertion\n            IDs if it is a nested suggested change. If empty, then this is not a suggested\n            insertion.\n          items:\n            type: string\n          type: array\n      type: object\n    Footer:\n      description: A document footer.\n      properties:\n        content:\n          description: The contents of the footer. The indexes for a footer's content\n            begin at zero.\n          items:\n            $ref: '#/components/schemas/StructuralElement'\n          type: array\n        footerId:\n          description: The ID of the footer.\n          type: string\n      type: object\n    Footnote:\n      description: A document footnote.\n      properties:\n        content:\n          description: The contents of the footnote. The indexes for a footnote's\n            content begin at zero.\n          items:\n            $ref: '#/components/schemas/StructuralElement'\n          type: array\n        footnoteId:\n          description: The ID of the footnote.\n          type: string\n      type: object\n    FootnoteReference:\n      description: A ParagraphElement representing a footnote reference. A footnote\n        reference is the inline content rendered with a number and is used to identify\n        the footnote.\n      properties:\n        footnoteId:\n          description: The ID of the footnote that contains the content of this footnote\n            reference.\n          type: string\n        footnoteNumber:\n          description: The rendered number of this footnote.\n          type: string\n        suggestedDeletionIds:\n          description: The suggested deletion IDs. If empty, then there are no suggested\n            deletions of this content.\n          items:\n            type: string\n          type: array\n        suggestedInsertionIds:\n          description: The suggested insertion IDs. A FootnoteReference may have multiple\n            insertion IDs if it is a nested suggested change. If empty, then this\n            is not a suggested insertion.\n          items:\n            type: string\n          type: array\n        suggestedTextStyleChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedTextStyle'\n          description: The suggested text style changes to this FootnoteReference,\n            keyed by suggestion ID.\n          type: object\n        textStyle:\n          $ref: '#/components/schemas/TextStyle'\n          description: The text style of this FootnoteReference.\n      type: object\n    Header:\n      description: A document header.\n      properties:\n        content:\n          description: The contents of the header. The indexes for a header's content\n            begin at zero.\n          items:\n            $ref: '#/components/schemas/StructuralElement'\n          type: array\n        headerId:\n          description: The ID of the header.\n          type: string\n      type: object\n    HorizontalRule:\n      description: A ParagraphElement representing a horizontal line.\n      properties:\n        suggestedDeletionIds:\n          description: The suggested deletion IDs. If empty, then there are no suggested\n            deletions of this content.\n          items:\n            type: string\n          type: array\n        suggestedInsertionIds:\n          description: The suggested insertion IDs. A HorizontalRule may have multiple\n            insertion IDs if it is a nested suggested change. If empty, then this\n            is not a suggested insertion.\n          items:\n            type: string\n          type: array\n        suggestedTextStyleChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedTextStyle'\n          description: The suggested text style changes to this HorizontalRule, keyed\n            by suggestion ID.\n          type: object\n        textStyle:\n          $ref: '#/components/schemas/TextStyle'\n          description: The text style of this HorizontalRule. Similar to text content,\n            like text runs and footnote references, the text style of a horizontal\n            rule can affect content layout as well as the styling of text inserted\n            adjacent to it.\n      type: object\n    ImageProperties:\n      description: The properties of an image.\n      properties:\n        angle:\n          description: The clockwise rotation angle of the image, in radians.\n          format: float\n          type: number\n        brightness:\n          description: The brightness effect of the image. The value should be in\n            the interval [-1.0, 1.0], where 0 means no effect.\n          format: float\n          type: number\n        contentUri:\n          description: A URI to the image with a default lifetime of 30 minutes. This\n            URI is tagged with the account of the requester. Anyone with the URI effectively\n            accesses the image as the original requester. Access to the image may\n            be lost if the document's sharing settings change.\n          type: string\n        contrast:\n          description: The contrast effect of the image. The value should be in the\n            interval [-1.0, 1.0], where 0 means no effect.\n          format: float\n          type: number\n        cropProperties:\n          $ref: '#/components/schemas/CropProperties'\n          description: The crop properties of the image.\n        sourceUri:\n          description: The source URI is the URI used to insert the image. The source\n            URI can be empty.\n          type: string\n        transparency:\n          description: The transparency effect of the image. The value should be in\n            the interval [0.0, 1.0], where 0 means no effect and 1 means completely\n            transparent.\n          format: float\n          type: number\n      type: object\n    ImagePropertiesSuggestionState:\n      description: A mask that indicates which of the fields on the base ImageProperties\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties:\n        angleSuggested:\n          description: Indicates if there was a suggested change to angle.\n          type: boolean\n        brightnessSuggested:\n          description: Indicates if there was a suggested change to brightness.\n          type: boolean\n        contentUriSuggested:\n          description: Indicates if there was a suggested change to content_uri.\n          type: boolean\n        contrastSuggested:\n          description: Indicates if there was a suggested change to contrast.\n          type: boolean\n        cropPropertiesSuggestionState:\n          $ref: '#/components/schemas/CropPropertiesSuggestionState'\n          description: A mask that indicates which of the fields in crop_properties\n            have been changed in this suggestion.\n        sourceUriSuggested:\n          description: Indicates if there was a suggested change to source_uri.\n          type: boolean\n        transparencySuggested:\n          description: Indicates if there was a suggested change to transparency.\n          type: boolean\n      type: object\n    InlineObject:\n      description: An object that appears inline with text. An InlineObject contains\n        an EmbeddedObject such as an image.\n      properties:\n        inlineObjectProperties:\n          $ref: '#/components/schemas/InlineObjectProperties'\n          description: The properties of this inline object.\n        objectId:\n          description: The ID of this inline object.\n          type: string\n        suggestedDeletionIds:\n          description: The suggested deletion IDs. If empty, then there are no suggested\n            deletions of this content.\n          items:\n            type: string\n          type: array\n        suggestedInlineObjectPropertiesChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedInlineObjectProperties'\n          description: The suggested changes to the inline object properties, keyed\n            by suggestion ID.\n          type: object\n        suggestedInsertionId:\n          description: The suggested insertion ID. If empty, then this is not a suggested\n            insertion.\n          type: string\n      type: object\n    InlineObjectElement:\n      description: A ParagraphElement that contains an InlineObject.\n      properties:\n        inlineObjectId:\n          description: The ID of the InlineObject this element contains.\n          type: string\n        suggestedDeletionIds:\n          description: The suggested deletion IDs. If empty, then there are no suggested\n            deletions of this content.\n          items:\n            type: string\n          type: array\n        suggestedInsertionIds:\n          description: The suggested insertion IDs. An InlineObjectElement may have\n            multiple insertion IDs if it is a nested suggested change. If empty, then\n            this is not a suggested insertion.\n          items:\n            type: string\n          type: array\n        suggestedTextStyleChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedTextStyle'\n          description: The suggested text style changes to this InlineObject, keyed\n            by suggestion ID.\n          type: object\n        textStyle:\n          $ref: '#/components/schemas/TextStyle'\n          description: The text style of this InlineObjectElement. Similar to text\n            content, like text runs and footnote references, the text style of an\n            inline object element can affect content layout as well as the styling\n            of text inserted adjacent to it.\n      type: object\n    InlineObjectProperties:\n      description: Properties of an InlineObject.\n      properties:\n        embeddedObject:\n          $ref: '#/components/schemas/EmbeddedObject'\n          description: The embedded object of this inline object.\n      type: object\n    InlineObjectPropertiesSuggestionState:\n      description: A mask that indicates which of the fields on the base InlineObjectProperties\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties:\n        embeddedObjectSuggestionState:\n          $ref: '#/components/schemas/EmbeddedObjectSuggestionState'\n          description: A mask that indicates which of the fields in embedded_object\n            have been changed in this suggestion.\n      type: object\n    InsertInlineImageRequest:\n      description: Inserts an InlineObject containing an image at the given location.\n      properties:\n        endOfSegmentLocation:\n          $ref: '#/components/schemas/EndOfSegmentLocation'\n          description: Inserts the text at the end of a header, footer or the document\n            body. Inline images cannot be inserted inside a footnote.\n        location:\n          $ref: '#/components/schemas/Location'\n          description: Inserts the image at a specific index in the document. The\n            image must be inserted inside the bounds of an existing Paragraph. For\n            instance, it cannot be inserted at a table's start index (i.e. between\n            the table and its preceding paragraph). Inline images cannot be inserted\n            inside a footnote or equation.\n        objectSize:\n          $ref: '#/components/schemas/Size'\n          description: 'The size that the image should appear as in the document.\n            This property is optional and the final size of the image in the document\n            is determined by the following rules: * If neither width nor height is\n            specified, then a default size of the image is calculated based on its\n            resolution. * If one dimension is specified then the other dimension is\n            calculated to preserve the aspect ratio of the image. * If both width\n            and height are specified, the image is scaled to fit within the provided\n            dimensions while maintaining its aspect ratio.'\n        uri:\n          description: The image URI. The image is fetched once at insertion time\n            and a copy is stored for display inside the document. Images must be less\n            than 50MB in size, cannot exceed 25 megapixels, and must be in one of\n            PNG, JPEG, or GIF format. The provided URI can be at most 2 kB in length.\n            The URI itself is saved with the image, and exposed via the ImageProperties.content_uri\n            field.\n          type: string\n      type: object\n    InsertInlineImageResponse:\n      description: The result of inserting an inline image.\n      properties:\n        objectId:\n          description: The ID of the created InlineObject.\n          type: string\n      type: object\n    InsertInlineSheetsChartResponse:\n      description: The result of inserting an embedded Google Sheets chart.\n      properties:\n        objectId:\n          description: The object ID of the inserted chart.\n          type: string\n      type: object\n    InsertPageBreakRequest:\n      description: Inserts a page break followed by a newline at the specified location.\n      properties:\n        endOfSegmentLocation:\n          $ref: '#/components/schemas/EndOfSegmentLocation'\n          description: Inserts the page break at the end of the document body. Page\n            breaks cannot be inserted inside a footnote, header or footer. Since page\n            breaks can only be inserted inside the body, the segment ID field must\n            be empty.\n        location:\n          $ref: '#/components/schemas/Location'\n          description: Inserts the page break at a specific index in the document.\n            The page break must be inserted inside the bounds of an existing Paragraph.\n            For instance, it cannot be inserted at a table's start index (i.e. between\n            the table and its preceding paragraph). Page breaks cannot be inserted\n            inside a table, equation, footnote, header or footer. Since page breaks\n            can only be inserted inside the body, the segment ID field must be empty.\n      type: object\n    InsertSectionBreakRequest:\n      description: Inserts a section break at the given location. A newline character\n        will be inserted before the section break.\n      properties:\n        endOfSegmentLocation:\n          $ref: '#/components/schemas/EndOfSegmentLocation'\n          description: Inserts a newline and a section break at the end of the document\n            body. Section breaks cannot be inserted inside a footnote, header or footer.\n            Because section breaks can only be inserted inside the body, the segment\n            ID field must be empty.\n        location:\n          $ref: '#/components/schemas/Location'\n          description: Inserts a newline and a section break at a specific index in\n            the document. The section break must be inserted inside the bounds of\n            an existing Paragraph. For instance, it cannot be inserted at a table's\n            start index (i.e. between the table and its preceding paragraph). Section\n            breaks cannot be inserted inside a table, equation, footnote, header,\n            or footer. Since section breaks can only be inserted inside the body,\n            the segment ID field must be empty.\n        sectionType:\n          description: The type of section to insert.\n          enum:\n          - SECTION_TYPE_UNSPECIFIED\n          - CONTINUOUS\n          - NEXT_PAGE\n          type: string\n      type: object\n    InsertTableColumnRequest:\n      description: Inserts an empty column into a table.\n      properties:\n        insertRight:\n          description: 'Whether to insert new column to the right of the reference\n            cell location. - `True`: insert to the right. - `False`: insert to the\n            left.'\n          type: boolean\n        tableCellLocation:\n          $ref: '#/components/schemas/TableCellLocation'\n          description: The reference table cell location from which columns will be\n            inserted. A new column will be inserted to the left (or right) of the\n            column where the reference cell is. If the reference cell is a merged\n            cell, a new column will be inserted to the left (or right) of the merged\n            cell.\n      type: object\n    InsertTableRequest:\n      description: Inserts a table at the specified location. A newline character\n        will be inserted before the inserted table.\n      properties:\n        columns:\n          description: The number of columns in the table.\n          format: int32\n          type: integer\n        endOfSegmentLocation:\n          $ref: '#/components/schemas/EndOfSegmentLocation'\n          description: Inserts the table at the end of the given header, footer or\n            document body. A newline character will be inserted before the inserted\n            table. Tables cannot be inserted inside a footnote.\n        location:\n          $ref: '#/components/schemas/Location'\n          description: Inserts the table at a specific model index. A newline character\n            will be inserted before the inserted table, therefore the table start\n            index will be at the specified location index + 1. The table must be inserted\n            inside the bounds of an existing Paragraph. For instance, it cannot be\n            inserted at a table's start index (i.e. between an existing table and\n            its preceding paragraph). Tables cannot be inserted inside a footnote\n            or equation.\n        rows:\n          description: The number of rows in the table.\n          format: int32\n          type: integer\n      type: object\n    InsertTableRowRequest:\n      description: Inserts an empty row into a table.\n      properties:\n        insertBelow:\n          description: 'Whether to insert new row below the reference cell location.\n            - `True`: insert below the cell. - `False`: insert above the cell.'\n          type: boolean\n        tableCellLocation:\n          $ref: '#/components/schemas/TableCellLocation'\n          description: The reference table cell location from which rows will be inserted.\n            A new row will be inserted above (or below) the row where the reference\n            cell is. If the reference cell is a merged cell, a new row will be inserted\n            above (or below) the merged cell.\n      type: object\n    InsertTextRequest:\n      description: Inserts text at the specified location.\n      properties:\n        endOfSegmentLocation:\n          $ref: '#/components/schemas/EndOfSegmentLocation'\n          description: Inserts the text at the end of a header, footer, footnote or\n            the document body.\n        location:\n          $ref: '#/components/schemas/Location'\n          description: Inserts the text at a specific index in the document. Text\n            must be inserted inside the bounds of an existing Paragraph. For instance,\n            text cannot be inserted at a table's start index (i.e. between the table\n            and its preceding paragraph). The text must be inserted in the preceding\n            paragraph.\n        text:\n          description: The text to be inserted. Inserting a newline character will\n            implicitly create a new Paragraph at that index. The paragraph style of\n            the new paragraph will be copied from the paragraph at the current insertion\n            index, including lists and bullets. Text styles for inserted text will\n            be determined automatically, generally preserving the styling of neighboring\n            text. In most cases, the text style for the inserted text will match the\n            text immediately before the insertion index. Some control characters (U+0000-U+0008,\n            U+000C-U+001F) and characters from the Unicode Basic Multilingual Plane\n            Private Use Area (U+E000-U+F8FF) will be stripped out of the inserted\n            text.\n          type: string\n      type: object\n    Link:\n      description: A reference to another portion of a document or an external URL\n        resource.\n      properties:\n        bookmarkId:\n          description: The ID of a bookmark in this document.\n          type: string\n        headingId:\n          description: The ID of a heading in this document.\n          type: string\n        url:\n          description: An external URL.\n          type: string\n      type: object\n    LinkedContentReference:\n      description: A reference to the external linked source content.\n      properties:\n        sheetsChartReference:\n          $ref: '#/components/schemas/SheetsChartReference'\n          description: A reference to the linked chart.\n      type: object\n    LinkedContentReferenceSuggestionState:\n      description: A mask that indicates which of the fields on the base LinkedContentReference\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties:\n        sheetsChartReferenceSuggestionState:\n          $ref: '#/components/schemas/SheetsChartReferenceSuggestionState'\n          description: A mask that indicates which of the fields in sheets_chart_reference\n            have been changed in this suggestion.\n      type: object\n    List:\n      description: A List represents the list attributes for a group of paragraphs\n        that all belong to the same list. A paragraph that is part of a list has a\n        reference to the list's ID in its bullet.\n      properties:\n        listProperties:\n          $ref: '#/components/schemas/ListProperties'\n          description: The properties of the list.\n        suggestedDeletionIds:\n          description: The suggested deletion IDs. If empty, then there are no suggested\n            deletions of this list.\n          items:\n            type: string\n          type: array\n        suggestedInsertionId:\n          description: The suggested insertion ID. If empty, then this is not a suggested\n            insertion.\n          type: string\n        suggestedListPropertiesChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedListProperties'\n          description: The suggested changes to the list properties, keyed by suggestion\n            ID.\n          type: object\n      type: object\n    ListProperties:\n      description: The properties of a list which describe the look and feel of bullets\n        belonging to paragraphs associated with a list.\n      properties:\n        nestingLevels:\n          description: Describes the properties of the bullets at the associated level.\n            A list has at most nine levels of nesting with nesting level 0 corresponding\n            to the top-most level and nesting level 8 corresponding to the most nested\n            level. The nesting levels are returned in ascending order with the least\n            nested returned first.\n          items:\n            $ref: '#/components/schemas/NestingLevel'\n          type: array\n      type: object\n    ListPropertiesSuggestionState:\n      description: A mask that indicates which of the fields on the base ListProperties\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties:\n        nestingLevelsSuggestionStates:\n          description: A mask that indicates which of the fields on the corresponding\n            NestingLevel in nesting_levels have been changed in this suggestion. The\n            nesting level suggestion states are returned in ascending order of the\n            nesting level with the least nested returned first.\n          items:\n            $ref: '#/components/schemas/NestingLevelSuggestionState'\n          type: array\n      type: object\n    Location:\n      description: A particular location in the document.\n      properties:\n        index:\n          description: The zero-based index, in UTF-16 code units. The index is relative\n            to the beginning of the segment specified by segment_id.\n          format: int32\n          type: integer\n        segmentId:\n          description: The ID of the header, footer or footnote the location is in.\n            An empty segment ID signifies the document's body.\n          type: string\n      type: object\n    MergeTableCellsRequest:\n      description: Merges cells in a Table.\n      properties:\n        tableRange:\n          $ref: '#/components/schemas/TableRange'\n          description: The table range specifying which cells of the table to merge.\n            Any text in the cells being merged will be concatenated and stored in\n            the \"head\" cell of the range. This is the upper-left cell of the range\n            when the content direction is left to right, and the upper-right cell\n            of the range otherwise. If the range is non-rectangular (which can occur\n            in some cases where the range covers cells that are already merged or\n            where the table is non-rectangular), a 400 bad request error is returned.\n      type: object\n    NamedRange:\n      description: A collection of Ranges with the same named range ID. Named ranges\n        allow developers to associate parts of a document with an arbitrary user-defined\n        label so their contents can be programmatically read or edited at a later\n        time. A document can contain multiple named ranges with the same name, but\n        every named range has a unique ID. A named range is created with a single\n        Range, and content inserted inside a named range generally expands that range.\n        However, certain document changes can cause the range to be split into multiple\n        ranges. Named ranges are not private. All applications and collaborators that\n        have access to the document can see its named ranges.\n      properties:\n        name:\n          description: The name of the named range.\n          type: string\n        namedRangeId:\n          description: The ID of the named range.\n          type: string\n        ranges:\n          description: The ranges that belong to this named range.\n          items:\n            $ref: '#/components/schemas/Range'\n          type: array\n      type: object\n    NamedRanges:\n      description: A collection of all the NamedRanges in the document that share\n        a given name.\n      properties:\n        name:\n          description: The name that all the named ranges share.\n          type: string\n        namedRanges:\n          description: The NamedRanges that share the same name.\n          items:\n            $ref: '#/components/schemas/NamedRange'\n          type: array\n      type: object\n    NamedStyle:\n      description: A named style. Paragraphs in the document can inherit their TextStyle\n        and ParagraphStyle from this named style when they have the same named style\n        type.\n      properties:\n        namedStyleType:\n          description: The type of this named style.\n          enum:\n          - NAMED_STYLE_TYPE_UNSPECIFIED\n          - NORMAL_TEXT\n          - TITLE\n          - SUBTITLE\n          - HEADING_1\n          - HEADING_2\n          - HEADING_3\n          - HEADING_4\n          - HEADING_5\n          - HEADING_6\n          type: string\n        paragraphStyle:\n          $ref: '#/components/schemas/ParagraphStyle'\n          description: The paragraph style of this named style.\n        textStyle:\n          $ref: '#/components/schemas/TextStyle'\n          description: The text style of this named style.\n      type: object\n    NamedStyleSuggestionState:\n      description: A suggestion state of a NamedStyle message.\n      properties:\n        namedStyleType:\n          description: The named style type that this suggestion state corresponds\n            to. This field is provided as a convenience for matching the NamedStyleSuggestionState\n            with its corresponding NamedStyle.\n          enum:\n          - NAMED_STYLE_TYPE_UNSPECIFIED\n          - NORMAL_TEXT\n          - TITLE\n          - SUBTITLE\n          - HEADING_1\n          - HEADING_2\n          - HEADING_3\n          - HEADING_4\n          - HEADING_5\n          - HEADING_6\n          type: string\n        paragraphStyleSuggestionState:\n          $ref: '#/components/schemas/ParagraphStyleSuggestionState'\n          description: A mask that indicates which of the fields in paragraph style\n            have been changed in this suggestion.\n        textStyleSuggestionState:\n          $ref: '#/components/schemas/TextStyleSuggestionState'\n          description: A mask that indicates which of the fields in text style have\n            been changed in this suggestion.\n      type: object\n    NamedStyles:\n      description: The named styles. Paragraphs in the document can inherit their\n        TextStyle and ParagraphStyle from these named styles.\n      properties:\n        styles:\n          description: The named styles. There is an entry for each of the possible\n            named style types.\n          items:\n            $ref: '#/components/schemas/NamedStyle'\n          type: array\n      type: object\n    NamedStylesSuggestionState:\n      description: The suggestion state of a NamedStyles message.\n      properties:\n        stylesSuggestionStates:\n          description: A mask that indicates which of the fields on the corresponding\n            NamedStyle in styles have been changed in this suggestion. The order of\n            these named style suggestion states match the order of the corresponding\n            named style within the named styles suggestion.\n          items:\n            $ref: '#/components/schemas/NamedStyleSuggestionState'\n          type: array\n      type: object\n    NestingLevel:\n      description: Contains properties describing the look and feel of a list bullet\n        at a given level of nesting.\n      properties:\n        bulletAlignment:\n          description: The alignment of the bullet within the space allotted for rendering\n            the bullet.\n          enum:\n          - BULLET_ALIGNMENT_UNSPECIFIED\n          - START\n          - CENTER\n          - END\n          type: string\n        glyphFormat:\n          description: The format string used by bullets at this level of nesting.\n            The glyph format contains one or more placeholders, and these placeholder\n            are replaced with the appropriate values depending on the glyph_type or\n            glyph_symbol. The placeholders follow the pattern `%[nesting_level]`.\n            Furthermore, placeholders can have prefixes and suffixes. Thus, the glyph\n            format follows the pattern `%[nesting_level]`. Note that the prefix and\n            suffix are optional and can be arbitrary strings. For example, the glyph\n            format `%0.` indicates that the rendered glyph will replace the placeholder\n            with the corresponding glyph for nesting level 0 followed by a period\n            as the suffix. So a list with a glyph type of UPPER_ALPHA and glyph format\n            `%0.` at nesting level 0 will result in a list with rendered glyphs `A.`\n            `B.` `C.` The glyph format can contain placeholders for the current nesting\n            level as well as placeholders for parent nesting levels. For example,\n            a list can have a glyph format of `%0.` at nesting level 0 and a glyph\n            format of `%0.%1.` at nesting level 1. Assuming both nesting levels have\n            DECIMAL glyph types, this would result in a list with rendered glyphs\n            `1.` `2.` ` 2.1.` ` 2.2.` `3.` For nesting levels that are ordered, the\n            string that replaces a placeholder in the glyph format for a particular\n            paragraph depends on the paragraph's order within the list.\n          type: string\n        glyphSymbol:\n          description: A custom glyph symbol used by bullets when paragraphs at this\n            level of nesting are unordered. The glyph symbol replaces placeholders\n            within the glyph_format. For example, if the glyph_symbol is the solid\n            circle corresponding to Unicode U+25cf code point and the glyph_format\n            is `%0`, the rendered glyph would be the solid circle.\n          type: string\n        glyphType:\n          description: The type of glyph used by bullets when paragraphs at this level\n            of nesting are ordered. The glyph type determines the type of glyph used\n            to replace placeholders within the glyph_format when paragraphs at this\n            level of nesting are ordered. For example, if the nesting level is 0,\n            the glyph_format is `%0.` and the glyph type is DECIMAL, then the rendered\n            glyph would replace the placeholder `%0` in the glyph format with a number\n            corresponding to list item's order within the list.\n          enum:\n          - GLYPH_TYPE_UNSPECIFIED\n          - NONE\n          - DECIMAL\n          - ZERO_DECIMAL\n          - UPPER_ALPHA\n          - ALPHA\n          - UPPER_ROMAN\n          - ROMAN\n          type: string\n        indentFirstLine:\n          $ref: '#/components/schemas/Dimension'\n          description: The amount of indentation for the first line of paragraphs\n            at this level of nesting.\n        indentStart:\n          $ref: '#/components/schemas/Dimension'\n          description: The amount of indentation for paragraphs at this level of nesting.\n            Applied to the side that corresponds to the start of the text, based on\n            the paragraph's content direction.\n        startNumber:\n          description: The number of the first list item at this nesting level. A\n            value of 0 is treated as a value of 1 for lettered lists and roman numeraled\n            lists, i.e. for values of both 0 and 1, lettered and roman numeraled lists\n            will begin at `a` and `i` respectively. This value is ignored for nesting\n            levels with unordered glyphs.\n          format: int32\n          type: integer\n        textStyle:\n          $ref: '#/components/schemas/TextStyle'\n          description: The text style of bullets at this level of nesting.\n      type: object\n    NestingLevelSuggestionState:\n      description: A mask that indicates which of the fields on the base NestingLevel\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties:\n        bulletAlignmentSuggested:\n          description: Indicates if there was a suggested change to bullet_alignment.\n          type: boolean\n        glyphFormatSuggested:\n          description: Indicates if there was a suggested change to glyph_format.\n          type: boolean\n        glyphSymbolSuggested:\n          description: Indicates if there was a suggested change to glyph_symbol.\n          type: boolean\n        glyphTypeSuggested:\n          description: Indicates if there was a suggested change to glyph_type.\n          type: boolean\n        indentFirstLineSuggested:\n          description: Indicates if there was a suggested change to indent_first_line.\n          type: boolean\n        indentStartSuggested:\n          description: Indicates if there was a suggested change to indent_start.\n          type: boolean\n        startNumberSuggested:\n          description: Indicates if there was a suggested change to start_number.\n          type: boolean\n        textStyleSuggestionState:\n          $ref: '#/components/schemas/TextStyleSuggestionState'\n          description: A mask that indicates which of the fields in text style have\n            been changed in this suggestion.\n      type: object\n    ObjectReferences:\n      description: A collection of object IDs.\n      properties:\n        objectIds:\n          description: The object IDs.\n          items:\n            type: string\n          type: array\n      type: object\n    OptionalColor:\n      description: A color that can either be fully opaque or fully transparent.\n      properties:\n        color:\n          $ref: '#/components/schemas/Color'\n          description: If set, this will be used as an opaque color. If unset, this\n            represents a transparent color.\n      type: object\n    PageBreak:\n      description: A ParagraphElement representing a page break. A page break makes\n        the subsequent text start at the top of the next page.\n      properties:\n        suggestedDeletionIds:\n          description: The suggested deletion IDs. If empty, then there are no suggested\n            deletions of this content.\n          items:\n            type: string\n          type: array\n        suggestedInsertionIds:\n          description: The suggested insertion IDs. A PageBreak may have multiple\n            insertion IDs if it is a nested suggested change. If empty, then this\n            is not a suggested insertion.\n          items:\n            type: string\n          type: array\n        suggestedTextStyleChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedTextStyle'\n          description: The suggested text style changes to this PageBreak, keyed by\n            suggestion ID.\n          type: object\n        textStyle:\n          $ref: '#/components/schemas/TextStyle'\n          description: The text style of this PageBreak. Similar to text content,\n            like text runs and footnote references, the text style of a page break\n            can affect content layout as well as the styling of text inserted adjacent\n            to it.\n      type: object\n    Paragraph:\n      description: A StructuralElement representing a paragraph. A paragraph is a\n        range of content that is terminated with a newline character.\n      properties:\n        bullet:\n          $ref: '#/components/schemas/Bullet'\n          description: The bullet for this paragraph. If not present, the paragraph\n            does not belong to a list.\n        elements:\n          description: The content of the paragraph broken down into its component\n            parts.\n          items:\n            $ref: '#/components/schemas/ParagraphElement'\n          type: array\n        paragraphStyle:\n          $ref: '#/components/schemas/ParagraphStyle'\n          description: The style of this paragraph.\n        positionedObjectIds:\n          description: The IDs of the positioned objects tethered to this paragraph.\n          items:\n            type: string\n          type: array\n        suggestedBulletChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedBullet'\n          description: The suggested changes to this paragraph's bullet.\n          type: object\n        suggestedParagraphStyleChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedParagraphStyle'\n          description: The suggested paragraph style changes to this paragraph, keyed\n            by suggestion ID.\n          type: object\n        suggestedPositionedObjectIds:\n          additionalProperties:\n            $ref: '#/components/schemas/ObjectReferences'\n          description: The IDs of the positioned objects that are suggested to be\n            attached to this paragraph, keyed by suggestion ID.\n          type: object\n      type: object\n    ParagraphBorder:\n      description: A border around a paragraph.\n      properties:\n        color:\n          $ref: '#/components/schemas/OptionalColor'\n          description: The color of the border.\n        dashStyle:\n          description: The dash style of the border.\n          enum:\n          - DASH_STYLE_UNSPECIFIED\n          - SOLID\n          - DOT\n          - DASH\n          type: string\n        padding:\n          $ref: '#/components/schemas/Dimension'\n          description: The padding of the border.\n        width:\n          $ref: '#/components/schemas/Dimension'\n          description: The width of the border.\n      type: object\n    ParagraphElement:\n      description: A ParagraphElement describes content within a Paragraph.\n      properties:\n        autoText:\n          $ref: '#/components/schemas/AutoText'\n          description: An auto text paragraph element.\n        columnBreak:\n          $ref: '#/components/schemas/ColumnBreak'\n          description: A column break paragraph element.\n        endIndex:\n          description: The zero-base end index of this paragraph element, exclusive,\n            in UTF-16 code units.\n          format: int32\n          type: integer\n        equation:\n          $ref: '#/components/schemas/Equation'\n          description: An equation paragraph element.\n        footnoteReference:\n          $ref: '#/components/schemas/FootnoteReference'\n          description: A footnote reference paragraph element.\n        horizontalRule:\n          $ref: '#/components/schemas/HorizontalRule'\n          description: A horizontal rule paragraph element.\n        inlineObjectElement:\n          $ref: '#/components/schemas/InlineObjectElement'\n          description: An inline object paragraph element.\n        pageBreak:\n          $ref: '#/components/schemas/PageBreak'\n          description: A page break paragraph element.\n        person:\n          $ref: '#/components/schemas/Person'\n          description: A paragraph element that links to a person or email address.\n        richLink:\n          $ref: '#/components/schemas/RichLink'\n          description: A paragraph element that links to a Google resource (such as\n            a file in Drive, a Youtube video, a Calendar event, etc.)\n        startIndex:\n          description: The zero-based start index of this paragraph element, in UTF-16\n            code units.\n          format: int32\n          type: integer\n        textRun:\n          $ref: '#/components/schemas/TextRun'\n          description: A text run paragraph element.\n      type: object\n    ParagraphStyle:\n      description: 'Styles that apply to a whole paragraph. Inherited paragraph styles\n        are represented as unset fields in this message. A paragraph style''s parent\n        depends on where the paragraph style is defined: * The ParagraphStyle on a\n        Paragraph inherits from the paragraph''s corresponding named style type. *\n        The ParagraphStyle on a named style inherits from the normal text named style.\n        * The ParagraphStyle of the normal text named style inherits from the default\n        paragraph style in the Docs editor. * The ParagraphStyle on a Paragraph element\n        that is contained in a table may inherit its paragraph style from the table\n        style. If the paragraph style does not inherit from a parent, unsetting fields\n        will revert the style to a value matching the defaults in the Docs editor.'\n      properties:\n        alignment:\n          description: The text alignment for this paragraph.\n          enum:\n          - ALIGNMENT_UNSPECIFIED\n          - START\n          - CENTER\n          - END\n          - JUSTIFIED\n          type: string\n        avoidWidowAndOrphan:\n          description: Whether to avoid widows and orphans for the paragraph. If unset,\n            the value is inherited from the parent.\n          type: boolean\n        borderBetween:\n          $ref: '#/components/schemas/ParagraphBorder'\n          description: The border between this paragraph and the next and previous\n            paragraphs. If unset, the value is inherited from the parent. The between\n            border is rendered when the adjacent paragraph has the same border and\n            indent properties. Paragraph borders cannot be partially updated. When\n            making changes to a paragraph border the new border must be specified\n            in its entirety.\n        borderBottom:\n          $ref: '#/components/schemas/ParagraphBorder'\n          description: The border at the bottom of this paragraph. If unset, the value\n            is inherited from the parent. The bottom border is rendered when the paragraph\n            below has different border and indent properties. Paragraph borders cannot\n            be partially updated. When making changes to a paragraph border the new\n            border must be specified in its entirety.\n        borderLeft:\n          $ref: '#/components/schemas/ParagraphBorder'\n          description: The border to the left of this paragraph. If unset, the value\n            is inherited from the parent. Paragraph borders cannot be partially updated.\n            When making changes to a paragraph border the new border must be specified\n            in its entirety.\n        borderRight:\n          $ref: '#/components/schemas/ParagraphBorder'\n          description: The border to the right of this paragraph. If unset, the value\n            is inherited from the parent. Paragraph borders cannot be partially updated.\n            When making changes to a paragraph border the new border must be specified\n            in its entirety.\n        borderTop:\n          $ref: '#/components/schemas/ParagraphBorder'\n          description: The border at the top of this paragraph. If unset, the value\n            is inherited from the parent. The top border is rendered when the paragraph\n            above has different border and indent properties. Paragraph borders cannot\n            be partially updated. When making changes to a paragraph border the new\n            border must be specified in its entirety.\n        direction:\n          description: The text direction of this paragraph. If unset, the value defaults\n            to LEFT_TO_RIGHT since paragraph direction is not inherited.\n          enum:\n          - CONTENT_DIRECTION_UNSPECIFIED\n          - LEFT_TO_RIGHT\n          - RIGHT_TO_LEFT\n          type: string\n        headingId:\n          description: The heading ID of the paragraph. If empty, then this paragraph\n            is not a heading. This property is read-only.\n          type: string\n        indentEnd:\n          $ref: '#/components/schemas/Dimension'\n          description: The amount of indentation for the paragraph on the side that\n            corresponds to the end of the text, based on the current paragraph direction.\n            If unset, the value is inherited from the parent.\n        indentFirstLine:\n          $ref: '#/components/schemas/Dimension'\n          description: The amount of indentation for the first line of the paragraph.\n            If unset, the value is inherited from the parent.\n        indentStart:\n          $ref: '#/components/schemas/Dimension'\n          description: The amount of indentation for the paragraph on the side that\n            corresponds to the start of the text, based on the current paragraph direction.\n            If unset, the value is inherited from the parent.\n        keepLinesTogether:\n          description: Whether all lines of the paragraph should be laid out on the\n            same page or column if possible. If unset, the value is inherited from\n            the parent.\n          type: boolean\n        keepWithNext:\n          description: Whether at least a part of this paragraph should be laid out\n            on the same page or column as the next paragraph if possible. If unset,\n            the value is inherited from the parent.\n          type: boolean\n        lineSpacing:\n          description: The amount of space between lines, as a percentage of normal,\n            where normal is represented as 100.0. If unset, the value is inherited\n            from the parent.\n          format: float\n          type: number\n        namedStyleType:\n          description: The named style type of the paragraph. Since updating the named\n            style type affects other properties within ParagraphStyle, the named style\n            type is applied before the other properties are updated.\n          enum:\n          - NAMED_STYLE_TYPE_UNSPECIFIED\n          - NORMAL_TEXT\n          - TITLE\n          - SUBTITLE\n          - HEADING_1\n          - HEADING_2\n          - HEADING_3\n          - HEADING_4\n          - HEADING_5\n          - HEADING_6\n          type: string\n        shading:\n          $ref: '#/components/schemas/Shading'\n          description: The shading of the paragraph. If unset, the value is inherited\n            from the parent.\n        spaceAbove:\n          $ref: '#/components/schemas/Dimension'\n          description: The amount of extra space above the paragraph. If unset, the\n            value is inherited from the parent.\n        spaceBelow:\n          $ref: '#/components/schemas/Dimension'\n          description: The amount of extra space below the paragraph. If unset, the\n            value is inherited from the parent.\n        spacingMode:\n          description: The spacing mode for the paragraph.\n          enum:\n          - SPACING_MODE_UNSPECIFIED\n          - NEVER_COLLAPSE\n          - COLLAPSE_LISTS\n          type: string\n        tabStops:\n          description: A list of the tab stops for this paragraph. The list of tab\n            stops is not inherited. This property is read-only.\n          items:\n            $ref: '#/components/schemas/TabStop'\n          type: array\n      type: object\n    ParagraphStyleSuggestionState:\n      description: A mask that indicates which of the fields on the base ParagraphStyle\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties:\n        alignmentSuggested:\n          description: Indicates if there was a suggested change to alignment.\n          type: boolean\n        avoidWidowAndOrphanSuggested:\n          description: Indicates if there was a suggested change to avoid_widow_and_orphan.\n          type: boolean\n        borderBetweenSuggested:\n          description: Indicates if there was a suggested change to border_between.\n          type: boolean\n        borderBottomSuggested:\n          description: Indicates if there was a suggested change to border_bottom.\n          type: boolean\n        borderLeftSuggested:\n          description: Indicates if there was a suggested change to border_left.\n          type: boolean\n        borderRightSuggested:\n          description: Indicates if there was a suggested change to border_right.\n          type: boolean\n        borderTopSuggested:\n          description: Indicates if there was a suggested change to border_top.\n          type: boolean\n        directionSuggested:\n          description: Indicates if there was a suggested change to direction.\n          type: boolean\n        headingIdSuggested:\n          description: Indicates if there was a suggested change to heading_id.\n          type: boolean\n        indentEndSuggested:\n          description: Indicates if there was a suggested change to indent_end.\n          type: boolean\n        indentFirstLineSuggested:\n          description: Indicates if there was a suggested change to indent_first_line.\n          type: boolean\n        indentStartSuggested:\n          description: Indicates if there was a suggested change to indent_start.\n          type: boolean\n        keepLinesTogetherSuggested:\n          description: Indicates if there was a suggested change to keep_lines_together.\n          type: boolean\n        keepWithNextSuggested:\n          description: Indicates if there was a suggested change to keep_with_next.\n          type: boolean\n        lineSpacingSuggested:\n          description: Indicates if there was a suggested change to line_spacing.\n          type: boolean\n        namedStyleTypeSuggested:\n          description: Indicates if there was a suggested change to named_style_type.\n          type: boolean\n        shadingSuggestionState:\n          $ref: '#/components/schemas/ShadingSuggestionState'\n          description: A mask that indicates which of the fields in shading have been\n            changed in this suggestion.\n        spaceAboveSuggested:\n          description: Indicates if there was a suggested change to space_above.\n          type: boolean\n        spaceBelowSuggested:\n          description: Indicates if there was a suggested change to space_below.\n          type: boolean\n        spacingModeSuggested:\n          description: Indicates if there was a suggested change to spacing_mode.\n          type: boolean\n      type: object\n    Person:\n      description: A person or email address mentioned in a document. These mentions\n        behave as a single, immutable element containing the person's name or email\n        address.\n      properties:\n        personId:\n          description: Output only. The unique ID of this link.\n          readOnly: true\n          type: string\n        personProperties:\n          $ref: '#/components/schemas/PersonProperties'\n          description: Output only. The properties of this Person. This field is always\n            present.\n          readOnly: true\n        suggestedDeletionIds:\n          description: IDs for suggestions that remove this person link from the document.\n            A Person might have multiple deletion IDs if, for example, multiple users\n            suggest to delete it. If empty, then this person link isn't suggested\n            for deletion.\n          items:\n            type: string\n          type: array\n        suggestedInsertionIds:\n          description: IDs for suggestions that insert this person link into the document.\n            A Person might have multiple insertion IDs if it is a nested suggested\n            change (a suggestion within a suggestion made by a different user, for\n            example). If empty, then this person link isn't a suggested insertion.\n          items:\n            type: string\n          type: array\n        suggestedTextStyleChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedTextStyle'\n          description: The suggested text style changes to this Person, keyed by suggestion\n            ID.\n          type: object\n        textStyle:\n          $ref: '#/components/schemas/TextStyle'\n          description: The text style of this Person.\n      type: object\n    PersonProperties:\n      description: Properties specific to a linked Person.\n      properties:\n        email:\n          description: Output only. The email address linked to this Person. This\n            field is always present.\n          readOnly: true\n          type: string\n        name:\n          description: Output only. The name of the person if it is displayed in the\n            link text instead of the person's email address.\n          readOnly: true\n          type: string\n      type: object\n    PositionedObject:\n      description: An object that is tethered to a Paragraph and positioned relative\n        to the beginning of the paragraph. A PositionedObject contains an EmbeddedObject\n        such as an image.\n      properties:\n        objectId:\n          description: The ID of this positioned object.\n          type: string\n        positionedObjectProperties:\n          $ref: '#/components/schemas/PositionedObjectProperties'\n          description: The properties of this positioned object.\n        suggestedDeletionIds:\n          description: The suggested deletion IDs. If empty, then there are no suggested\n            deletions of this content.\n          items:\n            type: string\n          type: array\n        suggestedInsertionId:\n          description: The suggested insertion ID. If empty, then this is not a suggested\n            insertion.\n          type: string\n        suggestedPositionedObjectPropertiesChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedPositionedObjectProperties'\n          description: The suggested changes to the positioned object properties,\n            keyed by suggestion ID.\n          type: object\n      type: object\n    PositionedObjectPositioning:\n      description: The positioning of a PositionedObject. The positioned object is\n        positioned relative to the beginning of the Paragraph it is tethered to.\n      properties:\n        layout:\n          description: The layout of this positioned object.\n          enum:\n          - POSITIONED_OBJECT_LAYOUT_UNSPECIFIED\n          - WRAP_TEXT\n          - BREAK_LEFT\n          - BREAK_RIGHT\n          - BREAK_LEFT_RIGHT\n          - IN_FRONT_OF_TEXT\n          - BEHIND_TEXT\n          type: string\n        leftOffset:\n          $ref: '#/components/schemas/Dimension'\n          description: The offset of the left edge of the positioned object relative\n            to the beginning of the Paragraph it is tethered to. The exact positioning\n            of the object can depend on other content in the document and the document's\n            styling.\n        topOffset:\n          $ref: '#/components/schemas/Dimension'\n          description: The offset of the top edge of the positioned object relative\n            to the beginning of the Paragraph it is tethered to. The exact positioning\n            of the object can depend on other content in the document and the document's\n            styling.\n      type: object\n    PositionedObjectPositioningSuggestionState:\n      description: A mask that indicates which of the fields on the base PositionedObjectPositioning\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties:\n        layoutSuggested:\n          description: Indicates if there was a suggested change to layout.\n          type: boolean\n        leftOffsetSuggested:\n          description: Indicates if there was a suggested change to left_offset.\n          type: boolean\n        topOffsetSuggested:\n          description: Indicates if there was a suggested change to top_offset.\n          type: boolean\n      type: object\n    PositionedObjectProperties:\n      description: Properties of a PositionedObject.\n      properties:\n        embeddedObject:\n          $ref: '#/components/schemas/EmbeddedObject'\n          description: The embedded object of this positioned object.\n        positioning:\n          $ref: '#/components/schemas/PositionedObjectPositioning'\n          description: The positioning of this positioned object relative to the newline\n            of the Paragraph that references this positioned object.\n      type: object\n    PositionedObjectPropertiesSuggestionState:\n      description: A mask that indicates which of the fields on the base PositionedObjectProperties\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties:\n        embeddedObjectSuggestionState:\n          $ref: '#/components/schemas/EmbeddedObjectSuggestionState'\n          description: A mask that indicates which of the fields in embedded_object\n            have been changed in this suggestion.\n        positioningSuggestionState:\n          $ref: '#/components/schemas/PositionedObjectPositioningSuggestionState'\n          description: A mask that indicates which of the fields in positioning have\n            been changed in this suggestion.\n      type: object\n    Range:\n      description: Specifies a contiguous range of text.\n      properties:\n        endIndex:\n          description: The zero-based end index of this range, exclusive, in UTF-16\n            code units. In all current uses, an end index must be provided. This field\n            is an Int32Value in order to accommodate future use cases with open-ended\n            ranges.\n          format: int32\n          type: integer\n        segmentId:\n          description: The ID of the header, footer or footnote that this range is\n            contained in. An empty segment ID signifies the document's body.\n          type: string\n        startIndex:\n          description: The zero-based start index of this range, in UTF-16 code units.\n            In all current uses, a start index must be provided. This field is an\n            Int32Value in order to accommodate future use cases with open-ended ranges.\n          format: int32\n          type: integer\n      type: object\n    ReplaceAllTextRequest:\n      description: Replaces all instances of text matching a criteria with replace\n        text.\n      properties:\n        containsText:\n          $ref: '#/components/schemas/SubstringMatchCriteria'\n          description: Finds text in the document matching this substring.\n        replaceText:\n          description: The text that will replace the matched text.\n          type: string\n      type: object\n    ReplaceAllTextResponse:\n      description: The result of replacing text.\n      properties:\n        occurrencesChanged:\n          description: The number of occurrences changed by replacing all text.\n          format: int32\n          type: integer\n      type: object\n    ReplaceImageRequest:\n      description: Replaces an existing image with a new image. Replacing an image\n        removes some image effects from the existing image in order to mirror the\n        behavior of the Docs editor.\n      properties:\n        imageObjectId:\n          description: The ID of the existing image that will be replaced.\n          type: string\n        imageReplaceMethod:\n          description: The replacement method.\n          enum:\n          - IMAGE_REPLACE_METHOD_UNSPECIFIED\n          - CENTER_CROP\n          type: string\n        uri:\n          description: The URI of the new image. The image is fetched once at insertion\n            time and a copy is stored for display inside the document. Images must\n            be less than 50MB in size, cannot exceed 25 megapixels, and must be in\n            one of PNG, JPEG, or GIF format. The provided URI can be at most 2 kB\n            in length. The URI itself is saved with the image, and exposed via the\n            ImageProperties.source_uri field.\n          type: string\n      type: object\n    ReplaceNamedRangeContentRequest:\n      description: Replaces the contents of the specified NamedRange or NamedRanges\n        with the given replacement content. Note that an individual NamedRange may\n        consist of multiple discontinuous ranges. In this case, only the content in\n        the first range will be replaced. The other ranges and their content will\n        be deleted. In cases where replacing or deleting any ranges would result in\n        an invalid document structure, a 400 bad request error is returned.\n      properties:\n        namedRangeId:\n          description: The ID of the named range whose content will be replaced. If\n            there is no named range with the given ID a 400 bad request error is returned.\n          type: string\n        namedRangeName:\n          description: The name of the NamedRanges whose content will be replaced.\n            If there are multiple named ranges with the given name, then the content\n            of each one will be replaced. If there are no named ranges with the given\n            name, then the request will be a no-op.\n          type: string\n        text:\n          description: Replaces the content of the specified named range(s) with the\n            given text.\n          type: string\n      type: object\n    Request:\n      description: A single update to apply to a document.\n      properties:\n        createFooter:\n          $ref: '#/components/schemas/CreateFooterRequest'\n          description: Creates a footer.\n        createFootnote:\n          $ref: '#/components/schemas/CreateFootnoteRequest'\n          description: Creates a footnote.\n        createHeader:\n          $ref: '#/components/schemas/CreateHeaderRequest'\n          description: Creates a header.\n        createNamedRange:\n          $ref: '#/components/schemas/CreateNamedRangeRequest'\n          description: Creates a named range.\n        createParagraphBullets:\n          $ref: '#/components/schemas/CreateParagraphBulletsRequest'\n          description: Creates bullets for paragraphs.\n        deleteContentRange:\n          $ref: '#/components/schemas/DeleteContentRangeRequest'\n          description: Deletes content from the document.\n        deleteFooter:\n          $ref: '#/components/schemas/DeleteFooterRequest'\n          description: Deletes a footer from the document.\n        deleteHeader:\n          $ref: '#/components/schemas/DeleteHeaderRequest'\n          description: Deletes a header from the document.\n        deleteNamedRange:\n          $ref: '#/components/schemas/DeleteNamedRangeRequest'\n          description: Deletes a named range.\n        deleteParagraphBullets:\n          $ref: '#/components/schemas/DeleteParagraphBulletsRequest'\n          description: Deletes bullets from paragraphs.\n        deletePositionedObject:\n          $ref: '#/components/schemas/DeletePositionedObjectRequest'\n          description: Deletes a positioned object from the document.\n        deleteTableColumn:\n          $ref: '#/components/schemas/DeleteTableColumnRequest'\n          description: Deletes a column from a table.\n        deleteTableRow:\n          $ref: '#/components/schemas/DeleteTableRowRequest'\n          description: Deletes a row from a table.\n        insertInlineImage:\n          $ref: '#/components/schemas/InsertInlineImageRequest'\n          description: Inserts an inline image at the specified location.\n        insertPageBreak:\n          $ref: '#/components/schemas/InsertPageBreakRequest'\n          description: Inserts a page break at the specified location.\n        insertSectionBreak:\n          $ref: '#/components/schemas/InsertSectionBreakRequest'\n          description: Inserts a section break at the specified location.\n        insertTable:\n          $ref: '#/components/schemas/InsertTableRequest'\n          description: Inserts a table at the specified location.\n        insertTableColumn:\n          $ref: '#/components/schemas/InsertTableColumnRequest'\n          description: Inserts an empty column into a table.\n        insertTableRow:\n          $ref: '#/components/schemas/InsertTableRowRequest'\n          description: Inserts an empty row into a table.\n        insertText:\n          $ref: '#/components/schemas/InsertTextRequest'\n          description: Inserts text at the specified location.\n        mergeTableCells:\n          $ref: '#/components/schemas/MergeTableCellsRequest'\n          description: Merges cells in a table.\n        replaceAllText:\n          $ref: '#/components/schemas/ReplaceAllTextRequest'\n          description: Replaces all instances of the specified text.\n        replaceImage:\n          $ref: '#/components/schemas/ReplaceImageRequest'\n          description: Replaces an image in the document.\n        replaceNamedRangeContent:\n          $ref: '#/components/schemas/ReplaceNamedRangeContentRequest'\n          description: Replaces the content in a named range.\n        unmergeTableCells:\n          $ref: '#/components/schemas/UnmergeTableCellsRequest'\n          description: Unmerges cells in a table.\n        updateDocumentStyle:\n          $ref: '#/components/schemas/UpdateDocumentStyleRequest'\n          description: Updates the style of the document.\n        updateParagraphStyle:\n          $ref: '#/components/schemas/UpdateParagraphStyleRequest'\n          description: Updates the paragraph style at the specified range.\n        updateSectionStyle:\n          $ref: '#/components/schemas/UpdateSectionStyleRequest'\n          description: Updates the section style of the specified range.\n        updateTableCellStyle:\n          $ref: '#/components/schemas/UpdateTableCellStyleRequest'\n          description: Updates the style of table cells.\n        updateTableColumnProperties:\n          $ref: '#/components/schemas/UpdateTableColumnPropertiesRequest'\n          description: Updates the properties of columns in a table.\n        updateTableRowStyle:\n          $ref: '#/components/schemas/UpdateTableRowStyleRequest'\n          description: Updates the row style in a table.\n        updateTextStyle:\n          $ref: '#/components/schemas/UpdateTextStyleRequest'\n          description: Updates the text style at the specified range.\n      type: object\n    Response:\n      description: A single response from an update.\n      properties:\n        createFooter:\n          $ref: '#/components/schemas/CreateFooterResponse'\n          description: The result of creating a footer.\n        createFootnote:\n          $ref: '#/components/schemas/CreateFootnoteResponse'\n          description: The result of creating a footnote.\n        createHeader:\n          $ref: '#/components/schemas/CreateHeaderResponse'\n          description: The result of creating a header.\n        createNamedRange:\n          $ref: '#/components/schemas/CreateNamedRangeResponse'\n          description: The result of creating a named range.\n        insertInlineImage:\n          $ref: '#/components/schemas/InsertInlineImageResponse'\n          description: The result of inserting an inline image.\n        insertInlineSheetsChart:\n          $ref: '#/components/schemas/InsertInlineSheetsChartResponse'\n          description: The result of inserting an inline Google Sheets chart.\n        replaceAllText:\n          $ref: '#/components/schemas/ReplaceAllTextResponse'\n          description: The result of replacing text.\n      type: object\n    RgbColor:\n      description: An RGB color.\n      properties:\n        blue:\n          description: The blue component of the color, from 0.0 to 1.0.\n          format: float\n          type: number\n        green:\n          description: The green component of the color, from 0.0 to 1.0.\n          format: float\n          type: number\n        red:\n          description: The red component of the color, from 0.0 to 1.0.\n          format: float\n          type: number\n      type: object\n    RichLink:\n      description: A link to a Google resource (e.g., a file in Drive, a YouTube video,\n        a Calendar event, etc.).\n      properties:\n        richLinkId:\n          description: Output only. The ID of this link.\n          readOnly: true\n          type: string\n        richLinkProperties:\n          $ref: '#/components/schemas/RichLinkProperties'\n          description: Output only. The properties of this RichLink. This field is\n            always present.\n          readOnly: true\n        suggestedDeletionIds:\n          description: IDs for suggestions that remove this link from the document.\n            A RichLink might have multiple deletion IDs if, for example, multiple\n            users suggest to delete it. If empty, then this person link isn't suggested\n            for deletion.\n          items:\n            type: string\n          type: array\n        suggestedInsertionIds:\n          description: IDs for suggestions that insert this link into the document.\n            A RichLink might have multiple insertion IDs if it is a nested suggested\n            change (a suggestion within a suggestion made by a different user, for\n            example). If empty, then this person link isn't a suggested insertion.\n          items:\n            type: string\n          type: array\n        suggestedTextStyleChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedTextStyle'\n          description: The suggested text style changes to this RichLink, keyed by\n            suggestion ID.\n          type: object\n        textStyle:\n          $ref: '#/components/schemas/TextStyle'\n          description: The text style of this RichLink.\n      type: object\n    RichLinkProperties:\n      description: Properties specific to a RichLink.\n      properties:\n        mimeType:\n          description: Output only. The [MIME type](https://developers.google.com/drive/api/v3/mime-types)\n            of the RichLink, if there is one (i.e., when it is a file in Drive).\n          readOnly: true\n          type: string\n        title:\n          description: Output only. The title of the RichLink as displayed in the\n            link. This title matches the title of the linked resource at the time\n            of the insertion or last update of the link. This field is always present.\n          readOnly: true\n          type: string\n        uri:\n          description: Output only. The URI to the RichLink. This is always present.\n          readOnly: true\n          type: string\n      type: object\n    SectionBreak:\n      description: A StructuralElement representing a section break. A section is\n        a range of content which has the same SectionStyle. A section break represents\n        the start of a new section, and the section style applies to the section after\n        the section break. The document body always begins with a section break.\n      properties:\n        sectionStyle:\n          $ref: '#/components/schemas/SectionStyle'\n          description: The style of the section after this section break.\n        suggestedDeletionIds:\n          description: The suggested deletion IDs. If empty, then there are no suggested\n            deletions of this content.\n          items:\n            type: string\n          type: array\n        suggestedInsertionIds:\n          description: The suggested insertion IDs. A SectionBreak may have multiple\n            insertion IDs if it is a nested suggested change. If empty, then this\n            is not a suggested insertion.\n          items:\n            type: string\n          type: array\n      type: object\n    SectionColumnProperties:\n      description: Properties that apply to a section's column.\n      properties:\n        paddingEnd:\n          $ref: '#/components/schemas/Dimension'\n          description: The padding at the end of the column.\n        width:\n          $ref: '#/components/schemas/Dimension'\n          description: Output only. The width of the column.\n      type: object\n    SectionStyle:\n      description: The styling that applies to a section.\n      properties:\n        columnProperties:\n          description: The section's columns properties. If empty, the section contains\n            one column with the default properties in the Docs editor. A section can\n            be updated to have no more than three columns. When updating this property,\n            setting a concrete value is required. Unsetting this property will result\n            in a 400 bad request error.\n          items:\n            $ref: '#/components/schemas/SectionColumnProperties'\n          type: array\n        columnSeparatorStyle:\n          description: The style of column separators. This style can be set even\n            when there is one column in the section. When updating this property,\n            setting a concrete value is required. Unsetting this property results\n            in a 400 bad request error.\n          enum:\n          - COLUMN_SEPARATOR_STYLE_UNSPECIFIED\n          - NONE\n          - BETWEEN_EACH_COLUMN\n          type: string\n        contentDirection:\n          description: The content direction of this section. If unset, the value\n            defaults to LEFT_TO_RIGHT. When updating this property, setting a concrete\n            value is required. Unsetting this property results in a 400 bad request\n            error.\n          enum:\n          - CONTENT_DIRECTION_UNSPECIFIED\n          - LEFT_TO_RIGHT\n          - RIGHT_TO_LEFT\n          type: string\n        defaultFooterId:\n          description: The ID of the default footer. If unset, the value inherits\n            from the previous SectionBreak's SectionStyle. If the value is unset in\n            the first SectionBreak, it inherits from DocumentStyle's default_footer_id.\n            This property is read-only.\n          type: string\n        defaultHeaderId:\n          description: The ID of the default header. If unset, the value inherits\n            from the previous SectionBreak's SectionStyle. If the value is unset in\n            the first SectionBreak, it inherits from DocumentStyle's default_header_id.\n            This property is read-only.\n          type: string\n        evenPageFooterId:\n          description: The ID of the footer used only for even pages. If the value\n            of DocumentStyle's use_even_page_header_footer is true, this value is\n            used for the footers on even pages in the section. If it is false, the\n            footers on even pages uses the default_footer_id. If unset, the value\n            inherits from the previous SectionBreak's SectionStyle. If the value is\n            unset in the first SectionBreak, it inherits from DocumentStyle's even_page_footer_id.\n            This property is read-only.\n          type: string\n        evenPageHeaderId:\n          description: The ID of the header used only for even pages. If the value\n            of DocumentStyle's use_even_page_header_footer is true, this value is\n            used for the headers on even pages in the section. If it is false, the\n            headers on even pages uses the default_header_id. If unset, the value\n            inherits from the previous SectionBreak's SectionStyle. If the value is\n            unset in the first SectionBreak, it inherits from DocumentStyle's even_page_header_id.\n            This property is read-only.\n          type: string\n        firstPageFooterId:\n          description: The ID of the footer used only for the first page of the section.\n            If use_first_page_header_footer is true, this value is used for the footer\n            on the first page of the section. If it is false, the footer on the first\n            page of the section uses the default_footer_id. If unset, the value inherits\n            from the previous SectionBreak's SectionStyle. If the value is unset in\n            the first SectionBreak, it inherits from DocumentStyle's first_page_footer_id.\n            This property is read-only.\n          type: string\n        firstPageHeaderId:\n          description: The ID of the header used only for the first page of the section.\n            If use_first_page_header_footer is true, this value is used for the header\n            on the first page of the section. If it is false, the header on the first\n            page of the section uses the default_header_id. If unset, the value inherits\n            from the previous SectionBreak's SectionStyle. If the value is unset in\n            the first SectionBreak, it inherits from DocumentStyle's first_page_header_id.\n            This property is read-only.\n          type: string\n        marginBottom:\n          $ref: '#/components/schemas/Dimension'\n          description: The bottom page margin of the section. If unset, uses margin_bottom\n            from DocumentStyle. When updating this property, setting a concrete value\n            is required. Unsetting this property results in a 400 bad request error.\n        marginFooter:\n          $ref: '#/components/schemas/Dimension'\n          description: The footer margin of the section. If unset, uses margin_footer\n            from DocumentStyle. If updated, use_custom_header_footer_margins is set\n            to true on DocumentStyle. The value of use_custom_header_footer_margins\n            on DocumentStyle indicates if a footer margin is being respected for this\n            section When updating this property, setting a concrete value is required.\n            Unsetting this property results in a 400 bad request error.\n        marginHeader:\n          $ref: '#/components/schemas/Dimension'\n          description: The header margin of the section. If unset, uses margin_header\n            from DocumentStyle. If updated, use_custom_header_footer_margins is set\n            to true on DocumentStyle. The value of use_custom_header_footer_margins\n            on DocumentStyle indicates if a header margin is being respected for this\n            section. When updating this property, setting a concrete value is required.\n            Unsetting this property results in a 400 bad request error.\n        marginLeft:\n          $ref: '#/components/schemas/Dimension'\n          description: The left page margin of the section. If unset, uses margin_left\n            from DocumentStyle. Updating left margin causes columns in this section\n            to resize. Since the margin affects column width, it is applied before\n            column properties. When updating this property, setting a concrete value\n            is required. Unsetting this property results in a 400 bad request error.\n        marginRight:\n          $ref: '#/components/schemas/Dimension'\n          description: The right page margin of the section. If unset, uses margin_right\n            from DocumentStyle. Updating right margin causes columns in this section\n            to resize. Since the margin affects column width, it is applied before\n            column properties. When updating this property, setting a concrete value\n            is required. Unsetting this property results in a 400 bad request error.\n        marginTop:\n          $ref: '#/components/schemas/Dimension'\n          description: The top page margin of the section. If unset, uses margin_top\n            from DocumentStyle. When updating this property, setting a concrete value\n            is required. Unsetting this property results in a 400 bad request error.\n        pageNumberStart:\n          description: The page number from which to start counting the number of\n            pages for this section. If unset, page numbering continues from the previous\n            section. If the value is unset in the first SectionBreak, refer to DocumentStyle's\n            page_number_start. When updating this property, setting a concrete value\n            is required. Unsetting this property results in a 400 bad request error.\n          format: int32\n          type: integer\n        sectionType:\n          description: Output only. The type of section.\n          enum:\n          - SECTION_TYPE_UNSPECIFIED\n          - CONTINUOUS\n          - NEXT_PAGE\n          type: string\n        useFirstPageHeaderFooter:\n          description: Indicates whether to use the first page header / footer IDs\n            for the first page of the section. If unset, it inherits from DocumentStyle's\n            use_first_page_header_footer for the first section. If the value is unset\n            for subsequent sectors, it should be interpreted as false. When updating\n            this property, setting a concrete value is required. Unsetting this property\n            results in a 400 bad request error.\n          type: boolean\n      type: object\n    Shading:\n      description: The shading of a paragraph.\n      properties:\n        backgroundColor:\n          $ref: '#/components/schemas/OptionalColor'\n          description: The background color of this paragraph shading.\n      type: object\n    ShadingSuggestionState:\n      description: A mask that indicates which of the fields on the base Shading have\n        been changed in this suggested change. For any field set to true, there is\n        a new suggested value.\n      properties:\n        backgroundColorSuggested:\n          description: Indicates if there was a suggested change to the Shading.\n          type: boolean\n      type: object\n    SheetsChartReference:\n      description: A reference to a linked chart embedded from Google Sheets.\n      properties:\n        chartId:\n          description: The ID of the specific chart in the Google Sheets spreadsheet\n            that is embedded.\n          format: int32\n          type: integer\n        spreadsheetId:\n          description: The ID of the Google Sheets spreadsheet that contains the source\n            chart.\n          type: string\n      type: object\n    SheetsChartReferenceSuggestionState:\n      description: A mask that indicates which of the fields on the base SheetsChartReference\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties:\n        chartIdSuggested:\n          description: Indicates if there was a suggested change to chart_id.\n          type: boolean\n        spreadsheetIdSuggested:\n          description: Indicates if there was a suggested change to spreadsheet_id.\n          type: boolean\n      type: object\n    Size:\n      description: A width and height.\n      properties:\n        height:\n          $ref: '#/components/schemas/Dimension'\n          description: The height of the object.\n        width:\n          $ref: '#/components/schemas/Dimension'\n          description: The width of the object.\n      type: object\n    SizeSuggestionState:\n      description: A mask that indicates which of the fields on the base Size have\n        been changed in this suggestion. For any field set to true, the Size has a\n        new suggested value.\n      properties:\n        heightSuggested:\n          description: Indicates if there was a suggested change to height.\n          type: boolean\n        widthSuggested:\n          description: Indicates if there was a suggested change to width.\n          type: boolean\n      type: object\n    StructuralElement:\n      description: A StructuralElement describes content that provides structure to\n        the document.\n      properties:\n        endIndex:\n          description: The zero-based end index of this structural element, exclusive,\n            in UTF-16 code units.\n          format: int32\n          type: integer\n        paragraph:\n          $ref: '#/components/schemas/Paragraph'\n          description: A paragraph type of structural element.\n        sectionBreak:\n          $ref: '#/components/schemas/SectionBreak'\n          description: A section break type of structural element.\n        startIndex:\n          description: The zero-based start index of this structural element, in UTF-16\n            code units.\n          format: int32\n          type: integer\n        table:\n          $ref: '#/components/schemas/Table'\n          description: A table type of structural element.\n        tableOfContents:\n          $ref: '#/components/schemas/TableOfContents'\n          description: A table of contents type of structural element.\n      type: object\n    SubstringMatchCriteria:\n      description: A criteria that matches a specific string of text in the document.\n      properties:\n        matchCase:\n          description: 'Indicates whether the search should respect case: - `True`:\n            the search is case sensitive. - `False`: the search is case insensitive.'\n          type: boolean\n        text:\n          description: The text to search for in the document.\n          type: string\n      type: object\n    SuggestedBullet:\n      description: A suggested change to a Bullet.\n      properties:\n        bullet:\n          $ref: '#/components/schemas/Bullet'\n          description: A Bullet that only includes the changes made in this suggestion.\n            This can be used along with the bullet_suggestion_state to see which fields\n            have changed and their new values.\n        bulletSuggestionState:\n          $ref: '#/components/schemas/BulletSuggestionState'\n          description: A mask that indicates which of the fields on the base Bullet\n            have been changed in this suggestion.\n      type: object\n    SuggestedDocumentStyle:\n      description: A suggested change to the DocumentStyle.\n      properties:\n        documentStyle:\n          $ref: '#/components/schemas/DocumentStyle'\n          description: A DocumentStyle that only includes the changes made in this\n            suggestion. This can be used along with the document_style_suggestion_state\n            to see which fields have changed and their new values.\n        documentStyleSuggestionState:\n          $ref: '#/components/schemas/DocumentStyleSuggestionState'\n          description: A mask that indicates which of the fields on the base DocumentStyle\n            have been changed in this suggestion.\n      type: object\n    SuggestedInlineObjectProperties:\n      description: A suggested change to InlineObjectProperties.\n      properties:\n        inlineObjectProperties:\n          $ref: '#/components/schemas/InlineObjectProperties'\n          description: An InlineObjectProperties that only includes the changes made\n            in this suggestion. This can be used along with the inline_object_properties_suggestion_state\n            to see which fields have changed and their new values.\n        inlineObjectPropertiesSuggestionState:\n          $ref: '#/components/schemas/InlineObjectPropertiesSuggestionState'\n          description: A mask that indicates which of the fields on the base InlineObjectProperties\n            have been changed in this suggestion.\n      type: object\n    SuggestedListProperties:\n      description: A suggested change to ListProperties.\n      properties:\n        listProperties:\n          $ref: '#/components/schemas/ListProperties'\n          description: A ListProperties that only includes the changes made in this\n            suggestion. This can be used along with the list_properties_suggestion_state\n            to see which fields have changed and their new values.\n        listPropertiesSuggestionState:\n          $ref: '#/components/schemas/ListPropertiesSuggestionState'\n          description: A mask that indicates which of the fields on the base ListProperties\n            have been changed in this suggestion.\n      type: object\n    SuggestedNamedStyles:\n      description: A suggested change to the NamedStyles.\n      properties:\n        namedStyles:\n          $ref: '#/components/schemas/NamedStyles'\n          description: A NamedStyles that only includes the changes made in this suggestion.\n            This can be used along with the named_styles_suggestion_state to see which\n            fields have changed and their new values.\n        namedStylesSuggestionState:\n          $ref: '#/components/schemas/NamedStylesSuggestionState'\n          description: A mask that indicates which of the fields on the base NamedStyles\n            have been changed in this suggestion.\n      type: object\n    SuggestedParagraphStyle:\n      description: A suggested change to a ParagraphStyle.\n      properties:\n        paragraphStyle:\n          $ref: '#/components/schemas/ParagraphStyle'\n          description: A ParagraphStyle that only includes the changes made in this\n            suggestion. This can be used along with the paragraph_suggestion_state\n            to see which fields have changed and their new values.\n        paragraphStyleSuggestionState:\n          $ref: '#/components/schemas/ParagraphStyleSuggestionState'\n          description: A mask that indicates which of the fields on the base ParagraphStyle\n            have been changed in this suggestion.\n      type: object\n    SuggestedPositionedObjectProperties:\n      description: A suggested change to PositionedObjectProperties.\n      properties:\n        positionedObjectProperties:\n          $ref: '#/components/schemas/PositionedObjectProperties'\n          description: A PositionedObjectProperties that only includes the changes\n            made in this suggestion. This can be used along with the positioned_object_properties_suggestion_state\n            to see which fields have changed and their new values.\n        positionedObjectPropertiesSuggestionState:\n          $ref: '#/components/schemas/PositionedObjectPropertiesSuggestionState'\n          description: A mask that indicates which of the fields on the base PositionedObjectProperties\n            have been changed in this suggestion.\n      type: object\n    SuggestedTableCellStyle:\n      description: A suggested change to a TableCellStyle.\n      properties:\n        tableCellStyle:\n          $ref: '#/components/schemas/TableCellStyle'\n          description: A TableCellStyle that only includes the changes made in this\n            suggestion. This can be used along with the table_cell_style_suggestion_state\n            to see which fields have changed and their new values.\n        tableCellStyleSuggestionState:\n          $ref: '#/components/schemas/TableCellStyleSuggestionState'\n          description: A mask that indicates which of the fields on the base TableCellStyle\n            have been changed in this suggestion.\n      type: object\n    SuggestedTableRowStyle:\n      description: A suggested change to a TableRowStyle.\n      properties:\n        tableRowStyle:\n          $ref: '#/components/schemas/TableRowStyle'\n          description: A TableRowStyle that only includes the changes made in this\n            suggestion. This can be used along with the table_row_style_suggestion_state\n            to see which fields have changed and their new values.\n        tableRowStyleSuggestionState:\n          $ref: '#/components/schemas/TableRowStyleSuggestionState'\n          description: A mask that indicates which of the fields on the base TableRowStyle\n            have been changed in this suggestion.\n      type: object\n    SuggestedTextStyle:\n      description: A suggested change to a TextStyle.\n      properties:\n        textStyle:\n          $ref: '#/components/schemas/TextStyle'\n          description: A TextStyle that only includes the changes made in this suggestion.\n            This can be used along with the text_style_suggestion_state to see which\n            fields have changed and their new values.\n        textStyleSuggestionState:\n          $ref: '#/components/schemas/TextStyleSuggestionState'\n          description: A mask that indicates which of the fields on the base TextStyle\n            have been changed in this suggestion.\n      type: object\n    TabStop:\n      description: A tab stop within a paragraph.\n      properties:\n        alignment:\n          description: The alignment of this tab stop. If unset, the value defaults\n            to START.\n          enum:\n          - TAB_STOP_ALIGNMENT_UNSPECIFIED\n          - START\n          - CENTER\n          - END\n          type: string\n        offset:\n          $ref: '#/components/schemas/Dimension'\n          description: The offset between this tab stop and the start margin.\n      type: object\n    Table:\n      description: A StructuralElement representing a table.\n      properties:\n        columns:\n          description: Number of columns in the table. It is possible for a table\n            to be non-rectangular, so some rows may have a different number of cells.\n          format: int32\n          type: integer\n        rows:\n          description: Number of rows in the table.\n          format: int32\n          type: integer\n        suggestedDeletionIds:\n          description: The suggested deletion IDs. If empty, then there are no suggested\n            deletions of this content.\n          items:\n            type: string\n          type: array\n        suggestedInsertionIds:\n          description: The suggested insertion IDs. A Table may have multiple insertion\n            IDs if it is a nested suggested change. If empty, then this is not a suggested\n            insertion.\n          items:\n            type: string\n          type: array\n        tableRows:\n          description: The contents and style of each row.\n          items:\n            $ref: '#/components/schemas/TableRow'\n          type: array\n        tableStyle:\n          $ref: '#/components/schemas/TableStyle'\n          description: The style of the table.\n      type: object\n    TableCell:\n      description: The contents and style of a cell in a Table.\n      properties:\n        content:\n          description: The content of the cell.\n          items:\n            $ref: '#/components/schemas/StructuralElement'\n          type: array\n        endIndex:\n          description: The zero-based end index of this cell, exclusive, in UTF-16\n            code units.\n          format: int32\n          type: integer\n        startIndex:\n          description: The zero-based start index of this cell, in UTF-16 code units.\n          format: int32\n          type: integer\n        suggestedDeletionIds:\n          description: The suggested deletion IDs. If empty, then there are no suggested\n            deletions of this content.\n          items:\n            type: string\n          type: array\n        suggestedInsertionIds:\n          description: The suggested insertion IDs. A TableCell may have multiple\n            insertion IDs if it is a nested suggested change. If empty, then this\n            is not a suggested insertion.\n          items:\n            type: string\n          type: array\n        suggestedTableCellStyleChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedTableCellStyle'\n          description: The suggested changes to the table cell style, keyed by suggestion\n            ID.\n          type: object\n        tableCellStyle:\n          $ref: '#/components/schemas/TableCellStyle'\n          description: The style of the cell.\n      type: object\n    TableCellBorder:\n      description: A border around a table cell. Table cell borders cannot be transparent.\n        To hide a table cell border, make its width 0.\n      properties:\n        color:\n          $ref: '#/components/schemas/OptionalColor'\n          description: The color of the border. This color cannot be transparent.\n        dashStyle:\n          description: The dash style of the border.\n          enum:\n          - DASH_STYLE_UNSPECIFIED\n          - SOLID\n          - DOT\n          - DASH\n          type: string\n        width:\n          $ref: '#/components/schemas/Dimension'\n          description: The width of the border.\n      type: object\n    TableCellLocation:\n      description: Location of a single cell within a table.\n      properties:\n        columnIndex:\n          description: The zero-based column index. For example, the second column\n            in the table has a column index of 1.\n          format: int32\n          type: integer\n        rowIndex:\n          description: The zero-based row index. For example, the second row in the\n            table has a row index of 1.\n          format: int32\n          type: integer\n        tableStartLocation:\n          $ref: '#/components/schemas/Location'\n          description: The location where the table starts in the document.\n      type: object\n    TableCellStyle:\n      description: The style of a TableCell. Inherited table cell styles are represented\n        as unset fields in this message. A table cell style can inherit from the table's\n        style.\n      properties:\n        backgroundColor:\n          $ref: '#/components/schemas/OptionalColor'\n          description: The background color of the cell.\n        borderBottom:\n          $ref: '#/components/schemas/TableCellBorder'\n          description: The bottom border of the cell.\n        borderLeft:\n          $ref: '#/components/schemas/TableCellBorder'\n          description: The left border of the cell.\n        borderRight:\n          $ref: '#/components/schemas/TableCellBorder'\n          description: The right border of the cell.\n        borderTop:\n          $ref: '#/components/schemas/TableCellBorder'\n          description: The top border of the cell.\n        columnSpan:\n          description: The column span of the cell. This property is read-only.\n          format: int32\n          type: integer\n        contentAlignment:\n          description: The alignment of the content in the table cell. The default\n            alignment matches the alignment for newly created table cells in the Docs\n            editor.\n          enum:\n          - CONTENT_ALIGNMENT_UNSPECIFIED\n          - CONTENT_ALIGNMENT_UNSUPPORTED\n          - TOP\n          - MIDDLE\n          - BOTTOM\n          type: string\n        paddingBottom:\n          $ref: '#/components/schemas/Dimension'\n          description: The bottom padding of the cell.\n        paddingLeft:\n          $ref: '#/components/schemas/Dimension'\n          description: The left padding of the cell.\n        paddingRight:\n          $ref: '#/components/schemas/Dimension'\n          description: The right padding of the cell.\n        paddingTop:\n          $ref: '#/components/schemas/Dimension'\n          description: The top padding of the cell.\n        rowSpan:\n          description: The row span of the cell. This property is read-only.\n          format: int32\n          type: integer\n      type: object\n    TableCellStyleSuggestionState:\n      description: A mask that indicates which of the fields on the base TableCellStyle\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties:\n        backgroundColorSuggested:\n          description: Indicates if there was a suggested change to background_color.\n          type: boolean\n        borderBottomSuggested:\n          description: Indicates if there was a suggested change to border_bottom.\n          type: boolean\n        borderLeftSuggested:\n          description: Indicates if there was a suggested change to border_left.\n          type: boolean\n        borderRightSuggested:\n          description: Indicates if there was a suggested change to border_right.\n          type: boolean\n        borderTopSuggested:\n          description: Indicates if there was a suggested change to border_top.\n          type: boolean\n        columnSpanSuggested:\n          description: Indicates if there was a suggested change to column_span.\n          type: boolean\n        contentAlignmentSuggested:\n          description: Indicates if there was a suggested change to content_alignment.\n          type: boolean\n        paddingBottomSuggested:\n          description: Indicates if there was a suggested change to padding_bottom.\n          type: boolean\n        paddingLeftSuggested:\n          description: Indicates if there was a suggested change to padding_left.\n          type: boolean\n        paddingRightSuggested:\n          description: Indicates if there was a suggested change to padding_right.\n          type: boolean\n        paddingTopSuggested:\n          description: Indicates if there was a suggested change to padding_top.\n          type: boolean\n        rowSpanSuggested:\n          description: Indicates if there was a suggested change to row_span.\n          type: boolean\n      type: object\n    TableColumnProperties:\n      description: The properties of a column in a table.\n      properties:\n        width:\n          $ref: '#/components/schemas/Dimension'\n          description: The width of the column. Set when the column's `width_type`\n            is FIXED_WIDTH.\n        widthType:\n          description: The width type of the column.\n          enum:\n          - WIDTH_TYPE_UNSPECIFIED\n          - EVENLY_DISTRIBUTED\n          - FIXED_WIDTH\n          type: string\n      type: object\n    TableOfContents:\n      description: A StructuralElement representing a table of contents.\n      properties:\n        content:\n          description: The content of the table of contents.\n          items:\n            $ref: '#/components/schemas/StructuralElement'\n          type: array\n        suggestedDeletionIds:\n          description: The suggested deletion IDs. If empty, then there are no suggested\n            deletions of this content.\n          items:\n            type: string\n          type: array\n        suggestedInsertionIds:\n          description: The suggested insertion IDs. A TableOfContents may have multiple\n            insertion IDs if it is a nested suggested change. If empty, then this\n            is not a suggested insertion.\n          items:\n            type: string\n          type: array\n      type: object\n    TableRange:\n      description: 'A table range represents a reference to a subset of a table. It''s\n        important to note that the cells specified by a table range do not necessarily\n        form a rectangle. For example, let''s say we have a 3 x 3 table where all\n        the cells of the last row are merged together. The table looks like this:\n        [ ] A table range with table cell location = (table_start_location, row =\n        0, column = 0), row span = 3 and column span = 2 specifies the following cells:\n        x x [ x x x ]'\n      properties:\n        columnSpan:\n          description: The column span of the table range.\n          format: int32\n          type: integer\n        rowSpan:\n          description: The row span of the table range.\n          format: int32\n          type: integer\n        tableCellLocation:\n          $ref: '#/components/schemas/TableCellLocation'\n          description: The cell location where the table range starts.\n      type: object\n    TableRow:\n      description: The contents and style of a row in a Table.\n      properties:\n        endIndex:\n          description: The zero-based end index of this row, exclusive, in UTF-16\n            code units.\n          format: int32\n          type: integer\n        startIndex:\n          description: The zero-based start index of this row, in UTF-16 code units.\n          format: int32\n          type: integer\n        suggestedDeletionIds:\n          description: The suggested deletion IDs. If empty, then there are no suggested\n            deletions of this content.\n          items:\n            type: string\n          type: array\n        suggestedInsertionIds:\n          description: The suggested insertion IDs. A TableRow may have multiple insertion\n            IDs if it is a nested suggested change. If empty, then this is not a suggested\n            insertion.\n          items:\n            type: string\n          type: array\n        suggestedTableRowStyleChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedTableRowStyle'\n          description: The suggested style changes to this row, keyed by suggestion\n            ID.\n          type: object\n        tableCells:\n          description: The contents and style of each cell in this row. It is possible\n            for a table to be non-rectangular, so some rows may have a different number\n            of cells than other rows in the same table.\n          items:\n            $ref: '#/components/schemas/TableCell'\n          type: array\n        tableRowStyle:\n          $ref: '#/components/schemas/TableRowStyle'\n          description: The style of the table row.\n      type: object\n    TableRowStyle:\n      description: Styles that apply to a table row.\n      properties:\n        minRowHeight:\n          $ref: '#/components/schemas/Dimension'\n          description: The minimum height of the row. The row will be rendered in\n            the Docs editor at a height equal to or greater than this value in order\n            to show all the content in the row's cells.\n      type: object\n    TableRowStyleSuggestionState:\n      description: A mask that indicates which of the fields on the base TableRowStyle\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties:\n        minRowHeightSuggested:\n          description: Indicates if there was a suggested change to min_row_height.\n          type: boolean\n      type: object\n    TableStyle:\n      description: Styles that apply to a table.\n      properties:\n        tableColumnProperties:\n          description: The properties of each column. Note that in Docs, tables contain\n            rows and rows contain cells, similar to HTML. So the properties for a\n            row can be found on the row's table_row_style.\n          items:\n            $ref: '#/components/schemas/TableColumnProperties'\n          type: array\n      type: object\n    TextRun:\n      description: A ParagraphElement that represents a run of text that all has the\n        same styling.\n      properties:\n        content:\n          description: The text of this run. Any non-text elements in the run are\n            replaced with the Unicode character U+E907.\n          type: string\n        suggestedDeletionIds:\n          description: The suggested deletion IDs. If empty, then there are no suggested\n            deletions of this content.\n          items:\n            type: string\n          type: array\n        suggestedInsertionIds:\n          description: The suggested insertion IDs. A TextRun may have multiple insertion\n            IDs if it is a nested suggested change. If empty, then this is not a suggested\n            insertion.\n          items:\n            type: string\n          type: array\n        suggestedTextStyleChanges:\n          additionalProperties:\n            $ref: '#/components/schemas/SuggestedTextStyle'\n          description: The suggested text style changes to this run, keyed by suggestion\n            ID.\n          type: object\n        textStyle:\n          $ref: '#/components/schemas/TextStyle'\n          description: The text style of this run.\n      type: object\n    TextStyle:\n      description: 'Represents the styling that can be applied to text. Inherited\n        text styles are represented as unset fields in this message. A text style''s\n        parent depends on where the text style is defined: * The TextStyle of text\n        in a Paragraph inherits from the paragraph''s corresponding named style type.\n        * The TextStyle on a named style inherits from the normal text named style.\n        * The TextStyle of the normal text named style inherits from the default text\n        style in the Docs editor. * The TextStyle on a Paragraph element that is contained\n        in a table may inherit its text style from the table style. If the text style\n        does not inherit from a parent, unsetting fields will revert the style to\n        a value matching the defaults in the Docs editor.'\n      properties:\n        backgroundColor:\n          $ref: '#/components/schemas/OptionalColor'\n          description: The background color of the text. If set, the color is either\n            an RGB color or transparent, depending on the `color` field.\n        baselineOffset:\n          description: The text's vertical offset from its normal position. Text with\n            `SUPERSCRIPT` or `SUBSCRIPT` baseline offsets is automatically rendered\n            in a smaller font size, computed based on the `font_size` field. The `font_size`\n            itself is not affected by changes in this field.\n          enum:\n          - BASELINE_OFFSET_UNSPECIFIED\n          - NONE\n          - SUPERSCRIPT\n          - SUBSCRIPT\n          type: string\n        bold:\n          description: Whether or not the text is rendered as bold.\n          type: boolean\n        fontSize:\n          $ref: '#/components/schemas/Dimension'\n          description: The size of the text's font.\n        foregroundColor:\n          $ref: '#/components/schemas/OptionalColor'\n          description: The foreground color of the text. If set, the color is either\n            an RGB color or transparent, depending on the `color` field.\n        italic:\n          description: Whether or not the text is italicized.\n          type: boolean\n        link:\n          $ref: '#/components/schemas/Link'\n          description: 'The hyperlink destination of the text. If unset, there is\n            no link. Links are not inherited from parent text. Changing the link in\n            an update request causes some other changes to the text style of the range:\n            * When setting a link, the text foreground color will be updated to the\n            default link color and the text will be underlined. If these fields are\n            modified in the same request, those values will be used instead of the\n            link defaults. * Setting a link on a text range that overlaps with an\n            existing link will also update the existing link to point to the new URL.\n            * Links are not settable on newline characters. As a result, setting a\n            link on a text range that crosses a paragraph boundary, such as `\"ABC\\n123\"`,\n            will separate the newline character(s) into their own text runs. The link\n            will be applied separately to the runs before and after the newline. *\n            Removing a link will update the text style of the range to match the style\n            of the preceding text (or the default text styles if the preceding text\n            is another link) unless different styles are being set in the same request.'\n        smallCaps:\n          description: Whether or not the text is in small capital letters.\n          type: boolean\n        strikethrough:\n          description: Whether or not the text is struck through.\n          type: boolean\n        underline:\n          description: Whether or not the text is underlined.\n          type: boolean\n        weightedFontFamily:\n          $ref: '#/components/schemas/WeightedFontFamily'\n          description: The font family and rendered weight of the text. If an update\n            request specifies values for both `weighted_font_family` and `bold`, the\n            `weighted_font_family` is applied first, then `bold`. If `weighted_font_family#weight`\n            is not set, it defaults to `400`. If `weighted_font_family` is set, then\n            `weighted_font_family#font_family` must also be set with a non-empty value.\n            Otherwise, a 400 bad request error is returned.\n      type: object\n    TextStyleSuggestionState:\n      description: A mask that indicates which of the fields on the base TextStyle\n        have been changed in this suggestion. For any field set to true, there is\n        a new suggested value.\n      properties:\n        backgroundColorSuggested:\n          description: Indicates if there was a suggested change to background_color.\n          type: boolean\n        baselineOffsetSuggested:\n          description: Indicates if there was a suggested change to baseline_offset.\n          type: boolean\n        boldSuggested:\n          description: Indicates if there was a suggested change to bold.\n          type: boolean\n        fontSizeSuggested:\n          description: Indicates if there was a suggested change to font_size.\n          type: boolean\n        foregroundColorSuggested:\n          description: Indicates if there was a suggested change to foreground_color.\n          type: boolean\n        italicSuggested:\n          description: Indicates if there was a suggested change to italic.\n          type: boolean\n        linkSuggested:\n          description: Indicates if there was a suggested change to link.\n          type: boolean\n        smallCapsSuggested:\n          description: Indicates if there was a suggested change to small_caps.\n          type: boolean\n        strikethroughSuggested:\n          description: Indicates if there was a suggested change to strikethrough.\n          type: boolean\n        underlineSuggested:\n          description: Indicates if there was a suggested change to underline.\n          type: boolean\n        weightedFontFamilySuggested:\n          description: Indicates if there was a suggested change to weighted_font_family.\n          type: boolean\n      type: object\n    UnmergeTableCellsRequest:\n      description: Unmerges cells in a Table.\n      properties:\n        tableRange:\n          $ref: '#/components/schemas/TableRange'\n          description: The table range specifying which cells of the table to unmerge.\n            All merged cells in this range will be unmerged, and cells that are already\n            unmerged will not be affected. If the range has no merged cells, the request\n            will do nothing. If there is text in any of the merged cells, the text\n            will remain in the \"head\" cell of the resulting block of unmerged cells.\n            The \"head\" cell is the upper-left cell when the content direction is from\n            left to right, and the upper-right otherwise.\n      type: object\n    UpdateDocumentStyleRequest:\n      description: Updates the DocumentStyle.\n      properties:\n        documentStyle:\n          $ref: '#/components/schemas/DocumentStyle'\n          description: The styles to set on the document. Certain document style changes\n            may cause other changes in order to mirror the behavior of the Docs editor.\n            See the documentation of DocumentStyle for more information.\n        fields:\n          description: The fields that should be updated. At least one field must\n            be specified. The root `document_style` is implied and should not be specified.\n            A single `\"*\"` can be used as short-hand for listing every field. For\n            example to update the background, set `fields` to `\"background\"`.\n          format: google-fieldmask\n          type: string\n      type: object\n    UpdateParagraphStyleRequest:\n      description: Update the styling of all paragraphs that overlap with the given\n        range.\n      properties:\n        fields:\n          description: The fields that should be updated. At least one field must\n            be specified. The root `paragraph_style` is implied and should not be\n            specified. For example, to update the paragraph style's alignment property,\n            set `fields` to `\"alignment\"`. To reset a property to its default value,\n            include its field name in the field mask but leave the field itself unset.\n          format: google-fieldmask\n          type: string\n        paragraphStyle:\n          $ref: '#/components/schemas/ParagraphStyle'\n          description: The styles to set on the paragraphs. Certain paragraph style\n            changes may cause other changes in order to mirror the behavior of the\n            Docs editor. See the documentation of ParagraphStyle for more information.\n        range:\n          $ref: '#/components/schemas/Range'\n          description: The range overlapping the paragraphs to style.\n      type: object\n    UpdateSectionStyleRequest:\n      description: Updates the SectionStyle.\n      properties:\n        fields:\n          description: The fields that should be updated. At least one field must\n            be specified. The root `section_style` is implied and must not be specified.\n            A single `\"*\"` can be used as short-hand for listing every field. For\n            example to update the left margin, set `fields` to `\"margin_left\"`.\n          format: google-fieldmask\n          type: string\n        range:\n          $ref: '#/components/schemas/Range'\n          description: The range overlapping the sections to style. Because section\n            breaks can only be inserted inside the body, the segment ID field must\n            be empty.\n        sectionStyle:\n          $ref: '#/components/schemas/SectionStyle'\n          description: The styles to be set on the section. Certain section style\n            changes may cause other changes in order to mirror the behavior of the\n            Docs editor. See the documentation of SectionStyle for more information.\n      type: object\n    UpdateTableCellStyleRequest:\n      description: Updates the style of a range of table cells.\n      properties:\n        fields:\n          description: The fields that should be updated. At least one field must\n            be specified. The root `tableCellStyle` is implied and should not be specified.\n            A single `\"*\"` can be used as short-hand for listing every field. For\n            example to update the table cell background color, set `fields` to `\"backgroundColor\"`.\n            To reset a property to its default value, include its field name in the\n            field mask but leave the field itself unset.\n          format: google-fieldmask\n          type: string\n        tableCellStyle:\n          $ref: '#/components/schemas/TableCellStyle'\n          description: 'The style to set on the table cells. When updating borders,\n            if a cell shares a border with an adjacent cell, the corresponding border\n            property of the adjacent cell is updated as well. Borders that are merged\n            and invisible are not updated. Since updating a border shared by adjacent\n            cells in the same request can cause conflicting border updates, border\n            updates are applied in the following order: - `border_right` - `border_left`\n            - `border_bottom` - `border_top`'\n        tableRange:\n          $ref: '#/components/schemas/TableRange'\n          description: The table range representing the subset of the table to which\n            the updates are applied.\n        tableStartLocation:\n          $ref: '#/components/schemas/Location'\n          description: The location where the table starts in the document. When specified,\n            the updates are applied to all the cells in the table.\n      type: object\n    UpdateTableColumnPropertiesRequest:\n      description: Updates the TableColumnProperties of columns in a table.\n      properties:\n        columnIndices:\n          description: The list of zero-based column indices whose property should\n            be updated. If no indices are specified, all columns will be updated.\n          items:\n            format: int32\n            type: integer\n          type: array\n        fields:\n          description: The fields that should be updated. At least one field must\n            be specified. The root `tableColumnProperties` is implied and should not\n            be specified. A single `\"*\"` can be used as short-hand for listing every\n            field. For example to update the column width, set `fields` to `\"width\"`.\n          format: google-fieldmask\n          type: string\n        tableColumnProperties:\n          $ref: '#/components/schemas/TableColumnProperties'\n          description: The table column properties to update. If the value of `table_column_properties#width`\n            is less than 5 points (5/72 inch), a 400 bad request error is returned.\n        tableStartLocation:\n          $ref: '#/components/schemas/Location'\n          description: The location where the table starts in the document.\n      type: object\n    UpdateTableRowStyleRequest:\n      description: Updates the TableRowStyle of rows in a table.\n      properties:\n        fields:\n          description: The fields that should be updated. At least one field must\n            be specified. The root `tableRowStyle` is implied and should not be specified.\n            A single `\"*\"` can be used as short-hand for listing every field. For\n            example to update the minimum row height, set `fields` to `\"min_row_height\"`.\n          format: google-fieldmask\n          type: string\n        rowIndices:\n          description: The list of zero-based row indices whose style should be updated.\n            If no indices are specified, all rows will be updated.\n          items:\n            format: int32\n            type: integer\n          type: array\n        tableRowStyle:\n          $ref: '#/components/schemas/TableRowStyle'\n          description: The styles to be set on the rows.\n        tableStartLocation:\n          $ref: '#/components/schemas/Location'\n          description: The location where the table starts in the document.\n      type: object\n    UpdateTextStyleRequest:\n      description: Update the styling of text.\n      properties:\n        fields:\n          description: The fields that should be updated. At least one field must\n            be specified. The root `text_style` is implied and should not be specified.\n            A single `\"*\"` can be used as short-hand for listing every field. For\n            example, to update the text style to bold, set `fields` to `\"bold\"`. To\n            reset a property to its default value, include its field name in the field\n            mask but leave the field itself unset.\n          format: google-fieldmask\n          type: string\n        range:\n          $ref: '#/components/schemas/Range'\n          description: The range of text to style. The range may be extended to include\n            adjacent newlines. If the range fully contains a paragraph belonging to\n            a list, the paragraph's bullet is also updated with the matching text\n            style. Ranges cannot be inserted inside a relative UpdateTextStyleRequest.\n        textStyle:\n          $ref: '#/components/schemas/TextStyle'\n          description: The styles to set on the text. If the value for a particular\n            style matches that of the parent, that style will be set to inherit. Certain\n            text style changes may cause other changes in order to to mirror the behavior\n            of the Docs editor. See the documentation of TextStyle for more information.\n      type: object\n    WeightedFontFamily:\n      description: Represents a font family and weight of text.\n      properties:\n        fontFamily:\n          description: The font family of the text. The font family can be any font\n            from the Font menu in Docs or from [Google Fonts] (https://fonts.google.com/).\n            If the font name is unrecognized, the text is rendered in `Arial`.\n          type: string\n        weight:\n          description: 'The weight of the font. This field can have any value that\n            is a multiple of `100` between `100` and `900`, inclusive. This range\n            corresponds to the numerical values described in the CSS 2.1 Specification,\n            [section 15.6](https://www.w3.org/TR/CSS21/fonts.html#font-boldness),\n            with non-numerical values disallowed. The default value is `400` (\"normal\").\n            The font weight makes up just one component of the rendered font weight.\n            The rendered weight is determined by a combination of the `weight` and\n            the text style''s resolved `bold` value, after accounting for inheritance:\n            * If the text is bold and the weight is less than `400`, the rendered\n            weight is 400. * If the text is bold and the weight is greater than or\n            equal to `400` but is less than `700`, the rendered weight is `700`. *\n            If the weight is greater than or equal to `700`, the rendered weight is\n            equal to the weight. * If the text is not bold, the rendered weight is\n            equal to the weight.'\n          format: int32\n          type: integer\n      type: object\n    WriteControl:\n      description: Provides control over how write requests are executed.\n      properties:\n        requiredRevisionId:\n          description: The revision ID of the document that the write request will\n            be applied to. If this is not the latest revision of the document, the\n            request will not be processed and will return a 400 bad request error.\n            When a required revision ID is returned in a response, it indicates the\n            revision ID of the document after the request was applied.\n          type: string\n        targetRevisionId:\n          description: The target revision ID of the document that the write request\n            will be applied to. If collaborator changes have occurred after the document\n            was read using the API, the changes produced by this write request will\n            be transformed against the collaborator changes. This results in a new\n            revision of the document which incorporates both the changes in the request\n            and the collaborator changes, and the Docs server will resolve conflicting\n            changes. When using `target_revision_id`, the API client can be thought\n            of as another collaborator of the document. The target revision ID may\n            only be used to write to recent versions of a document. If the target\n            revision is too far behind the latest revision, the request will not be\n            processed and will return a 400 bad request error and the request should\n            be retried after reading the latest version of the document. In most cases\n            a `revision_id` will remain valid for use as a target revision for several\n            minutes after it is read, but for frequently-edited documents this window\n            may be shorter.\n          type: string\n      type: object\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/documents: See, edit, create, and delete\n              all your Google Docs documents\n            https://www.googleapis.com/auth/documents.readonly: See all your Google\n              Docs documents\n            https://www.googleapis.com/auth/drive: See, edit, create, and delete all\n              of your Google Drive files\n            https://www.googleapis.com/auth/drive.file: See, edit, create, and delete\n              only the specific Google Drive files you use with this app\n            https://www.googleapis.com/auth/drive.readonly: See and download all your\n              Google Drive files\n      type: oauth2\n    Oauth2c:\n      description: Oauth 2.0 authorizationCode authentication\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/documents: See, edit, create, and delete\n              all your Google Docs documents\n            https://www.googleapis.com/auth/documents.readonly: See all your Google\n              Docs documents\n            https://www.googleapis.com/auth/drive: See, edit, create, and delete all\n              of your Google Drive files\n            https://www.googleapis.com/auth/drive.file: See, edit, create, and delete\n              only the specific Google Drive files you use with this app\n            https://www.googleapis.com/auth/drive.readonly: See and download all your\n              Google Drive files\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n      type: oauth2\n  x-stackQL-resources:\n    documents:\n      id: google.docs.documents\n      methods:\n        batchUpdate:\n          operation:\n            $ref: '#/paths/~1v1~1documents~1{documentId}:batchUpdate/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create:\n          operation:\n            $ref: '#/paths/~1v1~1documents/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get:\n          operation:\n            $ref: '#/paths/~1v1~1documents~1{documentId}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: documents\n      title: documents\nexternalDocs:\n  url: https://developers.google.com/docs/\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: Reads and writes Google Docs documents.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Google Docs API\n  version: v1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n  - analytics\n  - media\n  x-logo:\n    url: https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png\n  x-origin:\n  - converter:\n      url: https://github.com/mermade/oas-kit\n      version: 7.0.4\n    format: google\n    url: https://docs.googleapis.com/$discovery/rest?version=v1\n    version: v1\n  x-providerName: googleapis.com\n  x-serviceName: docs\nopenapi: 3.0.0\npaths:\n  /v1/documents:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a blank document using the title given in the request.\n        Other fields in the request, including any provided content, are ignored.\n        Returns the created document.\n      operationId: docs.documents.create\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/documents\n        Oauth2c:\n        - https://www.googleapis.com/auth/documents\n      - Oauth2:\n        - https://www.googleapis.com/auth/drive\n        Oauth2c:\n        - https://www.googleapis.com/auth/drive\n      - Oauth2:\n        - https://www.googleapis.com/auth/drive.file\n        Oauth2c:\n        - https://www.googleapis.com/auth/drive.file\n      tags:\n      - documents\n  /v1/documents/{documentId}:\n    get:\n      description: Gets the latest version of the specified document.\n      operationId: docs.documents.get\n      parameters:\n      - description: The ID of the document to retrieve.\n        in: path\n        name: documentId\n        required: true\n        schema:\n          type: string\n      - description: The suggestions view mode to apply to the document. This allows\n          viewing the document with all suggestions inline, accepted or rejected.\n          If one is not specified, DEFAULT_FOR_CURRENT_ACCESS is used.\n        in: query\n        name: suggestionsViewMode\n        schema:\n          enum:\n          - DEFAULT_FOR_CURRENT_ACCESS\n          - SUGGESTIONS_INLINE\n          - PREVIEW_SUGGESTIONS_ACCEPTED\n          - PREVIEW_WITHOUT_SUGGESTIONS\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/documents\n        Oauth2c:\n        - https://www.googleapis.com/auth/documents\n      - Oauth2:\n        - https://www.googleapis.com/auth/documents.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/documents.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/drive\n        Oauth2c:\n        - https://www.googleapis.com/auth/drive\n      - Oauth2:\n        - https://www.googleapis.com/auth/drive.file\n        Oauth2c:\n        - https://www.googleapis.com/auth/drive.file\n      - Oauth2:\n        - https://www.googleapis.com/auth/drive.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/drive.readonly\n      tags:\n      - documents\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1/documents/{documentId}:batchUpdate:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: 'Applies one or more updates to the document. Each request is validated\n        before being applied. If any request is not valid, then the entire request\n        will fail and nothing will be applied. Some requests have replies to give\n        you some information about how they are applied. Other requests do not need\n        to return information; these each return an empty reply. The order of replies\n        matches that of the requests. For example, suppose you call batchUpdate with\n        four updates, and only the third one returns information. The response would\n        have two empty replies, the reply to the third request, and another empty\n        reply, in that order. Because other users may be editing the document, the\n        document might not exactly reflect your changes: your changes may be altered\n        with respect to collaborator changes. If there are no collaborators, the document\n        should reflect your changes. In any case, the updates in your request are\n        guaranteed to be applied together atomically.'\n      operationId: docs.documents.batchUpdate\n      parameters:\n      - description: The ID of the document to update.\n        in: path\n        name: documentId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchUpdateDocumentRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchUpdateDocumentResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/documents\n        Oauth2c:\n        - https://www.googleapis.com/auth/documents\n      - Oauth2:\n        - https://www.googleapis.com/auth/drive\n        Oauth2c:\n        - https://www.googleapis.com/auth/drive\n      - Oauth2:\n        - https://www.googleapis.com/auth/drive.file\n        Oauth2c:\n        - https://www.googleapis.com/auth/drive.file\n      tags:\n      - documents\nservers:\n- url: https://docs.googleapis.com/\ntags:\n- name: documents\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/googleapis.com/v0.1.2/services/docs-v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/googleapis.com/v0.1.2/services/docs-v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/documents\": post: security: security \"Oauth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}