{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-blogger-v2-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-blogger-v2-swagger.yaml",
			"byteSize": 27395,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  description: API for access to the data within Blogger.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Blogger\n  version: v2\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n    - social\n  x-logo:\n    url: https://www.gstatic.com/images/icons/material/product/2x/blogger_64dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: google\n      url: https://www.googleapis.com/discovery/v1/apis/blogger/v2/rest\n      version: v1\n  x-preferred: false\n  x-providerName: googleapis.com\n  x-serviceName: blogger\nexternalDocs:\n  url: https://developers.google.com/blogger/docs/2.0/json/getting_started\ntags:\n  - name: blogs\n  - name: comments\n  - name: pages\n  - name: posts\n  - name: users\npaths:\n  \"/blogs/{blogId}\":\n    get:\n      description: Gets one blog by id.\n      operationId: blogger.blogs.get\n      parameters:\n        - description: The ID of the blog to get.\n          in: path\n          name: blogId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Blog\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - blogs\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\n  \"/blogs/{blogId}/pages\":\n    get:\n      description: Retrieves pages for a blog, possibly filtered.\n      operationId: blogger.pages.list\n      parameters:\n        - description: ID of the blog to fetch pages from.\n          in: path\n          name: blogId\n          required: true\n          schema:\n            type: string\n        - description: Whether to retrieve the Page bodies.\n          in: query\n          name: fetchBodies\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/PageList\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - pages\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\n  \"/blogs/{blogId}/pages/{pageId}\":\n    get:\n      description: Gets one blog page by id.\n      operationId: blogger.pages.get\n      parameters:\n        - description: ID of the blog containing the page.\n          in: path\n          name: blogId\n          required: true\n          schema:\n            type: string\n        - description: The ID of the page to get.\n          in: path\n          name: pageId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Page\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - pages\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\n  \"/blogs/{blogId}/posts\":\n    get:\n      description: Retrieves a list of posts, possibly filtered.\n      operationId: blogger.posts.list\n      parameters:\n        - description: ID of the blog to fetch posts from.\n          in: path\n          name: blogId\n          required: true\n          schema:\n            type: string\n        - description: Whether the body content of posts is included.\n          in: query\n          name: fetchBodies\n          schema:\n            type: boolean\n        - description: Maximum number of posts to fetch.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: Continuation token if the request is paged.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: Earliest post date to fetch, a date-time with RFC 3339 formatting.\n          in: query\n          name: startDate\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/PostList\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - posts\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\n  \"/blogs/{blogId}/posts/{postId}\":\n    get:\n      description: Get a post by id.\n      operationId: blogger.posts.get\n      parameters:\n        - description: ID of the blog to fetch the post from.\n          in: path\n          name: blogId\n          required: true\n          schema:\n            type: string\n        - description: The ID of the post\n          in: path\n          name: postId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Post\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - posts\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\n  \"/blogs/{blogId}/posts/{postId}/comments\":\n    get:\n      description: Retrieves the comments for a blog, possibly filtered.\n      operationId: blogger.comments.list\n      parameters:\n        - description: ID of the blog to fetch comments from.\n          in: path\n          name: blogId\n          required: true\n          schema:\n            type: string\n        - description: Whether the body content of the comments is included.\n          in: query\n          name: fetchBodies\n          schema:\n            type: boolean\n        - description: Maximum number of comments to include in the result.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: Continuation token if request is paged.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: ID of the post to fetch posts from.\n          in: path\n          name: postId\n          required: true\n          schema:\n            type: string\n        - description: Earliest date of comment to fetch, a date-time with RFC 3339\n            formatting.\n          in: query\n          name: startDate\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/CommentList\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - comments\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\n  \"/blogs/{blogId}/posts/{postId}/comments/{commentId}\":\n    get:\n      description: Gets one comment by id.\n      operationId: blogger.comments.get\n      parameters:\n        - description: ID of the blog to containing the comment.\n          in: path\n          name: blogId\n          required: true\n          schema:\n            type: string\n        - description: The ID of the comment to get.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: string\n        - description: ID of the post to fetch posts from.\n          in: path\n          name: postId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Comment\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - comments\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\n  \"/users/{userId}\":\n    get:\n      description: Gets one user by id.\n      operationId: blogger.users.get\n      parameters:\n        - description: The ID of the user to get.\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/User\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - users\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\n  \"/users/{userId}/blogs\":\n    get:\n      description: Retrieves a list of blogs, possibly filtered.\n      operationId: blogger.users.blogs.list\n      parameters:\n        - description: ID of the user whose blogs are to be fetched. Either the word 'self'\n            (sans quote marks) or the user's profile identifier.\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/BlogList\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - users\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\nservers:\n  - url: https://www.googleapis.com/blogger/v2\ncomponents:\n  parameters:\n    alt:\n      description: Data format for the response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n        default: json\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: An opaque string that represents a user for quota purposes. Must not\n        exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    userIp:\n      description: Deprecated. Please use quotaUser instead.\n      in: query\n      name: userIp\n      schema:\n        type: string\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/blogger: Manage your Blogger account\n    Oauth2c:\n      description: Oauth 2.0 accessCode authentication\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n          scopes:\n            https://www.googleapis.com/auth/blogger: Manage your Blogger account\n  schemas:\n    Blog:\n      properties:\n        description:\n          description: The description of this blog. This is displayed underneath the title.\n          type: string\n        id:\n          description: The identifier for this resource.\n          format: int64\n          type: string\n        kind:\n          default: blogger#blog\n          description: The kind of this entry. Always blogger#blog\n          type: string\n        locale:\n          description: The locale this Blog is set to.\n          properties:\n            country:\n              description: The country this blog's locale is set to.\n              type: string\n            language:\n              description: The language this blog is authored in.\n              type: string\n            variant:\n              description: The language variant this blog is authored in.\n              type: string\n          type: object\n        name:\n          description: The name of this blog. This is displayed as the title.\n          type: string\n        pages:\n          description: The container of pages in this blog.\n          properties:\n            selfLink:\n              description: The URL of the container for pages in this blog.\n              type: string\n            totalItems:\n              description: The count of pages in this blog.\n              format: int32\n              type: integer\n          type: object\n        posts:\n          description: The container of posts in this blog.\n          properties:\n            selfLink:\n              description: The URL of the container for posts in this blog.\n              type: string\n            totalItems:\n              description: The count of posts in this blog.\n              format: int32\n              type: integer\n          type: object\n        published:\n          description: RFC 3339 date-time when this blog was published.\n          format: date-time\n          type: string\n        selfLink:\n          description: The API REST URL to fetch this resource from.\n          type: string\n        updated:\n          description: RFC 3339 date-time when this blog was last updated.\n          format: date-time\n          type: string\n        url:\n          description: The URL where this blog is published.\n          type: string\n      type: object\n    BlogList:\n      properties:\n        items:\n          description: The list of Blogs this user has Authorship or Admin rights over.\n          items:\n            $ref: \"#/components/schemas/Blog\"\n          type: array\n        kind:\n          default: blogger#blogList\n          description: The kind of this entity. Always blogger#blogList\n          type: string\n      type: object\n    Comment:\n      properties:\n        author:\n          description: The author of this Comment.\n          properties:\n            displayName:\n              description: The display name.\n              type: string\n            id:\n              description: The identifier of the Comment creator.\n              type: string\n            image:\n              description: The comment creator's avatar.\n              properties:\n                url:\n                  description: The comment creator's avatar URL.\n                  type: string\n              type: object\n            url:\n              description: The URL of the Comment creator's Profile page.\n              type: string\n          type: object\n        blog:\n          description: Data about the blog containing this comment.\n          properties:\n            id:\n              description: The identifier of the blog containing this comment.\n              format: int64\n              type: string\n          type: object\n        content:\n          description: The actual content of the comment. May include HTML markup.\n          type: string\n        id:\n          description: The identifier for this resource.\n          format: int64\n          type: string\n        inReplyTo:\n          description: Data about the comment this is in reply to.\n          properties:\n            id:\n              description: The identified of the parent of this comment.\n              format: int64\n              type: string\n          type: object\n        kind:\n          default: blogger#comment\n          description: The kind of this entry. Always blogger#comment\n          type: string\n        post:\n          description: Data about the post containing this comment.\n          properties:\n            id:\n              description: The identifier of the post containing this comment.\n              format: int64\n              type: string\n          type: object\n        published:\n          description: RFC 3339 date-time when this comment was published.\n          format: date-time\n          type: string\n        selfLink:\n          description: The API REST URL to fetch this resource from.\n          type: string\n        updated:\n          description: RFC 3339 date-time when this comment was last updated.\n          format: date-time\n          type: string\n      type: object\n    CommentList:\n      properties:\n        items:\n          description: The List of Comments for a Post.\n          items:\n            $ref: \"#/components/schemas/Comment\"\n          type: array\n        kind:\n          default: blogger#commentList\n          description: The kind of this entry. Always blogger#commentList\n          type: string\n        nextPageToken:\n          description: Pagination token to fetch the next page, if one exists.\n          type: string\n        prevPageToken:\n          description: Pagination token to fetch the previous page, if one exists.\n          type: string\n      type: object\n    Page:\n      properties:\n        author:\n          description: The author of this Page.\n          properties:\n            displayName:\n              description: The display name.\n              type: string\n            id:\n              description: The identifier of the Page creator.\n              type: string\n            image:\n              description: The page author's avatar.\n              properties:\n                url:\n                  description: The page author's avatar URL.\n                  type: string\n              type: object\n            url:\n              description: The URL of the Page creator's Profile page.\n              type: string\n          type: object\n        blog:\n          description: Data about the blog containing this Page.\n          properties:\n            id:\n              description: The identifier of the blog containing this page.\n              format: int64\n              type: string\n          type: object\n        content:\n          description: The body content of this Page, in HTML.\n          type: string\n        id:\n          description: The identifier for this resource.\n          format: int64\n          type: string\n        kind:\n          default: blogger#page\n          description: The kind of this entity. Always blogger#page\n          type: string\n        published:\n          description: RFC 3339 date-time when this Page was published.\n          format: date-time\n          type: string\n        selfLink:\n          description: The API REST URL to fetch this resource from.\n          type: string\n        title:\n          description: The title of this entity. This is the name displayed in the Admin\n            user interface.\n          type: string\n        updated:\n          description: RFC 3339 date-time when this Page was last updated.\n          format: date-time\n          type: string\n        url:\n          description: The URL that this Page is displayed at.\n          type: string\n      type: object\n    PageList:\n      properties:\n        items:\n          description: The list of Pages for a Blog.\n          items:\n            $ref: \"#/components/schemas/Page\"\n          type: array\n        kind:\n          default: blogger#pageList\n          description: The kind of this entity. Always blogger#pageList\n          type: string\n      type: object\n    Post:\n      properties:\n        author:\n          description: The author of this Post.\n          properties:\n            displayName:\n              description: The display name.\n              type: string\n            id:\n              description: The identifier of the Post creator.\n              type: string\n            image:\n              description: The Post author's avatar.\n              properties:\n                url:\n                  description: The Post author's avatar URL.\n                  type: string\n              type: object\n            url:\n              description: The URL of the Post creator's Profile page.\n              type: string\n          type: object\n        blog:\n          description: Data about the blog containing this Post.\n          properties:\n            id:\n              description: The identifier of the Blog that contains this Post.\n              format: int64\n              type: string\n          type: object\n        content:\n          description: The content of the Post. May contain HTML markup.\n          type: string\n        id:\n          description: The identifier of this Post.\n          format: int64\n          type: string\n        kind:\n          default: blogger#post\n          description: The kind of this entity. Always blogger#post\n          type: string\n        labels:\n          description: The list of labels this Post was tagged with.\n          items:\n            type: string\n          type: array\n        published:\n          description: RFC 3339 date-time when this Post was published.\n          format: date-time\n          type: string\n        replies:\n          description: The container of comments on this Post.\n          properties:\n            selfLink:\n              description: The URL of the comments on this post.\n              type: string\n            totalItems:\n              description: The count of comments on this post.\n              format: int64\n              type: string\n          type: object\n        selfLink:\n          description: The API REST URL to fetch this resource from.\n          type: string\n        title:\n          description: The title of the Post.\n          type: string\n        updated:\n          description: RFC 3339 date-time when this Post was last updated.\n          format: date-time\n          type: string\n        url:\n          description: The URL where this Post is displayed.\n          type: string\n      type: object\n    PostList:\n      properties:\n        items:\n          description: The list of Posts for this Blog.\n          items:\n            $ref: \"#/components/schemas/Post\"\n          type: array\n        kind:\n          default: blogger#postList\n          description: The kind of this entity. Always blogger#postList\n          type: string\n        nextPageToken:\n          description: Pagination token to fetch the next page, if one exists.\n          type: string\n        prevPageToken:\n          description: Pagination token to fetch the previous page, if one exists.\n          type: string\n      type: object\n    User:\n      properties:\n        about:\n          description: Profile summary information.\n          type: string\n        blogs:\n          description: The container of blogs for this user.\n          properties:\n            selfLink:\n              description: The URL of the Blogs for this user.\n              type: string\n          type: object\n        created:\n          description: The timestamp of when this profile was created, in seconds since\n            epoch.\n          format: date-time\n          type: string\n        displayName:\n          description: The display name.\n          type: string\n        id:\n          description: The identifier for this User.\n          type: string\n        kind:\n          default: blogger#user\n          description: The kind of this entity. Always blogger#user\n          type: string\n        locale:\n          description: This user's locale\n          properties:\n            country:\n              description: The user's country setting.\n              type: string\n            language:\n              description: The user's language setting.\n              type: string\n            variant:\n              description: The user's language variant setting.\n              type: string\n          type: object\n        selfLink:\n          description: The API REST URL to fetch this resource from.\n          type: string\n        url:\n          description: The user's profile page.\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-blogger-v2-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-blogger-v2-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/blogs/{blogId}\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}