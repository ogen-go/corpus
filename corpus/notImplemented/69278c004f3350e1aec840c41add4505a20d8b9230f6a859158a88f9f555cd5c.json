{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/fungenerators.com/uuid/1.5/openapi.yaml",
			"byteSize": 7851,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.fungenerators.com\ninfo:\n  contact:\n    name: Fun Generators\n    url: https://fungenerators.com/\n  description: |\n    A full featured, REST based UUID generator with json/xml/jsonp result support. You can try them out right here. [Click here to subscribe](http://fungenerators.com/api/uuid/)\n  termsOfService: https://fungenerators.com/terms\n  title: UUID Generation API\n  version: \"1.5\"\n  x-apisguru-categories:\n    - text\n  x-origin:\n    - format: openapi\n      url: https://fungenerators.com/yaml/uuid.yaml\n      version: \"3.0\"\n  x-providerName: fungenerators.com\n  x-serviceName: uuid\ntags:\n  - description: Generate different versions of UUID easily.\n    externalDocs:\n      description: Find out more\n      url: https://fungenerators.com/api/uuid/\n    name: UUID Generation\n  - description: Parse UUID string and check for its validity and return version details\n    externalDocs:\n      description: Find out more\n      url: https://fungenerators.com/api/uuid/\n    name: UUID Parsing\npaths:\n  /uuid:\n    get:\n      description: Generate a random UUID (v4).\n      parameters:\n        - description: Number of UUID's to generate (defaults to 1)\n          in: query\n          name: count\n          required: false\n          schema:\n            format: integer\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 4\n                      },\n                      \"contents\": {\n                        \"uuid\": [\n                          {\n                            \"uuid\": \"b201b88e-b0d2-4e82-9ea8-d2d1e25b3bd0\",\n                            \"version\": 4\n                          },\n                          {\n                            \"uuid\": \"75becbbb-ae68-4e1a-95b1-c2dfc7a5891a\",\n                            \"version\": 4\n                          },\n                          {\n                            \"uuid\": \"3cffa9ad-00a9-4d7a-87f3-85626808444f\",\n                            \"version\": 4\n                          },\n                          {\n                            \"uuid\": \"d2c477c2-a2e3-463a-a3c5-0f131c9826c2\",\n                            \"version\": 4\n                          }\n                        ],\n                        \"copyright\": {\n                            \"year\": \"2020\",\n                            \"url\": \"  https://fungenerators.com/random/uuid\"\n                        }\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - UUID Generation\n    post:\n      description: Parse a UUID string and return its version and check whether it is valid.\n      parameters:\n        - description: UUID String to parse\n          in: query\n          name: uuidstr\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": {\n                        \"uuid\": [\n                          {\n                            \"is_valid\": true,\n                            \"uuid\": \"14cdb9b4-de01-3faa-aff5-65bc2f771745\",\n                            \"version\": 3\n                          }\n                        ],\n                        \"copyright\": {\n                          \"year\": \"2020\",\n                          \"url\": \"  https://fungenerators.com/random/uuid\"\n                        }\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - UUID Parsing\n  \"/uuid/version/{version}\":\n    get:\n      description: Generate a random UUID (v4).\n      parameters:\n        - description: Number of UUID's to generate (defaults to 1)\n          in: query\n          name: count\n          required: false\n          schema:\n            format: integer\n            type: integer\n        - description: Version of the UUID spec to use. (0-5), Use '0' for nil (00000000-0000-0000-0000-000000000000) UUID.\n          in: path\n          name: version\n          required: true\n          schema:\n            format: integer\n            type: integer\n        - description: For v3 and v5 of UUID Spec you can supply the type (dns/url/oid/x500/nil).\n          in: query\n          name: type\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: For v3 and v5 of UUID Spec supply the text value for the type specified dns/url/oid/x500/nil. For example specify a dns/domain string if the type is \"dns\"\n          in: query\n          name: text\n          required: false\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 4\n                      },\n                      \"contents\": {\n                        \"uuid\": [\n                          {\n                            \"uuid\": \"b201b88e-b0d2-4e82-9ea8-d2d1e25b3bd0\",\n                            \"version\": 4\n                          },\n                          {\n                            \"uuid\": \"75becbbb-ae68-4e1a-95b1-c2dfc7a5891a\",\n                            \"version\": 4\n                          },\n                          {\n                            \"uuid\": \"3cffa9ad-00a9-4d7a-87f3-85626808444f\",\n                            \"version\": 4\n                          },\n                          {\n                            \"uuid\": \"d2c477c2-a2e3-463a-a3c5-0f131c9826c2\",\n                            \"version\": 4\n                          }\n                        ],\n                        \"copyright\": {\n                            \"year\": \"2020\",\n                            \"url\": \"  https://fungenerators.com/random/uuid\"\n                        }\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n      security:\n        - X-Fungenerators-Api-Secret: []\n      tags:\n        - UUID Generation\ncomponents:\n  securitySchemes:\n    X-Fungenerators-Api-Secret:\n      in: header\n      name: X-Fungenerators-Api-Secret\n      type: apiKey\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/fungenerators.com/uuid/1.5/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/fungenerators.com/uuid/1.5/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/uuid\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}