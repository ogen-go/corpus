{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sourcefuse/loopback4-microservice-catalog"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "sandbox/auth-multitenant-example/src/openapi.json",
			"byteSize": 60307,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Authentication Service\",\n    \"version\": \"1.0.0\",\n    \"description\": \"This is a sample application for sandbox testing of auth microservice components.\",\n    \"contact\": {}\n  },\n  \"paths\": {\n    \"/auth/change-password\": {\n      \"patch\": {\n        \"x-controller-name\": \"LoginController\",\n        \"x-operation-name\": \"resetPassword\",\n        \"tags\": [\n          \"LoginController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"If User password successfully changed.\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ResetPasswordPartial\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"LoginController.resetPassword\"\n      }\n    },\n    \"/auth/forget-password\": {\n      \"post\": {\n        \"x-controller-name\": \"ForgetPasswordController\",\n        \"x-operation-name\": \"forgetPassword\",\n        \"tags\": [\n          \"ForgetPasswordController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success Response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ForgetPasswordResponseDto\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The syntax of the request entity is incorrect.\"\n          },\n          \"401\": {\n            \"description\": \"Invalid Credentials.\"\n          },\n          \"404\": {\n            \"description\": \"The entity requested does not exist.\"\n          },\n          \"422\": {\n            \"description\": \"The syntax of the request entity is incorrect\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ForgetPasswordDto\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"ForgetPasswordController.forgetPassword\"\n      }\n    },\n    \"/auth/google\": {\n      \"get\": {\n        \"x-controller-name\": \"LoginController\",\n        \"x-operation-name\": \"loginViaGoogle\",\n        \"tags\": [\n          \"LoginController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Google Token Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"client_id\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"client_secret\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"operationId\": \"LoginController.loginViaGoogle\"\n      }\n    },\n    \"/auth/google-auth-redirect\": {\n      \"get\": {\n        \"x-controller-name\": \"LoginController\",\n        \"x-operation-name\": \"googleCallback\",\n        \"tags\": [\n          \"LoginController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Google Redirect Token Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"code\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"state\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"operationId\": \"LoginController.googleCallback\"\n      }\n    },\n    \"/auth/keycloak\": {\n      \"get\": {\n        \"x-controller-name\": \"LoginController\",\n        \"x-operation-name\": \"loginViaKeycloak\",\n        \"tags\": [\n          \"LoginController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Keycloak Token Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"client_id\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"client_secret\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"operationId\": \"LoginController.loginViaKeycloak\"\n      }\n    },\n    \"/auth/keycloak-auth-redirect\": {\n      \"get\": {\n        \"x-controller-name\": \"LoginController\",\n        \"x-operation-name\": \"keycloakCallback\",\n        \"tags\": [\n          \"LoginController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Keycloak Redirect Token Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"code\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"state\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"operationId\": \"LoginController.keycloakCallback\"\n      }\n    },\n    \"/auth/login\": {\n      \"post\": {\n        \"x-controller-name\": \"LoginController\",\n        \"x-operation-name\": \"login\",\n        \"tags\": [\n          \"LoginController\"\n        ],\n        \"description\": \"Gets you the code that will be used for getting token (webapps)\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Auth Code\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"The syntax of the request entity is incorrect.\"\n          },\n          \"401\": {\n            \"description\": \"Invalid Credentials.\"\n          },\n          \"404\": {\n            \"description\": \"The entity requested does not exist.\"\n          },\n          \"422\": {\n            \"description\": \"The syntax of the request entity is incorrect\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"LoginController.login\"\n      }\n    },\n    \"/auth/login-token\": {\n      \"post\": {\n        \"x-controller-name\": \"LoginController\",\n        \"x-operation-name\": \"loginWithClientUser\",\n        \"tags\": [\n          \"LoginController\"\n        ],\n        \"description\": \"Gets you refresh token and access token in one hit. (mobile app)\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Token Response Model\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The syntax of the request entity is incorrect.\"\n          },\n          \"401\": {\n            \"description\": \"Invalid Credentials.\"\n          },\n          \"404\": {\n            \"description\": \"The entity requested does not exist.\"\n          },\n          \"422\": {\n            \"description\": \"The syntax of the request entity is incorrect\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"device_id\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"LoginController.loginWithClientUser\"\n      }\n    },\n    \"/auth/me\": {\n      \"get\": {\n        \"x-controller-name\": \"LoginController\",\n        \"x-operation-name\": \"me\",\n        \"tags\": [\n          \"LoginController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"description\": \"To get the user details\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User Object\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"The syntax of the request entity is incorrect.\"\n          },\n          \"401\": {\n            \"description\": \"Invalid Credentials.\"\n          },\n          \"404\": {\n            \"description\": \"The entity requested does not exist.\"\n          },\n          \"422\": {\n            \"description\": \"The syntax of the request entity is incorrect\"\n          }\n        },\n        \"operationId\": \"LoginController.me\"\n      }\n    },\n    \"/auth/reset-password\": {\n      \"patch\": {\n        \"x-controller-name\": \"ForgetPasswordController\",\n        \"x-operation-name\": \"resetPassword\",\n        \"tags\": [\n          \"ForgetPasswordController\"\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"If User password successfully changed.\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ResetPasswordWithClient\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"ForgetPasswordController.resetPassword\"\n      }\n    },\n    \"/auth/token\": {\n      \"post\": {\n        \"x-controller-name\": \"LoginController\",\n        \"x-operation-name\": \"getToken\",\n        \"tags\": [\n          \"LoginController\"\n        ],\n        \"description\": \" Send the code received from the above api and this api will send you refresh token and access token (webapps)\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Token Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The syntax of the request entity is incorrect.\"\n          },\n          \"401\": {\n            \"description\": \"Invalid Credentials.\"\n          },\n          \"404\": {\n            \"description\": \"The entity requested does not exist.\"\n          },\n          \"422\": {\n            \"description\": \"The syntax of the request entity is incorrect\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"device_id\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AuthTokenRequest\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"LoginController.getToken\"\n      }\n    },\n    \"/auth/token-refresh\": {\n      \"post\": {\n        \"x-controller-name\": \"LoginController\",\n        \"x-operation-name\": \"exchangeToken\",\n        \"tags\": [\n          \"LoginController\"\n        ],\n        \"description\": \" Gets you a new access and refresh token once your access token is expired. (both mobile and web)\\n\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New Token Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The syntax of the request entity is incorrect.\"\n          },\n          \"401\": {\n            \"description\": \"Invalid Credentials.\"\n          },\n          \"404\": {\n            \"description\": \"The entity requested does not exist.\"\n          },\n          \"422\": {\n            \"description\": \"The syntax of the request entity is incorrect\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"device_id\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AuthRefreshTokenRequest\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"LoginController.exchangeToken\"\n      }\n    },\n    \"/auth/verify-reset-password-link\": {\n      \"get\": {\n        \"x-controller-name\": \"ForgetPasswordController\",\n        \"x-operation-name\": \"verifyResetPasswordLink\",\n        \"tags\": [\n          \"ForgetPasswordController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Check if Token Is Valid and not Expired.\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"operationId\": \"ForgetPasswordController.verifyResetPasswordLink\"\n      }\n    },\n    \"/auth-clients/count\": {\n      \"get\": {\n        \"x-controller-name\": \"AuthClientController\",\n        \"x-operation-name\": \"count\",\n        \"tags\": [\n          \"AuthClientController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"AuthClient model count\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/loopback.Count\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"where\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"title\": \"auth_clients.WhereFilter\",\n                  \"additionalProperties\": true,\n                  \"x-typescript-type\": \"@loopback/repository#Where\u003cAuthClient\u003e\"\n                }\n              }\n            }\n          }\n        ],\n        \"operationId\": \"AuthClientController.count\"\n      }\n    },\n    \"/auth-clients/{id}\": {\n      \"put\": {\n        \"x-controller-name\": \"AuthClientController\",\n        \"x-operation-name\": \"replaceById\",\n        \"tags\": [\n          \"AuthClientController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"AuthClient PUT success\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AuthClient\"\n              }\n            }\n          },\n          \"x-parameter-index\": 1\n        },\n        \"operationId\": \"AuthClientController.replaceById\"\n      },\n      \"patch\": {\n        \"x-controller-name\": \"AuthClientController\",\n        \"x-operation-name\": \"updateById\",\n        \"tags\": [\n          \"AuthClientController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"AuthClient PATCH success\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AuthClientPartial\"\n              }\n            }\n          },\n          \"x-parameter-index\": 1\n        },\n        \"operationId\": \"AuthClientController.updateById\"\n      },\n      \"get\": {\n        \"x-controller-name\": \"AuthClientController\",\n        \"x-operation-name\": \"findById\",\n        \"tags\": [\n          \"AuthClientController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"AuthClient model instance\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AuthClient\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"required\": true\n          }\n        ],\n        \"operationId\": \"AuthClientController.findById\"\n      },\n      \"delete\": {\n        \"x-controller-name\": \"AuthClientController\",\n        \"x-operation-name\": \"deleteById\",\n        \"tags\": [\n          \"AuthClientController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"AuthClient DELETE success\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"required\": true\n          }\n        ],\n        \"operationId\": \"AuthClientController.deleteById\"\n      }\n    },\n    \"/auth-clients\": {\n      \"post\": {\n        \"x-controller-name\": \"AuthClientController\",\n        \"x-operation-name\": \"create\",\n        \"tags\": [\n          \"AuthClientController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"AuthClient model instance\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AuthClient\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AuthClientExcluding_id_\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"AuthClientController.create\"\n      },\n      \"patch\": {\n        \"x-controller-name\": \"AuthClientController\",\n        \"x-operation-name\": \"updateAll\",\n        \"tags\": [\n          \"AuthClientController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"AuthClient PATCH success count\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/loopback.Count\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"where\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"title\": \"auth_clients.WhereFilter\",\n                  \"additionalProperties\": true,\n                  \"x-typescript-type\": \"@loopback/repository#Where\u003cAuthClient\u003e\"\n                }\n              }\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AuthClientPartial\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"AuthClientController.updateAll\"\n      },\n      \"get\": {\n        \"x-controller-name\": \"AuthClientController\",\n        \"x-operation-name\": \"find\",\n        \"tags\": [\n          \"AuthClientController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Array of AuthClient model instances\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/AuthClient\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/auth_clients.Filter\"\n                }\n              }\n            }\n          }\n        ],\n        \"operationId\": \"AuthClientController.find\"\n      }\n    },\n    \"/logout\": {\n      \"post\": {\n        \"x-controller-name\": \"LogoutController\",\n        \"x-operation-name\": \"logout\",\n        \"tags\": [\n          \"LogoutController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"description\": \"To logout\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SuccessResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The syntax of the request entity is incorrect.\"\n          },\n          \"401\": {\n            \"description\": \"Invalid Credentials.\"\n          },\n          \"404\": {\n            \"description\": \"The entity requested does not exist.\"\n          },\n          \"422\": {\n            \"description\": \"The syntax of the request entity is incorrect\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"This is the access token which is required to authenticate user.\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequestPartial\"\n              }\n            }\n          },\n          \"x-parameter-index\": 1\n        },\n        \"operationId\": \"LogoutController.logout\"\n      }\n    },\n    \"/otp-caches/{id}\": {\n      \"get\": {\n        \"x-controller-name\": \"OtpController\",\n        \"x-operation-name\": \"findById\",\n        \"tags\": [\n          \"OtpController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Otp model instance\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Otp\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"operationId\": \"OtpController.findById\"\n      },\n      \"delete\": {\n        \"x-controller-name\": \"OtpController\",\n        \"x-operation-name\": \"deleteById\",\n        \"tags\": [\n          \"OtpController\"\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Otp DELETE success\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"operationId\": \"OtpController.deleteById\"\n      }\n    },\n    \"/otp-caches\": {\n      \"post\": {\n        \"x-controller-name\": \"OtpController\",\n        \"x-operation-name\": \"create\",\n        \"tags\": [\n          \"OtpController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Otp model instance\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Otp\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Otp\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"OtpController.create\"\n      }\n    },\n    \"/ping\": {\n      \"get\": {\n        \"x-controller-name\": \"PingController\",\n        \"x-operation-name\": \"ping\",\n        \"tags\": [\n          \"PingController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ping Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"greeting\": {\n                      \"type\": \"string\"\n                    },\n                    \"date\": {\n                      \"type\": \"string\"\n                    },\n                    \"url\": {\n                      \"type\": \"string\"\n                    },\n                    \"headers\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"Content-Type\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"additionalProperties\": true\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"PingController.ping\"\n      }\n    },\n    \"/todos/count\": {\n      \"get\": {\n        \"x-controller-name\": \"TodoController\",\n        \"x-operation-name\": \"count\",\n        \"tags\": [\n          \"TodoController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"ToDo model count\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/loopback.Count\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"where\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"title\": \"todos.WhereFilter\",\n                  \"additionalProperties\": true,\n                  \"x-typescript-type\": \"@loopback/repository#Where\u003cToDo\u003e\"\n                }\n              }\n            }\n          }\n        ],\n        \"operationId\": \"TodoController.count\"\n      }\n    },\n    \"/todos/{id}\": {\n      \"patch\": {\n        \"x-controller-name\": \"TodoController\",\n        \"x-operation-name\": \"updateById\",\n        \"tags\": [\n          \"TodoController\"\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"ToDo PATCH success\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ToDoPartial\"\n              }\n            }\n          },\n          \"x-parameter-index\": 1\n        },\n        \"operationId\": \"TodoController.updateById\"\n      },\n      \"get\": {\n        \"x-controller-name\": \"TodoController\",\n        \"x-operation-name\": \"findById\",\n        \"tags\": [\n          \"TodoController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"ToDo model instance\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ToDoWithRelations\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/todos.Filter\"\n                }\n              }\n            }\n          }\n        ],\n        \"operationId\": \"TodoController.findById\"\n      },\n      \"delete\": {\n        \"x-controller-name\": \"TodoController\",\n        \"x-operation-name\": \"deleteById\",\n        \"tags\": [\n          \"TodoController\"\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"ToDo DELETE success\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"operationId\": \"TodoController.deleteById\"\n      }\n    },\n    \"/todos\": {\n      \"post\": {\n        \"x-controller-name\": \"TodoController\",\n        \"x-operation-name\": \"create\",\n        \"tags\": [\n          \"TodoController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"ToDo model instance\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ToDo\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/NewToDo\"\n              }\n            }\n          },\n          \"x-parameter-index\": 1\n        },\n        \"operationId\": \"TodoController.create\"\n      },\n      \"get\": {\n        \"x-controller-name\": \"TodoController\",\n        \"x-operation-name\": \"find\",\n        \"tags\": [\n          \"TodoController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Array of ToDo model instances\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ToDoWithRelations\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/todos.Filter1\"\n                }\n              }\n            }\n          }\n        ],\n        \"operationId\": \"TodoController.find\"\n      }\n    },\n    \"/\": {\n      \"get\": {\n        \"x-controller-name\": \"HomePageController\",\n        \"x-operation-name\": \"homePage\",\n        \"tags\": [\n          \"HomePageController\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Home Page\",\n            \"content\": {\n              \"text/html\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"HomePageController.homePage\"\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"HTTPBearer\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    },\n    \"schemas\": {\n      \"LoginRequest\": {\n        \"title\": \"LoginRequest\",\n        \"type\": \"object\",\n        \"description\": \"This is the signature for login request.\",\n        \"properties\": {\n          \"client_id\": {\n            \"type\": \"string\",\n            \"description\": \"This property is supposed to be a string and is a required field\"\n          },\n          \"client_secret\": {\n            \"type\": \"string\",\n            \"description\": \"This property is supposed to be a string and is a required field\"\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"description\": \"This property is supposed to be a string and is a required field\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"description\": \"This property is supposed to be a string and is a required field\"\n          }\n        },\n        \"required\": [\n          \"client_id\",\n          \"client_secret\",\n          \"username\",\n          \"password\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"TokenResponse\": {\n        \"title\": \"TokenResponse\",\n        \"type\": \"object\",\n        \"description\": \"This is signature for successful token response.\",\n        \"properties\": {\n          \"accessToken\": {\n            \"type\": \"string\",\n            \"description\": \"This property is supposed to be a string and is a required field\"\n          },\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"description\": \"This property is supposed to be a string and is a required field\"\n          },\n          \"expires\": {\n            \"type\": \"number\"\n          },\n          \"pubnubToken\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"accessToken\",\n          \"refreshToken\",\n          \"expires\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"AuthTokenRequest\": {\n        \"title\": \"AuthTokenRequest\",\n        \"type\": \"object\",\n        \"description\": \"This is the signature for requesting the accessToken and refreshToken.\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\"\n          },\n          \"clientId\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"code\",\n          \"clientId\",\n          \"username\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"AuthRefreshTokenRequest\": {\n        \"title\": \"AuthRefreshTokenRequest\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"refreshToken\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"refreshToken\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"ResetPasswordPartial\": {\n        \"title\": \"ResetPasswordPartial\",\n        \"type\": \"object\",\n        \"description\": \"This is a signature for reset password. (tsType: Partial\u003cResetPassword\u003e, schemaOptions: { partial: true })\",\n        \"properties\": {\n          \"refreshToken\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"description\": \"This property is supposed to be a string and is a required field\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"description\": \"This property is supposed to be a string and is a required field\"\n          },\n          \"oldPassword\": {\n            \"type\": \"string\",\n            \"description\": \"This property is supposed to be a string and is a required field\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ResetPassword\": {\n        \"title\": \"ResetPassword\",\n        \"type\": \"object\",\n        \"description\": \"This is a signature for reset password.\",\n        \"properties\": {\n          \"refreshToken\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"description\": \"This property is supposed to be a string and is a required field\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"description\": \"This property is supposed to be a string and is a required field\"\n          },\n          \"oldPassword\": {\n            \"type\": \"string\",\n            \"description\": \"This property is supposed to be a string and is a required field\"\n          }\n        },\n        \"required\": [\n          \"refreshToken\",\n          \"username\",\n          \"password\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"SuccessResponse\": {\n        \"title\": \"SuccessResponse\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": true\n      },\n      \"RefreshTokenRequestPartial\": {\n        \"title\": \"RefreshTokenRequestPartial\",\n        \"type\": \"object\",\n        \"description\": \"(tsType: Partial\u003cRefreshTokenRequest\u003e, schemaOptions: { partial: true })\",\n        \"properties\": {\n          \"refreshToken\": {\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"Partial\u003cRefreshTokenRequest\u003e\"\n      },\n      \"RefreshTokenRequest\": {\n        \"title\": \"RefreshTokenRequest\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"refreshToken\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"refreshToken\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"Otp\": {\n        \"title\": \"Otp\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"otp\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"otp\",\n          \"username\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"AuthClient\": {\n        \"title\": \"AuthClient\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"deleted\": {\n            \"type\": \"boolean\"\n          },\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"number\"\n          },\n          \"clientId\": {\n            \"type\": \"string\"\n          },\n          \"clientSecret\": {\n            \"type\": \"string\"\n          },\n          \"secret\": {\n            \"type\": \"string\"\n          },\n          \"redirectUrl\": {\n            \"type\": \"string\"\n          },\n          \"accessTokenExpiration\": {\n            \"type\": \"number\"\n          },\n          \"refreshTokenExpiration\": {\n            \"type\": \"number\"\n          },\n          \"authCodeExpiration\": {\n            \"type\": \"number\"\n          }\n        },\n        \"required\": [\n          \"clientId\",\n          \"clientSecret\",\n          \"secret\",\n          \"accessTokenExpiration\",\n          \"refreshTokenExpiration\",\n          \"authCodeExpiration\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"AuthClientExcluding_id_\": {\n        \"title\": \"AuthClientExcluding_id_\",\n        \"type\": \"object\",\n        \"description\": \"(tsType: Omit\u003cAuthClient, 'id'\u003e, schemaOptions: { exclude: [ 'id' ] })\",\n        \"properties\": {\n          \"deleted\": {\n            \"type\": \"boolean\"\n          },\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"clientId\": {\n            \"type\": \"string\"\n          },\n          \"clientSecret\": {\n            \"type\": \"string\"\n          },\n          \"secret\": {\n            \"type\": \"string\"\n          },\n          \"redirectUrl\": {\n            \"type\": \"string\"\n          },\n          \"accessTokenExpiration\": {\n            \"type\": \"number\"\n          },\n          \"refreshTokenExpiration\": {\n            \"type\": \"number\"\n          },\n          \"authCodeExpiration\": {\n            \"type\": \"number\"\n          }\n        },\n        \"required\": [\n          \"clientId\",\n          \"clientSecret\",\n          \"secret\",\n          \"accessTokenExpiration\",\n          \"refreshTokenExpiration\",\n          \"authCodeExpiration\"\n        ],\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"Omit\u003cAuthClient, 'id'\u003e\"\n      },\n      \"AuthClientPartial\": {\n        \"title\": \"AuthClientPartial\",\n        \"type\": \"object\",\n        \"description\": \"(tsType: Partial\u003cAuthClient\u003e, schemaOptions: { partial: true })\",\n        \"properties\": {\n          \"deleted\": {\n            \"type\": \"boolean\"\n          },\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"number\"\n          },\n          \"clientId\": {\n            \"type\": \"string\"\n          },\n          \"clientSecret\": {\n            \"type\": \"string\"\n          },\n          \"secret\": {\n            \"type\": \"string\"\n          },\n          \"redirectUrl\": {\n            \"type\": \"string\"\n          },\n          \"accessTokenExpiration\": {\n            \"type\": \"number\"\n          },\n          \"refreshTokenExpiration\": {\n            \"type\": \"number\"\n          },\n          \"authCodeExpiration\": {\n            \"type\": \"number\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"Partial\u003cAuthClient\u003e\"\n      },\n      \"User\": {\n        \"title\": \"User\",\n        \"type\": \"object\",\n        \"description\": \"This is signature for user model.\",\n        \"properties\": {\n          \"deleted\": {\n            \"type\": \"boolean\"\n          },\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"middleName\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"pattern\": \"^\\\\+?[1-9]\\\\d{1,14}$\"\n          },\n          \"authClientIds\": {\n            \"type\": \"string\"\n          },\n          \"lastLogin\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"dob\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"gender\": {\n            \"type\": \"string\",\n            \"description\": \"This field takes a single character as input in database.\\n    'M' for male and 'F' for female.\",\n            \"enum\": [\n              \"M\",\n              \"F\",\n              \"O\"\n            ]\n          },\n          \"defaultTenantId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"firstName\",\n          \"username\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"ForgetPasswordResponseDto\": {\n        \"title\": \"ForgetPasswordResponseDto\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\"\n          },\n          \"expiry\": {\n            \"type\": \"number\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        },\n        \"required\": [\n          \"code\",\n          \"expiry\",\n          \"email\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"ForgetPasswordDto\": {\n        \"title\": \"ForgetPasswordDto\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"client_id\": {\n            \"type\": \"string\"\n          },\n          \"client_secret\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"username\",\n          \"client_id\",\n          \"client_secret\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"ResetPasswordWithClient\": {\n        \"title\": \"ResetPasswordWithClient\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"client_id\": {\n            \"type\": \"string\"\n          },\n          \"client_secret\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"token\",\n          \"password\",\n          \"client_id\",\n          \"client_secret\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"ToDo\": {\n        \"title\": \"ToDo\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"deleted\": {\n            \"type\": \"boolean\"\n          },\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"required\": [\n          \"title\",\n          \"description\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"NewToDo\": {\n        \"title\": \"NewToDo\",\n        \"type\": \"object\",\n        \"description\": \"(tsType: Omit\u003cToDo, 'id'\u003e, schemaOptions: { title: 'NewToDo', exclude: [ 'id' ] })\",\n        \"properties\": {\n          \"deleted\": {\n            \"type\": \"boolean\"\n          },\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"required\": [\n          \"title\",\n          \"description\"\n        ],\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"Omit\u003cToDo, 'id'\u003e\"\n      },\n      \"ToDoWithRelations\": {\n        \"title\": \"ToDoWithRelations\",\n        \"type\": \"object\",\n        \"description\": \"(tsType: ToDoWithRelations, schemaOptions: { includeRelations: true })\",\n        \"properties\": {\n          \"deleted\": {\n            \"type\": \"boolean\"\n          },\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"required\": [\n          \"title\",\n          \"description\"\n        ],\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"ToDoWithRelations\"\n      },\n      \"ToDoPartial\": {\n        \"title\": \"ToDoPartial\",\n        \"type\": \"object\",\n        \"description\": \"(tsType: Partial\u003cToDo\u003e, schemaOptions: { partial: true })\",\n        \"properties\": {\n          \"deleted\": {\n            \"type\": \"boolean\"\n          },\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"Partial\u003cToDo\u003e\"\n      },\n      \"loopback.Count\": {\n        \"type\": \"object\",\n        \"title\": \"loopback.Count\",\n        \"x-typescript-type\": \"@loopback/repository#Count\",\n        \"properties\": {\n          \"count\": {\n            \"type\": \"number\"\n          }\n        }\n      },\n      \"auth_clients.Filter\": {\n        \"type\": \"object\",\n        \"title\": \"auth_clients.Filter\",\n        \"properties\": {\n          \"offset\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"example\": 100\n          },\n          \"skip\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n          },\n          \"order\": {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            ]\n          },\n          \"where\": {\n            \"title\": \"auth_clients.WhereFilter\",\n            \"type\": \"object\",\n            \"additionalProperties\": true\n          },\n          \"fields\": {\n            \"oneOf\": [\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"deleted\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"deletedOn\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"deletedBy\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"createdOn\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"modifiedOn\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"id\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"clientId\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"clientSecret\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"secret\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"redirectUrl\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"accessTokenExpiration\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"refreshTokenExpiration\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"authCodeExpiration\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"additionalProperties\": false\n              },\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"deleted\",\n                    \"deletedOn\",\n                    \"deletedBy\",\n                    \"createdOn\",\n                    \"modifiedOn\",\n                    \"id\",\n                    \"clientId\",\n                    \"clientSecret\",\n                    \"secret\",\n                    \"redirectUrl\",\n                    \"accessTokenExpiration\",\n                    \"refreshTokenExpiration\",\n                    \"authCodeExpiration\"\n                  ],\n                  \"example\": \"deleted\"\n                },\n                \"uniqueItems\": true\n              }\n            ],\n            \"title\": \"auth_clients.Fields\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"@loopback/repository#Filter\u003cAuthClient\u003e\"\n      },\n      \"todos.Filter\": {\n        \"type\": \"object\",\n        \"title\": \"todos.Filter\",\n        \"properties\": {\n          \"offset\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"example\": 100\n          },\n          \"skip\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n          },\n          \"order\": {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            ]\n          },\n          \"fields\": {\n            \"oneOf\": [\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"deleted\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"deletedOn\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"deletedBy\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"createdOn\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"modifiedOn\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"createdBy\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"modifiedBy\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"id\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"title\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"description\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"items\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"additionalProperties\": false\n              },\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"deleted\",\n                    \"deletedOn\",\n                    \"deletedBy\",\n                    \"createdOn\",\n                    \"modifiedOn\",\n                    \"createdBy\",\n                    \"modifiedBy\",\n                    \"id\",\n                    \"title\",\n                    \"description\",\n                    \"items\"\n                  ],\n                  \"example\": \"deleted\"\n                },\n                \"uniqueItems\": true\n              }\n            ],\n            \"title\": \"todos.Fields\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"@loopback/repository#Filter\u003cToDo\u003e\"\n      },\n      \"todos.Filter1\": {\n        \"type\": \"object\",\n        \"title\": \"todos.Filter\",\n        \"properties\": {\n          \"offset\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"example\": 100\n          },\n          \"skip\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n          },\n          \"order\": {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            ]\n          },\n          \"where\": {\n            \"title\": \"todos.WhereFilter\",\n            \"type\": \"object\",\n            \"additionalProperties\": true\n          },\n          \"fields\": {\n            \"oneOf\": [\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"deleted\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"deletedOn\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"deletedBy\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"createdOn\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"modifiedOn\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"createdBy\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"modifiedBy\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"id\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"title\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"description\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"items\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"additionalProperties\": false\n              },\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"deleted\",\n                    \"deletedOn\",\n                    \"deletedBy\",\n                    \"createdOn\",\n                    \"modifiedOn\",\n                    \"createdBy\",\n                    \"modifiedBy\",\n                    \"id\",\n                    \"title\",\n                    \"description\",\n                    \"items\"\n                  ],\n                  \"example\": \"deleted\"\n                },\n                \"uniqueItems\": true\n              }\n            ],\n            \"title\": \"todos.Fields\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"@loopback/repository#Filter\u003cToDo\u003e\"\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"/\"\n    }\n  ]\n}",
			"canonicalURL": "/github.com/sourcefuse/loopback4-microservice-catalog@163c2bc9cff7ace1fe1855515a80196a9f9a1994/-/blob/sandbox/auth-multitenant-example/src/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/sourcefuse/loopback4-microservice-catalog/blob/163c2bc9cff7ace1fe1855515a80196a9f9a1994/sandbox/auth-multitenant-example/src/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/\": get: responses: 200: contents: unsupported content types: [text/html]",
	"NotImplemented": [
		"unsupported content types"
	]
}