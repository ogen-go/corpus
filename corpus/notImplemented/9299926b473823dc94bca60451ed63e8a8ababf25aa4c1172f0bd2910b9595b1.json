{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/onap/oom"
		},
		"file": {
			"name": "faultMnS.yaml",
			"size": 0,
			"path": "kubernetes/dcaegen2-services/resources/external/schemas/sa88-rel16/faultMnS.yaml",
			"byteSize": 37294,
			"content": "openapi: 3.0.1\ninfo:\n  title: Fault Supervision MnS\n  version: 16.4.0\n  description: \u003e-\n    OAS 3.0.1 definition of the Fault Supervision MnS\n    Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).\n    All rights reserved.\nexternalDocs:\n  description: 3GPP TS 28.532 V16.4.0; Generic management services\n  url: http://www.3gpp.org/ftp/Specs/archive/28_series/28.532/\nservers:\n  - url: '{MnSRoot}/FaultSupervisionMnS/{version}'\n    variables:\n      MnSRoot:\n        description: See subclause 4.4.3 of TS 32.158\n        default: http://example.com/3GPPManagement\n      version:\n        description: Version number of the OpenAPI definition\n        default: XXX\npaths:\n  /alarms:\n    get:\n      summary: Retrieve multiple alarms\n      description: \u003e-\n        Retrieves the alarms identified by alarmAckState, baseObjectInstance\n        and filter.\n      parameters:\n        - name: alarmAckState\n          in: query\n          required: false\n          schema:\n            $ref: '#/components/schemas/AlarmAckState'\n        - name: baseObjectInstance\n          in: query\n          required: false\n          schema:\n            $ref: '#/components/schemas/Dn'\n        - name: filter\n          in: query\n          required: false\n          schema:\n            $ref: '#/components/schemas/Filter'\n      responses:\n        '200':\n          description: \u003e-\n            Success case (\"200 OK\").\n            Returns the alarms identified in the request. The alarmId is the key\n            of the map.\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n                  allOf:\n                      - type: object\n                        properties:\n                          lastNotificationHeader:\n                            $ref: '#/components/schemas/NotificationHeader'\n                      - $ref: '#/components/schemas/AlarmRecord'\n                      - type: object\n                        properties:\n                          comments:\n                            $ref: '#/components/schemas/Comments'\n        default:\n          description: Response in case of error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      summary: 'Clear, acknowledge or unacknowledge multiple alarms'\n      description: \u003e-\n        Clears, acknowledges or unacknowledges multiple alarms using patch. Depending\n        on which action is to be performed, different merge patch documents need\n        to be used.\n      requestBody:\n        description: \u003e-\n          Patch documents for acknowledging and unacknowledging, or clearing multiple\n          alarms. The keys in the map are the alarmIds to be patched.\n        content:\n          application/merge-patch+json:\n            schema:\n              oneOf:\n                - type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/MergePatchAcknowledgeAlarm'\n                - type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/MergePatchClearAlarm'\n      responses:\n        '204':\n          description: \u003e-\n            Success case (\"204 No content\").\n            The response message body is empty.\n        default:\n          description: Response in case of error.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/FailedAlarm'\n  /alarms/alarmCount:\n    get:\n      summary: Get the alarm count per perceived severity\n      parameters:\n        - name: alarmAckState\n          in: query\n          required: false\n          schema:\n            $ref: '#/components/schemas/AlarmAckState'\n        - name: filter\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Success case (\"200 OK\").\n            The alarm count per perceived severity is returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlarmCount'\n        default:\n          description: Response in case of error. The error case needs rework.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /alarms/{alarmId}:\n    patch:\n      summary: 'Clear, acknowledge or unacknowledge a single alarm'\n      description: \u003e-\n        Clears, acknowledges or uncknowldeges a single alarm by patching the alarm\n        information. A conditional acknowledge request based on the perceived\n        severity is not supported.\n      parameters:\n        - name: alarmId\n          in: path\n          description: Identifies the alarm to be patched.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/merge-patch+json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/MergePatchAcknowledgeAlarm'\n                - $ref: '#/components/schemas/MergePatchClearAlarm'\n      responses:\n        '204':\n          description: \u003e-\n            Success case (204 No content).\n            The response message body is absent.\n        default:\n          description: Response in case of error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /alarms/{alarmId}/comments:\n    post:\n      summary: Add a comment to a single alarm\n      description: \u003e-\n        Adds a comment to an alarm identified by alarmId. The id of the new comment\n        is allocated by the producer.\n      parameters:\n        - name: alarmId\n          in: path\n          description: Identifies the alarm to which the comment shall be added.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Comment'\n      responses:\n        '201':\n          description: \u003e-\n            Success case (201 Created).\n            The representation of the newly created comment resource shall be returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comment'\n          headers:\n            Location:\n              description: URI of the newly created comment resource.\n              required: true\n              schema:\n                type: string\n        default:\n          description: Error case.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /subscriptions:\n    post:\n      summary: Create a subscription\n      description: \u003e-\n        To create a subscription the representation of the subscription is\n        POSTed on the /subscriptions collection resource.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Subscription'\n      responses:\n        '201':\n          description: \u003e-\n            Success case (\"201 Created\").\n            The representation of the newly created subscription resource shall\n            be returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n          headers:\n            Location:\n              description: URI of the newly created subscription resource\n              required: true\n              schema:\n                type: string\n        default:\n          description: Error case.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      callbacks:\n        notifyNewAlarm:\n          '{request.body#/consumerReference}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      oneOf:\n                        - $ref: '#/components/schemas/NotifyNewAlarm'\n                        - $ref: '#/components/schemas/NotifyNewSecAlarm'\n              responses:\n                '204':\n                  description: \u003e-\n                    Success case (\"204 No Content\").\n                    The notification is successfully delivered. The response message\n                    body is absent.\n                default:\n                  description: Error case.\n                  content:\n                    application/json:\n                      schema:\n                        $ref: '#/components/schemas/ErrorResponse'\n        notifyClearedAlarm:\n          '{request.body#/consumerReference}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/NotifyClearedAlarm'\n              responses:\n                '204':\n                  description: \u003e-\n                    Success case (\"204 No Content\").\n                    The notification is successfully delivered. The response message\n                    body is absent.\n                default:\n                  description: Error case.\n                  content:\n                    application/json:\n                      schema:\n                        $ref: '#/components/schemas/ErrorResponse'\n        notifyChangedAlarm:\n          '{request.body#/consumerReference}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/NotifyChangedAlarm'\n              responses:\n                '204':\n                  description: \u003e-\n                    Success case (\"204 No Content\").\n                    The notification is successfully delivered. The response message\n                    body is absent.\n                default:\n                  description: Error case.\n                  content:\n                    application/json:\n                      schema:\n                        $ref: '#/components/schemas/ErrorResponse'\n        notifyChangedAlarmGeneral:\n          '{request.body#/consumerReference}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      oneOf:\n                        - $ref: '#/components/schemas/NotifyChangedAlarmGeneral'\n                        - $ref: '#/components/schemas/NotifyChangedSecAlarmGeneral'\n              responses:\n                '204':\n                  description: \u003e-\n                    Success case (\"204 No Content\").\n                    The notification is successfully delivered. The response message\n                    body is absent.\n                default:\n                  description: Error case.\n                  content:\n                    application/json:\n                      schema:\n                        $ref: '#/components/schemas/ErrorResponse'\n        notifyCorrelatedNotificationChanged:\n          '{request.body#/consumerReference}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/NotifyCorrelatedNotificationChanged'\n              responses:\n                '204':\n                  description: \u003e-\n                    Success case (\"204 No Content\").\n                    The notification is successfully delivered. The response message\n                    body is absent.\n                default:\n                  description: Error case.\n                  content:\n                    application/json:\n                      schema:\n                        $ref: '#/components/schemas/ErrorResponse'\n        notifyAckStateChanged:\n          '{request.body#/consumerReference}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/NotifyAckStateChanged'\n              responses:\n                '204':\n                  description: \u003e-\n                    Success case (\"204 No Content\").\n                    The notification is successfully delivered. The response message\n                    body is absent.\n                default:\n                  description: Error case.\n                  content:\n                    application/json:\n                      schema:\n                        $ref: '#/components/schemas/ErrorResponse'\n        notifyComments:\n          '{request.body#/consumerReference}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/NotifyComments'\n              responses:\n                '204':\n                  description: \u003e-\n                    Success case (\"204 No Content\").\n                    The notification is successfully delivered. The response message\n                    body is absent.\n                default:\n                  description: Error case.\n                  content:\n                    application/json:\n                      schema:\n                        $ref: '#/components/schemas/ErrorResponse'\n        notifyPotentialFaultyAlarmList:\n          '{request.body#/consumerReference}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/NotifyPotentialFaultyAlarmList'\n              responses:\n                '204':\n                  description: \u003e-\n                    Success case (\"204 No Content\").\n                    The notification is successfully delivered. The response message\n                    body is absent.\n                default:\n                  description: Error case.\n                  content:\n                    application/json:\n                      schema:\n                        $ref: '#/components/schemas/ErrorResponse'\n        notifyAlarmListRebuilt:\n          '{request.body#/consumerReference}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/NotifyAlarmListRebuilt'\n              responses:\n                '204':\n                  description: \u003e-\n                    Success case (\"204 No Content\").\n                    The notification is successfully delivered. The response message\n                    body is absent.\n                default:\n                  description: Error case.\n                  content:\n                    application/json:\n                      schema:\n                        $ref: '#/components/schemas/ErrorResponse'\n  /subscriptions/{subscriptionId}:\n    delete:\n      summary: Delete a subscription\n      description: \u003e-\n        The subscription is deleted by deleting the corresponding subscription\n        resource. The resource to be deleted is identified with the path\n        component of the URI.\n      parameters:\n        - name: subscriptionId\n          in: path\n          description: Identifies the subscription to be deleted.\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: \u003e-\n            Success case (\"204 No Content\").\n            The subscription resource has been deleted. The response message body\n            is absent.\n        default:\n          description: Error case.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\ncomponents:\n  schemas:\n\n  #---- Definitions to be moved to comDefs.yaml --------------------------------------#\n\n    Long:\n      type: string\n      format: long\n    Float:\n      type: string\n      format: float\n    DateTime:\n      type: string\n      format: date-Time\n\n    Dn:\n      type: string\n    Uri:\n      type: string\n\n    AttributeNameValuePairSet:\n      type: object\n      minProperties: 1\n    AttributeValueChangeSet:\n      description: \u003e-\n        The key in this map is the attribute name. The value of each key is an array.\n        When only one item is present in the array, it carries the new attribute\n        value. If two items are present, then the first item carries the old value\n        and the second item the new value. The items can be of any type including null.\n      type: object\n      additionalProperties:\n        type: array\n        minItems: 1\n        maxItems: 2\n        items:\n          nullable: true\n\n    Filter:\n      type: string\n    SystemDN:\n      type: string\n\n    NotificationId:\n      type: integer\n    NotificationHeader:\n      description: \u003e-\n        Header used for all notification types\n      type: object\n      required:\n        - href\n        - notificationId\n        - notificationType\n        - eventTime\n        - systemDN\n      properties:\n        uri:\n          $ref: '#/components/schemas/Uri'\n        notificationId:\n          $ref: '#/components/schemas/NotificationId'\n        notificationType:\n          oneOf:\n            - $ref: '#/components/schemas/AlarmNotificationTypes'\n            #- $ref: 'faultMnS.yaml#/components/schemas/AlarmNotificationTypes'\n            #- $ref: 'provMnS.yaml#/components/schemas/CmNotificationTypes'\n            # more to be added\n        eventTime:\n          $ref: '#/components/schemas/DateTime'\n        systemDN:\n          $ref: '#/components/schemas/SystemDN'\n\n    ErrorResponse:\n      description: \u003e-\n        Default schema for the response message body in case the request is not\n        successful.\n      type: object\n      properties:\n        error:\n          type: object\n          properties:\n            errorInfo:\n              type: string\n\n  #---- End of definitions to be moved to comDefs.yaml -------------------------------#\n\n  #---- Definition of AlarmRecord ----------------------------------------------------#\n\n    AlarmId:\n      type: string\n    AlarmType:\n      type: string\n      enum:\n        - COMMUNICATIONS_ALARM\n        - QUALITY_OF_SERVICE_ALARM\n        - PROCESSING_ERROR_ALARM\n        - EQUIPMENT_ALARM\n        - ENVIRONMENTAL_ALARM\n        - INTEGRITY_VIOLATION\n        - OPERATIONAL_VIOLATION\n        - PHYSICAL_VIOLATION\n        - SECURITY_SERVICE_OR_MECHANISM_VIOLATION\n        - TIME_DOMAIN_VIOLATION\n    ProbableCause:\n      description: \u003e-\n        The value of the probable cause may be a specific standardized string, or any\n        vendor provided string. Probable cause strings are not standardized in the\n        present document. They may be added in a future version. Up to then the\n        mapping of the generic probable cause strings \"PROBABLE_CAUSE_001\" to\n        \"PROBABLE_CAUSE_005\" is vendor specific.\n        The value of the probable cause may also be an integer. The mapping of integer\n        values to probable causes is vendor specific.\n      oneOf:\n        - anyOf:\n            - type: string\n              enum:\n                - PROBABLE_CAUSE_001\n                - PROBABLE_CAUSE_002\n                - PROBABLE_CAUSE_003\n                - PROBABLE_CAUSE_004\n                - PROBABLE_CAUSE_005\n            - type: string\n        - type: integer\n    SpecificProblem:\n      oneOf:\n        - type: string\n        - type: integer\n    PerceivedSeverity:\n      type: string\n      enum:\n        - INDETERMINATE\n        - CRITICAL\n        - MAJOR\n        - MINOR\n        - WARNING\n        - CLEARED\n    TrendIndication:\n      type: string\n      enum:\n        - MORE_SEVERE\n        - NO_CHANGE\n        - LESS_SEVERE\n    ThresholdHysteresis:\n      type: object\n      required:\n        - high\n      properties:\n        high:\n          oneOf:\n            - type: integer\n            - $ref: '#/components/schemas/Float'\n        low:\n          $ref: '#/components/schemas/Float'\n    ThresholdLevelInd:\n      type: object\n      required:\n        - up\n      properties:\n        up:\n          $ref: '#/components/schemas/ThresholdHysteresis'\n        low:\n          $ref: '#/components/schemas/ThresholdHysteresis'\n    ThresholdInfo:\n      type: object\n      required:\n        - observedMeasurement\n        - observedValue\n      properties:\n        observedMeasurement:\n          type: string\n        observedValue:\n          oneOf:\n            - type: integer\n            - $ref: '#/components/schemas/Float'\n        thresholdLevelInd:\n          $ref: '#/components/schemas/ThresholdLevelInd'\n        armTime:\n          $ref: '#/components/schemas/DateTime'\n    CorrelatedNotification:\n      type: object\n      required:\n        - source\n        - notificationId\n      properties:\n        sourceObjectInstance:\n          $ref: '#/components/schemas/Dn'\n        notificationIds:\n          type: array\n          items:\n            $ref: '#/components/schemas/NotificationId'\n    CorrelatedNotifications:\n      type: array\n      items:\n        $ref: '#/components/schemas/CorrelatedNotification'\n    AckState:\n      type: string\n      enum:\n        - ACKNOWLEDGED\n        - UNACKNOWLEDGED\n\n    AlarmRecord:\n      description: \u003e-\n        The alarmId is not a property of an alarm record. It is used as key\n        in the map of alarm records instead.\n      type: object\n      properties:\n        # alarmId:\n        #  $ref: '#/components/schemas/AlarmId'\n        objectInstance:\n          $ref: '#/components/schemas/Dn'\n        notificationId:\n          $ref: '#/components/schemas/NotificationId'\n        alarmRaisedTime:\n          $ref: '#/components/schemas/DateTime'\n        alarmChangedTime:\n          $ref: '#/components/schemas/DateTime'\n        alarmClearedTime:\n          $ref: '#/components/schemas/DateTime'\n        alarmType:\n          $ref: '#/components/schemas/AlarmType'\n        probableCause:\n          $ref: '#/components/schemas/ProbableCause'\n        specificProblem:\n          $ref: '#/components/schemas/SpecificProblem'\n        perceivedSeverity:\n          $ref: '#/components/schemas/PerceivedSeverity'\n        backedUpStatus:\n          type: boolean\n        backUpObject:\n          $ref: '#/components/schemas/Dn'\n        trendIndication:\n          $ref: '#/components/schemas/TrendIndication'\n        thresholdinfo:\n          $ref: '#/components/schemas/ThresholdInfo'\n        correlatedNotifications:\n          $ref: '#/components/schemas/CorrelatedNotifications'\n        stateChangeDefinition:\n          $ref: '#/components/schemas/AttributeValueChangeSet'\n        monitoredAttributes:\n          $ref: '#/components/schemas/AttributeNameValuePairSet'\n        proposedRepairActions:\n          type: string\n        additionalText:\n          type: string\n        additionalInformation:\n          $ref: '#/components/schemas/AttributeNameValuePairSet'\n\n        rootCauseIndicator:\n          type: boolean\n\n        ackTime:\n          $ref: '#/components/schemas/DateTime'\n        ackUserId:\n          type: string\n        ackSystemId:\n          type: string\n        ackState:\n          $ref: '#/components/schemas/AckState'\n\n        clearUserId:\n          type: string\n        clearSystemId:\n          type: string\n        serviceUser:\n          type: string\n        serviceProvider:\n          type: string\n        securityAlarmDetector:\n          type: string\n\n  #---- Definition of alarm notifications --------------------------------------------#\n\n    AlarmNotificationTypes:\n      type: string\n      enum:\n        - notifyNewAlarm\n        - notifyChangedAlarm\n        - notifyChangedAlarmGeneral\n        - notifyAckStateChanged\n        - notifyCorrelatedNotificationChanged\n        - notifyComments\n        - notifyClearedAlarm\n        - notifyAlarmListRebuiltAlarm\n        - notifyPotentialFaultyAlarmList\n    AlarmListAlignmentRequirement:\n      type: string\n      enum:\n        - ALIGNMENT_REQUIRED\n        - ALIGNMENT_NOT_REQUIRED\n\n    NotifyNewAlarm:\n      allOf:\n        - $ref: '#/components/schemas/NotificationHeader'\n        - type: object\n          required:\n            - alarmId\n            - alarmType\n            - probableCause\n            - perceivedSeverity\n          properties:\n            alarmId:\n              $ref: '#/components/schemas/AlarmId'\n            alarmType:\n              $ref: '#/components/schemas/AlarmType'\n            probableCause:\n              $ref: '#/components/schemas/ProbableCause'\n            specificProblem:\n              $ref: '#/components/schemas/SpecificProblem'\n            perceivedSeverity:\n              $ref: '#/components/schemas/PerceivedSeverity'\n            backedUpStatus:\n              type: boolean\n            backUpObject:\n              $ref: '#/components/schemas/Dn'\n            trendIndication:\n              $ref: '#/components/schemas/TrendIndication'\n            thresholdInfo:\n              $ref: '#/components/schemas/ThresholdInfo'\n            correlatedNotifications:\n              $ref: '#/components/schemas/CorrelatedNotifications'\n            stateChangeDefinition:\n              $ref: '#/components/schemas/AttributeValueChangeSet'\n            monitoredAttributes:\n              $ref: '#/components/schemas/AttributeNameValuePairSet'\n            proposedRepairActions:\n              type: string\n            additionalText:\n              type: string\n            additionalInformation:\n              $ref: '#/components/schemas/AttributeNameValuePairSet'\n            rootCauseIndicator:\n              type: boolean\n    NotifyNewSecAlarm:\n      allOf:\n        - $ref: '#/components/schemas/NotificationHeader'\n        - type: object\n          required:\n            - alarmId\n            - alarmType\n            - probableCause\n            - perceivedSeverity\n            - serviceUser\n            - serviceProvider\n            - securityAlarmDetector\n          properties:\n            alarmId:\n              $ref: '#/components/schemas/AlarmId'\n            alarmType:\n              $ref: '#/components/schemas/AlarmType'\n            probableCause:\n              $ref: '#/components/schemas/ProbableCause'\n            perceivedSeverity:\n              $ref: '#/components/schemas/PerceivedSeverity'\n            correlatedNotifications:\n              $ref: '#/components/schemas/CorrelatedNotifications'\n            additionalText:\n              type: string\n            additionalInformation:\n              $ref: '#/components/schemas/AttributeNameValuePairSet'\n            rootCauseIndicator:\n              type: boolean\n            serviceUser:\n              type: string\n            serviceProvider:\n              type: string\n            securityAlarmDetector:\n              type: string\n    NotifyClearedAlarm:\n      allOf:\n        - $ref: '#/components/schemas/NotificationHeader'\n        - type: object\n          required:\n            - alarmId\n            - alarmType\n            - probableCause\n            - perceivedSeverity\n          properties:\n            alarmId:\n              $ref: '#/components/schemas/AlarmId'\n            alarmType:\n              $ref: '#/components/schemas/AlarmType'\n            probableCause:\n              $ref: '#/components/schemas/ProbableCause'\n            perceivedSeverity:\n              $ref: '#/components/schemas/PerceivedSeverity'\n            correlatedNotifications:\n              $ref: '#/components/schemas/CorrelatedNotifications'\n            clearUserId:\n              type: string\n            clearSystemId:\n              type: string\n    NotifyChangedAlarm:\n      allOf:\n        - $ref: '#/components/schemas/NotificationHeader'\n        - type: object\n          required:\n            - alarmId\n            - alarmType\n            - probableCause\n            - perceivedSeverity\n          properties:\n            alarmId:\n              $ref: '#/components/schemas/AlarmId'\n            alarmType:\n              $ref: '#/components/schemas/AlarmType'\n            probableCause:\n              $ref: '#/components/schemas/ProbableCause'\n            perceivedSeverity:\n              $ref: '#/components/schemas/PerceivedSeverity'\n    NotifyChangedAlarmGeneral:\n      allOf:\n        - $ref: '#/components/schemas/NotificationHeader'\n        - type: object\n          required:\n            - alarmId\n            - alarmType\n            - probableCause\n            - perceivedSeverity\n            - changedAlarmAttributes\n          properties:\n            alarmId:\n              $ref: '#/components/schemas/AlarmId'\n            alarmType:\n              $ref: '#/components/schemas/AlarmType'\n            probableCause:\n              $ref: '#/components/schemas/ProbableCause'\n            specificProblem:\n              $ref: '#/components/schemas/SpecificProblem'\n            perceivedSeverity:\n              $ref: '#/components/schemas/PerceivedSeverity'\n            correlatedNotifications:\n              $ref: '#/components/schemas/CorrelatedNotifications'\n            backedUpStatus:\n              type: boolean\n            backUpObject:\n              $ref: '#/components/schemas/Dn'\n            trendIndication:\n              $ref: '#/components/schemas/TrendIndication'\n            thresholdInfo:\n              $ref: '#/components/schemas/ThresholdInfo'\n            stateChangeDefinition:\n              $ref: '#/components/schemas/AttributeValueChangeSet'\n            monitoredAttributes:\n              $ref: '#/components/schemas/AttributeNameValuePairSet'\n            proposedRepairActions:\n              type: string\n            additionalText:\n              type: string\n            additionalInformation:\n              $ref: '#/components/schemas/AttributeNameValuePairSet'\n            rootCauseIndicator:\n              type: boolean\n            changedAlarmAttributes:\n              $ref: '#/components/schemas/AttributeNameValuePairSet'\n    NotifyChangedSecAlarmGeneral:\n      allOf:\n        - $ref: '#/components/schemas/NotificationHeader'\n        - type: object\n          required:\n            - alarmId\n            - alarmType\n            - probableCause\n            - perceivedSeverity\n            - serviceUser\n            - serviceProvider\n            - securityAlarmDetector\n            - changedAlarmAttributes\n          properties:\n            alarmId:\n              $ref: '#/components/schemas/AlarmId'\n            alarmType:\n              $ref: '#/components/schemas/AlarmType'\n            probableCause:\n              $ref: '#/components/schemas/ProbableCause'\n            perceivedSeverity:\n              $ref: '#/components/schemas/PerceivedSeverity'\n            correlatedNotifications:\n              $ref: '#/components/schemas/CorrelatedNotifications'\n            additionalText:\n              type: string\n            additionalInformation:\n              $ref: '#/components/schemas/AttributeNameValuePairSet'\n            rootCauseIndicator:\n              type: boolean\n            serviceUser:\n              type: string\n            serviceProvider:\n              type: string\n            securityAlarmDetector:\n              type: string\n            changedAlarmAttributes:\n              $ref: '#/components/schemas/AttributeNameValuePairSet'\n    NotifyCorrelatedNotificationChanged:\n      allOf:\n        - $ref: '#/components/schemas/NotificationHeader'\n        - type: object\n          required:\n            - alarmId\n            - correlatedNotifications\n          properties:\n            alarmId:\n              $ref: '#/components/schemas/AlarmId'\n            correlatedNotifications:\n              $ref: '#/components/schemas/CorrelatedNotifications'\n            rootCauseIndicator:\n              type: boolean\n    NotifyAckStateChanged:\n      allOf:\n        - $ref: '#/components/schemas/NotificationHeader'\n        - type: object\n          required:\n            - alarmId\n            - alarmType\n            - probableCause\n            - perceivedSeverity\n            - ackState\n            - ackUserId\n          properties:\n            alarmId:\n              $ref: '#/components/schemas/AlarmId'\n            alarmType:\n              $ref: '#/components/schemas/AlarmType'\n            probableCause:\n              $ref: '#/components/schemas/ProbableCause'\n            perceivedSeverity:\n              $ref: '#/components/schemas/PerceivedSeverity'\n            ackState:\n              $ref: '#/components/schemas/AckState'\n            ackUserId:\n              type: string\n            ackSystemId:\n              type: string\n    NotifyComments:\n      allOf:\n        - $ref: '#/components/schemas/NotificationHeader'\n        - type: object\n          required:\n            - alarmId\n            - alarmType\n            - probableCause\n            - perceivedSeverity\n            - comments\n          properties:\n            alarmId:\n              $ref: '#/components/schemas/AlarmId'\n            alarmType:\n              $ref: '#/components/schemas/AlarmType'\n            probableCause:\n              $ref: '#/components/schemas/ProbableCause'\n            perceivedSeverity:\n              $ref: '#/components/schemas/PerceivedSeverity'\n            comments:\n              $ref: '#/components/schemas/Comments'\n    NotifyPotentialFaultyAlarmList:\n      allOf:\n        - $ref: '#/components/schemas/NotificationHeader'\n        - type: object\n          required:\n            - reason\n          properties:\n            reason:\n              type: string\n    NotifyAlarmListRebuilt:\n      allOf:\n        - $ref: '#/components/schemas/NotificationHeader'\n        - type: object\n          required:\n            - reason\n          properties:\n            reason:\n              type: string\n            alarmListAlignmentRequirement:\n              $ref: '#/components/schemas/AlarmListAlignmentRequirement'\n\n  #---- Definition of query parameters -----------------------------------------------#\n\n    AlarmAckState:\n      type: string\n      enum:\n        - ALL_ALARMS\n        - ALL_ACTIVE_ALARMS\n        - ALL_ACTIVE_AND_ACKNOWLEDGED_ALARMS\n        - ALL_ACTIVE_AND_UNACKNOWLEDGED_ALARMS\n        - ALL_CLEARED_AND_UNACKNOWLEDGED_ALARMS\n        - ALL_UNACKNOWLEDGED_ALARMS\n\n  #---- Definition of patch documents ------------------------------------------------#\n\n    MergePatchAcknowledgeAlarm:\n      description: \u003e-\n        Patch document acknowledging or unacknowledging a single alarm. For\n        acknowleding an alarm the value of ackState is ACKNOWLEDGED, for unacknowleding\n        an alarm the value of ackState is UNACKNOWLEDGED.\n      type: object\n      required:\n        - ackUserId\n        - ackState\n      properties:\n        ackUserId:\n          type: string\n        ackSystemId:\n          type: string\n        ackState:\n          $ref: '#/components/schemas/AckState'\n    MergePatchClearAlarm:\n      description: Patch document for clearing a single alarm\n      type: object\n      required:\n        - clearUserId\n        - perceivedSeverity\n      properties:\n        clearUserId:\n          type: string\n        clearSystemId:\n          type: string\n        perceivedSeverity:\n          type: string\n          enum:\n            - CLEARED\n\n  #---- Definition of method responses -----------------------------------------------#\n\n    FailedAlarm:\n      type: object\n      required:\n        - alarmId\n        - failureReason\n      properties:\n        alarmId:\n          $ref: '#/components/schemas/AlarmId'\n        failureReason:\n          type: string\n\n  #---- Definition of resources ------------------------------------------------------#\n\n    AlarmCount:\n      type: object\n      required:\n        - criticalCount\n        - majorCount\n        - minorCount\n        - warningCount\n        - indeterminateCount\n        - clearedCount\n      properties:\n        criticalCount:\n          type: integer\n        majorCount:\n          type: integer\n        minorCount:\n          type: integer\n        warningCount:\n          type: integer\n        indeterminateCount:\n          type: integer\n        clearedCount:\n          type: integer\n    Comment:\n      type: object\n      properties:\n        commentTime:\n          $ref: '#/components/schemas/DateTime'\n        commentUserId:\n          type: string\n        commentSystemId:\n          type: string\n        commentText:\n          type: string\n    Comments:\n      description: \u003e-\n        Collection of comments. The comment identifiers are allocated by the\n        MnS producer and used as key in the map.\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/Comment'\n    Subscription:\n      type: object\n      properties:\n        consumerReference:\n          $ref: '#/components/schemas/Uri'\n        timeTick:\n          $ref: '#/components/schemas/Long'\n        filter:\n          $ref: '#/components/schemas/Filter'\n",
			"canonicalURL": "/github.com/onap/oom@fa07f1fcd002d5074e8060715e5806fa63051095/-/blob/kubernetes/dcaegen2-services/resources/external/schemas/sa88-rel16/faultMnS.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/onap/oom/blob/fa07f1fcd002d5074e8060715e5806fa63051095/kubernetes/dcaegen2-services/resources/external/schemas/sa88-rel16/faultMnS.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/alarms/{alarmId}\": patch: requestBody: contents: unsupported content types: [application/merge-patch+json]",
	"NotImplemented": [
		"complex anyOf",
		"unsupported content types"
	]
}