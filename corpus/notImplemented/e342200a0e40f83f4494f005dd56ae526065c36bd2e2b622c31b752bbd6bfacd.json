{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/factset/enterprise-sdk"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "code/java/UniversalScreening/v2/api/openapi.yaml",
			"byteSize": 35251,
			"content": "openapi: 3.0.2\ninfo:\n  description: |-\n    Through the Universal Screening API, you can access the power of FactSet's Universal Screening Application.\n    Calculate and return the results of your saved Universal Screens.\n  title: Universal Screening API\n  version: 1.0.2\nexternalDocs:\n  description: Read more about STACH 2.0's column organized schema\n  url: https://factset.github.io/stachschema/#/v2/ColumnOrganized\nservers:\n- url: https://api.factset.com/universal-screening\nsecurity:\n- FactSetApiKey: []\n- FactSetOAuth2: []\npaths:\n  /v2/job/archive:\n    post:\n      description: Begins archive of screen to OFDB. Subject to rate limiting by serial.\n      operationId: SubmitArchiveOFDB\n      requestBody:\n        $ref: '#/components/requestBodies/submitArchiveOFDBRequest'\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceStatusResponse'\n          description: Successful archive OFDB submission response, returns the job\n            ID unique to this archive and the URL in the Location header to check\n            the status of the archive.\n          headers:\n            Location:\n              description: Relative location to poll for archive status\n              explode: false\n              schema:\n                type: string\n              style: simple\n            X-FactSet-Api-Units-Limit:\n              description: Maximum number of jobs.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            X-FactSet-Api-Units-Remaining:\n              description: Number of available jobs.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            RateLimit-Limit:\n              description: Number of weekly jobs available.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            RateLimit-Remaining:\n              description: Number of remaining weekly jobs.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            RateLimit-Reset:\n              description: Time, in seconds, until weekly limit resets.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: Invalid request body.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: Invalid or missing authentication.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: Too many requests.\n          headers:\n            X-FactSet-Api-Units-Limit:\n              description: Maximum number of jobs.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            X-FactSet-Api-Units-Remaining:\n              description: Number of available jobs.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"500\":\n          description: Internal Server Error\n          headers:\n            Request-Key:\n              description: Provide this key when reporting this issue\n              explode: false\n              schema:\n                type: string\n              style: simple\n      tags:\n      - Screening Operations\n      x-contentType: application/json\n      x-accepts: application/json\n  /v2/job/calculate:\n    post:\n      description: Begins calculation of screen. Subject to rate limiting by serial.\n      operationId: SubmitCalculate\n      requestBody:\n        $ref: '#/components/requestBodies/submitCalcRequest'\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceStatusResponse'\n          description: Successful calculation submission response, returns the job\n            ID unique to this calculation and the URL in the Location header to check\n            the status of the calculation.\n          headers:\n            Location:\n              description: Relative location to poll for calculation status\n              explode: false\n              schema:\n                type: string\n              style: simple\n            X-FactSet-Api-Units-Limit:\n              description: Maximum number of jobs.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            X-FactSet-Api-Units-Remaining:\n              description: Number of available jobs.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            RateLimit-Limit:\n              description: Number of weekly jobs available.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            RateLimit-Remaining:\n              description: Number of remaining weekly jobs.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            RateLimit-Reset:\n              description: Time, in seconds, until weekly limit resets.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: Invalid request body.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: Invalid or missing authentication.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: Too many requests.\n          headers:\n            X-FactSet-Api-Units-Limit:\n              description: Maximum number of jobs.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            X-FactSet-Api-Units-Remaining:\n              description: Number of available jobs.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"500\":\n          description: Internal Server Error\n          headers:\n            Request-Key:\n              description: Provide this key when reporting this issue\n              explode: false\n              schema:\n                type: string\n              style: simple\n      tags:\n      - Screening Operations\n      x-contentType: application/json\n      x-accepts: application/json\n  /v2/job/{id}/status:\n    get:\n      description: Polls the job with a given screen ID and returns job status\n      operationId: PollCalculate\n      parameters:\n      - description: Unique identifier for a screen calculation job\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceStatusResponse'\n          description: Job completed\n          headers:\n            Location:\n              description: Relative location to pick up screen results, calculate\n                route only\n              explode: false\n              schema:\n                type: string\n              style: simple\n            X-FactSet-Api-PickUp-Progress:\n              description: Screen progress\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceStatusResponse'\n          description: Calculation job still in progress\n          headers:\n            Location:\n              description: Relative location to poll for status\n              explode: false\n              schema:\n                type: string\n              style: simple\n            X-FactSet-Api-PickUp-Progress:\n              description: Screen progress\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: Invalid or missing authentication.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: Job ID not found.\n        \"410\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: The results have been fetched for this ID.\n        \"500\":\n          description: Internal Server Error\n          headers:\n            Request-Key:\n              description: Provide this key when reporting this issue\n              explode: false\n              schema:\n                type: string\n              style: simple\n      tags:\n      - Screening Operations\n      x-accepts: application/json\n  /v2/jobs:\n    delete:\n      description: Delete all active jobs started by the requester's username-serial\n      operationId: DeleteAllActiveJobs\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: Invalid or missing authentication.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: Job ID not found.\n        \"500\":\n          description: Internal Server Error\n          headers:\n            Request-Key:\n              description: Provide this key when reporting this issue\n              explode: false\n              schema:\n                type: string\n              style: simple\n      tags:\n      - Job Management\n      x-accepts: application/json\n    get:\n      description: Retrieve list of all active job ids started by requester's username-serial\n      operationId: GetAllActiveJobs\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ActiveJobsData'\n          description: ActiveJobsResponse contains id of all of a user's active jobs\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: Invalid or missing authentication.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: Job ID not found.\n        \"500\":\n          description: Internal Server Error\n          headers:\n            Request-Key:\n              description: Provide this key when reporting this issue\n              explode: false\n              schema:\n                type: string\n              style: simple\n      tags:\n      - Job Management\n      x-accepts: application/json\n  /v2/job/{id}:\n    delete:\n      description: Delete a specified job started by the requester's username-serial\n      operationId: DeleteActiveJob\n      parameters:\n      - description: Unique identifier for a screen calculation job\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: No content\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: Invalid or missing authentication.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: Job ID not found.\n        \"500\":\n          description: Internal Server Error\n          headers:\n            Request-Key:\n              description: Provide this key when reporting this issue\n              explode: false\n              schema:\n                type: string\n              style: simple\n      tags:\n      - Job Management\n      x-accepts: application/json\n    get:\n      description: Retrieve results of complete screen calculation. Screens with more\n        than 10,000 rows will be returned in a paginated format. Results may be fetched\n        in pages of 1,000 - 100,000 results with 10,000 being the default page size.\n      operationId: GetCalculateResults\n      parameters:\n      - description: Unique identifier for a screen calculation job\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Page size limit (minumum 1000, default 10,000, maximum 100,000)\n        explode: true\n        in: query\n        name: _paginationLimit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Paging index (Initial request may omit)\n        explode: true\n        in: query\n        name: _paginationCursor\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedCalculationResponse'\n          description: Paginated Screen Results and Metadata\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceStatusResponse'\n          description: Calculation job still in progress\n          headers:\n            Location:\n              description: Relative location to poll for status\n              explode: false\n              schema:\n                type: string\n              style: simple\n            X-FactSet-Api-PickUp-Progress:\n              description: Screen progress\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: The requested screen could not be opened.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: Invalid or missing authentication.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: Job ID not found.\n        \"410\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorArray'\n          description: The results have been fetched for this ID.\n        \"500\":\n          description: Internal Server Error\n          headers:\n            Request-Key:\n              description: Provide this key when reporting this issue\n              explode: false\n              schema:\n                type: string\n              style: simple\n      tags:\n      - Screening Operations\n      x-accepts: application/json\ncomponents:\n  parameters:\n    ArchiveID:\n      description: Unique identifier for a screen archive to OFDB job\n      explode: false\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n      style: simple\n    PaginationCursor:\n      description: Paging index (Initial request may omit)\n      explode: true\n      in: query\n      name: _paginationCursor\n      required: false\n      schema:\n        type: integer\n      style: form\n    PaginationLimit:\n      description: Page size limit (minumum 1000, default 10,000, maximum 100,000)\n      explode: true\n      in: query\n      name: _paginationLimit\n      required: false\n      schema:\n        type: integer\n      style: form\n    ScreenCalcID:\n      description: Unique identifier for a screen calculation job\n      explode: false\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n      style: simple\n  requestBodies:\n    submitArchiveOFDBRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ScreenArchiveOFDBParameters'\n      description: Data required for an archive to OFDB request\n    submitCalcRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ScreenCalcParameters'\n      description: Data required for a calculation request\n  responses:\n    ActiveJobsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ActiveJobsData'\n      description: ActiveJobsResponse contains id of all of a user's active jobs\n    ArchiveOFDBInProgressResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResourceStatusResponse'\n      description: Archive job still in progress\n      headers:\n        Location:\n          description: Relative location to poll for archive status\n          explode: false\n          schema:\n            type: string\n          style: simple\n        X-FactSet-Api-PickUp-Progress:\n          description: Screen archive progress\n          explode: false\n          schema:\n            type: string\n          style: simple\n    ArchiveOFDBSuccessResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResourceStatusResponse'\n      description: Archive job completed\n      headers:\n        X-FactSet-Api-PickUp-Progress:\n          description: Screen progress\n          explode: false\n          schema:\n            type: string\n          style: simple\n    CalculateInProgressResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResourceStatusResponse'\n      description: Calculation job still in progress\n      headers:\n        Location:\n          description: Relative location to poll for status\n          explode: false\n          schema:\n            type: string\n          style: simple\n        X-FactSet-Api-PickUp-Progress:\n          description: Screen progress\n          explode: false\n          schema:\n            type: string\n          style: simple\n    CalculateSuccessResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResourceStatusResponse'\n      description: Job completed\n      headers:\n        Location:\n          description: Relative location to pick up screen results, calculate route\n            only\n          explode: false\n          schema:\n            type: string\n          style: simple\n        X-FactSet-Api-PickUp-Progress:\n          description: Screen progress\n          explode: false\n          schema:\n            type: string\n          style: simple\n    PaginatedCalculateResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PaginatedCalculationResponse'\n      description: Paginated Screen Results and Metadata\n    Error400InvalidRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorArray'\n      description: Invalid request body.\n    Error400ScreenOpen:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorArray'\n      description: The requested screen could not be opened.\n    Error401Response:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorArray'\n      description: Invalid or missing authentication.\n    Error404Response:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorArray'\n      description: Job ID not found.\n    Error410Response:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorArray'\n      description: The results have been fetched for this ID.\n    Error429Response:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorArray'\n      description: Too many requests.\n      headers:\n        X-FactSet-Api-Units-Limit:\n          description: Maximum number of jobs.\n          explode: false\n          schema:\n            type: string\n          style: simple\n        X-FactSet-Api-Units-Remaining:\n          description: Number of available jobs.\n          explode: false\n          schema:\n            type: string\n          style: simple\n    Generic500ErrorResponse:\n      description: Internal Server Error\n      headers:\n        Request-Key:\n          description: Provide this key when reporting this issue\n          explode: false\n          schema:\n            type: string\n          style: simple\n    SubmitArchiveOFDBResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResourceStatusResponse'\n      description: Successful archive OFDB submission response, returns the job ID\n        unique to this archive and the URL in the Location header to check the status\n        of the archive.\n      headers:\n        Location:\n          description: Relative location to poll for archive status\n          explode: false\n          schema:\n            type: string\n          style: simple\n        X-FactSet-Api-Units-Limit:\n          description: Maximum number of jobs.\n          explode: false\n          schema:\n            type: string\n          style: simple\n        X-FactSet-Api-Units-Remaining:\n          description: Number of available jobs.\n          explode: false\n          schema:\n            type: string\n          style: simple\n        RateLimit-Limit:\n          description: Number of weekly jobs available.\n          explode: false\n          schema:\n            type: string\n          style: simple\n        RateLimit-Remaining:\n          description: Number of remaining weekly jobs.\n          explode: false\n          schema:\n            type: string\n          style: simple\n        RateLimit-Reset:\n          description: Time, in seconds, until weekly limit resets.\n          explode: false\n          schema:\n            type: string\n          style: simple\n    SubmitCalculateResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResourceStatusResponse'\n      description: Successful calculation submission response, returns the job ID\n        unique to this calculation and the URL in the Location header to check the\n        status of the calculation.\n      headers:\n        Location:\n          description: Relative location to poll for calculation status\n          explode: false\n          schema:\n            type: string\n          style: simple\n        X-FactSet-Api-Units-Limit:\n          description: Maximum number of jobs.\n          explode: false\n          schema:\n            type: string\n          style: simple\n        X-FactSet-Api-Units-Remaining:\n          description: Number of available jobs.\n          explode: false\n          schema:\n            type: string\n          style: simple\n        RateLimit-Limit:\n          description: Number of weekly jobs available.\n          explode: false\n          schema:\n            type: string\n          style: simple\n        RateLimit-Remaining:\n          description: Number of remaining weekly jobs.\n          explode: false\n          schema:\n            type: string\n          style: simple\n        RateLimit-Reset:\n          description: Time, in seconds, until weekly limit resets.\n          explode: false\n          schema:\n            type: string\n          style: simple\n  schemas:\n    ActiveJobsData:\n      description: Object containing active jobs ids\n      example:\n        data:\n          id:\n          - id\n          - id\n      properties:\n        data:\n          $ref: '#/components/schemas/ActiveJobIDs'\n    ActiveJobIDs:\n      description: Array of active jobs ids associated with the account\n      example:\n        id:\n        - id\n        - id\n      properties:\n        id:\n          items:\n            type: string\n          type: array\n      type: object\n    ErrorArray:\n      description: An array of errors\n      properties:\n        errors:\n          description: Array of Error Objects\n          items:\n            $ref: '#/components/schemas/ErrorObject'\n          type: array\n      type: object\n    ErrorCode:\n      description: Factset API specific error codes\n      enum:\n      - notAuthenticated\n      - notAuthorized\n      - notFound\n      - endpointNotFound\n      - parameterError\n      - genericServerError\n      - resourceGone\n      - quantityLimitsExceeded\n      - universal_screening_parameterError\n      - universal_screening_parameterWarning\n      type: string\n    ErrorObject:\n      description: Associated Error Objects\n      example:\n        id: id\n        source:\n          parameter: parameter\n        title: title\n      properties:\n        code:\n          $ref: '#/components/schemas/ErrorCode'\n        id:\n          description: A unique ID for the occurrence of the error. It is advised\n            to log this code and include it if you contact FactSet support desk.\n          type: string\n        source:\n          $ref: '#/components/schemas/ErrorObjectSource'\n        title:\n          description: a description of the error\n          type: string\n      type: object\n    ErrorObjectSource:\n      description: For errors and warnings found in screens, contains the paramID\n        the error/warning belongs to\n      example:\n        parameter: parameter\n      properties:\n        parameter:\n          type: string\n      type: object\n    PaginationResponse:\n      example:\n        next: next\n        total: 6\n        prev: 0\n        isEstimatedTotal: true\n      properties:\n        isEstimatedTotal:\n          description: Denotes if the 'total' property is an estimation\n          type: boolean\n        next:\n          description: Next cursor to be sent, will be null when there are no more\n            results\n          nullable: true\n          type: string\n        prev:\n          description: Previous cursor, currently not supported\n          nullable: true\n          type: integer\n        total:\n          description: Total number of rows in the screen\n          type: integer\n      type: object\n    ResourceStatusResponse:\n      description: ResourceStatusResponse contains information regarding the status\n        of a calculation job\n      example:\n        data:\n          id: id\n          error:\n            id: id\n            source:\n              parameter: parameter\n            title: title\n          status: status\n      properties:\n        data:\n          $ref: '#/components/schemas/ResourceStatusResponse_data'\n      type: object\n    ResultsMetadata:\n      description: Metadata containing results pagination information\n      example:\n        pagination:\n          next: next\n          total: 6\n          prev: 0\n          isEstimatedTotal: true\n      properties:\n        pagination:\n          $ref: '#/components/schemas/PaginationResponse'\n      type: object\n    StachPackage:\n      description: Stach v2 column oriented paginated screen results\n      type: object\n    PaginatedCalculationResponse:\n      description: Paged results from screen calculation\n      example:\n        data: '{}'\n        meta:\n          pagination:\n            next: next\n            total: 6\n            prev: 0\n            isEstimatedTotal: true\n      properties:\n        meta:\n          $ref: '#/components/schemas/ResultsMetadata'\n        data:\n          description: Stach v2 column oriented paginated screen results\n          type: object\n      type: object\n    ScreenArchiveOFDBParameters:\n      example:\n        data:\n          globalVariablesMap:\n            key: globalVariablesMap\n          archiveOptions:\n            unsplitHistory: true\n            timeSeries: true\n            archiveType: archiveType\n            filename: filename\n            overwriteData: true\n            archiveDate: archiveDate\n            quickColumns: quickColumns\n            useReportOrder: true\n            autoSymbolUpdates: true\n            existed: true\n            symbolType: symbolType\n          legacyUniverseType: legacyUniverseType\n          screenName: screenName\n          backtestDate: backtestDate\n      properties:\n        data:\n          $ref: '#/components/schemas/ScreenArchiveOFDBParameters_data'\n      required:\n      - data\n      type: object\n    ScreenCalcParameters:\n      example:\n        data:\n          globalVariablesMap:\n            key: globalVariablesMap\n          legacyUniverseType: legacyUniverseType\n          screenName: screenName\n          backtestDate: backtestDate\n      properties:\n        data:\n          $ref: '#/components/schemas/ScreenCalcParameters_data'\n      required:\n      - data\n      type: object\n    ResourceStatusResponse_data:\n      example:\n        id: id\n        error:\n          id: id\n          source:\n            parameter: parameter\n          title: title\n        status: status\n      properties:\n        error:\n          $ref: '#/components/schemas/ErrorObject'\n        id:\n          description: ID of the submitted calculation job\n          type: string\n        status:\n          description: Current status of the calculation job\n          type: string\n      type: object\n    ScreenArchiveOFDBParameters_data_archiveOptions:\n      example:\n        unsplitHistory: true\n        timeSeries: true\n        archiveType: archiveType\n        filename: filename\n        overwriteData: true\n        archiveDate: archiveDate\n        quickColumns: quickColumns\n        useReportOrder: true\n        autoSymbolUpdates: true\n        existed: true\n        symbolType: symbolType\n      properties:\n        archiveDate:\n          description: YYYYMMDD date to archive to\n          type: string\n        archiveType:\n          description: Type of archive, i.e. ofdbSymbols, ofdbNts, ofdbQuickNts, ofdb\n          type: string\n        autoSymbolUpdates:\n          description: Flag to enable automatic symbol updates\n          type: boolean\n        existed:\n          description: Indicates that the output file exists\n          type: boolean\n        filename:\n          description: OFDB Filename to archive to\n          type: string\n        overwriteData:\n          description: If true and target file (or date for a time series file) exists,\n            it will be cleared before archiving\n          type: boolean\n        quickColumns:\n          description: 'Space delimited list of parameter references to be archived,\n            which are UPPERCASED with the #P. omitted'\n          type: string\n        symbolType:\n          description: The symbol type for archiving\n          type: string\n        timeSeries:\n          description: If true, archive 3D time series OFDB\n          type: boolean\n        unsplitHistory:\n          description: Flag indicating split adjust\n          type: boolean\n        useReportOrder:\n          description: If true, archive in report order\n          type: boolean\n      required:\n      - archiveType\n      - filename\n      type: object\n    ScreenArchiveOFDBParameters_data:\n      description: Object containing archive request payload\n      example:\n        globalVariablesMap:\n          key: globalVariablesMap\n        archiveOptions:\n          unsplitHistory: true\n          timeSeries: true\n          archiveType: archiveType\n          filename: filename\n          overwriteData: true\n          archiveDate: archiveDate\n          quickColumns: quickColumns\n          useReportOrder: true\n          autoSymbolUpdates: true\n          existed: true\n          symbolType: symbolType\n        legacyUniverseType: legacyUniverseType\n        screenName: screenName\n        backtestDate: backtestDate\n      properties:\n        archiveOptions:\n          $ref: '#/components/schemas/ScreenArchiveOFDBParameters_data_archiveOptions'\n        backtestDate:\n          description: |-\n            Specifies the backtest date used when running the screen, replacing\n              the backtest date saved in the screen, can be written in YYYYMMDD,\n              MM/DD/YYYY or relative (0, -1, 0/-1/0) format.\n            Requires addtional access to use.\n          type: string\n        globalVariablesMap:\n          additionalProperties:\n            type: string\n          description: |-\n            Modifies existing global variables for this calculation request, temporarily adds them if they do not already exist\n            Variable names can only contain the characters A-Z (case insensitive). Variable values must be non-empty.\n          type: object\n        legacyUniverseType:\n          description: Universe type to open legacy screen with. Must be one of \"equity\",\n            \"debt\", or \"fund\". Defaults to \"equity\".\n          type: string\n        screenName:\n          description: File path to a valid screen\n          type: string\n      required:\n      - screenName\n      type: object\n    ScreenCalcParameters_data:\n      description: Object containing screen data\n      example:\n        globalVariablesMap:\n          key: globalVariablesMap\n        legacyUniverseType: legacyUniverseType\n        screenName: screenName\n        backtestDate: backtestDate\n      properties:\n        backtestDate:\n          description: Specifies the backtest date used when running the screen, replacing\n            the backtest date saved in the screen, can be written in YYYYMMDD, MM/DD/YYYY\n            or relative (0, -1, 0/-1/0) format. Requires addtional access to use.\n          type: string\n        globalVariablesMap:\n          additionalProperties:\n            type: string\n          description: |-\n            Modifies existing global variables for this calculation request, temporarily adds them if they do not already exist\n            Variable names can only contain the characters A-Z (case insensitive). Variable values must be non-empty.\n          type: object\n        legacyUniverseType:\n          description: Universe type to open legacy screen with. Must be one of \"equity\",\n            \"debt\", or \"fund\". Defaults to \"equity\".\n          type: string\n        screenName:\n          description: File path to a valid screen\n          type: string\n      required:\n      - screenName\n      type: object\n  securitySchemes:\n    FactSetOAuth2:\n      flows:\n        clientCredentials:\n          scopes: {}\n          tokenUrl: https://auth.factset.com/as/token.oauth2\n      type: oauth2\n    FactSetApiKey:\n      scheme: basic\n      type: http\n\n",
			"canonicalURL": "/github.com/factset/enterprise-sdk@dcf75a02daedc726c313912a349d2863114bc92c/-/blob/code/java/UniversalScreening/v2/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/factset/enterprise-sdk/blob/dcf75a02daedc726c313912a349d2863114bc92c/code/java/UniversalScreening/v2/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v2/job/archive\": post: security: security \"FactSetOAuth2\" (index 1): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}